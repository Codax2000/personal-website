(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const u of o)if(u.type==="childList")for(const l of u.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function n(o){const u={};return o.integrity&&(u.integrity=o.integrity),o.referrerPolicy&&(u.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?u.credentials="include":o.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function i(o){if(o.ep)return;o.ep=!0;const u=n(o);fetch(o.href,u)}})();function E8(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var Ny={exports:{}},x9={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var $R;function Ut1(){if($R)return x9;$R=1;var t=Symbol.for("react.transitional.element"),e=Symbol.for("react.fragment");function n(i,o,u){var l=null;if(u!==void 0&&(l=""+u),o.key!==void 0&&(l=""+o.key),"key"in o){u={};for(var a in o)a!=="key"&&(u[a]=o[a])}else u=o;return o=u.ref,{$$typeof:t,type:i,key:l,ref:o!==void 0?o:null,props:u}}return x9.Fragment=e,x9.jsx=n,x9.jsxs=n,x9}var MR;function qt1(){return MR||(MR=1,Ny.exports=Ut1()),Ny.exports}var $=qt1(),Ry={exports:{}},Z1={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var NR;function Ht1(){if(NR)return Z1;NR=1;var t=Symbol.for("react.transitional.element"),e=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),u=Symbol.for("react.consumer"),l=Symbol.for("react.context"),a=Symbol.for("react.forward_ref"),s=Symbol.for("react.suspense"),c=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),g=Symbol.iterator;function p(z){return z===null||typeof z!="object"?null:(z=g&&z[g]||z["@@iterator"],typeof z=="function"?z:null)}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v=Object.assign,b={};function x(z,G,Q){this.props=z,this.context=G,this.refs=b,this.updater=Q||m}x.prototype.isReactComponent={},x.prototype.setState=function(z,G){if(typeof z!="object"&&typeof z!="function"&&z!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,z,G,"setState")},x.prototype.forceUpdate=function(z){this.updater.enqueueForceUpdate(this,z,"forceUpdate")};function w(){}w.prototype=x.prototype;function S(z,G,Q){this.props=z,this.context=G,this.refs=b,this.updater=Q||m}var A=S.prototype=new w;A.constructor=S,v(A,x.prototype),A.isPureReactComponent=!0;var C=Array.isArray,k={H:null,A:null,T:null,S:null,V:null},M=Object.prototype.hasOwnProperty;function T(z,G,Q,n1,l1,d1){return Q=d1.ref,{$$typeof:t,type:z,key:G,ref:Q!==void 0?Q:null,props:d1}}function D(z,G){return T(z.type,G,void 0,void 0,void 0,z.props)}function I(z){return typeof z=="object"&&z!==null&&z.$$typeof===t}function U(z){var G={"=":"=0",":":"=2"};return"$"+z.replace(/[=:]/g,function(Q){return G[Q]})}var B=/\/+/g;function V(z,G){return typeof z=="object"&&z!==null&&z.key!=null?U(""+z.key):G.toString(36)}function W(){}function O(z){switch(z.status){case"fulfilled":return z.value;case"rejected":throw z.reason;default:switch(typeof z.status=="string"?z.then(W,W):(z.status="pending",z.then(function(G){z.status==="pending"&&(z.status="fulfilled",z.value=G)},function(G){z.status==="pending"&&(z.status="rejected",z.reason=G)})),z.status){case"fulfilled":return z.value;case"rejected":throw z.reason}}throw z}function j(z,G,Q,n1,l1){var d1=typeof z;(d1==="undefined"||d1==="boolean")&&(z=null);var x1=!1;if(z===null)x1=!0;else switch(d1){case"bigint":case"string":case"number":x1=!0;break;case"object":switch(z.$$typeof){case t:case e:x1=!0;break;case f:return x1=z._init,j(x1(z._payload),G,Q,n1,l1)}}if(x1)return l1=l1(z),x1=n1===""?"."+V(z,0):n1,C(l1)?(Q="",x1!=null&&(Q=x1.replace(B,"$&/")+"/"),j(l1,G,Q,"",function(v1){return v1})):l1!=null&&(I(l1)&&(l1=D(l1,Q+(l1.key==null||z&&z.key===l1.key?"":(""+l1.key).replace(B,"$&/")+"/")+x1)),G.push(l1)),1;x1=0;var j1=n1===""?".":n1+":";if(C(z))for(var M1=0;M1<z.length;M1++)n1=z[M1],d1=j1+V(n1,M1),x1+=j(n1,G,Q,d1,l1);else if(M1=p(z),typeof M1=="function")for(z=M1.call(z),M1=0;!(n1=z.next()).done;)n1=n1.value,d1=j1+V(n1,M1++),x1+=j(n1,G,Q,d1,l1);else if(d1==="object"){if(typeof z.then=="function")return j(O(z),G,Q,n1,l1);throw G=String(z),Error("Objects are not valid as a React child (found: "+(G==="[object Object]"?"object with keys {"+Object.keys(z).join(", ")+"}":G)+"). If you meant to render a collection of children, use an array instead.")}return x1}function R(z,G,Q){if(z==null)return z;var n1=[],l1=0;return j(z,n1,"","",function(d1){return G.call(Q,d1,l1++)}),n1}function P(z){if(z._status===-1){var G=z._result;G=G(),G.then(function(Q){(z._status===0||z._status===-1)&&(z._status=1,z._result=Q)},function(Q){(z._status===0||z._status===-1)&&(z._status=2,z._result=Q)}),z._status===-1&&(z._status=0,z._result=G)}if(z._status===1)return z._result.default;throw z._result}var q=typeof reportError=="function"?reportError:function(z){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var G=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof z=="object"&&z!==null&&typeof z.message=="string"?String(z.message):String(z),error:z});if(!window.dispatchEvent(G))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",z);return}console.error(z)};function Y(){}return Z1.Children={map:R,forEach:function(z,G,Q){R(z,function(){G.apply(this,arguments)},Q)},count:function(z){var G=0;return R(z,function(){G++}),G},toArray:function(z){return R(z,function(G){return G})||[]},only:function(z){if(!I(z))throw Error("React.Children.only expected to receive a single React element child.");return z}},Z1.Component=x,Z1.Fragment=n,Z1.Profiler=o,Z1.PureComponent=S,Z1.StrictMode=i,Z1.Suspense=s,Z1.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=k,Z1.__COMPILER_RUNTIME={__proto__:null,c:function(z){return k.H.useMemoCache(z)}},Z1.cache=function(z){return function(){return z.apply(null,arguments)}},Z1.cloneElement=function(z,G,Q){if(z==null)throw Error("The argument must be a React element, but you passed "+z+".");var n1=v({},z.props),l1=z.key,d1=void 0;if(G!=null)for(x1 in G.ref!==void 0&&(d1=void 0),G.key!==void 0&&(l1=""+G.key),G)!M.call(G,x1)||x1==="key"||x1==="__self"||x1==="__source"||x1==="ref"&&G.ref===void 0||(n1[x1]=G[x1]);var x1=arguments.length-2;if(x1===1)n1.children=Q;else if(1<x1){for(var j1=Array(x1),M1=0;M1<x1;M1++)j1[M1]=arguments[M1+2];n1.children=j1}return T(z.type,l1,void 0,void 0,d1,n1)},Z1.createContext=function(z){return z={$$typeof:l,_currentValue:z,_currentValue2:z,_threadCount:0,Provider:null,Consumer:null},z.Provider=z,z.Consumer={$$typeof:u,_context:z},z},Z1.createElement=function(z,G,Q){var n1,l1={},d1=null;if(G!=null)for(n1 in G.key!==void 0&&(d1=""+G.key),G)M.call(G,n1)&&n1!=="key"&&n1!=="__self"&&n1!=="__source"&&(l1[n1]=G[n1]);var x1=arguments.length-2;if(x1===1)l1.children=Q;else if(1<x1){for(var j1=Array(x1),M1=0;M1<x1;M1++)j1[M1]=arguments[M1+2];l1.children=j1}if(z&&z.defaultProps)for(n1 in x1=z.defaultProps,x1)l1[n1]===void 0&&(l1[n1]=x1[n1]);return T(z,d1,void 0,void 0,null,l1)},Z1.createRef=function(){return{current:null}},Z1.forwardRef=function(z){return{$$typeof:a,render:z}},Z1.isValidElement=I,Z1.lazy=function(z){return{$$typeof:f,_payload:{_status:-1,_result:z},_init:P}},Z1.memo=function(z,G){return{$$typeof:c,type:z,compare:G===void 0?null:G}},Z1.startTransition=function(z){var G=k.T,Q={};k.T=Q;try{var n1=z(),l1=k.S;l1!==null&&l1(Q,n1),typeof n1=="object"&&n1!==null&&typeof n1.then=="function"&&n1.then(Y,q)}catch(d1){q(d1)}finally{k.T=G}},Z1.unstable_useCacheRefresh=function(){return k.H.useCacheRefresh()},Z1.use=function(z){return k.H.use(z)},Z1.useActionState=function(z,G,Q){return k.H.useActionState(z,G,Q)},Z1.useCallback=function(z,G){return k.H.useCallback(z,G)},Z1.useContext=function(z){return k.H.useContext(z)},Z1.useDebugValue=function(){},Z1.useDeferredValue=function(z,G){return k.H.useDeferredValue(z,G)},Z1.useEffect=function(z,G,Q){var n1=k.H;if(typeof Q=="function")throw Error("useEffect CRUD overload is not enabled in this build of React.");return n1.useEffect(z,G)},Z1.useId=function(){return k.H.useId()},Z1.useImperativeHandle=function(z,G,Q){return k.H.useImperativeHandle(z,G,Q)},Z1.useInsertionEffect=function(z,G){return k.H.useInsertionEffect(z,G)},Z1.useLayoutEffect=function(z,G){return k.H.useLayoutEffect(z,G)},Z1.useMemo=function(z,G){return k.H.useMemo(z,G)},Z1.useOptimistic=function(z,G){return k.H.useOptimistic(z,G)},Z1.useReducer=function(z,G,Q){return k.H.useReducer(z,G,Q)},Z1.useRef=function(z){return k.H.useRef(z)},Z1.useState=function(z){return k.H.useState(z)},Z1.useSyncExternalStore=function(z,G,Q){return k.H.useSyncExternalStore(z,G,Q)},Z1.useTransition=function(){return k.H.useTransition()},Z1.version="19.1.1",Z1}var RR;function Tw(){return RR||(RR=1,Ry.exports=Ht1()),Ry.exports}var F=Tw();const dn=E8(F);var Dy={exports:{}},_9={},Oy={exports:{}},Fy={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var DR;function Gt1(){return DR||(DR=1,(function(t){function e(R,P){var q=R.length;R.push(P);t:for(;0<q;){var Y=q-1>>>1,z=R[Y];if(0<o(z,P))R[Y]=P,R[q]=z,q=Y;else break t}}function n(R){return R.length===0?null:R[0]}function i(R){if(R.length===0)return null;var P=R[0],q=R.pop();if(q!==P){R[0]=q;t:for(var Y=0,z=R.length,G=z>>>1;Y<G;){var Q=2*(Y+1)-1,n1=R[Q],l1=Q+1,d1=R[l1];if(0>o(n1,q))l1<z&&0>o(d1,n1)?(R[Y]=d1,R[l1]=q,Y=l1):(R[Y]=n1,R[Q]=q,Y=Q);else if(l1<z&&0>o(d1,q))R[Y]=d1,R[l1]=q,Y=l1;else break t}}return P}function o(R,P){var q=R.sortIndex-P.sortIndex;return q!==0?q:R.id-P.id}if(t.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var u=performance;t.unstable_now=function(){return u.now()}}else{var l=Date,a=l.now();t.unstable_now=function(){return l.now()-a}}var s=[],c=[],f=1,g=null,p=3,m=!1,v=!1,b=!1,x=!1,w=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,A=typeof setImmediate<"u"?setImmediate:null;function C(R){for(var P=n(c);P!==null;){if(P.callback===null)i(c);else if(P.startTime<=R)i(c),P.sortIndex=P.expirationTime,e(s,P);else break;P=n(c)}}function k(R){if(b=!1,C(R),!v)if(n(s)!==null)v=!0,M||(M=!0,V());else{var P=n(c);P!==null&&j(k,P.startTime-R)}}var M=!1,T=-1,D=5,I=-1;function U(){return x?!0:!(t.unstable_now()-I<D)}function B(){if(x=!1,M){var R=t.unstable_now();I=R;var P=!0;try{t:{v=!1,b&&(b=!1,S(T),T=-1),m=!0;var q=p;try{e:{for(C(R),g=n(s);g!==null&&!(g.expirationTime>R&&U());){var Y=g.callback;if(typeof Y=="function"){g.callback=null,p=g.priorityLevel;var z=Y(g.expirationTime<=R);if(R=t.unstable_now(),typeof z=="function"){g.callback=z,C(R),P=!0;break e}g===n(s)&&i(s),C(R)}else i(s);g=n(s)}if(g!==null)P=!0;else{var G=n(c);G!==null&&j(k,G.startTime-R),P=!1}}break t}finally{g=null,p=q,m=!1}P=void 0}}finally{P?V():M=!1}}}var V;if(typeof A=="function")V=function(){A(B)};else if(typeof MessageChannel<"u"){var W=new MessageChannel,O=W.port2;W.port1.onmessage=B,V=function(){O.postMessage(null)}}else V=function(){w(B,0)};function j(R,P){T=w(function(){R(t.unstable_now())},P)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(R){R.callback=null},t.unstable_forceFrameRate=function(R){0>R||125<R?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<R?Math.floor(1e3/R):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_next=function(R){switch(p){case 1:case 2:case 3:var P=3;break;default:P=p}var q=p;p=P;try{return R()}finally{p=q}},t.unstable_requestPaint=function(){x=!0},t.unstable_runWithPriority=function(R,P){switch(R){case 1:case 2:case 3:case 4:case 5:break;default:R=3}var q=p;p=R;try{return P()}finally{p=q}},t.unstable_scheduleCallback=function(R,P,q){var Y=t.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?Y+q:Y):q=Y,R){case 1:var z=-1;break;case 2:z=250;break;case 5:z=1073741823;break;case 4:z=1e4;break;default:z=5e3}return z=q+z,R={id:f++,callback:P,priorityLevel:R,startTime:q,expirationTime:z,sortIndex:-1},q>Y?(R.sortIndex=q,e(c,R),n(s)===null&&R===n(c)&&(b?(S(T),T=-1):b=!0,j(k,q-Y))):(R.sortIndex=z,e(s,R),v||m||(v=!0,M||(M=!0,V()))),R},t.unstable_shouldYield=U,t.unstable_wrapCallback=function(R){var P=p;return function(){var q=p;p=P;try{return R.apply(this,arguments)}finally{p=q}}}})(Fy)),Fy}var OR;function Wt1(){return OR||(OR=1,Oy.exports=Gt1()),Oy.exports}var zy={exports:{}},Je={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var FR;function Yt1(){if(FR)return Je;FR=1;var t=Tw();function e(s){var c="https://react.dev/errors/"+s;if(1<arguments.length){c+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)c+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+s+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function n(){}var i={d:{f:n,r:function(){throw Error(e(522))},D:n,C:n,L:n,m:n,X:n,S:n,M:n},p:0,findDOMNode:null},o=Symbol.for("react.portal");function u(s,c,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:o,key:g==null?null:""+g,children:s,containerInfo:c,implementation:f}}var l=t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function a(s,c){if(s==="font")return"";if(typeof c=="string")return c==="use-credentials"?c:""}return Je.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=i,Je.createPortal=function(s,c){var f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!c||c.nodeType!==1&&c.nodeType!==9&&c.nodeType!==11)throw Error(e(299));return u(s,c,null,f)},Je.flushSync=function(s){var c=l.T,f=i.p;try{if(l.T=null,i.p=2,s)return s()}finally{l.T=c,i.p=f,i.d.f()}},Je.preconnect=function(s,c){typeof s=="string"&&(c?(c=c.crossOrigin,c=typeof c=="string"?c==="use-credentials"?c:"":void 0):c=null,i.d.C(s,c))},Je.prefetchDNS=function(s){typeof s=="string"&&i.d.D(s)},Je.preinit=function(s,c){if(typeof s=="string"&&c&&typeof c.as=="string"){var f=c.as,g=a(f,c.crossOrigin),p=typeof c.integrity=="string"?c.integrity:void 0,m=typeof c.fetchPriority=="string"?c.fetchPriority:void 0;f==="style"?i.d.S(s,typeof c.precedence=="string"?c.precedence:void 0,{crossOrigin:g,integrity:p,fetchPriority:m}):f==="script"&&i.d.X(s,{crossOrigin:g,integrity:p,fetchPriority:m,nonce:typeof c.nonce=="string"?c.nonce:void 0})}},Je.preinitModule=function(s,c){if(typeof s=="string")if(typeof c=="object"&&c!==null){if(c.as==null||c.as==="script"){var f=a(c.as,c.crossOrigin);i.d.M(s,{crossOrigin:f,integrity:typeof c.integrity=="string"?c.integrity:void 0,nonce:typeof c.nonce=="string"?c.nonce:void 0})}}else c==null&&i.d.M(s)},Je.preload=function(s,c){if(typeof s=="string"&&typeof c=="object"&&c!==null&&typeof c.as=="string"){var f=c.as,g=a(f,c.crossOrigin);i.d.L(s,f,{crossOrigin:g,integrity:typeof c.integrity=="string"?c.integrity:void 0,nonce:typeof c.nonce=="string"?c.nonce:void 0,type:typeof c.type=="string"?c.type:void 0,fetchPriority:typeof c.fetchPriority=="string"?c.fetchPriority:void 0,referrerPolicy:typeof c.referrerPolicy=="string"?c.referrerPolicy:void 0,imageSrcSet:typeof c.imageSrcSet=="string"?c.imageSrcSet:void 0,imageSizes:typeof c.imageSizes=="string"?c.imageSizes:void 0,media:typeof c.media=="string"?c.media:void 0})}},Je.preloadModule=function(s,c){if(typeof s=="string")if(c){var f=a(c.as,c.crossOrigin);i.d.m(s,{as:typeof c.as=="string"&&c.as!=="script"?c.as:void 0,crossOrigin:f,integrity:typeof c.integrity=="string"?c.integrity:void 0})}else i.d.m(s)},Je.requestFormReset=function(s){i.d.r(s)},Je.unstable_batchedUpdates=function(s,c){return s(c)},Je.useFormState=function(s,c,f){return l.H.useFormState(s,c,f)},Je.useFormStatus=function(){return l.H.useHostTransitionStatus()},Je.version="19.1.1",Je}var zR;function mP(){if(zR)return zy.exports;zR=1;function t(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}return t(),zy.exports=Yt1(),zy.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var LR;function Vt1(){if(LR)return _9;LR=1;var t=Wt1(),e=Tw(),n=mP();function i(r){var d="https://react.dev/errors/"+r;if(1<arguments.length){d+="?args[]="+encodeURIComponent(arguments[1]);for(var h=2;h<arguments.length;h++)d+="&args[]="+encodeURIComponent(arguments[h])}return"Minified React error #"+r+"; visit "+d+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(r){return!(!r||r.nodeType!==1&&r.nodeType!==9&&r.nodeType!==11)}function u(r){var d=r,h=r;if(r.alternate)for(;d.return;)d=d.return;else{r=d;do d=r,(d.flags&4098)!==0&&(h=d.return),r=d.return;while(r)}return d.tag===3?h:null}function l(r){if(r.tag===13){var d=r.memoizedState;if(d===null&&(r=r.alternate,r!==null&&(d=r.memoizedState)),d!==null)return d.dehydrated}return null}function a(r){if(u(r)!==r)throw Error(i(188))}function s(r){var d=r.alternate;if(!d){if(d=u(r),d===null)throw Error(i(188));return d!==r?null:r}for(var h=r,y=d;;){var _=h.return;if(_===null)break;var E=_.alternate;if(E===null){if(y=_.return,y!==null){h=y;continue}break}if(_.child===E.child){for(E=_.child;E;){if(E===h)return a(_),r;if(E===y)return a(_),d;E=E.sibling}throw Error(i(188))}if(h.return!==y.return)h=_,y=E;else{for(var N=!1,L=_.child;L;){if(L===h){N=!0,h=_,y=E;break}if(L===y){N=!0,y=_,h=E;break}L=L.sibling}if(!N){for(L=E.child;L;){if(L===h){N=!0,h=E,y=_;break}if(L===y){N=!0,y=E,h=_;break}L=L.sibling}if(!N)throw Error(i(189))}}if(h.alternate!==y)throw Error(i(190))}if(h.tag!==3)throw Error(i(188));return h.stateNode.current===h?r:d}function c(r){var d=r.tag;if(d===5||d===26||d===27||d===6)return r;for(r=r.child;r!==null;){if(d=c(r),d!==null)return d;r=r.sibling}return null}var f=Object.assign,g=Symbol.for("react.element"),p=Symbol.for("react.transitional.element"),m=Symbol.for("react.portal"),v=Symbol.for("react.fragment"),b=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),w=Symbol.for("react.provider"),S=Symbol.for("react.consumer"),A=Symbol.for("react.context"),C=Symbol.for("react.forward_ref"),k=Symbol.for("react.suspense"),M=Symbol.for("react.suspense_list"),T=Symbol.for("react.memo"),D=Symbol.for("react.lazy"),I=Symbol.for("react.activity"),U=Symbol.for("react.memo_cache_sentinel"),B=Symbol.iterator;function V(r){return r===null||typeof r!="object"?null:(r=B&&r[B]||r["@@iterator"],typeof r=="function"?r:null)}var W=Symbol.for("react.client.reference");function O(r){if(r==null)return null;if(typeof r=="function")return r.$$typeof===W?null:r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case v:return"Fragment";case x:return"Profiler";case b:return"StrictMode";case k:return"Suspense";case M:return"SuspenseList";case I:return"Activity"}if(typeof r=="object")switch(r.$$typeof){case m:return"Portal";case A:return(r.displayName||"Context")+".Provider";case S:return(r._context.displayName||"Context")+".Consumer";case C:var d=r.render;return r=r.displayName,r||(r=d.displayName||d.name||"",r=r!==""?"ForwardRef("+r+")":"ForwardRef"),r;case T:return d=r.displayName||null,d!==null?d:O(r.type)||"Memo";case D:d=r._payload,r=r._init;try{return O(r(d))}catch{}}return null}var j=Array.isArray,R=e.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,P=n.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,q={pending:!1,data:null,method:null,action:null},Y=[],z=-1;function G(r){return{current:r}}function Q(r){0>z||(r.current=Y[z],Y[z]=null,z--)}function n1(r,d){z++,Y[z]=r.current,r.current=d}var l1=G(null),d1=G(null),x1=G(null),j1=G(null);function M1(r,d){switch(n1(x1,d),n1(d1,r),n1(l1,null),d.nodeType){case 9:case 11:r=(r=d.documentElement)&&(r=r.namespaceURI)?iR(r):0;break;default:if(r=d.tagName,d=d.namespaceURI)d=iR(d),r=oR(d,r);else switch(r){case"svg":r=1;break;case"math":r=2;break;default:r=0}}Q(l1),n1(l1,r)}function v1(){Q(l1),Q(d1),Q(x1)}function D1(r){r.memoizedState!==null&&n1(j1,r);var d=l1.current,h=oR(d,r.type);d!==h&&(n1(d1,r),n1(l1,h))}function B1(r){d1.current===r&&(Q(l1),Q(d1)),j1.current===r&&(Q(j1),p9._currentValue=q)}var f1=Object.prototype.hasOwnProperty,lt=t.unstable_scheduleCallback,X1=t.unstable_cancelCallback,Y1=t.unstable_shouldYield,Ft=t.unstable_requestPaint,C1=t.unstable_now,zt=t.unstable_getCurrentPriorityLevel,X3=t.unstable_ImmediatePriority,ge=t.unstable_UserBlockingPriority,Gi=t.unstable_NormalPriority,k7=t.unstable_LowPriority,wa=t.unstable_IdlePriority,Ea=t.log,T7=t.unstable_setDisableYieldValue,p4=null,Ke=null;function g3(r){if(typeof Ea=="function"&&T7(r),Ke&&typeof Ke.setStrictMode=="function")try{Ke.setStrictMode(p4,r)}catch{}}var a2=Math.clz32?Math.clz32:TJ,CJ=Math.log,kJ=Math.LN2;function TJ(r){return r>>>=0,r===0?32:31-(CJ(r)/kJ|0)|0}var $7=256,M7=4194304;function Hu(r){var d=r&42;if(d!==0)return d;switch(r&-r){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r&4194048;case 4194304:case 8388608:case 16777216:case 33554432:return r&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return r}}function N7(r,d,h){var y=r.pendingLanes;if(y===0)return 0;var _=0,E=r.suspendedLanes,N=r.pingedLanes;r=r.warmLanes;var L=y&134217727;return L!==0?(y=L&~E,y!==0?_=Hu(y):(N&=L,N!==0?_=Hu(N):h||(h=L&~r,h!==0&&(_=Hu(h))))):(L=y&~E,L!==0?_=Hu(L):N!==0?_=Hu(N):h||(h=y&~r,h!==0&&(_=Hu(h)))),_===0?0:d!==0&&d!==_&&(d&E)===0&&(E=_&-_,h=d&-d,E>=h||E===32&&(h&4194048)!==0)?d:_}function Sa(r,d){return(r.pendingLanes&~(r.suspendedLanes&~r.pingedLanes)&d)===0}function $J(r,d){switch(r){case 1:case 2:case 4:case 8:case 64:return d+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return d+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function IT(){var r=$7;return $7<<=1,($7&4194048)===0&&($7=256),r}function BT(){var r=M7;return M7<<=1,(M7&62914560)===0&&(M7=4194304),r}function xp(r){for(var d=[],h=0;31>h;h++)d.push(r);return d}function Aa(r,d){r.pendingLanes|=d,d!==268435456&&(r.suspendedLanes=0,r.pingedLanes=0,r.warmLanes=0)}function MJ(r,d,h,y,_,E){var N=r.pendingLanes;r.pendingLanes=h,r.suspendedLanes=0,r.pingedLanes=0,r.warmLanes=0,r.expiredLanes&=h,r.entangledLanes&=h,r.errorRecoveryDisabledLanes&=h,r.shellSuspendCounter=0;var L=r.entanglements,H=r.expirationTimes,J=r.hiddenUpdates;for(h=N&~h;0<h;){var a1=31-a2(h),c1=1<<a1;L[a1]=0,H[a1]=-1;var t1=J[a1];if(t1!==null)for(J[a1]=null,a1=0;a1<t1.length;a1++){var e1=t1[a1];e1!==null&&(e1.lane&=-536870913)}h&=~c1}y!==0&&UT(r,y,0),E!==0&&_===0&&r.tag!==0&&(r.suspendedLanes|=E&~(N&~d))}function UT(r,d,h){r.pendingLanes|=d,r.suspendedLanes&=~d;var y=31-a2(d);r.entangledLanes|=d,r.entanglements[y]=r.entanglements[y]|1073741824|h&4194090}function qT(r,d){var h=r.entangledLanes|=d;for(r=r.entanglements;h;){var y=31-a2(h),_=1<<y;_&d|r[y]&d&&(r[y]|=d),h&=~_}}function _p(r){switch(r){case 2:r=1;break;case 8:r=4;break;case 32:r=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:r=128;break;case 268435456:r=134217728;break;default:r=0}return r}function wp(r){return r&=-r,2<r?8<r?(r&134217727)!==0?32:268435456:8:2}function HT(){var r=P.p;return r!==0?r:(r=window.event,r===void 0?32:ER(r.type))}function NJ(r,d){var h=P.p;try{return P.p=r,d()}finally{P.p=h}}var m4=Math.random().toString(36).slice(2),Qe="__reactFiber$"+m4,In="__reactProps$"+m4,F6="__reactContainer$"+m4,Ep="__reactEvents$"+m4,RJ="__reactListeners$"+m4,DJ="__reactHandles$"+m4,GT="__reactResources$"+m4,Ca="__reactMarker$"+m4;function Sp(r){delete r[Qe],delete r[In],delete r[Ep],delete r[RJ],delete r[DJ]}function z6(r){var d=r[Qe];if(d)return d;for(var h=r.parentNode;h;){if(d=h[F6]||h[Qe]){if(h=d.alternate,d.child!==null||h!==null&&h.child!==null)for(r=rR(r);r!==null;){if(h=r[Qe])return h;r=rR(r)}return d}r=h,h=r.parentNode}return null}function L6(r){if(r=r[Qe]||r[F6]){var d=r.tag;if(d===5||d===6||d===13||d===26||d===27||d===3)return r}return null}function ka(r){var d=r.tag;if(d===5||d===26||d===27||d===6)return r.stateNode;throw Error(i(33))}function j6(r){var d=r[GT];return d||(d=r[GT]={hoistableStyles:new Map,hoistableScripts:new Map}),d}function Ee(r){r[Ca]=!0}var WT=new Set,YT={};function Gu(r,d){P6(r,d),P6(r+"Capture",d)}function P6(r,d){for(YT[r]=d,r=0;r<d.length;r++)WT.add(d[r])}var OJ=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),VT={},XT={};function FJ(r){return f1.call(XT,r)?!0:f1.call(VT,r)?!1:OJ.test(r)?XT[r]=!0:(VT[r]=!0,!1)}function R7(r,d,h){if(FJ(d))if(h===null)r.removeAttribute(d);else{switch(typeof h){case"undefined":case"function":case"symbol":r.removeAttribute(d);return;case"boolean":var y=d.toLowerCase().slice(0,5);if(y!=="data-"&&y!=="aria-"){r.removeAttribute(d);return}}r.setAttribute(d,""+h)}}function D7(r,d,h){if(h===null)r.removeAttribute(d);else{switch(typeof h){case"undefined":case"function":case"symbol":case"boolean":r.removeAttribute(d);return}r.setAttribute(d,""+h)}}function Wi(r,d,h,y){if(y===null)r.removeAttribute(h);else{switch(typeof y){case"undefined":case"function":case"symbol":case"boolean":r.removeAttribute(h);return}r.setAttributeNS(d,h,""+y)}}var Ap,KT;function I6(r){if(Ap===void 0)try{throw Error()}catch(h){var d=h.stack.trim().match(/\n( *(at )?)/);Ap=d&&d[1]||"",KT=-1<h.stack.indexOf(`
    at`)?" (<anonymous>)":-1<h.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Ap+r+KT}var Cp=!1;function kp(r,d){if(!r||Cp)return"";Cp=!0;var h=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var y={DetermineComponentFrameRoot:function(){try{if(d){var c1=function(){throw Error()};if(Object.defineProperty(c1.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(c1,[])}catch(e1){var t1=e1}Reflect.construct(r,[],c1)}else{try{c1.call()}catch(e1){t1=e1}r.call(c1.prototype)}}else{try{throw Error()}catch(e1){t1=e1}(c1=r())&&typeof c1.catch=="function"&&c1.catch(function(){})}}catch(e1){if(e1&&t1&&typeof e1.stack=="string")return[e1.stack,t1.stack]}return[null,null]}};y.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var _=Object.getOwnPropertyDescriptor(y.DetermineComponentFrameRoot,"name");_&&_.configurable&&Object.defineProperty(y.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var E=y.DetermineComponentFrameRoot(),N=E[0],L=E[1];if(N&&L){var H=N.split(`
`),J=L.split(`
`);for(_=y=0;y<H.length&&!H[y].includes("DetermineComponentFrameRoot");)y++;for(;_<J.length&&!J[_].includes("DetermineComponentFrameRoot");)_++;if(y===H.length||_===J.length)for(y=H.length-1,_=J.length-1;1<=y&&0<=_&&H[y]!==J[_];)_--;for(;1<=y&&0<=_;y--,_--)if(H[y]!==J[_]){if(y!==1||_!==1)do if(y--,_--,0>_||H[y]!==J[_]){var a1=`
`+H[y].replace(" at new "," at ");return r.displayName&&a1.includes("<anonymous>")&&(a1=a1.replace("<anonymous>",r.displayName)),a1}while(1<=y&&0<=_);break}}}finally{Cp=!1,Error.prepareStackTrace=h}return(h=r?r.displayName||r.name:"")?I6(h):""}function zJ(r){switch(r.tag){case 26:case 27:case 5:return I6(r.type);case 16:return I6("Lazy");case 13:return I6("Suspense");case 19:return I6("SuspenseList");case 0:case 15:return kp(r.type,!1);case 11:return kp(r.type.render,!1);case 1:return kp(r.type,!0);case 31:return I6("Activity");default:return""}}function QT(r){try{var d="";do d+=zJ(r),r=r.return;while(r);return d}catch(h){return`
Error generating stack: `+h.message+`
`+h.stack}}function R2(r){switch(typeof r){case"bigint":case"boolean":case"number":case"string":case"undefined":return r;case"object":return r;default:return""}}function ZT(r){var d=r.type;return(r=r.nodeName)&&r.toLowerCase()==="input"&&(d==="checkbox"||d==="radio")}function LJ(r){var d=ZT(r)?"checked":"value",h=Object.getOwnPropertyDescriptor(r.constructor.prototype,d),y=""+r[d];if(!r.hasOwnProperty(d)&&typeof h<"u"&&typeof h.get=="function"&&typeof h.set=="function"){var _=h.get,E=h.set;return Object.defineProperty(r,d,{configurable:!0,get:function(){return _.call(this)},set:function(N){y=""+N,E.call(this,N)}}),Object.defineProperty(r,d,{enumerable:h.enumerable}),{getValue:function(){return y},setValue:function(N){y=""+N},stopTracking:function(){r._valueTracker=null,delete r[d]}}}}function O7(r){r._valueTracker||(r._valueTracker=LJ(r))}function JT(r){if(!r)return!1;var d=r._valueTracker;if(!d)return!0;var h=d.getValue(),y="";return r&&(y=ZT(r)?r.checked?"true":"false":r.value),r=y,r!==h?(d.setValue(r),!0):!1}function F7(r){if(r=r||(typeof document<"u"?document:void 0),typeof r>"u")return null;try{return r.activeElement||r.body}catch{return r.body}}var jJ=/[\n"\\]/g;function D2(r){return r.replace(jJ,function(d){return"\\"+d.charCodeAt(0).toString(16)+" "})}function Tp(r,d,h,y,_,E,N,L){r.name="",N!=null&&typeof N!="function"&&typeof N!="symbol"&&typeof N!="boolean"?r.type=N:r.removeAttribute("type"),d!=null?N==="number"?(d===0&&r.value===""||r.value!=d)&&(r.value=""+R2(d)):r.value!==""+R2(d)&&(r.value=""+R2(d)):N!=="submit"&&N!=="reset"||r.removeAttribute("value"),d!=null?$p(r,N,R2(d)):h!=null?$p(r,N,R2(h)):y!=null&&r.removeAttribute("value"),_==null&&E!=null&&(r.defaultChecked=!!E),_!=null&&(r.checked=_&&typeof _!="function"&&typeof _!="symbol"),L!=null&&typeof L!="function"&&typeof L!="symbol"&&typeof L!="boolean"?r.name=""+R2(L):r.removeAttribute("name")}function t$(r,d,h,y,_,E,N,L){if(E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"&&(r.type=E),d!=null||h!=null){if(!(E!=="submit"&&E!=="reset"||d!=null))return;h=h!=null?""+R2(h):"",d=d!=null?""+R2(d):h,L||d===r.value||(r.value=d),r.defaultValue=d}y=y??_,y=typeof y!="function"&&typeof y!="symbol"&&!!y,r.checked=L?r.checked:!!y,r.defaultChecked=!!y,N!=null&&typeof N!="function"&&typeof N!="symbol"&&typeof N!="boolean"&&(r.name=N)}function $p(r,d,h){d==="number"&&F7(r.ownerDocument)===r||r.defaultValue===""+h||(r.defaultValue=""+h)}function B6(r,d,h,y){if(r=r.options,d){d={};for(var _=0;_<h.length;_++)d["$"+h[_]]=!0;for(h=0;h<r.length;h++)_=d.hasOwnProperty("$"+r[h].value),r[h].selected!==_&&(r[h].selected=_),_&&y&&(r[h].defaultSelected=!0)}else{for(h=""+R2(h),d=null,_=0;_<r.length;_++){if(r[_].value===h){r[_].selected=!0,y&&(r[_].defaultSelected=!0);return}d!==null||r[_].disabled||(d=r[_])}d!==null&&(d.selected=!0)}}function e$(r,d,h){if(d!=null&&(d=""+R2(d),d!==r.value&&(r.value=d),h==null)){r.defaultValue!==d&&(r.defaultValue=d);return}r.defaultValue=h!=null?""+R2(h):""}function n$(r,d,h,y){if(d==null){if(y!=null){if(h!=null)throw Error(i(92));if(j(y)){if(1<y.length)throw Error(i(93));y=y[0]}h=y}h==null&&(h=""),d=h}h=R2(d),r.defaultValue=h,y=r.textContent,y===h&&y!==""&&y!==null&&(r.value=y)}function U6(r,d){if(d){var h=r.firstChild;if(h&&h===r.lastChild&&h.nodeType===3){h.nodeValue=d;return}}r.textContent=d}var PJ=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function i$(r,d,h){var y=d.indexOf("--")===0;h==null||typeof h=="boolean"||h===""?y?r.setProperty(d,""):d==="float"?r.cssFloat="":r[d]="":y?r.setProperty(d,h):typeof h!="number"||h===0||PJ.has(d)?d==="float"?r.cssFloat=h:r[d]=(""+h).trim():r[d]=h+"px"}function o$(r,d,h){if(d!=null&&typeof d!="object")throw Error(i(62));if(r=r.style,h!=null){for(var y in h)!h.hasOwnProperty(y)||d!=null&&d.hasOwnProperty(y)||(y.indexOf("--")===0?r.setProperty(y,""):y==="float"?r.cssFloat="":r[y]="");for(var _ in d)y=d[_],d.hasOwnProperty(_)&&h[_]!==y&&i$(r,_,y)}else for(var E in d)d.hasOwnProperty(E)&&i$(r,E,d[E])}function Mp(r){if(r.indexOf("-")===-1)return!1;switch(r){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var IJ=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),BJ=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function z7(r){return BJ.test(""+r)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":r}var Np=null;function Rp(r){return r=r.target||r.srcElement||window,r.correspondingUseElement&&(r=r.correspondingUseElement),r.nodeType===3?r.parentNode:r}var q6=null,H6=null;function u$(r){var d=L6(r);if(d&&(r=d.stateNode)){var h=r[In]||null;t:switch(r=d.stateNode,d.type){case"input":if(Tp(r,h.value,h.defaultValue,h.defaultValue,h.checked,h.defaultChecked,h.type,h.name),d=h.name,h.type==="radio"&&d!=null){for(h=r;h.parentNode;)h=h.parentNode;for(h=h.querySelectorAll('input[name="'+D2(""+d)+'"][type="radio"]'),d=0;d<h.length;d++){var y=h[d];if(y!==r&&y.form===r.form){var _=y[In]||null;if(!_)throw Error(i(90));Tp(y,_.value,_.defaultValue,_.defaultValue,_.checked,_.defaultChecked,_.type,_.name)}}for(d=0;d<h.length;d++)y=h[d],y.form===r.form&&JT(y)}break t;case"textarea":e$(r,h.value,h.defaultValue);break t;case"select":d=h.value,d!=null&&B6(r,!!h.multiple,d,!1)}}}var Dp=!1;function l$(r,d,h){if(Dp)return r(d,h);Dp=!0;try{var y=r(d);return y}finally{if(Dp=!1,(q6!==null||H6!==null)&&(_s(),q6&&(d=q6,r=H6,H6=q6=null,u$(d),r)))for(d=0;d<r.length;d++)u$(r[d])}}function Ta(r,d){var h=r.stateNode;if(h===null)return null;var y=h[In]||null;if(y===null)return null;h=y[d];t:switch(d){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(y=!y.disabled)||(r=r.type,y=!(r==="button"||r==="input"||r==="select"||r==="textarea")),r=!y;break t;default:r=!1}if(r)return null;if(h&&typeof h!="function")throw Error(i(231,d,typeof h));return h}var Yi=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Op=!1;if(Yi)try{var $a={};Object.defineProperty($a,"passive",{get:function(){Op=!0}}),window.addEventListener("test",$a,$a),window.removeEventListener("test",$a,$a)}catch{Op=!1}var y4=null,Fp=null,L7=null;function a$(){if(L7)return L7;var r,d=Fp,h=d.length,y,_="value"in y4?y4.value:y4.textContent,E=_.length;for(r=0;r<h&&d[r]===_[r];r++);var N=h-r;for(y=1;y<=N&&d[h-y]===_[E-y];y++);return L7=_.slice(r,1<y?1-y:void 0)}function j7(r){var d=r.keyCode;return"charCode"in r?(r=r.charCode,r===0&&d===13&&(r=13)):r=d,r===10&&(r=13),32<=r||r===13?r:0}function P7(){return!0}function r$(){return!1}function Bn(r){function d(h,y,_,E,N){this._reactName=h,this._targetInst=_,this.type=y,this.nativeEvent=E,this.target=N,this.currentTarget=null;for(var L in r)r.hasOwnProperty(L)&&(h=r[L],this[L]=h?h(E):E[L]);return this.isDefaultPrevented=(E.defaultPrevented!=null?E.defaultPrevented:E.returnValue===!1)?P7:r$,this.isPropagationStopped=r$,this}return f(d.prototype,{preventDefault:function(){this.defaultPrevented=!0;var h=this.nativeEvent;h&&(h.preventDefault?h.preventDefault():typeof h.returnValue!="unknown"&&(h.returnValue=!1),this.isDefaultPrevented=P7)},stopPropagation:function(){var h=this.nativeEvent;h&&(h.stopPropagation?h.stopPropagation():typeof h.cancelBubble!="unknown"&&(h.cancelBubble=!0),this.isPropagationStopped=P7)},persist:function(){},isPersistent:P7}),d}var Wu={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(r){return r.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},I7=Bn(Wu),Ma=f({},Wu,{view:0,detail:0}),UJ=Bn(Ma),zp,Lp,Na,B7=f({},Ma,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pp,button:0,buttons:0,relatedTarget:function(r){return r.relatedTarget===void 0?r.fromElement===r.srcElement?r.toElement:r.fromElement:r.relatedTarget},movementX:function(r){return"movementX"in r?r.movementX:(r!==Na&&(Na&&r.type==="mousemove"?(zp=r.screenX-Na.screenX,Lp=r.screenY-Na.screenY):Lp=zp=0,Na=r),zp)},movementY:function(r){return"movementY"in r?r.movementY:Lp}}),s$=Bn(B7),qJ=f({},B7,{dataTransfer:0}),HJ=Bn(qJ),GJ=f({},Ma,{relatedTarget:0}),jp=Bn(GJ),WJ=f({},Wu,{animationName:0,elapsedTime:0,pseudoElement:0}),YJ=Bn(WJ),VJ=f({},Wu,{clipboardData:function(r){return"clipboardData"in r?r.clipboardData:window.clipboardData}}),XJ=Bn(VJ),KJ=f({},Wu,{data:0}),c$=Bn(KJ),QJ={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ZJ={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},JJ={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function t11(r){var d=this.nativeEvent;return d.getModifierState?d.getModifierState(r):(r=JJ[r])?!!d[r]:!1}function Pp(){return t11}var e11=f({},Ma,{key:function(r){if(r.key){var d=QJ[r.key]||r.key;if(d!=="Unidentified")return d}return r.type==="keypress"?(r=j7(r),r===13?"Enter":String.fromCharCode(r)):r.type==="keydown"||r.type==="keyup"?ZJ[r.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pp,charCode:function(r){return r.type==="keypress"?j7(r):0},keyCode:function(r){return r.type==="keydown"||r.type==="keyup"?r.keyCode:0},which:function(r){return r.type==="keypress"?j7(r):r.type==="keydown"||r.type==="keyup"?r.keyCode:0}}),n11=Bn(e11),i11=f({},B7,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),d$=Bn(i11),o11=f({},Ma,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pp}),u11=Bn(o11),l11=f({},Wu,{propertyName:0,elapsedTime:0,pseudoElement:0}),a11=Bn(l11),r11=f({},B7,{deltaX:function(r){return"deltaX"in r?r.deltaX:"wheelDeltaX"in r?-r.wheelDeltaX:0},deltaY:function(r){return"deltaY"in r?r.deltaY:"wheelDeltaY"in r?-r.wheelDeltaY:"wheelDelta"in r?-r.wheelDelta:0},deltaZ:0,deltaMode:0}),s11=Bn(r11),c11=f({},Wu,{newState:0,oldState:0}),d11=Bn(c11),f11=[9,13,27,32],Ip=Yi&&"CompositionEvent"in window,Ra=null;Yi&&"documentMode"in document&&(Ra=document.documentMode);var g11=Yi&&"TextEvent"in window&&!Ra,f$=Yi&&(!Ip||Ra&&8<Ra&&11>=Ra),g$=" ",h$=!1;function p$(r,d){switch(r){case"keyup":return f11.indexOf(d.keyCode)!==-1;case"keydown":return d.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function m$(r){return r=r.detail,typeof r=="object"&&"data"in r?r.data:null}var G6=!1;function h11(r,d){switch(r){case"compositionend":return m$(d);case"keypress":return d.which!==32?null:(h$=!0,g$);case"textInput":return r=d.data,r===g$&&h$?null:r;default:return null}}function p11(r,d){if(G6)return r==="compositionend"||!Ip&&p$(r,d)?(r=a$(),L7=Fp=y4=null,G6=!1,r):null;switch(r){case"paste":return null;case"keypress":if(!(d.ctrlKey||d.altKey||d.metaKey)||d.ctrlKey&&d.altKey){if(d.char&&1<d.char.length)return d.char;if(d.which)return String.fromCharCode(d.which)}return null;case"compositionend":return f$&&d.locale!=="ko"?null:d.data;default:return null}}var m11={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function y$(r){var d=r&&r.nodeName&&r.nodeName.toLowerCase();return d==="input"?!!m11[r.type]:d==="textarea"}function v$(r,d,h,y){q6?H6?H6.push(y):H6=[y]:q6=y,d=ks(d,"onChange"),0<d.length&&(h=new I7("onChange","change",null,h,y),r.push({event:h,listeners:d}))}var Da=null,Oa=null;function y11(r){ZN(r,0)}function U7(r){var d=ka(r);if(JT(d))return r}function b$(r,d){if(r==="change")return d}var x$=!1;if(Yi){var Bp;if(Yi){var Up="oninput"in document;if(!Up){var _$=document.createElement("div");_$.setAttribute("oninput","return;"),Up=typeof _$.oninput=="function"}Bp=Up}else Bp=!1;x$=Bp&&(!document.documentMode||9<document.documentMode)}function w$(){Da&&(Da.detachEvent("onpropertychange",E$),Oa=Da=null)}function E$(r){if(r.propertyName==="value"&&U7(Oa)){var d=[];v$(d,Oa,r,Rp(r)),l$(y11,d)}}function v11(r,d,h){r==="focusin"?(w$(),Da=d,Oa=h,Da.attachEvent("onpropertychange",E$)):r==="focusout"&&w$()}function b11(r){if(r==="selectionchange"||r==="keyup"||r==="keydown")return U7(Oa)}function x11(r,d){if(r==="click")return U7(d)}function _11(r,d){if(r==="input"||r==="change")return U7(d)}function w11(r,d){return r===d&&(r!==0||1/r===1/d)||r!==r&&d!==d}var r2=typeof Object.is=="function"?Object.is:w11;function Fa(r,d){if(r2(r,d))return!0;if(typeof r!="object"||r===null||typeof d!="object"||d===null)return!1;var h=Object.keys(r),y=Object.keys(d);if(h.length!==y.length)return!1;for(y=0;y<h.length;y++){var _=h[y];if(!f1.call(d,_)||!r2(r[_],d[_]))return!1}return!0}function S$(r){for(;r&&r.firstChild;)r=r.firstChild;return r}function A$(r,d){var h=S$(r);r=0;for(var y;h;){if(h.nodeType===3){if(y=r+h.textContent.length,r<=d&&y>=d)return{node:h,offset:d-r};r=y}t:{for(;h;){if(h.nextSibling){h=h.nextSibling;break t}h=h.parentNode}h=void 0}h=S$(h)}}function C$(r,d){return r&&d?r===d?!0:r&&r.nodeType===3?!1:d&&d.nodeType===3?C$(r,d.parentNode):"contains"in r?r.contains(d):r.compareDocumentPosition?!!(r.compareDocumentPosition(d)&16):!1:!1}function k$(r){r=r!=null&&r.ownerDocument!=null&&r.ownerDocument.defaultView!=null?r.ownerDocument.defaultView:window;for(var d=F7(r.document);d instanceof r.HTMLIFrameElement;){try{var h=typeof d.contentWindow.location.href=="string"}catch{h=!1}if(h)r=d.contentWindow;else break;d=F7(r.document)}return d}function qp(r){var d=r&&r.nodeName&&r.nodeName.toLowerCase();return d&&(d==="input"&&(r.type==="text"||r.type==="search"||r.type==="tel"||r.type==="url"||r.type==="password")||d==="textarea"||r.contentEditable==="true")}var E11=Yi&&"documentMode"in document&&11>=document.documentMode,W6=null,Hp=null,za=null,Gp=!1;function T$(r,d,h){var y=h.window===h?h.document:h.nodeType===9?h:h.ownerDocument;Gp||W6==null||W6!==F7(y)||(y=W6,"selectionStart"in y&&qp(y)?y={start:y.selectionStart,end:y.selectionEnd}:(y=(y.ownerDocument&&y.ownerDocument.defaultView||window).getSelection(),y={anchorNode:y.anchorNode,anchorOffset:y.anchorOffset,focusNode:y.focusNode,focusOffset:y.focusOffset}),za&&Fa(za,y)||(za=y,y=ks(Hp,"onSelect"),0<y.length&&(d=new I7("onSelect","select",null,d,h),r.push({event:d,listeners:y}),d.target=W6)))}function Yu(r,d){var h={};return h[r.toLowerCase()]=d.toLowerCase(),h["Webkit"+r]="webkit"+d,h["Moz"+r]="moz"+d,h}var Y6={animationend:Yu("Animation","AnimationEnd"),animationiteration:Yu("Animation","AnimationIteration"),animationstart:Yu("Animation","AnimationStart"),transitionrun:Yu("Transition","TransitionRun"),transitionstart:Yu("Transition","TransitionStart"),transitioncancel:Yu("Transition","TransitionCancel"),transitionend:Yu("Transition","TransitionEnd")},Wp={},$$={};Yi&&($$=document.createElement("div").style,"AnimationEvent"in window||(delete Y6.animationend.animation,delete Y6.animationiteration.animation,delete Y6.animationstart.animation),"TransitionEvent"in window||delete Y6.transitionend.transition);function Vu(r){if(Wp[r])return Wp[r];if(!Y6[r])return r;var d=Y6[r],h;for(h in d)if(d.hasOwnProperty(h)&&h in $$)return Wp[r]=d[h];return r}var M$=Vu("animationend"),N$=Vu("animationiteration"),R$=Vu("animationstart"),S11=Vu("transitionrun"),A11=Vu("transitionstart"),C11=Vu("transitioncancel"),D$=Vu("transitionend"),O$=new Map,Yp="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");Yp.push("scrollEnd");function h3(r,d){O$.set(r,d),Gu(d,[r])}var F$=new WeakMap;function O2(r,d){if(typeof r=="object"&&r!==null){var h=F$.get(r);return h!==void 0?h:(d={value:r,source:d,stack:QT(d)},F$.set(r,d),d)}return{value:r,source:d,stack:QT(d)}}var F2=[],V6=0,Vp=0;function q7(){for(var r=V6,d=Vp=V6=0;d<r;){var h=F2[d];F2[d++]=null;var y=F2[d];F2[d++]=null;var _=F2[d];F2[d++]=null;var E=F2[d];if(F2[d++]=null,y!==null&&_!==null){var N=y.pending;N===null?_.next=_:(_.next=N.next,N.next=_),y.pending=_}E!==0&&z$(h,_,E)}}function H7(r,d,h,y){F2[V6++]=r,F2[V6++]=d,F2[V6++]=h,F2[V6++]=y,Vp|=y,r.lanes|=y,r=r.alternate,r!==null&&(r.lanes|=y)}function Xp(r,d,h,y){return H7(r,d,h,y),G7(r)}function X6(r,d){return H7(r,null,null,d),G7(r)}function z$(r,d,h){r.lanes|=h;var y=r.alternate;y!==null&&(y.lanes|=h);for(var _=!1,E=r.return;E!==null;)E.childLanes|=h,y=E.alternate,y!==null&&(y.childLanes|=h),E.tag===22&&(r=E.stateNode,r===null||r._visibility&1||(_=!0)),r=E,E=E.return;return r.tag===3?(E=r.stateNode,_&&d!==null&&(_=31-a2(h),r=E.hiddenUpdates,y=r[_],y===null?r[_]=[d]:y.push(d),d.lane=h|536870912),E):null}function G7(r){if(50<a9)throw a9=0,ey=null,Error(i(185));for(var d=r.return;d!==null;)r=d,d=r.return;return r.tag===3?r.stateNode:null}var K6={};function k11(r,d,h,y){this.tag=r,this.key=h,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=d,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=y,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function s2(r,d,h,y){return new k11(r,d,h,y)}function Kp(r){return r=r.prototype,!(!r||!r.isReactComponent)}function Vi(r,d){var h=r.alternate;return h===null?(h=s2(r.tag,d,r.key,r.mode),h.elementType=r.elementType,h.type=r.type,h.stateNode=r.stateNode,h.alternate=r,r.alternate=h):(h.pendingProps=d,h.type=r.type,h.flags=0,h.subtreeFlags=0,h.deletions=null),h.flags=r.flags&65011712,h.childLanes=r.childLanes,h.lanes=r.lanes,h.child=r.child,h.memoizedProps=r.memoizedProps,h.memoizedState=r.memoizedState,h.updateQueue=r.updateQueue,d=r.dependencies,h.dependencies=d===null?null:{lanes:d.lanes,firstContext:d.firstContext},h.sibling=r.sibling,h.index=r.index,h.ref=r.ref,h.refCleanup=r.refCleanup,h}function L$(r,d){r.flags&=65011714;var h=r.alternate;return h===null?(r.childLanes=0,r.lanes=d,r.child=null,r.subtreeFlags=0,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null,r.stateNode=null):(r.childLanes=h.childLanes,r.lanes=h.lanes,r.child=h.child,r.subtreeFlags=0,r.deletions=null,r.memoizedProps=h.memoizedProps,r.memoizedState=h.memoizedState,r.updateQueue=h.updateQueue,r.type=h.type,d=h.dependencies,r.dependencies=d===null?null:{lanes:d.lanes,firstContext:d.firstContext}),r}function W7(r,d,h,y,_,E){var N=0;if(y=r,typeof r=="function")Kp(r)&&(N=1);else if(typeof r=="string")N=$t1(r,h,l1.current)?26:r==="html"||r==="head"||r==="body"?27:5;else t:switch(r){case I:return r=s2(31,h,d,_),r.elementType=I,r.lanes=E,r;case v:return Xu(h.children,_,E,d);case b:N=8,_|=24;break;case x:return r=s2(12,h,d,_|2),r.elementType=x,r.lanes=E,r;case k:return r=s2(13,h,d,_),r.elementType=k,r.lanes=E,r;case M:return r=s2(19,h,d,_),r.elementType=M,r.lanes=E,r;default:if(typeof r=="object"&&r!==null)switch(r.$$typeof){case w:case A:N=10;break t;case S:N=9;break t;case C:N=11;break t;case T:N=14;break t;case D:N=16,y=null;break t}N=29,h=Error(i(130,r===null?"null":typeof r,"")),y=null}return d=s2(N,h,d,_),d.elementType=r,d.type=y,d.lanes=E,d}function Xu(r,d,h,y){return r=s2(7,r,y,d),r.lanes=h,r}function Qp(r,d,h){return r=s2(6,r,null,d),r.lanes=h,r}function Zp(r,d,h){return d=s2(4,r.children!==null?r.children:[],r.key,d),d.lanes=h,d.stateNode={containerInfo:r.containerInfo,pendingChildren:null,implementation:r.implementation},d}var Q6=[],Z6=0,Y7=null,V7=0,z2=[],L2=0,Ku=null,Xi=1,Ki="";function Qu(r,d){Q6[Z6++]=V7,Q6[Z6++]=Y7,Y7=r,V7=d}function j$(r,d,h){z2[L2++]=Xi,z2[L2++]=Ki,z2[L2++]=Ku,Ku=r;var y=Xi;r=Ki;var _=32-a2(y)-1;y&=~(1<<_),h+=1;var E=32-a2(d)+_;if(30<E){var N=_-_%5;E=(y&(1<<N)-1).toString(32),y>>=N,_-=N,Xi=1<<32-a2(d)+_|h<<_|y,Ki=E+r}else Xi=1<<E|h<<_|y,Ki=r}function Jp(r){r.return!==null&&(Qu(r,1),j$(r,1,0))}function tm(r){for(;r===Y7;)Y7=Q6[--Z6],Q6[Z6]=null,V7=Q6[--Z6],Q6[Z6]=null;for(;r===Ku;)Ku=z2[--L2],z2[L2]=null,Ki=z2[--L2],z2[L2]=null,Xi=z2[--L2],z2[L2]=null}var xn=null,Kt=null,yt=!1,Zu=null,K3=!1,em=Error(i(519));function Ju(r){var d=Error(i(418,""));throw Pa(O2(d,r)),em}function P$(r){var d=r.stateNode,h=r.type,y=r.memoizedProps;switch(d[Qe]=r,d[In]=y,h){case"dialog":ut("cancel",d),ut("close",d);break;case"iframe":case"object":case"embed":ut("load",d);break;case"video":case"audio":for(h=0;h<s9.length;h++)ut(s9[h],d);break;case"source":ut("error",d);break;case"img":case"image":case"link":ut("error",d),ut("load",d);break;case"details":ut("toggle",d);break;case"input":ut("invalid",d),t$(d,y.value,y.defaultValue,y.checked,y.defaultChecked,y.type,y.name,!0),O7(d);break;case"select":ut("invalid",d);break;case"textarea":ut("invalid",d),n$(d,y.value,y.defaultValue,y.children),O7(d)}h=y.children,typeof h!="string"&&typeof h!="number"&&typeof h!="bigint"||d.textContent===""+h||y.suppressHydrationWarning===!0||nR(d.textContent,h)?(y.popover!=null&&(ut("beforetoggle",d),ut("toggle",d)),y.onScroll!=null&&ut("scroll",d),y.onScrollEnd!=null&&ut("scrollend",d),y.onClick!=null&&(d.onclick=Ts),d=!0):d=!1,d||Ju(r)}function I$(r){for(xn=r.return;xn;)switch(xn.tag){case 5:case 13:K3=!1;return;case 27:case 3:K3=!0;return;default:xn=xn.return}}function La(r){if(r!==xn)return!1;if(!yt)return I$(r),yt=!0,!1;var d=r.tag,h;if((h=d!==3&&d!==27)&&((h=d===5)&&(h=r.type,h=!(h!=="form"&&h!=="button")||yy(r.type,r.memoizedProps)),h=!h),h&&Kt&&Ju(r),I$(r),d===13){if(r=r.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(i(317));t:{for(r=r.nextSibling,d=0;r;){if(r.nodeType===8)if(h=r.data,h==="/$"){if(d===0){Kt=m3(r.nextSibling);break t}d--}else h!=="$"&&h!=="$!"&&h!=="$?"||d++;r=r.nextSibling}Kt=null}}else d===27?(d=Kt,D4(r.type)?(r=_y,_y=null,Kt=r):Kt=d):Kt=xn?m3(r.stateNode.nextSibling):null;return!0}function ja(){Kt=xn=null,yt=!1}function B$(){var r=Zu;return r!==null&&(Hn===null?Hn=r:Hn.push.apply(Hn,r),Zu=null),r}function Pa(r){Zu===null?Zu=[r]:Zu.push(r)}var nm=G(null),t0=null,Qi=null;function v4(r,d,h){n1(nm,d._currentValue),d._currentValue=h}function Zi(r){r._currentValue=nm.current,Q(nm)}function im(r,d,h){for(;r!==null;){var y=r.alternate;if((r.childLanes&d)!==d?(r.childLanes|=d,y!==null&&(y.childLanes|=d)):y!==null&&(y.childLanes&d)!==d&&(y.childLanes|=d),r===h)break;r=r.return}}function om(r,d,h,y){var _=r.child;for(_!==null&&(_.return=r);_!==null;){var E=_.dependencies;if(E!==null){var N=_.child;E=E.firstContext;t:for(;E!==null;){var L=E;E=_;for(var H=0;H<d.length;H++)if(L.context===d[H]){E.lanes|=h,L=E.alternate,L!==null&&(L.lanes|=h),im(E.return,h,r),y||(N=null);break t}E=L.next}}else if(_.tag===18){if(N=_.return,N===null)throw Error(i(341));N.lanes|=h,E=N.alternate,E!==null&&(E.lanes|=h),im(N,h,r),N=null}else N=_.child;if(N!==null)N.return=_;else for(N=_;N!==null;){if(N===r){N=null;break}if(_=N.sibling,_!==null){_.return=N.return,N=_;break}N=N.return}_=N}}function Ia(r,d,h,y){r=null;for(var _=d,E=!1;_!==null;){if(!E){if((_.flags&524288)!==0)E=!0;else if((_.flags&262144)!==0)break}if(_.tag===10){var N=_.alternate;if(N===null)throw Error(i(387));if(N=N.memoizedProps,N!==null){var L=_.type;r2(_.pendingProps.value,N.value)||(r!==null?r.push(L):r=[L])}}else if(_===j1.current){if(N=_.alternate,N===null)throw Error(i(387));N.memoizedState.memoizedState!==_.memoizedState.memoizedState&&(r!==null?r.push(p9):r=[p9])}_=_.return}r!==null&&om(d,r,h,y),d.flags|=262144}function X7(r){for(r=r.firstContext;r!==null;){if(!r2(r.context._currentValue,r.memoizedValue))return!0;r=r.next}return!1}function e0(r){t0=r,Qi=null,r=r.dependencies,r!==null&&(r.firstContext=null)}function Ze(r){return U$(t0,r)}function K7(r,d){return t0===null&&e0(r),U$(r,d)}function U$(r,d){var h=d._currentValue;if(d={context:d,memoizedValue:h,next:null},Qi===null){if(r===null)throw Error(i(308));Qi=d,r.dependencies={lanes:0,firstContext:d},r.flags|=524288}else Qi=Qi.next=d;return h}var T11=typeof AbortController<"u"?AbortController:function(){var r=[],d=this.signal={aborted:!1,addEventListener:function(h,y){r.push(y)}};this.abort=function(){d.aborted=!0,r.forEach(function(h){return h()})}},$11=t.unstable_scheduleCallback,M11=t.unstable_NormalPriority,he={$$typeof:A,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function um(){return{controller:new T11,data:new Map,refCount:0}}function Ba(r){r.refCount--,r.refCount===0&&$11(M11,function(){r.controller.abort()})}var Ua=null,lm=0,J6=0,t5=null;function N11(r,d){if(Ua===null){var h=Ua=[];lm=0,J6=ry(),t5={status:"pending",value:void 0,then:function(y){h.push(y)}}}return lm++,d.then(q$,q$),d}function q$(){if(--lm===0&&Ua!==null){t5!==null&&(t5.status="fulfilled");var r=Ua;Ua=null,J6=0,t5=null;for(var d=0;d<r.length;d++)(0,r[d])()}}function R11(r,d){var h=[],y={status:"pending",value:null,reason:null,then:function(_){h.push(_)}};return r.then(function(){y.status="fulfilled",y.value=d;for(var _=0;_<h.length;_++)(0,h[_])(d)},function(_){for(y.status="rejected",y.reason=_,_=0;_<h.length;_++)(0,h[_])(void 0)}),y}var H$=R.S;R.S=function(r,d){typeof d=="object"&&d!==null&&typeof d.then=="function"&&N11(r,d),H$!==null&&H$(r,d)};var n0=G(null);function am(){var r=n0.current;return r!==null?r:Lt.pooledCache}function Q7(r,d){d===null?n1(n0,n0.current):n1(n0,d.pool)}function G$(){var r=am();return r===null?null:{parent:he._currentValue,pool:r}}var qa=Error(i(460)),W$=Error(i(474)),Z7=Error(i(542)),rm={then:function(){}};function Y$(r){return r=r.status,r==="fulfilled"||r==="rejected"}function J7(){}function V$(r,d,h){switch(h=r[h],h===void 0?r.push(d):h!==d&&(d.then(J7,J7),d=h),d.status){case"fulfilled":return d.value;case"rejected":throw r=d.reason,K$(r),r;default:if(typeof d.status=="string")d.then(J7,J7);else{if(r=Lt,r!==null&&100<r.shellSuspendCounter)throw Error(i(482));r=d,r.status="pending",r.then(function(y){if(d.status==="pending"){var _=d;_.status="fulfilled",_.value=y}},function(y){if(d.status==="pending"){var _=d;_.status="rejected",_.reason=y}})}switch(d.status){case"fulfilled":return d.value;case"rejected":throw r=d.reason,K$(r),r}throw Ha=d,qa}}var Ha=null;function X$(){if(Ha===null)throw Error(i(459));var r=Ha;return Ha=null,r}function K$(r){if(r===qa||r===Z7)throw Error(i(483))}var b4=!1;function sm(r){r.updateQueue={baseState:r.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function cm(r,d){r=r.updateQueue,d.updateQueue===r&&(d.updateQueue={baseState:r.baseState,firstBaseUpdate:r.firstBaseUpdate,lastBaseUpdate:r.lastBaseUpdate,shared:r.shared,callbacks:null})}function x4(r){return{lane:r,tag:0,payload:null,callback:null,next:null}}function _4(r,d,h){var y=r.updateQueue;if(y===null)return null;if(y=y.shared,(wt&2)!==0){var _=y.pending;return _===null?d.next=d:(d.next=_.next,_.next=d),y.pending=d,d=G7(r),z$(r,null,h),d}return H7(r,y,d,h),G7(r)}function Ga(r,d,h){if(d=d.updateQueue,d!==null&&(d=d.shared,(h&4194048)!==0)){var y=d.lanes;y&=r.pendingLanes,h|=y,d.lanes=h,qT(r,h)}}function dm(r,d){var h=r.updateQueue,y=r.alternate;if(y!==null&&(y=y.updateQueue,h===y)){var _=null,E=null;if(h=h.firstBaseUpdate,h!==null){do{var N={lane:h.lane,tag:h.tag,payload:h.payload,callback:null,next:null};E===null?_=E=N:E=E.next=N,h=h.next}while(h!==null);E===null?_=E=d:E=E.next=d}else _=E=d;h={baseState:y.baseState,firstBaseUpdate:_,lastBaseUpdate:E,shared:y.shared,callbacks:y.callbacks},r.updateQueue=h;return}r=h.lastBaseUpdate,r===null?h.firstBaseUpdate=d:r.next=d,h.lastBaseUpdate=d}var fm=!1;function Wa(){if(fm){var r=t5;if(r!==null)throw r}}function Ya(r,d,h,y){fm=!1;var _=r.updateQueue;b4=!1;var E=_.firstBaseUpdate,N=_.lastBaseUpdate,L=_.shared.pending;if(L!==null){_.shared.pending=null;var H=L,J=H.next;H.next=null,N===null?E=J:N.next=J,N=H;var a1=r.alternate;a1!==null&&(a1=a1.updateQueue,L=a1.lastBaseUpdate,L!==N&&(L===null?a1.firstBaseUpdate=J:L.next=J,a1.lastBaseUpdate=H))}if(E!==null){var c1=_.baseState;N=0,a1=J=H=null,L=E;do{var t1=L.lane&-536870913,e1=t1!==L.lane;if(e1?(ct&t1)===t1:(y&t1)===t1){t1!==0&&t1===J6&&(fm=!0),a1!==null&&(a1=a1.next={lane:0,tag:L.tag,payload:L.payload,callback:null,next:null});t:{var G1=r,U1=L;t1=d;var $t=h;switch(U1.tag){case 1:if(G1=U1.payload,typeof G1=="function"){c1=G1.call($t,c1,t1);break t}c1=G1;break t;case 3:G1.flags=G1.flags&-65537|128;case 0:if(G1=U1.payload,t1=typeof G1=="function"?G1.call($t,c1,t1):G1,t1==null)break t;c1=f({},c1,t1);break t;case 2:b4=!0}}t1=L.callback,t1!==null&&(r.flags|=64,e1&&(r.flags|=8192),e1=_.callbacks,e1===null?_.callbacks=[t1]:e1.push(t1))}else e1={lane:t1,tag:L.tag,payload:L.payload,callback:L.callback,next:null},a1===null?(J=a1=e1,H=c1):a1=a1.next=e1,N|=t1;if(L=L.next,L===null){if(L=_.shared.pending,L===null)break;e1=L,L=e1.next,e1.next=null,_.lastBaseUpdate=e1,_.shared.pending=null}}while(!0);a1===null&&(H=c1),_.baseState=H,_.firstBaseUpdate=J,_.lastBaseUpdate=a1,E===null&&(_.shared.lanes=0),$4|=N,r.lanes=N,r.memoizedState=c1}}function Q$(r,d){if(typeof r!="function")throw Error(i(191,r));r.call(d)}function Z$(r,d){var h=r.callbacks;if(h!==null)for(r.callbacks=null,r=0;r<h.length;r++)Q$(h[r],d)}var e5=G(null),ts=G(0);function J$(r,d){r=uo,n1(ts,r),n1(e5,d),uo=r|d.baseLanes}function gm(){n1(ts,uo),n1(e5,e5.current)}function hm(){uo=ts.current,Q(e5),Q(ts)}var w4=0,J1=null,kt=null,se=null,es=!1,n5=!1,i0=!1,ns=0,Va=0,i5=null,D11=0;function ne(){throw Error(i(321))}function pm(r,d){if(d===null)return!1;for(var h=0;h<d.length&&h<r.length;h++)if(!r2(r[h],d[h]))return!1;return!0}function mm(r,d,h,y,_,E){return w4=E,J1=d,d.memoizedState=null,d.updateQueue=null,d.lanes=0,R.H=r===null||r.memoizedState===null?zM:LM,i0=!1,E=h(y,_),i0=!1,n5&&(E=eM(d,h,y,_)),tM(r),E}function tM(r){R.H=rs;var d=kt!==null&&kt.next!==null;if(w4=0,se=kt=J1=null,es=!1,Va=0,i5=null,d)throw Error(i(300));r===null||Se||(r=r.dependencies,r!==null&&X7(r)&&(Se=!0))}function eM(r,d,h,y){J1=r;var _=0;do{if(n5&&(i5=null),Va=0,n5=!1,25<=_)throw Error(i(301));if(_+=1,se=kt=null,r.updateQueue!=null){var E=r.updateQueue;E.lastEffect=null,E.events=null,E.stores=null,E.memoCache!=null&&(E.memoCache.index=0)}R.H=I11,E=d(h,y)}while(n5);return E}function O11(){var r=R.H,d=r.useState()[0];return d=typeof d.then=="function"?Xa(d):d,r=r.useState()[0],(kt!==null?kt.memoizedState:null)!==r&&(J1.flags|=1024),d}function ym(){var r=ns!==0;return ns=0,r}function vm(r,d,h){d.updateQueue=r.updateQueue,d.flags&=-2053,r.lanes&=~h}function bm(r){if(es){for(r=r.memoizedState;r!==null;){var d=r.queue;d!==null&&(d.pending=null),r=r.next}es=!1}w4=0,se=kt=J1=null,n5=!1,Va=ns=0,i5=null}function Un(){var r={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return se===null?J1.memoizedState=se=r:se=se.next=r,se}function ce(){if(kt===null){var r=J1.alternate;r=r!==null?r.memoizedState:null}else r=kt.next;var d=se===null?J1.memoizedState:se.next;if(d!==null)se=d,kt=r;else{if(r===null)throw J1.alternate===null?Error(i(467)):Error(i(310));kt=r,r={memoizedState:kt.memoizedState,baseState:kt.baseState,baseQueue:kt.baseQueue,queue:kt.queue,next:null},se===null?J1.memoizedState=se=r:se=se.next=r}return se}function xm(){return{lastEffect:null,events:null,stores:null,memoCache:null}}function Xa(r){var d=Va;return Va+=1,i5===null&&(i5=[]),r=V$(i5,r,d),d=J1,(se===null?d.memoizedState:se.next)===null&&(d=d.alternate,R.H=d===null||d.memoizedState===null?zM:LM),r}function is(r){if(r!==null&&typeof r=="object"){if(typeof r.then=="function")return Xa(r);if(r.$$typeof===A)return Ze(r)}throw Error(i(438,String(r)))}function _m(r){var d=null,h=J1.updateQueue;if(h!==null&&(d=h.memoCache),d==null){var y=J1.alternate;y!==null&&(y=y.updateQueue,y!==null&&(y=y.memoCache,y!=null&&(d={data:y.data.map(function(_){return _.slice()}),index:0})))}if(d==null&&(d={data:[],index:0}),h===null&&(h=xm(),J1.updateQueue=h),h.memoCache=d,h=d.data[d.index],h===void 0)for(h=d.data[d.index]=Array(r),y=0;y<r;y++)h[y]=U;return d.index++,h}function Ji(r,d){return typeof d=="function"?d(r):d}function os(r){var d=ce();return wm(d,kt,r)}function wm(r,d,h){var y=r.queue;if(y===null)throw Error(i(311));y.lastRenderedReducer=h;var _=r.baseQueue,E=y.pending;if(E!==null){if(_!==null){var N=_.next;_.next=E.next,E.next=N}d.baseQueue=_=E,y.pending=null}if(E=r.baseState,_===null)r.memoizedState=E;else{d=_.next;var L=N=null,H=null,J=d,a1=!1;do{var c1=J.lane&-536870913;if(c1!==J.lane?(ct&c1)===c1:(w4&c1)===c1){var t1=J.revertLane;if(t1===0)H!==null&&(H=H.next={lane:0,revertLane:0,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null}),c1===J6&&(a1=!0);else if((w4&t1)===t1){J=J.next,t1===J6&&(a1=!0);continue}else c1={lane:0,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},H===null?(L=H=c1,N=E):H=H.next=c1,J1.lanes|=t1,$4|=t1;c1=J.action,i0&&h(E,c1),E=J.hasEagerState?J.eagerState:h(E,c1)}else t1={lane:c1,revertLane:J.revertLane,action:J.action,hasEagerState:J.hasEagerState,eagerState:J.eagerState,next:null},H===null?(L=H=t1,N=E):H=H.next=t1,J1.lanes|=c1,$4|=c1;J=J.next}while(J!==null&&J!==d);if(H===null?N=E:H.next=L,!r2(E,r.memoizedState)&&(Se=!0,a1&&(h=t5,h!==null)))throw h;r.memoizedState=E,r.baseState=N,r.baseQueue=H,y.lastRenderedState=E}return _===null&&(y.lanes=0),[r.memoizedState,y.dispatch]}function Em(r){var d=ce(),h=d.queue;if(h===null)throw Error(i(311));h.lastRenderedReducer=r;var y=h.dispatch,_=h.pending,E=d.memoizedState;if(_!==null){h.pending=null;var N=_=_.next;do E=r(E,N.action),N=N.next;while(N!==_);r2(E,d.memoizedState)||(Se=!0),d.memoizedState=E,d.baseQueue===null&&(d.baseState=E),h.lastRenderedState=E}return[E,y]}function nM(r,d,h){var y=J1,_=ce(),E=yt;if(E){if(h===void 0)throw Error(i(407));h=h()}else h=d();var N=!r2((kt||_).memoizedState,h);N&&(_.memoizedState=h,Se=!0),_=_.queue;var L=uM.bind(null,y,_,r);if(Ka(2048,8,L,[r]),_.getSnapshot!==d||N||se!==null&&se.memoizedState.tag&1){if(y.flags|=2048,o5(9,us(),oM.bind(null,y,_,h,d),null),Lt===null)throw Error(i(349));E||(w4&124)!==0||iM(y,d,h)}return h}function iM(r,d,h){r.flags|=16384,r={getSnapshot:d,value:h},d=J1.updateQueue,d===null?(d=xm(),J1.updateQueue=d,d.stores=[r]):(h=d.stores,h===null?d.stores=[r]:h.push(r))}function oM(r,d,h,y){d.value=h,d.getSnapshot=y,lM(d)&&aM(r)}function uM(r,d,h){return h(function(){lM(d)&&aM(r)})}function lM(r){var d=r.getSnapshot;r=r.value;try{var h=d();return!r2(r,h)}catch{return!0}}function aM(r){var d=X6(r,2);d!==null&&h2(d,r,2)}function Sm(r){var d=Un();if(typeof r=="function"){var h=r;if(r=h(),i0){g3(!0);try{h()}finally{g3(!1)}}}return d.memoizedState=d.baseState=r,d.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ji,lastRenderedState:r},d}function rM(r,d,h,y){return r.baseState=h,wm(r,kt,typeof y=="function"?y:Ji)}function F11(r,d,h,y,_){if(as(r))throw Error(i(485));if(r=d.action,r!==null){var E={payload:_,action:r,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(N){E.listeners.push(N)}};R.T!==null?h(!0):E.isTransition=!1,y(E),h=d.pending,h===null?(E.next=d.pending=E,sM(d,E)):(E.next=h.next,d.pending=h.next=E)}}function sM(r,d){var h=d.action,y=d.payload,_=r.state;if(d.isTransition){var E=R.T,N={};R.T=N;try{var L=h(_,y),H=R.S;H!==null&&H(N,L),cM(r,d,L)}catch(J){Am(r,d,J)}finally{R.T=E}}else try{E=h(_,y),cM(r,d,E)}catch(J){Am(r,d,J)}}function cM(r,d,h){h!==null&&typeof h=="object"&&typeof h.then=="function"?h.then(function(y){dM(r,d,y)},function(y){return Am(r,d,y)}):dM(r,d,h)}function dM(r,d,h){d.status="fulfilled",d.value=h,fM(d),r.state=h,d=r.pending,d!==null&&(h=d.next,h===d?r.pending=null:(h=h.next,d.next=h,sM(r,h)))}function Am(r,d,h){var y=r.pending;if(r.pending=null,y!==null){y=y.next;do d.status="rejected",d.reason=h,fM(d),d=d.next;while(d!==y)}r.action=null}function fM(r){r=r.listeners;for(var d=0;d<r.length;d++)(0,r[d])()}function gM(r,d){return d}function hM(r,d){if(yt){var h=Lt.formState;if(h!==null){t:{var y=J1;if(yt){if(Kt){e:{for(var _=Kt,E=K3;_.nodeType!==8;){if(!E){_=null;break e}if(_=m3(_.nextSibling),_===null){_=null;break e}}E=_.data,_=E==="F!"||E==="F"?_:null}if(_){Kt=m3(_.nextSibling),y=_.data==="F!";break t}}Ju(y)}y=!1}y&&(d=h[0])}}return h=Un(),h.memoizedState=h.baseState=d,y={pending:null,lanes:0,dispatch:null,lastRenderedReducer:gM,lastRenderedState:d},h.queue=y,h=DM.bind(null,J1,y),y.dispatch=h,y=Sm(!1),E=Mm.bind(null,J1,!1,y.queue),y=Un(),_={state:d,dispatch:null,action:r,pending:null},y.queue=_,h=F11.bind(null,J1,_,E,h),_.dispatch=h,y.memoizedState=r,[d,h,!1]}function pM(r){var d=ce();return mM(d,kt,r)}function mM(r,d,h){if(d=wm(r,d,gM)[0],r=os(Ji)[0],typeof d=="object"&&d!==null&&typeof d.then=="function")try{var y=Xa(d)}catch(N){throw N===qa?Z7:N}else y=d;d=ce();var _=d.queue,E=_.dispatch;return h!==d.memoizedState&&(J1.flags|=2048,o5(9,us(),z11.bind(null,_,h),null)),[y,E,r]}function z11(r,d){r.action=d}function yM(r){var d=ce(),h=kt;if(h!==null)return mM(d,h,r);ce(),d=d.memoizedState,h=ce();var y=h.queue.dispatch;return h.memoizedState=r,[d,y,!1]}function o5(r,d,h,y){return r={tag:r,create:h,deps:y,inst:d,next:null},d=J1.updateQueue,d===null&&(d=xm(),J1.updateQueue=d),h=d.lastEffect,h===null?d.lastEffect=r.next=r:(y=h.next,h.next=r,r.next=y,d.lastEffect=r),r}function us(){return{destroy:void 0,resource:void 0}}function vM(){return ce().memoizedState}function ls(r,d,h,y){var _=Un();y=y===void 0?null:y,J1.flags|=r,_.memoizedState=o5(1|d,us(),h,y)}function Ka(r,d,h,y){var _=ce();y=y===void 0?null:y;var E=_.memoizedState.inst;kt!==null&&y!==null&&pm(y,kt.memoizedState.deps)?_.memoizedState=o5(d,E,h,y):(J1.flags|=r,_.memoizedState=o5(1|d,E,h,y))}function bM(r,d){ls(8390656,8,r,d)}function xM(r,d){Ka(2048,8,r,d)}function _M(r,d){return Ka(4,2,r,d)}function wM(r,d){return Ka(4,4,r,d)}function EM(r,d){if(typeof d=="function"){r=r();var h=d(r);return function(){typeof h=="function"?h():d(null)}}if(d!=null)return r=r(),d.current=r,function(){d.current=null}}function SM(r,d,h){h=h!=null?h.concat([r]):null,Ka(4,4,EM.bind(null,d,r),h)}function Cm(){}function AM(r,d){var h=ce();d=d===void 0?null:d;var y=h.memoizedState;return d!==null&&pm(d,y[1])?y[0]:(h.memoizedState=[r,d],r)}function CM(r,d){var h=ce();d=d===void 0?null:d;var y=h.memoizedState;if(d!==null&&pm(d,y[1]))return y[0];if(y=r(),i0){g3(!0);try{r()}finally{g3(!1)}}return h.memoizedState=[y,d],y}function km(r,d,h){return h===void 0||(w4&1073741824)!==0?r.memoizedState=d:(r.memoizedState=h,r=$N(),J1.lanes|=r,$4|=r,h)}function kM(r,d,h,y){return r2(h,d)?h:e5.current!==null?(r=km(r,h,y),r2(r,d)||(Se=!0),r):(w4&42)===0?(Se=!0,r.memoizedState=h):(r=$N(),J1.lanes|=r,$4|=r,d)}function TM(r,d,h,y,_){var E=P.p;P.p=E!==0&&8>E?E:8;var N=R.T,L={};R.T=L,Mm(r,!1,d,h);try{var H=_(),J=R.S;if(J!==null&&J(L,H),H!==null&&typeof H=="object"&&typeof H.then=="function"){var a1=R11(H,y);Qa(r,d,a1,g2(r))}else Qa(r,d,y,g2(r))}catch(c1){Qa(r,d,{then:function(){},status:"rejected",reason:c1},g2())}finally{P.p=E,R.T=N}}function L11(){}function Tm(r,d,h,y){if(r.tag!==5)throw Error(i(476));var _=$M(r).queue;TM(r,_,d,q,h===null?L11:function(){return MM(r),h(y)})}function $M(r){var d=r.memoizedState;if(d!==null)return d;d={memoizedState:q,baseState:q,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ji,lastRenderedState:q},next:null};var h={};return d.next={memoizedState:h,baseState:h,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ji,lastRenderedState:h},next:null},r.memoizedState=d,r=r.alternate,r!==null&&(r.memoizedState=d),d}function MM(r){var d=$M(r).next.queue;Qa(r,d,{},g2())}function $m(){return Ze(p9)}function NM(){return ce().memoizedState}function RM(){return ce().memoizedState}function j11(r){for(var d=r.return;d!==null;){switch(d.tag){case 24:case 3:var h=g2();r=x4(h);var y=_4(d,r,h);y!==null&&(h2(y,d,h),Ga(y,d,h)),d={cache:um()},r.payload=d;return}d=d.return}}function P11(r,d,h){var y=g2();h={lane:y,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null},as(r)?OM(d,h):(h=Xp(r,d,h,y),h!==null&&(h2(h,r,y),FM(h,d,y)))}function DM(r,d,h){var y=g2();Qa(r,d,h,y)}function Qa(r,d,h,y){var _={lane:y,revertLane:0,action:h,hasEagerState:!1,eagerState:null,next:null};if(as(r))OM(d,_);else{var E=r.alternate;if(r.lanes===0&&(E===null||E.lanes===0)&&(E=d.lastRenderedReducer,E!==null))try{var N=d.lastRenderedState,L=E(N,h);if(_.hasEagerState=!0,_.eagerState=L,r2(L,N))return H7(r,d,_,0),Lt===null&&q7(),!1}catch{}finally{}if(h=Xp(r,d,_,y),h!==null)return h2(h,r,y),FM(h,d,y),!0}return!1}function Mm(r,d,h,y){if(y={lane:2,revertLane:ry(),action:y,hasEagerState:!1,eagerState:null,next:null},as(r)){if(d)throw Error(i(479))}else d=Xp(r,h,y,2),d!==null&&h2(d,r,2)}function as(r){var d=r.alternate;return r===J1||d!==null&&d===J1}function OM(r,d){n5=es=!0;var h=r.pending;h===null?d.next=d:(d.next=h.next,h.next=d),r.pending=d}function FM(r,d,h){if((h&4194048)!==0){var y=d.lanes;y&=r.pendingLanes,h|=y,d.lanes=h,qT(r,h)}}var rs={readContext:Ze,use:is,useCallback:ne,useContext:ne,useEffect:ne,useImperativeHandle:ne,useLayoutEffect:ne,useInsertionEffect:ne,useMemo:ne,useReducer:ne,useRef:ne,useState:ne,useDebugValue:ne,useDeferredValue:ne,useTransition:ne,useSyncExternalStore:ne,useId:ne,useHostTransitionStatus:ne,useFormState:ne,useActionState:ne,useOptimistic:ne,useMemoCache:ne,useCacheRefresh:ne},zM={readContext:Ze,use:is,useCallback:function(r,d){return Un().memoizedState=[r,d===void 0?null:d],r},useContext:Ze,useEffect:bM,useImperativeHandle:function(r,d,h){h=h!=null?h.concat([r]):null,ls(4194308,4,EM.bind(null,d,r),h)},useLayoutEffect:function(r,d){return ls(4194308,4,r,d)},useInsertionEffect:function(r,d){ls(4,2,r,d)},useMemo:function(r,d){var h=Un();d=d===void 0?null:d;var y=r();if(i0){g3(!0);try{r()}finally{g3(!1)}}return h.memoizedState=[y,d],y},useReducer:function(r,d,h){var y=Un();if(h!==void 0){var _=h(d);if(i0){g3(!0);try{h(d)}finally{g3(!1)}}}else _=d;return y.memoizedState=y.baseState=_,r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:r,lastRenderedState:_},y.queue=r,r=r.dispatch=P11.bind(null,J1,r),[y.memoizedState,r]},useRef:function(r){var d=Un();return r={current:r},d.memoizedState=r},useState:function(r){r=Sm(r);var d=r.queue,h=DM.bind(null,J1,d);return d.dispatch=h,[r.memoizedState,h]},useDebugValue:Cm,useDeferredValue:function(r,d){var h=Un();return km(h,r,d)},useTransition:function(){var r=Sm(!1);return r=TM.bind(null,J1,r.queue,!0,!1),Un().memoizedState=r,[!1,r]},useSyncExternalStore:function(r,d,h){var y=J1,_=Un();if(yt){if(h===void 0)throw Error(i(407));h=h()}else{if(h=d(),Lt===null)throw Error(i(349));(ct&124)!==0||iM(y,d,h)}_.memoizedState=h;var E={value:h,getSnapshot:d};return _.queue=E,bM(uM.bind(null,y,E,r),[r]),y.flags|=2048,o5(9,us(),oM.bind(null,y,E,h,d),null),h},useId:function(){var r=Un(),d=Lt.identifierPrefix;if(yt){var h=Ki,y=Xi;h=(y&~(1<<32-a2(y)-1)).toString(32)+h,d="«"+d+"R"+h,h=ns++,0<h&&(d+="H"+h.toString(32)),d+="»"}else h=D11++,d="«"+d+"r"+h.toString(32)+"»";return r.memoizedState=d},useHostTransitionStatus:$m,useFormState:hM,useActionState:hM,useOptimistic:function(r){var d=Un();d.memoizedState=d.baseState=r;var h={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return d.queue=h,d=Mm.bind(null,J1,!0,h),h.dispatch=d,[r,d]},useMemoCache:_m,useCacheRefresh:function(){return Un().memoizedState=j11.bind(null,J1)}},LM={readContext:Ze,use:is,useCallback:AM,useContext:Ze,useEffect:xM,useImperativeHandle:SM,useInsertionEffect:_M,useLayoutEffect:wM,useMemo:CM,useReducer:os,useRef:vM,useState:function(){return os(Ji)},useDebugValue:Cm,useDeferredValue:function(r,d){var h=ce();return kM(h,kt.memoizedState,r,d)},useTransition:function(){var r=os(Ji)[0],d=ce().memoizedState;return[typeof r=="boolean"?r:Xa(r),d]},useSyncExternalStore:nM,useId:NM,useHostTransitionStatus:$m,useFormState:pM,useActionState:pM,useOptimistic:function(r,d){var h=ce();return rM(h,kt,r,d)},useMemoCache:_m,useCacheRefresh:RM},I11={readContext:Ze,use:is,useCallback:AM,useContext:Ze,useEffect:xM,useImperativeHandle:SM,useInsertionEffect:_M,useLayoutEffect:wM,useMemo:CM,useReducer:Em,useRef:vM,useState:function(){return Em(Ji)},useDebugValue:Cm,useDeferredValue:function(r,d){var h=ce();return kt===null?km(h,r,d):kM(h,kt.memoizedState,r,d)},useTransition:function(){var r=Em(Ji)[0],d=ce().memoizedState;return[typeof r=="boolean"?r:Xa(r),d]},useSyncExternalStore:nM,useId:NM,useHostTransitionStatus:$m,useFormState:yM,useActionState:yM,useOptimistic:function(r,d){var h=ce();return kt!==null?rM(h,kt,r,d):(h.baseState=r,[r,h.queue.dispatch])},useMemoCache:_m,useCacheRefresh:RM},u5=null,Za=0;function ss(r){var d=Za;return Za+=1,u5===null&&(u5=[]),V$(u5,r,d)}function Ja(r,d){d=d.props.ref,r.ref=d!==void 0?d:null}function cs(r,d){throw d.$$typeof===g?Error(i(525)):(r=Object.prototype.toString.call(d),Error(i(31,r==="[object Object]"?"object with keys {"+Object.keys(d).join(", ")+"}":r)))}function jM(r){var d=r._init;return d(r._payload)}function PM(r){function d(K,X){if(r){var Z=K.deletions;Z===null?(K.deletions=[X],K.flags|=16):Z.push(X)}}function h(K,X){if(!r)return null;for(;X!==null;)d(K,X),X=X.sibling;return null}function y(K){for(var X=new Map;K!==null;)K.key!==null?X.set(K.key,K):X.set(K.index,K),K=K.sibling;return X}function _(K,X){return K=Vi(K,X),K.index=0,K.sibling=null,K}function E(K,X,Z){return K.index=Z,r?(Z=K.alternate,Z!==null?(Z=Z.index,Z<X?(K.flags|=67108866,X):Z):(K.flags|=67108866,X)):(K.flags|=1048576,X)}function N(K){return r&&K.alternate===null&&(K.flags|=67108866),K}function L(K,X,Z,s1){return X===null||X.tag!==6?(X=Qp(Z,K.mode,s1),X.return=K,X):(X=_(X,Z),X.return=K,X)}function H(K,X,Z,s1){var k1=Z.type;return k1===v?a1(K,X,Z.props.children,s1,Z.key):X!==null&&(X.elementType===k1||typeof k1=="object"&&k1!==null&&k1.$$typeof===D&&jM(k1)===X.type)?(X=_(X,Z.props),Ja(X,Z),X.return=K,X):(X=W7(Z.type,Z.key,Z.props,null,K.mode,s1),Ja(X,Z),X.return=K,X)}function J(K,X,Z,s1){return X===null||X.tag!==4||X.stateNode.containerInfo!==Z.containerInfo||X.stateNode.implementation!==Z.implementation?(X=Zp(Z,K.mode,s1),X.return=K,X):(X=_(X,Z.children||[]),X.return=K,X)}function a1(K,X,Z,s1,k1){return X===null||X.tag!==7?(X=Xu(Z,K.mode,s1,k1),X.return=K,X):(X=_(X,Z),X.return=K,X)}function c1(K,X,Z){if(typeof X=="string"&&X!==""||typeof X=="number"||typeof X=="bigint")return X=Qp(""+X,K.mode,Z),X.return=K,X;if(typeof X=="object"&&X!==null){switch(X.$$typeof){case p:return Z=W7(X.type,X.key,X.props,null,K.mode,Z),Ja(Z,X),Z.return=K,Z;case m:return X=Zp(X,K.mode,Z),X.return=K,X;case D:var s1=X._init;return X=s1(X._payload),c1(K,X,Z)}if(j(X)||V(X))return X=Xu(X,K.mode,Z,null),X.return=K,X;if(typeof X.then=="function")return c1(K,ss(X),Z);if(X.$$typeof===A)return c1(K,K7(K,X),Z);cs(K,X)}return null}function t1(K,X,Z,s1){var k1=X!==null?X.key:null;if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return k1!==null?null:L(K,X,""+Z,s1);if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case p:return Z.key===k1?H(K,X,Z,s1):null;case m:return Z.key===k1?J(K,X,Z,s1):null;case D:return k1=Z._init,Z=k1(Z._payload),t1(K,X,Z,s1)}if(j(Z)||V(Z))return k1!==null?null:a1(K,X,Z,s1,null);if(typeof Z.then=="function")return t1(K,X,ss(Z),s1);if(Z.$$typeof===A)return t1(K,X,K7(K,Z),s1);cs(K,Z)}return null}function e1(K,X,Z,s1,k1){if(typeof s1=="string"&&s1!==""||typeof s1=="number"||typeof s1=="bigint")return K=K.get(Z)||null,L(X,K,""+s1,k1);if(typeof s1=="object"&&s1!==null){switch(s1.$$typeof){case p:return K=K.get(s1.key===null?Z:s1.key)||null,H(X,K,s1,k1);case m:return K=K.get(s1.key===null?Z:s1.key)||null,J(X,K,s1,k1);case D:var et=s1._init;return s1=et(s1._payload),e1(K,X,Z,s1,k1)}if(j(s1)||V(s1))return K=K.get(Z)||null,a1(X,K,s1,k1,null);if(typeof s1.then=="function")return e1(K,X,Z,ss(s1),k1);if(s1.$$typeof===A)return e1(K,X,Z,K7(X,s1),k1);cs(X,s1)}return null}function G1(K,X,Z,s1){for(var k1=null,et=null,O1=X,q1=X=0,Ce=null;O1!==null&&q1<Z.length;q1++){O1.index>q1?(Ce=O1,O1=null):Ce=O1.sibling;var ft=t1(K,O1,Z[q1],s1);if(ft===null){O1===null&&(O1=Ce);break}r&&O1&&ft.alternate===null&&d(K,O1),X=E(ft,X,q1),et===null?k1=ft:et.sibling=ft,et=ft,O1=Ce}if(q1===Z.length)return h(K,O1),yt&&Qu(K,q1),k1;if(O1===null){for(;q1<Z.length;q1++)O1=c1(K,Z[q1],s1),O1!==null&&(X=E(O1,X,q1),et===null?k1=O1:et.sibling=O1,et=O1);return yt&&Qu(K,q1),k1}for(O1=y(O1);q1<Z.length;q1++)Ce=e1(O1,K,q1,Z[q1],s1),Ce!==null&&(r&&Ce.alternate!==null&&O1.delete(Ce.key===null?q1:Ce.key),X=E(Ce,X,q1),et===null?k1=Ce:et.sibling=Ce,et=Ce);return r&&O1.forEach(function(j4){return d(K,j4)}),yt&&Qu(K,q1),k1}function U1(K,X,Z,s1){if(Z==null)throw Error(i(151));for(var k1=null,et=null,O1=X,q1=X=0,Ce=null,ft=Z.next();O1!==null&&!ft.done;q1++,ft=Z.next()){O1.index>q1?(Ce=O1,O1=null):Ce=O1.sibling;var j4=t1(K,O1,ft.value,s1);if(j4===null){O1===null&&(O1=Ce);break}r&&O1&&j4.alternate===null&&d(K,O1),X=E(j4,X,q1),et===null?k1=j4:et.sibling=j4,et=j4,O1=Ce}if(ft.done)return h(K,O1),yt&&Qu(K,q1),k1;if(O1===null){for(;!ft.done;q1++,ft=Z.next())ft=c1(K,ft.value,s1),ft!==null&&(X=E(ft,X,q1),et===null?k1=ft:et.sibling=ft,et=ft);return yt&&Qu(K,q1),k1}for(O1=y(O1);!ft.done;q1++,ft=Z.next())ft=e1(O1,K,q1,ft.value,s1),ft!==null&&(r&&ft.alternate!==null&&O1.delete(ft.key===null?q1:ft.key),X=E(ft,X,q1),et===null?k1=ft:et.sibling=ft,et=ft);return r&&O1.forEach(function(Bt1){return d(K,Bt1)}),yt&&Qu(K,q1),k1}function $t(K,X,Z,s1){if(typeof Z=="object"&&Z!==null&&Z.type===v&&Z.key===null&&(Z=Z.props.children),typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case p:t:{for(var k1=Z.key;X!==null;){if(X.key===k1){if(k1=Z.type,k1===v){if(X.tag===7){h(K,X.sibling),s1=_(X,Z.props.children),s1.return=K,K=s1;break t}}else if(X.elementType===k1||typeof k1=="object"&&k1!==null&&k1.$$typeof===D&&jM(k1)===X.type){h(K,X.sibling),s1=_(X,Z.props),Ja(s1,Z),s1.return=K,K=s1;break t}h(K,X);break}else d(K,X);X=X.sibling}Z.type===v?(s1=Xu(Z.props.children,K.mode,s1,Z.key),s1.return=K,K=s1):(s1=W7(Z.type,Z.key,Z.props,null,K.mode,s1),Ja(s1,Z),s1.return=K,K=s1)}return N(K);case m:t:{for(k1=Z.key;X!==null;){if(X.key===k1)if(X.tag===4&&X.stateNode.containerInfo===Z.containerInfo&&X.stateNode.implementation===Z.implementation){h(K,X.sibling),s1=_(X,Z.children||[]),s1.return=K,K=s1;break t}else{h(K,X);break}else d(K,X);X=X.sibling}s1=Zp(Z,K.mode,s1),s1.return=K,K=s1}return N(K);case D:return k1=Z._init,Z=k1(Z._payload),$t(K,X,Z,s1)}if(j(Z))return G1(K,X,Z,s1);if(V(Z)){if(k1=V(Z),typeof k1!="function")throw Error(i(150));return Z=k1.call(Z),U1(K,X,Z,s1)}if(typeof Z.then=="function")return $t(K,X,ss(Z),s1);if(Z.$$typeof===A)return $t(K,X,K7(K,Z),s1);cs(K,Z)}return typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint"?(Z=""+Z,X!==null&&X.tag===6?(h(K,X.sibling),s1=_(X,Z),s1.return=K,K=s1):(h(K,X),s1=Qp(Z,K.mode,s1),s1.return=K,K=s1),N(K)):h(K,X)}return function(K,X,Z,s1){try{Za=0;var k1=$t(K,X,Z,s1);return u5=null,k1}catch(O1){if(O1===qa||O1===Z7)throw O1;var et=s2(29,O1,null,K.mode);return et.lanes=s1,et.return=K,et}finally{}}}var l5=PM(!0),IM=PM(!1),j2=G(null),Q3=null;function E4(r){var d=r.alternate;n1(pe,pe.current&1),n1(j2,r),Q3===null&&(d===null||e5.current!==null||d.memoizedState!==null)&&(Q3=r)}function BM(r){if(r.tag===22){if(n1(pe,pe.current),n1(j2,r),Q3===null){var d=r.alternate;d!==null&&d.memoizedState!==null&&(Q3=r)}}else S4()}function S4(){n1(pe,pe.current),n1(j2,j2.current)}function to(r){Q(j2),Q3===r&&(Q3=null),Q(pe)}var pe=G(0);function ds(r){for(var d=r;d!==null;){if(d.tag===13){var h=d.memoizedState;if(h!==null&&(h=h.dehydrated,h===null||h.data==="$?"||xy(h)))return d}else if(d.tag===19&&d.memoizedProps.revealOrder!==void 0){if((d.flags&128)!==0)return d}else if(d.child!==null){d.child.return=d,d=d.child;continue}if(d===r)break;for(;d.sibling===null;){if(d.return===null||d.return===r)return null;d=d.return}d.sibling.return=d.return,d=d.sibling}return null}function Nm(r,d,h,y){d=r.memoizedState,h=h(y,d),h=h==null?d:f({},d,h),r.memoizedState=h,r.lanes===0&&(r.updateQueue.baseState=h)}var Rm={enqueueSetState:function(r,d,h){r=r._reactInternals;var y=g2(),_=x4(y);_.payload=d,h!=null&&(_.callback=h),d=_4(r,_,y),d!==null&&(h2(d,r,y),Ga(d,r,y))},enqueueReplaceState:function(r,d,h){r=r._reactInternals;var y=g2(),_=x4(y);_.tag=1,_.payload=d,h!=null&&(_.callback=h),d=_4(r,_,y),d!==null&&(h2(d,r,y),Ga(d,r,y))},enqueueForceUpdate:function(r,d){r=r._reactInternals;var h=g2(),y=x4(h);y.tag=2,d!=null&&(y.callback=d),d=_4(r,y,h),d!==null&&(h2(d,r,h),Ga(d,r,h))}};function UM(r,d,h,y,_,E,N){return r=r.stateNode,typeof r.shouldComponentUpdate=="function"?r.shouldComponentUpdate(y,E,N):d.prototype&&d.prototype.isPureReactComponent?!Fa(h,y)||!Fa(_,E):!0}function qM(r,d,h,y){r=d.state,typeof d.componentWillReceiveProps=="function"&&d.componentWillReceiveProps(h,y),typeof d.UNSAFE_componentWillReceiveProps=="function"&&d.UNSAFE_componentWillReceiveProps(h,y),d.state!==r&&Rm.enqueueReplaceState(d,d.state,null)}function o0(r,d){var h=d;if("ref"in d){h={};for(var y in d)y!=="ref"&&(h[y]=d[y])}if(r=r.defaultProps){h===d&&(h=f({},h));for(var _ in r)h[_]===void 0&&(h[_]=r[_])}return h}var fs=typeof reportError=="function"?reportError:function(r){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var d=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof r=="object"&&r!==null&&typeof r.message=="string"?String(r.message):String(r),error:r});if(!window.dispatchEvent(d))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",r);return}console.error(r)};function HM(r){fs(r)}function GM(r){console.error(r)}function WM(r){fs(r)}function gs(r,d){try{var h=r.onUncaughtError;h(d.value,{componentStack:d.stack})}catch(y){setTimeout(function(){throw y})}}function YM(r,d,h){try{var y=r.onCaughtError;y(h.value,{componentStack:h.stack,errorBoundary:d.tag===1?d.stateNode:null})}catch(_){setTimeout(function(){throw _})}}function Dm(r,d,h){return h=x4(h),h.tag=3,h.payload={element:null},h.callback=function(){gs(r,d)},h}function VM(r){return r=x4(r),r.tag=3,r}function XM(r,d,h,y){var _=h.type.getDerivedStateFromError;if(typeof _=="function"){var E=y.value;r.payload=function(){return _(E)},r.callback=function(){YM(d,h,y)}}var N=h.stateNode;N!==null&&typeof N.componentDidCatch=="function"&&(r.callback=function(){YM(d,h,y),typeof _!="function"&&(M4===null?M4=new Set([this]):M4.add(this));var L=y.stack;this.componentDidCatch(y.value,{componentStack:L!==null?L:""})})}function B11(r,d,h,y,_){if(h.flags|=32768,y!==null&&typeof y=="object"&&typeof y.then=="function"){if(d=h.alternate,d!==null&&Ia(d,h,_,!0),h=j2.current,h!==null){switch(h.tag){case 13:return Q3===null?iy():h.alternate===null&&Qt===0&&(Qt=3),h.flags&=-257,h.flags|=65536,h.lanes=_,y===rm?h.flags|=16384:(d=h.updateQueue,d===null?h.updateQueue=new Set([y]):d.add(y),uy(r,y,_)),!1;case 22:return h.flags|=65536,y===rm?h.flags|=16384:(d=h.updateQueue,d===null?(d={transitions:null,markerInstances:null,retryQueue:new Set([y])},h.updateQueue=d):(h=d.retryQueue,h===null?d.retryQueue=new Set([y]):h.add(y)),uy(r,y,_)),!1}throw Error(i(435,h.tag))}return uy(r,y,_),iy(),!1}if(yt)return d=j2.current,d!==null?((d.flags&65536)===0&&(d.flags|=256),d.flags|=65536,d.lanes=_,y!==em&&(r=Error(i(422),{cause:y}),Pa(O2(r,h)))):(y!==em&&(d=Error(i(423),{cause:y}),Pa(O2(d,h))),r=r.current.alternate,r.flags|=65536,_&=-_,r.lanes|=_,y=O2(y,h),_=Dm(r.stateNode,y,_),dm(r,_),Qt!==4&&(Qt=2)),!1;var E=Error(i(520),{cause:y});if(E=O2(E,h),l9===null?l9=[E]:l9.push(E),Qt!==4&&(Qt=2),d===null)return!0;y=O2(y,h),h=d;do{switch(h.tag){case 3:return h.flags|=65536,r=_&-_,h.lanes|=r,r=Dm(h.stateNode,y,r),dm(h,r),!1;case 1:if(d=h.type,E=h.stateNode,(h.flags&128)===0&&(typeof d.getDerivedStateFromError=="function"||E!==null&&typeof E.componentDidCatch=="function"&&(M4===null||!M4.has(E))))return h.flags|=65536,_&=-_,h.lanes|=_,_=VM(_),XM(_,r,h,y),dm(h,_),!1}h=h.return}while(h!==null);return!1}var KM=Error(i(461)),Se=!1;function je(r,d,h,y){d.child=r===null?IM(d,null,h,y):l5(d,r.child,h,y)}function QM(r,d,h,y,_){h=h.render;var E=d.ref;if("ref"in y){var N={};for(var L in y)L!=="ref"&&(N[L]=y[L])}else N=y;return e0(d),y=mm(r,d,h,N,E,_),L=ym(),r!==null&&!Se?(vm(r,d,_),eo(r,d,_)):(yt&&L&&Jp(d),d.flags|=1,je(r,d,y,_),d.child)}function ZM(r,d,h,y,_){if(r===null){var E=h.type;return typeof E=="function"&&!Kp(E)&&E.defaultProps===void 0&&h.compare===null?(d.tag=15,d.type=E,JM(r,d,E,y,_)):(r=W7(h.type,null,y,d,d.mode,_),r.ref=d.ref,r.return=d,d.child=r)}if(E=r.child,!Bm(r,_)){var N=E.memoizedProps;if(h=h.compare,h=h!==null?h:Fa,h(N,y)&&r.ref===d.ref)return eo(r,d,_)}return d.flags|=1,r=Vi(E,y),r.ref=d.ref,r.return=d,d.child=r}function JM(r,d,h,y,_){if(r!==null){var E=r.memoizedProps;if(Fa(E,y)&&r.ref===d.ref)if(Se=!1,d.pendingProps=y=E,Bm(r,_))(r.flags&131072)!==0&&(Se=!0);else return d.lanes=r.lanes,eo(r,d,_)}return Om(r,d,h,y,_)}function tN(r,d,h){var y=d.pendingProps,_=y.children,E=r!==null?r.memoizedState:null;if(y.mode==="hidden"){if((d.flags&128)!==0){if(y=E!==null?E.baseLanes|h:h,r!==null){for(_=d.child=r.child,E=0;_!==null;)E=E|_.lanes|_.childLanes,_=_.sibling;d.childLanes=E&~y}else d.childLanes=0,d.child=null;return eN(r,d,y,h)}if((h&536870912)!==0)d.memoizedState={baseLanes:0,cachePool:null},r!==null&&Q7(d,E!==null?E.cachePool:null),E!==null?J$(d,E):gm(),BM(d);else return d.lanes=d.childLanes=536870912,eN(r,d,E!==null?E.baseLanes|h:h,h)}else E!==null?(Q7(d,E.cachePool),J$(d,E),S4(),d.memoizedState=null):(r!==null&&Q7(d,null),gm(),S4());return je(r,d,_,h),d.child}function eN(r,d,h,y){var _=am();return _=_===null?null:{parent:he._currentValue,pool:_},d.memoizedState={baseLanes:h,cachePool:_},r!==null&&Q7(d,null),gm(),BM(d),r!==null&&Ia(r,d,y,!0),null}function hs(r,d){var h=d.ref;if(h===null)r!==null&&r.ref!==null&&(d.flags|=4194816);else{if(typeof h!="function"&&typeof h!="object")throw Error(i(284));(r===null||r.ref!==h)&&(d.flags|=4194816)}}function Om(r,d,h,y,_){return e0(d),h=mm(r,d,h,y,void 0,_),y=ym(),r!==null&&!Se?(vm(r,d,_),eo(r,d,_)):(yt&&y&&Jp(d),d.flags|=1,je(r,d,h,_),d.child)}function nN(r,d,h,y,_,E){return e0(d),d.updateQueue=null,h=eM(d,y,h,_),tM(r),y=ym(),r!==null&&!Se?(vm(r,d,E),eo(r,d,E)):(yt&&y&&Jp(d),d.flags|=1,je(r,d,h,E),d.child)}function iN(r,d,h,y,_){if(e0(d),d.stateNode===null){var E=K6,N=h.contextType;typeof N=="object"&&N!==null&&(E=Ze(N)),E=new h(y,E),d.memoizedState=E.state!==null&&E.state!==void 0?E.state:null,E.updater=Rm,d.stateNode=E,E._reactInternals=d,E=d.stateNode,E.props=y,E.state=d.memoizedState,E.refs={},sm(d),N=h.contextType,E.context=typeof N=="object"&&N!==null?Ze(N):K6,E.state=d.memoizedState,N=h.getDerivedStateFromProps,typeof N=="function"&&(Nm(d,h,N,y),E.state=d.memoizedState),typeof h.getDerivedStateFromProps=="function"||typeof E.getSnapshotBeforeUpdate=="function"||typeof E.UNSAFE_componentWillMount!="function"&&typeof E.componentWillMount!="function"||(N=E.state,typeof E.componentWillMount=="function"&&E.componentWillMount(),typeof E.UNSAFE_componentWillMount=="function"&&E.UNSAFE_componentWillMount(),N!==E.state&&Rm.enqueueReplaceState(E,E.state,null),Ya(d,y,E,_),Wa(),E.state=d.memoizedState),typeof E.componentDidMount=="function"&&(d.flags|=4194308),y=!0}else if(r===null){E=d.stateNode;var L=d.memoizedProps,H=o0(h,L);E.props=H;var J=E.context,a1=h.contextType;N=K6,typeof a1=="object"&&a1!==null&&(N=Ze(a1));var c1=h.getDerivedStateFromProps;a1=typeof c1=="function"||typeof E.getSnapshotBeforeUpdate=="function",L=d.pendingProps!==L,a1||typeof E.UNSAFE_componentWillReceiveProps!="function"&&typeof E.componentWillReceiveProps!="function"||(L||J!==N)&&qM(d,E,y,N),b4=!1;var t1=d.memoizedState;E.state=t1,Ya(d,y,E,_),Wa(),J=d.memoizedState,L||t1!==J||b4?(typeof c1=="function"&&(Nm(d,h,c1,y),J=d.memoizedState),(H=b4||UM(d,h,H,y,t1,J,N))?(a1||typeof E.UNSAFE_componentWillMount!="function"&&typeof E.componentWillMount!="function"||(typeof E.componentWillMount=="function"&&E.componentWillMount(),typeof E.UNSAFE_componentWillMount=="function"&&E.UNSAFE_componentWillMount()),typeof E.componentDidMount=="function"&&(d.flags|=4194308)):(typeof E.componentDidMount=="function"&&(d.flags|=4194308),d.memoizedProps=y,d.memoizedState=J),E.props=y,E.state=J,E.context=N,y=H):(typeof E.componentDidMount=="function"&&(d.flags|=4194308),y=!1)}else{E=d.stateNode,cm(r,d),N=d.memoizedProps,a1=o0(h,N),E.props=a1,c1=d.pendingProps,t1=E.context,J=h.contextType,H=K6,typeof J=="object"&&J!==null&&(H=Ze(J)),L=h.getDerivedStateFromProps,(J=typeof L=="function"||typeof E.getSnapshotBeforeUpdate=="function")||typeof E.UNSAFE_componentWillReceiveProps!="function"&&typeof E.componentWillReceiveProps!="function"||(N!==c1||t1!==H)&&qM(d,E,y,H),b4=!1,t1=d.memoizedState,E.state=t1,Ya(d,y,E,_),Wa();var e1=d.memoizedState;N!==c1||t1!==e1||b4||r!==null&&r.dependencies!==null&&X7(r.dependencies)?(typeof L=="function"&&(Nm(d,h,L,y),e1=d.memoizedState),(a1=b4||UM(d,h,a1,y,t1,e1,H)||r!==null&&r.dependencies!==null&&X7(r.dependencies))?(J||typeof E.UNSAFE_componentWillUpdate!="function"&&typeof E.componentWillUpdate!="function"||(typeof E.componentWillUpdate=="function"&&E.componentWillUpdate(y,e1,H),typeof E.UNSAFE_componentWillUpdate=="function"&&E.UNSAFE_componentWillUpdate(y,e1,H)),typeof E.componentDidUpdate=="function"&&(d.flags|=4),typeof E.getSnapshotBeforeUpdate=="function"&&(d.flags|=1024)):(typeof E.componentDidUpdate!="function"||N===r.memoizedProps&&t1===r.memoizedState||(d.flags|=4),typeof E.getSnapshotBeforeUpdate!="function"||N===r.memoizedProps&&t1===r.memoizedState||(d.flags|=1024),d.memoizedProps=y,d.memoizedState=e1),E.props=y,E.state=e1,E.context=H,y=a1):(typeof E.componentDidUpdate!="function"||N===r.memoizedProps&&t1===r.memoizedState||(d.flags|=4),typeof E.getSnapshotBeforeUpdate!="function"||N===r.memoizedProps&&t1===r.memoizedState||(d.flags|=1024),y=!1)}return E=y,hs(r,d),y=(d.flags&128)!==0,E||y?(E=d.stateNode,h=y&&typeof h.getDerivedStateFromError!="function"?null:E.render(),d.flags|=1,r!==null&&y?(d.child=l5(d,r.child,null,_),d.child=l5(d,null,h,_)):je(r,d,h,_),d.memoizedState=E.state,r=d.child):r=eo(r,d,_),r}function oN(r,d,h,y){return ja(),d.flags|=256,je(r,d,h,y),d.child}var Fm={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function zm(r){return{baseLanes:r,cachePool:G$()}}function Lm(r,d,h){return r=r!==null?r.childLanes&~h:0,d&&(r|=P2),r}function uN(r,d,h){var y=d.pendingProps,_=!1,E=(d.flags&128)!==0,N;if((N=E)||(N=r!==null&&r.memoizedState===null?!1:(pe.current&2)!==0),N&&(_=!0,d.flags&=-129),N=(d.flags&32)!==0,d.flags&=-33,r===null){if(yt){if(_?E4(d):S4(),yt){var L=Kt,H;if(H=L){t:{for(H=L,L=K3;H.nodeType!==8;){if(!L){L=null;break t}if(H=m3(H.nextSibling),H===null){L=null;break t}}L=H}L!==null?(d.memoizedState={dehydrated:L,treeContext:Ku!==null?{id:Xi,overflow:Ki}:null,retryLane:536870912,hydrationErrors:null},H=s2(18,null,null,0),H.stateNode=L,H.return=d,d.child=H,xn=d,Kt=null,H=!0):H=!1}H||Ju(d)}if(L=d.memoizedState,L!==null&&(L=L.dehydrated,L!==null))return xy(L)?d.lanes=32:d.lanes=536870912,null;to(d)}return L=y.children,y=y.fallback,_?(S4(),_=d.mode,L=ps({mode:"hidden",children:L},_),y=Xu(y,_,h,null),L.return=d,y.return=d,L.sibling=y,d.child=L,_=d.child,_.memoizedState=zm(h),_.childLanes=Lm(r,N,h),d.memoizedState=Fm,y):(E4(d),jm(d,L))}if(H=r.memoizedState,H!==null&&(L=H.dehydrated,L!==null)){if(E)d.flags&256?(E4(d),d.flags&=-257,d=Pm(r,d,h)):d.memoizedState!==null?(S4(),d.child=r.child,d.flags|=128,d=null):(S4(),_=y.fallback,L=d.mode,y=ps({mode:"visible",children:y.children},L),_=Xu(_,L,h,null),_.flags|=2,y.return=d,_.return=d,y.sibling=_,d.child=y,l5(d,r.child,null,h),y=d.child,y.memoizedState=zm(h),y.childLanes=Lm(r,N,h),d.memoizedState=Fm,d=_);else if(E4(d),xy(L)){if(N=L.nextSibling&&L.nextSibling.dataset,N)var J=N.dgst;N=J,y=Error(i(419)),y.stack="",y.digest=N,Pa({value:y,source:null,stack:null}),d=Pm(r,d,h)}else if(Se||Ia(r,d,h,!1),N=(h&r.childLanes)!==0,Se||N){if(N=Lt,N!==null&&(y=h&-h,y=(y&42)!==0?1:_p(y),y=(y&(N.suspendedLanes|h))!==0?0:y,y!==0&&y!==H.retryLane))throw H.retryLane=y,X6(r,y),h2(N,r,y),KM;L.data==="$?"||iy(),d=Pm(r,d,h)}else L.data==="$?"?(d.flags|=192,d.child=r.child,d=null):(r=H.treeContext,Kt=m3(L.nextSibling),xn=d,yt=!0,Zu=null,K3=!1,r!==null&&(z2[L2++]=Xi,z2[L2++]=Ki,z2[L2++]=Ku,Xi=r.id,Ki=r.overflow,Ku=d),d=jm(d,y.children),d.flags|=4096);return d}return _?(S4(),_=y.fallback,L=d.mode,H=r.child,J=H.sibling,y=Vi(H,{mode:"hidden",children:y.children}),y.subtreeFlags=H.subtreeFlags&65011712,J!==null?_=Vi(J,_):(_=Xu(_,L,h,null),_.flags|=2),_.return=d,y.return=d,y.sibling=_,d.child=y,y=_,_=d.child,L=r.child.memoizedState,L===null?L=zm(h):(H=L.cachePool,H!==null?(J=he._currentValue,H=H.parent!==J?{parent:J,pool:J}:H):H=G$(),L={baseLanes:L.baseLanes|h,cachePool:H}),_.memoizedState=L,_.childLanes=Lm(r,N,h),d.memoizedState=Fm,y):(E4(d),h=r.child,r=h.sibling,h=Vi(h,{mode:"visible",children:y.children}),h.return=d,h.sibling=null,r!==null&&(N=d.deletions,N===null?(d.deletions=[r],d.flags|=16):N.push(r)),d.child=h,d.memoizedState=null,h)}function jm(r,d){return d=ps({mode:"visible",children:d},r.mode),d.return=r,r.child=d}function ps(r,d){return r=s2(22,r,null,d),r.lanes=0,r.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},r}function Pm(r,d,h){return l5(d,r.child,null,h),r=jm(d,d.pendingProps.children),r.flags|=2,d.memoizedState=null,r}function lN(r,d,h){r.lanes|=d;var y=r.alternate;y!==null&&(y.lanes|=d),im(r.return,d,h)}function Im(r,d,h,y,_){var E=r.memoizedState;E===null?r.memoizedState={isBackwards:d,rendering:null,renderingStartTime:0,last:y,tail:h,tailMode:_}:(E.isBackwards=d,E.rendering=null,E.renderingStartTime=0,E.last=y,E.tail=h,E.tailMode=_)}function aN(r,d,h){var y=d.pendingProps,_=y.revealOrder,E=y.tail;if(je(r,d,y.children,h),y=pe.current,(y&2)!==0)y=y&1|2,d.flags|=128;else{if(r!==null&&(r.flags&128)!==0)t:for(r=d.child;r!==null;){if(r.tag===13)r.memoizedState!==null&&lN(r,h,d);else if(r.tag===19)lN(r,h,d);else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===d)break t;for(;r.sibling===null;){if(r.return===null||r.return===d)break t;r=r.return}r.sibling.return=r.return,r=r.sibling}y&=1}switch(n1(pe,y),_){case"forwards":for(h=d.child,_=null;h!==null;)r=h.alternate,r!==null&&ds(r)===null&&(_=h),h=h.sibling;h=_,h===null?(_=d.child,d.child=null):(_=h.sibling,h.sibling=null),Im(d,!1,_,h,E);break;case"backwards":for(h=null,_=d.child,d.child=null;_!==null;){if(r=_.alternate,r!==null&&ds(r)===null){d.child=_;break}r=_.sibling,_.sibling=h,h=_,_=r}Im(d,!0,h,null,E);break;case"together":Im(d,!1,null,null,void 0);break;default:d.memoizedState=null}return d.child}function eo(r,d,h){if(r!==null&&(d.dependencies=r.dependencies),$4|=d.lanes,(h&d.childLanes)===0)if(r!==null){if(Ia(r,d,h,!1),(h&d.childLanes)===0)return null}else return null;if(r!==null&&d.child!==r.child)throw Error(i(153));if(d.child!==null){for(r=d.child,h=Vi(r,r.pendingProps),d.child=h,h.return=d;r.sibling!==null;)r=r.sibling,h=h.sibling=Vi(r,r.pendingProps),h.return=d;h.sibling=null}return d.child}function Bm(r,d){return(r.lanes&d)!==0?!0:(r=r.dependencies,!!(r!==null&&X7(r)))}function U11(r,d,h){switch(d.tag){case 3:M1(d,d.stateNode.containerInfo),v4(d,he,r.memoizedState.cache),ja();break;case 27:case 5:D1(d);break;case 4:M1(d,d.stateNode.containerInfo);break;case 10:v4(d,d.type,d.memoizedProps.value);break;case 13:var y=d.memoizedState;if(y!==null)return y.dehydrated!==null?(E4(d),d.flags|=128,null):(h&d.child.childLanes)!==0?uN(r,d,h):(E4(d),r=eo(r,d,h),r!==null?r.sibling:null);E4(d);break;case 19:var _=(r.flags&128)!==0;if(y=(h&d.childLanes)!==0,y||(Ia(r,d,h,!1),y=(h&d.childLanes)!==0),_){if(y)return aN(r,d,h);d.flags|=128}if(_=d.memoizedState,_!==null&&(_.rendering=null,_.tail=null,_.lastEffect=null),n1(pe,pe.current),y)break;return null;case 22:case 23:return d.lanes=0,tN(r,d,h);case 24:v4(d,he,r.memoizedState.cache)}return eo(r,d,h)}function rN(r,d,h){if(r!==null)if(r.memoizedProps!==d.pendingProps)Se=!0;else{if(!Bm(r,h)&&(d.flags&128)===0)return Se=!1,U11(r,d,h);Se=(r.flags&131072)!==0}else Se=!1,yt&&(d.flags&1048576)!==0&&j$(d,V7,d.index);switch(d.lanes=0,d.tag){case 16:t:{r=d.pendingProps;var y=d.elementType,_=y._init;if(y=_(y._payload),d.type=y,typeof y=="function")Kp(y)?(r=o0(y,r),d.tag=1,d=iN(null,d,y,r,h)):(d.tag=0,d=Om(null,d,y,r,h));else{if(y!=null){if(_=y.$$typeof,_===C){d.tag=11,d=QM(null,d,y,r,h);break t}else if(_===T){d.tag=14,d=ZM(null,d,y,r,h);break t}}throw d=O(y)||y,Error(i(306,d,""))}}return d;case 0:return Om(r,d,d.type,d.pendingProps,h);case 1:return y=d.type,_=o0(y,d.pendingProps),iN(r,d,y,_,h);case 3:t:{if(M1(d,d.stateNode.containerInfo),r===null)throw Error(i(387));y=d.pendingProps;var E=d.memoizedState;_=E.element,cm(r,d),Ya(d,y,null,h);var N=d.memoizedState;if(y=N.cache,v4(d,he,y),y!==E.cache&&om(d,[he],h,!0),Wa(),y=N.element,E.isDehydrated)if(E={element:y,isDehydrated:!1,cache:N.cache},d.updateQueue.baseState=E,d.memoizedState=E,d.flags&256){d=oN(r,d,y,h);break t}else if(y!==_){_=O2(Error(i(424)),d),Pa(_),d=oN(r,d,y,h);break t}else{switch(r=d.stateNode.containerInfo,r.nodeType){case 9:r=r.body;break;default:r=r.nodeName==="HTML"?r.ownerDocument.body:r}for(Kt=m3(r.firstChild),xn=d,yt=!0,Zu=null,K3=!0,h=IM(d,null,y,h),d.child=h;h;)h.flags=h.flags&-3|4096,h=h.sibling}else{if(ja(),y===_){d=eo(r,d,h);break t}je(r,d,y,h)}d=d.child}return d;case 26:return hs(r,d),r===null?(h=fR(d.type,null,d.pendingProps,null))?d.memoizedState=h:yt||(h=d.type,r=d.pendingProps,y=$s(x1.current).createElement(h),y[Qe]=d,y[In]=r,Ie(y,h,r),Ee(y),d.stateNode=y):d.memoizedState=fR(d.type,r.memoizedProps,d.pendingProps,r.memoizedState),null;case 27:return D1(d),r===null&&yt&&(y=d.stateNode=sR(d.type,d.pendingProps,x1.current),xn=d,K3=!0,_=Kt,D4(d.type)?(_y=_,Kt=m3(y.firstChild)):Kt=_),je(r,d,d.pendingProps.children,h),hs(r,d),r===null&&(d.flags|=4194304),d.child;case 5:return r===null&&yt&&((_=y=Kt)&&(y=mt1(y,d.type,d.pendingProps,K3),y!==null?(d.stateNode=y,xn=d,Kt=m3(y.firstChild),K3=!1,_=!0):_=!1),_||Ju(d)),D1(d),_=d.type,E=d.pendingProps,N=r!==null?r.memoizedProps:null,y=E.children,yy(_,E)?y=null:N!==null&&yy(_,N)&&(d.flags|=32),d.memoizedState!==null&&(_=mm(r,d,O11,null,null,h),p9._currentValue=_),hs(r,d),je(r,d,y,h),d.child;case 6:return r===null&&yt&&((r=h=Kt)&&(h=yt1(h,d.pendingProps,K3),h!==null?(d.stateNode=h,xn=d,Kt=null,r=!0):r=!1),r||Ju(d)),null;case 13:return uN(r,d,h);case 4:return M1(d,d.stateNode.containerInfo),y=d.pendingProps,r===null?d.child=l5(d,null,y,h):je(r,d,y,h),d.child;case 11:return QM(r,d,d.type,d.pendingProps,h);case 7:return je(r,d,d.pendingProps,h),d.child;case 8:return je(r,d,d.pendingProps.children,h),d.child;case 12:return je(r,d,d.pendingProps.children,h),d.child;case 10:return y=d.pendingProps,v4(d,d.type,y.value),je(r,d,y.children,h),d.child;case 9:return _=d.type._context,y=d.pendingProps.children,e0(d),_=Ze(_),y=y(_),d.flags|=1,je(r,d,y,h),d.child;case 14:return ZM(r,d,d.type,d.pendingProps,h);case 15:return JM(r,d,d.type,d.pendingProps,h);case 19:return aN(r,d,h);case 31:return y=d.pendingProps,h=d.mode,y={mode:y.mode,children:y.children},r===null?(h=ps(y,h),h.ref=d.ref,d.child=h,h.return=d,d=h):(h=Vi(r.child,y),h.ref=d.ref,d.child=h,h.return=d,d=h),d;case 22:return tN(r,d,h);case 24:return e0(d),y=Ze(he),r===null?(_=am(),_===null&&(_=Lt,E=um(),_.pooledCache=E,E.refCount++,E!==null&&(_.pooledCacheLanes|=h),_=E),d.memoizedState={parent:y,cache:_},sm(d),v4(d,he,_)):((r.lanes&h)!==0&&(cm(r,d),Ya(d,null,null,h),Wa()),_=r.memoizedState,E=d.memoizedState,_.parent!==y?(_={parent:y,cache:y},d.memoizedState=_,d.lanes===0&&(d.memoizedState=d.updateQueue.baseState=_),v4(d,he,y)):(y=E.cache,v4(d,he,y),y!==_.cache&&om(d,[he],h,!0))),je(r,d,d.pendingProps.children,h),d.child;case 29:throw d.pendingProps}throw Error(i(156,d.tag))}function no(r){r.flags|=4}function sN(r,d){if(d.type!=="stylesheet"||(d.state.loading&4)!==0)r.flags&=-16777217;else if(r.flags|=16777216,!yR(d)){if(d=j2.current,d!==null&&((ct&4194048)===ct?Q3!==null:(ct&62914560)!==ct&&(ct&536870912)===0||d!==Q3))throw Ha=rm,W$;r.flags|=8192}}function ms(r,d){d!==null&&(r.flags|=4),r.flags&16384&&(d=r.tag!==22?BT():536870912,r.lanes|=d,c5|=d)}function t9(r,d){if(!yt)switch(r.tailMode){case"hidden":d=r.tail;for(var h=null;d!==null;)d.alternate!==null&&(h=d),d=d.sibling;h===null?r.tail=null:h.sibling=null;break;case"collapsed":h=r.tail;for(var y=null;h!==null;)h.alternate!==null&&(y=h),h=h.sibling;y===null?d||r.tail===null?r.tail=null:r.tail.sibling=null:y.sibling=null}}function Gt(r){var d=r.alternate!==null&&r.alternate.child===r.child,h=0,y=0;if(d)for(var _=r.child;_!==null;)h|=_.lanes|_.childLanes,y|=_.subtreeFlags&65011712,y|=_.flags&65011712,_.return=r,_=_.sibling;else for(_=r.child;_!==null;)h|=_.lanes|_.childLanes,y|=_.subtreeFlags,y|=_.flags,_.return=r,_=_.sibling;return r.subtreeFlags|=y,r.childLanes=h,d}function q11(r,d,h){var y=d.pendingProps;switch(tm(d),d.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Gt(d),null;case 1:return Gt(d),null;case 3:return h=d.stateNode,y=null,r!==null&&(y=r.memoizedState.cache),d.memoizedState.cache!==y&&(d.flags|=2048),Zi(he),v1(),h.pendingContext&&(h.context=h.pendingContext,h.pendingContext=null),(r===null||r.child===null)&&(La(d)?no(d):r===null||r.memoizedState.isDehydrated&&(d.flags&256)===0||(d.flags|=1024,B$())),Gt(d),null;case 26:return h=d.memoizedState,r===null?(no(d),h!==null?(Gt(d),sN(d,h)):(Gt(d),d.flags&=-16777217)):h?h!==r.memoizedState?(no(d),Gt(d),sN(d,h)):(Gt(d),d.flags&=-16777217):(r.memoizedProps!==y&&no(d),Gt(d),d.flags&=-16777217),null;case 27:B1(d),h=x1.current;var _=d.type;if(r!==null&&d.stateNode!=null)r.memoizedProps!==y&&no(d);else{if(!y){if(d.stateNode===null)throw Error(i(166));return Gt(d),null}r=l1.current,La(d)?P$(d):(r=sR(_,y,h),d.stateNode=r,no(d))}return Gt(d),null;case 5:if(B1(d),h=d.type,r!==null&&d.stateNode!=null)r.memoizedProps!==y&&no(d);else{if(!y){if(d.stateNode===null)throw Error(i(166));return Gt(d),null}if(r=l1.current,La(d))P$(d);else{switch(_=$s(x1.current),r){case 1:r=_.createElementNS("http://www.w3.org/2000/svg",h);break;case 2:r=_.createElementNS("http://www.w3.org/1998/Math/MathML",h);break;default:switch(h){case"svg":r=_.createElementNS("http://www.w3.org/2000/svg",h);break;case"math":r=_.createElementNS("http://www.w3.org/1998/Math/MathML",h);break;case"script":r=_.createElement("div"),r.innerHTML="<script><\/script>",r=r.removeChild(r.firstChild);break;case"select":r=typeof y.is=="string"?_.createElement("select",{is:y.is}):_.createElement("select"),y.multiple?r.multiple=!0:y.size&&(r.size=y.size);break;default:r=typeof y.is=="string"?_.createElement(h,{is:y.is}):_.createElement(h)}}r[Qe]=d,r[In]=y;t:for(_=d.child;_!==null;){if(_.tag===5||_.tag===6)r.appendChild(_.stateNode);else if(_.tag!==4&&_.tag!==27&&_.child!==null){_.child.return=_,_=_.child;continue}if(_===d)break t;for(;_.sibling===null;){if(_.return===null||_.return===d)break t;_=_.return}_.sibling.return=_.return,_=_.sibling}d.stateNode=r;t:switch(Ie(r,h,y),h){case"button":case"input":case"select":case"textarea":r=!!y.autoFocus;break t;case"img":r=!0;break t;default:r=!1}r&&no(d)}}return Gt(d),d.flags&=-16777217,null;case 6:if(r&&d.stateNode!=null)r.memoizedProps!==y&&no(d);else{if(typeof y!="string"&&d.stateNode===null)throw Error(i(166));if(r=x1.current,La(d)){if(r=d.stateNode,h=d.memoizedProps,y=null,_=xn,_!==null)switch(_.tag){case 27:case 5:y=_.memoizedProps}r[Qe]=d,r=!!(r.nodeValue===h||y!==null&&y.suppressHydrationWarning===!0||nR(r.nodeValue,h)),r||Ju(d)}else r=$s(r).createTextNode(y),r[Qe]=d,d.stateNode=r}return Gt(d),null;case 13:if(y=d.memoizedState,r===null||r.memoizedState!==null&&r.memoizedState.dehydrated!==null){if(_=La(d),y!==null&&y.dehydrated!==null){if(r===null){if(!_)throw Error(i(318));if(_=d.memoizedState,_=_!==null?_.dehydrated:null,!_)throw Error(i(317));_[Qe]=d}else ja(),(d.flags&128)===0&&(d.memoizedState=null),d.flags|=4;Gt(d),_=!1}else _=B$(),r!==null&&r.memoizedState!==null&&(r.memoizedState.hydrationErrors=_),_=!0;if(!_)return d.flags&256?(to(d),d):(to(d),null)}if(to(d),(d.flags&128)!==0)return d.lanes=h,d;if(h=y!==null,r=r!==null&&r.memoizedState!==null,h){y=d.child,_=null,y.alternate!==null&&y.alternate.memoizedState!==null&&y.alternate.memoizedState.cachePool!==null&&(_=y.alternate.memoizedState.cachePool.pool);var E=null;y.memoizedState!==null&&y.memoizedState.cachePool!==null&&(E=y.memoizedState.cachePool.pool),E!==_&&(y.flags|=2048)}return h!==r&&h&&(d.child.flags|=8192),ms(d,d.updateQueue),Gt(d),null;case 4:return v1(),r===null&&fy(d.stateNode.containerInfo),Gt(d),null;case 10:return Zi(d.type),Gt(d),null;case 19:if(Q(pe),_=d.memoizedState,_===null)return Gt(d),null;if(y=(d.flags&128)!==0,E=_.rendering,E===null)if(y)t9(_,!1);else{if(Qt!==0||r!==null&&(r.flags&128)!==0)for(r=d.child;r!==null;){if(E=ds(r),E!==null){for(d.flags|=128,t9(_,!1),r=E.updateQueue,d.updateQueue=r,ms(d,r),d.subtreeFlags=0,r=h,h=d.child;h!==null;)L$(h,r),h=h.sibling;return n1(pe,pe.current&1|2),d.child}r=r.sibling}_.tail!==null&&C1()>bs&&(d.flags|=128,y=!0,t9(_,!1),d.lanes=4194304)}else{if(!y)if(r=ds(E),r!==null){if(d.flags|=128,y=!0,r=r.updateQueue,d.updateQueue=r,ms(d,r),t9(_,!0),_.tail===null&&_.tailMode==="hidden"&&!E.alternate&&!yt)return Gt(d),null}else 2*C1()-_.renderingStartTime>bs&&h!==536870912&&(d.flags|=128,y=!0,t9(_,!1),d.lanes=4194304);_.isBackwards?(E.sibling=d.child,d.child=E):(r=_.last,r!==null?r.sibling=E:d.child=E,_.last=E)}return _.tail!==null?(d=_.tail,_.rendering=d,_.tail=d.sibling,_.renderingStartTime=C1(),d.sibling=null,r=pe.current,n1(pe,y?r&1|2:r&1),d):(Gt(d),null);case 22:case 23:return to(d),hm(),y=d.memoizedState!==null,r!==null?r.memoizedState!==null!==y&&(d.flags|=8192):y&&(d.flags|=8192),y?(h&536870912)!==0&&(d.flags&128)===0&&(Gt(d),d.subtreeFlags&6&&(d.flags|=8192)):Gt(d),h=d.updateQueue,h!==null&&ms(d,h.retryQueue),h=null,r!==null&&r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(h=r.memoizedState.cachePool.pool),y=null,d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(y=d.memoizedState.cachePool.pool),y!==h&&(d.flags|=2048),r!==null&&Q(n0),null;case 24:return h=null,r!==null&&(h=r.memoizedState.cache),d.memoizedState.cache!==h&&(d.flags|=2048),Zi(he),Gt(d),null;case 25:return null;case 30:return null}throw Error(i(156,d.tag))}function H11(r,d){switch(tm(d),d.tag){case 1:return r=d.flags,r&65536?(d.flags=r&-65537|128,d):null;case 3:return Zi(he),v1(),r=d.flags,(r&65536)!==0&&(r&128)===0?(d.flags=r&-65537|128,d):null;case 26:case 27:case 5:return B1(d),null;case 13:if(to(d),r=d.memoizedState,r!==null&&r.dehydrated!==null){if(d.alternate===null)throw Error(i(340));ja()}return r=d.flags,r&65536?(d.flags=r&-65537|128,d):null;case 19:return Q(pe),null;case 4:return v1(),null;case 10:return Zi(d.type),null;case 22:case 23:return to(d),hm(),r!==null&&Q(n0),r=d.flags,r&65536?(d.flags=r&-65537|128,d):null;case 24:return Zi(he),null;case 25:return null;default:return null}}function cN(r,d){switch(tm(d),d.tag){case 3:Zi(he),v1();break;case 26:case 27:case 5:B1(d);break;case 4:v1();break;case 13:to(d);break;case 19:Q(pe);break;case 10:Zi(d.type);break;case 22:case 23:to(d),hm(),r!==null&&Q(n0);break;case 24:Zi(he)}}function e9(r,d){try{var h=d.updateQueue,y=h!==null?h.lastEffect:null;if(y!==null){var _=y.next;h=_;do{if((h.tag&r)===r){y=void 0;var E=h.create,N=h.inst;y=E(),N.destroy=y}h=h.next}while(h!==_)}}catch(L){Rt(d,d.return,L)}}function A4(r,d,h){try{var y=d.updateQueue,_=y!==null?y.lastEffect:null;if(_!==null){var E=_.next;y=E;do{if((y.tag&r)===r){var N=y.inst,L=N.destroy;if(L!==void 0){N.destroy=void 0,_=d;var H=h,J=L;try{J()}catch(a1){Rt(_,H,a1)}}}y=y.next}while(y!==E)}}catch(a1){Rt(d,d.return,a1)}}function dN(r){var d=r.updateQueue;if(d!==null){var h=r.stateNode;try{Z$(d,h)}catch(y){Rt(r,r.return,y)}}}function fN(r,d,h){h.props=o0(r.type,r.memoizedProps),h.state=r.memoizedState;try{h.componentWillUnmount()}catch(y){Rt(r,d,y)}}function n9(r,d){try{var h=r.ref;if(h!==null){switch(r.tag){case 26:case 27:case 5:var y=r.stateNode;break;case 30:y=r.stateNode;break;default:y=r.stateNode}typeof h=="function"?r.refCleanup=h(y):h.current=y}}catch(_){Rt(r,d,_)}}function Z3(r,d){var h=r.ref,y=r.refCleanup;if(h!==null)if(typeof y=="function")try{y()}catch(_){Rt(r,d,_)}finally{r.refCleanup=null,r=r.alternate,r!=null&&(r.refCleanup=null)}else if(typeof h=="function")try{h(null)}catch(_){Rt(r,d,_)}else h.current=null}function gN(r){var d=r.type,h=r.memoizedProps,y=r.stateNode;try{t:switch(d){case"button":case"input":case"select":case"textarea":h.autoFocus&&y.focus();break t;case"img":h.src?y.src=h.src:h.srcSet&&(y.srcset=h.srcSet)}}catch(_){Rt(r,r.return,_)}}function Um(r,d,h){try{var y=r.stateNode;dt1(y,r.type,h,d),y[In]=d}catch(_){Rt(r,r.return,_)}}function hN(r){return r.tag===5||r.tag===3||r.tag===26||r.tag===27&&D4(r.type)||r.tag===4}function qm(r){t:for(;;){for(;r.sibling===null;){if(r.return===null||hN(r.return))return null;r=r.return}for(r.sibling.return=r.return,r=r.sibling;r.tag!==5&&r.tag!==6&&r.tag!==18;){if(r.tag===27&&D4(r.type)||r.flags&2||r.child===null||r.tag===4)continue t;r.child.return=r,r=r.child}if(!(r.flags&2))return r.stateNode}}function Hm(r,d,h){var y=r.tag;if(y===5||y===6)r=r.stateNode,d?(h.nodeType===9?h.body:h.nodeName==="HTML"?h.ownerDocument.body:h).insertBefore(r,d):(d=h.nodeType===9?h.body:h.nodeName==="HTML"?h.ownerDocument.body:h,d.appendChild(r),h=h._reactRootContainer,h!=null||d.onclick!==null||(d.onclick=Ts));else if(y!==4&&(y===27&&D4(r.type)&&(h=r.stateNode,d=null),r=r.child,r!==null))for(Hm(r,d,h),r=r.sibling;r!==null;)Hm(r,d,h),r=r.sibling}function ys(r,d,h){var y=r.tag;if(y===5||y===6)r=r.stateNode,d?h.insertBefore(r,d):h.appendChild(r);else if(y!==4&&(y===27&&D4(r.type)&&(h=r.stateNode),r=r.child,r!==null))for(ys(r,d,h),r=r.sibling;r!==null;)ys(r,d,h),r=r.sibling}function pN(r){var d=r.stateNode,h=r.memoizedProps;try{for(var y=r.type,_=d.attributes;_.length;)d.removeAttributeNode(_[0]);Ie(d,y,h),d[Qe]=r,d[In]=h}catch(E){Rt(r,r.return,E)}}var io=!1,ie=!1,Gm=!1,mN=typeof WeakSet=="function"?WeakSet:Set,Ae=null;function G11(r,d){if(r=r.containerInfo,py=Fs,r=k$(r),qp(r)){if("selectionStart"in r)var h={start:r.selectionStart,end:r.selectionEnd};else t:{h=(h=r.ownerDocument)&&h.defaultView||window;var y=h.getSelection&&h.getSelection();if(y&&y.rangeCount!==0){h=y.anchorNode;var _=y.anchorOffset,E=y.focusNode;y=y.focusOffset;try{h.nodeType,E.nodeType}catch{h=null;break t}var N=0,L=-1,H=-1,J=0,a1=0,c1=r,t1=null;e:for(;;){for(var e1;c1!==h||_!==0&&c1.nodeType!==3||(L=N+_),c1!==E||y!==0&&c1.nodeType!==3||(H=N+y),c1.nodeType===3&&(N+=c1.nodeValue.length),(e1=c1.firstChild)!==null;)t1=c1,c1=e1;for(;;){if(c1===r)break e;if(t1===h&&++J===_&&(L=N),t1===E&&++a1===y&&(H=N),(e1=c1.nextSibling)!==null)break;c1=t1,t1=c1.parentNode}c1=e1}h=L===-1||H===-1?null:{start:L,end:H}}else h=null}h=h||{start:0,end:0}}else h=null;for(my={focusedElem:r,selectionRange:h},Fs=!1,Ae=d;Ae!==null;)if(d=Ae,r=d.child,(d.subtreeFlags&1024)!==0&&r!==null)r.return=d,Ae=r;else for(;Ae!==null;){switch(d=Ae,E=d.alternate,r=d.flags,d.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&E!==null){r=void 0,h=d,_=E.memoizedProps,E=E.memoizedState,y=h.stateNode;try{var G1=o0(h.type,_,h.elementType===h.type);r=y.getSnapshotBeforeUpdate(G1,E),y.__reactInternalSnapshotBeforeUpdate=r}catch(U1){Rt(h,h.return,U1)}}break;case 3:if((r&1024)!==0){if(r=d.stateNode.containerInfo,h=r.nodeType,h===9)by(r);else if(h===1)switch(r.nodeName){case"HEAD":case"HTML":case"BODY":by(r);break;default:r.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=d.sibling,r!==null){r.return=d.return,Ae=r;break}Ae=d.return}}function yN(r,d,h){var y=h.flags;switch(h.tag){case 0:case 11:case 15:C4(r,h),y&4&&e9(5,h);break;case 1:if(C4(r,h),y&4)if(r=h.stateNode,d===null)try{r.componentDidMount()}catch(N){Rt(h,h.return,N)}else{var _=o0(h.type,d.memoizedProps);d=d.memoizedState;try{r.componentDidUpdate(_,d,r.__reactInternalSnapshotBeforeUpdate)}catch(N){Rt(h,h.return,N)}}y&64&&dN(h),y&512&&n9(h,h.return);break;case 3:if(C4(r,h),y&64&&(r=h.updateQueue,r!==null)){if(d=null,h.child!==null)switch(h.child.tag){case 27:case 5:d=h.child.stateNode;break;case 1:d=h.child.stateNode}try{Z$(r,d)}catch(N){Rt(h,h.return,N)}}break;case 27:d===null&&y&4&&pN(h);case 26:case 5:C4(r,h),d===null&&y&4&&gN(h),y&512&&n9(h,h.return);break;case 12:C4(r,h);break;case 13:C4(r,h),y&4&&xN(r,h),y&64&&(r=h.memoizedState,r!==null&&(r=r.dehydrated,r!==null&&(h=tt1.bind(null,h),vt1(r,h))));break;case 22:if(y=h.memoizedState!==null||io,!y){d=d!==null&&d.memoizedState!==null||ie,_=io;var E=ie;io=y,(ie=d)&&!E?k4(r,h,(h.subtreeFlags&8772)!==0):C4(r,h),io=_,ie=E}break;case 30:break;default:C4(r,h)}}function vN(r){var d=r.alternate;d!==null&&(r.alternate=null,vN(d)),r.child=null,r.deletions=null,r.sibling=null,r.tag===5&&(d=r.stateNode,d!==null&&Sp(d)),r.stateNode=null,r.return=null,r.dependencies=null,r.memoizedProps=null,r.memoizedState=null,r.pendingProps=null,r.stateNode=null,r.updateQueue=null}var Bt=null,qn=!1;function oo(r,d,h){for(h=h.child;h!==null;)bN(r,d,h),h=h.sibling}function bN(r,d,h){if(Ke&&typeof Ke.onCommitFiberUnmount=="function")try{Ke.onCommitFiberUnmount(p4,h)}catch{}switch(h.tag){case 26:ie||Z3(h,d),oo(r,d,h),h.memoizedState?h.memoizedState.count--:h.stateNode&&(h=h.stateNode,h.parentNode.removeChild(h));break;case 27:ie||Z3(h,d);var y=Bt,_=qn;D4(h.type)&&(Bt=h.stateNode,qn=!1),oo(r,d,h),d9(h.stateNode),Bt=y,qn=_;break;case 5:ie||Z3(h,d);case 6:if(y=Bt,_=qn,Bt=null,oo(r,d,h),Bt=y,qn=_,Bt!==null)if(qn)try{(Bt.nodeType===9?Bt.body:Bt.nodeName==="HTML"?Bt.ownerDocument.body:Bt).removeChild(h.stateNode)}catch(E){Rt(h,d,E)}else try{Bt.removeChild(h.stateNode)}catch(E){Rt(h,d,E)}break;case 18:Bt!==null&&(qn?(r=Bt,aR(r.nodeType===9?r.body:r.nodeName==="HTML"?r.ownerDocument.body:r,h.stateNode),b9(r)):aR(Bt,h.stateNode));break;case 4:y=Bt,_=qn,Bt=h.stateNode.containerInfo,qn=!0,oo(r,d,h),Bt=y,qn=_;break;case 0:case 11:case 14:case 15:ie||A4(2,h,d),ie||A4(4,h,d),oo(r,d,h);break;case 1:ie||(Z3(h,d),y=h.stateNode,typeof y.componentWillUnmount=="function"&&fN(h,d,y)),oo(r,d,h);break;case 21:oo(r,d,h);break;case 22:ie=(y=ie)||h.memoizedState!==null,oo(r,d,h),ie=y;break;default:oo(r,d,h)}}function xN(r,d){if(d.memoizedState===null&&(r=d.alternate,r!==null&&(r=r.memoizedState,r!==null&&(r=r.dehydrated,r!==null))))try{b9(r)}catch(h){Rt(d,d.return,h)}}function W11(r){switch(r.tag){case 13:case 19:var d=r.stateNode;return d===null&&(d=r.stateNode=new mN),d;case 22:return r=r.stateNode,d=r._retryCache,d===null&&(d=r._retryCache=new mN),d;default:throw Error(i(435,r.tag))}}function Wm(r,d){var h=W11(r);d.forEach(function(y){var _=et1.bind(null,r,y);h.has(y)||(h.add(y),y.then(_,_))})}function c2(r,d){var h=d.deletions;if(h!==null)for(var y=0;y<h.length;y++){var _=h[y],E=r,N=d,L=N;t:for(;L!==null;){switch(L.tag){case 27:if(D4(L.type)){Bt=L.stateNode,qn=!1;break t}break;case 5:Bt=L.stateNode,qn=!1;break t;case 3:case 4:Bt=L.stateNode.containerInfo,qn=!0;break t}L=L.return}if(Bt===null)throw Error(i(160));bN(E,N,_),Bt=null,qn=!1,E=_.alternate,E!==null&&(E.return=null),_.return=null}if(d.subtreeFlags&13878)for(d=d.child;d!==null;)_N(d,r),d=d.sibling}var p3=null;function _N(r,d){var h=r.alternate,y=r.flags;switch(r.tag){case 0:case 11:case 14:case 15:c2(d,r),d2(r),y&4&&(A4(3,r,r.return),e9(3,r),A4(5,r,r.return));break;case 1:c2(d,r),d2(r),y&512&&(ie||h===null||Z3(h,h.return)),y&64&&io&&(r=r.updateQueue,r!==null&&(y=r.callbacks,y!==null&&(h=r.shared.hiddenCallbacks,r.shared.hiddenCallbacks=h===null?y:h.concat(y))));break;case 26:var _=p3;if(c2(d,r),d2(r),y&512&&(ie||h===null||Z3(h,h.return)),y&4){var E=h!==null?h.memoizedState:null;if(y=r.memoizedState,h===null)if(y===null)if(r.stateNode===null){t:{y=r.type,h=r.memoizedProps,_=_.ownerDocument||_;e:switch(y){case"title":E=_.getElementsByTagName("title")[0],(!E||E[Ca]||E[Qe]||E.namespaceURI==="http://www.w3.org/2000/svg"||E.hasAttribute("itemprop"))&&(E=_.createElement(y),_.head.insertBefore(E,_.querySelector("head > title"))),Ie(E,y,h),E[Qe]=r,Ee(E),y=E;break t;case"link":var N=pR("link","href",_).get(y+(h.href||""));if(N){for(var L=0;L<N.length;L++)if(E=N[L],E.getAttribute("href")===(h.href==null||h.href===""?null:h.href)&&E.getAttribute("rel")===(h.rel==null?null:h.rel)&&E.getAttribute("title")===(h.title==null?null:h.title)&&E.getAttribute("crossorigin")===(h.crossOrigin==null?null:h.crossOrigin)){N.splice(L,1);break e}}E=_.createElement(y),Ie(E,y,h),_.head.appendChild(E);break;case"meta":if(N=pR("meta","content",_).get(y+(h.content||""))){for(L=0;L<N.length;L++)if(E=N[L],E.getAttribute("content")===(h.content==null?null:""+h.content)&&E.getAttribute("name")===(h.name==null?null:h.name)&&E.getAttribute("property")===(h.property==null?null:h.property)&&E.getAttribute("http-equiv")===(h.httpEquiv==null?null:h.httpEquiv)&&E.getAttribute("charset")===(h.charSet==null?null:h.charSet)){N.splice(L,1);break e}}E=_.createElement(y),Ie(E,y,h),_.head.appendChild(E);break;default:throw Error(i(468,y))}E[Qe]=r,Ee(E),y=E}r.stateNode=y}else mR(_,r.type,r.stateNode);else r.stateNode=hR(_,y,r.memoizedProps);else E!==y?(E===null?h.stateNode!==null&&(h=h.stateNode,h.parentNode.removeChild(h)):E.count--,y===null?mR(_,r.type,r.stateNode):hR(_,y,r.memoizedProps)):y===null&&r.stateNode!==null&&Um(r,r.memoizedProps,h.memoizedProps)}break;case 27:c2(d,r),d2(r),y&512&&(ie||h===null||Z3(h,h.return)),h!==null&&y&4&&Um(r,r.memoizedProps,h.memoizedProps);break;case 5:if(c2(d,r),d2(r),y&512&&(ie||h===null||Z3(h,h.return)),r.flags&32){_=r.stateNode;try{U6(_,"")}catch(e1){Rt(r,r.return,e1)}}y&4&&r.stateNode!=null&&(_=r.memoizedProps,Um(r,_,h!==null?h.memoizedProps:_)),y&1024&&(Gm=!0);break;case 6:if(c2(d,r),d2(r),y&4){if(r.stateNode===null)throw Error(i(162));y=r.memoizedProps,h=r.stateNode;try{h.nodeValue=y}catch(e1){Rt(r,r.return,e1)}}break;case 3:if(Rs=null,_=p3,p3=Ms(d.containerInfo),c2(d,r),p3=_,d2(r),y&4&&h!==null&&h.memoizedState.isDehydrated)try{b9(d.containerInfo)}catch(e1){Rt(r,r.return,e1)}Gm&&(Gm=!1,wN(r));break;case 4:y=p3,p3=Ms(r.stateNode.containerInfo),c2(d,r),d2(r),p3=y;break;case 12:c2(d,r),d2(r);break;case 13:c2(d,r),d2(r),r.child.flags&8192&&r.memoizedState!==null!=(h!==null&&h.memoizedState!==null)&&(Zm=C1()),y&4&&(y=r.updateQueue,y!==null&&(r.updateQueue=null,Wm(r,y)));break;case 22:_=r.memoizedState!==null;var H=h!==null&&h.memoizedState!==null,J=io,a1=ie;if(io=J||_,ie=a1||H,c2(d,r),ie=a1,io=J,d2(r),y&8192)t:for(d=r.stateNode,d._visibility=_?d._visibility&-2:d._visibility|1,_&&(h===null||H||io||ie||u0(r)),h=null,d=r;;){if(d.tag===5||d.tag===26){if(h===null){H=h=d;try{if(E=H.stateNode,_)N=E.style,typeof N.setProperty=="function"?N.setProperty("display","none","important"):N.display="none";else{L=H.stateNode;var c1=H.memoizedProps.style,t1=c1!=null&&c1.hasOwnProperty("display")?c1.display:null;L.style.display=t1==null||typeof t1=="boolean"?"":(""+t1).trim()}}catch(e1){Rt(H,H.return,e1)}}}else if(d.tag===6){if(h===null){H=d;try{H.stateNode.nodeValue=_?"":H.memoizedProps}catch(e1){Rt(H,H.return,e1)}}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===r)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===r)break t;for(;d.sibling===null;){if(d.return===null||d.return===r)break t;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}y&4&&(y=r.updateQueue,y!==null&&(h=y.retryQueue,h!==null&&(y.retryQueue=null,Wm(r,h))));break;case 19:c2(d,r),d2(r),y&4&&(y=r.updateQueue,y!==null&&(r.updateQueue=null,Wm(r,y)));break;case 30:break;case 21:break;default:c2(d,r),d2(r)}}function d2(r){var d=r.flags;if(d&2){try{for(var h,y=r.return;y!==null;){if(hN(y)){h=y;break}y=y.return}if(h==null)throw Error(i(160));switch(h.tag){case 27:var _=h.stateNode,E=qm(r);ys(r,E,_);break;case 5:var N=h.stateNode;h.flags&32&&(U6(N,""),h.flags&=-33);var L=qm(r);ys(r,L,N);break;case 3:case 4:var H=h.stateNode.containerInfo,J=qm(r);Hm(r,J,H);break;default:throw Error(i(161))}}catch(a1){Rt(r,r.return,a1)}r.flags&=-3}d&4096&&(r.flags&=-4097)}function wN(r){if(r.subtreeFlags&1024)for(r=r.child;r!==null;){var d=r;wN(d),d.tag===5&&d.flags&1024&&d.stateNode.reset(),r=r.sibling}}function C4(r,d){if(d.subtreeFlags&8772)for(d=d.child;d!==null;)yN(r,d.alternate,d),d=d.sibling}function u0(r){for(r=r.child;r!==null;){var d=r;switch(d.tag){case 0:case 11:case 14:case 15:A4(4,d,d.return),u0(d);break;case 1:Z3(d,d.return);var h=d.stateNode;typeof h.componentWillUnmount=="function"&&fN(d,d.return,h),u0(d);break;case 27:d9(d.stateNode);case 26:case 5:Z3(d,d.return),u0(d);break;case 22:d.memoizedState===null&&u0(d);break;case 30:u0(d);break;default:u0(d)}r=r.sibling}}function k4(r,d,h){for(h=h&&(d.subtreeFlags&8772)!==0,d=d.child;d!==null;){var y=d.alternate,_=r,E=d,N=E.flags;switch(E.tag){case 0:case 11:case 15:k4(_,E,h),e9(4,E);break;case 1:if(k4(_,E,h),y=E,_=y.stateNode,typeof _.componentDidMount=="function")try{_.componentDidMount()}catch(J){Rt(y,y.return,J)}if(y=E,_=y.updateQueue,_!==null){var L=y.stateNode;try{var H=_.shared.hiddenCallbacks;if(H!==null)for(_.shared.hiddenCallbacks=null,_=0;_<H.length;_++)Q$(H[_],L)}catch(J){Rt(y,y.return,J)}}h&&N&64&&dN(E),n9(E,E.return);break;case 27:pN(E);case 26:case 5:k4(_,E,h),h&&y===null&&N&4&&gN(E),n9(E,E.return);break;case 12:k4(_,E,h);break;case 13:k4(_,E,h),h&&N&4&&xN(_,E);break;case 22:E.memoizedState===null&&k4(_,E,h),n9(E,E.return);break;case 30:break;default:k4(_,E,h)}d=d.sibling}}function Ym(r,d){var h=null;r!==null&&r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(h=r.memoizedState.cachePool.pool),r=null,d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(r=d.memoizedState.cachePool.pool),r!==h&&(r!=null&&r.refCount++,h!=null&&Ba(h))}function Vm(r,d){r=null,d.alternate!==null&&(r=d.alternate.memoizedState.cache),d=d.memoizedState.cache,d!==r&&(d.refCount++,r!=null&&Ba(r))}function J3(r,d,h,y){if(d.subtreeFlags&10256)for(d=d.child;d!==null;)EN(r,d,h,y),d=d.sibling}function EN(r,d,h,y){var _=d.flags;switch(d.tag){case 0:case 11:case 15:J3(r,d,h,y),_&2048&&e9(9,d);break;case 1:J3(r,d,h,y);break;case 3:J3(r,d,h,y),_&2048&&(r=null,d.alternate!==null&&(r=d.alternate.memoizedState.cache),d=d.memoizedState.cache,d!==r&&(d.refCount++,r!=null&&Ba(r)));break;case 12:if(_&2048){J3(r,d,h,y),r=d.stateNode;try{var E=d.memoizedProps,N=E.id,L=E.onPostCommit;typeof L=="function"&&L(N,d.alternate===null?"mount":"update",r.passiveEffectDuration,-0)}catch(H){Rt(d,d.return,H)}}else J3(r,d,h,y);break;case 13:J3(r,d,h,y);break;case 23:break;case 22:E=d.stateNode,N=d.alternate,d.memoizedState!==null?E._visibility&2?J3(r,d,h,y):i9(r,d):E._visibility&2?J3(r,d,h,y):(E._visibility|=2,a5(r,d,h,y,(d.subtreeFlags&10256)!==0)),_&2048&&Ym(N,d);break;case 24:J3(r,d,h,y),_&2048&&Vm(d.alternate,d);break;default:J3(r,d,h,y)}}function a5(r,d,h,y,_){for(_=_&&(d.subtreeFlags&10256)!==0,d=d.child;d!==null;){var E=r,N=d,L=h,H=y,J=N.flags;switch(N.tag){case 0:case 11:case 15:a5(E,N,L,H,_),e9(8,N);break;case 23:break;case 22:var a1=N.stateNode;N.memoizedState!==null?a1._visibility&2?a5(E,N,L,H,_):i9(E,N):(a1._visibility|=2,a5(E,N,L,H,_)),_&&J&2048&&Ym(N.alternate,N);break;case 24:a5(E,N,L,H,_),_&&J&2048&&Vm(N.alternate,N);break;default:a5(E,N,L,H,_)}d=d.sibling}}function i9(r,d){if(d.subtreeFlags&10256)for(d=d.child;d!==null;){var h=r,y=d,_=y.flags;switch(y.tag){case 22:i9(h,y),_&2048&&Ym(y.alternate,y);break;case 24:i9(h,y),_&2048&&Vm(y.alternate,y);break;default:i9(h,y)}d=d.sibling}}var o9=8192;function r5(r){if(r.subtreeFlags&o9)for(r=r.child;r!==null;)SN(r),r=r.sibling}function SN(r){switch(r.tag){case 26:r5(r),r.flags&o9&&r.memoizedState!==null&&Nt1(p3,r.memoizedState,r.memoizedProps);break;case 5:r5(r);break;case 3:case 4:var d=p3;p3=Ms(r.stateNode.containerInfo),r5(r),p3=d;break;case 22:r.memoizedState===null&&(d=r.alternate,d!==null&&d.memoizedState!==null?(d=o9,o9=16777216,r5(r),o9=d):r5(r));break;default:r5(r)}}function AN(r){var d=r.alternate;if(d!==null&&(r=d.child,r!==null)){d.child=null;do d=r.sibling,r.sibling=null,r=d;while(r!==null)}}function u9(r){var d=r.deletions;if((r.flags&16)!==0){if(d!==null)for(var h=0;h<d.length;h++){var y=d[h];Ae=y,kN(y,r)}AN(r)}if(r.subtreeFlags&10256)for(r=r.child;r!==null;)CN(r),r=r.sibling}function CN(r){switch(r.tag){case 0:case 11:case 15:u9(r),r.flags&2048&&A4(9,r,r.return);break;case 3:u9(r);break;case 12:u9(r);break;case 22:var d=r.stateNode;r.memoizedState!==null&&d._visibility&2&&(r.return===null||r.return.tag!==13)?(d._visibility&=-3,vs(r)):u9(r);break;default:u9(r)}}function vs(r){var d=r.deletions;if((r.flags&16)!==0){if(d!==null)for(var h=0;h<d.length;h++){var y=d[h];Ae=y,kN(y,r)}AN(r)}for(r=r.child;r!==null;){switch(d=r,d.tag){case 0:case 11:case 15:A4(8,d,d.return),vs(d);break;case 22:h=d.stateNode,h._visibility&2&&(h._visibility&=-3,vs(d));break;default:vs(d)}r=r.sibling}}function kN(r,d){for(;Ae!==null;){var h=Ae;switch(h.tag){case 0:case 11:case 15:A4(8,h,d);break;case 23:case 22:if(h.memoizedState!==null&&h.memoizedState.cachePool!==null){var y=h.memoizedState.cachePool.pool;y!=null&&y.refCount++}break;case 24:Ba(h.memoizedState.cache)}if(y=h.child,y!==null)y.return=h,Ae=y;else t:for(h=r;Ae!==null;){y=Ae;var _=y.sibling,E=y.return;if(vN(y),y===h){Ae=null;break t}if(_!==null){_.return=E,Ae=_;break t}Ae=E}}}var Y11={getCacheForType:function(r){var d=Ze(he),h=d.data.get(r);return h===void 0&&(h=r(),d.data.set(r,h)),h}},V11=typeof WeakMap=="function"?WeakMap:Map,wt=0,Lt=null,ot=null,ct=0,Et=0,f2=null,T4=!1,s5=!1,Xm=!1,uo=0,Qt=0,$4=0,l0=0,Km=0,P2=0,c5=0,l9=null,Hn=null,Qm=!1,Zm=0,bs=1/0,xs=null,M4=null,Pe=0,N4=null,d5=null,f5=0,Jm=0,ty=null,TN=null,a9=0,ey=null;function g2(){if((wt&2)!==0&&ct!==0)return ct&-ct;if(R.T!==null){var r=J6;return r!==0?r:ry()}return HT()}function $N(){P2===0&&(P2=(ct&536870912)===0||yt?IT():536870912);var r=j2.current;return r!==null&&(r.flags|=32),P2}function h2(r,d,h){(r===Lt&&(Et===2||Et===9)||r.cancelPendingCommit!==null)&&(g5(r,0),R4(r,ct,P2,!1)),Aa(r,h),((wt&2)===0||r!==Lt)&&(r===Lt&&((wt&2)===0&&(l0|=h),Qt===4&&R4(r,ct,P2,!1)),ti(r))}function MN(r,d,h){if((wt&6)!==0)throw Error(i(327));var y=!h&&(d&124)===0&&(d&r.expiredLanes)===0||Sa(r,d),_=y?Q11(r,d):oy(r,d,!0),E=y;do{if(_===0){s5&&!y&&R4(r,d,0,!1);break}else{if(h=r.current.alternate,E&&!X11(h)){_=oy(r,d,!1),E=!1;continue}if(_===2){if(E=d,r.errorRecoveryDisabledLanes&E)var N=0;else N=r.pendingLanes&-536870913,N=N!==0?N:N&536870912?536870912:0;if(N!==0){d=N;t:{var L=r;_=l9;var H=L.current.memoizedState.isDehydrated;if(H&&(g5(L,N).flags|=256),N=oy(L,N,!1),N!==2){if(Xm&&!H){L.errorRecoveryDisabledLanes|=E,l0|=E,_=4;break t}E=Hn,Hn=_,E!==null&&(Hn===null?Hn=E:Hn.push.apply(Hn,E))}_=N}if(E=!1,_!==2)continue}}if(_===1){g5(r,0),R4(r,d,0,!0);break}t:{switch(y=r,E=_,E){case 0:case 1:throw Error(i(345));case 4:if((d&4194048)!==d)break;case 6:R4(y,d,P2,!T4);break t;case 2:Hn=null;break;case 3:case 5:break;default:throw Error(i(329))}if((d&62914560)===d&&(_=Zm+300-C1(),10<_)){if(R4(y,d,P2,!T4),N7(y,0,!0)!==0)break t;y.timeoutHandle=uR(NN.bind(null,y,h,Hn,xs,Qm,d,P2,l0,c5,T4,E,2,-0,0),_);break t}NN(y,h,Hn,xs,Qm,d,P2,l0,c5,T4,E,0,-0,0)}}break}while(!0);ti(r)}function NN(r,d,h,y,_,E,N,L,H,J,a1,c1,t1,e1){if(r.timeoutHandle=-1,c1=d.subtreeFlags,(c1&8192||(c1&16785408)===16785408)&&(h9={stylesheets:null,count:0,unsuspend:Mt1},SN(d),c1=Rt1(),c1!==null)){r.cancelPendingCommit=c1(jN.bind(null,r,d,E,h,y,_,N,L,H,a1,1,t1,e1)),R4(r,E,N,!J);return}jN(r,d,E,h,y,_,N,L,H)}function X11(r){for(var d=r;;){var h=d.tag;if((h===0||h===11||h===15)&&d.flags&16384&&(h=d.updateQueue,h!==null&&(h=h.stores,h!==null)))for(var y=0;y<h.length;y++){var _=h[y],E=_.getSnapshot;_=_.value;try{if(!r2(E(),_))return!1}catch{return!1}}if(h=d.child,d.subtreeFlags&16384&&h!==null)h.return=d,d=h;else{if(d===r)break;for(;d.sibling===null;){if(d.return===null||d.return===r)return!0;d=d.return}d.sibling.return=d.return,d=d.sibling}}return!0}function R4(r,d,h,y){d&=~Km,d&=~l0,r.suspendedLanes|=d,r.pingedLanes&=~d,y&&(r.warmLanes|=d),y=r.expirationTimes;for(var _=d;0<_;){var E=31-a2(_),N=1<<E;y[E]=-1,_&=~N}h!==0&&UT(r,h,d)}function _s(){return(wt&6)===0?(r9(0),!1):!0}function ny(){if(ot!==null){if(Et===0)var r=ot.return;else r=ot,Qi=t0=null,bm(r),u5=null,Za=0,r=ot;for(;r!==null;)cN(r.alternate,r),r=r.return;ot=null}}function g5(r,d){var h=r.timeoutHandle;h!==-1&&(r.timeoutHandle=-1,gt1(h)),h=r.cancelPendingCommit,h!==null&&(r.cancelPendingCommit=null,h()),ny(),Lt=r,ot=h=Vi(r.current,null),ct=d,Et=0,f2=null,T4=!1,s5=Sa(r,d),Xm=!1,c5=P2=Km=l0=$4=Qt=0,Hn=l9=null,Qm=!1,(d&8)!==0&&(d|=d&32);var y=r.entangledLanes;if(y!==0)for(r=r.entanglements,y&=d;0<y;){var _=31-a2(y),E=1<<_;d|=r[_],y&=~E}return uo=d,q7(),h}function RN(r,d){J1=null,R.H=rs,d===qa||d===Z7?(d=X$(),Et=3):d===W$?(d=X$(),Et=4):Et=d===KM?8:d!==null&&typeof d=="object"&&typeof d.then=="function"?6:1,f2=d,ot===null&&(Qt=1,gs(r,O2(d,r.current)))}function DN(){var r=R.H;return R.H=rs,r===null?rs:r}function ON(){var r=R.A;return R.A=Y11,r}function iy(){Qt=4,T4||(ct&4194048)!==ct&&j2.current!==null||(s5=!0),($4&134217727)===0&&(l0&134217727)===0||Lt===null||R4(Lt,ct,P2,!1)}function oy(r,d,h){var y=wt;wt|=2;var _=DN(),E=ON();(Lt!==r||ct!==d)&&(xs=null,g5(r,d)),d=!1;var N=Qt;t:do try{if(Et!==0&&ot!==null){var L=ot,H=f2;switch(Et){case 8:ny(),N=6;break t;case 3:case 2:case 9:case 6:j2.current===null&&(d=!0);var J=Et;if(Et=0,f2=null,h5(r,L,H,J),h&&s5){N=0;break t}break;default:J=Et,Et=0,f2=null,h5(r,L,H,J)}}K11(),N=Qt;break}catch(a1){RN(r,a1)}while(!0);return d&&r.shellSuspendCounter++,Qi=t0=null,wt=y,R.H=_,R.A=E,ot===null&&(Lt=null,ct=0,q7()),N}function K11(){for(;ot!==null;)FN(ot)}function Q11(r,d){var h=wt;wt|=2;var y=DN(),_=ON();Lt!==r||ct!==d?(xs=null,bs=C1()+500,g5(r,d)):s5=Sa(r,d);t:do try{if(Et!==0&&ot!==null){d=ot;var E=f2;e:switch(Et){case 1:Et=0,f2=null,h5(r,d,E,1);break;case 2:case 9:if(Y$(E)){Et=0,f2=null,zN(d);break}d=function(){Et!==2&&Et!==9||Lt!==r||(Et=7),ti(r)},E.then(d,d);break t;case 3:Et=7;break t;case 4:Et=5;break t;case 7:Y$(E)?(Et=0,f2=null,zN(d)):(Et=0,f2=null,h5(r,d,E,7));break;case 5:var N=null;switch(ot.tag){case 26:N=ot.memoizedState;case 5:case 27:var L=ot;if(!N||yR(N)){Et=0,f2=null;var H=L.sibling;if(H!==null)ot=H;else{var J=L.return;J!==null?(ot=J,ws(J)):ot=null}break e}}Et=0,f2=null,h5(r,d,E,5);break;case 6:Et=0,f2=null,h5(r,d,E,6);break;case 8:ny(),Qt=6;break t;default:throw Error(i(462))}}Z11();break}catch(a1){RN(r,a1)}while(!0);return Qi=t0=null,R.H=y,R.A=_,wt=h,ot!==null?0:(Lt=null,ct=0,q7(),Qt)}function Z11(){for(;ot!==null&&!Y1();)FN(ot)}function FN(r){var d=rN(r.alternate,r,uo);r.memoizedProps=r.pendingProps,d===null?ws(r):ot=d}function zN(r){var d=r,h=d.alternate;switch(d.tag){case 15:case 0:d=nN(h,d,d.pendingProps,d.type,void 0,ct);break;case 11:d=nN(h,d,d.pendingProps,d.type.render,d.ref,ct);break;case 5:bm(d);default:cN(h,d),d=ot=L$(d,uo),d=rN(h,d,uo)}r.memoizedProps=r.pendingProps,d===null?ws(r):ot=d}function h5(r,d,h,y){Qi=t0=null,bm(d),u5=null,Za=0;var _=d.return;try{if(B11(r,_,d,h,ct)){Qt=1,gs(r,O2(h,r.current)),ot=null;return}}catch(E){if(_!==null)throw ot=_,E;Qt=1,gs(r,O2(h,r.current)),ot=null;return}d.flags&32768?(yt||y===1?r=!0:s5||(ct&536870912)!==0?r=!1:(T4=r=!0,(y===2||y===9||y===3||y===6)&&(y=j2.current,y!==null&&y.tag===13&&(y.flags|=16384))),LN(d,r)):ws(d)}function ws(r){var d=r;do{if((d.flags&32768)!==0){LN(d,T4);return}r=d.return;var h=q11(d.alternate,d,uo);if(h!==null){ot=h;return}if(d=d.sibling,d!==null){ot=d;return}ot=d=r}while(d!==null);Qt===0&&(Qt=5)}function LN(r,d){do{var h=H11(r.alternate,r);if(h!==null){h.flags&=32767,ot=h;return}if(h=r.return,h!==null&&(h.flags|=32768,h.subtreeFlags=0,h.deletions=null),!d&&(r=r.sibling,r!==null)){ot=r;return}ot=r=h}while(r!==null);Qt=6,ot=null}function jN(r,d,h,y,_,E,N,L,H){r.cancelPendingCommit=null;do Es();while(Pe!==0);if((wt&6)!==0)throw Error(i(327));if(d!==null){if(d===r.current)throw Error(i(177));if(E=d.lanes|d.childLanes,E|=Vp,MJ(r,h,E,N,L,H),r===Lt&&(ot=Lt=null,ct=0),d5=d,N4=r,f5=h,Jm=E,ty=_,TN=y,(d.subtreeFlags&10256)!==0||(d.flags&10256)!==0?(r.callbackNode=null,r.callbackPriority=0,nt1(Gi,function(){return qN(),null})):(r.callbackNode=null,r.callbackPriority=0),y=(d.flags&13878)!==0,(d.subtreeFlags&13878)!==0||y){y=R.T,R.T=null,_=P.p,P.p=2,N=wt,wt|=4;try{G11(r,d,h)}finally{wt=N,P.p=_,R.T=y}}Pe=1,PN(),IN(),BN()}}function PN(){if(Pe===1){Pe=0;var r=N4,d=d5,h=(d.flags&13878)!==0;if((d.subtreeFlags&13878)!==0||h){h=R.T,R.T=null;var y=P.p;P.p=2;var _=wt;wt|=4;try{_N(d,r);var E=my,N=k$(r.containerInfo),L=E.focusedElem,H=E.selectionRange;if(N!==L&&L&&L.ownerDocument&&C$(L.ownerDocument.documentElement,L)){if(H!==null&&qp(L)){var J=H.start,a1=H.end;if(a1===void 0&&(a1=J),"selectionStart"in L)L.selectionStart=J,L.selectionEnd=Math.min(a1,L.value.length);else{var c1=L.ownerDocument||document,t1=c1&&c1.defaultView||window;if(t1.getSelection){var e1=t1.getSelection(),G1=L.textContent.length,U1=Math.min(H.start,G1),$t=H.end===void 0?U1:Math.min(H.end,G1);!e1.extend&&U1>$t&&(N=$t,$t=U1,U1=N);var K=A$(L,U1),X=A$(L,$t);if(K&&X&&(e1.rangeCount!==1||e1.anchorNode!==K.node||e1.anchorOffset!==K.offset||e1.focusNode!==X.node||e1.focusOffset!==X.offset)){var Z=c1.createRange();Z.setStart(K.node,K.offset),e1.removeAllRanges(),U1>$t?(e1.addRange(Z),e1.extend(X.node,X.offset)):(Z.setEnd(X.node,X.offset),e1.addRange(Z))}}}}for(c1=[],e1=L;e1=e1.parentNode;)e1.nodeType===1&&c1.push({element:e1,left:e1.scrollLeft,top:e1.scrollTop});for(typeof L.focus=="function"&&L.focus(),L=0;L<c1.length;L++){var s1=c1[L];s1.element.scrollLeft=s1.left,s1.element.scrollTop=s1.top}}Fs=!!py,my=py=null}finally{wt=_,P.p=y,R.T=h}}r.current=d,Pe=2}}function IN(){if(Pe===2){Pe=0;var r=N4,d=d5,h=(d.flags&8772)!==0;if((d.subtreeFlags&8772)!==0||h){h=R.T,R.T=null;var y=P.p;P.p=2;var _=wt;wt|=4;try{yN(r,d.alternate,d)}finally{wt=_,P.p=y,R.T=h}}Pe=3}}function BN(){if(Pe===4||Pe===3){Pe=0,Ft();var r=N4,d=d5,h=f5,y=TN;(d.subtreeFlags&10256)!==0||(d.flags&10256)!==0?Pe=5:(Pe=0,d5=N4=null,UN(r,r.pendingLanes));var _=r.pendingLanes;if(_===0&&(M4=null),wp(h),d=d.stateNode,Ke&&typeof Ke.onCommitFiberRoot=="function")try{Ke.onCommitFiberRoot(p4,d,void 0,(d.current.flags&128)===128)}catch{}if(y!==null){d=R.T,_=P.p,P.p=2,R.T=null;try{for(var E=r.onRecoverableError,N=0;N<y.length;N++){var L=y[N];E(L.value,{componentStack:L.stack})}}finally{R.T=d,P.p=_}}(f5&3)!==0&&Es(),ti(r),_=r.pendingLanes,(h&4194090)!==0&&(_&42)!==0?r===ey?a9++:(a9=0,ey=r):a9=0,r9(0)}}function UN(r,d){(r.pooledCacheLanes&=d)===0&&(d=r.pooledCache,d!=null&&(r.pooledCache=null,Ba(d)))}function Es(r){return PN(),IN(),BN(),qN()}function qN(){if(Pe!==5)return!1;var r=N4,d=Jm;Jm=0;var h=wp(f5),y=R.T,_=P.p;try{P.p=32>h?32:h,R.T=null,h=ty,ty=null;var E=N4,N=f5;if(Pe=0,d5=N4=null,f5=0,(wt&6)!==0)throw Error(i(331));var L=wt;if(wt|=4,CN(E.current),EN(E,E.current,N,h),wt=L,r9(0,!1),Ke&&typeof Ke.onPostCommitFiberRoot=="function")try{Ke.onPostCommitFiberRoot(p4,E)}catch{}return!0}finally{P.p=_,R.T=y,UN(r,d)}}function HN(r,d,h){d=O2(h,d),d=Dm(r.stateNode,d,2),r=_4(r,d,2),r!==null&&(Aa(r,2),ti(r))}function Rt(r,d,h){if(r.tag===3)HN(r,r,h);else for(;d!==null;){if(d.tag===3){HN(d,r,h);break}else if(d.tag===1){var y=d.stateNode;if(typeof d.type.getDerivedStateFromError=="function"||typeof y.componentDidCatch=="function"&&(M4===null||!M4.has(y))){r=O2(h,r),h=VM(2),y=_4(d,h,2),y!==null&&(XM(h,y,d,r),Aa(y,2),ti(y));break}}d=d.return}}function uy(r,d,h){var y=r.pingCache;if(y===null){y=r.pingCache=new V11;var _=new Set;y.set(d,_)}else _=y.get(d),_===void 0&&(_=new Set,y.set(d,_));_.has(h)||(Xm=!0,_.add(h),r=J11.bind(null,r,d,h),d.then(r,r))}function J11(r,d,h){var y=r.pingCache;y!==null&&y.delete(d),r.pingedLanes|=r.suspendedLanes&h,r.warmLanes&=~h,Lt===r&&(ct&h)===h&&(Qt===4||Qt===3&&(ct&62914560)===ct&&300>C1()-Zm?(wt&2)===0&&g5(r,0):Km|=h,c5===ct&&(c5=0)),ti(r)}function GN(r,d){d===0&&(d=BT()),r=X6(r,d),r!==null&&(Aa(r,d),ti(r))}function tt1(r){var d=r.memoizedState,h=0;d!==null&&(h=d.retryLane),GN(r,h)}function et1(r,d){var h=0;switch(r.tag){case 13:var y=r.stateNode,_=r.memoizedState;_!==null&&(h=_.retryLane);break;case 19:y=r.stateNode;break;case 22:y=r.stateNode._retryCache;break;default:throw Error(i(314))}y!==null&&y.delete(d),GN(r,h)}function nt1(r,d){return lt(r,d)}var Ss=null,p5=null,ly=!1,As=!1,ay=!1,a0=0;function ti(r){r!==p5&&r.next===null&&(p5===null?Ss=p5=r:p5=p5.next=r),As=!0,ly||(ly=!0,ot1())}function r9(r,d){if(!ay&&As){ay=!0;do for(var h=!1,y=Ss;y!==null;){if(r!==0){var _=y.pendingLanes;if(_===0)var E=0;else{var N=y.suspendedLanes,L=y.pingedLanes;E=(1<<31-a2(42|r)+1)-1,E&=_&~(N&~L),E=E&201326741?E&201326741|1:E?E|2:0}E!==0&&(h=!0,XN(y,E))}else E=ct,E=N7(y,y===Lt?E:0,y.cancelPendingCommit!==null||y.timeoutHandle!==-1),(E&3)===0||Sa(y,E)||(h=!0,XN(y,E));y=y.next}while(h);ay=!1}}function it1(){WN()}function WN(){As=ly=!1;var r=0;a0!==0&&(ft1()&&(r=a0),a0=0);for(var d=C1(),h=null,y=Ss;y!==null;){var _=y.next,E=YN(y,d);E===0?(y.next=null,h===null?Ss=_:h.next=_,_===null&&(p5=h)):(h=y,(r!==0||(E&3)!==0)&&(As=!0)),y=_}r9(r)}function YN(r,d){for(var h=r.suspendedLanes,y=r.pingedLanes,_=r.expirationTimes,E=r.pendingLanes&-62914561;0<E;){var N=31-a2(E),L=1<<N,H=_[N];H===-1?((L&h)===0||(L&y)!==0)&&(_[N]=$J(L,d)):H<=d&&(r.expiredLanes|=L),E&=~L}if(d=Lt,h=ct,h=N7(r,r===d?h:0,r.cancelPendingCommit!==null||r.timeoutHandle!==-1),y=r.callbackNode,h===0||r===d&&(Et===2||Et===9)||r.cancelPendingCommit!==null)return y!==null&&y!==null&&X1(y),r.callbackNode=null,r.callbackPriority=0;if((h&3)===0||Sa(r,h)){if(d=h&-h,d===r.callbackPriority)return d;switch(y!==null&&X1(y),wp(h)){case 2:case 8:h=ge;break;case 32:h=Gi;break;case 268435456:h=wa;break;default:h=Gi}return y=VN.bind(null,r),h=lt(h,y),r.callbackPriority=d,r.callbackNode=h,d}return y!==null&&y!==null&&X1(y),r.callbackPriority=2,r.callbackNode=null,2}function VN(r,d){if(Pe!==0&&Pe!==5)return r.callbackNode=null,r.callbackPriority=0,null;var h=r.callbackNode;if(Es()&&r.callbackNode!==h)return null;var y=ct;return y=N7(r,r===Lt?y:0,r.cancelPendingCommit!==null||r.timeoutHandle!==-1),y===0?null:(MN(r,y,d),YN(r,C1()),r.callbackNode!=null&&r.callbackNode===h?VN.bind(null,r):null)}function XN(r,d){if(Es())return null;MN(r,d,!0)}function ot1(){ht1(function(){(wt&6)!==0?lt(X3,it1):WN()})}function ry(){return a0===0&&(a0=IT()),a0}function KN(r){return r==null||typeof r=="symbol"||typeof r=="boolean"?null:typeof r=="function"?r:z7(""+r)}function QN(r,d){var h=d.ownerDocument.createElement("input");return h.name=d.name,h.value=d.value,r.id&&h.setAttribute("form",r.id),d.parentNode.insertBefore(h,d),r=new FormData(r),h.parentNode.removeChild(h),r}function ut1(r,d,h,y,_){if(d==="submit"&&h&&h.stateNode===_){var E=KN((_[In]||null).action),N=y.submitter;N&&(d=(d=N[In]||null)?KN(d.formAction):N.getAttribute("formAction"),d!==null&&(E=d,N=null));var L=new I7("action","action",null,y,_);r.push({event:L,listeners:[{instance:null,listener:function(){if(y.defaultPrevented){if(a0!==0){var H=N?QN(_,N):new FormData(_);Tm(h,{pending:!0,data:H,method:_.method,action:E},null,H)}}else typeof E=="function"&&(L.preventDefault(),H=N?QN(_,N):new FormData(_),Tm(h,{pending:!0,data:H,method:_.method,action:E},E,H))},currentTarget:_}]})}}for(var sy=0;sy<Yp.length;sy++){var cy=Yp[sy],lt1=cy.toLowerCase(),at1=cy[0].toUpperCase()+cy.slice(1);h3(lt1,"on"+at1)}h3(M$,"onAnimationEnd"),h3(N$,"onAnimationIteration"),h3(R$,"onAnimationStart"),h3("dblclick","onDoubleClick"),h3("focusin","onFocus"),h3("focusout","onBlur"),h3(S11,"onTransitionRun"),h3(A11,"onTransitionStart"),h3(C11,"onTransitionCancel"),h3(D$,"onTransitionEnd"),P6("onMouseEnter",["mouseout","mouseover"]),P6("onMouseLeave",["mouseout","mouseover"]),P6("onPointerEnter",["pointerout","pointerover"]),P6("onPointerLeave",["pointerout","pointerover"]),Gu("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Gu("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Gu("onBeforeInput",["compositionend","keypress","textInput","paste"]),Gu("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Gu("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Gu("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var s9="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),rt1=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(s9));function ZN(r,d){d=(d&4)!==0;for(var h=0;h<r.length;h++){var y=r[h],_=y.event;y=y.listeners;t:{var E=void 0;if(d)for(var N=y.length-1;0<=N;N--){var L=y[N],H=L.instance,J=L.currentTarget;if(L=L.listener,H!==E&&_.isPropagationStopped())break t;E=L,_.currentTarget=J;try{E(_)}catch(a1){fs(a1)}_.currentTarget=null,E=H}else for(N=0;N<y.length;N++){if(L=y[N],H=L.instance,J=L.currentTarget,L=L.listener,H!==E&&_.isPropagationStopped())break t;E=L,_.currentTarget=J;try{E(_)}catch(a1){fs(a1)}_.currentTarget=null,E=H}}}}function ut(r,d){var h=d[Ep];h===void 0&&(h=d[Ep]=new Set);var y=r+"__bubble";h.has(y)||(JN(d,r,2,!1),h.add(y))}function dy(r,d,h){var y=0;d&&(y|=4),JN(h,r,y,d)}var Cs="_reactListening"+Math.random().toString(36).slice(2);function fy(r){if(!r[Cs]){r[Cs]=!0,WT.forEach(function(h){h!=="selectionchange"&&(rt1.has(h)||dy(h,!1,r),dy(h,!0,r))});var d=r.nodeType===9?r:r.ownerDocument;d===null||d[Cs]||(d[Cs]=!0,dy("selectionchange",!1,d))}}function JN(r,d,h,y){switch(ER(d)){case 2:var _=Ft1;break;case 8:_=zt1;break;default:_=Cy}h=_.bind(null,d,h,r),_=void 0,!Op||d!=="touchstart"&&d!=="touchmove"&&d!=="wheel"||(_=!0),y?_!==void 0?r.addEventListener(d,h,{capture:!0,passive:_}):r.addEventListener(d,h,!0):_!==void 0?r.addEventListener(d,h,{passive:_}):r.addEventListener(d,h,!1)}function gy(r,d,h,y,_){var E=y;if((d&1)===0&&(d&2)===0&&y!==null)t:for(;;){if(y===null)return;var N=y.tag;if(N===3||N===4){var L=y.stateNode.containerInfo;if(L===_)break;if(N===4)for(N=y.return;N!==null;){var H=N.tag;if((H===3||H===4)&&N.stateNode.containerInfo===_)return;N=N.return}for(;L!==null;){if(N=z6(L),N===null)return;if(H=N.tag,H===5||H===6||H===26||H===27){y=E=N;continue t}L=L.parentNode}}y=y.return}l$(function(){var J=E,a1=Rp(h),c1=[];t:{var t1=O$.get(r);if(t1!==void 0){var e1=I7,G1=r;switch(r){case"keypress":if(j7(h)===0)break t;case"keydown":case"keyup":e1=n11;break;case"focusin":G1="focus",e1=jp;break;case"focusout":G1="blur",e1=jp;break;case"beforeblur":case"afterblur":e1=jp;break;case"click":if(h.button===2)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e1=s$;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e1=HJ;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e1=u11;break;case M$:case N$:case R$:e1=YJ;break;case D$:e1=a11;break;case"scroll":case"scrollend":e1=UJ;break;case"wheel":e1=s11;break;case"copy":case"cut":case"paste":e1=XJ;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e1=d$;break;case"toggle":case"beforetoggle":e1=d11}var U1=(d&4)!==0,$t=!U1&&(r==="scroll"||r==="scrollend"),K=U1?t1!==null?t1+"Capture":null:t1;U1=[];for(var X=J,Z;X!==null;){var s1=X;if(Z=s1.stateNode,s1=s1.tag,s1!==5&&s1!==26&&s1!==27||Z===null||K===null||(s1=Ta(X,K),s1!=null&&U1.push(c9(X,s1,Z))),$t)break;X=X.return}0<U1.length&&(t1=new e1(t1,G1,null,h,a1),c1.push({event:t1,listeners:U1}))}}if((d&7)===0){t:{if(t1=r==="mouseover"||r==="pointerover",e1=r==="mouseout"||r==="pointerout",t1&&h!==Np&&(G1=h.relatedTarget||h.fromElement)&&(z6(G1)||G1[F6]))break t;if((e1||t1)&&(t1=a1.window===a1?a1:(t1=a1.ownerDocument)?t1.defaultView||t1.parentWindow:window,e1?(G1=h.relatedTarget||h.toElement,e1=J,G1=G1?z6(G1):null,G1!==null&&($t=u(G1),U1=G1.tag,G1!==$t||U1!==5&&U1!==27&&U1!==6)&&(G1=null)):(e1=null,G1=J),e1!==G1)){if(U1=s$,s1="onMouseLeave",K="onMouseEnter",X="mouse",(r==="pointerout"||r==="pointerover")&&(U1=d$,s1="onPointerLeave",K="onPointerEnter",X="pointer"),$t=e1==null?t1:ka(e1),Z=G1==null?t1:ka(G1),t1=new U1(s1,X+"leave",e1,h,a1),t1.target=$t,t1.relatedTarget=Z,s1=null,z6(a1)===J&&(U1=new U1(K,X+"enter",G1,h,a1),U1.target=Z,U1.relatedTarget=$t,s1=U1),$t=s1,e1&&G1)e:{for(U1=e1,K=G1,X=0,Z=U1;Z;Z=m5(Z))X++;for(Z=0,s1=K;s1;s1=m5(s1))Z++;for(;0<X-Z;)U1=m5(U1),X--;for(;0<Z-X;)K=m5(K),Z--;for(;X--;){if(U1===K||K!==null&&U1===K.alternate)break e;U1=m5(U1),K=m5(K)}U1=null}else U1=null;e1!==null&&tR(c1,t1,e1,U1,!1),G1!==null&&$t!==null&&tR(c1,$t,G1,U1,!0)}}t:{if(t1=J?ka(J):window,e1=t1.nodeName&&t1.nodeName.toLowerCase(),e1==="select"||e1==="input"&&t1.type==="file")var k1=b$;else if(y$(t1))if(x$)k1=_11;else{k1=b11;var et=v11}else e1=t1.nodeName,!e1||e1.toLowerCase()!=="input"||t1.type!=="checkbox"&&t1.type!=="radio"?J&&Mp(J.elementType)&&(k1=b$):k1=x11;if(k1&&(k1=k1(r,J))){v$(c1,k1,h,a1);break t}et&&et(r,t1,J),r==="focusout"&&J&&t1.type==="number"&&J.memoizedProps.value!=null&&$p(t1,"number",t1.value)}switch(et=J?ka(J):window,r){case"focusin":(y$(et)||et.contentEditable==="true")&&(W6=et,Hp=J,za=null);break;case"focusout":za=Hp=W6=null;break;case"mousedown":Gp=!0;break;case"contextmenu":case"mouseup":case"dragend":Gp=!1,T$(c1,h,a1);break;case"selectionchange":if(E11)break;case"keydown":case"keyup":T$(c1,h,a1)}var O1;if(Ip)t:{switch(r){case"compositionstart":var q1="onCompositionStart";break t;case"compositionend":q1="onCompositionEnd";break t;case"compositionupdate":q1="onCompositionUpdate";break t}q1=void 0}else G6?p$(r,h)&&(q1="onCompositionEnd"):r==="keydown"&&h.keyCode===229&&(q1="onCompositionStart");q1&&(f$&&h.locale!=="ko"&&(G6||q1!=="onCompositionStart"?q1==="onCompositionEnd"&&G6&&(O1=a$()):(y4=a1,Fp="value"in y4?y4.value:y4.textContent,G6=!0)),et=ks(J,q1),0<et.length&&(q1=new c$(q1,r,null,h,a1),c1.push({event:q1,listeners:et}),O1?q1.data=O1:(O1=m$(h),O1!==null&&(q1.data=O1)))),(O1=g11?h11(r,h):p11(r,h))&&(q1=ks(J,"onBeforeInput"),0<q1.length&&(et=new c$("onBeforeInput","beforeinput",null,h,a1),c1.push({event:et,listeners:q1}),et.data=O1)),ut1(c1,r,J,h,a1)}ZN(c1,d)})}function c9(r,d,h){return{instance:r,listener:d,currentTarget:h}}function ks(r,d){for(var h=d+"Capture",y=[];r!==null;){var _=r,E=_.stateNode;if(_=_.tag,_!==5&&_!==26&&_!==27||E===null||(_=Ta(r,h),_!=null&&y.unshift(c9(r,_,E)),_=Ta(r,d),_!=null&&y.push(c9(r,_,E))),r.tag===3)return y;r=r.return}return[]}function m5(r){if(r===null)return null;do r=r.return;while(r&&r.tag!==5&&r.tag!==27);return r||null}function tR(r,d,h,y,_){for(var E=d._reactName,N=[];h!==null&&h!==y;){var L=h,H=L.alternate,J=L.stateNode;if(L=L.tag,H!==null&&H===y)break;L!==5&&L!==26&&L!==27||J===null||(H=J,_?(J=Ta(h,E),J!=null&&N.unshift(c9(h,J,H))):_||(J=Ta(h,E),J!=null&&N.push(c9(h,J,H)))),h=h.return}N.length!==0&&r.push({event:d,listeners:N})}var st1=/\r\n?/g,ct1=/\u0000|\uFFFD/g;function eR(r){return(typeof r=="string"?r:""+r).replace(st1,`
`).replace(ct1,"")}function nR(r,d){return d=eR(d),eR(r)===d}function Ts(){}function Tt(r,d,h,y,_,E){switch(h){case"children":typeof y=="string"?d==="body"||d==="textarea"&&y===""||U6(r,y):(typeof y=="number"||typeof y=="bigint")&&d!=="body"&&U6(r,""+y);break;case"className":D7(r,"class",y);break;case"tabIndex":D7(r,"tabindex",y);break;case"dir":case"role":case"viewBox":case"width":case"height":D7(r,h,y);break;case"style":o$(r,y,E);break;case"data":if(d!=="object"){D7(r,"data",y);break}case"src":case"href":if(y===""&&(d!=="a"||h!=="href")){r.removeAttribute(h);break}if(y==null||typeof y=="function"||typeof y=="symbol"||typeof y=="boolean"){r.removeAttribute(h);break}y=z7(""+y),r.setAttribute(h,y);break;case"action":case"formAction":if(typeof y=="function"){r.setAttribute(h,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof E=="function"&&(h==="formAction"?(d!=="input"&&Tt(r,d,"name",_.name,_,null),Tt(r,d,"formEncType",_.formEncType,_,null),Tt(r,d,"formMethod",_.formMethod,_,null),Tt(r,d,"formTarget",_.formTarget,_,null)):(Tt(r,d,"encType",_.encType,_,null),Tt(r,d,"method",_.method,_,null),Tt(r,d,"target",_.target,_,null)));if(y==null||typeof y=="symbol"||typeof y=="boolean"){r.removeAttribute(h);break}y=z7(""+y),r.setAttribute(h,y);break;case"onClick":y!=null&&(r.onclick=Ts);break;case"onScroll":y!=null&&ut("scroll",r);break;case"onScrollEnd":y!=null&&ut("scrollend",r);break;case"dangerouslySetInnerHTML":if(y!=null){if(typeof y!="object"||!("__html"in y))throw Error(i(61));if(h=y.__html,h!=null){if(_.children!=null)throw Error(i(60));r.innerHTML=h}}break;case"multiple":r.multiple=y&&typeof y!="function"&&typeof y!="symbol";break;case"muted":r.muted=y&&typeof y!="function"&&typeof y!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(y==null||typeof y=="function"||typeof y=="boolean"||typeof y=="symbol"){r.removeAttribute("xlink:href");break}h=z7(""+y),r.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",h);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":y!=null&&typeof y!="function"&&typeof y!="symbol"?r.setAttribute(h,""+y):r.removeAttribute(h);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":y&&typeof y!="function"&&typeof y!="symbol"?r.setAttribute(h,""):r.removeAttribute(h);break;case"capture":case"download":y===!0?r.setAttribute(h,""):y!==!1&&y!=null&&typeof y!="function"&&typeof y!="symbol"?r.setAttribute(h,y):r.removeAttribute(h);break;case"cols":case"rows":case"size":case"span":y!=null&&typeof y!="function"&&typeof y!="symbol"&&!isNaN(y)&&1<=y?r.setAttribute(h,y):r.removeAttribute(h);break;case"rowSpan":case"start":y==null||typeof y=="function"||typeof y=="symbol"||isNaN(y)?r.removeAttribute(h):r.setAttribute(h,y);break;case"popover":ut("beforetoggle",r),ut("toggle",r),R7(r,"popover",y);break;case"xlinkActuate":Wi(r,"http://www.w3.org/1999/xlink","xlink:actuate",y);break;case"xlinkArcrole":Wi(r,"http://www.w3.org/1999/xlink","xlink:arcrole",y);break;case"xlinkRole":Wi(r,"http://www.w3.org/1999/xlink","xlink:role",y);break;case"xlinkShow":Wi(r,"http://www.w3.org/1999/xlink","xlink:show",y);break;case"xlinkTitle":Wi(r,"http://www.w3.org/1999/xlink","xlink:title",y);break;case"xlinkType":Wi(r,"http://www.w3.org/1999/xlink","xlink:type",y);break;case"xmlBase":Wi(r,"http://www.w3.org/XML/1998/namespace","xml:base",y);break;case"xmlLang":Wi(r,"http://www.w3.org/XML/1998/namespace","xml:lang",y);break;case"xmlSpace":Wi(r,"http://www.w3.org/XML/1998/namespace","xml:space",y);break;case"is":R7(r,"is",y);break;case"innerText":case"textContent":break;default:(!(2<h.length)||h[0]!=="o"&&h[0]!=="O"||h[1]!=="n"&&h[1]!=="N")&&(h=IJ.get(h)||h,R7(r,h,y))}}function hy(r,d,h,y,_,E){switch(h){case"style":o$(r,y,E);break;case"dangerouslySetInnerHTML":if(y!=null){if(typeof y!="object"||!("__html"in y))throw Error(i(61));if(h=y.__html,h!=null){if(_.children!=null)throw Error(i(60));r.innerHTML=h}}break;case"children":typeof y=="string"?U6(r,y):(typeof y=="number"||typeof y=="bigint")&&U6(r,""+y);break;case"onScroll":y!=null&&ut("scroll",r);break;case"onScrollEnd":y!=null&&ut("scrollend",r);break;case"onClick":y!=null&&(r.onclick=Ts);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!YT.hasOwnProperty(h))t:{if(h[0]==="o"&&h[1]==="n"&&(_=h.endsWith("Capture"),d=h.slice(2,_?h.length-7:void 0),E=r[In]||null,E=E!=null?E[h]:null,typeof E=="function"&&r.removeEventListener(d,E,_),typeof y=="function")){typeof E!="function"&&E!==null&&(h in r?r[h]=null:r.hasAttribute(h)&&r.removeAttribute(h)),r.addEventListener(d,y,_);break t}h in r?r[h]=y:y===!0?r.setAttribute(h,""):R7(r,h,y)}}}function Ie(r,d,h){switch(d){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ut("error",r),ut("load",r);var y=!1,_=!1,E;for(E in h)if(h.hasOwnProperty(E)){var N=h[E];if(N!=null)switch(E){case"src":y=!0;break;case"srcSet":_=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(i(137,d));default:Tt(r,d,E,N,h,null)}}_&&Tt(r,d,"srcSet",h.srcSet,h,null),y&&Tt(r,d,"src",h.src,h,null);return;case"input":ut("invalid",r);var L=E=N=_=null,H=null,J=null;for(y in h)if(h.hasOwnProperty(y)){var a1=h[y];if(a1!=null)switch(y){case"name":_=a1;break;case"type":N=a1;break;case"checked":H=a1;break;case"defaultChecked":J=a1;break;case"value":E=a1;break;case"defaultValue":L=a1;break;case"children":case"dangerouslySetInnerHTML":if(a1!=null)throw Error(i(137,d));break;default:Tt(r,d,y,a1,h,null)}}t$(r,E,L,H,J,N,_,!1),O7(r);return;case"select":ut("invalid",r),y=N=E=null;for(_ in h)if(h.hasOwnProperty(_)&&(L=h[_],L!=null))switch(_){case"value":E=L;break;case"defaultValue":N=L;break;case"multiple":y=L;default:Tt(r,d,_,L,h,null)}d=E,h=N,r.multiple=!!y,d!=null?B6(r,!!y,d,!1):h!=null&&B6(r,!!y,h,!0);return;case"textarea":ut("invalid",r),E=_=y=null;for(N in h)if(h.hasOwnProperty(N)&&(L=h[N],L!=null))switch(N){case"value":y=L;break;case"defaultValue":_=L;break;case"children":E=L;break;case"dangerouslySetInnerHTML":if(L!=null)throw Error(i(91));break;default:Tt(r,d,N,L,h,null)}n$(r,y,_,E),O7(r);return;case"option":for(H in h)if(h.hasOwnProperty(H)&&(y=h[H],y!=null))switch(H){case"selected":r.selected=y&&typeof y!="function"&&typeof y!="symbol";break;default:Tt(r,d,H,y,h,null)}return;case"dialog":ut("beforetoggle",r),ut("toggle",r),ut("cancel",r),ut("close",r);break;case"iframe":case"object":ut("load",r);break;case"video":case"audio":for(y=0;y<s9.length;y++)ut(s9[y],r);break;case"image":ut("error",r),ut("load",r);break;case"details":ut("toggle",r);break;case"embed":case"source":case"link":ut("error",r),ut("load",r);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(J in h)if(h.hasOwnProperty(J)&&(y=h[J],y!=null))switch(J){case"children":case"dangerouslySetInnerHTML":throw Error(i(137,d));default:Tt(r,d,J,y,h,null)}return;default:if(Mp(d)){for(a1 in h)h.hasOwnProperty(a1)&&(y=h[a1],y!==void 0&&hy(r,d,a1,y,h,void 0));return}}for(L in h)h.hasOwnProperty(L)&&(y=h[L],y!=null&&Tt(r,d,L,y,h,null))}function dt1(r,d,h,y){switch(d){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var _=null,E=null,N=null,L=null,H=null,J=null,a1=null;for(e1 in h){var c1=h[e1];if(h.hasOwnProperty(e1)&&c1!=null)switch(e1){case"checked":break;case"value":break;case"defaultValue":H=c1;default:y.hasOwnProperty(e1)||Tt(r,d,e1,null,y,c1)}}for(var t1 in y){var e1=y[t1];if(c1=h[t1],y.hasOwnProperty(t1)&&(e1!=null||c1!=null))switch(t1){case"type":E=e1;break;case"name":_=e1;break;case"checked":J=e1;break;case"defaultChecked":a1=e1;break;case"value":N=e1;break;case"defaultValue":L=e1;break;case"children":case"dangerouslySetInnerHTML":if(e1!=null)throw Error(i(137,d));break;default:e1!==c1&&Tt(r,d,t1,e1,y,c1)}}Tp(r,N,L,H,J,a1,E,_);return;case"select":e1=N=L=t1=null;for(E in h)if(H=h[E],h.hasOwnProperty(E)&&H!=null)switch(E){case"value":break;case"multiple":e1=H;default:y.hasOwnProperty(E)||Tt(r,d,E,null,y,H)}for(_ in y)if(E=y[_],H=h[_],y.hasOwnProperty(_)&&(E!=null||H!=null))switch(_){case"value":t1=E;break;case"defaultValue":L=E;break;case"multiple":N=E;default:E!==H&&Tt(r,d,_,E,y,H)}d=L,h=N,y=e1,t1!=null?B6(r,!!h,t1,!1):!!y!=!!h&&(d!=null?B6(r,!!h,d,!0):B6(r,!!h,h?[]:"",!1));return;case"textarea":e1=t1=null;for(L in h)if(_=h[L],h.hasOwnProperty(L)&&_!=null&&!y.hasOwnProperty(L))switch(L){case"value":break;case"children":break;default:Tt(r,d,L,null,y,_)}for(N in y)if(_=y[N],E=h[N],y.hasOwnProperty(N)&&(_!=null||E!=null))switch(N){case"value":t1=_;break;case"defaultValue":e1=_;break;case"children":break;case"dangerouslySetInnerHTML":if(_!=null)throw Error(i(91));break;default:_!==E&&Tt(r,d,N,_,y,E)}e$(r,t1,e1);return;case"option":for(var G1 in h)if(t1=h[G1],h.hasOwnProperty(G1)&&t1!=null&&!y.hasOwnProperty(G1))switch(G1){case"selected":r.selected=!1;break;default:Tt(r,d,G1,null,y,t1)}for(H in y)if(t1=y[H],e1=h[H],y.hasOwnProperty(H)&&t1!==e1&&(t1!=null||e1!=null))switch(H){case"selected":r.selected=t1&&typeof t1!="function"&&typeof t1!="symbol";break;default:Tt(r,d,H,t1,y,e1)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var U1 in h)t1=h[U1],h.hasOwnProperty(U1)&&t1!=null&&!y.hasOwnProperty(U1)&&Tt(r,d,U1,null,y,t1);for(J in y)if(t1=y[J],e1=h[J],y.hasOwnProperty(J)&&t1!==e1&&(t1!=null||e1!=null))switch(J){case"children":case"dangerouslySetInnerHTML":if(t1!=null)throw Error(i(137,d));break;default:Tt(r,d,J,t1,y,e1)}return;default:if(Mp(d)){for(var $t in h)t1=h[$t],h.hasOwnProperty($t)&&t1!==void 0&&!y.hasOwnProperty($t)&&hy(r,d,$t,void 0,y,t1);for(a1 in y)t1=y[a1],e1=h[a1],!y.hasOwnProperty(a1)||t1===e1||t1===void 0&&e1===void 0||hy(r,d,a1,t1,y,e1);return}}for(var K in h)t1=h[K],h.hasOwnProperty(K)&&t1!=null&&!y.hasOwnProperty(K)&&Tt(r,d,K,null,y,t1);for(c1 in y)t1=y[c1],e1=h[c1],!y.hasOwnProperty(c1)||t1===e1||t1==null&&e1==null||Tt(r,d,c1,t1,y,e1)}var py=null,my=null;function $s(r){return r.nodeType===9?r:r.ownerDocument}function iR(r){switch(r){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function oR(r,d){if(r===0)switch(d){case"svg":return 1;case"math":return 2;default:return 0}return r===1&&d==="foreignObject"?0:r}function yy(r,d){return r==="textarea"||r==="noscript"||typeof d.children=="string"||typeof d.children=="number"||typeof d.children=="bigint"||typeof d.dangerouslySetInnerHTML=="object"&&d.dangerouslySetInnerHTML!==null&&d.dangerouslySetInnerHTML.__html!=null}var vy=null;function ft1(){var r=window.event;return r&&r.type==="popstate"?r===vy?!1:(vy=r,!0):(vy=null,!1)}var uR=typeof setTimeout=="function"?setTimeout:void 0,gt1=typeof clearTimeout=="function"?clearTimeout:void 0,lR=typeof Promise=="function"?Promise:void 0,ht1=typeof queueMicrotask=="function"?queueMicrotask:typeof lR<"u"?function(r){return lR.resolve(null).then(r).catch(pt1)}:uR;function pt1(r){setTimeout(function(){throw r})}function D4(r){return r==="head"}function aR(r,d){var h=d,y=0,_=0;do{var E=h.nextSibling;if(r.removeChild(h),E&&E.nodeType===8)if(h=E.data,h==="/$"){if(0<y&&8>y){h=y;var N=r.ownerDocument;if(h&1&&d9(N.documentElement),h&2&&d9(N.body),h&4)for(h=N.head,d9(h),N=h.firstChild;N;){var L=N.nextSibling,H=N.nodeName;N[Ca]||H==="SCRIPT"||H==="STYLE"||H==="LINK"&&N.rel.toLowerCase()==="stylesheet"||h.removeChild(N),N=L}}if(_===0){r.removeChild(E),b9(d);return}_--}else h==="$"||h==="$?"||h==="$!"?_++:y=h.charCodeAt(0)-48;else y=0;h=E}while(h);b9(d)}function by(r){var d=r.firstChild;for(d&&d.nodeType===10&&(d=d.nextSibling);d;){var h=d;switch(d=d.nextSibling,h.nodeName){case"HTML":case"HEAD":case"BODY":by(h),Sp(h);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(h.rel.toLowerCase()==="stylesheet")continue}r.removeChild(h)}}function mt1(r,d,h,y){for(;r.nodeType===1;){var _=h;if(r.nodeName.toLowerCase()!==d.toLowerCase()){if(!y&&(r.nodeName!=="INPUT"||r.type!=="hidden"))break}else if(y){if(!r[Ca])switch(d){case"meta":if(!r.hasAttribute("itemprop"))break;return r;case"link":if(E=r.getAttribute("rel"),E==="stylesheet"&&r.hasAttribute("data-precedence"))break;if(E!==_.rel||r.getAttribute("href")!==(_.href==null||_.href===""?null:_.href)||r.getAttribute("crossorigin")!==(_.crossOrigin==null?null:_.crossOrigin)||r.getAttribute("title")!==(_.title==null?null:_.title))break;return r;case"style":if(r.hasAttribute("data-precedence"))break;return r;case"script":if(E=r.getAttribute("src"),(E!==(_.src==null?null:_.src)||r.getAttribute("type")!==(_.type==null?null:_.type)||r.getAttribute("crossorigin")!==(_.crossOrigin==null?null:_.crossOrigin))&&E&&r.hasAttribute("async")&&!r.hasAttribute("itemprop"))break;return r;default:return r}}else if(d==="input"&&r.type==="hidden"){var E=_.name==null?null:""+_.name;if(_.type==="hidden"&&r.getAttribute("name")===E)return r}else return r;if(r=m3(r.nextSibling),r===null)break}return null}function yt1(r,d,h){if(d==="")return null;for(;r.nodeType!==3;)if((r.nodeType!==1||r.nodeName!=="INPUT"||r.type!=="hidden")&&!h||(r=m3(r.nextSibling),r===null))return null;return r}function xy(r){return r.data==="$!"||r.data==="$?"&&r.ownerDocument.readyState==="complete"}function vt1(r,d){var h=r.ownerDocument;if(r.data!=="$?"||h.readyState==="complete")d();else{var y=function(){d(),h.removeEventListener("DOMContentLoaded",y)};h.addEventListener("DOMContentLoaded",y),r._reactRetry=y}}function m3(r){for(;r!=null;r=r.nextSibling){var d=r.nodeType;if(d===1||d===3)break;if(d===8){if(d=r.data,d==="$"||d==="$!"||d==="$?"||d==="F!"||d==="F")break;if(d==="/$")return null}}return r}var _y=null;function rR(r){r=r.previousSibling;for(var d=0;r;){if(r.nodeType===8){var h=r.data;if(h==="$"||h==="$!"||h==="$?"){if(d===0)return r;d--}else h==="/$"&&d++}r=r.previousSibling}return null}function sR(r,d,h){switch(d=$s(h),r){case"html":if(r=d.documentElement,!r)throw Error(i(452));return r;case"head":if(r=d.head,!r)throw Error(i(453));return r;case"body":if(r=d.body,!r)throw Error(i(454));return r;default:throw Error(i(451))}}function d9(r){for(var d=r.attributes;d.length;)r.removeAttributeNode(d[0]);Sp(r)}var I2=new Map,cR=new Set;function Ms(r){return typeof r.getRootNode=="function"?r.getRootNode():r.nodeType===9?r:r.ownerDocument}var lo=P.d;P.d={f:bt1,r:xt1,D:_t1,C:wt1,L:Et1,m:St1,X:Ct1,S:At1,M:kt1};function bt1(){var r=lo.f(),d=_s();return r||d}function xt1(r){var d=L6(r);d!==null&&d.tag===5&&d.type==="form"?MM(d):lo.r(r)}var y5=typeof document>"u"?null:document;function dR(r,d,h){var y=y5;if(y&&typeof d=="string"&&d){var _=D2(d);_='link[rel="'+r+'"][href="'+_+'"]',typeof h=="string"&&(_+='[crossorigin="'+h+'"]'),cR.has(_)||(cR.add(_),r={rel:r,crossOrigin:h,href:d},y.querySelector(_)===null&&(d=y.createElement("link"),Ie(d,"link",r),Ee(d),y.head.appendChild(d)))}}function _t1(r){lo.D(r),dR("dns-prefetch",r,null)}function wt1(r,d){lo.C(r,d),dR("preconnect",r,d)}function Et1(r,d,h){lo.L(r,d,h);var y=y5;if(y&&r&&d){var _='link[rel="preload"][as="'+D2(d)+'"]';d==="image"&&h&&h.imageSrcSet?(_+='[imagesrcset="'+D2(h.imageSrcSet)+'"]',typeof h.imageSizes=="string"&&(_+='[imagesizes="'+D2(h.imageSizes)+'"]')):_+='[href="'+D2(r)+'"]';var E=_;switch(d){case"style":E=v5(r);break;case"script":E=b5(r)}I2.has(E)||(r=f({rel:"preload",href:d==="image"&&h&&h.imageSrcSet?void 0:r,as:d},h),I2.set(E,r),y.querySelector(_)!==null||d==="style"&&y.querySelector(f9(E))||d==="script"&&y.querySelector(g9(E))||(d=y.createElement("link"),Ie(d,"link",r),Ee(d),y.head.appendChild(d)))}}function St1(r,d){lo.m(r,d);var h=y5;if(h&&r){var y=d&&typeof d.as=="string"?d.as:"script",_='link[rel="modulepreload"][as="'+D2(y)+'"][href="'+D2(r)+'"]',E=_;switch(y){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":E=b5(r)}if(!I2.has(E)&&(r=f({rel:"modulepreload",href:r},d),I2.set(E,r),h.querySelector(_)===null)){switch(y){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(h.querySelector(g9(E)))return}y=h.createElement("link"),Ie(y,"link",r),Ee(y),h.head.appendChild(y)}}}function At1(r,d,h){lo.S(r,d,h);var y=y5;if(y&&r){var _=j6(y).hoistableStyles,E=v5(r);d=d||"default";var N=_.get(E);if(!N){var L={loading:0,preload:null};if(N=y.querySelector(f9(E)))L.loading=5;else{r=f({rel:"stylesheet",href:r,"data-precedence":d},h),(h=I2.get(E))&&wy(r,h);var H=N=y.createElement("link");Ee(H),Ie(H,"link",r),H._p=new Promise(function(J,a1){H.onload=J,H.onerror=a1}),H.addEventListener("load",function(){L.loading|=1}),H.addEventListener("error",function(){L.loading|=2}),L.loading|=4,Ns(N,d,y)}N={type:"stylesheet",instance:N,count:1,state:L},_.set(E,N)}}}function Ct1(r,d){lo.X(r,d);var h=y5;if(h&&r){var y=j6(h).hoistableScripts,_=b5(r),E=y.get(_);E||(E=h.querySelector(g9(_)),E||(r=f({src:r,async:!0},d),(d=I2.get(_))&&Ey(r,d),E=h.createElement("script"),Ee(E),Ie(E,"link",r),h.head.appendChild(E)),E={type:"script",instance:E,count:1,state:null},y.set(_,E))}}function kt1(r,d){lo.M(r,d);var h=y5;if(h&&r){var y=j6(h).hoistableScripts,_=b5(r),E=y.get(_);E||(E=h.querySelector(g9(_)),E||(r=f({src:r,async:!0,type:"module"},d),(d=I2.get(_))&&Ey(r,d),E=h.createElement("script"),Ee(E),Ie(E,"link",r),h.head.appendChild(E)),E={type:"script",instance:E,count:1,state:null},y.set(_,E))}}function fR(r,d,h,y){var _=(_=x1.current)?Ms(_):null;if(!_)throw Error(i(446));switch(r){case"meta":case"title":return null;case"style":return typeof h.precedence=="string"&&typeof h.href=="string"?(d=v5(h.href),h=j6(_).hoistableStyles,y=h.get(d),y||(y={type:"style",instance:null,count:0,state:null},h.set(d,y)),y):{type:"void",instance:null,count:0,state:null};case"link":if(h.rel==="stylesheet"&&typeof h.href=="string"&&typeof h.precedence=="string"){r=v5(h.href);var E=j6(_).hoistableStyles,N=E.get(r);if(N||(_=_.ownerDocument||_,N={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},E.set(r,N),(E=_.querySelector(f9(r)))&&!E._p&&(N.instance=E,N.state.loading=5),I2.has(r)||(h={rel:"preload",as:"style",href:h.href,crossOrigin:h.crossOrigin,integrity:h.integrity,media:h.media,hrefLang:h.hrefLang,referrerPolicy:h.referrerPolicy},I2.set(r,h),E||Tt1(_,r,h,N.state))),d&&y===null)throw Error(i(528,""));return N}if(d&&y!==null)throw Error(i(529,""));return null;case"script":return d=h.async,h=h.src,typeof h=="string"&&d&&typeof d!="function"&&typeof d!="symbol"?(d=b5(h),h=j6(_).hoistableScripts,y=h.get(d),y||(y={type:"script",instance:null,count:0,state:null},h.set(d,y)),y):{type:"void",instance:null,count:0,state:null};default:throw Error(i(444,r))}}function v5(r){return'href="'+D2(r)+'"'}function f9(r){return'link[rel="stylesheet"]['+r+"]"}function gR(r){return f({},r,{"data-precedence":r.precedence,precedence:null})}function Tt1(r,d,h,y){r.querySelector('link[rel="preload"][as="style"]['+d+"]")?y.loading=1:(d=r.createElement("link"),y.preload=d,d.addEventListener("load",function(){return y.loading|=1}),d.addEventListener("error",function(){return y.loading|=2}),Ie(d,"link",h),Ee(d),r.head.appendChild(d))}function b5(r){return'[src="'+D2(r)+'"]'}function g9(r){return"script[async]"+r}function hR(r,d,h){if(d.count++,d.instance===null)switch(d.type){case"style":var y=r.querySelector('style[data-href~="'+D2(h.href)+'"]');if(y)return d.instance=y,Ee(y),y;var _=f({},h,{"data-href":h.href,"data-precedence":h.precedence,href:null,precedence:null});return y=(r.ownerDocument||r).createElement("style"),Ee(y),Ie(y,"style",_),Ns(y,h.precedence,r),d.instance=y;case"stylesheet":_=v5(h.href);var E=r.querySelector(f9(_));if(E)return d.state.loading|=4,d.instance=E,Ee(E),E;y=gR(h),(_=I2.get(_))&&wy(y,_),E=(r.ownerDocument||r).createElement("link"),Ee(E);var N=E;return N._p=new Promise(function(L,H){N.onload=L,N.onerror=H}),Ie(E,"link",y),d.state.loading|=4,Ns(E,h.precedence,r),d.instance=E;case"script":return E=b5(h.src),(_=r.querySelector(g9(E)))?(d.instance=_,Ee(_),_):(y=h,(_=I2.get(E))&&(y=f({},h),Ey(y,_)),r=r.ownerDocument||r,_=r.createElement("script"),Ee(_),Ie(_,"link",y),r.head.appendChild(_),d.instance=_);case"void":return null;default:throw Error(i(443,d.type))}else d.type==="stylesheet"&&(d.state.loading&4)===0&&(y=d.instance,d.state.loading|=4,Ns(y,h.precedence,r));return d.instance}function Ns(r,d,h){for(var y=h.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),_=y.length?y[y.length-1]:null,E=_,N=0;N<y.length;N++){var L=y[N];if(L.dataset.precedence===d)E=L;else if(E!==_)break}E?E.parentNode.insertBefore(r,E.nextSibling):(d=h.nodeType===9?h.head:h,d.insertBefore(r,d.firstChild))}function wy(r,d){r.crossOrigin==null&&(r.crossOrigin=d.crossOrigin),r.referrerPolicy==null&&(r.referrerPolicy=d.referrerPolicy),r.title==null&&(r.title=d.title)}function Ey(r,d){r.crossOrigin==null&&(r.crossOrigin=d.crossOrigin),r.referrerPolicy==null&&(r.referrerPolicy=d.referrerPolicy),r.integrity==null&&(r.integrity=d.integrity)}var Rs=null;function pR(r,d,h){if(Rs===null){var y=new Map,_=Rs=new Map;_.set(h,y)}else _=Rs,y=_.get(h),y||(y=new Map,_.set(h,y));if(y.has(r))return y;for(y.set(r,null),h=h.getElementsByTagName(r),_=0;_<h.length;_++){var E=h[_];if(!(E[Ca]||E[Qe]||r==="link"&&E.getAttribute("rel")==="stylesheet")&&E.namespaceURI!=="http://www.w3.org/2000/svg"){var N=E.getAttribute(d)||"";N=r+N;var L=y.get(N);L?L.push(E):y.set(N,[E])}}return y}function mR(r,d,h){r=r.ownerDocument||r,r.head.insertBefore(h,d==="title"?r.querySelector("head > title"):null)}function $t1(r,d,h){if(h===1||d.itemProp!=null)return!1;switch(r){case"meta":case"title":return!0;case"style":if(typeof d.precedence!="string"||typeof d.href!="string"||d.href==="")break;return!0;case"link":if(typeof d.rel!="string"||typeof d.href!="string"||d.href===""||d.onLoad||d.onError)break;switch(d.rel){case"stylesheet":return r=d.disabled,typeof d.precedence=="string"&&r==null;default:return!0}case"script":if(d.async&&typeof d.async!="function"&&typeof d.async!="symbol"&&!d.onLoad&&!d.onError&&d.src&&typeof d.src=="string")return!0}return!1}function yR(r){return!(r.type==="stylesheet"&&(r.state.loading&3)===0)}var h9=null;function Mt1(){}function Nt1(r,d,h){if(h9===null)throw Error(i(475));var y=h9;if(d.type==="stylesheet"&&(typeof h.media!="string"||matchMedia(h.media).matches!==!1)&&(d.state.loading&4)===0){if(d.instance===null){var _=v5(h.href),E=r.querySelector(f9(_));if(E){r=E._p,r!==null&&typeof r=="object"&&typeof r.then=="function"&&(y.count++,y=Ds.bind(y),r.then(y,y)),d.state.loading|=4,d.instance=E,Ee(E);return}E=r.ownerDocument||r,h=gR(h),(_=I2.get(_))&&wy(h,_),E=E.createElement("link"),Ee(E);var N=E;N._p=new Promise(function(L,H){N.onload=L,N.onerror=H}),Ie(E,"link",h),d.instance=E}y.stylesheets===null&&(y.stylesheets=new Map),y.stylesheets.set(d,r),(r=d.state.preload)&&(d.state.loading&3)===0&&(y.count++,d=Ds.bind(y),r.addEventListener("load",d),r.addEventListener("error",d))}}function Rt1(){if(h9===null)throw Error(i(475));var r=h9;return r.stylesheets&&r.count===0&&Sy(r,r.stylesheets),0<r.count?function(d){var h=setTimeout(function(){if(r.stylesheets&&Sy(r,r.stylesheets),r.unsuspend){var y=r.unsuspend;r.unsuspend=null,y()}},6e4);return r.unsuspend=d,function(){r.unsuspend=null,clearTimeout(h)}}:null}function Ds(){if(this.count--,this.count===0){if(this.stylesheets)Sy(this,this.stylesheets);else if(this.unsuspend){var r=this.unsuspend;this.unsuspend=null,r()}}}var Os=null;function Sy(r,d){r.stylesheets=null,r.unsuspend!==null&&(r.count++,Os=new Map,d.forEach(Dt1,r),Os=null,Ds.call(r))}function Dt1(r,d){if(!(d.state.loading&4)){var h=Os.get(r);if(h)var y=h.get(null);else{h=new Map,Os.set(r,h);for(var _=r.querySelectorAll("link[data-precedence],style[data-precedence]"),E=0;E<_.length;E++){var N=_[E];(N.nodeName==="LINK"||N.getAttribute("media")!=="not all")&&(h.set(N.dataset.precedence,N),y=N)}y&&h.set(null,y)}_=d.instance,N=_.getAttribute("data-precedence"),E=h.get(N)||y,E===y&&h.set(null,_),h.set(N,_),this.count++,y=Ds.bind(this),_.addEventListener("load",y),_.addEventListener("error",y),E?E.parentNode.insertBefore(_,E.nextSibling):(r=r.nodeType===9?r.head:r,r.insertBefore(_,r.firstChild)),d.state.loading|=4}}var p9={$$typeof:A,Provider:null,Consumer:null,_currentValue:q,_currentValue2:q,_threadCount:0};function Ot1(r,d,h,y,_,E,N,L){this.tag=1,this.containerInfo=r,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=xp(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=xp(0),this.hiddenUpdates=xp(null),this.identifierPrefix=y,this.onUncaughtError=_,this.onCaughtError=E,this.onRecoverableError=N,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=L,this.incompleteTransitions=new Map}function vR(r,d,h,y,_,E,N,L,H,J,a1,c1){return r=new Ot1(r,d,h,N,L,H,J,c1),d=1,E===!0&&(d|=24),E=s2(3,null,null,d),r.current=E,E.stateNode=r,d=um(),d.refCount++,r.pooledCache=d,d.refCount++,E.memoizedState={element:y,isDehydrated:h,cache:d},sm(E),r}function bR(r){return r?(r=K6,r):K6}function xR(r,d,h,y,_,E){_=bR(_),y.context===null?y.context=_:y.pendingContext=_,y=x4(d),y.payload={element:h},E=E===void 0?null:E,E!==null&&(y.callback=E),h=_4(r,y,d),h!==null&&(h2(h,r,d),Ga(h,r,d))}function _R(r,d){if(r=r.memoizedState,r!==null&&r.dehydrated!==null){var h=r.retryLane;r.retryLane=h!==0&&h<d?h:d}}function Ay(r,d){_R(r,d),(r=r.alternate)&&_R(r,d)}function wR(r){if(r.tag===13){var d=X6(r,67108864);d!==null&&h2(d,r,67108864),Ay(r,67108864)}}var Fs=!0;function Ft1(r,d,h,y){var _=R.T;R.T=null;var E=P.p;try{P.p=2,Cy(r,d,h,y)}finally{P.p=E,R.T=_}}function zt1(r,d,h,y){var _=R.T;R.T=null;var E=P.p;try{P.p=8,Cy(r,d,h,y)}finally{P.p=E,R.T=_}}function Cy(r,d,h,y){if(Fs){var _=ky(y);if(_===null)gy(r,d,y,zs,h),SR(r,y);else if(jt1(_,r,d,h,y))y.stopPropagation();else if(SR(r,y),d&4&&-1<Lt1.indexOf(r)){for(;_!==null;){var E=L6(_);if(E!==null)switch(E.tag){case 3:if(E=E.stateNode,E.current.memoizedState.isDehydrated){var N=Hu(E.pendingLanes);if(N!==0){var L=E;for(L.pendingLanes|=2,L.entangledLanes|=2;N;){var H=1<<31-a2(N);L.entanglements[1]|=H,N&=~H}ti(E),(wt&6)===0&&(bs=C1()+500,r9(0))}}break;case 13:L=X6(E,2),L!==null&&h2(L,E,2),_s(),Ay(E,2)}if(E=ky(y),E===null&&gy(r,d,y,zs,h),E===_)break;_=E}_!==null&&y.stopPropagation()}else gy(r,d,y,null,h)}}function ky(r){return r=Rp(r),Ty(r)}var zs=null;function Ty(r){if(zs=null,r=z6(r),r!==null){var d=u(r);if(d===null)r=null;else{var h=d.tag;if(h===13){if(r=l(d),r!==null)return r;r=null}else if(h===3){if(d.stateNode.current.memoizedState.isDehydrated)return d.tag===3?d.stateNode.containerInfo:null;r=null}else d!==r&&(r=null)}}return zs=r,null}function ER(r){switch(r){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(zt()){case X3:return 2;case ge:return 8;case Gi:case k7:return 32;case wa:return 268435456;default:return 32}default:return 32}}var $y=!1,O4=null,F4=null,z4=null,m9=new Map,y9=new Map,L4=[],Lt1="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function SR(r,d){switch(r){case"focusin":case"focusout":O4=null;break;case"dragenter":case"dragleave":F4=null;break;case"mouseover":case"mouseout":z4=null;break;case"pointerover":case"pointerout":m9.delete(d.pointerId);break;case"gotpointercapture":case"lostpointercapture":y9.delete(d.pointerId)}}function v9(r,d,h,y,_,E){return r===null||r.nativeEvent!==E?(r={blockedOn:d,domEventName:h,eventSystemFlags:y,nativeEvent:E,targetContainers:[_]},d!==null&&(d=L6(d),d!==null&&wR(d)),r):(r.eventSystemFlags|=y,d=r.targetContainers,_!==null&&d.indexOf(_)===-1&&d.push(_),r)}function jt1(r,d,h,y,_){switch(d){case"focusin":return O4=v9(O4,r,d,h,y,_),!0;case"dragenter":return F4=v9(F4,r,d,h,y,_),!0;case"mouseover":return z4=v9(z4,r,d,h,y,_),!0;case"pointerover":var E=_.pointerId;return m9.set(E,v9(m9.get(E)||null,r,d,h,y,_)),!0;case"gotpointercapture":return E=_.pointerId,y9.set(E,v9(y9.get(E)||null,r,d,h,y,_)),!0}return!1}function AR(r){var d=z6(r.target);if(d!==null){var h=u(d);if(h!==null){if(d=h.tag,d===13){if(d=l(h),d!==null){r.blockedOn=d,NJ(r.priority,function(){if(h.tag===13){var y=g2();y=_p(y);var _=X6(h,y);_!==null&&h2(_,h,y),Ay(h,y)}});return}}else if(d===3&&h.stateNode.current.memoizedState.isDehydrated){r.blockedOn=h.tag===3?h.stateNode.containerInfo:null;return}}}r.blockedOn=null}function Ls(r){if(r.blockedOn!==null)return!1;for(var d=r.targetContainers;0<d.length;){var h=ky(r.nativeEvent);if(h===null){h=r.nativeEvent;var y=new h.constructor(h.type,h);Np=y,h.target.dispatchEvent(y),Np=null}else return d=L6(h),d!==null&&wR(d),r.blockedOn=h,!1;d.shift()}return!0}function CR(r,d,h){Ls(r)&&h.delete(d)}function Pt1(){$y=!1,O4!==null&&Ls(O4)&&(O4=null),F4!==null&&Ls(F4)&&(F4=null),z4!==null&&Ls(z4)&&(z4=null),m9.forEach(CR),y9.forEach(CR)}function js(r,d){r.blockedOn===d&&(r.blockedOn=null,$y||($y=!0,t.unstable_scheduleCallback(t.unstable_NormalPriority,Pt1)))}var Ps=null;function kR(r){Ps!==r&&(Ps=r,t.unstable_scheduleCallback(t.unstable_NormalPriority,function(){Ps===r&&(Ps=null);for(var d=0;d<r.length;d+=3){var h=r[d],y=r[d+1],_=r[d+2];if(typeof y!="function"){if(Ty(y||h)===null)continue;break}var E=L6(h);E!==null&&(r.splice(d,3),d-=3,Tm(E,{pending:!0,data:_,method:h.method,action:y},y,_))}}))}function b9(r){function d(H){return js(H,r)}O4!==null&&js(O4,r),F4!==null&&js(F4,r),z4!==null&&js(z4,r),m9.forEach(d),y9.forEach(d);for(var h=0;h<L4.length;h++){var y=L4[h];y.blockedOn===r&&(y.blockedOn=null)}for(;0<L4.length&&(h=L4[0],h.blockedOn===null);)AR(h),h.blockedOn===null&&L4.shift();if(h=(r.ownerDocument||r).$$reactFormReplay,h!=null)for(y=0;y<h.length;y+=3){var _=h[y],E=h[y+1],N=_[In]||null;if(typeof E=="function")N||kR(h);else if(N){var L=null;if(E&&E.hasAttribute("formAction")){if(_=E,N=E[In]||null)L=N.formAction;else if(Ty(_)!==null)continue}else L=N.action;typeof L=="function"?h[y+1]=L:(h.splice(y,3),y-=3),kR(h)}}}function My(r){this._internalRoot=r}Is.prototype.render=My.prototype.render=function(r){var d=this._internalRoot;if(d===null)throw Error(i(409));var h=d.current,y=g2();xR(h,y,r,d,null,null)},Is.prototype.unmount=My.prototype.unmount=function(){var r=this._internalRoot;if(r!==null){this._internalRoot=null;var d=r.containerInfo;xR(r.current,2,null,r,null,null),_s(),d[F6]=null}};function Is(r){this._internalRoot=r}Is.prototype.unstable_scheduleHydration=function(r){if(r){var d=HT();r={blockedOn:null,target:r,priority:d};for(var h=0;h<L4.length&&d!==0&&d<L4[h].priority;h++);L4.splice(h,0,r),h===0&&AR(r)}};var TR=e.version;if(TR!=="19.1.1")throw Error(i(527,TR,"19.1.1"));P.findDOMNode=function(r){var d=r._reactInternals;if(d===void 0)throw typeof r.render=="function"?Error(i(188)):(r=Object.keys(r).join(","),Error(i(268,r)));return r=s(d),r=r!==null?c(r):null,r=r===null?null:r.stateNode,r};var It1={bundleType:0,version:"19.1.1",rendererPackageName:"react-dom",currentDispatcherRef:R,reconcilerVersion:"19.1.1"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Bs=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Bs.isDisabled&&Bs.supportsFiber)try{p4=Bs.inject(It1),Ke=Bs}catch{}}return _9.createRoot=function(r,d){if(!o(r))throw Error(i(299));var h=!1,y="",_=HM,E=GM,N=WM,L=null;return d!=null&&(d.unstable_strictMode===!0&&(h=!0),d.identifierPrefix!==void 0&&(y=d.identifierPrefix),d.onUncaughtError!==void 0&&(_=d.onUncaughtError),d.onCaughtError!==void 0&&(E=d.onCaughtError),d.onRecoverableError!==void 0&&(N=d.onRecoverableError),d.unstable_transitionCallbacks!==void 0&&(L=d.unstable_transitionCallbacks)),d=vR(r,1,!1,null,null,h,y,_,E,N,L,null),r[F6]=d.current,fy(r),new My(d)},_9.hydrateRoot=function(r,d,h){if(!o(r))throw Error(i(299));var y=!1,_="",E=HM,N=GM,L=WM,H=null,J=null;return h!=null&&(h.unstable_strictMode===!0&&(y=!0),h.identifierPrefix!==void 0&&(_=h.identifierPrefix),h.onUncaughtError!==void 0&&(E=h.onUncaughtError),h.onCaughtError!==void 0&&(N=h.onCaughtError),h.onRecoverableError!==void 0&&(L=h.onRecoverableError),h.unstable_transitionCallbacks!==void 0&&(H=h.unstable_transitionCallbacks),h.formState!==void 0&&(J=h.formState)),d=vR(r,1,!0,d,h??null,y,_,E,N,L,H,J),d.context=bR(null),h=d.current,y=g2(),y=_p(y),_=x4(y),_.callback=null,_4(h,_,y),h=y,d.current.lanes=h,Aa(d,h),ti(d),r[F6]=d.current,fy(r),new Is(d)},_9.version="19.1.1",_9}var jR;function Xt1(){if(jR)return Dy.exports;jR=1;function t(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}return t(),Dy.exports=Vt1(),Dy.exports}var Kt1=Xt1();/**
 * react-router v7.9.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */var PR="popstate";function Qt1(t={}){function e(o,u){let{pathname:l="/",search:a="",hash:s=""}=h6(o.location.hash.substring(1));return!l.startsWith("/")&&!l.startsWith(".")&&(l="/"+l),tx("",{pathname:l,search:a,hash:s},u.state&&u.state.usr||null,u.state&&u.state.key||"default")}function n(o,u){let l=o.document.querySelector("base"),a="";if(l&&l.getAttribute("href")){let s=o.location.href,c=s.indexOf("#");a=c===-1?s:s.slice(0,c)}return a+"#"+(typeof u=="string"?u:Ir(u))}function i(o,u){R3(o.pathname.charAt(0)==="/",`relative pathnames are not supported in hash history.push(${JSON.stringify(u)})`)}return Jt1(e,n,i,t)}function Xt(t,e){if(t===!1||t===null||typeof t>"u")throw new Error(e)}function R3(t,e){if(!t){typeof console<"u"&&console.warn(e);try{throw new Error(e)}catch{}}}function Zt1(){return Math.random().toString(36).substring(2,10)}function IR(t,e){return{usr:t.state,key:t.key,idx:e}}function tx(t,e,n=null,i){return{pathname:typeof t=="string"?t:t.pathname,search:"",hash:"",...typeof e=="string"?h6(e):e,state:n,key:e&&e.key||i||Zt1()}}function Ir({pathname:t="/",search:e="",hash:n=""}){return e&&e!=="?"&&(t+=e.charAt(0)==="?"?e:"?"+e),n&&n!=="#"&&(t+=n.charAt(0)==="#"?n:"#"+n),t}function h6(t){let e={};if(t){let n=t.indexOf("#");n>=0&&(e.hash=t.substring(n),t=t.substring(0,n));let i=t.indexOf("?");i>=0&&(e.search=t.substring(i),t=t.substring(0,i)),t&&(e.pathname=t)}return e}function Jt1(t,e,n,i={}){let{window:o=document.defaultView,v5Compat:u=!1}=i,l=o.history,a="POP",s=null,c=f();c==null&&(c=0,l.replaceState({...l.state,idx:c},""));function f(){return(l.state||{idx:null}).idx}function g(){a="POP";let x=f(),w=x==null?null:x-c;c=x,s&&s({action:a,location:b.location,delta:w})}function p(x,w){a="PUSH";let S=tx(b.location,x,w);n&&n(S,x),c=f()+1;let A=IR(S,c),C=b.createHref(S);try{l.pushState(A,"",C)}catch(k){if(k instanceof DOMException&&k.name==="DataCloneError")throw k;o.location.assign(C)}u&&s&&s({action:a,location:b.location,delta:1})}function m(x,w){a="REPLACE";let S=tx(b.location,x,w);n&&n(S,x),c=f();let A=IR(S,c),C=b.createHref(S);l.replaceState(A,"",C),u&&s&&s({action:a,location:b.location,delta:0})}function v(x){return te1(x)}let b={get action(){return a},get location(){return t(o,l)},listen(x){if(s)throw new Error("A history only accepts one active listener");return o.addEventListener(PR,g),s=x,()=>{o.removeEventListener(PR,g),s=null}},createHref(x){return e(o,x)},createURL:v,encodeLocation(x){let w=v(x);return{pathname:w.pathname,search:w.search,hash:w.hash}},push:p,replace:m,go(x){return l.go(x)}};return b}function te1(t,e=!1){let n="http://localhost";typeof window<"u"&&(n=window.location.origin!=="null"?window.location.origin:window.location.href),Xt(n,"No window.location.(origin|href) available to create URL");let i=typeof t=="string"?t:Ir(t);return i=i.replace(/ $/,"%20"),!e&&i.startsWith("//")&&(i=n+i),new URL(i,n)}function yP(t,e,n="/"){return ee1(t,e,n,!1)}function ee1(t,e,n,i){let o=typeof e=="string"?h6(e):e,u=Yo(o.pathname||"/",n);if(u==null)return null;let l=vP(t);ne1(l);let a=null;for(let s=0;a==null&&s<l.length;++s){let c=ge1(u);a=de1(l[s],c,i)}return a}function vP(t,e=[],n=[],i="",o=!1){let u=(l,a,s=o,c)=>{let f={relativePath:c===void 0?l.path||"":c,caseSensitive:l.caseSensitive===!0,childrenIndex:a,route:l};if(f.relativePath.startsWith("/")){if(!f.relativePath.startsWith(i)&&s)return;Xt(f.relativePath.startsWith(i),`Absolute route path "${f.relativePath}" nested under path "${i}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`),f.relativePath=f.relativePath.slice(i.length)}let g=Fo([i,f.relativePath]),p=n.concat(f);l.children&&l.children.length>0&&(Xt(l.index!==!0,`Index routes must not have child routes. Please remove all child routes from route path "${g}".`),vP(l.children,e,p,g,s)),!(l.path==null&&!l.index)&&e.push({path:g,score:se1(g,l.index),routesMeta:p})};return t.forEach((l,a)=>{if(l.path===""||!l.path?.includes("?"))u(l,a);else for(let s of bP(l.path))u(l,a,!0,s)}),e}function bP(t){let e=t.split("/");if(e.length===0)return[];let[n,...i]=e,o=n.endsWith("?"),u=n.replace(/\?$/,"");if(i.length===0)return o?[u,""]:[u];let l=bP(i.join("/")),a=[];return a.push(...l.map(s=>s===""?u:[u,s].join("/"))),o&&a.push(...l),a.map(s=>t.startsWith("/")&&s===""?"/":s)}function ne1(t){t.sort((e,n)=>e.score!==n.score?n.score-e.score:ce1(e.routesMeta.map(i=>i.childrenIndex),n.routesMeta.map(i=>i.childrenIndex)))}var ie1=/^:[\w-]+$/,oe1=3,ue1=2,le1=1,ae1=10,re1=-2,BR=t=>t==="*";function se1(t,e){let n=t.split("/"),i=n.length;return n.some(BR)&&(i+=re1),e&&(i+=ue1),n.filter(o=>!BR(o)).reduce((o,u)=>o+(ie1.test(u)?oe1:u===""?le1:ae1),i)}function ce1(t,e){return t.length===e.length&&t.slice(0,-1).every((i,o)=>i===e[o])?t[t.length-1]-e[e.length-1]:0}function de1(t,e,n=!1){let{routesMeta:i}=t,o={},u="/",l=[];for(let a=0;a<i.length;++a){let s=i[a],c=a===i.length-1,f=u==="/"?e:e.slice(u.length)||"/",g=dd({path:s.relativePath,caseSensitive:s.caseSensitive,end:c},f),p=s.route;if(!g&&c&&n&&!i[i.length-1].route.index&&(g=dd({path:s.relativePath,caseSensitive:s.caseSensitive,end:!1},f)),!g)return null;Object.assign(o,g.params),l.push({params:o,pathname:Fo([u,g.pathname]),pathnameBase:ye1(Fo([u,g.pathnameBase])),route:p}),g.pathnameBase!=="/"&&(u=Fo([u,g.pathnameBase]))}return l}function dd(t,e){typeof t=="string"&&(t={path:t,caseSensitive:!1,end:!0});let[n,i]=fe1(t.path,t.caseSensitive,t.end),o=e.match(n);if(!o)return null;let u=o[0],l=u.replace(/(.)\/+$/,"$1"),a=o.slice(1);return{params:i.reduce((c,{paramName:f,isOptional:g},p)=>{if(f==="*"){let v=a[p]||"";l=u.slice(0,u.length-v.length).replace(/(.)\/+$/,"$1")}const m=a[p];return g&&!m?c[f]=void 0:c[f]=(m||"").replace(/%2F/g,"/"),c},{}),pathname:u,pathnameBase:l,pattern:t}}function fe1(t,e=!1,n=!0){R3(t==="*"||!t.endsWith("*")||t.endsWith("/*"),`Route path "${t}" will be treated as if it were "${t.replace(/\*$/,"/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${t.replace(/\*$/,"/*")}".`);let i=[],o="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(l,a,s)=>(i.push({paramName:a,isOptional:s!=null}),s?"/?([^\\/]+)?":"/([^\\/]+)")).replace(/\/([\w-]+)\?(\/|$)/g,"(/$1)?$2");return t.endsWith("*")?(i.push({paramName:"*"}),o+=t==="*"||t==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?o+="\\/*$":t!==""&&t!=="/"&&(o+="(?:(?=\\/|$))"),[new RegExp(o,e?void 0:"i"),i]}function ge1(t){try{return t.split("/").map(e=>decodeURIComponent(e).replace(/\//g,"%2F")).join("/")}catch(e){return R3(!1,`The URL path "${t}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${e}).`),t}}function Yo(t,e){if(e==="/")return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let n=e.endsWith("/")?e.length-1:e.length,i=t.charAt(n);return i&&i!=="/"?null:t.slice(n)||"/"}function he1(t,e="/"){let{pathname:n,search:i="",hash:o=""}=typeof t=="string"?h6(t):t;return{pathname:n?n.startsWith("/")?n:pe1(n,e):e,search:ve1(i),hash:be1(o)}}function pe1(t,e){let n=e.replace(/\/+$/,"").split("/");return t.split("/").forEach(o=>{o===".."?n.length>1&&n.pop():o!=="."&&n.push(o)}),n.length>1?n.join("/"):"/"}function Ly(t,e,n,i){return`Cannot include a '${t}' character in a manually specified \`to.${e}\` field [${JSON.stringify(i)}].  Please separate it out to the \`to.${n}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`}function me1(t){return t.filter((e,n)=>n===0||e.route.path&&e.route.path.length>0)}function xP(t){let e=me1(t);return e.map((n,i)=>i===e.length-1?n.pathname:n.pathnameBase)}function _P(t,e,n,i=!1){let o;typeof t=="string"?o=h6(t):(o={...t},Xt(!o.pathname||!o.pathname.includes("?"),Ly("?","pathname","search",o)),Xt(!o.pathname||!o.pathname.includes("#"),Ly("#","pathname","hash",o)),Xt(!o.search||!o.search.includes("#"),Ly("#","search","hash",o)));let u=t===""||o.pathname==="",l=u?"/":o.pathname,a;if(l==null)a=n;else{let g=e.length-1;if(!i&&l.startsWith("..")){let p=l.split("/");for(;p[0]==="..";)p.shift(),g-=1;o.pathname=p.join("/")}a=g>=0?e[g]:"/"}let s=he1(o,a),c=l&&l!=="/"&&l.endsWith("/"),f=(u||l===".")&&n.endsWith("/");return!s.pathname.endsWith("/")&&(c||f)&&(s.pathname+="/"),s}var Fo=t=>t.join("/").replace(/\/\/+/g,"/"),ye1=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),ve1=t=>!t||t==="?"?"":t.startsWith("?")?t:"?"+t,be1=t=>!t||t==="#"?"":t.startsWith("#")?t:"#"+t;function xe1(t){return t!=null&&typeof t.status=="number"&&typeof t.statusText=="string"&&typeof t.internal=="boolean"&&"data"in t}var wP=["POST","PUT","PATCH","DELETE"];new Set(wP);var _e1=["GET",...wP];new Set(_e1);var Wl=F.createContext(null);Wl.displayName="DataRouter";var Zf=F.createContext(null);Zf.displayName="DataRouterState";F.createContext(!1);var EP=F.createContext({isTransitioning:!1});EP.displayName="ViewTransition";var we1=F.createContext(new Map);we1.displayName="Fetchers";var Ee1=F.createContext(null);Ee1.displayName="Await";var Mi=F.createContext(null);Mi.displayName="Navigation";var S8=F.createContext(null);S8.displayName="Location";var i4=F.createContext({outlet:null,matches:[],isDataRoute:!1});i4.displayName="Route";var $w=F.createContext(null);$w.displayName="RouteError";function Se1(t,{relative:e}={}){Xt(A8(),"useHref() may be used only in the context of a <Router> component.");let{basename:n,navigator:i}=F.useContext(Mi),{hash:o,pathname:u,search:l}=C8(t,{relative:e}),a=u;return n!=="/"&&(a=u==="/"?n:Fo([n,u])),i.createHref({pathname:a,search:l,hash:o})}function A8(){return F.useContext(S8)!=null}function p6(){return Xt(A8(),"useLocation() may be used only in the context of a <Router> component."),F.useContext(S8).location}var SP="You should call navigate() in a React.useEffect(), not when your component is first rendered.";function AP(t){F.useContext(Mi).static||F.useLayoutEffect(t)}function Ae1(){let{isDataRoute:t}=F.useContext(i4);return t?je1():Ce1()}function Ce1(){Xt(A8(),"useNavigate() may be used only in the context of a <Router> component.");let t=F.useContext(Wl),{basename:e,navigator:n}=F.useContext(Mi),{matches:i}=F.useContext(i4),{pathname:o}=p6(),u=JSON.stringify(xP(i)),l=F.useRef(!1);return AP(()=>{l.current=!0}),F.useCallback((s,c={})=>{if(R3(l.current,SP),!l.current)return;if(typeof s=="number"){n.go(s);return}let f=_P(s,JSON.parse(u),o,c.relative==="path");t==null&&e!=="/"&&(f.pathname=f.pathname==="/"?e:Fo([e,f.pathname])),(c.replace?n.replace:n.push)(f,c.state,c)},[e,n,u,o,t])}F.createContext(null);function C8(t,{relative:e}={}){let{matches:n}=F.useContext(i4),{pathname:i}=p6(),o=JSON.stringify(xP(n));return F.useMemo(()=>_P(t,JSON.parse(o),i,e==="path"),[t,o,i,e])}function ke1(t,e){return CP(t,e)}function CP(t,e,n,i,o){Xt(A8(),"useRoutes() may be used only in the context of a <Router> component.");let{navigator:u}=F.useContext(Mi),{matches:l}=F.useContext(i4),a=l[l.length-1],s=a?a.params:{},c=a?a.pathname:"/",f=a?a.pathnameBase:"/",g=a&&a.route;{let S=g&&g.path||"";kP(c,!g||S.endsWith("*")||S.endsWith("*?"),`You rendered descendant <Routes> (or called \`useRoutes()\`) at "${c}" (under <Route path="${S}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${S}"> to <Route path="${S==="/"?"*":`${S}/*`}">.`)}let p=p6(),m;if(e){let S=typeof e=="string"?h6(e):e;Xt(f==="/"||S.pathname?.startsWith(f),`When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${f}" but pathname "${S.pathname}" was given in the \`location\` prop.`),m=S}else m=p;let v=m.pathname||"/",b=v;if(f!=="/"){let S=f.replace(/^\//,"").split("/");b="/"+v.replace(/^\//,"").split("/").slice(S.length).join("/")}let x=yP(t,{pathname:b});R3(g||x!=null,`No routes matched location "${m.pathname}${m.search}${m.hash}" `),R3(x==null||x[x.length-1].route.element!==void 0||x[x.length-1].route.Component!==void 0||x[x.length-1].route.lazy!==void 0,`Matched leaf route at location "${m.pathname}${m.search}${m.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);let w=Re1(x&&x.map(S=>Object.assign({},S,{params:Object.assign({},s,S.params),pathname:Fo([f,u.encodeLocation?u.encodeLocation(S.pathname).pathname:S.pathname]),pathnameBase:S.pathnameBase==="/"?f:Fo([f,u.encodeLocation?u.encodeLocation(S.pathnameBase).pathname:S.pathnameBase])})),l,n,i,o);return e&&w?F.createElement(S8.Provider,{value:{location:{pathname:"/",search:"",hash:"",state:null,key:"default",...m},navigationType:"POP"}},w):w}function Te1(){let t=Le1(),e=xe1(t)?`${t.status} ${t.statusText}`:t instanceof Error?t.message:JSON.stringify(t),n=t instanceof Error?t.stack:null,i="rgba(200,200,200, 0.5)",o={padding:"0.5rem",backgroundColor:i},u={padding:"2px 4px",backgroundColor:i},l=null;return console.error("Error handled by React Router default ErrorBoundary:",t),l=F.createElement(F.Fragment,null,F.createElement("p",null,"💿 Hey developer 👋"),F.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",F.createElement("code",{style:u},"ErrorBoundary")," or"," ",F.createElement("code",{style:u},"errorElement")," prop on your route.")),F.createElement(F.Fragment,null,F.createElement("h2",null,"Unexpected Application Error!"),F.createElement("h3",{style:{fontStyle:"italic"}},e),n?F.createElement("pre",{style:o},n):null,l)}var $e1=F.createElement(Te1,null),Me1=class extends F.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,e){return e.location!==t.location||e.revalidation!=="idle"&&t.revalidation==="idle"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error!==void 0?t.error:e.error,location:e.location,revalidation:t.revalidation||e.revalidation}}componentDidCatch(t,e){this.props.unstable_onError?this.props.unstable_onError(t,e):console.error("React Router caught the following error during render",t)}render(){return this.state.error!==void 0?F.createElement(i4.Provider,{value:this.props.routeContext},F.createElement($w.Provider,{value:this.state.error,children:this.props.component})):this.props.children}};function Ne1({routeContext:t,match:e,children:n}){let i=F.useContext(Wl);return i&&i.static&&i.staticContext&&(e.route.errorElement||e.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=e.route.id),F.createElement(i4.Provider,{value:t},n)}function Re1(t,e=[],n=null,i=null,o=null){if(t==null){if(!n)return null;if(n.errors)t=n.matches;else if(e.length===0&&!n.initialized&&n.matches.length>0)t=n.matches;else return null}let u=t,l=n?.errors;if(l!=null){let c=u.findIndex(f=>f.route.id&&l?.[f.route.id]!==void 0);Xt(c>=0,`Could not find a matching route for errors on route IDs: ${Object.keys(l).join(",")}`),u=u.slice(0,Math.min(u.length,c+1))}let a=!1,s=-1;if(n)for(let c=0;c<u.length;c++){let f=u[c];if((f.route.HydrateFallback||f.route.hydrateFallbackElement)&&(s=c),f.route.id){let{loaderData:g,errors:p}=n,m=f.route.loader&&!g.hasOwnProperty(f.route.id)&&(!p||p[f.route.id]===void 0);if(f.route.lazy||m){a=!0,s>=0?u=u.slice(0,s+1):u=[u[0]];break}}}return u.reduceRight((c,f,g)=>{let p,m=!1,v=null,b=null;n&&(p=l&&f.route.id?l[f.route.id]:void 0,v=f.route.errorElement||$e1,a&&(s<0&&g===0?(kP("route-fallback",!1,"No `HydrateFallback` element provided to render during initial hydration"),m=!0,b=null):s===g&&(m=!0,b=f.route.hydrateFallbackElement||null)));let x=e.concat(u.slice(0,g+1)),w=()=>{let S;return p?S=v:m?S=b:f.route.Component?S=F.createElement(f.route.Component,null):f.route.element?S=f.route.element:S=c,F.createElement(Ne1,{match:f,routeContext:{outlet:c,matches:x,isDataRoute:n!=null},children:S})};return n&&(f.route.ErrorBoundary||f.route.errorElement||g===0)?F.createElement(Me1,{location:n.location,revalidation:n.revalidation,component:v,error:p,children:w(),routeContext:{outlet:null,matches:x,isDataRoute:!0},unstable_onError:i}):w()},null)}function Mw(t){return`${t} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function De1(t){let e=F.useContext(Wl);return Xt(e,Mw(t)),e}function Oe1(t){let e=F.useContext(Zf);return Xt(e,Mw(t)),e}function Fe1(t){let e=F.useContext(i4);return Xt(e,Mw(t)),e}function Nw(t){let e=Fe1(t),n=e.matches[e.matches.length-1];return Xt(n.route.id,`${t} can only be used on routes that contain a unique "id"`),n.route.id}function ze1(){return Nw("useRouteId")}function Le1(){let t=F.useContext($w),e=Oe1("useRouteError"),n=Nw("useRouteError");return t!==void 0?t:e.errors?.[n]}function je1(){let{router:t}=De1("useNavigate"),e=Nw("useNavigate"),n=F.useRef(!1);return AP(()=>{n.current=!0}),F.useCallback(async(o,u={})=>{R3(n.current,SP),n.current&&(typeof o=="number"?t.navigate(o):await t.navigate(o,{fromRouteId:e,...u}))},[t,e])}var UR={};function kP(t,e,n){!e&&!UR[t]&&(UR[t]=!0,R3(!1,n))}F.memo(Pe1);function Pe1({routes:t,future:e,state:n,unstable_onError:i}){return CP(t,void 0,n,i,e)}function Sn(t){Xt(!1,"A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.")}function Ie1({basename:t="/",children:e=null,location:n,navigationType:i="POP",navigator:o,static:u=!1}){Xt(!A8(),"You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");let l=t.replace(/^\/*/,"/"),a=F.useMemo(()=>({basename:l,navigator:o,static:u,future:{}}),[l,o,u]);typeof n=="string"&&(n=h6(n));let{pathname:s="/",search:c="",hash:f="",state:g=null,key:p="default"}=n,m=F.useMemo(()=>{let v=Yo(s,l);return v==null?null:{location:{pathname:v,search:c,hash:f,state:g,key:p},navigationType:i}},[l,s,c,f,g,p,i]);return R3(m!=null,`<Router basename="${l}"> is not able to match the URL "${s}${c}${f}" because it does not start with the basename, so the <Router> won't render anything.`),m==null?null:F.createElement(Mi.Provider,{value:a},F.createElement(S8.Provider,{children:e,value:m}))}function Be1({children:t,location:e}){return ke1(ex(t),e)}function ex(t,e=[]){let n=[];return F.Children.forEach(t,(i,o)=>{if(!F.isValidElement(i))return;let u=[...e,o];if(i.type===F.Fragment){n.push.apply(n,ex(i.props.children,u));return}Xt(i.type===Sn,`[${typeof i.type=="string"?i.type:i.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`),Xt(!i.props.index||!i.props.children,"An index route cannot have child routes.");let l={id:i.props.id||u.join("-"),caseSensitive:i.props.caseSensitive,element:i.props.element,Component:i.props.Component,index:i.props.index,path:i.props.path,loader:i.props.loader,action:i.props.action,hydrateFallbackElement:i.props.hydrateFallbackElement,HydrateFallback:i.props.HydrateFallback,errorElement:i.props.errorElement,ErrorBoundary:i.props.ErrorBoundary,hasErrorBoundary:i.props.hasErrorBoundary===!0||i.props.ErrorBoundary!=null||i.props.errorElement!=null,shouldRevalidate:i.props.shouldRevalidate,handle:i.props.handle,lazy:i.props.lazy};i.props.children&&(l.children=ex(i.props.children,u)),n.push(l)}),n}var Dc="get",Oc="application/x-www-form-urlencoded";function Jf(t){return t!=null&&typeof t.tagName=="string"}function Ue1(t){return Jf(t)&&t.tagName.toLowerCase()==="button"}function qe1(t){return Jf(t)&&t.tagName.toLowerCase()==="form"}function He1(t){return Jf(t)&&t.tagName.toLowerCase()==="input"}function Ge1(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}function We1(t,e){return t.button===0&&(!e||e==="_self")&&!Ge1(t)}var Us=null;function Ye1(){if(Us===null)try{new FormData(document.createElement("form"),0),Us=!1}catch{Us=!0}return Us}var Ve1=new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);function jy(t){return t!=null&&!Ve1.has(t)?(R3(!1,`"${t}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${Oc}"`),null):t}function Xe1(t,e){let n,i,o,u,l;if(qe1(t)){let a=t.getAttribute("action");i=a?Yo(a,e):null,n=t.getAttribute("method")||Dc,o=jy(t.getAttribute("enctype"))||Oc,u=new FormData(t)}else if(Ue1(t)||He1(t)&&(t.type==="submit"||t.type==="image")){let a=t.form;if(a==null)throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');let s=t.getAttribute("formaction")||a.getAttribute("action");if(i=s?Yo(s,e):null,n=t.getAttribute("formmethod")||a.getAttribute("method")||Dc,o=jy(t.getAttribute("formenctype"))||jy(a.getAttribute("enctype"))||Oc,u=new FormData(a,t),!Ye1()){let{name:c,type:f,value:g}=t;if(f==="image"){let p=c?`${c}.`:"";u.append(`${p}x`,"0"),u.append(`${p}y`,"0")}else c&&u.append(c,g)}}else{if(Jf(t))throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');n=Dc,i=null,o=Oc,l=t}return u&&o==="text/plain"&&(l=u,u=void 0),{action:i,method:n.toLowerCase(),encType:o,formData:u,body:l}}Object.getOwnPropertyNames(Object.prototype).sort().join("\0");function Rw(t,e){if(t===!1||t===null||typeof t>"u")throw new Error(e)}function Ke1(t,e,n){let i=typeof t=="string"?new URL(t,typeof window>"u"?"server://singlefetch/":window.location.origin):t;return i.pathname==="/"?i.pathname=`_root.${n}`:e&&Yo(i.pathname,e)==="/"?i.pathname=`${e.replace(/\/$/,"")}/_root.${n}`:i.pathname=`${i.pathname.replace(/\/$/,"")}.${n}`,i}async function Qe1(t,e){if(t.id in e)return e[t.id];try{let n=await import(t.module);return e[t.id]=n,n}catch(n){return console.error(`Error loading route module \`${t.module}\`, reloading page...`),console.error(n),window.__reactRouterContext&&window.__reactRouterContext.isSpaMode,window.location.reload(),new Promise(()=>{})}}function Ze1(t){return t==null?!1:t.href==null?t.rel==="preload"&&typeof t.imageSrcSet=="string"&&typeof t.imageSizes=="string":typeof t.rel=="string"&&typeof t.href=="string"}async function Je1(t,e,n){let i=await Promise.all(t.map(async o=>{let u=e.routes[o.route.id];if(u){let l=await Qe1(u,n);return l.links?l.links():[]}return[]}));return in1(i.flat(1).filter(Ze1).filter(o=>o.rel==="stylesheet"||o.rel==="preload").map(o=>o.rel==="stylesheet"?{...o,rel:"prefetch",as:"style"}:{...o,rel:"prefetch"}))}function qR(t,e,n,i,o,u){let l=(s,c)=>n[c]?s.route.id!==n[c].route.id:!0,a=(s,c)=>n[c].pathname!==s.pathname||n[c].route.path?.endsWith("*")&&n[c].params["*"]!==s.params["*"];return u==="assets"?e.filter((s,c)=>l(s,c)||a(s,c)):u==="data"?e.filter((s,c)=>{let f=i.routes[s.route.id];if(!f||!f.hasLoader)return!1;if(l(s,c)||a(s,c))return!0;if(s.route.shouldRevalidate){let g=s.route.shouldRevalidate({currentUrl:new URL(o.pathname+o.search+o.hash,window.origin),currentParams:n[0]?.params||{},nextUrl:new URL(t,window.origin),nextParams:s.params,defaultShouldRevalidate:!0});if(typeof g=="boolean")return g}return!0}):[]}function tn1(t,e,{includeHydrateFallback:n}={}){return en1(t.map(i=>{let o=e.routes[i.route.id];if(!o)return[];let u=[o.module];return o.clientActionModule&&(u=u.concat(o.clientActionModule)),o.clientLoaderModule&&(u=u.concat(o.clientLoaderModule)),n&&o.hydrateFallbackModule&&(u=u.concat(o.hydrateFallbackModule)),o.imports&&(u=u.concat(o.imports)),u}).flat(1))}function en1(t){return[...new Set(t)]}function nn1(t){let e={},n=Object.keys(t).sort();for(let i of n)e[i]=t[i];return e}function in1(t,e){let n=new Set;return new Set(e),t.reduce((i,o)=>{let u=JSON.stringify(nn1(o));return n.has(u)||(n.add(u),i.push({key:u,link:o})),i},[])}function TP(){let t=F.useContext(Wl);return Rw(t,"You must render this element inside a <DataRouterContext.Provider> element"),t}function on1(){let t=F.useContext(Zf);return Rw(t,"You must render this element inside a <DataRouterStateContext.Provider> element"),t}var Dw=F.createContext(void 0);Dw.displayName="FrameworkContext";function $P(){let t=F.useContext(Dw);return Rw(t,"You must render this element inside a <HydratedRouter> element"),t}function un1(t,e){let n=F.useContext(Dw),[i,o]=F.useState(!1),[u,l]=F.useState(!1),{onFocus:a,onBlur:s,onMouseEnter:c,onMouseLeave:f,onTouchStart:g}=e,p=F.useRef(null);F.useEffect(()=>{if(t==="render"&&l(!0),t==="viewport"){let b=w=>{w.forEach(S=>{l(S.isIntersecting)})},x=new IntersectionObserver(b,{threshold:.5});return p.current&&x.observe(p.current),()=>{x.disconnect()}}},[t]),F.useEffect(()=>{if(i){let b=setTimeout(()=>{l(!0)},100);return()=>{clearTimeout(b)}}},[i]);let m=()=>{o(!0)},v=()=>{o(!1),l(!1)};return n?t!=="intent"?[u,p,{}]:[u,p,{onFocus:w9(a,m),onBlur:w9(s,v),onMouseEnter:w9(c,m),onMouseLeave:w9(f,v),onTouchStart:w9(g,m)}]:[!1,p,{}]}function w9(t,e){return n=>{t&&t(n),n.defaultPrevented||e(n)}}function ln1({page:t,...e}){let{router:n}=TP(),i=F.useMemo(()=>yP(n.routes,t,n.basename),[n.routes,t,n.basename]);return i?F.createElement(rn1,{page:t,matches:i,...e}):null}function an1(t){let{manifest:e,routeModules:n}=$P(),[i,o]=F.useState([]);return F.useEffect(()=>{let u=!1;return Je1(t,e,n).then(l=>{u||o(l)}),()=>{u=!0}},[t,e,n]),i}function rn1({page:t,matches:e,...n}){let i=p6(),{manifest:o,routeModules:u}=$P(),{basename:l}=TP(),{loaderData:a,matches:s}=on1(),c=F.useMemo(()=>qR(t,e,s,o,i,"data"),[t,e,s,o,i]),f=F.useMemo(()=>qR(t,e,s,o,i,"assets"),[t,e,s,o,i]),g=F.useMemo(()=>{if(t===i.pathname+i.search+i.hash)return[];let v=new Set,b=!1;if(e.forEach(w=>{let S=o.routes[w.route.id];!S||!S.hasLoader||(!c.some(A=>A.route.id===w.route.id)&&w.route.id in a&&u[w.route.id]?.shouldRevalidate||S.hasClientLoader?b=!0:v.add(w.route.id))}),v.size===0)return[];let x=Ke1(t,l,"data");return b&&v.size>0&&x.searchParams.set("_routes",e.filter(w=>v.has(w.route.id)).map(w=>w.route.id).join(",")),[x.pathname+x.search]},[l,a,i,o,c,e,t,u]),p=F.useMemo(()=>tn1(f,o),[f,o]),m=an1(f);return F.createElement(F.Fragment,null,g.map(v=>F.createElement("link",{key:v,rel:"prefetch",as:"fetch",href:v,...n})),p.map(v=>F.createElement("link",{key:v,rel:"modulepreload",href:v,...n})),m.map(({key:v,link:b})=>F.createElement("link",{key:v,nonce:n.nonce,...b})))}function sn1(...t){return e=>{t.forEach(n=>{typeof n=="function"?n(e):n!=null&&(n.current=e)})}}var MP=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u";try{MP&&(window.__reactRouterVersion="7.9.1")}catch{}function cn1({basename:t,children:e,window:n}){let i=F.useRef();i.current==null&&(i.current=Qt1({window:n,v5Compat:!0}));let o=i.current,[u,l]=F.useState({action:o.action,location:o.location}),a=F.useCallback(s=>{F.startTransition(()=>l(s))},[l]);return F.useLayoutEffect(()=>o.listen(a),[o,a]),F.createElement(Ie1,{basename:t,children:e,location:u.location,navigationType:u.action,navigator:o})}var NP=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Ow=F.forwardRef(function({onClick:e,discover:n="render",prefetch:i="none",relative:o,reloadDocument:u,replace:l,state:a,target:s,to:c,preventScrollReset:f,viewTransition:g,...p},m){let{basename:v}=F.useContext(Mi),b=typeof c=="string"&&NP.test(c),x,w=!1;if(typeof c=="string"&&b&&(x=c,MP))try{let I=new URL(window.location.href),U=c.startsWith("//")?new URL(I.protocol+c):new URL(c),B=Yo(U.pathname,v);U.origin===I.origin&&B!=null?c=B+U.search+U.hash:w=!0}catch{R3(!1,`<Link to="${c}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`)}let S=Se1(c,{relative:o}),[A,C,k]=un1(i,p),M=hn1(c,{replace:l,state:a,target:s,preventScrollReset:f,relative:o,viewTransition:g});function T(I){e&&e(I),I.defaultPrevented||M(I)}let D=F.createElement("a",{...p,...k,href:x||S,onClick:w||u?e:T,ref:sn1(m,C),target:s,"data-discover":!b&&n==="render"?"true":void 0});return A&&!b?F.createElement(F.Fragment,null,D,F.createElement(ln1,{page:S})):D});Ow.displayName="Link";var dn1=F.forwardRef(function({"aria-current":e="page",caseSensitive:n=!1,className:i="",end:o=!1,style:u,to:l,viewTransition:a,children:s,...c},f){let g=C8(l,{relative:c.relative}),p=p6(),m=F.useContext(Zf),{navigator:v,basename:b}=F.useContext(Mi),x=m!=null&&bn1(g)&&a===!0,w=v.encodeLocation?v.encodeLocation(g).pathname:g.pathname,S=p.pathname,A=m&&m.navigation&&m.navigation.location?m.navigation.location.pathname:null;n||(S=S.toLowerCase(),A=A?A.toLowerCase():null,w=w.toLowerCase()),A&&b&&(A=Yo(A,b)||A);const C=w!=="/"&&w.endsWith("/")?w.length-1:w.length;let k=S===w||!o&&S.startsWith(w)&&S.charAt(C)==="/",M=A!=null&&(A===w||!o&&A.startsWith(w)&&A.charAt(w.length)==="/"),T={isActive:k,isPending:M,isTransitioning:x},D=k?e:void 0,I;typeof i=="function"?I=i(T):I=[i,k?"active":null,M?"pending":null,x?"transitioning":null].filter(Boolean).join(" ");let U=typeof u=="function"?u(T):u;return F.createElement(Ow,{...c,"aria-current":D,className:I,ref:f,style:U,to:l,viewTransition:a},typeof s=="function"?s(T):s)});dn1.displayName="NavLink";var fn1=F.forwardRef(({discover:t="render",fetcherKey:e,navigate:n,reloadDocument:i,replace:o,state:u,method:l=Dc,action:a,onSubmit:s,relative:c,preventScrollReset:f,viewTransition:g,...p},m)=>{let v=yn1(),b=vn1(a,{relative:c}),x=l.toLowerCase()==="get"?"get":"post",w=typeof a=="string"&&NP.test(a),S=A=>{if(s&&s(A),A.defaultPrevented)return;A.preventDefault();let C=A.nativeEvent.submitter,k=C?.getAttribute("formmethod")||l;v(C||A.currentTarget,{fetcherKey:e,method:k,navigate:n,replace:o,state:u,relative:c,preventScrollReset:f,viewTransition:g})};return F.createElement("form",{ref:m,method:x,action:b,onSubmit:i?s:S,...p,"data-discover":!w&&t==="render"?"true":void 0})});fn1.displayName="Form";function gn1(t){return`${t} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function RP(t){let e=F.useContext(Wl);return Xt(e,gn1(t)),e}function hn1(t,{target:e,replace:n,state:i,preventScrollReset:o,relative:u,viewTransition:l}={}){let a=Ae1(),s=p6(),c=C8(t,{relative:u});return F.useCallback(f=>{if(We1(f,e)){f.preventDefault();let g=n!==void 0?n:Ir(s)===Ir(c);a(t,{replace:g,state:i,preventScrollReset:o,relative:u,viewTransition:l})}},[s,a,c,n,i,e,t,o,u,l])}var pn1=0,mn1=()=>`__${String(++pn1)}__`;function yn1(){let{router:t}=RP("useSubmit"),{basename:e}=F.useContext(Mi),n=ze1();return F.useCallback(async(i,o={})=>{let{action:u,method:l,encType:a,formData:s,body:c}=Xe1(i,e);if(o.navigate===!1){let f=o.fetcherKey||mn1();await t.fetch(f,n,o.action||u,{preventScrollReset:o.preventScrollReset,formData:s,body:c,formMethod:o.method||l,formEncType:o.encType||a,flushSync:o.flushSync})}else await t.navigate(o.action||u,{preventScrollReset:o.preventScrollReset,formData:s,body:c,formMethod:o.method||l,formEncType:o.encType||a,replace:o.replace,state:o.state,fromRouteId:n,flushSync:o.flushSync,viewTransition:o.viewTransition})},[t,e,n])}function vn1(t,{relative:e}={}){let{basename:n}=F.useContext(Mi),i=F.useContext(i4);Xt(i,"useFormAction must be used inside a RouteContext");let[o]=i.matches.slice(-1),u={...C8(t||".",{relative:e})},l=p6();if(t==null){u.search=l.search;let a=new URLSearchParams(u.search),s=a.getAll("index");if(s.some(f=>f==="")){a.delete("index"),s.filter(g=>g).forEach(g=>a.append("index",g));let f=a.toString();u.search=f?`?${f}`:""}}return(!t||t===".")&&o.route.index&&(u.search=u.search?u.search.replace(/^\?/,"?index&"):"?index"),n!=="/"&&(u.pathname=u.pathname==="/"?n:Fo([n,u.pathname])),Ir(u)}function bn1(t,{relative:e}={}){let n=F.useContext(EP);Xt(n!=null,"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");let{basename:i}=RP("useViewTransitionState"),o=C8(t,{relative:e});if(!n.isTransitioning)return!1;let u=Yo(n.currentLocation.pathname,i)||n.currentLocation.pathname,l=Yo(n.nextLocation.pathname,i)||n.nextLocation.pathname;return dd(o.pathname,l)!=null||dd(o.pathname,u)!=null}var xn1=mP();const B5=E8(xn1);var Py={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/var HR;function _n1(){return HR||(HR=1,(function(t){(function(){var e={}.hasOwnProperty;function n(){for(var u="",l=0;l<arguments.length;l++){var a=arguments[l];a&&(u=o(u,i(a)))}return u}function i(u){if(typeof u=="string"||typeof u=="number")return u;if(typeof u!="object")return"";if(Array.isArray(u))return n.apply(null,u);if(u.toString!==Object.prototype.toString&&!u.toString.toString().includes("[native code]"))return u.toString();var l="";for(var a in u)e.call(u,a)&&u[a]&&(l=o(l,a));return l}function o(u,l){return l?u?u+" "+l:u+l:u}t.exports?(n.default=n,t.exports=n):window.classNames=n})()})(Py)),Py.exports}var wn1=_n1();const R1=E8(wn1);function nx(){return nx=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)({}).hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},nx.apply(null,arguments)}function DP(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)!==-1)continue;n[i]=t[i]}return n}function GR(t){return"default"+t.charAt(0).toUpperCase()+t.substr(1)}function En1(t){var e=Sn1(t,"string");return typeof e=="symbol"?e:String(e)}function Sn1(t,e){if(typeof t!="object"||t===null)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var i=n.call(t,e);if(typeof i!="object")return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}function An1(t,e,n){var i=F.useRef(t!==void 0),o=F.useState(e),u=o[0],l=o[1],a=t!==void 0,s=i.current;return i.current=a,!a&&s&&u!==e&&l(e),[a?t:u,F.useCallback(function(c){for(var f=arguments.length,g=new Array(f>1?f-1:0),p=1;p<f;p++)g[p-1]=arguments[p];n&&n.apply(void 0,[c].concat(g)),l(c)},[n])]}function Fw(t,e){return Object.keys(e).reduce(function(n,i){var o,u=n,l=u[GR(i)],a=u[i],s=DP(u,[GR(i),i].map(En1)),c=e[i],f=An1(a,l,t[c]),g=f[0],p=f[1];return nx({},s,(o={},o[i]=g,o[c]=p,o))},t)}function ix(t,e){return ix=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},ix(t,e)}function Cn1(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,ix(t,e)}const kn1=["xxl","xl","lg","md","sm","xs"],Tn1="xs",k8=F.createContext({prefixes:{},breakpoints:kn1,minBreakpoint:Tn1}),{Consumer:kz1,Provider:Tz1}=k8;function H1(t,e){const{prefixes:n}=F.useContext(k8);return t||n[e]||e}function OP(){const{breakpoints:t}=F.useContext(k8);return t}function FP(){const{minBreakpoint:t}=F.useContext(k8);return t}function $n1(){const{dir:t}=F.useContext(k8);return t==="rtl"}function tg(t){return t&&t.ownerDocument||document}function Mn1(t){var e=tg(t);return e&&e.defaultView||window}function Nn1(t,e){return Mn1(t).getComputedStyle(t,e)}var Rn1=/([A-Z])/g;function Dn1(t){return t.replace(Rn1,"-$1").toLowerCase()}var On1=/^ms-/;function qs(t){return Dn1(t).replace(On1,"-ms-")}var Fn1=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;function zn1(t){return!!(t&&Fn1.test(t))}function zo(t,e){var n="",i="";if(typeof e=="string")return t.style.getPropertyValue(qs(e))||Nn1(t).getPropertyValue(qs(e));Object.keys(e).forEach(function(o){var u=e[o];!u&&u!==0?t.style.removeProperty(qs(o)):zn1(o)?i+=o+"("+u+") ":n+=qs(o)+": "+u+";"}),i&&(n+="transform: "+i+";"),t.style.cssText+=";"+n}var Iy={exports:{}},By,WR;function Ln1(){if(WR)return By;WR=1;var t="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return By=t,By}var Uy,YR;function jn1(){if(YR)return Uy;YR=1;var t=Ln1();function e(){}function n(){}return n.resetWarningCache=e,Uy=function(){function i(l,a,s,c,f,g){if(g!==t){var p=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw p.name="Invariant Violation",p}}i.isRequired=i;function o(){return i}var u={array:i,bigint:i,bool:i,func:i,number:i,object:i,string:i,symbol:i,any:i,arrayOf:o,element:i,elementType:i,instanceOf:o,node:i,objectOf:o,oneOf:o,oneOfType:o,shape:o,exact:o,checkPropTypes:n,resetWarningCache:e};return u.PropTypes=u,u},Uy}var VR;function Pn1(){return VR||(VR=1,Iy.exports=jn1()()),Iy.exports}var In1=Pn1();const Lo=E8(In1),XR={disabled:!1},zP=dn.createContext(null);var Bn1=function(e){return e.scrollTop},Z9="unmounted",q4="exited",w3="entering",Ao="entered",Br="exiting",o4=(function(t){Cn1(e,t);function e(i,o){var u;u=t.call(this,i,o)||this;var l=o,a=l&&!l.isMounting?i.enter:i.appear,s;return u.appearStatus=null,i.in?a?(s=q4,u.appearStatus=w3):s=Ao:i.unmountOnExit||i.mountOnEnter?s=Z9:s=q4,u.state={status:s},u.nextCallback=null,u}e.getDerivedStateFromProps=function(o,u){var l=o.in;return l&&u.status===Z9?{status:q4}:null};var n=e.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(o){var u=null;if(o!==this.props){var l=this.state.status;this.props.in?l!==w3&&l!==Ao&&(u=w3):(l===w3||l===Ao)&&(u=Br)}this.updateStatus(!1,u)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var o=this.props.timeout,u,l,a;return u=l=a=o,o!=null&&typeof o!="number"&&(u=o.exit,l=o.enter,a=o.appear!==void 0?o.appear:l),{exit:u,enter:l,appear:a}},n.updateStatus=function(o,u){if(o===void 0&&(o=!1),u!==null)if(this.cancelNextCallback(),u===w3){if(this.props.unmountOnExit||this.props.mountOnEnter){var l=this.props.nodeRef?this.props.nodeRef.current:B5.findDOMNode(this);l&&Bn1(l)}this.performEnter(o)}else this.performExit();else this.props.unmountOnExit&&this.state.status===q4&&this.setState({status:Z9})},n.performEnter=function(o){var u=this,l=this.props.enter,a=this.context?this.context.isMounting:o,s=this.props.nodeRef?[a]:[B5.findDOMNode(this),a],c=s[0],f=s[1],g=this.getTimeouts(),p=a?g.appear:g.enter;if(!o&&!l||XR.disabled){this.safeSetState({status:Ao},function(){u.props.onEntered(c)});return}this.props.onEnter(c,f),this.safeSetState({status:w3},function(){u.props.onEntering(c,f),u.onTransitionEnd(p,function(){u.safeSetState({status:Ao},function(){u.props.onEntered(c,f)})})})},n.performExit=function(){var o=this,u=this.props.exit,l=this.getTimeouts(),a=this.props.nodeRef?void 0:B5.findDOMNode(this);if(!u||XR.disabled){this.safeSetState({status:q4},function(){o.props.onExited(a)});return}this.props.onExit(a),this.safeSetState({status:Br},function(){o.props.onExiting(a),o.onTransitionEnd(l.exit,function(){o.safeSetState({status:q4},function(){o.props.onExited(a)})})})},n.cancelNextCallback=function(){this.nextCallback!==null&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(o,u){u=this.setNextCallback(u),this.setState(o,u)},n.setNextCallback=function(o){var u=this,l=!0;return this.nextCallback=function(a){l&&(l=!1,u.nextCallback=null,o(a))},this.nextCallback.cancel=function(){l=!1},this.nextCallback},n.onTransitionEnd=function(o,u){this.setNextCallback(u);var l=this.props.nodeRef?this.props.nodeRef.current:B5.findDOMNode(this),a=o==null&&!this.props.addEndListener;if(!l||a){setTimeout(this.nextCallback,0);return}if(this.props.addEndListener){var s=this.props.nodeRef?[this.nextCallback]:[l,this.nextCallback],c=s[0],f=s[1];this.props.addEndListener(c,f)}o!=null&&setTimeout(this.nextCallback,o)},n.render=function(){var o=this.state.status;if(o===Z9)return null;var u=this.props,l=u.children;u.in,u.mountOnEnter,u.unmountOnExit,u.appear,u.enter,u.exit,u.timeout,u.addEndListener,u.onEnter,u.onEntering,u.onEntered,u.onExit,u.onExiting,u.onExited,u.nodeRef;var a=DP(u,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return dn.createElement(zP.Provider,{value:null},typeof l=="function"?l(o,a):dn.cloneElement(dn.Children.only(l),a))},e})(dn.Component);o4.contextType=zP;o4.propTypes={};function x5(){}o4.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:x5,onEntering:x5,onEntered:x5,onExit:x5,onExiting:x5,onExited:x5};o4.UNMOUNTED=Z9;o4.EXITED=q4;o4.ENTERING=w3;o4.ENTERED=Ao;o4.EXITING=Br;function Un1(t){return t.code==="Escape"||t.keyCode===27}function qn1(){const t=F.version.split(".");return{major:+t[0],minor:+t[1],patch:+t[2]}}function Yl(t){if(!t||typeof t=="function")return null;const{major:e}=qn1();return e>=19?t.props.ref:t.ref}const eg=!!(typeof window<"u"&&window.document&&window.document.createElement);var ox=!1,ux=!1;try{var qy={get passive(){return ox=!0},get once(){return ux=ox=!0}};eg&&(window.addEventListener("test",qy,qy),window.removeEventListener("test",qy,!0))}catch{}function LP(t,e,n,i){if(i&&typeof i!="boolean"&&!ux){var o=i.once,u=i.capture,l=n;!ux&&o&&(l=n.__once||function a(s){this.removeEventListener(e,a,u),n.call(this,s)},n.__once=l),t.addEventListener(e,l,ox?i:u)}t.addEventListener(e,n,i)}function Hn1(t,e,n,i){var o=i&&typeof i!="boolean"?i.capture:i;t.removeEventListener(e,n,o),n.__once&&t.removeEventListener(e,n.__once,o)}function Q4(t,e,n,i){return LP(t,e,n,i),function(){Hn1(t,e,n,i)}}function Gn1(t,e,n,i){if(i===void 0&&(i=!0),t){var o=document.createEvent("HTMLEvents");o.initEvent(e,n,i),t.dispatchEvent(o)}}function Wn1(t){var e=zo(t,"transitionDuration")||"",n=e.indexOf("ms")===-1?1e3:1;return parseFloat(e)*n}function Yn1(t,e,n){n===void 0&&(n=5);var i=!1,o=setTimeout(function(){i||Gn1(t,"transitionend",!0)},e+n),u=Q4(t,"transitionend",function(){i=!0},{once:!0});return function(){clearTimeout(o),u()}}function Vn1(t,e,n,i){n==null&&(n=Wn1(t)||0);var o=Yn1(t,n,i),u=Q4(t,"transitionend",e);return function(){o(),u()}}function KR(t,e){const n=zo(t,e)||"",i=n.indexOf("ms")===-1?1e3:1;return parseFloat(n)*i}function zw(t,e){const n=KR(t,"transitionDuration"),i=KR(t,"transitionDelay"),o=Vn1(t,u=>{u.target===t&&(o(),e(u))},n+i)}function E9(...t){return t.filter(e=>e!=null).reduce((e,n)=>{if(typeof n!="function")throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return e===null?n:function(...o){e.apply(this,o),n.apply(this,o)}},null)}function jP(t){t.offsetHeight}const QR=t=>!t||typeof t=="function"?t:e=>{t.current=e};function Xn1(t,e){const n=QR(t),i=QR(e);return o=>{n&&n(o),i&&i(o)}}function Lw(t,e){return F.useMemo(()=>Xn1(t,e),[t,e])}function Kn1(t){return t&&"setState"in t?B5.findDOMNode(t):t??null}const ng=dn.forwardRef(({onEnter:t,onEntering:e,onEntered:n,onExit:i,onExiting:o,onExited:u,addEndListener:l,children:a,childRef:s,...c},f)=>{const g=F.useRef(null),p=Lw(g,s),m=M=>{p(Kn1(M))},v=M=>T=>{M&&g.current&&M(g.current,T)},b=F.useCallback(v(t),[t]),x=F.useCallback(v(e),[e]),w=F.useCallback(v(n),[n]),S=F.useCallback(v(i),[i]),A=F.useCallback(v(o),[o]),C=F.useCallback(v(u),[u]),k=F.useCallback(v(l),[l]);return $.jsx(o4,{ref:f,...c,onEnter:b,onEntered:w,onEntering:x,onExit:S,onExited:C,onExiting:A,addEndListener:k,nodeRef:g,children:typeof a=="function"?(M,T)=>a(M,{...T,ref:m}):dn.cloneElement(a,{ref:m})})});ng.displayName="TransitionWrapper";const Qn1={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function Zn1(t,e){const n=`offset${t[0].toUpperCase()}${t.slice(1)}`,i=e[n],o=Qn1[t];return i+parseInt(zo(e,o[0]),10)+parseInt(zo(e,o[1]),10)}const Jn1={[q4]:"collapse",[Br]:"collapsing",[w3]:"collapsing",[Ao]:"collapse show"},PP=dn.forwardRef(({onEnter:t,onEntering:e,onEntered:n,onExit:i,onExiting:o,className:u,children:l,dimension:a="height",in:s=!1,timeout:c=300,mountOnEnter:f=!1,unmountOnExit:g=!1,appear:p=!1,getDimensionValue:m=Zn1,...v},b)=>{const x=typeof a=="function"?a():a,w=F.useMemo(()=>E9(M=>{M.style[x]="0"},t),[x,t]),S=F.useMemo(()=>E9(M=>{const T=`scroll${x[0].toUpperCase()}${x.slice(1)}`;M.style[x]=`${M[T]}px`},e),[x,e]),A=F.useMemo(()=>E9(M=>{M.style[x]=null},n),[x,n]),C=F.useMemo(()=>E9(M=>{M.style[x]=`${m(x,M)}px`,jP(M)},i),[i,m,x]),k=F.useMemo(()=>E9(M=>{M.style[x]=null},o),[x,o]);return $.jsx(ng,{ref:b,addEndListener:zw,...v,"aria-expanded":v.role?s:null,onEnter:w,onEntering:S,onEntered:A,onExit:C,onExiting:k,childRef:Yl(l),in:s,timeout:c,mountOnEnter:f,unmountOnExit:g,appear:p,children:(M,T)=>dn.cloneElement(l,{...T,className:R1(u,l.props.className,Jn1[M],x==="width"&&"collapse-horizontal")})})});PP.displayName="Collapse";function t21(t){const e=F.useRef(t);return F.useEffect(()=>{e.current=t},[t]),e}function T8(t){const e=t21(t);return F.useCallback(function(...n){return e.current&&e.current(...n)},[e])}const jw=(t=>F.forwardRef((e,n)=>$.jsx("div",{...e,ref:n,className:R1(e.className,t)})));function e21(){return F.useState(null)}function n21(t){const e=F.useRef(t);return F.useEffect(()=>{e.current=t},[t]),e}function sn(t){const e=n21(t);return F.useCallback(function(...n){return e.current&&e.current(...n)},[e])}function i21(t,e,n,i=!1){const o=sn(n);F.useEffect(()=>{const u=typeof t=="function"?t():t;return u.addEventListener(e,o,i),()=>u.removeEventListener(e,o,i)},[t])}function IP(){const t=F.useRef(!0),e=F.useRef(()=>t.current);return F.useEffect(()=>(t.current=!0,()=>{t.current=!1}),[]),e.current}function BP(t){const e=F.useRef(null);return F.useEffect(()=>{e.current=t}),e.current}const o21=typeof global<"u"&&global.navigator&&global.navigator.product==="ReactNative",u21=typeof document<"u",ZR=u21||o21?F.useLayoutEffect:F.useEffect,l21=["as","disabled"];function a21(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}function r21(t){return!t||t.trim()==="#"}function Pw({tagName:t,disabled:e,href:n,target:i,rel:o,role:u,onClick:l,tabIndex:a=0,type:s}){t||(n!=null||i!=null||o!=null?t="a":t="button");const c={tagName:t};if(t==="button")return[{type:s||"button",disabled:e},c];const f=p=>{if((e||t==="a"&&r21(n))&&p.preventDefault(),e){p.stopPropagation();return}l?.(p)},g=p=>{p.key===" "&&(p.preventDefault(),f(p))};return t==="a"&&(n||(n="#"),e&&(n=void 0)),[{role:u??"button",disabled:void 0,tabIndex:e?void 0:a,href:n,target:t==="a"?i:void 0,"aria-disabled":e||void 0,rel:t==="a"?o:void 0,onClick:f,onKeyDown:g},c]}const Iw=F.forwardRef((t,e)=>{let{as:n,disabled:i}=t,o=a21(t,l21);const[u,{tagName:l}]=Pw(Object.assign({tagName:n,disabled:i},o));return $.jsx(l,Object.assign({},o,u,{ref:e}))});Iw.displayName="Button";const s21=["onKeyDown"];function c21(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}function d21(t){return!t||t.trim()==="#"}const ig=F.forwardRef((t,e)=>{let{onKeyDown:n}=t,i=c21(t,s21);const[o]=Pw(Object.assign({tagName:"a"},i)),u=sn(l=>{o.onKeyDown(l),n?.(l)});return d21(i.href)||i.role==="button"?$.jsx("a",Object.assign({ref:e},i,o,{onKeyDown:u})):$.jsx("a",Object.assign({ref:e},i,{onKeyDown:n}))});ig.displayName="Anchor";const f21={[w3]:"show",[Ao]:"show"},UP=F.forwardRef(({className:t,children:e,transitionClasses:n={},onEnter:i,...o},u)=>{const l={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,...o},a=F.useCallback((s,c)=>{jP(s),i?.(s,c)},[i]);return $.jsx(ng,{ref:u,addEndListener:zw,...l,onEnter:a,childRef:Yl(e),children:(s,c)=>F.cloneElement(e,{...c,className:R1("fade",t,e.props.className,f21[s],n[s])})})});UP.displayName="Fade";const g21={"aria-label":Lo.string,onClick:Lo.func,variant:Lo.oneOf(["white"])},Bw=F.forwardRef(({className:t,variant:e,"aria-label":n="Close",...i},o)=>$.jsx("button",{ref:o,type:"button",className:R1("btn-close",e&&`btn-close-${e}`,t),"aria-label":n,...i}));Bw.displayName="CloseButton";Bw.propTypes=g21;const Uw=F.forwardRef(({as:t,bsPrefix:e,variant:n="primary",size:i,active:o=!1,disabled:u=!1,className:l,...a},s)=>{const c=H1(e,"btn"),[f,{tagName:g}]=Pw({tagName:t,disabled:u,...a}),p=g;return $.jsx(p,{...f,...a,ref:s,disabled:u,className:R1(l,c,o&&"active",n&&`${c}-${n}`,i&&`${c}-${i}`,a.href&&u&&"disabled")})});Uw.displayName="Button";const qw=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"card-body"),$.jsx(n,{ref:o,className:R1(t,e),...i})));qw.displayName="CardBody";const qP=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"card-footer"),$.jsx(n,{ref:o,className:R1(t,e),...i})));qP.displayName="CardFooter";const Hw=F.createContext(null);Hw.displayName="CardHeaderContext";const HP=F.forwardRef(({bsPrefix:t,className:e,as:n="div",...i},o)=>{const u=H1(t,"card-header"),l=F.useMemo(()=>({cardHeaderBsPrefix:u}),[u]);return $.jsx(Hw.Provider,{value:l,children:$.jsx(n,{ref:o,...i,className:R1(e,u)})})});HP.displayName="CardHeader";const GP=F.forwardRef(({bsPrefix:t,className:e,variant:n,as:i="img",...o},u)=>{const l=H1(t,"card-img");return $.jsx(i,{ref:u,className:R1(n?`${l}-${n}`:l,e),...o})});GP.displayName="CardImg";const WP=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"card-img-overlay"),$.jsx(n,{ref:o,className:R1(t,e),...i})));WP.displayName="CardImgOverlay";const YP=F.forwardRef(({className:t,bsPrefix:e,as:n="a",...i},o)=>(e=H1(e,"card-link"),$.jsx(n,{ref:o,className:R1(t,e),...i})));YP.displayName="CardLink";const h21=jw("h6"),VP=F.forwardRef(({className:t,bsPrefix:e,as:n=h21,...i},o)=>(e=H1(e,"card-subtitle"),$.jsx(n,{ref:o,className:R1(t,e),...i})));VP.displayName="CardSubtitle";const XP=F.forwardRef(({className:t,bsPrefix:e,as:n="p",...i},o)=>(e=H1(e,"card-text"),$.jsx(n,{ref:o,className:R1(t,e),...i})));XP.displayName="CardText";const p21=jw("h5"),KP=F.forwardRef(({className:t,bsPrefix:e,as:n=p21,...i},o)=>(e=H1(e,"card-title"),$.jsx(n,{ref:o,className:R1(t,e),...i})));KP.displayName="CardTitle";const QP=F.forwardRef(({bsPrefix:t,className:e,bg:n,text:i,border:o,body:u=!1,children:l,as:a="div",...s},c)=>{const f=H1(t,"card");return $.jsx(a,{ref:c,...s,className:R1(e,f,n&&`bg-${n}`,i&&`text-${i}`,o&&`border-${o}`),children:u?$.jsx(qw,{children:l}):l})});QP.displayName="Card";const X4=Object.assign(QP,{Img:GP,Title:KP,Subtitle:VP,Body:qw,Link:YP,Text:XP,Header:HP,Footer:qP,ImgOverlay:WP}),ZP=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"card-group"),$.jsx(n,{ref:o,className:R1(t,e),...i})));ZP.displayName="CardGroup";function m21(t,e){return F.Children.toArray(t).some(n=>F.isValidElement(n)&&n.type===e)}function y21({as:t,bsPrefix:e,className:n,...i}){e=H1(e,"col");const o=OP(),u=FP(),l=[],a=[];return o.forEach(s=>{const c=i[s];delete i[s];let f,g,p;typeof c=="object"&&c!=null?{span:f,offset:g,order:p}=c:f=c;const m=s!==u?`-${s}`:"";f&&l.push(f===!0?`${e}${m}`:`${e}${m}-${f}`),p!=null&&a.push(`order${m}-${p}`),g!=null&&a.push(`offset${m}-${g}`)}),[{...i,className:R1(n,...l,...a)},{as:t,bsPrefix:e,spans:l}]}const ue=F.forwardRef((t,e)=>{const[{className:n,...i},{as:o="div",bsPrefix:u,spans:l}]=y21(t);return $.jsx(o,{...i,ref:e,className:R1(n,!l.length&&u)})});ue.displayName="Col";const N1=F.forwardRef(({bsPrefix:t,fluid:e=!1,as:n="div",className:i,...o},u)=>{const l=H1(t,"container"),a=typeof e=="string"?`-${e}`:"-fluid";return $.jsx(n,{ref:u,...o,className:R1(i,e?`${l}${a}`:l)})});N1.displayName="Container";var v21=Function.prototype.bind.call(Function.prototype.call,[].slice);function wo(t,e){return v21(t.querySelectorAll(e))}function b21(t,e,n){const i=F.useRef(t!==void 0),[o,u]=F.useState(e),l=t!==void 0,a=i.current;return i.current=l,!l&&a&&o!==e&&u(e),[l?t:o,F.useCallback((...s)=>{const[c,...f]=s;let g=n?.(c,...f);return u(c),g},[n])]}function JP(){const[,t]=F.useReducer(e=>e+1,0);return t}const og=F.createContext(null);var JR=Object.prototype.hasOwnProperty;function tD(t,e,n){for(n of t.keys())if(Er(n,e))return n}function Er(t,e){var n,i,o;if(t===e)return!0;if(t&&e&&(n=t.constructor)===e.constructor){if(n===Date)return t.getTime()===e.getTime();if(n===RegExp)return t.toString()===e.toString();if(n===Array){if((i=t.length)===e.length)for(;i--&&Er(t[i],e[i]););return i===-1}if(n===Set){if(t.size!==e.size)return!1;for(i of t)if(o=i,o&&typeof o=="object"&&(o=tD(e,o),!o)||!e.has(o))return!1;return!0}if(n===Map){if(t.size!==e.size)return!1;for(i of t)if(o=i[0],o&&typeof o=="object"&&(o=tD(e,o),!o)||!Er(i[1],e.get(o)))return!1;return!0}if(n===ArrayBuffer)t=new Uint8Array(t),e=new Uint8Array(e);else if(n===DataView){if((i=t.byteLength)===e.byteLength)for(;i--&&t.getInt8(i)===e.getInt8(i););return i===-1}if(ArrayBuffer.isView(t)){if((i=t.byteLength)===e.byteLength)for(;i--&&t[i]===e[i];);return i===-1}if(!n||typeof t=="object"){i=0;for(n in t)if(JR.call(t,n)&&++i&&!JR.call(e,n)||!(n in e)||!Er(t[n],e[n]))return!1;return Object.keys(e).length===i}}return t!==t&&e!==e}function x21(t){const e=IP();return[t[0],F.useCallback(n=>{if(e())return t[1](n)},[e,t[1]])]}var Kn="top",e3="bottom",n3="right",Qn="left",Gw="auto",$8=[Kn,e3,n3,Qn],ll="start",Ur="end",_21="clippingParents",tI="viewport",S9="popper",w21="reference",eD=$8.reduce(function(t,e){return t.concat([e+"-"+ll,e+"-"+Ur])},[]),eI=[].concat($8,[Gw]).reduce(function(t,e){return t.concat([e,e+"-"+ll,e+"-"+Ur])},[]),E21="beforeRead",S21="read",A21="afterRead",C21="beforeMain",k21="main",T21="afterMain",$21="beforeWrite",M21="write",N21="afterWrite",R21=[E21,S21,A21,C21,k21,T21,$21,M21,N21];function gi(t){return t.split("-")[0]}function C2(t){if(t==null)return window;if(t.toString()!=="[object Window]"){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function U0(t){var e=C2(t).Element;return t instanceof e||t instanceof Element}function hi(t){var e=C2(t).HTMLElement;return t instanceof e||t instanceof HTMLElement}function Ww(t){if(typeof ShadowRoot>"u")return!1;var e=C2(t).ShadowRoot;return t instanceof e||t instanceof ShadowRoot}var R0=Math.max,fd=Math.min,al=Math.round;function lx(){var t=navigator.userAgentData;return t!=null&&t.brands&&Array.isArray(t.brands)?t.brands.map(function(e){return e.brand+"/"+e.version}).join(" "):navigator.userAgent}function nI(){return!/^((?!chrome|android).)*safari/i.test(lx())}function rl(t,e,n){e===void 0&&(e=!1),n===void 0&&(n=!1);var i=t.getBoundingClientRect(),o=1,u=1;e&&hi(t)&&(o=t.offsetWidth>0&&al(i.width)/t.offsetWidth||1,u=t.offsetHeight>0&&al(i.height)/t.offsetHeight||1);var l=U0(t)?C2(t):window,a=l.visualViewport,s=!nI()&&n,c=(i.left+(s&&a?a.offsetLeft:0))/o,f=(i.top+(s&&a?a.offsetTop:0))/u,g=i.width/o,p=i.height/u;return{width:g,height:p,top:f,right:c+g,bottom:f+p,left:c,x:c,y:f}}function Yw(t){var e=rl(t),n=t.offsetWidth,i=t.offsetHeight;return Math.abs(e.width-n)<=1&&(n=e.width),Math.abs(e.height-i)<=1&&(i=e.height),{x:t.offsetLeft,y:t.offsetTop,width:n,height:i}}function iI(t,e){var n=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(n&&Ww(n)){var i=e;do{if(i&&t.isSameNode(i))return!0;i=i.parentNode||i.host}while(i)}return!1}function gu(t){return t?(t.nodeName||"").toLowerCase():null}function Vo(t){return C2(t).getComputedStyle(t)}function D21(t){return["table","td","th"].indexOf(gu(t))>=0}function $u(t){return((U0(t)?t.ownerDocument:t.document)||window.document).documentElement}function ug(t){return gu(t)==="html"?t:t.assignedSlot||t.parentNode||(Ww(t)?t.host:null)||$u(t)}function nD(t){return!hi(t)||Vo(t).position==="fixed"?null:t.offsetParent}function O21(t){var e=/firefox/i.test(lx()),n=/Trident/i.test(lx());if(n&&hi(t)){var i=Vo(t);if(i.position==="fixed")return null}var o=ug(t);for(Ww(o)&&(o=o.host);hi(o)&&["html","body"].indexOf(gu(o))<0;){var u=Vo(o);if(u.transform!=="none"||u.perspective!=="none"||u.contain==="paint"||["transform","perspective"].indexOf(u.willChange)!==-1||e&&u.willChange==="filter"||e&&u.filter&&u.filter!=="none")return o;o=o.parentNode}return null}function M8(t){for(var e=C2(t),n=nD(t);n&&D21(n)&&Vo(n).position==="static";)n=nD(n);return n&&(gu(n)==="html"||gu(n)==="body"&&Vo(n).position==="static")?e:n||O21(t)||e}function Vw(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function Sr(t,e,n){return R0(t,fd(e,n))}function F21(t,e,n){var i=Sr(t,e,n);return i>n?n:i}function oI(){return{top:0,right:0,bottom:0,left:0}}function uI(t){return Object.assign({},oI(),t)}function lI(t,e){return e.reduce(function(n,i){return n[i]=t,n},{})}var z21=function(e,n){return e=typeof e=="function"?e(Object.assign({},n.rects,{placement:n.placement})):e,uI(typeof e!="number"?e:lI(e,$8))};function L21(t){var e,n=t.state,i=t.name,o=t.options,u=n.elements.arrow,l=n.modifiersData.popperOffsets,a=gi(n.placement),s=Vw(a),c=[Qn,n3].indexOf(a)>=0,f=c?"height":"width";if(!(!u||!l)){var g=z21(o.padding,n),p=Yw(u),m=s==="y"?Kn:Qn,v=s==="y"?e3:n3,b=n.rects.reference[f]+n.rects.reference[s]-l[s]-n.rects.popper[f],x=l[s]-n.rects.reference[s],w=M8(u),S=w?s==="y"?w.clientHeight||0:w.clientWidth||0:0,A=b/2-x/2,C=g[m],k=S-p[f]-g[v],M=S/2-p[f]/2+A,T=Sr(C,M,k),D=s;n.modifiersData[i]=(e={},e[D]=T,e.centerOffset=T-M,e)}}function j21(t){var e=t.state,n=t.options,i=n.element,o=i===void 0?"[data-popper-arrow]":i;o!=null&&(typeof o=="string"&&(o=e.elements.popper.querySelector(o),!o)||iI(e.elements.popper,o)&&(e.elements.arrow=o))}const P21={name:"arrow",enabled:!0,phase:"main",fn:L21,effect:j21,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function sl(t){return t.split("-")[1]}var I21={top:"auto",right:"auto",bottom:"auto",left:"auto"};function B21(t,e){var n=t.x,i=t.y,o=e.devicePixelRatio||1;return{x:al(n*o)/o||0,y:al(i*o)/o||0}}function iD(t){var e,n=t.popper,i=t.popperRect,o=t.placement,u=t.variation,l=t.offsets,a=t.position,s=t.gpuAcceleration,c=t.adaptive,f=t.roundOffsets,g=t.isFixed,p=l.x,m=p===void 0?0:p,v=l.y,b=v===void 0?0:v,x=typeof f=="function"?f({x:m,y:b}):{x:m,y:b};m=x.x,b=x.y;var w=l.hasOwnProperty("x"),S=l.hasOwnProperty("y"),A=Qn,C=Kn,k=window;if(c){var M=M8(n),T="clientHeight",D="clientWidth";if(M===C2(n)&&(M=$u(n),Vo(M).position!=="static"&&a==="absolute"&&(T="scrollHeight",D="scrollWidth")),M=M,o===Kn||(o===Qn||o===n3)&&u===Ur){C=e3;var I=g&&M===k&&k.visualViewport?k.visualViewport.height:M[T];b-=I-i.height,b*=s?1:-1}if(o===Qn||(o===Kn||o===e3)&&u===Ur){A=n3;var U=g&&M===k&&k.visualViewport?k.visualViewport.width:M[D];m-=U-i.width,m*=s?1:-1}}var B=Object.assign({position:a},c&&I21),V=f===!0?B21({x:m,y:b},C2(n)):{x:m,y:b};if(m=V.x,b=V.y,s){var W;return Object.assign({},B,(W={},W[C]=S?"0":"",W[A]=w?"0":"",W.transform=(k.devicePixelRatio||1)<=1?"translate("+m+"px, "+b+"px)":"translate3d("+m+"px, "+b+"px, 0)",W))}return Object.assign({},B,(e={},e[C]=S?b+"px":"",e[A]=w?m+"px":"",e.transform="",e))}function U21(t){var e=t.state,n=t.options,i=n.gpuAcceleration,o=i===void 0?!0:i,u=n.adaptive,l=u===void 0?!0:u,a=n.roundOffsets,s=a===void 0?!0:a,c={placement:gi(e.placement),variation:sl(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:o,isFixed:e.options.strategy==="fixed"};e.modifiersData.popperOffsets!=null&&(e.styles.popper=Object.assign({},e.styles.popper,iD(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:l,roundOffsets:s})))),e.modifiersData.arrow!=null&&(e.styles.arrow=Object.assign({},e.styles.arrow,iD(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})}const q21={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:U21,data:{}};var Hs={passive:!0};function H21(t){var e=t.state,n=t.instance,i=t.options,o=i.scroll,u=o===void 0?!0:o,l=i.resize,a=l===void 0?!0:l,s=C2(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return u&&c.forEach(function(f){f.addEventListener("scroll",n.update,Hs)}),a&&s.addEventListener("resize",n.update,Hs),function(){u&&c.forEach(function(f){f.removeEventListener("scroll",n.update,Hs)}),a&&s.removeEventListener("resize",n.update,Hs)}}const G21={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:H21,data:{}};var W21={left:"right",right:"left",bottom:"top",top:"bottom"};function Fc(t){return t.replace(/left|right|bottom|top/g,function(e){return W21[e]})}var Y21={start:"end",end:"start"};function oD(t){return t.replace(/start|end/g,function(e){return Y21[e]})}function Xw(t){var e=C2(t),n=e.pageXOffset,i=e.pageYOffset;return{scrollLeft:n,scrollTop:i}}function Kw(t){return rl($u(t)).left+Xw(t).scrollLeft}function V21(t,e){var n=C2(t),i=$u(t),o=n.visualViewport,u=i.clientWidth,l=i.clientHeight,a=0,s=0;if(o){u=o.width,l=o.height;var c=nI();(c||!c&&e==="fixed")&&(a=o.offsetLeft,s=o.offsetTop)}return{width:u,height:l,x:a+Kw(t),y:s}}function X21(t){var e,n=$u(t),i=Xw(t),o=(e=t.ownerDocument)==null?void 0:e.body,u=R0(n.scrollWidth,n.clientWidth,o?o.scrollWidth:0,o?o.clientWidth:0),l=R0(n.scrollHeight,n.clientHeight,o?o.scrollHeight:0,o?o.clientHeight:0),a=-i.scrollLeft+Kw(t),s=-i.scrollTop;return Vo(o||n).direction==="rtl"&&(a+=R0(n.clientWidth,o?o.clientWidth:0)-u),{width:u,height:l,x:a,y:s}}function Qw(t){var e=Vo(t),n=e.overflow,i=e.overflowX,o=e.overflowY;return/auto|scroll|overlay|hidden/.test(n+o+i)}function aI(t){return["html","body","#document"].indexOf(gu(t))>=0?t.ownerDocument.body:hi(t)&&Qw(t)?t:aI(ug(t))}function Ar(t,e){var n;e===void 0&&(e=[]);var i=aI(t),o=i===((n=t.ownerDocument)==null?void 0:n.body),u=C2(i),l=o?[u].concat(u.visualViewport||[],Qw(i)?i:[]):i,a=e.concat(l);return o?a:a.concat(Ar(ug(l)))}function ax(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function K21(t,e){var n=rl(t,!1,e==="fixed");return n.top=n.top+t.clientTop,n.left=n.left+t.clientLeft,n.bottom=n.top+t.clientHeight,n.right=n.left+t.clientWidth,n.width=t.clientWidth,n.height=t.clientHeight,n.x=n.left,n.y=n.top,n}function uD(t,e,n){return e===tI?ax(V21(t,n)):U0(e)?K21(e,n):ax(X21($u(t)))}function Q21(t){var e=Ar(ug(t)),n=["absolute","fixed"].indexOf(Vo(t).position)>=0,i=n&&hi(t)?M8(t):t;return U0(i)?e.filter(function(o){return U0(o)&&iI(o,i)&&gu(o)!=="body"}):[]}function Z21(t,e,n,i){var o=e==="clippingParents"?Q21(t):[].concat(e),u=[].concat(o,[n]),l=u[0],a=u.reduce(function(s,c){var f=uD(t,c,i);return s.top=R0(f.top,s.top),s.right=fd(f.right,s.right),s.bottom=fd(f.bottom,s.bottom),s.left=R0(f.left,s.left),s},uD(t,l,i));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}function rI(t){var e=t.reference,n=t.element,i=t.placement,o=i?gi(i):null,u=i?sl(i):null,l=e.x+e.width/2-n.width/2,a=e.y+e.height/2-n.height/2,s;switch(o){case Kn:s={x:l,y:e.y-n.height};break;case e3:s={x:l,y:e.y+e.height};break;case n3:s={x:e.x+e.width,y:a};break;case Qn:s={x:e.x-n.width,y:a};break;default:s={x:e.x,y:e.y}}var c=o?Vw(o):null;if(c!=null){var f=c==="y"?"height":"width";switch(u){case ll:s[c]=s[c]-(e[f]/2-n[f]/2);break;case Ur:s[c]=s[c]+(e[f]/2-n[f]/2);break}}return s}function qr(t,e){e===void 0&&(e={});var n=e,i=n.placement,o=i===void 0?t.placement:i,u=n.strategy,l=u===void 0?t.strategy:u,a=n.boundary,s=a===void 0?_21:a,c=n.rootBoundary,f=c===void 0?tI:c,g=n.elementContext,p=g===void 0?S9:g,m=n.altBoundary,v=m===void 0?!1:m,b=n.padding,x=b===void 0?0:b,w=uI(typeof x!="number"?x:lI(x,$8)),S=p===S9?w21:S9,A=t.rects.popper,C=t.elements[v?S:p],k=Z21(U0(C)?C:C.contextElement||$u(t.elements.popper),s,f,l),M=rl(t.elements.reference),T=rI({reference:M,element:A,placement:o}),D=ax(Object.assign({},A,T)),I=p===S9?D:M,U={top:k.top-I.top+w.top,bottom:I.bottom-k.bottom+w.bottom,left:k.left-I.left+w.left,right:I.right-k.right+w.right},B=t.modifiersData.offset;if(p===S9&&B){var V=B[o];Object.keys(U).forEach(function(W){var O=[n3,e3].indexOf(W)>=0?1:-1,j=[Kn,e3].indexOf(W)>=0?"y":"x";U[W]+=V[j]*O})}return U}function J21(t,e){e===void 0&&(e={});var n=e,i=n.placement,o=n.boundary,u=n.rootBoundary,l=n.padding,a=n.flipVariations,s=n.allowedAutoPlacements,c=s===void 0?eI:s,f=sl(i),g=f?a?eD:eD.filter(function(v){return sl(v)===f}):$8,p=g.filter(function(v){return c.indexOf(v)>=0});p.length===0&&(p=g);var m=p.reduce(function(v,b){return v[b]=qr(t,{placement:b,boundary:o,rootBoundary:u,padding:l})[gi(b)],v},{});return Object.keys(m).sort(function(v,b){return m[v]-m[b]})}function t31(t){if(gi(t)===Gw)return[];var e=Fc(t);return[oD(t),e,oD(e)]}function e31(t){var e=t.state,n=t.options,i=t.name;if(!e.modifiersData[i]._skip){for(var o=n.mainAxis,u=o===void 0?!0:o,l=n.altAxis,a=l===void 0?!0:l,s=n.fallbackPlacements,c=n.padding,f=n.boundary,g=n.rootBoundary,p=n.altBoundary,m=n.flipVariations,v=m===void 0?!0:m,b=n.allowedAutoPlacements,x=e.options.placement,w=gi(x),S=w===x,A=s||(S||!v?[Fc(x)]:t31(x)),C=[x].concat(A).reduce(function(l1,d1){return l1.concat(gi(d1)===Gw?J21(e,{placement:d1,boundary:f,rootBoundary:g,padding:c,flipVariations:v,allowedAutoPlacements:b}):d1)},[]),k=e.rects.reference,M=e.rects.popper,T=new Map,D=!0,I=C[0],U=0;U<C.length;U++){var B=C[U],V=gi(B),W=sl(B)===ll,O=[Kn,e3].indexOf(V)>=0,j=O?"width":"height",R=qr(e,{placement:B,boundary:f,rootBoundary:g,altBoundary:p,padding:c}),P=O?W?n3:Qn:W?e3:Kn;k[j]>M[j]&&(P=Fc(P));var q=Fc(P),Y=[];if(u&&Y.push(R[V]<=0),a&&Y.push(R[P]<=0,R[q]<=0),Y.every(function(l1){return l1})){I=B,D=!1;break}T.set(B,Y)}if(D)for(var z=v?3:1,G=function(d1){var x1=C.find(function(j1){var M1=T.get(j1);if(M1)return M1.slice(0,d1).every(function(v1){return v1})});if(x1)return I=x1,"break"},Q=z;Q>0;Q--){var n1=G(Q);if(n1==="break")break}e.placement!==I&&(e.modifiersData[i]._skip=!0,e.placement=I,e.reset=!0)}}const n31={name:"flip",enabled:!0,phase:"main",fn:e31,requiresIfExists:["offset"],data:{_skip:!1}};function lD(t,e,n){return n===void 0&&(n={x:0,y:0}),{top:t.top-e.height-n.y,right:t.right-e.width+n.x,bottom:t.bottom-e.height+n.y,left:t.left-e.width-n.x}}function aD(t){return[Kn,n3,e3,Qn].some(function(e){return t[e]>=0})}function i31(t){var e=t.state,n=t.name,i=e.rects.reference,o=e.rects.popper,u=e.modifiersData.preventOverflow,l=qr(e,{elementContext:"reference"}),a=qr(e,{altBoundary:!0}),s=lD(l,i),c=lD(a,o,u),f=aD(s),g=aD(c);e.modifiersData[n]={referenceClippingOffsets:s,popperEscapeOffsets:c,isReferenceHidden:f,hasPopperEscaped:g},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":f,"data-popper-escaped":g})}const o31={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:i31};function u31(t,e,n){var i=gi(t),o=[Qn,Kn].indexOf(i)>=0?-1:1,u=typeof n=="function"?n(Object.assign({},e,{placement:t})):n,l=u[0],a=u[1];return l=l||0,a=(a||0)*o,[Qn,n3].indexOf(i)>=0?{x:a,y:l}:{x:l,y:a}}function l31(t){var e=t.state,n=t.options,i=t.name,o=n.offset,u=o===void 0?[0,0]:o,l=eI.reduce(function(f,g){return f[g]=u31(g,e.rects,u),f},{}),a=l[e.placement],s=a.x,c=a.y;e.modifiersData.popperOffsets!=null&&(e.modifiersData.popperOffsets.x+=s,e.modifiersData.popperOffsets.y+=c),e.modifiersData[i]=l}const a31={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:l31};function r31(t){var e=t.state,n=t.name;e.modifiersData[n]=rI({reference:e.rects.reference,element:e.rects.popper,placement:e.placement})}const s31={name:"popperOffsets",enabled:!0,phase:"read",fn:r31,data:{}};function c31(t){return t==="x"?"y":"x"}function d31(t){var e=t.state,n=t.options,i=t.name,o=n.mainAxis,u=o===void 0?!0:o,l=n.altAxis,a=l===void 0?!1:l,s=n.boundary,c=n.rootBoundary,f=n.altBoundary,g=n.padding,p=n.tether,m=p===void 0?!0:p,v=n.tetherOffset,b=v===void 0?0:v,x=qr(e,{boundary:s,rootBoundary:c,padding:g,altBoundary:f}),w=gi(e.placement),S=sl(e.placement),A=!S,C=Vw(w),k=c31(C),M=e.modifiersData.popperOffsets,T=e.rects.reference,D=e.rects.popper,I=typeof b=="function"?b(Object.assign({},e.rects,{placement:e.placement})):b,U=typeof I=="number"?{mainAxis:I,altAxis:I}:Object.assign({mainAxis:0,altAxis:0},I),B=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,V={x:0,y:0};if(M){if(u){var W,O=C==="y"?Kn:Qn,j=C==="y"?e3:n3,R=C==="y"?"height":"width",P=M[C],q=P+x[O],Y=P-x[j],z=m?-D[R]/2:0,G=S===ll?T[R]:D[R],Q=S===ll?-D[R]:-T[R],n1=e.elements.arrow,l1=m&&n1?Yw(n1):{width:0,height:0},d1=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:oI(),x1=d1[O],j1=d1[j],M1=Sr(0,T[R],l1[R]),v1=A?T[R]/2-z-M1-x1-U.mainAxis:G-M1-x1-U.mainAxis,D1=A?-T[R]/2+z+M1+j1+U.mainAxis:Q+M1+j1+U.mainAxis,B1=e.elements.arrow&&M8(e.elements.arrow),f1=B1?C==="y"?B1.clientTop||0:B1.clientLeft||0:0,lt=(W=B?.[C])!=null?W:0,X1=P+v1-lt-f1,Y1=P+D1-lt,Ft=Sr(m?fd(q,X1):q,P,m?R0(Y,Y1):Y);M[C]=Ft,V[C]=Ft-P}if(a){var C1,zt=C==="x"?Kn:Qn,X3=C==="x"?e3:n3,ge=M[k],Gi=k==="y"?"height":"width",k7=ge+x[zt],wa=ge-x[X3],Ea=[Kn,Qn].indexOf(w)!==-1,T7=(C1=B?.[k])!=null?C1:0,p4=Ea?k7:ge-T[Gi]-D[Gi]-T7+U.altAxis,Ke=Ea?ge+T[Gi]+D[Gi]-T7-U.altAxis:wa,g3=m&&Ea?F21(p4,ge,Ke):Sr(m?p4:k7,ge,m?Ke:wa);M[k]=g3,V[k]=g3-ge}e.modifiersData[i]=V}}const f31={name:"preventOverflow",enabled:!0,phase:"main",fn:d31,requiresIfExists:["offset"]};function g31(t){return{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}}function h31(t){return t===C2(t)||!hi(t)?Xw(t):g31(t)}function p31(t){var e=t.getBoundingClientRect(),n=al(e.width)/t.offsetWidth||1,i=al(e.height)/t.offsetHeight||1;return n!==1||i!==1}function m31(t,e,n){n===void 0&&(n=!1);var i=hi(e),o=hi(e)&&p31(e),u=$u(e),l=rl(t,o,n),a={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(i||!i&&!n)&&((gu(e)!=="body"||Qw(u))&&(a=h31(e)),hi(e)?(s=rl(e,!0),s.x+=e.clientLeft,s.y+=e.clientTop):u&&(s.x=Kw(u))),{x:l.left+a.scrollLeft-s.x,y:l.top+a.scrollTop-s.y,width:l.width,height:l.height}}function y31(t){var e=new Map,n=new Set,i=[];t.forEach(function(u){e.set(u.name,u)});function o(u){n.add(u.name);var l=[].concat(u.requires||[],u.requiresIfExists||[]);l.forEach(function(a){if(!n.has(a)){var s=e.get(a);s&&o(s)}}),i.push(u)}return t.forEach(function(u){n.has(u.name)||o(u)}),i}function v31(t){var e=y31(t);return R21.reduce(function(n,i){return n.concat(e.filter(function(o){return o.phase===i}))},[])}function b31(t){var e;return function(){return e||(e=new Promise(function(n){Promise.resolve().then(function(){e=void 0,n(t())})})),e}}function x31(t){var e=t.reduce(function(n,i){var o=n[i.name];return n[i.name]=o?Object.assign({},o,i,{options:Object.assign({},o.options,i.options),data:Object.assign({},o.data,i.data)}):i,n},{});return Object.keys(e).map(function(n){return e[n]})}var rD={placement:"bottom",modifiers:[],strategy:"absolute"};function sD(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return!e.some(function(i){return!(i&&typeof i.getBoundingClientRect=="function")})}function _31(t){t===void 0&&(t={});var e=t,n=e.defaultModifiers,i=n===void 0?[]:n,o=e.defaultOptions,u=o===void 0?rD:o;return function(a,s,c){c===void 0&&(c=u);var f={placement:"bottom",orderedModifiers:[],options:Object.assign({},rD,u),modifiersData:{},elements:{reference:a,popper:s},attributes:{},styles:{}},g=[],p=!1,m={state:f,setOptions:function(w){var S=typeof w=="function"?w(f.options):w;b(),f.options=Object.assign({},u,f.options,S),f.scrollParents={reference:U0(a)?Ar(a):a.contextElement?Ar(a.contextElement):[],popper:Ar(s)};var A=v31(x31([].concat(i,f.options.modifiers)));return f.orderedModifiers=A.filter(function(C){return C.enabled}),v(),m.update()},forceUpdate:function(){if(!p){var w=f.elements,S=w.reference,A=w.popper;if(sD(S,A)){f.rects={reference:m31(S,M8(A),f.options.strategy==="fixed"),popper:Yw(A)},f.reset=!1,f.placement=f.options.placement,f.orderedModifiers.forEach(function(U){return f.modifiersData[U.name]=Object.assign({},U.data)});for(var C=0;C<f.orderedModifiers.length;C++){if(f.reset===!0){f.reset=!1,C=-1;continue}var k=f.orderedModifiers[C],M=k.fn,T=k.options,D=T===void 0?{}:T,I=k.name;typeof M=="function"&&(f=M({state:f,options:D,name:I,instance:m})||f)}}}},update:b31(function(){return new Promise(function(x){m.forceUpdate(),x(f)})}),destroy:function(){b(),p=!0}};if(!sD(a,s))return m;m.setOptions(c).then(function(x){!p&&c.onFirstUpdate&&c.onFirstUpdate(x)});function v(){f.orderedModifiers.forEach(function(x){var w=x.name,S=x.options,A=S===void 0?{}:S,C=x.effect;if(typeof C=="function"){var k=C({state:f,name:w,instance:m,options:A}),M=function(){};g.push(k||M)}})}function b(){g.forEach(function(x){return x()}),g=[]}return m}}const w31=_31({defaultModifiers:[o31,s31,q21,G21,a31,n31,f31,P21]}),E31=["enabled","placement","strategy","modifiers"];function S31(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}const A31={name:"applyStyles",enabled:!1,phase:"afterWrite",fn:()=>{}},C31={name:"ariaDescribedBy",enabled:!0,phase:"afterWrite",effect:({state:t})=>()=>{const{reference:e,popper:n}=t.elements;if("removeAttribute"in e){const i=(e.getAttribute("aria-describedby")||"").split(",").filter(o=>o.trim()!==n.id);i.length?e.setAttribute("aria-describedby",i.join(",")):e.removeAttribute("aria-describedby")}},fn:({state:t})=>{var e;const{popper:n,reference:i}=t.elements,o=(e=n.getAttribute("role"))==null?void 0:e.toLowerCase();if(n.id&&o==="tooltip"&&"setAttribute"in i){const u=i.getAttribute("aria-describedby");if(u&&u.split(",").indexOf(n.id)!==-1)return;i.setAttribute("aria-describedby",u?`${u},${n.id}`:n.id)}}},k31=[];function T31(t,e,n={}){let{enabled:i=!0,placement:o="bottom",strategy:u="absolute",modifiers:l=k31}=n,a=S31(n,E31);const s=F.useRef(l),c=F.useRef(),f=F.useCallback(()=>{var x;(x=c.current)==null||x.update()},[]),g=F.useCallback(()=>{var x;(x=c.current)==null||x.forceUpdate()},[]),[p,m]=x21(F.useState({placement:o,update:f,forceUpdate:g,attributes:{},styles:{popper:{},arrow:{}}})),v=F.useMemo(()=>({name:"updateStateModifier",enabled:!0,phase:"write",requires:["computeStyles"],fn:({state:x})=>{const w={},S={};Object.keys(x.elements).forEach(A=>{w[A]=x.styles[A],S[A]=x.attributes[A]}),m({state:x,styles:w,attributes:S,update:f,forceUpdate:g,placement:x.placement})}}),[f,g,m]),b=F.useMemo(()=>(Er(s.current,l)||(s.current=l),s.current),[l]);return F.useEffect(()=>{!c.current||!i||c.current.setOptions({placement:o,strategy:u,modifiers:[...b,v,A31]})},[u,o,v,i,b]),F.useEffect(()=>{if(!(!i||t==null||e==null))return c.current=w31(t,e,Object.assign({},a,{placement:o,strategy:u,modifiers:[...b,C31,v]})),()=>{c.current!=null&&(c.current.destroy(),c.current=void 0,m(x=>Object.assign({},x,{attributes:{},styles:{popper:{}}})))}},[i,t,e]),p}function gd(t,e){if(t.contains)return t.contains(e);if(t.compareDocumentPosition)return t===e||!!(t.compareDocumentPosition(e)&16)}var Hy,cD;function $31(){if(cD)return Hy;cD=1;var t=function(){};return Hy=t,Hy}var M31=$31();const N31=E8(M31),dD=()=>{};function R31(t){return t.button===0}function D31(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}const Gy=t=>t&&("current"in t?t.current:t),fD={click:"mousedown",mouseup:"mousedown",pointerup:"pointerdown"};function O31(t,e=dD,{disabled:n,clickTrigger:i="click"}={}){const o=F.useRef(!1),u=F.useRef(!1),l=F.useCallback(c=>{const f=Gy(t);N31(!!f,"ClickOutside captured a close event but does not have a ref to compare it to. useClickOutside(), should be passed a ref that resolves to a DOM node"),o.current=!f||D31(c)||!R31(c)||!!gd(f,c.target)||u.current,u.current=!1},[t]),a=sn(c=>{const f=Gy(t);f&&gd(f,c.target)?u.current=!0:u.current=!1}),s=sn(c=>{o.current||e(c)});F.useEffect(()=>{var c,f;if(n||t==null)return;const g=tg(Gy(t)),p=g.defaultView||window;let m=(c=p.event)!=null?c:(f=p.parent)==null?void 0:f.event,v=null;fD[i]&&(v=Q4(g,fD[i],a,!0));const b=Q4(g,i,l,!0),x=Q4(g,i,S=>{if(S===m){m=void 0;return}s(S)});let w=[];return"ontouchstart"in g.documentElement&&(w=[].slice.call(g.body.children).map(S=>Q4(S,"mousemove",dD))),()=>{v?.(),b(),x(),w.forEach(S=>S())}},[t,n,i,l,a,s])}function F31(t){const e={};return Array.isArray(t)?(t?.forEach(n=>{e[n.name]=n}),e):t||e}function z31(t={}){return Array.isArray(t)?t:Object.keys(t).map(e=>(t[e].name=e,t[e]))}function L31({enabled:t,enableEvents:e,placement:n,flip:i,offset:o,fixed:u,containerPadding:l,arrowElement:a,popperConfig:s={}}){var c,f,g,p,m;const v=F31(s.modifiers);return Object.assign({},s,{placement:n,enabled:t,strategy:u?"fixed":s.strategy,modifiers:z31(Object.assign({},v,{eventListeners:{enabled:e,options:(c=v.eventListeners)==null?void 0:c.options},preventOverflow:Object.assign({},v.preventOverflow,{options:l?Object.assign({padding:l},(f=v.preventOverflow)==null?void 0:f.options):(g=v.preventOverflow)==null?void 0:g.options}),offset:{options:Object.assign({offset:o},(p=v.offset)==null?void 0:p.options)},arrow:Object.assign({},v.arrow,{enabled:!!a,options:Object.assign({},(m=v.arrow)==null?void 0:m.options,{element:a})}),flip:Object.assign({enabled:!!i},v.flip)}))})}const j31=["children","usePopper"];function P31(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}const I31=()=>{};function sI(t={}){const e=F.useContext(og),[n,i]=e21(),o=F.useRef(!1),{flip:u,offset:l,rootCloseEvent:a,fixed:s=!1,placement:c,popperConfig:f={},enableEventListeners:g=!0,usePopper:p=!!e}=t,m=e?.show==null?!!t.show:e.show;m&&!o.current&&(o.current=!0);const v=M=>{e?.toggle(!1,M)},{placement:b,setMenu:x,menuElement:w,toggleElement:S}=e||{},A=T31(S,w,L31({placement:c||b||"bottom-start",enabled:p,enableEvents:g??m,offset:l,flip:u,fixed:s,arrowElement:n,popperConfig:f})),C=Object.assign({ref:x||I31,"aria-labelledby":S?.id},A.attributes.popper,{style:A.styles.popper}),k={show:m,placement:b,hasShown:o.current,toggle:e?.toggle,popper:p?A:null,arrowProps:p?Object.assign({ref:i},A.attributes.arrow,{style:A.styles.arrow}):{}};return O31(w,v,{clickTrigger:a,disabled:!m}),[C,k]}function cI(t){let{children:e,usePopper:n=!0}=t,i=P31(t,j31);const[o,u]=sI(Object.assign({},i,{usePopper:n}));return $.jsx($.Fragment,{children:e(o,u)})}cI.displayName="DropdownMenu";const dI={prefix:String(Math.round(Math.random()*1e10)),current:0},fI=dn.createContext(dI),B31=dn.createContext(!1);let Wy=new WeakMap;function U31(t=!1){let e=F.useContext(fI),n=F.useRef(null);if(n.current===null&&!t){var i,o;let u=(o=dn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED)===null||o===void 0||(i=o.ReactCurrentOwner)===null||i===void 0?void 0:i.current;if(u){let l=Wy.get(u);l==null?Wy.set(u,{id:e.current,state:u.memoizedState}):u.memoizedState!==l.state&&(e.current=l.id,Wy.delete(u))}n.current=++e.current}return n.current}function q31(t){let e=F.useContext(fI),n=U31(!!t),i=`react-aria${e.prefix}`;return t||`${i}-${n}`}function H31(t){let e=dn.useId(),[n]=F.useState(X31()),i=n?"react-aria":`react-aria${dI.prefix}`;return t||`${i}-${e}`}const G31=typeof dn.useId=="function"?H31:q31;function W31(){return!1}function Y31(){return!0}function V31(t){return()=>{}}function X31(){return typeof dn.useSyncExternalStore=="function"?dn.useSyncExternalStore(V31,W31,Y31):F.useContext(B31)}const gI=t=>{var e;return((e=t.getAttribute("role"))==null?void 0:e.toLowerCase())==="menu"},gD=()=>{};function hI(){const t=G31(),{show:e=!1,toggle:n=gD,setToggle:i,menuElement:o}=F.useContext(og)||{},u=F.useCallback(a=>{n(!e,a)},[e,n]),l={id:t,ref:i||gD,onClick:u,"aria-expanded":!!e};return o&&gI(o)&&(l["aria-haspopup"]=!0),[l,{show:e,toggle:n}]}function pI({children:t}){const[e,n]=hI();return $.jsx($.Fragment,{children:t(e,n)})}pI.displayName="DropdownToggle";const q0=F.createContext(null),Hr=(t,e=null)=>t!=null?String(t):e||null,lg=F.createContext(null);lg.displayName="NavContext";const K31="data-rr-ui-",Q31="rrUi";function Vl(t){return`${K31}${t}`}function Z31(t){return`${Q31}${t}`}const J31=["eventKey","disabled","onClick","active","as"];function ti1(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}function mI({key:t,href:e,active:n,disabled:i,onClick:o}){const u=F.useContext(q0),l=F.useContext(lg),{activeKey:a}=l||{},s=Hr(t,e),c=n==null&&t!=null?Hr(a)===s:n;return[{onClick:sn(g=>{i||(o?.(g),u&&!g.isPropagationStopped()&&u(s,g))}),"aria-disabled":i||void 0,"aria-selected":c,[Vl("dropdown-item")]:""},{isActive:c}]}const yI=F.forwardRef((t,e)=>{let{eventKey:n,disabled:i,onClick:o,active:u,as:l=Iw}=t,a=ti1(t,J31);const[s]=mI({key:n,href:a.href,disabled:i,onClick:o,active:u});return $.jsx(l,Object.assign({},a,{ref:e},s))});yI.displayName="DropdownItem";const vI=F.createContext(eg?window:void 0);vI.Provider;function ag(){return F.useContext(vI)}function hD(){const t=JP(),e=F.useRef(null),n=F.useCallback(i=>{e.current=i,t()},[t]);return[e,n]}function N8({defaultShow:t,show:e,onSelect:n,onToggle:i,itemSelector:o=`* [${Vl("dropdown-item")}]`,focusFirstItemOnShow:u,placement:l="bottom-start",children:a}){const s=ag(),[c,f]=b21(e,t,i),[g,p]=hD(),m=g.current,[v,b]=hD(),x=v.current,w=BP(c),S=F.useRef(null),A=F.useRef(!1),C=F.useContext(q0),k=F.useCallback((B,V,W=V?.type)=>{f(B,{originalEvent:V,source:W})},[f]),M=sn((B,V)=>{n?.(B,V),k(!1,V,"select"),V.isPropagationStopped()||C?.(B,V)}),T=F.useMemo(()=>({toggle:k,placement:l,show:c,menuElement:m,toggleElement:x,setMenu:p,setToggle:b}),[k,l,c,m,x,p,b]);m&&w&&!c&&(A.current=m.contains(m.ownerDocument.activeElement));const D=sn(()=>{x&&x.focus&&x.focus()}),I=sn(()=>{const B=S.current;let V=u;if(V==null&&(V=g.current&&gI(g.current)?"keyboard":!1),V===!1||V==="keyboard"&&!/^key.+$/.test(B))return;const W=wo(g.current,o)[0];W&&W.focus&&W.focus()});F.useEffect(()=>{c?I():A.current&&(A.current=!1,D())},[c,A,D,I]),F.useEffect(()=>{S.current=null});const U=(B,V)=>{if(!g.current)return null;const W=wo(g.current,o);let O=W.indexOf(B)+V;return O=Math.max(0,Math.min(O,W.length)),W[O]};return i21(F.useCallback(()=>s.document,[s]),"keydown",B=>{var V,W;const{key:O}=B,j=B.target,R=(V=g.current)==null?void 0:V.contains(j),P=(W=v.current)==null?void 0:W.contains(j);if(/input|textarea/i.test(j.tagName)&&(O===" "||O!=="Escape"&&R||O==="Escape"&&j.type==="search")||!R&&!P||O==="Tab"&&(!g.current||!c))return;S.current=B.type;const Y={originalEvent:B,source:B.type};switch(O){case"ArrowUp":{const z=U(j,-1);z&&z.focus&&z.focus(),B.preventDefault();return}case"ArrowDown":if(B.preventDefault(),!c)f(!0,Y);else{const z=U(j,1);z&&z.focus&&z.focus()}return;case"Tab":LP(j.ownerDocument,"keyup",z=>{var G;(z.key==="Tab"&&!z.target||!((G=g.current)!=null&&G.contains(z.target)))&&f(!1,Y)},{once:!0});break;case"Escape":O==="Escape"&&(B.preventDefault(),B.stopPropagation()),f(!1,Y);break}}),$.jsx(q0.Provider,{value:M,children:$.jsx(og.Provider,{value:T,children:a})})}N8.displayName="Dropdown";N8.Menu=cI;N8.Toggle=pI;N8.Item=yI;const Zw=F.createContext({});Zw.displayName="DropdownContext";const bI=F.forwardRef(({className:t,bsPrefix:e,as:n="hr",role:i="separator",...o},u)=>(e=H1(e,"dropdown-divider"),$.jsx(n,{ref:u,className:R1(t,e),role:i,...o})));bI.displayName="DropdownDivider";const xI=F.forwardRef(({className:t,bsPrefix:e,as:n="div",role:i="heading",...o},u)=>(e=H1(e,"dropdown-header"),$.jsx(n,{ref:u,className:R1(t,e),role:i,...o})));xI.displayName="DropdownHeader";const _I=F.forwardRef(({bsPrefix:t,className:e,eventKey:n,disabled:i=!1,onClick:o,active:u,as:l=ig,...a},s)=>{const c=H1(t,"dropdown-item"),[f,g]=mI({key:n,href:a.href,disabled:i,onClick:o,active:u});return $.jsx(l,{...a,...f,ref:s,className:R1(e,c,g.isActive&&"active",i&&"disabled")})});_I.displayName="DropdownItem";const wI=F.forwardRef(({className:t,bsPrefix:e,as:n="span",...i},o)=>(e=H1(e,"dropdown-item-text"),$.jsx(n,{ref:o,className:R1(t,e),...i})));wI.displayName="DropdownItemText";const ei1=typeof global<"u"&&global.navigator&&global.navigator.product==="ReactNative",ni1=typeof document<"u",EI=ni1||ei1?F.useLayoutEffect:F.useEffect,Jw=F.createContext(null);Jw.displayName="InputGroupContext";const m6=F.createContext(null);m6.displayName="NavbarContext";function SI(t,e){return t}function AI(t,e,n){const i=n?"top-end":"top-start",o=n?"top-start":"top-end",u=n?"bottom-end":"bottom-start",l=n?"bottom-start":"bottom-end",a=n?"right-start":"left-start",s=n?"right-end":"left-end",c=n?"left-start":"right-start",f=n?"left-end":"right-end";let g=t?l:u;return e==="up"?g=t?o:i:e==="end"?g=t?f:c:e==="start"?g=t?s:a:e==="down-centered"?g="bottom":e==="up-centered"&&(g="top"),g}const CI=F.forwardRef(({bsPrefix:t,className:e,align:n,rootCloseEvent:i,flip:o=!0,show:u,renderOnMount:l,as:a="div",popperConfig:s,variant:c,...f},g)=>{let p=!1;const m=F.useContext(m6),v=H1(t,"dropdown-menu"),{align:b,drop:x,isRTL:w}=F.useContext(Zw);n=n||b;const S=F.useContext(Jw),A=[];if(n)if(typeof n=="object"){const B=Object.keys(n);if(B.length){const V=B[0],W=n[V];p=W==="start",A.push(`${v}-${V}-${W}`)}}else n==="end"&&(p=!0);const C=AI(p,x,w),[k,{hasShown:M,popper:T,show:D,toggle:I}]=sI({flip:o,rootCloseEvent:i,show:u,usePopper:!m&&A.length===0,offset:[0,2],popperConfig:s,placement:C});if(k.ref=Lw(SI(g),k.ref),EI(()=>{D&&T?.update()},[D]),!M&&!l&&!S)return null;typeof a!="string"&&(k.show=D,k.close=()=>I?.(!1),k.align=n);let U=f.style;return T!=null&&T.placement&&(U={...f.style,...k.style},f["x-placement"]=T.placement),$.jsx(a,{...f,...k,style:U,...(A.length||m)&&{"data-bs-popper":"static"},className:R1(e,v,D&&"show",p&&`${v}-end`,c&&`${v}-${c}`,...A)})});CI.displayName="DropdownMenu";const kI=F.forwardRef(({bsPrefix:t,split:e,className:n,childBsPrefix:i,as:o=Uw,...u},l)=>{const a=H1(t,"dropdown-toggle"),s=F.useContext(og);i!==void 0&&(u.bsPrefix=i);const[c]=hI();return c.ref=Lw(c.ref,SI(l)),$.jsx(o,{className:R1(n,a,e&&`${a}-split`,s?.show&&"show"),...c,...u})});kI.displayName="DropdownToggle";const TI=F.forwardRef((t,e)=>{const{bsPrefix:n,drop:i="down",show:o,className:u,align:l="start",onSelect:a,onToggle:s,focusFirstItemOnShow:c,as:f="div",navbar:g,autoClose:p=!0,...m}=Fw(t,{show:"onToggle"}),v=F.useContext(Jw),b=H1(n,"dropdown"),x=$n1(),w=T=>p===!1?T==="click":p==="inside"?T!=="rootClose":p==="outside"?T!=="select":!0,S=T8((T,D)=>{var I;!((I=D.originalEvent)==null||(I=I.target)==null)&&I.classList.contains("dropdown-toggle")&&D.source==="mousedown"||(D.originalEvent.currentTarget===document&&(D.source!=="keydown"||D.originalEvent.key==="Escape")&&(D.source="rootClose"),w(D.source)&&s?.(T,D))}),C=AI(l==="end",i,x),k=F.useMemo(()=>({align:l,drop:i,isRTL:x}),[l,i,x]),M={down:b,"down-centered":`${b}-center`,up:"dropup","up-centered":"dropup-center dropup",end:"dropend",start:"dropstart"};return $.jsx(Zw.Provider,{value:k,children:$.jsx(N8,{placement:C,show:o,onSelect:a,onToggle:S,focusFirstItemOnShow:c,itemSelector:`.${b}-item:not(.disabled):not(:disabled)`,children:v?m.children:$.jsx(f,{...m,ref:e,className:R1(u,o&&"show",M[i])})})})});TI.displayName="Dropdown";const k0=Object.assign(TI,{Toggle:kI,Menu:CI,Item:_I,ItemText:wI,Divider:bI,Header:xI}),ii1={type:Lo.string,tooltip:Lo.bool,as:Lo.elementType},rg=F.forwardRef(({as:t="div",className:e,type:n="valid",tooltip:i=!1,...o},u)=>$.jsx(t,{...o,ref:u,className:R1(e,`${n}-${i?"tooltip":"feedback"}`)}));rg.displayName="Feedback";rg.propTypes=ii1;const Xo=F.createContext({}),tE=F.forwardRef(({id:t,bsPrefix:e,className:n,type:i="checkbox",isValid:o=!1,isInvalid:u=!1,as:l="input",...a},s)=>{const{controlId:c}=F.useContext(Xo);return e=H1(e,"form-check-input"),$.jsx(l,{...a,ref:s,type:i,id:t||c,className:R1(n,e,o&&"is-valid",u&&"is-invalid")})});tE.displayName="FormCheckInput";const hd=F.forwardRef(({bsPrefix:t,className:e,htmlFor:n,...i},o)=>{const{controlId:u}=F.useContext(Xo);return t=H1(t,"form-check-label"),$.jsx("label",{...i,ref:o,htmlFor:n||u,className:R1(e,t)})});hd.displayName="FormCheckLabel";const $I=F.forwardRef(({id:t,bsPrefix:e,bsSwitchPrefix:n,inline:i=!1,reverse:o=!1,disabled:u=!1,isValid:l=!1,isInvalid:a=!1,feedbackTooltip:s=!1,feedback:c,feedbackType:f,className:g,style:p,title:m="",type:v="checkbox",label:b,children:x,as:w="input",...S},A)=>{e=H1(e,"form-check"),n=H1(n,"form-switch");const{controlId:C}=F.useContext(Xo),k=F.useMemo(()=>({controlId:t||C}),[C,t]),M=!x&&b!=null&&b!==!1||m21(x,hd),T=$.jsx(tE,{...S,type:v==="switch"?"checkbox":v,ref:A,isValid:l,isInvalid:a,disabled:u,as:w});return $.jsx(Xo.Provider,{value:k,children:$.jsx("div",{style:p,className:R1(g,M&&e,i&&`${e}-inline`,o&&`${e}-reverse`,v==="switch"&&n),children:x||$.jsxs($.Fragment,{children:[T,M&&$.jsx(hd,{title:m,children:b}),c&&$.jsx(rg,{type:f,tooltip:s,children:c})]})})})});$I.displayName="FormCheck";const pd=Object.assign($I,{Input:tE,Label:hd}),MI=F.forwardRef(({bsPrefix:t,type:e,size:n,htmlSize:i,id:o,className:u,isValid:l=!1,isInvalid:a=!1,plaintext:s,readOnly:c,as:f="input",...g},p)=>{const{controlId:m}=F.useContext(Xo);return t=H1(t,"form-control"),$.jsx(f,{...g,type:e,size:i,ref:p,readOnly:c,id:o||m,className:R1(u,s?`${t}-plaintext`:t,n&&`${t}-${n}`,e==="color"&&`${t}-color`,l&&"is-valid",a&&"is-invalid")})});MI.displayName="FormControl";const oi1=Object.assign(MI,{Feedback:rg}),NI=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"form-floating"),$.jsx(n,{ref:o,className:R1(t,e),...i})));NI.displayName="FormFloating";const eE=F.forwardRef(({controlId:t,as:e="div",...n},i)=>{const o=F.useMemo(()=>({controlId:t}),[t]);return $.jsx(Xo.Provider,{value:o,children:$.jsx(e,{...n,ref:i})})});eE.displayName="FormGroup";const RI=F.forwardRef(({as:t="label",bsPrefix:e,column:n=!1,visuallyHidden:i=!1,className:o,htmlFor:u,...l},a)=>{const{controlId:s}=F.useContext(Xo);e=H1(e,"form-label");let c="col-form-label";typeof n=="string"&&(c=`${c} ${c}-${n}`);const f=R1(o,e,i&&"visually-hidden",n&&c);return u=u||s,n?$.jsx(ue,{ref:a,as:"label",className:f,htmlFor:u,...l}):$.jsx(t,{ref:a,className:f,htmlFor:u,...l})});RI.displayName="FormLabel";const DI=F.forwardRef(({bsPrefix:t,className:e,id:n,...i},o)=>{const{controlId:u}=F.useContext(Xo);return t=H1(t,"form-range"),$.jsx("input",{...i,type:"range",ref:o,className:R1(e,t),id:n||u})});DI.displayName="FormRange";const OI=F.forwardRef(({bsPrefix:t,size:e,htmlSize:n,className:i,isValid:o=!1,isInvalid:u=!1,id:l,...a},s)=>{const{controlId:c}=F.useContext(Xo);return t=H1(t,"form-select"),$.jsx("select",{...a,size:n,ref:s,className:R1(i,t,e&&`${t}-${e}`,o&&"is-valid",u&&"is-invalid"),id:l||c})});OI.displayName="FormSelect";const FI=F.forwardRef(({bsPrefix:t,className:e,as:n="small",muted:i,...o},u)=>(t=H1(t,"form-text"),$.jsx(n,{...o,ref:u,className:R1(e,t,i&&"text-muted")})));FI.displayName="FormText";const zI=F.forwardRef((t,e)=>$.jsx(pd,{...t,ref:e,type:"switch"}));zI.displayName="Switch";const ui1=Object.assign(zI,{Input:pd.Input,Label:pd.Label}),LI=F.forwardRef(({bsPrefix:t,className:e,children:n,controlId:i,label:o,...u},l)=>(t=H1(t,"form-floating"),$.jsxs(eE,{ref:l,className:R1(e,t),controlId:i,...u,children:[n,$.jsx("label",{htmlFor:i,children:o})]})));LI.displayName="FloatingLabel";const li1={_ref:Lo.any,validated:Lo.bool,as:Lo.elementType},nE=F.forwardRef(({className:t,validated:e,as:n="form",...i},o)=>$.jsx(n,{...i,ref:o,className:R1(t,e&&"was-validated")}));nE.displayName="Form";nE.propTypes=li1;const B2=Object.assign(nE,{Group:eE,Control:oi1,Floating:NI,Check:pd,Switch:ui1,Label:RI,Text:FI,Range:DI,Select:OI,FloatingLabel:LI}),pD=t=>!t||typeof t=="function"?t:e=>{t.current=e};function ai1(t,e){const n=pD(t),i=pD(e);return o=>{n&&n(o),i&&i(o)}}function sg(t,e){return F.useMemo(()=>ai1(t,e),[t,e])}const jI=F.createContext(null),ri1=["as","active","eventKey"];function si1(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}function PI({key:t,onClick:e,active:n,id:i,role:o,disabled:u}){const l=F.useContext(q0),a=F.useContext(lg),s=F.useContext(jI);let c=n;const f={role:o};if(a){!o&&a.role==="tablist"&&(f.role="tab");const g=a.getControllerId(t??null),p=a.getControlledId(t??null);f[Vl("event-key")]=t,f.id=g||i,c=n==null&&t!=null?a.activeKey===t:n,(c||!(s!=null&&s.unmountOnExit)&&!(s!=null&&s.mountOnEnter))&&(f["aria-controls"]=p)}return f.role==="tab"&&(f["aria-selected"]=c,c||(f.tabIndex=-1),u&&(f.tabIndex=-1,f["aria-disabled"]=!0)),f.onClick=sn(g=>{u||(e?.(g),t!=null&&l&&!g.isPropagationStopped()&&l(t,g))}),[f,{isActive:c}]}const II=F.forwardRef((t,e)=>{let{as:n=Iw,active:i,eventKey:o}=t,u=si1(t,ri1);const[l,a]=PI(Object.assign({key:Hr(o,u.href),active:i},u));return l[Vl("active")]=a.isActive,$.jsx(n,Object.assign({},u,l,{ref:e}))});II.displayName="NavItem";const ci1=["as","onSelect","activeKey","role","onKeyDown"];function di1(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}const mD=()=>{},yD=Vl("event-key"),BI=F.forwardRef((t,e)=>{let{as:n="div",onSelect:i,activeKey:o,role:u,onKeyDown:l}=t,a=di1(t,ci1);const s=JP(),c=F.useRef(!1),f=F.useContext(q0),g=F.useContext(jI);let p,m;g&&(u=u||"tablist",o=g.activeKey,p=g.getControlledId,m=g.getControllerId);const v=F.useRef(null),b=A=>{const C=v.current;if(!C)return null;const k=wo(C,`[${yD}]:not([aria-disabled=true])`),M=C.querySelector("[aria-selected=true]");if(!M||M!==document.activeElement)return null;const T=k.indexOf(M);if(T===-1)return null;let D=T+A;return D>=k.length&&(D=0),D<0&&(D=k.length-1),k[D]},x=(A,C)=>{A!=null&&(i?.(A,C),f?.(A,C))},w=A=>{if(l?.(A),!g)return;let C;switch(A.key){case"ArrowLeft":case"ArrowUp":C=b(-1);break;case"ArrowRight":case"ArrowDown":C=b(1);break;default:return}C&&(A.preventDefault(),x(C.dataset[Z31("EventKey")]||null,A),c.current=!0,s())};F.useEffect(()=>{if(v.current&&c.current){const A=v.current.querySelector(`[${yD}][aria-selected=true]`);A?.focus()}c.current=!1});const S=sg(e,v);return $.jsx(q0.Provider,{value:x,children:$.jsx(lg.Provider,{value:{role:u,activeKey:Hr(o),getControlledId:p||mD,getControllerId:m||mD},children:$.jsx(n,Object.assign({},a,{onKeyDown:w,ref:S,role:u}))})})});BI.displayName="Nav";const fi1=Object.assign(BI,{Item:II});function Yy(t){t===void 0&&(t=tg());try{var e=t.activeElement;return!e||!e.nodeName?null:e}catch{return t.body}}function gi1(t){const e=F.useRef(t);return e.current=t,e}function hi1(t){const e=gi1(t);F.useEffect(()=>()=>e.current(),[])}function pi1(t=document){const e=t.defaultView;return Math.abs(e.innerWidth-t.documentElement.clientWidth)}const vD=Vl("modal-open");class iE{constructor({ownerDocument:e,handleContainerOverflow:n=!0,isRTL:i=!1}={}){this.handleContainerOverflow=n,this.isRTL=i,this.modals=[],this.ownerDocument=e}getScrollbarWidth(){return pi1(this.ownerDocument)}getElement(){return(this.ownerDocument||document).body}setModalAttributes(e){}removeModalAttributes(e){}setContainerStyle(e){const n={overflow:"hidden"},i=this.isRTL?"paddingLeft":"paddingRight",o=this.getElement();e.style={overflow:o.style.overflow,[i]:o.style[i]},e.scrollBarWidth&&(n[i]=`${parseInt(zo(o,i)||"0",10)+e.scrollBarWidth}px`),o.setAttribute(vD,""),zo(o,n)}reset(){[...this.modals].forEach(e=>this.remove(e))}removeContainerStyle(e){const n=this.getElement();n.removeAttribute(vD),Object.assign(n.style,e.style)}add(e){let n=this.modals.indexOf(e);return n!==-1||(n=this.modals.length,this.modals.push(e),this.setModalAttributes(e),n!==0)||(this.state={scrollBarWidth:this.getScrollbarWidth(),style:{}},this.handleContainerOverflow&&this.setContainerStyle(this.state)),n}remove(e){const n=this.modals.indexOf(e);n!==-1&&(this.modals.splice(n,1),!this.modals.length&&this.handleContainerOverflow&&this.removeContainerStyle(this.state),this.removeModalAttributes(e))}isTopModal(e){return!!this.modals.length&&this.modals[this.modals.length-1]===e}}const Vy=(t,e)=>eg?t==null?(e||tg()).body:(typeof t=="function"&&(t=t()),t&&"current"in t&&(t=t.current),t&&("nodeType"in t||t.getBoundingClientRect)?t:null):null;function mi1(t,e){const n=ag(),[i,o]=F.useState(()=>Vy(t,n?.document));if(!i){const u=Vy(t);u&&o(u)}return F.useEffect(()=>{},[e,i]),F.useEffect(()=>{const u=Vy(t);u!==i&&o(u)},[t,i]),i}function yi1({children:t,in:e,onExited:n,mountOnEnter:i,unmountOnExit:o}){const u=F.useRef(null),l=F.useRef(e),a=sn(n);F.useEffect(()=>{e?l.current=!0:a(u.current)},[e,a]);const s=sg(u,Yl(t)),c=F.cloneElement(t,{ref:s});return e?c:o||!l.current&&i?null:c}const vi1=["onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children"];function bi1(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}function xi1(t){let{onEnter:e,onEntering:n,onEntered:i,onExit:o,onExiting:u,onExited:l,addEndListener:a,children:s}=t,c=bi1(t,vi1);const f=F.useRef(null),g=sg(f,Yl(s)),p=C=>k=>{C&&f.current&&C(f.current,k)},m=F.useCallback(p(e),[e]),v=F.useCallback(p(n),[n]),b=F.useCallback(p(i),[i]),x=F.useCallback(p(o),[o]),w=F.useCallback(p(u),[u]),S=F.useCallback(p(l),[l]),A=F.useCallback(p(a),[a]);return Object.assign({},c,{nodeRef:f},e&&{onEnter:m},n&&{onEntering:v},i&&{onEntered:b},o&&{onExit:x},u&&{onExiting:w},l&&{onExited:S},a&&{addEndListener:A},{children:typeof s=="function"?(C,k)=>s(C,Object.assign({},k,{ref:g})):F.cloneElement(s,{ref:g})})}const _i1=["component"];function wi1(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}const Ei1=F.forwardRef((t,e)=>{let{component:n}=t,i=wi1(t,_i1);const o=xi1(i);return $.jsx(n,Object.assign({ref:e},o))});function Si1({in:t,onTransition:e}){const n=F.useRef(null),i=F.useRef(!0),o=sn(e);return ZR(()=>{if(!n.current)return;let u=!1;return o({in:t,element:n.current,initial:i.current,isStale:()=>u}),()=>{u=!0}},[t,o]),ZR(()=>(i.current=!1,()=>{i.current=!0}),[]),n}function Ai1({children:t,in:e,onExited:n,onEntered:i,transition:o}){const[u,l]=F.useState(!e);e&&u&&l(!1);const a=Si1({in:!!e,onTransition:c=>{const f=()=>{c.isStale()||(c.in?i?.(c.element,c.initial):(l(!0),n?.(c.element)))};Promise.resolve(o(c)).then(f,g=>{throw c.in||l(!0),g})}}),s=sg(a,Yl(t));return u&&!e?null:F.cloneElement(t,{ref:s})}function bD(t,e,n){return t?$.jsx(Ei1,Object.assign({},n,{component:t})):e?$.jsx(Ai1,Object.assign({},n,{transition:e})):$.jsx(yi1,Object.assign({},n))}const Ci1=["show","role","className","style","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","manager","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered"];function ki1(t,e){if(t==null)return{};var n={};for(var i in t)if({}.hasOwnProperty.call(t,i)){if(e.indexOf(i)>=0)continue;n[i]=t[i]}return n}let Xy;function Ti1(t){return Xy||(Xy=new iE({ownerDocument:t?.document})),Xy}function $i1(t){const e=ag(),n=t||Ti1(e),i=F.useRef({dialog:null,backdrop:null});return Object.assign(i.current,{add:()=>n.add(i.current),remove:()=>n.remove(i.current),isTopModal:()=>n.isTopModal(i.current),setDialogRef:F.useCallback(o=>{i.current.dialog=o},[]),setBackdropRef:F.useCallback(o=>{i.current.backdrop=o},[])})}const UI=F.forwardRef((t,e)=>{let{show:n=!1,role:i="dialog",className:o,style:u,children:l,backdrop:a=!0,keyboard:s=!0,onBackdropClick:c,onEscapeKeyDown:f,transition:g,runTransition:p,backdropTransition:m,runBackdropTransition:v,autoFocus:b=!0,enforceFocus:x=!0,restoreFocus:w=!0,restoreFocusOptions:S,renderDialog:A,renderBackdrop:C=Y1=>$.jsx("div",Object.assign({},Y1)),manager:k,container:M,onShow:T,onHide:D=()=>{},onExit:I,onExited:U,onExiting:B,onEnter:V,onEntering:W,onEntered:O}=t,j=ki1(t,Ci1);const R=ag(),P=mi1(M),q=$i1(k),Y=IP(),z=BP(n),[G,Q]=F.useState(!n),n1=F.useRef(null);F.useImperativeHandle(e,()=>q,[q]),eg&&!z&&n&&(n1.current=Yy(R?.document)),n&&G&&Q(!1);const l1=sn(()=>{if(q.add(),D1.current=Q4(document,"keydown",M1),v1.current=Q4(document,"focus",()=>setTimeout(x1),!0),T&&T(),b){var Y1,Ft;const C1=Yy((Y1=(Ft=q.dialog)==null?void 0:Ft.ownerDocument)!=null?Y1:R?.document);q.dialog&&C1&&!gd(q.dialog,C1)&&(n1.current=C1,q.dialog.focus())}}),d1=sn(()=>{if(q.remove(),D1.current==null||D1.current(),v1.current==null||v1.current(),w){var Y1;(Y1=n1.current)==null||Y1.focus==null||Y1.focus(S),n1.current=null}});F.useEffect(()=>{!n||!P||l1()},[n,P,l1]),F.useEffect(()=>{G&&d1()},[G,d1]),hi1(()=>{d1()});const x1=sn(()=>{if(!x||!Y()||!q.isTopModal())return;const Y1=Yy(R?.document);q.dialog&&Y1&&!gd(q.dialog,Y1)&&q.dialog.focus()}),j1=sn(Y1=>{Y1.target===Y1.currentTarget&&(c?.(Y1),a===!0&&D())}),M1=sn(Y1=>{s&&Un1(Y1)&&q.isTopModal()&&(f?.(Y1),Y1.defaultPrevented||D())}),v1=F.useRef(),D1=F.useRef(),B1=(...Y1)=>{Q(!0),U?.(...Y1)};if(!P)return null;const f1=Object.assign({role:i,ref:q.setDialogRef,"aria-modal":i==="dialog"?!0:void 0},j,{style:u,className:o,tabIndex:-1});let lt=A?A(f1):$.jsx("div",Object.assign({},f1,{children:F.cloneElement(l,{role:"document"})}));lt=bD(g,p,{unmountOnExit:!0,mountOnEnter:!0,appear:!0,in:!!n,onExit:I,onExiting:B,onExited:B1,onEnter:V,onEntering:W,onEntered:O,children:lt});let X1=null;return a&&(X1=C({ref:q.setBackdropRef,onClick:j1}),X1=bD(m,v,{in:!!n,appear:!0,mountOnEnter:!0,unmountOnExit:!0,children:X1})),$.jsx($.Fragment,{children:B5.createPortal($.jsxs($.Fragment,{children:[X1,lt]}),P)})});UI.displayName="Modal";const Mi1=Object.assign(UI,{Manager:iE});function Ni1(t,e){return t.classList?t.classList.contains(e):(" "+(t.className.baseVal||t.className)+" ").indexOf(" "+e+" ")!==-1}function Ri1(t,e){t.classList?t.classList.add(e):Ni1(t,e)||(typeof t.className=="string"?t.className=t.className+" "+e:t.setAttribute("class",(t.className&&t.className.baseVal||"")+" "+e))}function xD(t,e){return t.replace(new RegExp("(^|\\s)"+e+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}function Di1(t,e){t.classList?t.classList.remove(e):typeof t.className=="string"?t.className=xD(t.className,e):t.setAttribute("class",xD(t.className&&t.className.baseVal||"",e))}const _5={FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",STICKY_CONTENT:".sticky-top",NAVBAR_TOGGLER:".navbar-toggler"};class qI extends iE{adjustAndStore(e,n,i){const o=n.style[e];n.dataset[e]=o,zo(n,{[e]:`${parseFloat(zo(n,e))+i}px`})}restore(e,n){const i=n.dataset[e];i!==void 0&&(delete n.dataset[e],zo(n,{[e]:i}))}setContainerStyle(e){super.setContainerStyle(e);const n=this.getElement();if(Ri1(n,"modal-open"),!e.scrollBarWidth)return;const i=this.isRTL?"paddingLeft":"paddingRight",o=this.isRTL?"marginLeft":"marginRight";wo(n,_5.FIXED_CONTENT).forEach(u=>this.adjustAndStore(i,u,e.scrollBarWidth)),wo(n,_5.STICKY_CONTENT).forEach(u=>this.adjustAndStore(o,u,-e.scrollBarWidth)),wo(n,_5.NAVBAR_TOGGLER).forEach(u=>this.adjustAndStore(o,u,e.scrollBarWidth))}removeContainerStyle(e){super.removeContainerStyle(e);const n=this.getElement();Di1(n,"modal-open");const i=this.isRTL?"paddingLeft":"paddingRight",o=this.isRTL?"marginLeft":"marginRight";wo(n,_5.FIXED_CONTENT).forEach(u=>this.restore(i,u)),wo(n,_5.STICKY_CONTENT).forEach(u=>this.restore(o,u)),wo(n,_5.NAVBAR_TOGGLER).forEach(u=>this.restore(o,u))}}let Ky;function Oi1(t){return Ky||(Ky=new qI(t)),Ky}const HI=F.createContext({onHide(){}}),GI=F.forwardRef(({closeLabel:t="Close",closeVariant:e,closeButton:n=!1,onHide:i,children:o,...u},l)=>{const a=F.useContext(HI),s=T8(()=>{a?.onHide(),i?.()});return $.jsxs("div",{ref:l,...u,children:[o,n&&$.jsx(Bw,{"aria-label":t,variant:e,onClick:s})]})});GI.displayName="AbstractModalHeader";const WI=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"nav-item"),$.jsx(n,{ref:o,className:R1(t,e),...i})));WI.displayName="NavItem";const oE=F.forwardRef(({bsPrefix:t,className:e,as:n=ig,active:i,eventKey:o,disabled:u=!1,...l},a)=>{t=H1(t,"nav-link");const[s,c]=PI({key:Hr(o,l.href),active:i,disabled:u,...l});return $.jsx(n,{...l,...s,ref:a,disabled:u,className:R1(e,t,u&&"disabled",c.isActive&&"active")})});oE.displayName="NavLink";const YI=F.forwardRef((t,e)=>{const{as:n="div",bsPrefix:i,variant:o,fill:u=!1,justify:l=!1,navbar:a,navbarScroll:s,className:c,activeKey:f,...g}=Fw(t,{activeKey:"onSelect"}),p=H1(i,"nav");let m,v,b=!1;const x=F.useContext(m6),w=F.useContext(Hw);return x?(m=x.bsPrefix,b=a??!0):w&&({cardHeaderBsPrefix:v}=w),$.jsx(fi1,{as:n,ref:e,activeKey:f,className:R1(c,{[p]:!b,[`${m}-nav`]:b,[`${m}-nav-scroll`]:b&&s,[`${v}-${o}`]:!!v,[`${p}-${o}`]:!!o,[`${p}-fill`]:u,[`${p}-justified`]:l}),...g})});YI.displayName="Nav";const A9=Object.assign(YI,{Item:WI,Link:oE}),VI=F.forwardRef(({bsPrefix:t,className:e,as:n,...i},o)=>{t=H1(t,"navbar-brand");const u=n||(i.href?"a":"span");return $.jsx(u,{...i,ref:o,className:R1(e,t)})});VI.displayName="NavbarBrand";const XI=F.forwardRef(({children:t,bsPrefix:e,...n},i)=>{e=H1(e,"navbar-collapse");const o=F.useContext(m6);return $.jsx(PP,{in:!!(o&&o.expanded),...n,children:$.jsx("div",{ref:i,className:e,children:t})})});XI.displayName="NavbarCollapse";const KI=F.forwardRef(({bsPrefix:t,className:e,children:n,label:i="Toggle navigation",as:o="button",onClick:u,...l},a)=>{t=H1(t,"navbar-toggler");const{onToggle:s,expanded:c}=F.useContext(m6)||{},f=T8(g=>{u&&u(g),s&&s()});return o==="button"&&(l.type="button"),$.jsx(o,{...l,ref:a,onClick:f,"aria-label":i,className:R1(e,t,!c&&"collapsed"),children:n||$.jsx("span",{className:`${t}-icon`})})});KI.displayName="NavbarToggle";const rx=new WeakMap,_D=(t,e)=>{if(!t||!e)return;const n=rx.get(e)||new Map;rx.set(e,n);let i=n.get(t);return i||(i=e.matchMedia(t),i.refCount=0,n.set(i.media,i)),i};function Fi1(t,e=typeof window>"u"?void 0:window){const n=_D(t,e),[i,o]=F.useState(()=>n?n.matches:!1);return EI(()=>{let u=_D(t,e);if(!u)return o(!1);let l=rx.get(e);const a=()=>{o(u.matches)};return u.refCount++,u.addListener(a),a(),()=>{u.removeListener(a),u.refCount--,u.refCount<=0&&l?.delete(u.media),u=void 0}},[t]),i}function zi1(t){const e=Object.keys(t);function n(a,s){return a===s?s:a?`${a} and ${s}`:s}function i(a){return e[Math.min(e.indexOf(a)+1,e.length-1)]}function o(a){const s=i(a);let c=t[s];return typeof c=="number"?c=`${c-.2}px`:c=`calc(${c} - 0.2px)`,`(max-width: ${c})`}function u(a){let s=t[a];return typeof s=="number"&&(s=`${s}px`),`(min-width: ${s})`}function l(a,s,c){let f;typeof a=="object"?(f=a,c=s,s=!0):(s=s||!0,f={[a]:s});let g=F.useMemo(()=>Object.entries(f).reduce((p,[m,v])=>((v==="up"||v===!0)&&(p=n(p,u(m))),(v==="down"||v===!0)&&(p=n(p,o(m))),p),""),[JSON.stringify(f)]);return Fi1(g,c)}return l}const Li1=zi1({xs:0,sm:576,md:768,lg:992,xl:1200,xxl:1400}),QI=F.forwardRef(({className:t,bsPrefix:e,as:n="div",...i},o)=>(e=H1(e,"offcanvas-body"),$.jsx(n,{ref:o,className:R1(t,e),...i})));QI.displayName="OffcanvasBody";const ji1={[w3]:"show",[Ao]:"show"},ZI=F.forwardRef(({bsPrefix:t,className:e,children:n,in:i=!1,mountOnEnter:o=!1,unmountOnExit:u=!1,appear:l=!1,...a},s)=>(t=H1(t,"offcanvas"),$.jsx(ng,{ref:s,addEndListener:zw,in:i,mountOnEnter:o,unmountOnExit:u,appear:l,...a,childRef:Yl(n),children:(c,f)=>F.cloneElement(n,{...f,className:R1(e,n.props.className,(c===w3||c===Br)&&`${t}-toggling`,ji1[c])})})));ZI.displayName="OffcanvasToggling";const JI=F.forwardRef(({bsPrefix:t,className:e,closeLabel:n="Close",closeButton:i=!1,...o},u)=>(t=H1(t,"offcanvas-header"),$.jsx(GI,{ref:u,...o,className:R1(e,t),closeLabel:n,closeButton:i})));JI.displayName="OffcanvasHeader";const Pi1=jw("h5"),tB=F.forwardRef(({className:t,bsPrefix:e,as:n=Pi1,...i},o)=>(e=H1(e,"offcanvas-title"),$.jsx(n,{ref:o,className:R1(t,e),...i})));tB.displayName="OffcanvasTitle";function Ii1(t){return $.jsx(ZI,{...t})}function Bi1(t){return $.jsx(UP,{...t})}const eB=F.forwardRef(({bsPrefix:t,className:e,children:n,"aria-labelledby":i,placement:o="start",responsive:u,show:l=!1,backdrop:a=!0,keyboard:s=!0,scroll:c=!1,onEscapeKeyDown:f,onShow:g,onHide:p,container:m,autoFocus:v=!0,enforceFocus:b=!0,restoreFocus:x=!0,restoreFocusOptions:w,onEntered:S,onExit:A,onExiting:C,onEnter:k,onEntering:M,onExited:T,backdropClassName:D,manager:I,renderStaticNode:U=!1,...B},V)=>{const W=F.useRef();t=H1(t,"offcanvas");const[O,j]=F.useState(!1),R=T8(p),P=Li1(u||"xs","up");F.useEffect(()=>{j(u?l&&!P:l)},[l,u,P]);const q=F.useMemo(()=>({onHide:R}),[R]);function Y(){return I||(c?(W.current||(W.current=new qI({handleContainerOverflow:!1})),W.current):Oi1())}const z=(l1,...d1)=>{l1&&(l1.style.visibility="visible"),k?.(l1,...d1)},G=(l1,...d1)=>{l1&&(l1.style.visibility=""),T?.(...d1)},Q=F.useCallback(l1=>$.jsx("div",{...l1,className:R1(`${t}-backdrop`,D)}),[D,t]),n1=l1=>$.jsx("div",{...l1,...B,className:R1(e,u?`${t}-${u}`:t,`${t}-${o}`),"aria-labelledby":i,children:n});return $.jsxs($.Fragment,{children:[!O&&(u||U)&&n1({}),$.jsx(HI.Provider,{value:q,children:$.jsx(Mi1,{show:O,ref:V,backdrop:a,container:m,keyboard:s,autoFocus:v,enforceFocus:b&&!c,restoreFocus:x,restoreFocusOptions:w,onEscapeKeyDown:f,onShow:g,onHide:R,onEnter:z,onEntering:M,onEntered:S,onExit:A,onExiting:C,onExited:G,manager:Y(),transition:Ii1,backdropTransition:Bi1,renderBackdrop:Q,renderDialog:n1})})]})});eB.displayName="Offcanvas";const Ui1=Object.assign(eB,{Body:QI,Header:JI,Title:tB}),nB=F.forwardRef(({onHide:t,...e},n)=>{const i=F.useContext(m6),o=T8(()=>{i==null||i.onToggle==null||i.onToggle(),t?.()});return $.jsx(Ui1,{ref:n,show:!!(i!=null&&i.expanded),...e,renderStaticNode:!0,onHide:o})});nB.displayName="NavbarOffcanvas";const iB=F.forwardRef(({className:t,bsPrefix:e,as:n="span",...i},o)=>(e=H1(e,"navbar-text"),$.jsx(n,{ref:o,className:R1(t,e),...i})));iB.displayName="NavbarText";const oB=F.forwardRef((t,e)=>{const{bsPrefix:n,expand:i=!0,variant:o="light",bg:u,fixed:l,sticky:a,className:s,as:c="nav",expanded:f,onToggle:g,onSelect:p,collapseOnSelect:m=!1,...v}=Fw(t,{expanded:"onToggle"}),b=H1(n,"navbar"),x=F.useCallback((...A)=>{p?.(...A),m&&f&&g?.(!1)},[p,m,f,g]);v.role===void 0&&c!=="nav"&&(v.role="navigation");let w=`${b}-expand`;typeof i=="string"&&(w=`${w}-${i}`);const S=F.useMemo(()=>({onToggle:()=>g?.(!f),bsPrefix:b,expanded:!!f,expand:i}),[b,f,i,g]);return $.jsx(m6.Provider,{value:S,children:$.jsx(q0.Provider,{value:x,children:$.jsx(c,{ref:e,...v,className:R1(s,b,i&&w,o&&`${b}-${o}`,u&&`bg-${u}`,a&&`sticky-${a}`,l&&`fixed-${l}`)})})})});oB.displayName="Navbar";const Qy=Object.assign(oB,{Brand:VI,Collapse:XI,Offcanvas:nB,Text:iB,Toggle:KI}),uB=F.forwardRef(({id:t,title:e,children:n,bsPrefix:i,className:o,rootCloseEvent:u,menuRole:l,disabled:a,active:s,renderMenuOnMount:c,menuVariant:f,...g},p)=>{const m=H1(void 0,"nav-item");return $.jsxs(k0,{ref:p,...g,className:R1(o,m),children:[$.jsx(k0.Toggle,{id:t,eventKey:null,active:s,disabled:a,childBsPrefix:i,as:oE,children:e}),$.jsx(k0.Menu,{role:l,renderOnMount:c,rootCloseEvent:u,variant:f,children:n})]})});uB.displayName="NavDropdown";const ao=Object.assign(uB,{Item:k0.Item,ItemText:k0.ItemText,Divider:k0.Divider,Header:k0.Header}),uE=F.forwardRef(({active:t=!1,disabled:e=!1,className:n,style:i,activeLabel:o="(current)",children:u,linkStyle:l,linkClassName:a,as:s=ig,...c},f)=>{const g=t||e?"span":s;return $.jsx("li",{ref:f,style:i,className:R1(n,"page-item",{active:t,disabled:e}),children:$.jsxs(g,{className:R1("page-link",a),style:l,...c,children:[u,t&&o&&$.jsx("span",{className:"visually-hidden",children:o})]})})});uE.displayName="PageItem";function R8(t,e,n=t){const i=F.forwardRef(({children:o,...u},l)=>$.jsxs(uE,{...u,ref:l,children:[$.jsx("span",{"aria-hidden":"true",children:o||e}),$.jsx("span",{className:"visually-hidden",children:n})]}));return i.displayName=t,i}const qi1=R8("First","«"),Hi1=R8("Prev","‹","Previous"),Gi1=R8("Ellipsis","…","More"),Wi1=R8("Next","›"),Yi1=R8("Last","»"),lB=F.forwardRef(({bsPrefix:t,className:e,size:n,...i},o)=>{const u=H1(t,"pagination");return $.jsx("ul",{ref:o,...i,className:R1(e,u,n&&`${u}-${n}`)})});lB.displayName="Pagination";const ro=Object.assign(lB,{First:qi1,Prev:Hi1,Ellipsis:Gi1,Item:uE,Next:Wi1,Last:Yi1}),Z2=F.forwardRef(({bsPrefix:t,className:e,as:n="div",...i},o)=>{const u=H1(t,"row"),l=OP(),a=FP(),s=`${u}-cols`,c=[];return l.forEach(f=>{const g=i[f];delete i[f];let p;g!=null&&typeof g=="object"?{cols:p}=g:p=g;const m=f!==a?`-${f}`:"";p!=null&&c.push(`${s}${m}-${p}`)}),$.jsx(n,{ref:o,...i,className:R1(e,u,...c)})});Z2.displayName="Row";const aB=F.forwardRef(({bsPrefix:t,variant:e,animation:n="border",size:i,as:o="div",className:u,...l},a)=>{t=H1(t,"spinner");const s=`${t}-${n}`;return $.jsx(o,{ref:a,...l,className:R1(u,s,i&&`${s}-${i}`,e&&`text-${e}`)})});aB.displayName="Spinner";const lE=F.forwardRef(({bsPrefix:t,className:e,striped:n,bordered:i,borderless:o,hover:u,size:l,variant:a,responsive:s,...c},f)=>{const g=H1(t,"table"),p=R1(e,g,a&&`${g}-${a}`,l&&`${g}-${l}`,n&&`${g}-${typeof n=="string"?`striped-${n}`:"striped"}`,i&&`${g}-bordered`,o&&`${g}-borderless`,u&&`${g}-hover`),m=$.jsx("table",{...c,className:p,ref:f});if(s){let v=`${g}-responsive`;return typeof s=="string"&&(v=`${v}-${s}`),$.jsx("div",{className:v,children:m})}return m});lE.displayName="Table";const Vi1="/personal-website/assets/github-3a2y1fjz.png",Xi1="/personal-website/assets/linkedin-BIohDQC_.png";function Ki1(){let t=14;return $.jsxs(Qy,{bg:"light",expand:"md",children:[$.jsx(Qy.Toggle,{"aria-controls":"basic-navbar-nav"}),$.jsx(Qy.Collapse,{id:"basic-navbar-nav",children:$.jsxs(A9,{className:"mr-auto",children:[$.jsx(A9.Link,{href:"https://github.com/Codax2000",target:"_blank",children:$.jsx("img",{src:Vi1,height:t,alt:"My GitHub Page"})}),$.jsx(A9.Link,{href:"https://www.linkedin.com/in/alexander-knowlton/",target:"_blank",children:$.jsx("img",{src:Xi1,height:t,alt:"My LinkedIn Profile"})}),$.jsx(A9.Link,{href:"/personal-website",children:"Home"}),$.jsx(A9.Link,{href:"mailto:aknowlt@umich.edu",children:"Contact Me"}),$.jsxs(ao,{title:"Featured Projects",id:"basic-nav-dropdown",children:[$.jsx(ao.Item,{href:"#/adc_sims",children:"Matlab ADCs"}),$.jsx(ao.Item,{href:"#/sc_amp",children:"Switch-Cap Amplifier"}),$.jsx(ao.Item,{href:"#/processor",children:"RISC Microprocessor"}),$.jsx(ao.Item,{href:"#/cnn",children:"VLSI Capstone"}),$.jsx(ao.Item,{href:"#/transceiver",children:"Wireline Transceiver"}),$.jsx(ao.Item,{href:"#/bandgap",children:"Bandgap Reference"}),$.jsx(ao.Item,{href:"#/earthquakewatch",children:"EarthquakeWatch"}),$.jsx(ao.Item,{href:"#/cannon",children:"Rubber Band Cannon"})]})]})})]})}function Qi1(){return $.jsx("footer",{className:"footer text-left text-muted bg-light p-2",children:$.jsx("p",{className:"clear-spacing",children:"Site created with React, React-Bootstrap, and D3.js."})})}function Zi1(){return $.jsx("div",{fluid:!0,className:"d-flex align-items-center mb-0",id:"home",children:$.jsxs(N1,{className:"text-white text-left",children:[$.jsx("h2",{className:"display-4",children:"Hi, I'm Alex"}),$.jsx("p",{children:"I'm an Electrical Engineer doing IC Design and Verification."})]})})}const Ji1=["I am an electical engineer and amateur software developer based in Seattle, WA, currently working at Texas Instruments in Federal Way. I appreciate clean, efficient design and have worked on multiple projects in several areas, including integrated circuit research, aircraft controls, and full stack web development.","I specialize in analog and mixed-signal IC design with an additional background in Digital VLSI, software, and embedded systems. I am equally experienced with Python and with Matlab, and I am also familiar with web development and data science.","In my spare time, I enjoy classic literature, hiking, fishing, and chess."],to1=[{main:"University of Michigan",details:"M.S. in Electrical Engineering",date:"August 2023 - December 2024"},{main:"University of Washington",details:"B.S. in Electrical Engineering, Magna Cum Laude, Dean's List",date:"September 2019 - June 2023"},{main:"Glacier Peak High School",details:"High School Degree, Valedictorian, National Merit Letter of Recommendation",date:"September 2015 - June 2019"}],eo1=[{main:"Texas Instruments",details:"Digital IC Design Engineer",date:"March 2025 - Current"},{main:"University of Michigan",details:"Digital VLSI Teaching Assistant",date:"August 2024 - December 2024"},{main:"Texas Instruments",details:"Analog IC Design Intern",date:"May 2024 - August 2024"},{main:"MICL at University of Michigan",details:"Graduate Student Research Assistant",date:"October 2023 - Present"},{main:"FAST Lab at the University of Washington",details:"Undergraduate Researcher",date:"October 2022 - June 2023"},{main:"Volunteer for UW College of Engineering",details:"Engineering Peer Educator",date:"October 2022 - December 2022"},{main:"Sierra Nevada Corporation",details:"Electrical Engineering Intern",date:"June 2022 - September 2022"},{main:"University of Washington Allen School",details:"Computer Science TA",date:"March 2020 - March 2022"},{main:"Design, Build, Fly at University of Washington",details:"Avionics Engineer",date:"October 2019 - March 2020"},{main:"Varsity Tutors",details:"Mathematics Tutor",date:"June 2019 - January 2020"}],no1=[{name:"Controls",url:"./controls",short:"Aircraft controls for competition RC aircraft using Arduino"},{name:"EarthquakeWatch",url:"./earthquakewatch",short:"Earthquake monitor with RSS feed and interactive chart"},{name:"CADathon",url:"./cadd",short:"Winning entry for 3D design competition with SolidWorks"},{name:"Bandgap Reference",url:"./bandgap",short:"Designed a low-voltage bandgap voltage reference in 130nm CMOS"},{name:"Embedded Cannon",url:"./cannon",short:"Embedded programming meets 3D printing for some Arduino fun"},{name:"Wireline Transceiver",url:"./transceiver",short:"12.5 Gbps wireline transceiver in FreePDK 45nm"},{name:"FAST Neural Net",url:"./cnn",short:"A neural network for full-duplex SI cancellation on a Xilinx RFSoC"},{name:"CADathon Reloaded",url:"./bed",short:"3rd place 3D modeling entry using SolidWorks, now with animation"},{name:"CNC Chess Set",url:"./chess",short:"Cutting an aluminum chess set using a CNC lathe and 5-axis mill"},{name:"SC Amplifier",url:"./sc_amp",short:"A 10 MHz switch-capacitor sample-and-hold circuit in 130nm"},{name:"RISC-II",url:"./processor",short:"A 200 MHz, 2-stage, tapeout-ready microprocessor"},{name:"ADCs in Matlab",url:"./adc_sims",short:"Matlab simulations of modern ADCs"}],io1=[{title:"Languages",skills:["SystemVerilog","Python","Matlab","HTML & CSS","JavaScript","Java"]},{title:"Libraries",skills:["UVM","PyTorch","Matplotlib","Numpy","Pandas","React.js"]},{title:"Tools",skills:["Cadence Virtuoso","Cadence Innovus","Synopsis Design Compiler","Cadence Xcelium","Autodesk Fusion 360","SolidWorks"]},{title:"Engineering",skills:["Problem Decomposition","Technical Writing","Data Visualization","Iterative Design","Data Analysis","Rapid Prototyping"]}],oo1={citations:[{creator:"Sarmu",name:"Seattle from Kerry Park",link:"https://search.creativecommons.org/photos/994599f0-65c3-43cf-ab6c-81133a17e94d"},{creator:"gabriella_levine",name:"arduino",link:"https://search.creativecommons.org/photos/343a650e-f10b-49bd-9ff9-b4d9cfad642e"},{creator:"Dave Schumaker",name:"Earthquake Seismogram",link:"https://search.creativecommons.org/photos/6b5d4ad0-2b1a-441f-9554-d4621108cda7"},{creator:"logomakr.com",name:"Page Icon",link:"https://my.logomakr.com/"},{creator:"wbaiv",name:"Boeing 737 Plan and Exterior Lights",link:"https://openverse.org/image/a8e1774a-5893-4c3f-bc86-0f151820746d?q=737"}],statement:"There are several images and a logo on this site that I have used for backgrounds the page icon. All photos were either used from Creative Commons at time of citation or from a website with the required credit. Here is credit to the creators and links to where I found them. The SolidWorks drawings were mine and my partner's, whose LinkedIn is present, and I can't find my partner for the gun violence research. All other pictures were taken either by me or by other members of teams I was working with at the time."},H0={statement:Ji1,schools:to1,jobs:eo1,projects:no1,skills:io1,sources:oo1};function uo1(){return $.jsx(N1,{fluid:!0,id:"about",className:"front-article",children:$.jsx(N1,{className:"text-left",children:$.jsxs(Z2,{children:[$.jsx(ue,{xs:3,children:$.jsx("h2",{children:"About Me"})}),$.jsx(ue,{children:H0.statement.map((t,e)=>$.jsx("p",{children:t},1))})]})})})}function lo1(t){return $.jsx(X4,{className:"border-0",children:$.jsxs(X4.Body,{className:"pt-0 px-0",children:[$.jsx(X4.Title,{children:t.state.title}),$.jsx("ul",{className:"list-unstyled",children:t.state.skills.map((e,n)=>$.jsx("li",{children:e},n))})]})})}function ao1(){return $.jsx(N1,{fluid:!0,id:"skills",className:"front-article",children:$.jsx(N1,{className:"text-left",children:$.jsxs(Z2,{children:[$.jsx(ue,{xs:3,children:$.jsx("h2",{children:"My Skills"})}),$.jsx(ue,{children:$.jsx(ZP,{className:"d-flex justify-content-center",children:H0.skills.map((t,e)=>$.jsx(lo1,{state:t},e))})})]})})})}function rB(t){return $.jsxs("li",{children:[$.jsxs("div",{className:"d-flex justify-content-between",children:[$.jsx("p",{className:"clear-spacing lead",children:t.details.main}),$.jsx("p",{className:"clear-spacing",children:t.details.date})]}),$.jsx("p",{className:"text-left",children:t.details.details})]})}function ro1(){return $.jsx(N1,{fluid:!0,id:"education",className:"front-article",children:$.jsx(N1,{className:"text-left",children:$.jsxs(Z2,{children:[$.jsx(ue,{xs:3,children:$.jsx("h2",{children:"Education"})}),$.jsx(ue,{children:$.jsx("ul",{className:"list-unstyled",children:H0.schools.map((t,e)=>$.jsx(rB,{details:t},e))})})]})})})}function so1(){return $.jsx(N1,{fluid:!0,id:"experience",className:"front-article",children:$.jsx(N1,{className:"text-left",children:$.jsxs(Z2,{children:[$.jsx(ue,{xs:3,children:$.jsx("h2",{children:"Experience"})}),$.jsx(ue,{children:$.jsx("ul",{className:"list-unstyled",children:H0.jobs.map((t,e)=>$.jsx(rB,{details:t},e))})})]})})})}function co1(t){const{short:e,name:n,url:i,image:o}=t,[u,l]=F.useState("text-white text-center hidden");function a(){l("text-white text-center")}function s(){l("text-white text-center hidden")}return $.jsx(Ow,{to:i,children:$.jsxs(X4,{children:[$.jsx(X4.Img,{src:o,alt:"Card image",className:"project-card"}),$.jsxs(X4.ImgOverlay,{className:"d-flex flex-column justify-content-center",onMouseEnter:a,onMouseLeave:s,children:[$.jsx(X4.Title,{className:"text-white text-center",children:n}),$.jsx(X4.Text,{className:u,children:e})]})]})})}const do1="/personal-website/assets/arduino-BsfBBKxb.jpg",fo1="/personal-website/assets/cadd-Buxpz_F2.jpg",go1="/personal-website/assets/seismograph-BsoNEAMy.jpg",ho1="/personal-website/assets/bandgap-KTY7qUf5.jpg",po1="/personal-website/assets/cannon-B6OJbee1.jpg",mo1="/personal-website/assets/transceiver-DsN2cfsQ.jpg",yo1="/personal-website/assets/cnn-Br7G9fPR.jpg",vo1="/personal-website/assets/bed-BEkUtjAC.jpg",bo1="/personal-website/assets/chess-BwehC6WS.jpg",xo1="/personal-website/assets/amplifier-DNa2gp_f.jpg",_o1="/personal-website/assets/processor-BPOzDhwV.jpg",wo1="/personal-website/assets/noise_shaping-Dg-UyEV5.jpg",wD=3,Zy=4;function Eo1(){let t=[do1,go1,fo1,ho1,po1,mo1,yo1,vo1,bo1,xo1,_o1,wo1];return $.jsx(N1,{fluid:!0,id:"projects",className:"front-article",children:$.jsxs(N1,{children:[$.jsx("h2",{className:"text-center mb-4",children:"Some Things I've Worked On"}),Array.from(Array(wD).keys()).map((e,n)=>$.jsx(Z2,{children:$.jsx(ue,{className:"d-flex justify-content-around mb-5",children:H0.projects.slice(Zy*n,Zy*(n+1)).map((i,o)=>$.jsx(co1,{image:t[n*Zy+o],name:i.name,url:i.url,short:i.short},n*wD+o))})}))]})})}function So1(){return $.jsx(N1,{fluid:!0,id:"projects",className:"front-article",children:$.jsx(N1,{children:$.jsxs(Z2,{children:[$.jsx(ue,{xs:3,children:$.jsx("h2",{children:"Materials Used"})}),$.jsxs(ue,{children:[$.jsx("p",{className:"mb-1",children:H0.sources.statement}),H0.sources.citations.map((t,e)=>$.jsxs("p",{className:"mb-0 px-3",children:[t.creator," - ",$.jsx("a",{href:t.link,children:t.name})]}))]})]})})})}function Ao1(){return $.jsxs("div",{children:[$.jsx(Zi1,{}),$.jsx(uo1,{}),$.jsx(so1,{}),$.jsx(ro1,{}),$.jsx(ao1,{}),$.jsx(Eo1,{}),$.jsx(So1,{})]})}function md(t){let{title:e,content:n}=t;return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{children:[$.jsx("h2",{children:e}),n.map((i,o)=>$.jsx("p",{className:"text-left",children:i},o))]})})}const Co1="/personal-website/assets/avionics-CiUAbkzQ.png",ko1="/personal-website/assets/wiring-DErkL7fu.jpg";function Mt(t){let{title:e,content:n,graph:i,caption:o}=t;return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{children:[$.jsx("h2",{children:e}),$.jsxs("div",{className:"d-flex mt-4",children:[$.jsx("div",{children:n.map((l,a)=>$.jsx("p",{className:"text-left mr-4",children:l},a))}),$.jsxs("div",{children:[$.jsx("img",{src:i,alt:o,width:350,className:"mx-2 mb-2"}),$.jsx("figcaption",{className:"text-muted mb-4",children:o})]})]})]})})}const To1=["The Design, Build, Fly club at the University of Washington is a team focused on building competition-level RC aircraft. The team decided to implement an experimental avionics package. I was the avionics lead, in charge of making sure that the controls of the aircraft worked smoothly and that data collection was implemented properly. The team used an Arduino to reroute signal inputs for increased efficiency and improved handling. In addition, the avionics package could record positional data onto an onboard SD card for later analysis."],$o1=["The team decided to use an Arduino Nano as a microcontroller, since it had optimal weight while delivering plenty of processing power.","We then developed an asynchronous routine to read signal inputs from the pilot and used Arduino's built-in servo library to pass them on to the control surfaces.","This gave us access to the signals being passed by the controller. The initial goal was to use this access to develop active stabilization, which would account for high winds during competition. However, we switched to implementing differential thrust to better suit our pilot's needs.","The project was mounted via a 3D-printed bracket to the empannage section of the plane and provided smooth controls during our flight test."],Mo1=["There were 2 significant challenges the team overcame. The first was that the standard method of reading input signals is synchronous, which means taking signals from one input at a time. Comparatively, this takes a tremendous amount of processing power and is very inefficient. The second was a power-systems problem, resulting in a complete shutdown of the control systems within 30 seconds of powering up.","Research into the first challenge indicated that synchronous methods are inefficient, so the team instead developed an asynchronous method of reading inputs. This involved taking inputs in a way that would read all inputs at once, increasing the speed of signal tracking by a factor of at least 30,000.","Analysis of the shutdown revealed that the servos on the plane, once installed, were under load, resulting in significantly more power flowing through the Arduino than during initial testing. The Arduino would overheat, causing a shutdown. This was fixed by installing two power-regulating ESCs, which allowed the servos to draw power directly from the battery without first driving it through the Arduino. This meant that the servos could still be controlled by the Arduin, but the power would only come from the batteries."],No1={avionics:"High-level map of signal processing through Arduino board",issues:"The team wiring the plane with BECs"},Ro1=["The package was experimental, and my group was the first to attempt such a task at the University of Washington. It was highly successful, and the controls responded smoothly during flight.","See the code on my personal GitHub page."],w5={abstract:To1,methodology:$o1,issues:Mo1,captions:No1,results:Ro1};function Do1(){return $.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"Avionics Package"}),$.jsx(md,{title:"Abstract",content:w5.abstract}),$.jsx(Mt,{title:"Methodology",content:w5.methodology,graph:Co1,caption:w5.captions.avionics}),$.jsx(Mt,{title:"Issues",content:w5.issues,graph:ko1,caption:w5.captions.issues}),$.jsx(md,{title:"Results",content:w5.results})]})}const Oo1={title:"Abstract",content:["This was a 3D modeling competition hosted by the UW association of Mechanical Engineers that I entered into with a friend named Emily Cameron (https://www.linkedin.com/in/emilycameron/). The prompt was, 'what is the future of transportation?', with a bonus prompt of 'include a safety feature somewhere in your creation.","Given that our school is near Puget Sound, we decided to create a car that was capable of converting into a boat. in the week we had, we were able to focus on a creative design and related features. These included a fully articulated, luxury cabin, dual fire extinguishers per coast guard regulations, large engine with propeller, a front locker for storage, and a chassis that could be raised to allow the boat to move quickly over water.","As the design was targeted at a commuter crowd, the vehicle was named the Phoenix, for branding purposes. The design and name add an element of luxury, which was a major goal during design.","This design was entirely modeled with Solidworks, using OneDrive for file sharing. It won first place among 11 teams, and was completed on top of a full-time engineering course load."],image:{caption:"Finished assembly with wheels down"}},Jy={article:Oo1},Fo1="/personal-website/assets/overall-OAjqXQQl.JPG",zo1="/personal-website/assets/front-controls-Ciwy1s7Z.PNG",Lo1="/personal-website/assets/fire-DHALdzn8.JPG",jo1="/personal-website/assets/locker-open-CncXtCMH.PNG",Po1="/personal-website/assets/open-up-BNzOD_hz.PNG",Io1="/personal-website/assets/seat-BpB8f1p3.JPG",Bo1="/personal-website/assets/suspension-BHGL36uo.JPG",Uo1="/personal-website/assets/wheel-front-BNi5J2QY.JPG",qo1=[{url:zo1,caption:"Front dashboard with phoenix logo and pedals"},{url:Lo1,caption:"Fire system, with dual nozzles pointed at the engine"},{url:jo1,caption:"Front storage space. Fully articulated with half-pin hinges"},{url:Po1,caption:"Top down, wheels up for boating, doors open up"},{url:Io1,caption:"Luxury-oriented bucket seat with decorative pattern"},{url:Bo1,caption:"Detailed suspension, exploded view"},{url:Uo1,caption:"Fully modeled wheel, including threads and holes for bolts"}];function Ho1(){return $.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx(N1,{fluid:!0,className:"report-article",children:$.jsx("h1",{className:"text-center",children:"UW CADathon"})}),$.jsx(Mt,{title:Jy.article.title,content:Jy.article.content,graph:Fo1,caption:Jy.article.image.caption}),$.jsxs(N1,{children:[$.jsx("h2",{children:"Gallery"}),$.jsx(N1,{id:"gallery",className:"d-flex justify-content-between flex-wrap",children:qo1.map((t,e)=>$.jsxs("div",{className:"m-2",children:[$.jsx("img",{src:t.url,alt:t.caption}),$.jsx("figcaption",{className:"text-muted",children:t.caption})]}))})]})]})}const Go1={title:"Abstract",content:["This entry was my friend Emily's (https://www.linkedin.com/in/emilycameron/) and my second submission to the UW ASME CADathon. We had a teriffic amount of fun with this submission, since at this point, engineering course loads were getting difficult and we felt like some humor in the middle of COVID would fit well. So, we decided to create a submission with a fun premise and a great story to go with it.","Our submission (in response to the prompt, 'Design something to solve an inconvenience') was to make a bedframe that not only helped you get to sleep, but also to wake you up in the morning. We called it Cloud Eight, in that it would be just like sleeping on a cloud...until it wasn't.","We brainstormed every comfort we could think of to put into a IoT-connected bedframe, and came up with: power outlet, heated bedframe, and lights in the bedposts that could turn on or off automatically. However, the extra solve-the-inconvenience factor was that the frame can tilt the mattress by a few degrees when set to do so. Anybody who has ever gone camping can attest that it is very difficult to sleep when you feel like you're about to roll downhill, so we pitched it that way. Additionally, we added safety railings (one of which could come down for convenience).","The focus of our work in this case was to learn how to do a decent animation in SolidWorks and add it to our success last year with branding (note the logo, and we made sure to come up with a fun name as well). We figured out how to do so, and our hard work paid off. We came away with a 3rd-place win, in a much more competitive field than had been the previous year."],image:{caption:"Finished assembly of the bed with everything in place"}},tv={article:Go1},Wo1="/personal-website/assets/bed-D_pkKQzU.JPG",Yo1="/personal-website/assets/control_panel_in_place_tilt-CC62yddM.JPG",Vo1="/personal-website/assets/exploded_control_panel_with_lines-1Yyefeyl.JPG",Xo1="/personal-website/assets/exploded_tank_with_lines-Mq3Befih.JPG",Ko1="/personal-website/assets/light_in_place-CNkiCbzp.JPG",Qo1="/personal-website/assets/outlet-CEW5-pja.JPG",Zo1="/personal-website/assets/tank-DTpJrrpQ.JPG",Jo1=[{url:Yo1,caption:"A simple control panel designed to show wake-up time and temperature"},{url:Vo1,caption:"An exploded view of the control panel"},{url:Xo1,caption:"An exploded view of the tank designed to keep temperature constant"},{url:Ko1,caption:"A light embedded in the headboards"},{url:Qo1,caption:"A power outlet embedded in the bedpost"},{url:Zo1,caption:"A complete view of the assembled tank"}];function t41(){return $.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"UW CADathon, Year 2"}),$.jsx(Mt,{title:tv.article.title,content:tv.article.content,graph:Wo1,caption:tv.article.image.caption})]}),$.jsxs(N1,{children:[$.jsx("h2",{children:"Animation"}),$.jsx("div",{className:"text-center",children:$.jsx("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/1SXr4EXTk2M",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})})]}),$.jsxs(N1,{children:[$.jsx("h2",{children:"Gallery"}),$.jsx(N1,{id:"gallery",className:"d-flex justify-content-between flex-wrap",children:Jo1.map((t,e)=>$.jsxs("div",{className:"m-2",children:[$.jsx("img",{src:t.url,alt:t.caption}),$.jsx("figcaption",{className:"text-muted",children:t.caption})]}))})]})]})}const e41={title:"Abstract",content:["For EECS 413 at the University of Michigan, my team was tasked with designing a bandgap voltage reference. As part of the assignment, we were given a power spec of 100 uW, and we decided to implement the circuit such that it would work with a supply voltage of 1.2 V. I worked with three teammates, and my job was to design and lay out the bandgap core. Pratik Joshi designed the startup circuit, and Guanchen Tao worked with Yuhao Yuan to design the amplifier for the core.","Shown at right is the overall schematic of the low-voltage bandgap reference. The left of the schematic is a startup circuit that ensures the reference voltage settles at the correct value."],image:{caption:"Schematic of low-voltage bandgap reference"}},n41={title:"Transient Simulation",content:["At right is the transient simulation showing the startup circuit in action, where the supply voltage is ramped up from 0 to 1.2 V. Notice that even though the startup circuit has a different response for different MC samples, it still settles to the same spot.","This transient simulation is also post-PEX, so it is nearly tapeout-ready. The only thing we were not able to do was add the pad ring."],image:{caption:"Transient simulation with Monte Carlo sampling"}},i41={title:"Monte Carlo Results",content:["The distribution of the settled reference voltage shows a mean of 541 mV and a standard deviation of 12.9 mV. The roughly bell-shaped distribution indicates that the startup circuit is working well, and therefore the yield is relatively high, even with 500 samples.","If the startup circuit was not working, we would have seen (and did see early in development) low outliers, where the startup circuit never kicked in. Since there are no outliers, we concluded that the startup circuit is functional."],image:{caption:"Distribution of reference voltage"}},o41={title:"Process Corner Results",content:["The last notable requirement was to ensure behavior over PVT variation. This meant using the FF and SS process corners, in addition to supply voltage variation of 10% and a temperature sweep from 0 to 70 degrees Celsius.","The simulation at right is the temperature sweep. The temperature variation is less than 50 ppm.","The central red line is the TT corner with a supply voltage of 1.2 V. Note that even though the variation looks dramatic, the Y axis only spans about 2 mV. Careful reading of the dropped markers shows the voltage variation over temperature."],image:{caption:"Temperature sweep with corner variation"}},U2={abstract:e41,transient:n41,monte_carlo:i41,corners:o41},u41="/personal-website/assets/schematic-DlfxAise.jpg",l41="/personal-website/assets/mc_transient-COlKDoF4.jpg",a41="/personal-website/assets/MC_dc-CFfP4UkP.jpg",r41="/personal-website/assets/corner_sweep-W8K36K9R.jpg";function s41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"Bandgap Voltage Reference"}),$.jsx(Mt,{title:U2.abstract.title,content:U2.abstract.content,graph:u41,caption:U2.abstract.image.caption}),$.jsx(Mt,{title:U2.transient.title,content:U2.transient.content,graph:l41,caption:U2.transient.image.caption}),$.jsx(Mt,{title:U2.monte_carlo.title,content:U2.monte_carlo.content,graph:a41,caption:U2.monte_carlo.image.caption}),$.jsx(Mt,{title:U2.corners.title,content:U2.corners.content,graph:r41,caption:U2.corners.image.caption})]})})}const c41={title:"Abstract",content:["At the University of Washington, the pre-capstone class for embedded systems, ECE 474, focused on embedded C programming. The final project focused on using FreeRTOS. I worked with a partner, Robert Crist (https://www.linkedin.com/in/robert-crist) on a project in which we used FreeRTOS to build a rubber band gun inspired by Star Wars. I unfortunately can't yet publish the repository we used, since it contained both our work for the homework assignments and for the final project.","We designed the rubber band gun to be controllable in the lateral direction by joystick, and the sensor on the front detects the distance to the nearest target and set the pitch. We were able to hit targets accurately between 2 and almost 8 feet, at which point air resistance would cause simple kinematics equations we used to break down.","I used a 3D printer to print the body and the legs of the device, and the rectangular slots are precisely sized to hold standard servo motors. The microcontroller used was an Atmel 328 on board an Arduino Mega. We didn't have time or energy to clean up the housing, but it would have been fun to refine this project and make a dedicated PCB for it."],image:{caption:"3D printed base assembly before electronics installation"}},ev={abstract:c41},d41="/personal-website/assets/cannon-B6OJbee1.jpg";function f41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"Embedded Rubber Band Gun"}),$.jsx(Mt,{title:ev.abstract.title,content:ev.abstract.content,graph:d41,caption:ev.abstract.image.caption}),$.jsxs(N1,{children:[$.jsx("h2",{children:"Lab Demonstration"}),$.jsx("div",{className:"text-center mt-4",children:$.jsx("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/lQqvT3gUEu0?si=9WHXYWIMP8RFv4Fv",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0})}),$.jsx("p",{className:"text-left mr-4 mt-4",children:"This demo was a video we took in the lab. We measured the mass of the rubber band we were shooting and used simple kinematics equations to calculate the elevation. The effect of elevation was slight, but you can still see a slight change in elevation and hear the servo motor move when I place my hand in front of the sensor."}),$.jsx("p",{className:"text-left mr-4",children:"When the video begins, the model has already been loaded, and the 7-segment display is showing the distance to target. The button I press with my pen triggers the rubber band to fire."})]})]})})}const g41={title:"Abstract",content:[`The analog capstone was a schematic-only wireline transceiver built to AMD's 12.5 Gb/s specification in GPDK 45nm. We used a 12" channel model that seriously degraded the signal to the point that it would need equalization to properly transmit.`,"I was on a team with 6 people, where each person had a block in this mixed-signal system. There were 6 blocks in our system:","1. Serializer","2. CM Driver","3. FIR Filter","4. CTLE Filter","5. StrongARM Latch","6. Deserializer","I was in charge of overall equalization specifications, which I calculated using a Matlab model. I then helped in the design of the FIR filter by working with the CM driver."],image:{caption:"Overall block diagram"}},h41={title:"System Design",content:["I was in charge of determining system parameters for equalization. This meant solving a convolutiona matrix to find the optimal tap values for the FIR filter and optimal pole and zero locations for CTLE. The goal was to minimize ISIs and therefore open the channel eye as far as possible.","I used the Matlab SerDes toolbox to design the system. I had a formula for ideal tap weights, and since we knew the channel impulse response already, I simply swept the DC gain and peaking gain for CTLE and computed ideal tap weights for each pair of values. Once that was done, I plotted the eye diagram height and together we picked the most achievable design that would still give us a large eye opening.","At right is the Matlab plot we referenced with a 3-tap FIR filter with no pre-taps. It is clear that the eye diagram opens wider with certain pole and zero locations, but these come at the expense of high power. This is also a filtered view, we used many more possibilities but these were the best options we saw."],image:{caption:"Matlab eye opening vs. pole and zero locations"}},p41={title:"Results",content:["In the end, we were able to serialize and deserialize data at 12.5 Gb/s. The main digital problem was how to use flip flops that were fast enough to serialize the data, but the use of TSPC flip flops and latches solved that problem. The eye opening was not quite as wide as Matlab predicted, but it was plenty wide enough to successfully transmit data. The eye diagram eventually opened up around 150 mV, which was fine for our purposes, though it was lower than the Matlab model predicted.","We did have to make several assumptions for this to work. For one, we did not deal with correct clocking of the circuit at all, which could easily have covered another class. We used ideally matched clocks to recover data. We also did not run Monte Carlo or corner analysis, nor did we lay out either Tx or Rx blocks.","Part of the small scope of the project was the scope of the class. Part of it was that one of the other members of the team (Eugene) and I were also working on our digital capstone at the time, which took much more of our time, so we could not focus on this project as much as we wanted to."],image:{caption:"Final eye diagram"}},so={abstract:g41,approach:h41,results:p41},m41="/personal-website/assets/block_diagram-CiSC15R6.jpg",y41="/personal-website/assets/eye_diagram-7D-8BI1t.png",v41="/personal-website/assets/eye_heights-Bwx-LgpW.png";function b41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"High-speed Wireline Communication"}),$.jsx(Mt,{title:so.abstract.title,content:so.abstract.content,graph:m41,caption:so.abstract.image.caption}),$.jsx(Mt,{title:so.approach.title,content:so.approach.content,graph:v41,caption:so.approach.image.caption}),$.jsx(Mt,{title:so.results.title,content:so.results.content,graph:y41,caption:so.results.image.caption})]})})}const x41={title:"Abstract",content:["I took the UW digital VLSI capstone class with a mix of graduate and undergraduate students. I worked with Eugene Liu (https://www.linkedin.com/in/eugeneliu2023) to implement a convolutional neural network on a Xylinx FPGA for eventually tuning RF frontends.","Our project had two possible endpoints. The first, which we did not think we could achieve, was to fit the neural network onto a Xilinx RFSoC FPGA. The second, which was unexpectedly difficult, was to lay the neural net out in FreePDK 45nm using Synopsis Design Compiler and IC Compiler.","Eugene and I not only successfully implemented and tested the network on the FPGA, but we also laid it out in 45nm FreePDK with support for SRAM via an off-chip handshake protocol. We did not test the laid out version, but were able to successfully prove functionality on the FPGA.","As a result, Eugene and I won the VLSI capstone competition out of 11 teams, which were a mix of graduate and undergraduate students. Further work with this project would involve testing the laid out version and integrating the FPGA project into a larger RF system."],image:{caption:"Neural Net Block Diagram"}},_41={title:"System Design",content:["While Eugene developed the central blocks, of which he had a much deeper understanding, I developed the handshake system we used for inter-layer communication in addition to the convolutional and fully-connected layers.","Eugene built the Global Average Pooling and Batch Normalization layers, in addition to training the neural network and generating memory files.","I built the fully-connected layers and convolutional layers. One of the main difficulties was that the convolutional layers especially were small, but required a lot of resources. Eugene and I solved it by mapping the convolutional layers to DSP slices on the board. This effectively led to the layer being pipelined, and it took less area as well. However, the logic is much more complicated and the code was very difficult to write.","At right is the final placed design showing logic utilization on the RFSoC. It is clear that the utilization is high, but it still fits on the board."],image:{caption:"Placed design in Xilinx Vivado"}},w41={title:"Implementation",content:["We had to proceed on two fronts. The first was to keep working in Vivado to try and implement the network on the FPGA like we had originally intended. Failing that, we also had to develop the necessary SAPR scripts to lay the chip out in 45nm CMOS.","The reason for the dual plans is that before we knew about DSP slices, everything was synthesizing to lookup tables. In addition to being slower, the FPGA did not have the necessary resources to fit the design. Even after we changed to DSPs, I had to rewrite the convolutional layer to use fewer DSPs by pipelining and more effectively using the resources we had. However, even then, we wrote the SAPR scripts and edited the verilog to be compatible with Synopsis tools in case the design wasn't compatible with the board.","We also used Vivado memory macros to load the network weights onto the board. Eugene generated the weights in Matlab, and I wrote a Python script to convert the weight files to Vivado .mif files. The size of the design and the difficulty of the memory files made it impossible in the time we had to run simulations in Synopsis VCS. Instead, we ran simulations in Vivado to prove our final design.","I especially enjoyed using Vivado to close timing and clocking constraints instead of doing so in Synopsis. We did so in both Synopsis and Vivado, but it was more cohesive in Vivado."],image:{caption:"Final ICC layout"}},E41={title:"Unit Testing",content:["The reason our testing went so smoothly from Vivado to ILA was that I had been trained in basic assertion testing in my previous computer science classes. Therefore, we wrote the testcases and simply compiled them to either the internal testing module or to the simulationt testbench.","At right are two columns of hexadecimal numbers representing two different columns of outputs. The left side is a column produced by Eugene's matlab model. The right side was gathered and exported from Vivado. Finally, there is an exact comparison by formula in the final column."],image:{caption:"Data from Vivado ILA"}},S41={title:"Results",content:["One of the most difficult parts of this project was in managing the immense scale. SAPR took a week, and by the time that it had finished, we did not have time to run it again. It would have been better to run SAPR on smaller segments, such as individual layers, and then place them manually in the toplevel design. However, I did not have enough time or experience enough to do so.","Since each layer needed an individual SRAM, I used an SRAM generator instead of the Vivado memory macros and placed blockages in the IC Compiler floorplan so that the SRAMs would fit and not cause problems. The final APR was mostly DRC clean, except for some problems with the SRAM. At that point, we were successful with the FPGA implementation and therefore stopped refining the APR layout.","We tested our design on the FPGA by using the internal logic analyzer (ILA) native to Vivado. At right is the final output waveform from the design that we captured from Vivado. We synthesized a module that tested the design using known inputs and outputs. We had previously simulated the expected results in Vivado using assertion testing, so we already knew what outputs we were expecting. All we then had to do was capture the outputs in the ILA and compare them to the Matlab simulation. All testcases were successful, marking a successful resolution of the project.","I have not made this code public, but I am very happy to discuss it. Please contact me if you'd like to discuss this project."],image:{caption:"Vivado ILA screenshot"}},_n={abstract:x41,approach:_41,apr:w41,testing:E41,results:S41},A41="/personal-website/assets/block_diagram-B9G6qeox.jpg",C41="/personal-website/assets/layout_vivado-j5t2HqWD.png",k41="/personal-website/assets/ILA_output-BQ3dpQUr.jpg",T41="/personal-website/assets/testcases_table-Cry5pVIQ.png",$41="/personal-website/assets/layout_with_sram-DIOdvbGW.png";function M41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"Convolutonal Neural Network"}),$.jsx(Mt,{title:_n.abstract.title,content:_n.abstract.content,graph:A41,caption:_n.abstract.image.caption}),$.jsx(Mt,{title:_n.approach.title,content:_n.approach.content,graph:C41,caption:_n.approach.image.caption}),$.jsx(Mt,{title:_n.apr.title,content:_n.apr.content,graph:$41,caption:_n.apr.image.caption}),$.jsx(Mt,{title:_n.testing.title,content:_n.testing.content,graph:T41,caption:_n.testing.image.caption}),$.jsx(Mt,{title:_n.results.title,content:_n.results.content,graph:k41,caption:_n.results.image.caption})]})})}const N41={title:"Abstract",content:["In my senior year of high school, I began to learn chess, and I wanted a set to travel with. However, I didn't like any of the designs that I saw on Amazon, so I decided to make my own. I had access to an impressive machine shop and equally impressive CAD tools, so I decided to make my own set out of aluminum.","At right is one of the original renderings of the entire set. I modeled each piece in SolidWorks and exported the STL files to Rhino 3D, where I was then able to render them with Flamingo. The board is a later project and one that I could cut on standard woodworking tools. I have a model and a process planned, but the pieces will come first.","Apart from the knight and one face of the king, the pieces are finished. I turned them on a HAAS 4-tool CNC lathe. Unfortunately, I did not have the foresight to take videos at the time, and my backup models were stolen with my laptop just before college."],image:{caption:"Original chess set rendering"}},R41={title:"5-Axis Knight Machining",content:["The main problem was the knight, since it is the only piece on the board that cannot be turned and still look like a traditional knight. It would be immensely difficult to cut on a 3-axis machine, but not nearly so difficult on a 5-axis machine. Luckily for me, the UW has just such a machine in one of the engineering makerspaces.","I have no margin for error with the final aluminum blanks, so I am currently prototyping the knight in wood on a Pocket NC desktop machine. At right is a 1 3/8 to 1 scale model in wood that I successfully cut. I now have to solve a problem with software updates on the machine and figure out how to cut aluminum on such a small machine."],image:{caption:"5-axis machined chess knight"}},E5={abstract:N41,knight:R41},D41="/personal-website/assets/original_rendering-BYrnKJ_H.jpg",O41="/personal-website/assets/wood_knight-DI8H8RKl.jpg";function F41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"CNC Chess Set"}),$.jsx(Mt,{title:E5.abstract.title,content:E5.abstract.content,graph:D41,caption:E5.abstract.image.caption}),$.jsx(Mt,{title:E5.knight.title,content:E5.knight.content,graph:O41,caption:E5.knight.image.caption})]})})}const z41={title:"Abstract",content:["One assignment I had to work on was a single-stage, switched-capacitor amplifier as a precursor to the larger system design of an ADC. I was given a 10 uA reference current and a reference clock of 10 MHz. I had to create a simple non-overlapping clock generator and the bias network based on the 10 uA reference.","At right is the schematic of the overall amplifier (without the surrounding switch-cap circuitry). Also not shown is the expanded biasing network. However, you can see the telescopic cascode circuitry and the DDA feedback circuit.","I designed the amplifier using a graph-based design approach. By using a plot of transconductance vs. current and length with a fixed width, I was able to find the bias current and device sizes that worked well for this design. Since I knew the unity-gain frequency and load capacitance, I was able to quickly move from an ideal model to a fabricable design with little to no revision necessary."],image:{caption:"SC amplifier schematic"}},L41={title:"Amplifier Simulation",content:["The amplifier had to have a gain of 45 dB with a 100 MHz unity-gain frequency when driving a load of 1 pF. I was able to meet these specs by using a single-stage cascode topology.","I had done a similar project in my undergraduate work, but that project required a second stage with much higher gain and load capacitance, and so it required Miller compensation. Luckily, that wasn't necessary for this project. For this project, I did not lay out the amplifier, but I did have to set up the biasing.","The AC sweep data, plotted in Matlab, shows a single pole and high enough gain to satisfy specs."],image:{caption:"AC amplifier simulation"}},j41={title:"SHA Results",content:["At right is the final switched-cap transient results. Shown on the top is the input voltage, a 100 MHz sinusoidal wave. Below that is the SHA output voltage.","One of the difficulties with the biasing was that I wanted to use minimal current for the bias network to equally minimize power. I therefore used stacked devices in the triode region to generate a higher voltage to bias the NMOS cascode devices.","My favorite part of this design was in using a DDA circuit to bias the PMOS load devices. It uses smaller devices and does not load the output, which I count as a bonus, though it does burn static current. I could then accurately gauge the effectiveness of the circuit without having to worry about whether devices were in saturation.","The transient data at right shows the DDA circuit in action in holding the common-mode voltage of the output relatively stable. The output voltage is also clearly sampling and holding a copy of the input and multiplying it by a constant."],image:{caption:"SC transient simulation"}},co={abstract:z41,design:L41,results:j41},P41="/personal-website/assets/schematic-D0FAgxbO.jpg",I41="/personal-website/assets/ac_sweep-BVl8tULc.jpg",B41="/personal-website/assets/transient-DQ2LmLzw.jpg";function U41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"Switched-capacitor Amplifier"}),$.jsx(Mt,{title:co.abstract.title,content:co.abstract.content,graph:P41,caption:co.abstract.image.caption}),$.jsx(Mt,{title:co.design.title,content:co.design.content,graph:I41,caption:co.design.image.caption}),$.jsx(Mt,{title:co.results.title,content:co.results.content,graph:B41,caption:co.results.image.caption})]})})}const q41={title:"Abstract",content:["My team designed a 2-stage, 16-bit, RISC microprocessor capable of running a subset of the RISC-V instruction set. We also added a ring-oscillator based physically uncloneable function (PUF) block.","Another graduate student, Rahul Narasimha (https://www.linkedin.com/in/rahulnnarasimha/) and I generally became the design leads due to a better understanding of the architecture and more experience in digital IC design.","We tested the design by running Spectre simulations on the datapath and verilog simulations on anything higher-level than that. The final simulation was to run the first several elements of the Fibonacci sequence. At right is the datapath schematic, which has several larger blocks, including data memory, a left shifter, an ALU, and a regfile."],image:{caption:"Microprocessor datapath schematic"}},H41={title:"Layout",content:["My team was given the SRAM blocks for instruction and data memory. We used DC Compiler and Cadence Innovus to run place-and-route for the instruction register and program counter, since they were not on the critical path of the processor. However, we laid out the datapath by hand.","The final integration involved adding a pad and IO ring to the processor. The only inputs and outputs are the power and ground lines and a scan chain that can scan directly to the instruction register or the program counter.","The layout was a lot of work. It was my idea to lay out a series of standard cells (since we weren't given access to the standard cell library for this assignment), and our personal standard cell library helped with design and layout significantly. However, the layout of an entire datapath was still time-consuming and difficult. We also used an aggressive bit-slice width, which made routing that much more difficult.","At the top right of the layout is the PUF block, which is implemented using a series of ring oscillators and a phase/frequency detector (PFD) that compares the frequencies of two ring oscillators and randomly outputs a 1 or 0 based on which oscillator is faster."],image:{caption:"Microprocessor layout with pad and IO ring"}},G41={title:"Toplevel Simulation",content:["To prove the processor functionality, we set the processor to calculate the first ten elements of the Fibonacci sequence. The toplevel NCVerilog simulation is at right. Each element of the Fibonacci sequence is stored at the corresponding memory address. There is also a conditional jump (not shown) that moves on to a different subroutine once the tenth Fibonacci element has been computed.","The project was an overall success, with a mix of APR blocks, memory macros, and full-custom laid out blocks."],image:{caption:"Toplevel verilog simulation"}},fo={abstract:q41,design:H41,results:G41},W41="/personal-website/assets/schematic-B6mcRchy.jpg",Y41="/personal-website/assets/layout-Da__av2e.jpg",V41="/personal-website/assets/simulation-D4ntXgng.jpg";function X41(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"A 2-stage RISC Microprocessor"}),$.jsx(Mt,{title:fo.abstract.title,content:fo.abstract.content,graph:W41,caption:fo.abstract.image.caption}),$.jsx(Mt,{title:fo.design.title,content:fo.design.content,graph:Y41,caption:fo.design.image.caption}),$.jsx(Mt,{title:fo.results.title,content:fo.results.content,graph:V41,caption:fo.results.image.caption})]})})}const K41={title:"Delta-Sigma Modulation",content:["Using an ideal model of a flash quantizer, I modeled a 2nd order delta-sigma modulator. The block diagram is at right. Since the digital filters are complicated and often not implemented on chip in research, they are also not added in my simulation. Instead of the final output, I ran the FFT on the quantizer output.","The input, u[n], is a continuous analog signal, and the output, v[n], is the quantized digital output with shaped output noise."],image:{caption:'2nd-order Delta-Sigma block diagram; Image Credit: Schreier and Temes, "Understanding Dela Sigma Data Converters", 2017'}},Q41={title:"2nd Order FFT Simulation",content:["At right is the FFT output from the 2nd order delta-sigma modulator. It is shown with and without DWA to account for DAC mismatch. Notice the harmonics with DAC mismatch. With standard rotational data-weighted averaging (DWA), the harmonics are nearly eliminated and the SNDR is greatly increased. Shown at right is a comparison of noise spectra of a 2nd-order DSM with and without DWA.","The red line down the middle of the plot marks the ADC bandwidth. Since delta-sigma modulators are oversampling converters, the ideal is to shape the quantization noise out of band. The greater the oversampling ratio (OSR), the better the SNDR. In this case, the OSR was 64."],image:{caption:"2nd-order FFT Comparison"}},Z41={title:"SAR ADC with Redundancy",content:["The class final project was to use Matlab to model a set-and-down noise shaping SAR ADC with redundancy. At right is a 4-bit SAR output with an input sweep of Vin from -1 V to +1 V. There is an error in the first bit comparison of 0.0625 in the first plot. Notice that with redundancy included in the second plot, there is no DNL error regardless of the first bit comparison."],image:{caption:"SAR with ramp input"}},go={abstract:K41,sim2:Q41,redundancy:Z41},J41="/personal-website/assets/dsm2_block-BGUIf7_n.jpg",tu1="/personal-website/assets/dsm2_fft-QI_gTY8s.jpg",eu1="/personal-website/assets/sar_comparison-B1jAwp0A.jpg";function nu1(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"ADC Simulations in Matlab"}),$.jsx(Mt,{title:go.abstract.title,content:go.abstract.content,graph:J41,caption:go.abstract.image.caption}),$.jsx(Mt,{title:go.sim2.title,content:go.sim2.content,graph:tu1,caption:go.sim2.image.caption}),$.jsx(Mt,{title:go.redundancy.title,content:go.redundancy.content,graph:eu1,caption:go.redundancy.image.caption})]})})}const iu1=/("(?:[^\\"]|\\.)*")|[:,]/g;function nv(t,e={}){const n=JSON.stringify([1],void 0,e.indent===void 0?2:e.indent).slice(2,-3),i=n===""?1/0:e.maxLength===void 0?80:e.maxLength;let{replacer:o}=e;return(function u(l,a,s){l&&typeof l.toJSON=="function"&&(l=l.toJSON());const c=JSON.stringify(l,o);if(c===void 0)return c;const f=i-a.length-s;if(c.length<=f){const g=c.replace(iu1,(p,m)=>m||`${p} `);if(g.length<=f)return g}if(o!=null&&(l=JSON.parse(c),o=void 0),typeof l=="object"&&l!==null){const g=a+n,p=[];let m=0,v,b;if(Array.isArray(l)){v="[",b="]";const{length:x}=l;for(;m<x;m++)p.push(u(l[m],g,m===x-1?0:1)||"null")}else{v="{",b="}";const x=Object.keys(l),{length:w}=x;for(;m<w;m++){const S=x[m],A=`${JSON.stringify(S)}: `,C=u(l[S],g,A.length+(m===w-1?0:1));C!==void 0&&p.push(A+C)}}if(p.length>0)return[v,n+p.join(`,
${g}`),b].join(`
${a}`)}return c})(t,"",0)}function u2(t,e,n){return t.fields=e||[],t.fname=n,t}function ee(t){return t==null?null:t.fname}function hn(t){return t==null?null:t.fields}function sB(t){return t.length===1?ou1(t[0]):uu1(t)}const ou1=t=>function(e){return e[t]},uu1=t=>{const e=t.length;return function(n){for(let i=0;i<e;++i)n=n[t[i]];return n}};function u1(t){throw Error(t)}function Ni(t){const e=[],n=t.length;let i=null,o=0,u="",l,a,s;t=t+"";function c(){e.push(u+t.substring(l,a)),u="",l=a+1}for(l=a=0;a<n;++a)if(s=t[a],s==="\\")u+=t.substring(l,a++),l=a;else if(s===i)c(),i=null,o=-1;else{if(i)continue;l===o&&s==='"'||l===o&&s==="'"?(l=a+1,i=s):s==="."&&!o?a>l?c():l=a+1:s==="["?(a>l&&c(),o=l=a+1):s==="]"&&(o||u1("Access path missing open bracket: "+t),o>0&&c(),o=0,l=a+1)}return o&&u1("Access path missing closing bracket: "+t),i&&u1("Access path missing closing quote: "+t),a>l&&(a++,c()),e}function i3(t,e,n){const i=Ni(t);return t=i.length===1?i[0]:t,u2((n&&n.get||sB)(i),[t],e||t)}const D8=i3("id"),vn=u2(t=>t,[],"identity"),K4=u2(()=>0,[],"zero"),Xl=u2(()=>1,[],"one"),o3=u2(()=>!0,[],"true"),I4=u2(()=>!1,[],"false"),aE=new Set([...Object.getOwnPropertyNames(Object.prototype).filter(t=>typeof Object.prototype[t]=="function"),"__proto__"]);function lu1(t,e,n){const i=[e].concat([].slice.call(n));console[t].apply(console,i)}const cB=0,rE=1,sE=2,dB=3,fB=4;function cE(t,e,n=lu1){let i=t||cB;return{level(o){return arguments.length?(i=+o,this):i},error(){return i>=rE&&n(e||"error","ERROR",arguments),this},warn(){return i>=sE&&n(e||"warn","WARN",arguments),this},info(){return i>=dB&&n(e||"log","INFO",arguments),this},debug(){return i>=fB&&n(e||"log","DEBUG",arguments),this}}}var r1=Array.isArray;function E1(t){return t===Object(t)}const ED=t=>t!=="__proto__";function Kl(...t){return t.reduce((e,n)=>{for(const i in n)if(i==="signals")e.signals=au1(e.signals,n.signals);else{const o=i==="legend"?{layout:1}:i==="style"?!0:null;Ql(e,i,n[i],o)}return e},{})}function Ql(t,e,n,i){if(!ED(e))return;let o,u;if(E1(n)&&!r1(n)){u=E1(t[e])?t[e]:t[e]={};for(o in n)i&&(i===!0||i[o])?Ql(u,o,n[o]):ED(o)&&(u[o]=n[o])}else t[e]=n}function au1(t,e){if(t==null)return e;const n={},i=[];function o(u){n[u.name]||(n[u.name]=1,i.push(u))}return e.forEach(o),t.forEach(o),i}function st(t){return t[t.length-1]}function fn(t){return t==null||t===""?null:+t}const gB=t=>e=>t*Math.exp(e),hB=t=>e=>Math.log(t*e),pB=t=>e=>Math.sign(e)*Math.log1p(Math.abs(e/t)),mB=t=>e=>Math.sign(e)*Math.expm1(Math.abs(e))*t,yd=t=>e=>e<0?-Math.pow(-e,t):Math.pow(e,t);function cg(t,e,n,i){const o=n(t[0]),u=n(st(t)),l=(u-o)*e;return[i(o-l),i(u-l)]}function yB(t,e){return cg(t,e,fn,vn)}function vB(t,e){var n=Math.sign(t[0]);return cg(t,e,hB(n),gB(n))}function bB(t,e,n){return cg(t,e,yd(n),yd(1/n))}function xB(t,e,n){return cg(t,e,pB(n),mB(n))}function dg(t,e,n,i,o){const u=i(t[0]),l=i(st(t)),a=e!=null?i(e):(u+l)/2;return[o(a+(u-a)*n),o(a+(l-a)*n)]}function dE(t,e,n){return dg(t,e,n,fn,vn)}function fE(t,e,n){const i=Math.sign(t[0]);return dg(t,e,n,hB(i),gB(i))}function vd(t,e,n,i){return dg(t,e,n,yd(i),yd(1/i))}function gE(t,e,n,i){return dg(t,e,n,pB(i),mB(i))}function _B(t){return 1+~~(new Date(t).getMonth()/3)}function wB(t){return 1+~~(new Date(t).getUTCMonth()/3)}function S1(t){return t!=null?r1(t)?t:[t]:[]}function EB(t,e,n){let i=t[0],o=t[1],u;return o<i&&(u=o,o=i,i=u),u=o-i,u>=n-e?[e,n]:[i=Math.min(Math.max(i,e),n-u),i+u]}function Q1(t){return typeof t=="function"}const ru1="descending";function hE(t,e,n){n=n||{},e=S1(e)||[];const i=[],o=[],u={},l=n.comparator||su1;return S1(t).forEach((a,s)=>{a!=null&&(i.push(e[s]===ru1?-1:1),o.push(a=Q1(a)?a:i3(a,null,n)),(hn(a)||[]).forEach(c=>u[c]=1))}),o.length===0?null:u2(l(o,i),Object.keys(u))}const Zl=(t,e)=>(t<e||t==null)&&e!=null?-1:(t>e||e==null)&&t!=null?1:(e=e instanceof Date?+e:e,(t=t instanceof Date?+t:t)!==t&&e===e?-1:e!==e&&t===t?1:0),su1=(t,e)=>t.length===1?cu1(t[0],e[0]):du1(t,e,t.length),cu1=(t,e)=>function(n,i){return Zl(t(n),t(i))*e},du1=(t,e,n)=>(e.push(0),function(i,o){let u,l=0,a=-1;for(;l===0&&++a<n;)u=t[a],l=Zl(u(i),u(o));return l*e[a]});function bn(t){return Q1(t)?t:()=>t}function pE(t,e){let n;return i=>{n&&clearTimeout(n),n=setTimeout(()=>(e(i),n=null),t)}}function K1(t){for(let e,n,i=1,o=arguments.length;i<o;++i){e=arguments[i];for(n in e)t[n]=e[n]}return t}function _i(t,e){let n=0,i,o,u,l;if(t&&(i=t.length))if(e==null){for(o=t[n];n<i&&(o==null||o!==o);o=t[++n]);for(u=l=o;n<i;++n)o=t[n],o!=null&&(o<u&&(u=o),o>l&&(l=o))}else{for(o=e(t[n]);n<i&&(o==null||o!==o);o=e(t[++n]));for(u=l=o;n<i;++n)o=e(t[n]),o!=null&&(o<u&&(u=o),o>l&&(l=o))}return[u,l]}function SB(t,e){const n=t.length;let i=-1,o,u,l,a,s;if(e==null){for(;++i<n;)if(u=t[i],u!=null&&u>=u){o=l=u;break}if(i===n)return[-1,-1];for(a=s=i;++i<n;)u=t[i],u!=null&&(o>u&&(o=u,a=i),l<u&&(l=u,s=i))}else{for(;++i<n;)if(u=e(t[i],i,t),u!=null&&u>=u){o=l=u;break}if(i===n)return[-1,-1];for(a=s=i;++i<n;)u=e(t[i],i,t),u!=null&&(o>u&&(o=u,a=i),l<u&&(l=u,s=i))}return[a,s]}function A1(t,e){return Object.hasOwn(t,e)}const Gs={};function Jl(t){let e={},n;function i(u){return A1(e,u)&&e[u]!==Gs}const o={size:0,empty:0,object:e,has:i,get(u){return i(u)?e[u]:void 0},set(u,l){return i(u)||(++o.size,e[u]===Gs&&--o.empty),e[u]=l,this},delete(u){return i(u)&&(--o.size,++o.empty,e[u]=Gs),this},clear(){o.size=o.empty=0,o.object=e={}},test(u){return arguments.length?(n=u,o):n},clean(){const u={};let l=0;for(const a in e){const s=e[a];s!==Gs&&(!n||!n(s))&&(u[a]=s,++l)}o.size=l,o.empty=0,o.object=e=u}};return t&&Object.keys(t).forEach(u=>{o.set(u,t[u])}),o}function AB(t,e,n,i,o,u){if(!n&&n!==0)return u;const l=+n;let a=t[0],s=st(t),c;s<a&&(c=a,a=s,s=c),c=Math.abs(e-a);const f=Math.abs(s-e);return c<f&&c<=l?i:f<=l?o:u}function b1(t,e,n){const i=t.prototype=Object.create(e.prototype);return Object.defineProperty(i,"constructor",{value:t,writable:!0,enumerable:!0,configurable:!0}),K1(i,n)}function U5(t,e,n,i){let o=e[0],u=e[e.length-1],l;return o>u&&(l=o,o=u,u=l),n=n===void 0||n,i=i===void 0||i,(n?o<=t:o<t)&&(i?t<=u:t<u)}function Mu(t){return typeof t=="boolean"}function au(t){return Object.prototype.toString.call(t)==="[object Date]"}function CB(t){return t&&Q1(t[Symbol.iterator])}function ht(t){return typeof t=="number"}function mE(t){return Object.prototype.toString.call(t)==="[object RegExp]"}function w1(t){return typeof t=="string"}function yE(t,e,n){t&&(t=e?S1(t).map(a=>a.replace(/\\(.)/g,"$1")):S1(t));const i=t&&t.length,o=n&&n.get||sB,u=a=>o(e?[a]:Ni(a));let l;if(!i)l=function(){return""};else if(i===1){const a=u(t[0]);l=function(s){return""+a(s)}}else{const a=t.map(u);l=function(s){let c=""+a[0](s),f=0;for(;++f<i;)c+="|"+a[f](s);return c}}return u2(l,t,"key")}function kB(t,e){const n=t[0],i=st(t),o=+e;return o?o===1?i:n+o*(i-n):n}const fu1=1e4;function TB(t){t=+t||fu1;let e,n,i;const o=()=>{e={},n={},i=0},u=(l,a)=>(++i>t&&(n=e,e={},i=1),e[l]=a);return o(),{clear:o,has:l=>A1(e,l)||A1(n,l),get:l=>A1(e,l)?e[l]:A1(n,l)?u(l,n[l]):void 0,set:(l,a)=>A1(e,l)?e[l]=a:u(l,a)}}function $B(t,e,n,i){const o=e.length,u=n.length;if(!u)return e;if(!o)return n;const l=i||new e.constructor(o+u);let a=0,s=0,c=0;for(;a<o&&s<u;++c)l[c]=t(e[a],n[s])>0?n[s++]:e[a++];for(;a<o;++a,++c)l[c]=e[a];for(;s<u;++s,++c)l[c]=n[s];return l}function J9(t,e){let n="";for(;--e>=0;)n+=t;return n}function MB(t,e,n,i){const o=n||" ",u=t+"",l=e-u.length;return l<=0?u:i==="left"?J9(o,l)+u:i==="center"?J9(o,~~(l/2))+u+J9(o,Math.ceil(l/2)):u+J9(o,l)}function O8(t){return t&&st(t)-t[0]||0}function y1(t){return r1(t)?`[${t.map(e=>e===null?"null":y1(e))}]`:E1(t)||w1(t)?JSON.stringify(t).replaceAll("\u2028","\\u2028").replaceAll("\u2029","\\u2029"):t}function vE(t){return t==null||t===""?null:!t||t==="false"||t==="0"?!1:!!t}const gu1=t=>ht(t)||au(t)?t:Date.parse(t);function bE(t,e){return e=e||gu1,t==null||t===""?null:e(t)}function xE(t){return t==null||t===""?null:t+""}function D3(t){const e={},n=t.length;for(let i=0;i<n;++i)e[t[i]]=!0;return e}function NB(t,e,n,i){const o=i??"…",u=t+"",l=u.length,a=Math.max(0,e-o.length);return l<=e?u:n==="left"?o+u.slice(l-a):n==="center"?u.slice(0,Math.ceil(a/2))+o+u.slice(l-~~(a/2)):u.slice(0,a)+o}function H4(t,e,n){if(t)if(e){const i=t.length;for(let o=0;o<i;++o){const u=e(t[o]);u&&n(u,o,t)}}else t.forEach(n)}var SD={},iv={},ov=34,C9=10,uv=13;function RB(t){return new Function("d","return {"+t.map(function(e,n){return JSON.stringify(e)+": d["+n+'] || ""'}).join(",")+"}")}function hu1(t,e){var n=RB(t);return function(i,o){return e(n(i),o,t)}}function AD(t){var e=Object.create(null),n=[];return t.forEach(function(i){for(var o in i)o in e||n.push(e[o]=o)}),n}function Gn(t,e){var n=t+"",i=n.length;return i<e?new Array(e-i+1).join(0)+n:n}function pu1(t){return t<0?"-"+Gn(-t,6):t>9999?"+"+Gn(t,6):Gn(t,4)}function mu1(t){var e=t.getUTCHours(),n=t.getUTCMinutes(),i=t.getUTCSeconds(),o=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":pu1(t.getUTCFullYear())+"-"+Gn(t.getUTCMonth()+1,2)+"-"+Gn(t.getUTCDate(),2)+(o?"T"+Gn(e,2)+":"+Gn(n,2)+":"+Gn(i,2)+"."+Gn(o,3)+"Z":i?"T"+Gn(e,2)+":"+Gn(n,2)+":"+Gn(i,2)+"Z":n||e?"T"+Gn(e,2)+":"+Gn(n,2)+"Z":"")}function yu1(t){var e=new RegExp('["'+t+`
\r]`),n=t.charCodeAt(0);function i(g,p){var m,v,b=o(g,function(x,w){if(m)return m(x,w-1);v=x,m=p?hu1(x,p):RB(x)});return b.columns=v||[],b}function o(g,p){var m=[],v=g.length,b=0,x=0,w,S=v<=0,A=!1;g.charCodeAt(v-1)===C9&&--v,g.charCodeAt(v-1)===uv&&--v;function C(){if(S)return iv;if(A)return A=!1,SD;var M,T=b,D;if(g.charCodeAt(T)===ov){for(;b++<v&&g.charCodeAt(b)!==ov||g.charCodeAt(++b)===ov;);return(M=b)>=v?S=!0:(D=g.charCodeAt(b++))===C9?A=!0:D===uv&&(A=!0,g.charCodeAt(b)===C9&&++b),g.slice(T+1,M-1).replace(/""/g,'"')}for(;b<v;){if((D=g.charCodeAt(M=b++))===C9)A=!0;else if(D===uv)A=!0,g.charCodeAt(b)===C9&&++b;else if(D!==n)continue;return g.slice(T,M)}return S=!0,g.slice(T,v)}for(;(w=C())!==iv;){for(var k=[];w!==SD&&w!==iv;)k.push(w),w=C();p&&(k=p(k,x++))==null||m.push(k)}return m}function u(g,p){return g.map(function(m){return p.map(function(v){return f(m[v])}).join(t)})}function l(g,p){return p==null&&(p=AD(g)),[p.map(f).join(t)].concat(u(g,p)).join(`
`)}function a(g,p){return p==null&&(p=AD(g)),u(g,p).join(`
`)}function s(g){return g.map(c).join(`
`)}function c(g){return g.map(f).join(t)}function f(g){return g==null?"":g instanceof Date?mu1(g):e.test(g+="")?'"'+g.replace(/"/g,'""')+'"':g}return{parse:i,parseRows:o,format:l,formatBody:a,formatRows:s,formatRow:c,formatValue:f}}function vu1(t){return t}function bu1(t){if(t==null)return vu1;var e,n,i=t.scale[0],o=t.scale[1],u=t.translate[0],l=t.translate[1];return function(a,s){s||(e=n=0);var c=2,f=a.length,g=new Array(f);for(g[0]=(e+=a[0])*i+u,g[1]=(n+=a[1])*o+l;c<f;)g[c]=a[c],++c;return g}}function xu1(t,e){for(var n,i=t.length,o=i-e;o<--i;)n=t[o],t[o++]=t[i],t[i]=n}function DB(t,e){return typeof e=="string"&&(e=t.objects[e]),e.type==="GeometryCollection"?{type:"FeatureCollection",features:e.geometries.map(function(n){return CD(t,n)})}:CD(t,e)}function CD(t,e){var n=e.id,i=e.bbox,o=e.properties==null?{}:e.properties,u=OB(t,e);return n==null&&i==null?{type:"Feature",properties:o,geometry:u}:i==null?{type:"Feature",id:n,properties:o,geometry:u}:{type:"Feature",id:n,bbox:i,properties:o,geometry:u}}function OB(t,e){var n=bu1(t.transform),i=t.arcs;function o(f,g){g.length&&g.pop();for(var p=i[f<0?~f:f],m=0,v=p.length;m<v;++m)g.push(n(p[m],m));f<0&&xu1(g,v)}function u(f){return n(f)}function l(f){for(var g=[],p=0,m=f.length;p<m;++p)o(f[p],g);return g.length<2&&g.push(g[0]),g}function a(f){for(var g=l(f);g.length<4;)g.push(g[0]);return g}function s(f){return f.map(a)}function c(f){var g=f.type,p;switch(g){case"GeometryCollection":return{type:g,geometries:f.geometries.map(c)};case"Point":p=u(f.coordinates);break;case"MultiPoint":p=f.coordinates.map(u);break;case"LineString":p=l(f.arcs);break;case"MultiLineString":p=f.arcs.map(l);break;case"Polygon":p=s(f.arcs);break;case"MultiPolygon":p=f.arcs.map(s);break;default:return null}return{type:g,coordinates:p}}return c(e)}function _u1(t,e){var n={},i={},o={},u=[],l=-1;e.forEach(function(c,f){var g=t.arcs[c<0?~c:c],p;g.length<3&&!g[1][0]&&!g[1][1]&&(p=e[++l],e[l]=c,e[f]=p)}),e.forEach(function(c){var f=a(c),g=f[0],p=f[1],m,v;if(m=o[g])if(delete o[m.end],m.push(c),m.end=p,v=i[p]){delete i[v.start];var b=v===m?m:m.concat(v);i[b.start=m.start]=o[b.end=v.end]=b}else i[m.start]=o[m.end]=m;else if(m=i[p])if(delete i[m.start],m.unshift(c),m.start=g,v=o[g]){delete o[v.end];var x=v===m?m:v.concat(m);i[x.start=v.start]=o[x.end=m.end]=x}else i[m.start]=o[m.end]=m;else m=[c],i[m.start=g]=o[m.end=p]=m});function a(c){var f=t.arcs[c<0?~c:c],g=f[0],p;return t.transform?(p=[0,0],f.forEach(function(m){p[0]+=m[0],p[1]+=m[1]})):p=f[f.length-1],c<0?[p,g]:[g,p]}function s(c,f){for(var g in c){var p=c[g];delete f[p.start],delete p.start,delete p.end,p.forEach(function(m){n[m<0?~m:m]=1}),u.push(p)}}return s(o,i),s(i,o),e.forEach(function(c){n[c<0?~c:c]||u.push([c])}),u}function FB(t){return OB(t,wu1.apply(this,arguments))}function wu1(t,e,n){var i,o,u;if(arguments.length>1)i=Eu1(t,e,n);else for(o=0,i=new Array(u=t.arcs.length);o<u;++o)i[o]=o;return{type:"MultiLineString",arcs:_u1(t,i)}}function Eu1(t,e,n){var i=[],o=[],u;function l(g){var p=g<0?~g:g;(o[p]||(o[p]=[])).push({i:g,g:u})}function a(g){g.forEach(l)}function s(g){g.forEach(a)}function c(g){g.forEach(s)}function f(g){switch(u=g,g.type){case"GeometryCollection":g.geometries.forEach(f);break;case"LineString":a(g.arcs);break;case"MultiLineString":case"Polygon":s(g.arcs);break;case"MultiPolygon":c(g.arcs);break}}return f(e),o.forEach(n==null?function(g){i.push(g[0].i)}:function(g){n(g[0].g,g[g.length-1].g)&&i.push(g[0].i)}),i}function jo(t,e){return t==null||e==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function Su1(t,e){return t==null||e==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function ta(t){let e,n,i;t.length!==2?(e=jo,n=(a,s)=>jo(t(a),s),i=(a,s)=>t(a)-s):(e=t===jo||t===Su1?t:Au1,n=t,i=t);function o(a,s,c=0,f=a.length){if(c<f){if(e(s,s)!==0)return f;do{const g=c+f>>>1;n(a[g],s)<0?c=g+1:f=g}while(c<f)}return c}function u(a,s,c=0,f=a.length){if(c<f){if(e(s,s)!==0)return f;do{const g=c+f>>>1;n(a[g],s)<=0?c=g+1:f=g}while(c<f)}return c}function l(a,s,c=0,f=a.length){const g=o(a,s,c,f-1);return g>c&&i(a[g-1],s)>-i(a[g],s)?g-1:g}return{left:o,center:l,right:u}}function Au1(){return 0}function zB(t){return t===null?NaN:+t}function*Cu1(t,e){if(e===void 0)for(let n of t)n!=null&&(n=+n)>=n&&(yield n);else{let n=-1;for(let i of t)(i=e(i,++n,t))!=null&&(i=+i)>=i&&(yield i)}}const LB=ta(jo),hu=LB.right,ku1=LB.left;ta(zB).center;function Tu1(t,e){let n=0,i,o=0,u=0;if(e===void 0)for(let l of t)l!=null&&(l=+l)>=l&&(i=l-o,o+=i/++n,u+=i*(l-o));else{let l=-1;for(let a of t)(a=e(a,++l,t))!=null&&(a=+a)>=a&&(i=a-o,o+=i/++n,u+=i*(a-o))}if(n>1)return u/(n-1)}function $u1(t,e){const n=Tu1(t,e);return n&&Math.sqrt(n)}class Dn{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const n=this._partials;let i=0;for(let o=0;o<this._n&&o<32;o++){const u=n[o],l=e+u,a=Math.abs(e)<Math.abs(u)?e-(l-u):u-(l-e);a&&(n[i++]=a),e=l}return n[i]=e,this._n=i+1,this}valueOf(){const e=this._partials;let n=this._n,i,o,u,l=0;if(n>0){for(l=e[--n];n>0&&(i=l,o=e[--n],l=i+o,u=o-(l-i),!u););n>0&&(u<0&&e[n-1]<0||u>0&&e[n-1]>0)&&(o=u*2,i=l+o,o==i-l&&(l=i))}return l}}class kD extends Map{constructor(e,n=IB){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),e!=null)for(const[i,o]of e)this.set(i,o)}get(e){return super.get(sx(this,e))}has(e){return super.has(sx(this,e))}set(e,n){return super.set(jB(this,e),n)}delete(e){return super.delete(PB(this,e))}}class bd extends Set{constructor(e,n=IB){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),e!=null)for(const i of e)this.add(i)}has(e){return super.has(sx(this,e))}add(e){return super.add(jB(this,e))}delete(e){return super.delete(PB(this,e))}}function sx({_intern:t,_key:e},n){const i=e(n);return t.has(i)?t.get(i):n}function jB({_intern:t,_key:e},n){const i=e(n);return t.has(i)?t.get(i):(t.set(i,n),n)}function PB({_intern:t,_key:e},n){const i=e(n);return t.has(i)&&(n=t.get(i),t.delete(i)),n}function IB(t){return t!==null&&typeof t=="object"?t.valueOf():t}function Mu1(t,e){return Array.from(e,n=>t[n])}function Nu1(t=jo){if(t===jo)return BB;if(typeof t!="function")throw new TypeError("compare is not a function");return(e,n)=>{const i=t(e,n);return i||i===0?i:(t(n,n)===0)-(t(e,e)===0)}}function BB(t,e){return(t==null||!(t>=t))-(e==null||!(e>=e))||(t<e?-1:t>e?1:0)}const Ru1=Math.sqrt(50),Du1=Math.sqrt(10),Ou1=Math.sqrt(2);function xd(t,e,n){const i=(e-t)/Math.max(0,n),o=Math.floor(Math.log10(i)),u=i/Math.pow(10,o),l=u>=Ru1?10:u>=Du1?5:u>=Ou1?2:1;let a,s,c;return o<0?(c=Math.pow(10,-o)/l,a=Math.round(t*c),s=Math.round(e*c),a/c<t&&++a,s/c>e&&--s,c=-c):(c=Math.pow(10,o)*l,a=Math.round(t/c),s=Math.round(e/c),a*c<t&&++a,s*c>e&&--s),s<a&&.5<=n&&n<2?xd(t,e,n*2):[a,s,c]}function cx(t,e,n){if(e=+e,t=+t,n=+n,!(n>0))return[];if(t===e)return[t];const i=e<t,[o,u,l]=i?xd(e,t,n):xd(t,e,n);if(!(u>=o))return[];const a=u-o+1,s=new Array(a);if(i)if(l<0)for(let c=0;c<a;++c)s[c]=(u-c)/-l;else for(let c=0;c<a;++c)s[c]=(u-c)*l;else if(l<0)for(let c=0;c<a;++c)s[c]=(o+c)/-l;else for(let c=0;c<a;++c)s[c]=(o+c)*l;return s}function dx(t,e,n){return e=+e,t=+t,n=+n,xd(t,e,n)[2]}function pu(t,e,n){e=+e,t=+t,n=+n;const i=e<t,o=i?dx(e,t,n):dx(t,e,n);return(i?-1:1)*(o<0?1/-o:o)}function Po(t,e){let n;if(e===void 0)for(const i of t)i!=null&&(n<i||n===void 0&&i>=i)&&(n=i);else{let i=-1;for(let o of t)(o=e(o,++i,t))!=null&&(n<o||n===void 0&&o>=o)&&(n=o)}return n}function _d(t,e){let n;if(e===void 0)for(const i of t)i!=null&&(n>i||n===void 0&&i>=i)&&(n=i);else{let i=-1;for(let o of t)(o=e(o,++i,t))!=null&&(n>o||n===void 0&&o>=o)&&(n=o)}return n}function UB(t,e,n=0,i=1/0,o){if(e=Math.floor(e),n=Math.floor(Math.max(0,n)),i=Math.floor(Math.min(t.length-1,i)),!(n<=e&&e<=i))return t;for(o=o===void 0?BB:Nu1(o);i>n;){if(i-n>600){const s=i-n+1,c=e-n+1,f=Math.log(s),g=.5*Math.exp(2*f/3),p=.5*Math.sqrt(f*g*(s-g)/s)*(c-s/2<0?-1:1),m=Math.max(n,Math.floor(e-c*g/s+p)),v=Math.min(i,Math.floor(e+(s-c)*g/s+p));UB(t,e,m,v,o)}const u=t[e];let l=n,a=i;for(k9(t,n,e),o(t[i],u)>0&&k9(t,n,i);l<a;){for(k9(t,l,a),++l,--a;o(t[l],u)<0;)++l;for(;o(t[a],u)>0;)--a}o(t[n],u)===0?k9(t,n,a):(++a,k9(t,a,i)),a<=e&&(n=a+1),e<=a&&(i=a-1)}return t}function k9(t,e,n){const i=t[e];t[e]=t[n],t[n]=i}function fx(t,e,n){if(t=Float64Array.from(Cu1(t,n)),!(!(i=t.length)||isNaN(e=+e))){if(e<=0||i<2)return _d(t);if(e>=1)return Po(t);var i,o=(i-1)*e,u=Math.floor(o),l=Po(UB(t,u).subarray(0,u+1)),a=_d(t.subarray(u+1));return l+(a-l)*(o-u)}}function qB(t,e,n=zB){if(!(!(i=t.length)||isNaN(e=+e))){if(e<=0||i<2)return+n(t[0],0,t);if(e>=1)return+n(t[i-1],i-1,t);var i,o=(i-1)*e,u=Math.floor(o),l=+n(t[u],u,t),a=+n(t[u+1],u+1,t);return l+(a-l)*(o-u)}}function Fu1(t,e){let n=0,i=0;if(e===void 0)for(let o of t)o!=null&&(o=+o)>=o&&(++n,i+=o);else{let o=-1;for(let u of t)(u=e(u,++o,t))!=null&&(u=+u)>=u&&(++n,i+=u)}if(n)return i/n}function HB(t,e){return fx(t,.5,e)}function*zu1(t){for(const e of t)yield*e}function GB(t){return Array.from(zu1(t))}function b2(t,e,n){t=+t,e=+e,n=(o=arguments.length)<2?(e=t,t=0,1):o<3?1:+n;for(var i=-1,o=Math.max(0,Math.ceil((e-t)/n))|0,u=new Array(o);++i<o;)u[i]=t+i*n;return u}function WB(t,e){let n=0;for(let i of t)(i=+i)&&(n+=i);return n}function Lu1(t,...e){t=new bd(t),e=e.map(ju1);t:for(const n of t)for(const i of e)if(!i.has(n)){t.delete(n);continue t}return t}function ju1(t){return t instanceof bd?t:new bd(t)}function Pu1(...t){const e=new bd;for(const n of t)for(const i of n)e.add(i);return e}function Iu1(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)}function wd(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,i=t.slice(0,n);return[i.length>1?i[0]+i.slice(2):i,+t.slice(n+1)]}function cl(t){return t=wd(Math.abs(t)),t?t[1]:NaN}function Bu1(t,e){return function(n,i){for(var o=n.length,u=[],l=0,a=t[0],s=0;o>0&&a>0&&(s+a+1>i&&(a=Math.max(1,i-s)),u.push(n.substring(o-=a,o+a)),!((s+=a+1)>i));)a=t[l=(l+1)%t.length];return u.reverse().join(e)}}function Uu1(t){return function(e){return e.replace(/[0-9]/g,function(n){return t[+n]})}}var qu1=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function G0(t){if(!(e=qu1.exec(t)))throw new Error("invalid format: "+t);var e;return new _E({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}G0.prototype=_E.prototype;function _E(t){this.fill=t.fill===void 0?" ":t.fill+"",this.align=t.align===void 0?">":t.align+"",this.sign=t.sign===void 0?"-":t.sign+"",this.symbol=t.symbol===void 0?"":t.symbol+"",this.zero=!!t.zero,this.width=t.width===void 0?void 0:+t.width,this.comma=!!t.comma,this.precision=t.precision===void 0?void 0:+t.precision,this.trim=!!t.trim,this.type=t.type===void 0?"":t.type+""}_E.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function Hu1(t){t:for(var e=t.length,n=1,i=-1,o;n<e;++n)switch(t[n]){case".":i=o=n;break;case"0":i===0&&(i=n),o=n;break;default:if(!+t[n])break t;i>0&&(i=0);break}return i>0?t.slice(0,i)+t.slice(o+1):t}var YB;function Gu1(t,e){var n=wd(t,e);if(!n)return t+"";var i=n[0],o=n[1],u=o-(YB=Math.max(-8,Math.min(8,Math.floor(o/3)))*3)+1,l=i.length;return u===l?i:u>l?i+new Array(u-l+1).join("0"):u>0?i.slice(0,u)+"."+i.slice(u):"0."+new Array(1-u).join("0")+wd(t,Math.max(0,e+u-1))[0]}function TD(t,e){var n=wd(t,e);if(!n)return t+"";var i=n[0],o=n[1];return o<0?"0."+new Array(-o).join("0")+i:i.length>o+1?i.slice(0,o+1)+"."+i.slice(o+1):i+new Array(o-i.length+2).join("0")}const $D={"%":(t,e)=>(t*100).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:Iu1,e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>TD(t*100,e),r:TD,s:Gu1,X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function MD(t){return t}var ND=Array.prototype.map,RD=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function VB(t){var e=t.grouping===void 0||t.thousands===void 0?MD:Bu1(ND.call(t.grouping,Number),t.thousands+""),n=t.currency===void 0?"":t.currency[0]+"",i=t.currency===void 0?"":t.currency[1]+"",o=t.decimal===void 0?".":t.decimal+"",u=t.numerals===void 0?MD:Uu1(ND.call(t.numerals,String)),l=t.percent===void 0?"%":t.percent+"",a=t.minus===void 0?"−":t.minus+"",s=t.nan===void 0?"NaN":t.nan+"";function c(g){g=G0(g);var p=g.fill,m=g.align,v=g.sign,b=g.symbol,x=g.zero,w=g.width,S=g.comma,A=g.precision,C=g.trim,k=g.type;k==="n"?(S=!0,k="g"):$D[k]||(A===void 0&&(A=12),C=!0,k="g"),(x||p==="0"&&m==="=")&&(x=!0,p="0",m="=");var M=b==="$"?n:b==="#"&&/[boxX]/.test(k)?"0"+k.toLowerCase():"",T=b==="$"?i:/[%p]/.test(k)?l:"",D=$D[k],I=/[defgprs%]/.test(k);A=A===void 0?6:/[gprs]/.test(k)?Math.max(1,Math.min(21,A)):Math.max(0,Math.min(20,A));function U(B){var V=M,W=T,O,j,R;if(k==="c")W=D(B)+W,B="";else{B=+B;var P=B<0||1/B<0;if(B=isNaN(B)?s:D(Math.abs(B),A),C&&(B=Hu1(B)),P&&+B==0&&v!=="+"&&(P=!1),V=(P?v==="("?v:a:v==="-"||v==="("?"":v)+V,W=(k==="s"?RD[8+YB/3]:"")+W+(P&&v==="("?")":""),I){for(O=-1,j=B.length;++O<j;)if(R=B.charCodeAt(O),48>R||R>57){W=(R===46?o+B.slice(O+1):B.slice(O))+W,B=B.slice(0,O);break}}}S&&!x&&(B=e(B,1/0));var q=V.length+B.length+W.length,Y=q<w?new Array(w-q+1).join(p):"";switch(S&&x&&(B=e(Y+B,Y.length?w-W.length:1/0),Y=""),m){case"<":B=V+B+W+Y;break;case"=":B=V+Y+B+W;break;case"^":B=Y.slice(0,q=Y.length>>1)+V+B+W+Y.slice(q);break;default:B=Y+V+B+W;break}return u(B)}return U.toString=function(){return g+""},U}function f(g,p){var m=c((g=G0(g),g.type="f",g)),v=Math.max(-8,Math.min(8,Math.floor(cl(p)/3)))*3,b=Math.pow(10,-v),x=RD[8+v/3];return function(w){return m(b*w)+x}}return{format:c,formatPrefix:f}}var Ws,fg,wE;Wu1({thousands:",",grouping:[3],currency:["$",""]});function Wu1(t){return Ws=VB(t),fg=Ws.format,wE=Ws.formatPrefix,Ws}function XB(t){return Math.max(0,-cl(Math.abs(t)))}function KB(t,e){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(cl(e)/3)))*3-cl(Math.abs(t)))}function QB(t,e){return t=Math.abs(t),e=Math.abs(e)-t,Math.max(0,cl(e)-cl(t))+1}const lv=new Date,av=new Date;function _e(t,e,n,i){function o(u){return t(u=arguments.length===0?new Date:new Date(+u)),u}return o.floor=u=>(t(u=new Date(+u)),u),o.ceil=u=>(t(u=new Date(u-1)),e(u,1),t(u),u),o.round=u=>{const l=o(u),a=o.ceil(u);return u-l<a-u?l:a},o.offset=(u,l)=>(e(u=new Date(+u),l==null?1:Math.floor(l)),u),o.range=(u,l,a)=>{const s=[];if(u=o.ceil(u),a=a==null?1:Math.floor(a),!(u<l)||!(a>0))return s;let c;do s.push(c=new Date(+u)),e(u,a),t(u);while(c<u&&u<l);return s},o.filter=u=>_e(l=>{if(l>=l)for(;t(l),!u(l);)l.setTime(l-1)},(l,a)=>{if(l>=l)if(a<0)for(;++a<=0;)for(;e(l,-1),!u(l););else for(;--a>=0;)for(;e(l,1),!u(l););}),n&&(o.count=(u,l)=>(lv.setTime(+u),av.setTime(+l),t(lv),t(av),Math.floor(n(lv,av))),o.every=u=>(u=Math.floor(u),!isFinite(u)||!(u>0)?null:u>1?o.filter(i?l=>i(l)%u===0:l=>o.count(0,l)%u===0):o)),o}const dl=_e(()=>{},(t,e)=>{t.setTime(+t+e)},(t,e)=>e-t);dl.every=t=>(t=Math.floor(t),!isFinite(t)||!(t>0)?null:t>1?_e(e=>{e.setTime(Math.floor(e/t)*t)},(e,n)=>{e.setTime(+e+n*t)},(e,n)=>(n-e)/t):dl);dl.range;const To=1e3,V2=To*60,$o=V2*60,Ko=$o*24,EE=Ko*7,DD=Ko*30,rv=Ko*365,Mo=_e(t=>{t.setTime(t-t.getMilliseconds())},(t,e)=>{t.setTime(+t+e*To)},(t,e)=>(e-t)/To,t=>t.getUTCSeconds());Mo.range;const gg=_e(t=>{t.setTime(t-t.getMilliseconds()-t.getSeconds()*To)},(t,e)=>{t.setTime(+t+e*V2)},(t,e)=>(e-t)/V2,t=>t.getMinutes());gg.range;const hg=_e(t=>{t.setUTCSeconds(0,0)},(t,e)=>{t.setTime(+t+e*V2)},(t,e)=>(e-t)/V2,t=>t.getUTCMinutes());hg.range;const pg=_e(t=>{t.setTime(t-t.getMilliseconds()-t.getSeconds()*To-t.getMinutes()*V2)},(t,e)=>{t.setTime(+t+e*$o)},(t,e)=>(e-t)/$o,t=>t.getHours());pg.range;const mg=_e(t=>{t.setUTCMinutes(0,0,0)},(t,e)=>{t.setTime(+t+e*$o)},(t,e)=>(e-t)/$o,t=>t.getUTCHours());mg.range;const Io=_e(t=>t.setHours(0,0,0,0),(t,e)=>t.setDate(t.getDate()+e),(t,e)=>(e-t-(e.getTimezoneOffset()-t.getTimezoneOffset())*V2)/Ko,t=>t.getDate()-1);Io.range;const ru=_e(t=>{t.setUTCHours(0,0,0,0)},(t,e)=>{t.setUTCDate(t.getUTCDate()+e)},(t,e)=>(e-t)/Ko,t=>t.getUTCDate()-1);ru.range;const ZB=_e(t=>{t.setUTCHours(0,0,0,0)},(t,e)=>{t.setUTCDate(t.getUTCDate()+e)},(t,e)=>(e-t)/Ko,t=>Math.floor(t/Ko));ZB.range;function y6(t){return _e(e=>{e.setDate(e.getDate()-(e.getDay()+7-t)%7),e.setHours(0,0,0,0)},(e,n)=>{e.setDate(e.getDate()+n*7)},(e,n)=>(n-e-(n.getTimezoneOffset()-e.getTimezoneOffset())*V2)/EE)}const ea=y6(0),Ed=y6(1),Yu1=y6(2),Vu1=y6(3),fl=y6(4),Xu1=y6(5),Ku1=y6(6);ea.range;Ed.range;Yu1.range;Vu1.range;fl.range;Xu1.range;Ku1.range;function v6(t){return _e(e=>{e.setUTCDate(e.getUTCDate()-(e.getUTCDay()+7-t)%7),e.setUTCHours(0,0,0,0)},(e,n)=>{e.setUTCDate(e.getUTCDate()+n*7)},(e,n)=>(n-e)/EE)}const na=v6(0),Sd=v6(1),Qu1=v6(2),Zu1=v6(3),gl=v6(4),Ju1=v6(5),t01=v6(6);na.range;Sd.range;Qu1.range;Zu1.range;gl.range;Ju1.range;t01.range;const Gr=_e(t=>{t.setDate(1),t.setHours(0,0,0,0)},(t,e)=>{t.setMonth(t.getMonth()+e)},(t,e)=>e.getMonth()-t.getMonth()+(e.getFullYear()-t.getFullYear())*12,t=>t.getMonth());Gr.range;const Wr=_e(t=>{t.setUTCDate(1),t.setUTCHours(0,0,0,0)},(t,e)=>{t.setUTCMonth(t.getUTCMonth()+e)},(t,e)=>e.getUTCMonth()-t.getUTCMonth()+(e.getUTCFullYear()-t.getUTCFullYear())*12,t=>t.getUTCMonth());Wr.range;const wi=_e(t=>{t.setMonth(0,1),t.setHours(0,0,0,0)},(t,e)=>{t.setFullYear(t.getFullYear()+e)},(t,e)=>e.getFullYear()-t.getFullYear(),t=>t.getFullYear());wi.every=t=>!isFinite(t=Math.floor(t))||!(t>0)?null:_e(e=>{e.setFullYear(Math.floor(e.getFullYear()/t)*t),e.setMonth(0,1),e.setHours(0,0,0,0)},(e,n)=>{e.setFullYear(e.getFullYear()+n*t)});wi.range;const Ei=_e(t=>{t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},(t,e)=>{t.setUTCFullYear(t.getUTCFullYear()+e)},(t,e)=>e.getUTCFullYear()-t.getUTCFullYear(),t=>t.getUTCFullYear());Ei.every=t=>!isFinite(t=Math.floor(t))||!(t>0)?null:_e(e=>{e.setUTCFullYear(Math.floor(e.getUTCFullYear()/t)*t),e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},(e,n)=>{e.setUTCFullYear(e.getUTCFullYear()+n*t)});Ei.range;function JB(t,e,n,i,o,u){const l=[[Mo,1,To],[Mo,5,5*To],[Mo,15,15*To],[Mo,30,30*To],[u,1,V2],[u,5,5*V2],[u,15,15*V2],[u,30,30*V2],[o,1,$o],[o,3,3*$o],[o,6,6*$o],[o,12,12*$o],[i,1,Ko],[i,2,2*Ko],[n,1,EE],[e,1,DD],[e,3,3*DD],[t,1,rv]];function a(c,f,g){const p=f<c;p&&([c,f]=[f,c]);const m=g&&typeof g.range=="function"?g:s(c,f,g),v=m?m.range(c,+f+1):[];return p?v.reverse():v}function s(c,f,g){const p=Math.abs(f-c)/g,m=ta(([,,x])=>x).right(l,p);if(m===l.length)return t.every(pu(c/rv,f/rv,g));if(m===0)return dl.every(Math.max(pu(c,f,g),1));const[v,b]=l[p/l[m-1][2]<l[m][2]/p?m-1:m];return v.every(b)}return[a,s]}const[e01,n01]=JB(Ei,Wr,na,ZB,mg,hg),[i01,o01]=JB(wi,Gr,ea,Io,pg,gg),Ye="year",Jn="quarter",pn="month",ve="week",t2="date",cn="day",Si="dayofyear",k2="hours",T2="minutes",u3="seconds",O3="milliseconds",SE=[Ye,Jn,pn,ve,t2,cn,Si,k2,T2,u3,O3],sv=SE.reduce((t,e,n)=>(t[e]=1+n,t),{});function AE(t){const e=S1(t).slice(),n={};return e.length||u1("Missing time unit."),e.forEach(o=>{A1(sv,o)?n[o]=1:u1(`Invalid time unit: ${o}.`)}),(n[ve]||n[cn]?1:0)+(n[Jn]||n[pn]||n[t2]?1:0)+(n[Si]?1:0)>1&&u1(`Incompatible time units: ${t}`),e.sort((o,u)=>sv[o]-sv[u]),e}const u01={[Ye]:"%Y ",[Jn]:"Q%q ",[pn]:"%b ",[t2]:"%d ",[ve]:"W%U ",[cn]:"%a ",[Si]:"%j ",[k2]:"%H:00",[T2]:"00:%M",[u3]:":%S",[O3]:".%L",[`${Ye}-${pn}`]:"%Y-%m ",[`${Ye}-${pn}-${t2}`]:"%Y-%m-%d ",[`${k2}-${T2}`]:"%H:%M"};function tU(t,e){const n=K1({},u01,e),i=AE(t),o=i.length;let u="",l=0,a,s;for(l=0;l<o;)for(a=i.length;a>l;--a)if(s=i.slice(l,a).join("-"),n[s]!=null){u+=n[s],l=a;break}return u.trim()}const w0=new Date;function CE(t){return w0.setFullYear(t),w0.setMonth(0),w0.setDate(1),w0.setHours(0,0,0,0),w0}function eU(t){return iU(new Date(t))}function nU(t){return gx(new Date(t))}function iU(t){return Io.count(CE(t.getFullYear())-1,t)}function gx(t){return ea.count(CE(t.getFullYear())-1,t)}function hx(t){return CE(t).getDay()}function l01(t,e,n,i,o,u,l){if(0<=t&&t<100){const a=new Date(-1,e,n,i,o,u,l);return a.setFullYear(t),a}return new Date(t,e,n,i,o,u,l)}function oU(t){return lU(new Date(t))}function uU(t){return px(new Date(t))}function lU(t){const e=Date.UTC(t.getUTCFullYear(),0,1);return ru.count(e-1,t)}function px(t){const e=Date.UTC(t.getUTCFullYear(),0,1);return na.count(e-1,t)}function mx(t){return w0.setTime(Date.UTC(t,0,1)),w0.getUTCDay()}function a01(t,e,n,i,o,u,l){if(0<=t&&t<100){const a=new Date(Date.UTC(-1,e,n,i,o,u,l));return a.setUTCFullYear(n.y),a}return new Date(Date.UTC(t,e,n,i,o,u,l))}function aU(t,e,n,i,o){const u=e||1,l=st(t),a=(w,S,A)=>(A=A||w,r01(n[A],i[A],w===l&&u,S)),s=new Date,c=D3(t),f=c[Ye]?a(Ye):bn(2012),g=c[pn]?a(pn):c[Jn]?a(Jn):K4,p=c[ve]&&c[cn]?a(cn,1,ve+cn):c[ve]?a(ve,1):c[cn]?a(cn,1):c[t2]?a(t2,1):c[Si]?a(Si,1):Xl,m=c[k2]?a(k2):K4,v=c[T2]?a(T2):K4,b=c[u3]?a(u3):K4,x=c[O3]?a(O3):K4;return function(w){s.setTime(+w);const S=f(s);return o(S,g(s),p(s,S),m(s),v(s),b(s),x(s))}}function r01(t,e,n,i){const o=n<=1?t:i?(u,l)=>i+n*Math.floor((t(u,l)-i)/n):(u,l)=>n*Math.floor(t(u,l)/n);return e?(u,l)=>e(o(u,l),l):o}function hl(t,e,n){return e+t*7-(n+6)%7}const s01={[Ye]:t=>t.getFullYear(),[Jn]:t=>Math.floor(t.getMonth()/3),[pn]:t=>t.getMonth(),[t2]:t=>t.getDate(),[k2]:t=>t.getHours(),[T2]:t=>t.getMinutes(),[u3]:t=>t.getSeconds(),[O3]:t=>t.getMilliseconds(),[Si]:t=>iU(t),[ve]:t=>gx(t),[ve+cn]:(t,e)=>hl(gx(t),t.getDay(),hx(e)),[cn]:(t,e)=>hl(1,t.getDay(),hx(e))},c01={[Jn]:t=>3*t,[ve]:(t,e)=>hl(t,0,hx(e))};function rU(t,e){return aU(t,e||1,s01,c01,l01)}const d01={[Ye]:t=>t.getUTCFullYear(),[Jn]:t=>Math.floor(t.getUTCMonth()/3),[pn]:t=>t.getUTCMonth(),[t2]:t=>t.getUTCDate(),[k2]:t=>t.getUTCHours(),[T2]:t=>t.getUTCMinutes(),[u3]:t=>t.getUTCSeconds(),[O3]:t=>t.getUTCMilliseconds(),[Si]:t=>lU(t),[ve]:t=>px(t),[cn]:(t,e)=>hl(1,t.getUTCDay(),mx(e)),[ve+cn]:(t,e)=>hl(px(t),t.getUTCDay(),mx(e))},f01={[Jn]:t=>3*t,[ve]:(t,e)=>hl(t,0,mx(e))};function sU(t,e){return aU(t,e||1,d01,f01,a01)}const g01={[Ye]:wi,[Jn]:Gr.every(3),[pn]:Gr,[ve]:ea,[t2]:Io,[cn]:Io,[Si]:Io,[k2]:pg,[T2]:gg,[u3]:Mo,[O3]:dl},h01={[Ye]:Ei,[Jn]:Wr.every(3),[pn]:Wr,[ve]:na,[t2]:ru,[cn]:ru,[Si]:ru,[k2]:mg,[T2]:hg,[u3]:Mo,[O3]:dl};function ia(t){return g01[t]}function oa(t){return h01[t]}function cU(t,e,n){return t?t.offset(e,n):void 0}function dU(t,e,n){return cU(ia(t),e,n)}function fU(t,e,n){return cU(oa(t),e,n)}function gU(t,e,n,i){return t?t.range(e,n,i):void 0}function hU(t,e,n,i){return gU(ia(t),e,n,i)}function pU(t,e,n,i){return gU(oa(t),e,n,i)}const tr=1e3,er=tr*60,nr=er*60,yg=nr*24,p01=yg*7,OD=yg*30,yx=yg*365,mU=[Ye,pn,t2,k2,T2,u3,O3],ir=mU.slice(0,-1),or=ir.slice(0,-1),ur=or.slice(0,-1),m01=ur.slice(0,-1),y01=[Ye,ve],FD=[Ye,pn],yU=[Ye],T9=[[ir,1,tr],[ir,5,5*tr],[ir,15,15*tr],[ir,30,30*tr],[or,1,er],[or,5,5*er],[or,15,15*er],[or,30,30*er],[ur,1,nr],[ur,3,3*nr],[ur,6,6*nr],[ur,12,12*nr],[m01,1,yg],[y01,1,p01],[FD,1,OD],[FD,3,3*OD],[yU,1,yx]];function vU(t){const e=t.extent,n=t.maxbins||40,i=Math.abs(O8(e))/n;let o=ta(a=>a[2]).right(T9,i),u,l;return o===T9.length?(u=yU,l=pu(e[0]/yx,e[1]/yx,n)):o?(o=T9[i/T9[o-1][2]<T9[o][2]/i?o-1:o],u=o[0],l=o[1]):(u=mU,l=Math.max(pu(e[0],e[1],n),1)),{units:u,step:l}}function cv(t){if(0<=t.y&&t.y<100){var e=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return e.setFullYear(t.y),e}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function dv(t){if(0<=t.y&&t.y<100){var e=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return e.setUTCFullYear(t.y),e}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function $9(t,e,n){return{y:t,m:e,d:n,H:0,M:0,S:0,L:0}}function bU(t){var e=t.dateTime,n=t.date,i=t.time,o=t.periods,u=t.days,l=t.shortDays,a=t.months,s=t.shortMonths,c=M9(o),f=N9(o),g=M9(u),p=N9(u),m=M9(l),v=N9(l),b=M9(a),x=N9(a),w=M9(s),S=N9(s),A={a:P,A:q,b:Y,B:z,c:null,d:BD,e:BD,f:I01,g:K01,G:Z01,H:L01,I:j01,j:P01,L:xU,m:B01,M:U01,p:G,q:Q,Q:HD,s:GD,S:q01,u:H01,U:G01,V:W01,w:Y01,W:V01,x:null,X:null,y:X01,Y:Q01,Z:J01,"%":qD},C={a:n1,A:l1,b:d1,B:x1,c:null,d:UD,e:UD,f:i61,g:g61,G:p61,H:t61,I:e61,j:n61,L:wU,m:o61,M:u61,p:j1,q:M1,Q:HD,s:GD,S:l61,u:a61,U:r61,V:s61,w:c61,W:d61,x:null,X:null,y:f61,Y:h61,Z:m61,"%":qD},k={a:U,A:B,b:V,B:W,c:O,d:PD,e:PD,f:D01,g:jD,G:LD,H:ID,I:ID,j:$01,L:R01,m:T01,M:M01,p:I,q:k01,Q:F01,s:z01,S:N01,u:w01,U:E01,V:S01,w:_01,W:A01,x:j,X:R,y:jD,Y:LD,Z:C01,"%":O01};A.x=M(n,A),A.X=M(i,A),A.c=M(e,A),C.x=M(n,C),C.X=M(i,C),C.c=M(e,C);function M(v1,D1){return function(B1){var f1=[],lt=-1,X1=0,Y1=v1.length,Ft,C1,zt;for(B1 instanceof Date||(B1=new Date(+B1));++lt<Y1;)v1.charCodeAt(lt)===37&&(f1.push(v1.slice(X1,lt)),(C1=zD[Ft=v1.charAt(++lt)])!=null?Ft=v1.charAt(++lt):C1=Ft==="e"?" ":"0",(zt=D1[Ft])&&(Ft=zt(B1,C1)),f1.push(Ft),X1=lt+1);return f1.push(v1.slice(X1,lt)),f1.join("")}}function T(v1,D1){return function(B1){var f1=$9(1900,void 0,1),lt=D(f1,v1,B1+="",0),X1,Y1;if(lt!=B1.length)return null;if("Q"in f1)return new Date(f1.Q);if("s"in f1)return new Date(f1.s*1e3+("L"in f1?f1.L:0));if(D1&&!("Z"in f1)&&(f1.Z=0),"p"in f1&&(f1.H=f1.H%12+f1.p*12),f1.m===void 0&&(f1.m="q"in f1?f1.q:0),"V"in f1){if(f1.V<1||f1.V>53)return null;"w"in f1||(f1.w=1),"Z"in f1?(X1=dv($9(f1.y,0,1)),Y1=X1.getUTCDay(),X1=Y1>4||Y1===0?Sd.ceil(X1):Sd(X1),X1=ru.offset(X1,(f1.V-1)*7),f1.y=X1.getUTCFullYear(),f1.m=X1.getUTCMonth(),f1.d=X1.getUTCDate()+(f1.w+6)%7):(X1=cv($9(f1.y,0,1)),Y1=X1.getDay(),X1=Y1>4||Y1===0?Ed.ceil(X1):Ed(X1),X1=Io.offset(X1,(f1.V-1)*7),f1.y=X1.getFullYear(),f1.m=X1.getMonth(),f1.d=X1.getDate()+(f1.w+6)%7)}else("W"in f1||"U"in f1)&&("w"in f1||(f1.w="u"in f1?f1.u%7:"W"in f1?1:0),Y1="Z"in f1?dv($9(f1.y,0,1)).getUTCDay():cv($9(f1.y,0,1)).getDay(),f1.m=0,f1.d="W"in f1?(f1.w+6)%7+f1.W*7-(Y1+5)%7:f1.w+f1.U*7-(Y1+6)%7);return"Z"in f1?(f1.H+=f1.Z/100|0,f1.M+=f1.Z%100,dv(f1)):cv(f1)}}function D(v1,D1,B1,f1){for(var lt=0,X1=D1.length,Y1=B1.length,Ft,C1;lt<X1;){if(f1>=Y1)return-1;if(Ft=D1.charCodeAt(lt++),Ft===37){if(Ft=D1.charAt(lt++),C1=k[Ft in zD?D1.charAt(lt++):Ft],!C1||(f1=C1(v1,B1,f1))<0)return-1}else if(Ft!=B1.charCodeAt(f1++))return-1}return f1}function I(v1,D1,B1){var f1=c.exec(D1.slice(B1));return f1?(v1.p=f.get(f1[0].toLowerCase()),B1+f1[0].length):-1}function U(v1,D1,B1){var f1=m.exec(D1.slice(B1));return f1?(v1.w=v.get(f1[0].toLowerCase()),B1+f1[0].length):-1}function B(v1,D1,B1){var f1=g.exec(D1.slice(B1));return f1?(v1.w=p.get(f1[0].toLowerCase()),B1+f1[0].length):-1}function V(v1,D1,B1){var f1=w.exec(D1.slice(B1));return f1?(v1.m=S.get(f1[0].toLowerCase()),B1+f1[0].length):-1}function W(v1,D1,B1){var f1=b.exec(D1.slice(B1));return f1?(v1.m=x.get(f1[0].toLowerCase()),B1+f1[0].length):-1}function O(v1,D1,B1){return D(v1,e,D1,B1)}function j(v1,D1,B1){return D(v1,n,D1,B1)}function R(v1,D1,B1){return D(v1,i,D1,B1)}function P(v1){return l[v1.getDay()]}function q(v1){return u[v1.getDay()]}function Y(v1){return s[v1.getMonth()]}function z(v1){return a[v1.getMonth()]}function G(v1){return o[+(v1.getHours()>=12)]}function Q(v1){return 1+~~(v1.getMonth()/3)}function n1(v1){return l[v1.getUTCDay()]}function l1(v1){return u[v1.getUTCDay()]}function d1(v1){return s[v1.getUTCMonth()]}function x1(v1){return a[v1.getUTCMonth()]}function j1(v1){return o[+(v1.getUTCHours()>=12)]}function M1(v1){return 1+~~(v1.getUTCMonth()/3)}return{format:function(v1){var D1=M(v1+="",A);return D1.toString=function(){return v1},D1},parse:function(v1){var D1=T(v1+="",!1);return D1.toString=function(){return v1},D1},utcFormat:function(v1){var D1=M(v1+="",C);return D1.toString=function(){return v1},D1},utcParse:function(v1){var D1=T(v1+="",!0);return D1.toString=function(){return v1},D1}}}var zD={"-":"",_:" ",0:"0"},ze=/^\s*\d+/,v01=/^%/,b01=/[\\^$*+?|[\]().{}]/g;function pt(t,e,n){var i=t<0?"-":"",o=(i?-t:t)+"",u=o.length;return i+(u<n?new Array(n-u+1).join(e)+o:o)}function x01(t){return t.replace(b01,"\\$&")}function M9(t){return new RegExp("^(?:"+t.map(x01).join("|")+")","i")}function N9(t){return new Map(t.map((e,n)=>[e.toLowerCase(),n]))}function _01(t,e,n){var i=ze.exec(e.slice(n,n+1));return i?(t.w=+i[0],n+i[0].length):-1}function w01(t,e,n){var i=ze.exec(e.slice(n,n+1));return i?(t.u=+i[0],n+i[0].length):-1}function E01(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.U=+i[0],n+i[0].length):-1}function S01(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.V=+i[0],n+i[0].length):-1}function A01(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.W=+i[0],n+i[0].length):-1}function LD(t,e,n){var i=ze.exec(e.slice(n,n+4));return i?(t.y=+i[0],n+i[0].length):-1}function jD(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.y=+i[0]+(+i[0]>68?1900:2e3),n+i[0].length):-1}function C01(t,e,n){var i=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(e.slice(n,n+6));return i?(t.Z=i[1]?0:-(i[2]+(i[3]||"00")),n+i[0].length):-1}function k01(t,e,n){var i=ze.exec(e.slice(n,n+1));return i?(t.q=i[0]*3-3,n+i[0].length):-1}function T01(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.m=i[0]-1,n+i[0].length):-1}function PD(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.d=+i[0],n+i[0].length):-1}function $01(t,e,n){var i=ze.exec(e.slice(n,n+3));return i?(t.m=0,t.d=+i[0],n+i[0].length):-1}function ID(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.H=+i[0],n+i[0].length):-1}function M01(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.M=+i[0],n+i[0].length):-1}function N01(t,e,n){var i=ze.exec(e.slice(n,n+2));return i?(t.S=+i[0],n+i[0].length):-1}function R01(t,e,n){var i=ze.exec(e.slice(n,n+3));return i?(t.L=+i[0],n+i[0].length):-1}function D01(t,e,n){var i=ze.exec(e.slice(n,n+6));return i?(t.L=Math.floor(i[0]/1e3),n+i[0].length):-1}function O01(t,e,n){var i=v01.exec(e.slice(n,n+1));return i?n+i[0].length:-1}function F01(t,e,n){var i=ze.exec(e.slice(n));return i?(t.Q=+i[0],n+i[0].length):-1}function z01(t,e,n){var i=ze.exec(e.slice(n));return i?(t.s=+i[0],n+i[0].length):-1}function BD(t,e){return pt(t.getDate(),e,2)}function L01(t,e){return pt(t.getHours(),e,2)}function j01(t,e){return pt(t.getHours()%12||12,e,2)}function P01(t,e){return pt(1+Io.count(wi(t),t),e,3)}function xU(t,e){return pt(t.getMilliseconds(),e,3)}function I01(t,e){return xU(t,e)+"000"}function B01(t,e){return pt(t.getMonth()+1,e,2)}function U01(t,e){return pt(t.getMinutes(),e,2)}function q01(t,e){return pt(t.getSeconds(),e,2)}function H01(t){var e=t.getDay();return e===0?7:e}function G01(t,e){return pt(ea.count(wi(t)-1,t),e,2)}function _U(t){var e=t.getDay();return e>=4||e===0?fl(t):fl.ceil(t)}function W01(t,e){return t=_U(t),pt(fl.count(wi(t),t)+(wi(t).getDay()===4),e,2)}function Y01(t){return t.getDay()}function V01(t,e){return pt(Ed.count(wi(t)-1,t),e,2)}function X01(t,e){return pt(t.getFullYear()%100,e,2)}function K01(t,e){return t=_U(t),pt(t.getFullYear()%100,e,2)}function Q01(t,e){return pt(t.getFullYear()%1e4,e,4)}function Z01(t,e){var n=t.getDay();return t=n>=4||n===0?fl(t):fl.ceil(t),pt(t.getFullYear()%1e4,e,4)}function J01(t){var e=t.getTimezoneOffset();return(e>0?"-":(e*=-1,"+"))+pt(e/60|0,"0",2)+pt(e%60,"0",2)}function UD(t,e){return pt(t.getUTCDate(),e,2)}function t61(t,e){return pt(t.getUTCHours(),e,2)}function e61(t,e){return pt(t.getUTCHours()%12||12,e,2)}function n61(t,e){return pt(1+ru.count(Ei(t),t),e,3)}function wU(t,e){return pt(t.getUTCMilliseconds(),e,3)}function i61(t,e){return wU(t,e)+"000"}function o61(t,e){return pt(t.getUTCMonth()+1,e,2)}function u61(t,e){return pt(t.getUTCMinutes(),e,2)}function l61(t,e){return pt(t.getUTCSeconds(),e,2)}function a61(t){var e=t.getUTCDay();return e===0?7:e}function r61(t,e){return pt(na.count(Ei(t)-1,t),e,2)}function EU(t){var e=t.getUTCDay();return e>=4||e===0?gl(t):gl.ceil(t)}function s61(t,e){return t=EU(t),pt(gl.count(Ei(t),t)+(Ei(t).getUTCDay()===4),e,2)}function c61(t){return t.getUTCDay()}function d61(t,e){return pt(Sd.count(Ei(t)-1,t),e,2)}function f61(t,e){return pt(t.getUTCFullYear()%100,e,2)}function g61(t,e){return t=EU(t),pt(t.getUTCFullYear()%100,e,2)}function h61(t,e){return pt(t.getUTCFullYear()%1e4,e,4)}function p61(t,e){var n=t.getUTCDay();return t=n>=4||n===0?gl(t):gl.ceil(t),pt(t.getUTCFullYear()%1e4,e,4)}function m61(){return"+0000"}function qD(){return"%"}function HD(t){return+t}function GD(t){return Math.floor(+t/1e3)}var S5,kE,SU,TE,AU;y61({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function y61(t){return S5=bU(t),kE=S5.format,SU=S5.parse,TE=S5.utcFormat,AU=S5.utcParse,S5}function lr(t){const e={};return n=>e[n]||(e[n]=t(n))}function v61(t,e){return n=>{const i=t(n),o=i.indexOf(e);if(o<0)return i;let u=b61(i,o);const l=u<i.length?i.slice(u):"";for(;--u>o;)if(i[u]!=="0"){++u;break}return i.slice(0,u)+l}}function b61(t,e){let n=t.lastIndexOf("e"),i;if(n>0)return n;for(n=t.length;--n>e;)if(i=t.charCodeAt(n),i>=48&&i<=57)return n+1}function CU(t){const e=lr(t.format),n=t.formatPrefix;return{format:e,formatPrefix:n,formatFloat(i){const o=G0(i||",");if(o.precision==null){switch(o.precision=12,o.type){case"%":o.precision-=2;break;case"e":o.precision-=1;break}return v61(e(o),e(".1f")(1)[1])}else return e(o)},formatSpan(i,o,u,l){l=G0(l??",f");const a=pu(i,o,u),s=Math.max(Math.abs(i),Math.abs(o));let c;if(l.precision==null)switch(l.type){case"s":return isNaN(c=KB(a,s))||(l.precision=c),n(l,s);case"":case"e":case"g":case"p":case"r":{isNaN(c=QB(a,s))||(l.precision=c-(l.type==="e"));break}case"f":case"%":{isNaN(c=XB(a))||(l.precision=c-(l.type==="%")*2);break}}return e(l)}}}let vx;kU();function kU(){return vx=CU({format:fg,formatPrefix:wE})}function TU(t){return CU(VB(t))}function Ad(t){return arguments.length?vx=TU(t):vx}function WD(t,e,n){n=n||{},E1(n)||u1(`Invalid time multi-format specifier: ${n}`);const i=e(u3),o=e(T2),u=e(k2),l=e(t2),a=e(ve),s=e(pn),c=e(Jn),f=e(Ye),g=t(n[O3]||".%L"),p=t(n[u3]||":%S"),m=t(n[T2]||"%I:%M"),v=t(n[k2]||"%I %p"),b=t(n[t2]||n[cn]||"%a %d"),x=t(n[ve]||"%b %d"),w=t(n[pn]||"%B"),S=t(n[Jn]||"%B"),A=t(n[Ye]||"%Y");return C=>(i(C)<C?g:o(C)<C?p:u(C)<C?m:l(C)<C?v:s(C)<C?a(C)<C?b:x:f(C)<C?c(C)<C?w:S:A)(C)}function $U(t){const e=lr(t.format),n=lr(t.utcFormat);return{timeFormat:i=>w1(i)?e(i):WD(e,ia,i),utcFormat:i=>w1(i)?n(i):WD(n,oa,i),timeParse:lr(t.parse),utcParse:lr(t.utcParse)}}let bx;MU();function MU(){return bx=$U({format:kE,parse:SU,utcFormat:TE,utcParse:AU})}function NU(t){return $U(bU(t))}function Yr(t){return arguments.length?bx=NU(t):bx}const xx=(t,e)=>K1({},t,e);function RU(t,e){const n=t?TU(t):Ad(),i=e?NU(e):Yr();return xx(n,i)}function $E(t,e){const n=arguments.length;return n&&n!==2&&u1("defaultLocale expects either zero or two arguments."),n?xx(Ad(t),Yr(e)):xx(Ad(),Yr())}function x61(){return kU(),MU(),$E()}const _61=/^(data:|([A-Za-z]+:)?\/\/)/,w61=/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file|data):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i,E61=/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205f\u3000]/g,YD="file://";function S61(t){return e=>({options:e||{},sanitize:C61,load:A61,fileAccess:!1,file:k61(),http:$61})}async function A61(t,e){const n=await this.sanitize(t,e),i=n.href;return n.localFile?this.file(i):this.http(i,e?.http)}async function C61(t,e){e=K1({},this.options,e);const n=this.fileAccess,i={href:null};let o,u,l;const a=w61.test(t.replace(E61,""));(t==null||typeof t!="string"||!a)&&u1("Sanitize failure, invalid URI: "+y1(t));const s=_61.test(t);return(l=e.baseURL)&&!s&&(!t.startsWith("/")&&!l.endsWith("/")&&(t="/"+t),t=l+t),u=(o=t.startsWith(YD))||e.mode==="file"||e.mode!=="http"&&!s&&n,o?t=t.slice(YD.length):t.startsWith("//")&&(e.defaultProtocol==="file"?(t=t.slice(2),u=!0):t=(e.defaultProtocol||"http")+":"+t),Object.defineProperty(i,"localFile",{value:!!u}),i.href=t,e.target&&(i.target=e.target+""),e.rel&&(i.rel=e.rel+""),e.context==="image"&&e.crossOrigin&&(i.crossOrigin=e.crossOrigin+""),i}function k61(t){return T61}async function T61(){u1("No file system access.")}async function $61(t,e){const n=K1({},this.options.http,e),i=e&&e.response,o=await fetch(t,n);return o.ok?Q1(o[i])?o[i]():o.text():u1(o.status+""+o.statusText)}const M61=t=>t!=null&&t===t,N61=t=>t==="true"||t==="false"||t===!0||t===!1,R61=t=>!Number.isNaN(Date.parse(t)),DU=t=>!Number.isNaN(+t)&&!(t instanceof Date),D61=t=>DU(t)&&Number.isInteger(+t),_x={boolean:vE,integer:fn,number:fn,date:bE,string:xE,unknown:vn},Ys=[N61,D61,DU,R61],O61=["boolean","integer","number","date"];function OU(t,e){if(!t||!t.length)return"unknown";const n=t.length,i=Ys.length,o=Ys.map((u,l)=>l+1);for(let u=0,l=0,a,s;u<n;++u)for(s=e?t[u][e]:t[u],a=0;a<i;++a)if(o[a]&&M61(s)&&!Ys[a](s)&&(o[a]=0,++l,l===Ys.length))return"string";return O61[o.reduce((u,l)=>u===0?l:u,0)-1]}function FU(t,e){return e.reduce((n,i)=>(n[i]=OU(t,i),n),{})}function VD(t){const e=function(n,i){const o={delimiter:t};return ME(n,i?K1(i,o):o)};return e.responseType="text",e}function ME(t,e){return e.header&&(t=e.header.map(y1).join(e.delimiter)+`
`+t),yu1(e.delimiter).parse(t+"")}ME.responseType="text";function F61(t){return typeof Buffer=="function"&&Q1(Buffer.isBuffer)?Buffer.isBuffer(t):!1}function NE(t,e){const n=e&&e.property?i3(e.property):vn;return E1(t)&&!F61(t)?z61(n(t),e):n(JSON.parse(t))}NE.responseType="json";function z61(t,e){return!r1(t)&&CB(t)&&(t=[...t]),e&&e.copy?JSON.parse(JSON.stringify(t)):t}const L61={interior:(t,e)=>t!==e,exterior:(t,e)=>t===e};function zU(t,e){let n,i,o,u;return t=NE(t,e),e&&e.feature?(n=DB,o=e.feature):e&&e.mesh?(n=FB,o=e.mesh,u=L61[e.filter]):u1("Missing TopoJSON feature or mesh parameter."),i=(i=t.objects[o])?n(t,i,u):u1("Invalid TopoJSON object: "+o),i&&i.features||[i]}zU.responseType="json";const zc={dsv:ME,csv:VD(","),tsv:VD("	"),json:NE,topojson:zU};function RE(t,e){return arguments.length>1?(zc[t]=e,this):A1(zc,t)?zc[t]:null}function LU(t){const e=RE(t);return e&&e.responseType||"text"}function jU(t,e,n,i){e=e||{};const o=RE(e.type||"json");return o||u1("Unknown data format type: "+e.type),t=o(t,e),e.parse&&j61(t,e.parse,n,i),A1(t,"columns")&&delete t.columns,t}function j61(t,e,n,i){if(!t.length)return;const o=Yr();n=n||o.timeParse,i=i||o.utcParse;let u=t.columns||Object.keys(t[0]),l,a,s,c,f,g;e==="auto"&&(e=FU(t,u)),u=Object.keys(e);const p=u.map(m=>{const v=e[m];let b,x;if(v&&(v.startsWith("date:")||v.startsWith("utc:")))return b=v.split(/:(.+)?/,2),x=b[1],(x[0]==="'"&&x[x.length-1]==="'"||x[0]==='"'&&x[x.length-1]==='"')&&(x=x.slice(1,-1)),(b[0]==="utc"?i:n)(x);if(!_x[v])throw Error("Illegal format pattern: "+m+":"+v);return _x[v]});for(s=0,f=t.length,g=u.length;s<f;++s)for(l=t[s],c=0;c<g;++c)a=u[c],l[a]=p[c](l[a])}const vg=S61();function bg(t){const e=t||vn,n=[],i={};return n.add=o=>{const u=e(o);return i[u]||(i[u]=1,n.push(o)),n},n.remove=o=>{const u=e(o);if(i[u]){i[u]=0;const l=n.indexOf(o);l>=0&&n.splice(l,1)}return n},n}async function Lc(t,e){try{await e(t)}catch(n){t.error(n)}}const PU=Symbol("vega_id");let P61=1;function xg(t){return!!(t&&z1(t))}function z1(t){return t[PU]}function IU(t,e){return t[PU]=e,t}function vt(t){const e=t===Object(t)?t:{data:t};return z1(e)?e:IU(e,P61++)}function DE(t){return _g(t,vt({}))}function _g(t,e){for(const n in t)e[n]=t[n];return e}function BU(t,e){return IU(e,z1(t))}function b6(t,e){return t?e?(n,i)=>t(n,i)||z1(e(n))-z1(e(i)):(n,i)=>t(n,i)||z1(n)-z1(i):null}function UU(t){return t&&t.constructor===x6}function x6(){const t=[],e=[],n=[],i=[],o=[];let u=null,l=!1;return{constructor:x6,insert(a){const s=S1(a),c=s.length;for(let f=0;f<c;++f)t.push(s[f]);return this},remove(a){const s=Q1(a)?i:e,c=S1(a),f=c.length;for(let g=0;g<f;++g)s.push(c[g]);return this},modify(a,s,c){const f={field:s,value:bn(c)};return Q1(a)?(f.filter=a,o.push(f)):(f.tuple=a,n.push(f)),this},encode(a,s){return Q1(a)?o.push({filter:a,field:s}):n.push({tuple:a,field:s}),this},clean(a){return u=a,this},reflow(){return l=!0,this},pulse(a,s){const c={},f={};let g,p,m,v,b,x;for(g=0,p=s.length;g<p;++g)c[z1(s[g])]=1;for(g=0,p=e.length;g<p;++g)b=e[g],c[z1(b)]=-1;for(g=0,p=i.length;g<p;++g)v=i[g],s.forEach(S=>{v(S)&&(c[z1(S)]=-1)});for(g=0,p=t.length;g<p;++g)b=t[g],x=z1(b),c[x]?c[x]=1:a.add.push(vt(t[g]));for(g=0,p=s.length;g<p;++g)b=s[g],c[z1(b)]<0&&a.rem.push(b);function w(S,A,C){C?S[A]=C(S):a.encode=A,l||(f[z1(S)]=S)}for(g=0,p=n.length;g<p;++g)m=n[g],b=m.tuple,v=m.field,x=c[z1(b)],x>0&&(w(b,v,m.value),a.modifies(v));for(g=0,p=o.length;g<p;++g)m=o[g],v=m.filter,s.forEach(S=>{v(S)&&c[z1(S)]>0&&w(S,m.field,m.value)}),a.modifies(m.field);if(l)a.mod=e.length||i.length?s.filter(S=>c[z1(S)]>0):s.slice();else for(x in f)a.mod.push(f[x]);return(u||u==null&&(e.length||i.length))&&a.clean(!0),a}}}const jc="_:mod:_";function wg(){Object.defineProperty(this,jc,{writable:!0,value:{}})}wg.prototype={set(t,e,n,i){const o=this,u=o[t],l=o[jc];return e!=null&&e>=0?(u[e]!==n||i)&&(u[e]=n,l[e+":"+t]=-1,l[t]=-1):(u!==n||i)&&(o[t]=n,l[t]=r1(n)?1+n.length:-1),o},modified(t,e){const n=this[jc];if(arguments.length){if(r1(t)){for(let i=0;i<t.length;++i)if(n[t[i]])return!0;return!1}}else{for(const i in n)if(n[i])return!0;return!1}return e!=null&&e>=0?e+1<n[t]||!!n[e+":"+t]:!!n[t]},clear(){return this[jc]={},this}};let I61=0;const B61="pulse",U61=new wg,q61=1,H61=2;function Dt(t,e,n,i){this.id=++I61,this.value=t,this.stamp=-1,this.rank=-1,this.qrank=-1,this.flags=0,e&&(this._update=e),n&&this.parameters(n,i)}function XD(t){return function(e){const n=this.flags;return arguments.length===0?!!(n&t):(this.flags=e?n|t:n&~t,this)}}Dt.prototype={targets(){return this._targets||(this._targets=bg(D8))},set(t){return this.value!==t?(this.value=t,1):0},skip:XD(q61),modified:XD(H61),parameters(t,e,n){e=e!==!1;const i=this._argval=this._argval||new wg,o=this._argops=this._argops||[],u=[];let l,a,s,c;const f=(g,p,m)=>{m instanceof Dt?(m!==this&&(e&&m.targets().add(this),u.push(m)),o.push({op:m,name:g,index:p})):i.set(g,p,m)};for(l in t)if(a=t[l],l===B61)S1(a).forEach(g=>{g instanceof Dt?g!==this&&(g.targets().add(this),u.push(g)):u1("Pulse parameters must be operator instances.")}),this.source=a;else if(r1(a))for(i.set(l,-1,Array(s=a.length)),c=0;c<s;++c)f(l,c,a[c]);else f(l,-1,a);return this.marshall().clear(),n&&(o.initonly=!0),u},marshall(t){const e=this._argval||U61,n=this._argops;let i,o,u,l;if(n){const a=n.length;for(o=0;o<a;++o)i=n[o],u=i.op,l=u.modified()&&u.stamp===t,e.set(i.name,i.index,u.value,l);if(n.initonly){for(o=0;o<a;++o)i=n[o],i.op.targets().remove(this);this._argops=null,this._update=null}}return e},detach(){const t=this._argops;let e,n,i,o;if(t)for(e=0,n=t.length;e<n;++e)i=t[e],o=i.op,o._targets&&o._targets.remove(this);this.pulse=null,this.source=null},evaluate(t){const e=this._update;if(e){const n=this.marshall(t.stamp),i=e.call(this,n,t);if(n.clear(),i!==this.value)this.value=i;else if(!this.modified())return t.StopPropagation}},run(t){if(t.stamp<this.stamp)return t.StopPropagation;let e;return this.skip()?(this.skip(!1),e=0):e=this.evaluate(t),this.pulse=e||t}};function G61(t,e,n,i){let o=1,u;return t instanceof Dt?u=t:t&&t.prototype instanceof Dt?u=new t:Q1(t)?u=new Dt(null,t):(o=0,u=new Dt(t,e)),this.rank(u),o&&(i=n,n=e),n&&this.connect(u,u.parameters(n,i)),this.touch(u),u}function W61(t,e){const n=t.rank,i=e.length;for(let o=0;o<i;++o)if(n<e[o].rank){this.rerank(t);return}}let Y61=0;function Eg(t,e,n){this.id=++Y61,this.value=null,n&&(this.receive=n),t&&(this._filter=t),e&&(this._apply=e)}function B4(t,e,n){return new Eg(t,e,n)}Eg.prototype={_filter:o3,_apply:vn,targets(){return this._targets||(this._targets=bg(D8))},consume(t){return arguments.length?(this._consume=!!t,this):!!this._consume},receive(t){if(this._filter(t)){const e=this.value=this._apply(t),n=this._targets,i=n?n.length:0;for(let o=0;o<i;++o)n[o].receive(e);this._consume&&(t.preventDefault(),t.stopPropagation())}},filter(t){const e=B4(t);return this.targets().add(e),e},apply(t){const e=B4(null,t);return this.targets().add(e),e},merge(){const t=B4();this.targets().add(t);for(let e=0,n=arguments.length;e<n;++e)arguments[e].targets().add(t);return t},throttle(t){let e=-1;return this.filter(()=>{const n=Date.now();return n-e>t?(e=n,1):0})},debounce(t){const e=B4();return this.targets().add(B4(null,null,pE(t,n=>{const i=n.dataflow;e.receive(n),i&&i.run&&i.run()}))),e},between(t,e){let n=!1;return t.targets().add(B4(null,null,()=>n=!0)),e.targets().add(B4(null,null,()=>n=!1)),this.filter(()=>n)},detach(){this._filter=o3,this._targets=null}};function V61(t,e,n,i){const o=this,u=B4(n,i),l=function(c){c.dataflow=o;try{u.receive(c)}catch(f){o.error(f)}finally{o.run()}};let a;typeof t=="string"&&typeof document<"u"?a=document.querySelectorAll(t):a=S1(t);const s=a.length;for(let c=0;c<s;++c)a[c].addEventListener(e,l);return u}function X61(t,e){const n=this.locale();return jU(t,e,n.timeParse,n.utcParse)}function K61(t,e,n){return e=this.parse(e,n),this.pulse(t,this.changeset().insert(e))}async function Q61(t,e){const n=this;let i=0,o;try{o=await n.loader().load(t,{context:"dataflow",response:LU(e&&e.type)});try{o=n.parse(o,e)}catch(u){i=-2,n.warn("Data ingestion failed",t,u)}}catch(u){i=-1,n.warn("Loading failed",t,u)}return{data:o,status:i}}async function Z61(t,e,n){const i=this,o=i._pending||J61(i);o.requests+=1;const u=await i.request(e,n);return i.pulse(t,i.changeset().remove(o3).insert(u.data||[])),o.done(),u}function J61(t){let e;const n=new Promise(i=>e=i);return n.requests=0,n.done=()=>{--n.requests===0&&(t._pending=null,e(t))},t._pending=n}const t51={skip:!0};function e51(t,e,n,i,o){return(t instanceof Dt?i51:n51)(this,t,e,n,i,o),this}function n51(t,e,n,i,o,u){const l=K1({},u,t51);let a,s;Q1(n)||(n=bn(n)),i===void 0?a=c=>t.touch(n(c)):Q1(i)?(s=new Dt(null,i,o,!1),a=c=>{s.evaluate(c);const f=n(c),g=s.value;UU(g)?t.pulse(f,g,u):t.update(f,g,l)}):a=c=>t.update(n(c),i,l),e.apply(a)}function i51(t,e,n,i,o,u){if(i===void 0)e.targets().add(n);else{const l=u||{},a=new Dt(null,o51(n,i),o,!1);a.modified(l.force),a.rank=e.rank,e.targets().add(a),n&&(a.skip(!0),a.value=n.value,a.targets().add(n),t.connect(n,[a]))}}function o51(t,e){return e=Q1(e)?e:bn(e),t?function(n,i){const o=e(n,i);return t.skip()||(t.skip(o!==this.value).value=o),o}:e}function u51(t){t.rank=++this._rank}function l51(t){const e=[t];let n,i,o;for(;e.length;)if(this.rank(n=e.pop()),i=n._targets)for(o=i.length;--o>=0;)e.push(n=i[o]),n===t&&u1("Cycle detected in dataflow graph.")}const Cd={},ui=1,G4=2,xo=4,a51=ui|G4,KD=ui|xo,A5=ui|G4|xo,QD=8,R9=16,ZD=32,JD=64;function su(t,e,n){this.dataflow=t,this.stamp=e??-1,this.add=[],this.rem=[],this.mod=[],this.fields=null,this.encode=n||null}function fv(t,e){const n=[];return H4(t,e,i=>n.push(i)),n}function tO(t,e){const n={};return t.visit(e,i=>{n[z1(i)]=1}),i=>n[z1(i)]?null:i}function Vs(t,e){return t?(n,i)=>t(n,i)&&e(n,i):e}su.prototype={StopPropagation:Cd,ADD:ui,REM:G4,MOD:xo,ADD_REM:a51,ADD_MOD:KD,ALL:A5,REFLOW:QD,SOURCE:R9,NO_SOURCE:ZD,NO_FIELDS:JD,fork(t){return new su(this.dataflow).init(this,t)},clone(){const t=this.fork(A5);return t.add=t.add.slice(),t.rem=t.rem.slice(),t.mod=t.mod.slice(),t.source&&(t.source=t.source.slice()),t.materialize(A5|R9)},addAll(){let t=this;return!t.source||t.add===t.rem||!t.rem.length&&t.source.length===t.add.length||(t=new su(this.dataflow).init(this),t.add=t.source,t.rem=[]),t},init(t,e){const n=this;return n.stamp=t.stamp,n.encode=t.encode,t.fields&&!(e&JD)&&(n.fields=t.fields),e&ui?(n.addF=t.addF,n.add=t.add):(n.addF=null,n.add=[]),e&G4?(n.remF=t.remF,n.rem=t.rem):(n.remF=null,n.rem=[]),e&xo?(n.modF=t.modF,n.mod=t.mod):(n.modF=null,n.mod=[]),e&ZD?(n.srcF=null,n.source=null):(n.srcF=t.srcF,n.source=t.source,t.cleans&&(n.cleans=t.cleans)),n},runAfter(t){this.dataflow.runAfter(t)},changed(t){const e=t||A5;return e&ui&&this.add.length||e&G4&&this.rem.length||e&xo&&this.mod.length},reflow(t){if(t)return this.fork(A5).reflow();const e=this.add.length,n=this.source&&this.source.length;return n&&n!==e&&(this.mod=this.source,e&&this.filter(xo,tO(this,ui))),this},clean(t){return arguments.length?(this.cleans=!!t,this):this.cleans},modifies(t){const e=this.fields||(this.fields={});return r1(t)?t.forEach(n=>e[n]=!0):e[t]=!0,this},modified(t,e){const n=this.fields;return(e||this.mod.length)&&n?arguments.length?r1(t)?t.some(i=>n[i]):n[t]:!!n:!1},filter(t,e){const n=this;return t&ui&&(n.addF=Vs(n.addF,e)),t&G4&&(n.remF=Vs(n.remF,e)),t&xo&&(n.modF=Vs(n.modF,e)),t&R9&&(n.srcF=Vs(n.srcF,e)),n},materialize(t){t=t||A5;const e=this;return t&ui&&e.addF&&(e.add=fv(e.add,e.addF),e.addF=null),t&G4&&e.remF&&(e.rem=fv(e.rem,e.remF),e.remF=null),t&xo&&e.modF&&(e.mod=fv(e.mod,e.modF),e.modF=null),t&R9&&e.srcF&&(e.source=e.source.filter(e.srcF),e.srcF=null),e},visit(t,e){const n=this,i=e;if(t&R9)return H4(n.source,n.srcF,i),n;t&ui&&H4(n.add,n.addF,i),t&G4&&H4(n.rem,n.remF,i),t&xo&&H4(n.mod,n.modF,i);const o=n.source;if(t&QD&&o){const u=n.add.length+n.mod.length;u===o.length||(u?H4(o,tO(n,KD),i):H4(o,n.srcF,i))}return n}};function OE(t,e,n,i){const o=this;let u=0;this.dataflow=t,this.stamp=e,this.fields=null,this.encode=i||null,this.pulses=n;for(const l of n)if(l.stamp===e){if(l.fields){const a=o.fields||(o.fields={});for(const s in l.fields)a[s]=1}l.changed(o.ADD)&&(u|=o.ADD),l.changed(o.REM)&&(u|=o.REM),l.changed(o.MOD)&&(u|=o.MOD)}this.changes=u}b1(OE,su,{fork(t){const e=new su(this.dataflow).init(this,t&this.NO_FIELDS);return t!==void 0&&(t&e.ADD&&this.visit(e.ADD,n=>e.add.push(n)),t&e.REM&&this.visit(e.REM,n=>e.rem.push(n)),t&e.MOD&&this.visit(e.MOD,n=>e.mod.push(n))),e},changed(t){return this.changes&t},modified(t){const e=this,n=e.fields;return n&&e.changes&e.MOD?r1(t)?t.some(i=>n[i]):n[t]:0},filter(){u1("MultiPulse does not support filtering.")},materialize(){u1("MultiPulse does not support materialization.")},visit(t,e){const n=this,i=n.pulses,o=i.length;let u=0;if(t&n.SOURCE)for(;u<o;++u)i[u].visit(t,e);else for(;u<o;++u)i[u].stamp===n.stamp&&i[u].visit(t,e);return n}});async function r51(t,e,n){const i=this,o=[];if(i._pulse)return qU(i);if(i._pending&&await i._pending,e&&await Lc(i,e),!i._touched.length)return i.debug("Dataflow invoked, but nothing to do."),i;const u=++i._clock;i._pulse=new su(i,u,t),i._touched.forEach(f=>i._enqueue(f,!0)),i._touched=bg(D8);let l=0,a,s,c;try{for(;i._heap.size()>0;){if(a=i._heap.pop(),a.rank!==a.qrank){i._enqueue(a,!0);continue}s=a.run(i._getPulse(a,t)),s.then?s=await s:s.async&&(o.push(s.async),s=Cd),s!==Cd&&a._targets&&a._targets.forEach(f=>i._enqueue(f)),++l}}catch(f){i._heap.clear(),c=f}if(i._input={},i._pulse=null,i.debug(`Pulse ${u}: ${l} operators`),c&&(i._postrun=[],i.error(c)),i._postrun.length){const f=i._postrun.sort((g,p)=>p.priority-g.priority);i._postrun=[];for(let g=0;g<f.length;++g)await Lc(i,f[g].callback)}return n&&await Lc(i,n),o.length&&Promise.all(o).then(f=>i.runAsync(null,()=>{f.forEach(g=>{try{g(i)}catch(p){i.error(p)}})})),i}async function s51(t,e,n){for(;this._running;)await this._running;const i=()=>this._running=null;return(this._running=this.evaluate(t,e,n)).then(i,i),this._running}function c51(t,e,n){return this._pulse?qU(this):(this.evaluate(t,e,n),this)}function d51(t,e,n){if(this._pulse||e)this._postrun.push({priority:n||0,callback:t});else try{t(this)}catch(i){this.error(i)}}function qU(t){return t.error("Dataflow already running. Use runAsync() to chain invocations."),t}function f51(t,e){const n=t.stamp<this._clock;n&&(t.stamp=this._clock),(n||e)&&(t.qrank=t.rank,this._heap.push(t))}function g51(t,e){const n=t.source,i=this._clock;return n&&r1(n)?new OE(this,i,n.map(o=>o.pulse),e):this._input[t.id]||h51(this._pulse,n&&n.pulse)}function h51(t,e){return e&&e.stamp===t.stamp?e:(t=t.fork(),e&&e!==Cd&&(t.source=e.source),t)}const FE={skip:!1,force:!1};function p51(t,e){const n=e||FE;return this._pulse?this._enqueue(t):this._touched.add(t),n.skip&&t.skip(!0),this}function m51(t,e,n){const i=n||FE;return(t.set(e)||i.force)&&this.touch(t,i),this}function y51(t,e,n){this.touch(t,n||FE);const i=new su(this,this._clock+(this._pulse?0:1)),o=t.pulse&&t.pulse.source||[];return i.target=t,this._input[t.id]=e.pulse(i,o),this}function v51(t){let e=[];return{clear:()=>e=[],size:()=>e.length,peek:()=>e[0],push:n=>(e.push(n),HU(e,0,e.length-1,t)),pop:()=>{const n=e.pop();let i;return e.length?(i=e[0],e[0]=n,b51(e,0,t)):i=n,i}}}function HU(t,e,n,i){let o,u;const l=t[n];for(;n>e;){if(u=n-1>>1,o=t[u],i(l,o)<0){t[n]=o,n=u;continue}break}return t[n]=l}function b51(t,e,n){const i=e,o=t.length,u=t[e];let l=(e<<1)+1,a;for(;l<o;)a=l+1,a<o&&n(t[l],t[a])>=0&&(l=a),t[e]=t[l],e=l,l=(e<<1)+1;return t[e]=u,HU(t,i,e,n)}function X5(){this.logger(cE()),this.logLevel(rE),this._clock=0,this._rank=0,this._locale=$E();try{this._loader=vg()}catch{}this._touched=bg(D8),this._input={},this._pulse=null,this._heap=v51((t,e)=>t.qrank-e.qrank),this._postrun=[]}function D9(t){return function(){return this._log[t].apply(this,arguments)}}X5.prototype={stamp(){return this._clock},loader(t){return arguments.length?(this._loader=t,this):this._loader},locale(t){return arguments.length?(this._locale=t,this):this._locale},logger(t){return arguments.length?(this._log=t,this):this._log},error:D9("error"),warn:D9("warn"),info:D9("info"),debug:D9("debug"),logLevel:D9("level"),cleanThreshold:1e4,add:G61,connect:W61,rank:u51,rerank:l51,pulse:y51,touch:p51,update:m51,changeset:x6,ingest:K61,parse:X61,preload:Z61,request:Q61,events:V61,on:e51,evaluate:r51,run:c51,runAsync:s51,runAfter:d51,_enqueue:f51,_getPulse:g51};function i1(t,e){Dt.call(this,t,null,e)}b1(i1,Dt,{run(t){if(t.stamp<this.stamp)return t.StopPropagation;let e;return this.skip()?this.skip(!1):e=this.evaluate(t),e=e||t,e.then?e=e.then(n=>this.pulse=n):e!==t.StopPropagation&&(this.pulse=e),e},evaluate(t){const e=this.marshall(t.stamp),n=this.transform(e,t);return e.clear(),n},transform(){}});const pl={};function GU(t){const e=WU(t);return e&&e.Definition||null}function WU(t){return t=t&&t.toLowerCase(),A1(pl,t)?pl[t]:null}function*YU(t,e){if(e==null)for(let n of t)n!=null&&n!==""&&(n=+n)>=n&&(yield n);else{let n=-1;for(let i of t)i=e(i,++n,t),i!=null&&i!==""&&(i=+i)>=i&&(yield i)}}function zE(t,e,n){const i=Float64Array.from(YU(t,n));return i.sort(jo),e.map(o=>qB(i,o))}function LE(t,e){return zE(t,[.25,.5,.75],e)}function jE(t,e){const n=t.length,i=$u1(t,e),o=LE(t,e),u=(o[2]-o[0])/1.34;return 1.06*(Math.min(i,u)||i||Math.abs(o[0])||1)*Math.pow(n,-.2)}function VU(t){const e=t.maxbins||20,n=t.base||10,i=Math.log(n),o=t.divide||[5,2];let u=t.extent[0],l=t.extent[1],a,s,c,f,g,p;const m=t.span||l-u||Math.abs(u)||1;if(t.step)a=t.step;else if(t.steps){for(f=m/e,g=0,p=t.steps.length;g<p&&t.steps[g]<f;++g);a=t.steps[Math.max(0,g-1)]}else{for(s=Math.ceil(Math.log(e)/i),c=t.minstep||0,a=Math.max(c,Math.pow(n,Math.round(Math.log(m)/i)-s));Math.ceil(m/a)>e;)a*=n;for(g=0,p=o.length;g<p;++g)f=a/o[g],f>=c&&m/f<=e&&(a=f)}f=Math.log(a);const v=f>=0?0:~~(-f/i)+1,b=Math.pow(n,-v-1);return(t.nice||t.nice===void 0)&&(f=Math.floor(u/a+b)*a,u=u<f?f-a:f,l=Math.ceil(l/a)*a),{start:u,stop:l===u?u+a:l,step:a}}var l3=Math.random;function x51(t){l3=t}function XU(t,e,n,i){if(!t.length)return[void 0,void 0];const o=Float64Array.from(YU(t,i)),u=o.length,l=e;let a,s,c,f;for(c=0,f=Array(l);c<l;++c){for(a=0,s=0;s<u;++s)a+=o[~~(l3()*u)];f[c]=a/u}return f.sort(jo),[fx(f,n/2),fx(f,1-n/2)]}function KU(t,e,n,i){i=i||(p=>p);const o=t.length,u=new Float64Array(o);let l=0,a=1,s=i(t[0]),c=s,f=s+e,g;for(;a<o;++a){if(g=i(t[a]),g>=f){for(c=(s+c)/2;l<a;++l)u[l]=c;f=g+e,s=g}c=g}for(c=(s+c)/2;l<a;++l)u[l]=c;return n?_51(u,e+e/4):u}function _51(t,e){const n=t.length;let i=0,o=1,u,l;for(;t[i]===t[o];)++o;for(;o<n;){for(u=o+1;t[o]===t[u];)++u;if(t[o]-t[o-1]<e){for(l=o+(i+u-o-o>>1);l<o;)t[l++]=t[o];for(;l>o;)t[l--]=t[i]}i=o,o=u}return t}function w51(t){return function(){return t=(1103515245*t+12345)%2147483647,t/2147483647}}function E51(t,e){e==null&&(e=t,t=0);let n,i,o;const u={min(l){return arguments.length?(n=l||0,o=i-n,u):n},max(l){return arguments.length?(i=l||0,o=i-n,u):i},sample(){return n+Math.floor(o*l3())},pdf(l){return l===Math.floor(l)&&l>=n&&l<i?1/o:0},cdf(l){const a=Math.floor(l);return a<n?0:a>=i?1:(a-n+1)/o},icdf(l){return l>=0&&l<=1?n-1+Math.floor(l*o):NaN}};return u.min(t).max(e)}const QU=Math.sqrt(2*Math.PI),S51=Math.SQRT2;let O9=NaN;function Sg(t,e){t=t||0,e=e??1;let n=0,i=0,o,u;if(O9===O9)n=O9,O9=NaN;else{do n=l3()*2-1,i=l3()*2-1,o=n*n+i*i;while(o===0||o>1);u=Math.sqrt(-2*Math.log(o)/o),n*=u,O9=i*u}return t+n*e}function PE(t,e,n){n=n??1;const i=(t-(e||0))/n;return Math.exp(-.5*i*i)/(n*QU)}function Ag(t,e,n){e=e||0,n=n??1;const i=(t-e)/n,o=Math.abs(i);let u;if(o>37)u=0;else{const l=Math.exp(-o*o/2);let a;o<7.07106781186547?(a=.0352624965998911*o+.700383064443688,a=a*o+6.37396220353165,a=a*o+33.912866078383,a=a*o+112.079291497871,a=a*o+221.213596169931,a=a*o+220.206867912376,u=l*a,a=.0883883476483184*o+1.75566716318264,a=a*o+16.064177579207,a=a*o+86.7807322029461,a=a*o+296.564248779674,a=a*o+637.333633378831,a=a*o+793.826512519948,a=a*o+440.413735824752,u=u/a):(a=o+.65,a=o+4/a,a=o+3/a,a=o+2/a,a=o+1/a,u=l/a/2.506628274631)}return i>0?1-u:u}function Cg(t,e,n){return t<0||t>1?NaN:(e||0)+(n??1)*S51*A51(2*t-1)}function A51(t){let e=-Math.log((1-t)*(1+t)),n;return e<6.25?(e-=3.125,n=-364441206401782e-35,n=-16850591381820166e-35+n*e,n=128584807152564e-32+n*e,n=11157877678025181e-33+n*e,n=-1333171662854621e-31+n*e,n=20972767875968562e-33+n*e,n=6637638134358324e-30+n*e,n=-4054566272975207e-29+n*e,n=-8151934197605472e-29+n*e,n=26335093153082323e-28+n*e,n=-12975133253453532e-27+n*e,n=-5415412054294628e-26+n*e,n=10512122733215323e-25+n*e,n=-4112633980346984e-24+n*e,n=-29070369957882005e-24+n*e,n=42347877827932404e-23+n*e,n=-13654692000834679e-22+n*e,n=-13882523362786469e-21+n*e,n=.00018673420803405714+n*e,n=-.000740702534166267+n*e,n=-.006033670871430149+n*e,n=.24015818242558962+n*e,n=1.6536545626831027+n*e):e<16?(e=Math.sqrt(e)-3.25,n=22137376921775787e-25,n=9075656193888539e-23+n*e,n=-27517406297064545e-23+n*e,n=18239629214389228e-24+n*e,n=15027403968909828e-22+n*e,n=-4013867526981546e-21+n*e,n=29234449089955446e-22+n*e,n=12475304481671779e-21+n*e,n=-47318229009055734e-21+n*e,n=6828485145957318e-20+n*e,n=24031110387097894e-21+n*e,n=-.0003550375203628475+n*e,n=.0009532893797373805+n*e,n=-.0016882755560235047+n*e,n=.002491442096107851+n*e,n=-.003751208507569241+n*e,n=.005370914553590064+n*e,n=1.0052589676941592+n*e,n=3.0838856104922208+n*e):Number.isFinite(e)?(e=Math.sqrt(e)-5,n=-27109920616438573e-27,n=-2555641816996525e-25+n*e,n=15076572693500548e-25+n*e,n=-3789465440126737e-24+n*e,n=761570120807834e-23+n*e,n=-1496002662714924e-23+n*e,n=2914795345090108e-23+n*e,n=-6771199775845234e-23+n*e,n=22900482228026655e-23+n*e,n=-99298272942317e-20+n*e,n=4526062597223154e-21+n*e,n=-1968177810553167e-20+n*e,n=7599527703001776e-20+n*e,n=-.00021503011930044477+n*e,n=-.00013871931833623122+n*e,n=1.0103004648645344+n*e,n=4.849906401408584+n*e):n=1/0,n*t}function IE(t,e){let n,i;const o={mean(u){return arguments.length?(n=u||0,o):n},stdev(u){return arguments.length?(i=u??1,o):i},sample:()=>Sg(n,i),pdf:u=>PE(u,n,i),cdf:u=>Ag(u,n,i),icdf:u=>Cg(u,n,i)};return o.mean(t).stdev(e)}function BE(t,e){const n=IE();let i=0;const o={data(u){return arguments.length?(t=u,i=u?u.length:0,o.bandwidth(e)):t},bandwidth(u){return arguments.length?(e=u,!e&&t&&(e=jE(t)),o):e},sample(){return t[~~(l3()*i)]+e*n.sample()},pdf(u){let l=0,a=0;for(;a<i;++a)l+=n.pdf((u-t[a])/e);return l/e/i},cdf(u){let l=0,a=0;for(;a<i;++a)l+=n.cdf((u-t[a])/e);return l/i},icdf(){throw Error("KDE icdf not supported.")}};return o.data(t)}function UE(t,e){return t=t||0,e=e??1,Math.exp(t+Sg()*e)}function qE(t,e,n){if(t<=0)return 0;e=e||0,n=n??1;const i=(Math.log(t)-e)/n;return Math.exp(-.5*i*i)/(n*QU*t)}function HE(t,e,n){return Ag(Math.log(t),e,n)}function GE(t,e,n){return Math.exp(Cg(t,e,n))}function ZU(t,e){let n,i;const o={mean(u){return arguments.length?(n=u||0,o):n},stdev(u){return arguments.length?(i=u??1,o):i},sample:()=>UE(n,i),pdf:u=>qE(u,n,i),cdf:u=>HE(u,n,i),icdf:u=>GE(u,n,i)};return o.mean(t).stdev(e)}function JU(t,e){let n=0,i;function o(l){const a=[];let s=0,c;for(c=0;c<n;++c)s+=a[c]=l[c]==null?1:+l[c];for(c=0;c<n;++c)a[c]/=s;return a}const u={weights(l){return arguments.length?(i=o(e=l||[]),u):e},distributions(l){return arguments.length?(l?(n=l.length,t=l):(n=0,t=[]),u.weights(e)):t},sample(){const l=l3();let a=t[n-1],s=i[0],c=0;for(;c<n-1;s+=i[++c])if(l<s){a=t[c];break}return a.sample()},pdf(l){let a=0,s=0;for(;s<n;++s)a+=i[s]*t[s].pdf(l);return a},cdf(l){let a=0,s=0;for(;s<n;++s)a+=i[s]*t[s].cdf(l);return a},icdf(){throw Error("Mixture icdf not supported.")}};return u.distributions(t).weights(e)}function WE(t,e){return e==null&&(e=t??1,t=0),t+(e-t)*l3()}function YE(t,e,n){return n==null&&(n=e??1,e=0),t>=e&&t<=n?1/(n-e):0}function VE(t,e,n){return n==null&&(n=e??1,e=0),t<e?0:t>n?1:(t-e)/(n-e)}function XE(t,e,n){return n==null&&(n=e??1,e=0),t>=0&&t<=1?e+t*(n-e):NaN}function tq(t,e){let n,i;const o={min(u){return arguments.length?(n=u||0,o):n},max(u){return arguments.length?(i=u??1,o):i},sample:()=>WE(n,i),pdf:u=>YE(u,n,i),cdf:u=>VE(u,n,i),icdf:u=>XE(u,n,i)};return e==null&&(e=t??1,t=0),o.min(t).max(e)}function KE(t,e,n){let i=0,o=0;for(const u of t){const l=n(u);e(u)==null||l==null||isNaN(l)||(i+=(l-i)/++o)}return{coef:[i],predict:()=>i,rSquared:0}}function F8(t,e,n,i){const o=i-t*t,u=Math.abs(o)<1e-24?0:(n-t*e)/o;return[e-u*t,u]}function kg(t,e,n,i){t=t.filter(m=>{let v=e(m),b=n(m);return v!=null&&(v=+v)>=v&&b!=null&&(b=+b)>=b}),i&&t.sort((m,v)=>e(m)-e(v));const o=t.length,u=new Float64Array(o),l=new Float64Array(o);let a=0,s=0,c=0,f,g,p;for(p of t)u[a]=f=+e(p),l[a]=g=+n(p),++a,s+=(f-s)/a,c+=(g-c)/a;for(a=0;a<o;++a)u[a]-=s,l[a]-=c;return[u,l,s,c]}function z8(t,e,n,i){let o=-1,u,l;for(const a of t)u=e(a),l=n(a),u!=null&&(u=+u)>=u&&l!=null&&(l=+l)>=l&&i(u,l,++o)}function ua(t,e,n,i,o){let u=0,l=0;return z8(t,e,n,(a,s)=>{const c=s-o(a),f=s-i;u+=c*c,l+=f*f}),1-u/l}function QE(t,e,n){let i=0,o=0,u=0,l=0,a=0;z8(t,e,n,(f,g)=>{++a,i+=(f-i)/a,o+=(g-o)/a,u+=(f*g-u)/a,l+=(f*f-l)/a});const s=F8(i,o,u,l),c=f=>s[0]+s[1]*f;return{coef:s,predict:c,rSquared:ua(t,e,n,o,c)}}function eq(t,e,n){let i=0,o=0,u=0,l=0,a=0;z8(t,e,n,(f,g)=>{++a,f=Math.log(f),i+=(f-i)/a,o+=(g-o)/a,u+=(f*g-u)/a,l+=(f*f-l)/a});const s=F8(i,o,u,l),c=f=>s[0]+s[1]*Math.log(f);return{coef:s,predict:c,rSquared:ua(t,e,n,o,c)}}function nq(t,e,n){const[i,o,u,l]=kg(t,e,n);let a=0,s=0,c=0,f=0,g=0,p,m,v;z8(t,e,n,(S,A)=>{p=i[g++],m=Math.log(A),v=p*A,a+=(A*m-a)/g,s+=(v-s)/g,c+=(v*m-c)/g,f+=(p*v-f)/g});const[b,x]=F8(s/l,a/l,c/l,f/l),w=S=>Math.exp(b+x*(S-u));return{coef:[Math.exp(b-x*u),x],predict:w,rSquared:ua(t,e,n,l,w)}}function iq(t,e,n){let i=0,o=0,u=0,l=0,a=0,s=0;z8(t,e,n,(g,p)=>{const m=Math.log(g),v=Math.log(p);++s,i+=(m-i)/s,o+=(v-o)/s,u+=(m*v-u)/s,l+=(m*m-l)/s,a+=(p-a)/s});const c=F8(i,o,u,l),f=g=>c[0]*Math.pow(g,c[1]);return c[0]=Math.exp(c[0]),{coef:c,predict:f,rSquared:ua(t,e,n,a,f)}}function ZE(t,e,n){const[i,o,u,l]=kg(t,e,n),a=i.length;let s=0,c=0,f=0,g=0,p=0,m,v,b,x;for(m=0;m<a;)v=i[m],b=o[m++],x=v*v,s+=(x-s)/m,c+=(x*v-c)/m,f+=(x*x-f)/m,g+=(v*b-g)/m,p+=(x*b-p)/m;const w=f-s*s,S=s*w-c*c,A=(p*s-g*c)/S,C=(g*w-p*c)/S,k=-A*s,M=T=>(T=T-u,A*T*T+C*T+k+l);return{coef:[k-C*u+A*u*u+l,C-2*A*u,A],predict:M,rSquared:ua(t,e,n,l,M)}}function oq(t,e,n,i){if(i===0)return KE(t,e,n);if(i===1)return QE(t,e,n);if(i===2)return ZE(t,e,n);const[o,u,l,a]=kg(t,e,n),s=o.length,c=[],f=[],g=i+1;let p,m,v,b,x;for(p=0;p<g;++p){for(v=0,b=0;v<s;++v)b+=Math.pow(o[v],p)*u[v];for(c.push(b),x=new Float64Array(g),m=0;m<g;++m){for(v=0,b=0;v<s;++v)b+=Math.pow(o[v],p+m);x[m]=b}f.push(x)}f.push(c);const w=k51(f),S=A=>{A-=l;let C=a+w[0]+w[1]*A+w[2]*A*A;for(p=3;p<g;++p)C+=w[p]*Math.pow(A,p);return C};return{coef:C51(g,w,-l,a),predict:S,rSquared:ua(t,e,n,a,S)}}function C51(t,e,n,i){const o=Array(t);let u,l,a,s;for(u=0;u<t;++u)o[u]=0;for(u=t-1;u>=0;--u)for(a=e[u],s=1,o[u]+=a,l=1;l<=u;++l)s*=(u+1-l)/l,o[u-l]+=a*Math.pow(n,l)*s;return o[0]+=i,o}function k51(t){const e=t.length-1,n=[];let i,o,u,l,a;for(i=0;i<e;++i){for(l=i,o=i+1;o<e;++o)Math.abs(t[i][o])>Math.abs(t[i][l])&&(l=o);for(u=i;u<e+1;++u)a=t[u][i],t[u][i]=t[u][l],t[u][l]=a;for(o=i+1;o<e;++o)for(u=e;u>=i;u--)t[u][o]-=t[u][i]*t[i][o]/t[i][i]}for(o=e-1;o>=0;--o){for(a=0,u=o+1;u<e;++u)a+=t[u][o]*n[u];n[o]=(t[e][o]-a)/t[o][o]}return n}const eO=2,nO=1e-12;function uq(t,e,n,i){const[o,u,l,a]=kg(t,e,n,!0),s=o.length,c=Math.max(2,~~(i*s)),f=new Float64Array(s),g=new Float64Array(s),p=new Float64Array(s).fill(1);for(let m=-1;++m<=eO;){const v=[0,c-1];for(let x=0;x<s;++x){const w=o[x],S=v[0],A=v[1],C=w-o[S]>o[A]-w?S:A;let k=0,M=0,T=0,D=0,I=0;const U=1/Math.abs(o[C]-w||1);for(let W=S;W<=A;++W){const O=o[W],j=u[W],R=T51(Math.abs(w-O)*U)*p[W],P=O*R;k+=R,M+=P,T+=j*R,D+=j*P,I+=O*P}const[B,V]=F8(M/k,T/k,D/k,I/k);f[x]=B+V*w,g[x]=Math.abs(u[x]-f[x]),$51(o,x+1,v)}if(m===eO)break;const b=HB(g);if(Math.abs(b)<nO)break;for(let x=0,w,S;x<s;++x)w=g[x]/(6*b),p[x]=w>=1?nO:(S=1-w*w)*S}return M51(o,f,l,a)}function T51(t){return(t=1-t*t*t)*t*t}function $51(t,e,n){const i=t[e];let o=n[0],u=n[1]+1;if(!(u>=t.length))for(;e>o&&t[u]-i<=i-t[o];)n[0]=++o,n[1]=u,++u}function M51(t,e,n,i){const o=t.length,u=[];let l=0,a=0,s=[],c;for(;l<o;++l)c=t[l]+n,s[0]===c?s[1]+=(e[l]-s[1])/++a:(a=0,s[1]+=i,s=[c,e[l]],u.push(s));return s[1]+=i,u}const N51=.5*Math.PI/180;function Tg(t,e,n,i){n=n||25,i=Math.max(n,i||200);const o=b=>[b,t(b)],u=e[0],l=e[1],a=l-u,s=a/i,c=[o(u)],f=[];if(n===i){for(let b=1;b<i;++b)c.push(o(u+b/n*a));return c.push(o(l)),c}else{f.push(o(l));for(let b=n;--b>0;)f.push(o(u+b/n*a))}let g=c[0],p=f[f.length-1];const m=1/a,v=R51(g[1],f);for(;p;){const b=o((g[0]+p[0])/2);b[0]-g[0]>=s&&D51(g,b,p,m,v)>N51?f.push(b):(g=p,c.push(p),f.pop()),p=f[f.length-1]}return c}function R51(t,e){let n=t,i=t;const o=e.length;for(let u=0;u<o;++u){const l=e[u][1];l<n&&(n=l),l>i&&(i=l)}return 1/(i-n)}function D51(t,e,n,i,o){const u=Math.atan2(o*(n[1]-t[1]),i*(n[0]-t[0])),l=Math.atan2(o*(e[1]-t[1]),i*(e[0]-t[0]));return Math.abs(u-l)}function O51(t){return e=>{const n=t.length;let i=1,o=String(t[0](e));for(;i<n;++i)o+="|"+t[i](e);return o}}function wx(t){return!t||!t.length?function(){return""}:t.length===1?t[0]:O51(t)}function lq(t,e,n){return n||t+(e?"_"+e:"")}const gv=()=>{},F51={init:gv,add:gv,rem:gv,idx:0},Vr={values:{init:t=>t.cell.store=!0,value:t=>t.cell.data.values(),idx:-1},count:{value:t=>t.cell.num},__count__:{value:t=>t.missing+t.valid},missing:{value:t=>t.missing},valid:{value:t=>t.valid},sum:{init:t=>t.sum=0,value:t=>t.valid?t.sum:void 0,add:(t,e)=>t.sum+=+e,rem:(t,e)=>t.sum-=e},product:{init:t=>t.product=1,value:t=>t.valid?t.product:void 0,add:(t,e)=>t.product*=e,rem:(t,e)=>t.product/=e},mean:{init:t=>t.mean=0,value:t=>t.valid?t.mean:void 0,add:(t,e)=>(t.mean_d=e-t.mean,t.mean+=t.mean_d/t.valid),rem:(t,e)=>(t.mean_d=e-t.mean,t.mean-=t.valid?t.mean_d/t.valid:t.mean)},average:{value:t=>t.valid?t.mean:void 0,req:["mean"],idx:1},variance:{init:t=>t.dev=0,value:t=>t.valid>1?t.dev/(t.valid-1):void 0,add:(t,e)=>t.dev+=t.mean_d*(e-t.mean),rem:(t,e)=>t.dev-=t.mean_d*(e-t.mean),req:["mean"],idx:1},variancep:{value:t=>t.valid>1?t.dev/t.valid:void 0,req:["variance"],idx:2},stdev:{value:t=>t.valid>1?Math.sqrt(t.dev/(t.valid-1)):void 0,req:["variance"],idx:2},stdevp:{value:t=>t.valid>1?Math.sqrt(t.dev/t.valid):void 0,req:["variance"],idx:2},stderr:{value:t=>t.valid>1?Math.sqrt(t.dev/(t.valid*(t.valid-1))):void 0,req:["variance"],idx:2},distinct:{value:t=>t.cell.data.distinct(t.get),req:["values"],idx:3},ci0:{value:t=>t.cell.data.ci0(t.get),req:["values"],idx:3},ci1:{value:t=>t.cell.data.ci1(t.get),req:["values"],idx:3},median:{value:t=>t.cell.data.q2(t.get),req:["values"],idx:3},q1:{value:t=>t.cell.data.q1(t.get),req:["values"],idx:3},q3:{value:t=>t.cell.data.q3(t.get),req:["values"],idx:3},min:{init:t=>t.min=void 0,value:t=>t.min=Number.isNaN(t.min)?t.cell.data.min(t.get):t.min,add:(t,e)=>{(e<t.min||t.min===void 0)&&(t.min=e)},rem:(t,e)=>{e<=t.min&&(t.min=NaN)},req:["values"],idx:4},max:{init:t=>t.max=void 0,value:t=>t.max=Number.isNaN(t.max)?t.cell.data.max(t.get):t.max,add:(t,e)=>{(e>t.max||t.max===void 0)&&(t.max=e)},rem:(t,e)=>{e>=t.max&&(t.max=NaN)},req:["values"],idx:4},argmin:{init:t=>t.argmin=void 0,value:t=>t.argmin||t.cell.data.argmin(t.get),add:(t,e,n)=>{e<t.min&&(t.argmin=n)},rem:(t,e)=>{e<=t.min&&(t.argmin=void 0)},req:["min","values"],idx:3},argmax:{init:t=>t.argmax=void 0,value:t=>t.argmax||t.cell.data.argmax(t.get),add:(t,e,n)=>{e>t.max&&(t.argmax=n)},rem:(t,e)=>{e>=t.max&&(t.argmax=void 0)},req:["max","values"],idx:3},exponential:{init:(t,e)=>{t.exp=0,t.exp_r=e},value:t=>t.valid?t.exp*(1-t.exp_r)/(1-t.exp_r**t.valid):void 0,add:(t,e)=>t.exp=t.exp_r*t.exp+e,rem:(t,e)=>t.exp=(t.exp-e/t.exp_r**(t.valid-1))/t.exp_r},exponentialb:{value:t=>t.valid?t.exp*(1-t.exp_r):void 0,req:["exponential"],idx:1}},L8=Object.keys(Vr).filter(t=>t!=="__count__");function z51(t,e){return(n,i)=>K1({name:t,aggregate_param:i,out:n||t},F51,e)}[...L8,"__count__"].forEach(t=>{Vr[t]=z51(t,Vr[t])});function aq(t,e,n){return Vr[t](n,e)}function rq(t,e){return t.idx-e.idx}function L51(t){const e={};t.forEach(i=>e[i.name]=i);const n=i=>{i.req&&i.req.forEach(o=>{e[o]||n(e[o]=Vr[o]())})};return t.forEach(n),Object.values(e).sort(rq)}function j51(){this.valid=0,this.missing=0,this._ops.forEach(t=>t.aggregate_param==null?t.init(this):t.init(this,t.aggregate_param))}function P51(t,e){if(t==null||t===""){++this.missing;return}t===t&&(++this.valid,this._ops.forEach(n=>n.add(this,t,e)))}function I51(t,e){if(t==null||t===""){--this.missing;return}t===t&&(--this.valid,this._ops.forEach(n=>n.rem(this,t,e)))}function B51(t){return this._out.forEach(e=>t[e.out]=e.value(this)),t}function sq(t,e){const n=e||vn,i=L51(t),o=t.slice().sort(rq);function u(l){this._ops=i,this._out=o,this.cell=l,this.init()}return u.prototype.init=j51,u.prototype.add=P51,u.prototype.rem=I51,u.prototype.set=B51,u.prototype.get=n,u.fields=t.map(l=>l.out),u}function JE(t){this._key=t?i3(t):z1,this.reset()}const Xe=JE.prototype;Xe.reset=function(){this._add=[],this._rem=[],this._ext=null,this._get=null,this._q=null};Xe.add=function(t){this._add.push(t)};Xe.rem=function(t){this._rem.push(t)};Xe.values=function(){if(this._get=null,this._rem.length===0)return this._add;const t=this._add,e=this._rem,n=this._key,i=t.length,o=e.length,u=Array(i-o),l={};let a,s,c;for(a=0;a<o;++a)l[n(e[a])]=1;for(a=0,s=0;a<i;++a)l[n(c=t[a])]?l[n(c)]=0:u[s++]=c;return this._rem=[],this._add=u};Xe.distinct=function(t){const e=this.values(),n={};let i=e.length,o=0,u;for(;--i>=0;)u=t(e[i])+"",A1(n,u)||(n[u]=1,++o);return o};Xe.extent=function(t){if(this._get!==t||!this._ext){const e=this.values(),n=SB(e,t);this._ext=[e[n[0]],e[n[1]]],this._get=t}return this._ext};Xe.argmin=function(t){return this.extent(t)[0]||{}};Xe.argmax=function(t){return this.extent(t)[1]||{}};Xe.min=function(t){const e=this.extent(t)[0];return e!=null?t(e):void 0};Xe.max=function(t){const e=this.extent(t)[1];return e!=null?t(e):void 0};Xe.quartile=function(t){return(this._get!==t||!this._q)&&(this._q=LE(this.values(),t),this._get=t),this._q};Xe.q1=function(t){return this.quartile(t)[0]};Xe.q2=function(t){return this.quartile(t)[1]};Xe.q3=function(t){return this.quartile(t)[2]};Xe.ci=function(t){return(this._get!==t||!this._ci)&&(this._ci=XU(this.values(),1e3,.05,t),this._get=t),this._ci};Xe.ci0=function(t){return this.ci(t)[0]};Xe.ci1=function(t){return this.ci(t)[1]};function mu(t){i1.call(this,null,t),this._adds=[],this._mods=[],this._alen=0,this._mlen=0,this._drop=!0,this._cross=!1,this._dims=[],this._dnames=[],this._measures=[],this._countOnly=!1,this._counts=null,this._prev=null,this._inputs=null,this._outputs=null}mu.Definition={type:"Aggregate",metadata:{generates:!0,changes:!0},params:[{name:"groupby",type:"field",array:!0},{name:"ops",type:"enum",array:!0,values:L8},{name:"aggregate_params",type:"number",null:!0,array:!0},{name:"fields",type:"field",null:!0,array:!0},{name:"as",type:"string",null:!0,array:!0},{name:"drop",type:"boolean",default:!0},{name:"cross",type:"boolean",default:!1},{name:"key",type:"field"}]};b1(mu,i1,{transform(t,e){const n=this,i=e.fork(e.NO_SOURCE|e.NO_FIELDS),o=t.modified();return n.stamp=i.stamp,n.value&&(o||e.modified(n._inputs,!0))?(n._prev=n.value,n.value=o?n.init(t):Object.create(null),e.visit(e.SOURCE,u=>n.add(u))):(n.value=n.value||n.init(t),e.visit(e.REM,u=>n.rem(u)),e.visit(e.ADD,u=>n.add(u))),i.modifies(n._outputs),n._drop=t.drop!==!1,t.cross&&n._dims.length>1&&(n._drop=!1,n.cross()),e.clean()&&n._drop&&i.clean(!0).runAfter(()=>this.clean()),n.changes(i)},cross(){const t=this,e=t.value,n=t._dnames,i=n.map(()=>({})),o=n.length;function u(a){let s,c,f,g;for(s in a)for(f=a[s].tuple,c=0;c<o;++c)i[c][g=f[n[c]]]=g}u(t._prev),u(e);function l(a,s,c){const f=n[c],g=i[c++];for(const p in g){const m=a?a+"|"+p:p;s[f]=g[p],c<o?l(m,s,c):e[m]||t.cell(m,s)}}l("",{},0)},init(t){const e=this._inputs=[],n=this._outputs=[],i={};function o(S){const A=S1(hn(S)),C=A.length;let k=0,M;for(;k<C;++k)i[M=A[k]]||(i[M]=1,e.push(M))}this._dims=S1(t.groupby),this._dnames=this._dims.map(S=>{const A=ee(S);return o(S),n.push(A),A}),this.cellkey=t.key?t.key:wx(this._dims),this._countOnly=!0,this._counts=[],this._measures=[];const u=t.fields||[null],l=t.ops||["count"],a=t.aggregate_params||[null],s=t.as||[],c=u.length,f={};let g,p,m,v,b,x,w;for(c!==l.length&&u1("Unmatched number of fields and aggregate ops."),w=0;w<c;++w){if(g=u[w],p=l[w],m=a[w]||null,g==null&&p!=="count"&&u1("Null aggregate field specified."),b=ee(g),x=lq(p,b,s[w]),n.push(x),p==="count"){this._counts.push(x);continue}v=f[b],v||(o(g),v=f[b]=[],v.field=g,this._measures.push(v)),p!=="count"&&(this._countOnly=!1),v.push(aq(p,m,x))}return this._measures=this._measures.map(S=>sq(S,S.field)),Object.create(null)},cellkey:wx(),cell(t,e){let n=this.value[t];return n?n.num===0&&this._drop&&n.stamp<this.stamp?(n.stamp=this.stamp,this._adds[this._alen++]=n):n.stamp<this.stamp&&(n.stamp=this.stamp,this._mods[this._mlen++]=n):(n=this.value[t]=this.newcell(t,e),this._adds[this._alen++]=n),n},newcell(t,e){const n={key:t,num:0,agg:null,tuple:this.newtuple(e,this._prev&&this._prev[t]),stamp:this.stamp,store:!1};if(!this._countOnly){const i=this._measures,o=i.length;n.agg=Array(o);for(let u=0;u<o;++u)n.agg[u]=new i[u](n)}return n.store&&(n.data=new JE),n},newtuple(t,e){const n=this._dnames,i=this._dims,o=i.length,u={};for(let l=0;l<o;++l)u[n[l]]=i[l](t);return e?BU(e.tuple,u):vt(u)},clean(){const t=this.value;for(const e in t)t[e].num===0&&delete t[e]},add(t){const e=this.cellkey(t),n=this.cell(e,t);if(n.num+=1,this._countOnly)return;n.store&&n.data.add(t);const i=n.agg;for(let o=0,u=i.length;o<u;++o)i[o].add(i[o].get(t),t)},rem(t){const e=this.cellkey(t),n=this.cell(e,t);if(n.num-=1,this._countOnly)return;n.store&&n.data.rem(t);const i=n.agg;for(let o=0,u=i.length;o<u;++o)i[o].rem(i[o].get(t),t)},celltuple(t){const e=t.tuple,n=this._counts;t.store&&t.data.values();for(let i=0,o=n.length;i<o;++i)e[n[i]]=t.num;if(!this._countOnly){const i=t.agg;for(let o=0,u=i.length;o<u;++o)i[o].set(e)}return e},changes(t){const e=this._adds,n=this._mods,i=this._prev,o=this._drop,u=t.add,l=t.rem,a=t.mod;let s,c,f,g;if(i)for(c in i)s=i[c],(!o||s.num)&&l.push(s.tuple);for(f=0,g=this._alen;f<g;++f)u.push(this.celltuple(e[f])),e[f]=null;for(f=0,g=this._mlen;f<g;++f)s=n[f],(s.num===0&&o?l:a).push(this.celltuple(s)),n[f]=null;return this._alen=this._mlen=0,this._prev=null,t}});const U51=1e-14;function tS(t){i1.call(this,null,t)}tS.Definition={type:"Bin",metadata:{modifies:!0},params:[{name:"field",type:"field",required:!0},{name:"interval",type:"boolean",default:!0},{name:"anchor",type:"number"},{name:"maxbins",type:"number",default:20},{name:"base",type:"number",default:10},{name:"divide",type:"number",array:!0,default:[5,2]},{name:"extent",type:"number",array:!0,length:2,required:!0},{name:"span",type:"number"},{name:"step",type:"number"},{name:"steps",type:"number",array:!0},{name:"minstep",type:"number",default:0},{name:"nice",type:"boolean",default:!0},{name:"name",type:"string"},{name:"as",type:"string",array:!0,length:2,default:["bin0","bin1"]}]};b1(tS,i1,{transform(t,e){const n=t.interval!==!1,i=this._bins(t),o=i.start,u=i.step,l=t.as||["bin0","bin1"],a=l[0],s=l[1];let c;return t.modified()?(e=e.reflow(!0),c=e.SOURCE):c=e.modified(hn(t.field))?e.ADD_MOD:e.ADD,e.visit(c,n?f=>{const g=i(f);f[a]=g,f[s]=g==null?null:o+u*(1+(g-o)/u)}:f=>f[a]=i(f)),e.modifies(n?l:a)},_bins(t){if(this.value&&!t.modified())return this.value;const e=t.field,n=VU(t),i=n.step;let o=n.start,u=o+Math.ceil((n.stop-o)/i)*i,l,a;(l=t.anchor)!=null&&(a=l-(o+i*Math.floor((l-o)/i)),o+=a,u+=a);const s=function(c){let f=fn(e(c));return f==null?null:f<o?-1/0:f>u?1/0:(f=Math.max(o,Math.min(f,u-i)),o+i*Math.floor(U51+(f-o)/i))};return s.start=o,s.stop=n.stop,s.step=i,this.value=u2(s,hn(e),t.name||"bin_"+ee(e))}});function cq(t,e,n){const i=t;let o=e||[],u=n||[],l={},a=0;return{add:s=>u.push(s),remove:s=>l[i(s)]=++a,size:()=>o.length,data:(s,c)=>(a&&(o=o.filter(f=>!l[i(f)]),l={},a=0),c&&s&&o.sort(s),u.length&&(o=s?$B(s,o,u.sort(s)):o.concat(u),u=[]),o)}}function eS(t){i1.call(this,[],t)}eS.Definition={type:"Collect",metadata:{source:!0},params:[{name:"sort",type:"compare"}]};b1(eS,i1,{transform(t,e){const n=e.fork(e.ALL),i=cq(z1,this.value,n.materialize(n.ADD).add),o=t.sort,u=e.changed()||o&&(t.modified("sort")||e.modified(o.fields));return n.visit(n.REM,i.remove),this.modified(u),this.value=n.source=i.data(b6(o),u),e.source&&e.source.root&&(this.value.root=e.source.root),n}});function dq(t){Dt.call(this,null,q51,t)}b1(dq,Dt);function q51(t){return this.value&&!t.modified()?this.value:hE(t.fields,t.orders)}function nS(t){i1.call(this,null,t)}nS.Definition={type:"CountPattern",metadata:{generates:!0,changes:!0},params:[{name:"field",type:"field",required:!0},{name:"case",type:"enum",values:["upper","lower","mixed"],default:"mixed"},{name:"pattern",type:"string",default:'[\\w"]+'},{name:"stopwords",type:"string",default:""},{name:"as",type:"string",array:!0,length:2,default:["text","count"]}]};function H51(t,e,n){switch(e){case"upper":t=t.toUpperCase();break;case"lower":t=t.toLowerCase();break}return t.match(n)}b1(nS,i1,{transform(t,e){const n=g=>p=>{for(var m=H51(a(p),t.case,u)||[],v,b=0,x=m.length;b<x;++b)l.test(v=m[b])||g(v)},i=this._parameterCheck(t,e),o=this._counts,u=this._match,l=this._stop,a=t.field,s=t.as||["text","count"],c=n(g=>o[g]=1+(o[g]||0)),f=n(g=>o[g]-=1);return i?e.visit(e.SOURCE,c):(e.visit(e.ADD,c),e.visit(e.REM,f)),this._finish(e,s)},_parameterCheck(t,e){let n=!1;return(t.modified("stopwords")||!this._stop)&&(this._stop=new RegExp("^"+(t.stopwords||"")+"$","i"),n=!0),(t.modified("pattern")||!this._match)&&(this._match=new RegExp(t.pattern||"[\\w']+","g"),n=!0),(t.modified("field")||e.modified(t.field.fields))&&(n=!0),n&&(this._counts={}),n},_finish(t,e){const n=this._counts,i=this._tuples||(this._tuples={}),o=e[0],u=e[1],l=t.fork(t.NO_SOURCE|t.NO_FIELDS);let a,s,c;for(a in n)s=i[a],c=n[a]||0,!s&&c?(i[a]=s=vt({}),s[o]=a,s[u]=c,l.add.push(s)):c===0?(s&&l.rem.push(s),n[a]=null,i[a]=null):s[u]!==c&&(s[u]=c,l.mod.push(s));return l.modifies(e)}});function iS(t){i1.call(this,null,t)}iS.Definition={type:"Cross",metadata:{generates:!0},params:[{name:"filter",type:"expr"},{name:"as",type:"string",array:!0,length:2,default:["a","b"]}]};b1(iS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE),i=t.as||["a","b"],o=i[0],u=i[1],l=!this.value||e.changed(e.ADD_REM)||t.modified("as")||t.modified("filter");let a=this.value;return l?(a&&(n.rem=a),a=e.materialize(e.SOURCE).source,n.add=this.value=G51(a,o,u,t.filter||o3)):n.mod=a,n.source=this.value,n.modifies(i)}});function G51(t,e,n,i){for(var o=[],u={},l=t.length,a=0,s,c;a<l;++a)for(u[e]=c=t[a],s=0;s<l;++s)u[n]=t[s],i(u)&&(o.push(vt(u)),u={},u[e]=c);return o}const iO={kde:BE,mixture:JU,normal:IE,lognormal:ZU,uniform:tq},W51="distributions",oO="function",Y51="field";function fq(t,e){const n=t[oO];A1(iO,n)||u1("Unknown distribution function: "+n);const i=iO[n]();for(const o in t)o===Y51?i.data((t.from||e()).map(t[o])):o===W51?i[o](t[o].map(u=>fq(u,e))):typeof i[o]===oO&&i[o](t[o]);return i}function oS(t){i1.call(this,null,t)}const gq=[{key:{function:"normal"},params:[{name:"mean",type:"number",default:0},{name:"stdev",type:"number",default:1}]},{key:{function:"lognormal"},params:[{name:"mean",type:"number",default:0},{name:"stdev",type:"number",default:1}]},{key:{function:"uniform"},params:[{name:"min",type:"number",default:0},{name:"max",type:"number",default:1}]},{key:{function:"kde"},params:[{name:"field",type:"field",required:!0},{name:"from",type:"data"},{name:"bandwidth",type:"number",default:0}]}],V51={key:{function:"mixture"},params:[{name:"distributions",type:"param",array:!0,params:gq},{name:"weights",type:"number",array:!0}]};oS.Definition={type:"Density",metadata:{generates:!0},params:[{name:"extent",type:"number",array:!0,length:2},{name:"steps",type:"number"},{name:"minsteps",type:"number",default:25},{name:"maxsteps",type:"number",default:200},{name:"method",type:"string",default:"pdf",values:["pdf","cdf"]},{name:"distribution",type:"param",params:gq.concat(V51)},{name:"as",type:"string",array:!0,default:["value","density"]}]};b1(oS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE|e.NO_FIELDS);if(!this.value||e.changed()||t.modified()){const i=fq(t.distribution,X51(e)),o=t.steps||t.minsteps||25,u=t.steps||t.maxsteps||200;let l=t.method||"pdf";l!=="pdf"&&l!=="cdf"&&u1("Invalid density method: "+l),!t.extent&&!i.data&&u1("Missing density extent parameter."),l=i[l];const a=t.as||["value","density"],s=t.extent||_i(i.data()),c=Tg(l,s,o,u).map(f=>{const g={};return g[a[0]]=f[0],g[a[1]]=f[1],vt(g)});this.value&&(n.rem=this.value),this.value=n.add=n.source=c}return n}});function X51(t){return()=>t.materialize(t.SOURCE).source}function hq(t,e){return t?t.map((n,i)=>e[i]||ee(n)):null}function uS(t,e,n){const i=[],o=g=>g(s);let u,l,a,s,c,f;if(e==null)i.push(t.map(n));else for(u={},l=0,a=t.length;l<a;++l)s=t[l],c=e.map(o),f=u[c],f||(u[c]=f=[],f.dims=c,i.push(f)),f.push(n(s));return i}const pq="bin";function lS(t){i1.call(this,null,t)}lS.Definition={type:"DotBin",metadata:{modifies:!0},params:[{name:"field",type:"field",required:!0},{name:"groupby",type:"field",array:!0},{name:"step",type:"number"},{name:"smooth",type:"boolean",default:!1},{name:"as",type:"string",default:pq}]};const K51=(t,e)=>O8(_i(t,e))/30;b1(lS,i1,{transform(t,e){if(this.value&&!(t.modified()||e.changed()))return e;const n=e.materialize(e.SOURCE).source,i=uS(e.source,t.groupby,vn),o=t.smooth||!1,u=t.field,l=t.step||K51(n,u),a=b6((v,b)=>u(v)-u(b)),s=t.as||pq,c=i.length;let f=1/0,g=-1/0,p=0,m;for(;p<c;++p){const v=i[p].sort(a);m=-1;for(const b of KU(v,l,o,u))b<f&&(f=b),b>g&&(g=b),v[++m][s]=b}return this.value={start:f,stop:g,step:l},e.reflow(!0).modifies(s)}});function mq(t){Dt.call(this,null,Q51,t),this.modified(!0)}b1(mq,Dt);function Q51(t){const e=t.expr;return this.value&&!t.modified("expr")?this.value:u2(n=>e(n,t),hn(e),ee(e))}function aS(t){i1.call(this,[void 0,void 0],t)}aS.Definition={type:"Extent",metadata:{},params:[{name:"field",type:"field",required:!0}]};b1(aS,i1,{transform(t,e){const n=this.value,i=t.field,o=e.changed()||e.modified(i.fields)||t.modified("field");let u=n[0],l=n[1];if((o||u==null)&&(u=1/0,l=-1/0),e.visit(o?e.SOURCE:e.ADD,a=>{const s=fn(i(a));s!=null&&(s<u&&(u=s),s>l&&(l=s))}),!Number.isFinite(u)||!Number.isFinite(l)){let a=ee(i);a&&(a=` for field "${a}"`),e.dataflow.warn(`Infinite extent${a}: [${u}, ${l}]`),u=l=void 0}this.value=[u,l]}});function rS(t,e){Dt.call(this,t),this.parent=e,this.count=0}b1(rS,Dt,{connect(t){return this.detachSubflow=t.detachSubflow,this.targets().add(t),t.source=this},add(t){this.count+=1,this.value.add.push(t)},rem(t){this.count-=1,this.value.rem.push(t)},mod(t){this.value.mod.push(t)},init(t){this.value.init(t,t.NO_SOURCE)},evaluate(){return this.value}});function $g(t){i1.call(this,{},t),this._keys=Jl();const e=this._targets=[];e.active=0,e.forEach=n=>{for(let i=0,o=e.active;i<o;++i)n(e[i],i,e)}}b1($g,i1,{activate(t){this._targets[this._targets.active++]=t},subflow(t,e,n,i){const o=this.value;let u=A1(o,t)&&o[t],l,a;return u?u.value.stamp<n.stamp&&(u.init(n),this.activate(u)):(a=i||(a=this._group[t])&&a.tuple,l=n.dataflow,u=new rS(n.fork(n.NO_SOURCE),this),l.add(u).connect(e(l,t,a)),o[t]=u,this.activate(u)),u},clean(){const t=this.value;let e=0;for(const n in t)if(t[n].count===0){const i=t[n].detachSubflow;i&&i(),delete t[n],++e}if(e){const n=this._targets.filter(i=>i&&i.count>0);this.initTargets(n)}},initTargets(t){const e=this._targets,n=e.length,i=t?t.length:0;let o=0;for(;o<i;++o)e[o]=t[o];for(;o<n&&e[o]!=null;++o)e[o]=null;e.active=i},transform(t,e){const n=e.dataflow,i=t.key,o=t.subflow,u=this._keys,l=t.modified("key"),a=s=>this.subflow(s,o,e);return this._group=t.group||{},this.initTargets(),e.visit(e.REM,s=>{const c=z1(s),f=u.get(c);f!==void 0&&(u.delete(c),a(f).rem(s))}),e.visit(e.ADD,s=>{const c=i(s);u.set(z1(s),c),a(c).add(s)}),l||e.modified(i.fields)?e.visit(e.MOD,s=>{const c=z1(s),f=u.get(c),g=i(s);f===g?a(g).mod(s):(u.set(c,g),a(f).rem(s),a(g).add(s))}):e.changed(e.MOD)&&e.visit(e.MOD,s=>{a(u.get(z1(s))).mod(s)}),l&&e.visit(e.REFLOW,s=>{const c=z1(s),f=u.get(c),g=i(s);f!==g&&(u.set(c,g),a(f).rem(s),a(g).add(s))}),e.clean()?n.runAfter(()=>{this.clean(),u.clean()}):u.empty>n.cleanThreshold&&n.runAfter(u.clean),e}});function yq(t){Dt.call(this,null,Z51,t)}b1(yq,Dt);function Z51(t){return this.value&&!t.modified()?this.value:r1(t.name)?S1(t.name).map(e=>i3(e)):i3(t.name,t.as)}function sS(t){i1.call(this,Jl(),t)}sS.Definition={type:"Filter",metadata:{changes:!0},params:[{name:"expr",type:"expr",required:!0}]};b1(sS,i1,{transform(t,e){const n=e.dataflow,i=this.value,o=e.fork(),u=o.add,l=o.rem,a=o.mod,s=t.expr;let c=!0;e.visit(e.REM,g=>{const p=z1(g);i.has(p)?i.delete(p):l.push(g)}),e.visit(e.ADD,g=>{s(g,t)?u.push(g):i.set(z1(g),1)});function f(g){const p=z1(g),m=s(g,t),v=i.get(p);m&&v?(i.delete(p),u.push(g)):!m&&!v?(i.set(p,1),l.push(g)):c&&m&&!v&&a.push(g)}return e.visit(e.MOD,f),t.modified()&&(c=!1,e.visit(e.REFLOW,f)),i.empty>n.cleanThreshold&&n.runAfter(i.clean),o}});function cS(t){i1.call(this,[],t)}cS.Definition={type:"Flatten",metadata:{generates:!0},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"index",type:"string"},{name:"as",type:"string",array:!0}]};b1(cS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE),i=t.fields,o=hq(i,t.as||[]),u=t.index||null,l=o.length;return n.rem=this.value,e.visit(e.SOURCE,a=>{const s=i.map(v=>v(a)),c=s.reduce((v,b)=>Math.max(v,b.length),0);let f=0,g,p,m;for(;f<c;++f){for(p=DE(a),g=0;g<l;++g)p[o[g]]=(m=s[g][f])==null?null:m;u&&(p[u]=f),n.add.push(p)}}),this.value=n.source=n.add,u&&n.modifies(u),n.modifies(o)}});function dS(t){i1.call(this,[],t)}dS.Definition={type:"Fold",metadata:{generates:!0},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"as",type:"string",array:!0,length:2,default:["key","value"]}]};b1(dS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE),i=t.fields,o=i.map(ee),u=t.as||["key","value"],l=u[0],a=u[1],s=i.length;return n.rem=this.value,e.visit(e.SOURCE,c=>{for(let f=0,g;f<s;++f)g=DE(c),g[l]=o[f],g[a]=i[f](c),n.add.push(g)}),this.value=n.source=n.add,n.modifies(u)}});function fS(t){i1.call(this,null,t)}fS.Definition={type:"Formula",metadata:{modifies:!0},params:[{name:"expr",type:"expr",required:!0},{name:"as",type:"string",required:!0},{name:"initonly",type:"boolean"}]};b1(fS,i1,{transform(t,e){const n=t.expr,i=t.as,o=t.modified(),u=t.initonly?e.ADD:o?e.SOURCE:e.modified(n.fields)||e.modified(i)?e.ADD_MOD:e.ADD;return o&&(e=e.materialize().reflow(!0)),t.initonly||e.modifies(i),e.visit(u,l=>l[i]=n(l,t))}});function vq(t){i1.call(this,[],t)}b1(vq,i1,{transform(t,e){const n=e.fork(e.ALL),i=t.generator;let o=this.value,u=t.size-o.length,l,a,s;if(u>0){for(l=[];--u>=0;)l.push(s=vt(i(t))),o.push(s);n.add=n.add.length?n.materialize(n.ADD).add.concat(l):l}else a=o.slice(0,-u),n.rem=n.rem.length?n.materialize(n.REM).rem.concat(a):a,o=o.slice(-u);return n.source=this.value=o,n}});const Xs={value:"value",median:HB,mean:Fu1,min:_d,max:Po},J51=[];function gS(t){i1.call(this,[],t)}gS.Definition={type:"Impute",metadata:{changes:!0},params:[{name:"field",type:"field",required:!0},{name:"key",type:"field",required:!0},{name:"keyvals",array:!0},{name:"groupby",type:"field",array:!0},{name:"method",type:"enum",default:"value",values:["value","mean","median","max","min"]},{name:"value",default:0}]};function tl1(t){var e=t.method||Xs.value,n;if(Xs[e]==null)u1("Unrecognized imputation method: "+e);else return e===Xs.value?(n=t.value!==void 0?t.value:0,()=>n):Xs[e]}function el1(t){const e=t.field;return n=>n?e(n):NaN}b1(gS,i1,{transform(t,e){var n=e.fork(e.ALL),i=tl1(t),o=el1(t),u=ee(t.field),l=ee(t.key),a=(t.groupby||[]).map(ee),s=nl1(e.source,t.groupby,t.key,t.keyvals),c=[],f=this.value,g=s.domain.length,p,m,v,b,x,w,S,A,C,k;for(x=0,A=s.length;x<A;++x)for(p=s[x],v=p.values,m=NaN,S=0;S<g;++S)if(p[S]==null){for(b=s.domain[S],k={_impute:!0},w=0,C=v.length;w<C;++w)k[a[w]]=v[w];k[l]=b,k[u]=Number.isNaN(m)?m=i(p,o):m,c.push(vt(k))}return c.length&&(n.add=n.materialize(n.ADD).add.concat(c)),f.length&&(n.rem=n.materialize(n.REM).rem.concat(f)),this.value=c,n}});function nl1(t,e,n,i){var o=w=>w(x),u=[],l=i?i.slice():[],a={},s={},c,f,g,p,m,v,b,x;for(l.forEach((w,S)=>a[w]=S+1),p=0,b=t.length;p<b;++p)x=t[p],v=n(x),m=a[v]||(a[v]=l.push(v)),f=(c=e?e.map(o):J51)+"",(g=s[f])||(g=s[f]=[],u.push(g),g.values=c),g[m-1]=x;return u.domain=l,u}function hS(t){mu.call(this,t)}hS.Definition={type:"JoinAggregate",metadata:{modifies:!0},params:[{name:"groupby",type:"field",array:!0},{name:"fields",type:"field",null:!0,array:!0},{name:"ops",type:"enum",array:!0,values:L8},{name:"as",type:"string",null:!0,array:!0},{name:"key",type:"field"}]};b1(hS,mu,{transform(t,e){const n=this,i=t.modified();let o;return n.value&&(i||e.modified(n._inputs,!0))?(o=n.value=i?n.init(t):{},e.visit(e.SOURCE,u=>n.add(u))):(o=n.value=n.value||this.init(t),e.visit(e.REM,u=>n.rem(u)),e.visit(e.ADD,u=>n.add(u))),n.changes(),e.visit(e.SOURCE,u=>{K1(u,o[n.cellkey(u)].tuple)}),e.reflow(i).modifies(this._outputs)},changes(){const t=this._adds,e=this._mods;let n,i;for(n=0,i=this._alen;n<i;++n)this.celltuple(t[n]),t[n]=null;for(n=0,i=this._mlen;n<i;++n)this.celltuple(e[n]),e[n]=null;this._alen=this._mlen=0}});function pS(t){i1.call(this,null,t)}pS.Definition={type:"KDE",metadata:{generates:!0},params:[{name:"groupby",type:"field",array:!0},{name:"field",type:"field",required:!0},{name:"cumulative",type:"boolean",default:!1},{name:"counts",type:"boolean",default:!1},{name:"bandwidth",type:"number",default:0},{name:"extent",type:"number",array:!0,length:2},{name:"resolve",type:"enum",values:["shared","independent"],default:"independent"},{name:"steps",type:"number"},{name:"minsteps",type:"number",default:25},{name:"maxsteps",type:"number",default:200},{name:"as",type:"string",array:!0,default:["value","density"]}]};b1(pS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE|e.NO_FIELDS);if(!this.value||e.changed()||t.modified()){const i=e.materialize(e.SOURCE).source,o=uS(i,t.groupby,t.field),u=(t.groupby||[]).map(ee),l=t.bandwidth,a=t.cumulative?"cdf":"pdf",s=t.as||["value","density"],c=[];let f=t.extent,g=t.steps||t.minsteps||25,p=t.steps||t.maxsteps||200;a!=="pdf"&&a!=="cdf"&&u1("Invalid density method: "+a),t.resolve==="shared"&&(f||(f=_i(i,t.field)),g=p=t.steps||p),o.forEach(m=>{const v=BE(m,l)[a],b=t.counts?m.length:1,x=f||_i(m);Tg(v,x,g,p).forEach(w=>{const S={};for(let A=0;A<u.length;++A)S[u[A]]=m.dims[A];S[s[0]]=w[0],S[s[1]]=w[1]*b,c.push(vt(S))})}),this.value&&(n.rem=this.value),this.value=n.add=n.source=c}return n}});function bq(t){Dt.call(this,null,il1,t)}b1(bq,Dt);function il1(t){return this.value&&!t.modified()?this.value:yE(t.fields,t.flat)}function xq(t){i1.call(this,[],t),this._pending=null}b1(xq,i1,{transform(t,e){const n=e.dataflow;return this._pending?hv(this,e,this._pending):ol1(t)?e.StopPropagation:t.values?hv(this,e,n.parse(t.values,t.format)):t.async?{async:n.request(t.url,t.format).then(o=>(this._pending=S1(o.data),u=>u.touch(this)))}:n.request(t.url,t.format).then(i=>hv(this,e,S1(i.data)))}});function ol1(t){return t.modified("async")&&!(t.modified("values")||t.modified("url")||t.modified("format"))}function hv(t,e,n){n.forEach(vt);const i=e.fork(e.NO_FIELDS&e.NO_SOURCE);return i.rem=t.value,t.value=i.source=i.add=n,t._pending=null,i.rem.length&&i.clean(!0),i}function mS(t){i1.call(this,{},t)}mS.Definition={type:"Lookup",metadata:{modifies:!0},params:[{name:"index",type:"index",params:[{name:"from",type:"data",required:!0},{name:"key",type:"field",required:!0}]},{name:"values",type:"field",array:!0},{name:"fields",type:"field",array:!0,required:!0},{name:"as",type:"string",array:!0},{name:"default",default:null}]};b1(mS,i1,{transform(t,e){const n=t.fields,i=t.index,o=t.values,u=t.default==null?null:t.default,l=t.modified(),a=n.length;let s=l?e.SOURCE:e.ADD,c=e,f=t.as,g,p,m;return o?(p=o.length,a>1&&!f&&u1('Multi-field lookup requires explicit "as" parameter.'),f&&f.length!==a*p&&u1('The "as" parameter has too few output field names.'),f=f||o.map(ee),g=function(v){for(var b=0,x=0,w,S;b<a;++b)if(S=i.get(n[b](v)),S==null)for(w=0;w<p;++w,++x)v[f[x]]=u;else for(w=0;w<p;++w,++x)v[f[x]]=o[w](S)}):(f||u1("Missing output field names."),g=function(v){for(var b=0,x;b<a;++b)x=i.get(n[b](v)),v[f[b]]=x??u}),l?c=e.reflow(!0):(m=n.some(v=>e.modified(v.fields)),s|=m?e.MOD:0),e.visit(s,g),c.modifies(f)}});function _q(t){Dt.call(this,null,ul1,t)}b1(_q,Dt);function ul1(t){if(this.value&&!t.modified())return this.value;const e=t.extents,n=e.length;let i=1/0,o=-1/0,u,l;for(u=0;u<n;++u)l=e[u],l[0]<i&&(i=l[0]),l[1]>o&&(o=l[1]);return[i,o]}function wq(t){Dt.call(this,null,ll1,t)}b1(wq,Dt);function ll1(t){return this.value&&!t.modified()?this.value:t.values.reduce((e,n)=>e.concat(n),[])}function Eq(t){i1.call(this,null,t)}b1(Eq,i1,{transform(t,e){return this.modified(t.modified()),this.value=t,e.fork(e.NO_SOURCE|e.NO_FIELDS)}});function yS(t){mu.call(this,t)}yS.Definition={type:"Pivot",metadata:{generates:!0,changes:!0},params:[{name:"groupby",type:"field",array:!0},{name:"field",type:"field",required:!0},{name:"value",type:"field",required:!0},{name:"op",type:"enum",values:L8,default:"sum"},{name:"limit",type:"number",default:0},{name:"key",type:"field"}]};b1(yS,mu,{_transform:mu.prototype.transform,transform(t,e){return this._transform(al1(t,e),e)}});function al1(t,e){const n=t.field,i=t.value,o=(t.op==="count"?"__count__":t.op)||"sum",u=hn(n).concat(hn(i)),l=sl1(n,t.limit||0,e);return e.changed()&&t.set("__pivot__",null,null,!0),{key:t.key,groupby:t.groupby,ops:l.map(()=>o),fields:l.map(a=>rl1(a,n,i,u)),as:l.map(a=>a+""),modified:t.modified.bind(t)}}function rl1(t,e,n,i){return u2(o=>e(o)===t?n(o):NaN,i,t+"")}function sl1(t,e,n){const i={},o=[];return n.visit(n.SOURCE,u=>{const l=t(u);i[l]||(i[l]=1,o.push(l))}),o.sort(Zl),e?o.slice(0,e):o}function Sq(t){$g.call(this,t)}b1(Sq,$g,{transform(t,e){const n=t.subflow,i=t.field,o=u=>this.subflow(z1(u),n,e,u);return(t.modified("field")||i&&e.modified(hn(i)))&&u1("PreFacet does not support field modification."),this.initTargets(),i?(e.visit(e.MOD,u=>{const l=o(u);i(u).forEach(a=>l.mod(a))}),e.visit(e.ADD,u=>{const l=o(u);i(u).forEach(a=>l.add(vt(a)))}),e.visit(e.REM,u=>{const l=o(u);i(u).forEach(a=>l.rem(a))})):(e.visit(e.MOD,u=>o(u).mod(u)),e.visit(e.ADD,u=>o(u).add(u)),e.visit(e.REM,u=>o(u).rem(u))),e.clean()&&e.runAfter(()=>this.clean()),e}});function vS(t){i1.call(this,null,t)}vS.Definition={type:"Project",metadata:{generates:!0,changes:!0},params:[{name:"fields",type:"field",array:!0},{name:"as",type:"string",null:!0,array:!0}]};b1(vS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE),i=t.fields,o=hq(t.fields,t.as||[]),u=i?(a,s)=>cl1(a,s,i,o):_g;let l;return this.value?l=this.value:(e=e.addAll(),l=this.value={}),e.visit(e.REM,a=>{const s=z1(a);n.rem.push(l[s]),l[s]=null}),e.visit(e.ADD,a=>{const s=u(a,vt({}));l[z1(a)]=s,n.add.push(s)}),e.visit(e.MOD,a=>{n.mod.push(u(a,l[z1(a)]))}),n}});function cl1(t,e,n,i){for(let o=0,u=n.length;o<u;++o)e[i[o]]=n[o](t);return e}function Aq(t){i1.call(this,null,t)}b1(Aq,i1,{transform(t,e){return this.value=t.value,t.modified("value")?e.fork(e.NO_SOURCE|e.NO_FIELDS):e.StopPropagation}});function bS(t){i1.call(this,null,t)}bS.Definition={type:"Quantile",metadata:{generates:!0,changes:!0},params:[{name:"groupby",type:"field",array:!0},{name:"field",type:"field",required:!0},{name:"probs",type:"number",array:!0},{name:"step",type:"number",default:.01},{name:"as",type:"string",array:!0,default:["prob","value"]}]};const dl1=1e-14;b1(bS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE|e.NO_FIELDS),i=t.as||["prob","value"];if(this.value&&!t.modified()&&!e.changed())return n.source=this.value,n;const o=e.materialize(e.SOURCE).source,u=uS(o,t.groupby,t.field),l=(t.groupby||[]).map(ee),a=[],s=t.step||.01,c=t.probs||b2(s/2,1-dl1,s),f=c.length;return u.forEach(g=>{const p=zE(g,c);for(let m=0;m<f;++m){const v={};for(let b=0;b<l.length;++b)v[l[b]]=g.dims[b];v[i[0]]=c[m],v[i[1]]=p[m],a.push(vt(v))}}),this.value&&(n.rem=this.value),this.value=n.add=n.source=a,n}});function Cq(t){i1.call(this,null,t)}b1(Cq,i1,{transform(t,e){let n,i;return this.value?i=this.value:(n=e=e.addAll(),i=this.value={}),t.derive&&(n=e.fork(e.NO_SOURCE),e.visit(e.REM,o=>{const u=z1(o);n.rem.push(i[u]),i[u]=null}),e.visit(e.ADD,o=>{const u=DE(o);i[z1(o)]=u,n.add.push(u)}),e.visit(e.MOD,o=>{const u=i[z1(o)];for(const l in o)u[l]=o[l],n.modifies(l);n.mod.push(u)})),n}});function xS(t){i1.call(this,[],t),this.count=0}xS.Definition={type:"Sample",metadata:{},params:[{name:"size",type:"number",default:1e3}]};b1(xS,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE),i=t.modified("size"),o=t.size,u=this.value.reduce((f,g)=>(f[z1(g)]=1,f),{});let l=this.value,a=this.count,s=0;function c(f){let g,p;l.length<o?l.push(f):(p=~~((a+1)*l3()),p<l.length&&p>=s&&(g=l[p],u[z1(g)]&&n.rem.push(g),l[p]=f)),++a}if(e.rem.length&&(e.visit(e.REM,f=>{const g=z1(f);u[g]&&(u[g]=-1,n.rem.push(f)),--a}),l=l.filter(f=>u[z1(f)]!==-1)),(e.rem.length||i)&&l.length<o&&e.source&&(s=a=l.length,e.visit(e.SOURCE,f=>{u[z1(f)]||c(f)}),s=-1),i&&l.length>o){const f=l.length-o;for(let g=0;g<f;++g)u[z1(l[g])]=-1,n.rem.push(l[g]);l=l.slice(f)}return e.mod.length&&e.visit(e.MOD,f=>{u[z1(f)]&&n.mod.push(f)}),e.add.length&&e.visit(e.ADD,c),(e.add.length||s<0)&&(n.add=l.filter(f=>!u[z1(f)])),this.count=a,this.value=n.source=l,n}});function _S(t){i1.call(this,null,t)}_S.Definition={type:"Sequence",metadata:{generates:!0,changes:!0},params:[{name:"start",type:"number",required:!0},{name:"stop",type:"number",required:!0},{name:"step",type:"number",default:1},{name:"as",type:"string",default:"data"}]};b1(_S,i1,{transform(t,e){if(this.value&&!t.modified())return;const n=e.materialize().fork(e.MOD),i=t.as||"data";return n.rem=this.value?e.rem.concat(this.value):e.rem,this.value=b2(t.start,t.stop,t.step||1).map(o=>{const u={};return u[i]=o,vt(u)}),n.add=e.add.concat(this.value),n}});function kq(t){i1.call(this,null,t),this.modified(!0)}b1(kq,i1,{transform(t,e){return this.value=e.source,e.changed()?e.fork(e.NO_SOURCE|e.NO_FIELDS):e.StopPropagation}});function wS(t){i1.call(this,null,t)}const Tq=["unit0","unit1"];wS.Definition={type:"TimeUnit",metadata:{modifies:!0},params:[{name:"field",type:"field",required:!0},{name:"interval",type:"boolean",default:!0},{name:"units",type:"enum",values:SE,array:!0},{name:"step",type:"number",default:1},{name:"maxbins",type:"number",default:40},{name:"extent",type:"date",array:!0},{name:"timezone",type:"enum",default:"local",values:["local","utc"]},{name:"as",type:"string",array:!0,length:2,default:Tq}]};b1(wS,i1,{transform(t,e){const n=t.field,i=t.interval!==!1,o=t.timezone==="utc",u=this._floor(t,e),l=(o?oa:ia)(u.unit).offset,a=t.as||Tq,s=a[0],c=a[1],f=u.step;let g=u.start||1/0,p=u.stop||-1/0,m=e.ADD;return(t.modified()||e.changed(e.REM)||e.modified(hn(n)))&&(e=e.reflow(!0),m=e.SOURCE,g=1/0,p=-1/0),e.visit(m,v=>{const b=n(v);let x,w;b==null?(v[s]=null,i&&(v[c]=null)):(v[s]=x=w=u(b),i&&(v[c]=w=l(x,f)),x<g&&(g=x),w>p&&(p=w))}),u.start=g,u.stop=p,e.modifies(i?a:s)},_floor(t,e){const n=t.timezone==="utc",{units:i,step:o}=t.units?{units:t.units,step:t.step||1}:vU({extent:t.extent||_i(e.materialize(e.SOURCE).source,t.field),maxbins:t.maxbins}),u=AE(i),l=this.value||{},a=(n?sU:rU)(u,o);return a.unit=st(u),a.units=u,a.step=o,a.start=l.start,a.stop=l.stop,this.value=a}});function $q(t){i1.call(this,Jl(),t)}b1($q,i1,{transform(t,e){const n=e.dataflow,i=t.field,o=this.value,u=a=>o.set(i(a),a);let l=!0;return t.modified("field")||e.modified(i.fields)?(o.clear(),e.visit(e.SOURCE,u)):e.changed()?(e.visit(e.REM,a=>o.delete(i(a))),e.visit(e.ADD,u)):l=!1,this.modified(l),o.empty>n.cleanThreshold&&n.runAfter(o.clean),e.fork()}});function Mq(t){i1.call(this,null,t)}b1(Mq,i1,{transform(t,e){(!this.value||t.modified("field")||t.modified("sort")||e.changed()||t.sort&&e.modified(t.sort.fields))&&(this.value=(t.sort?e.source.slice().sort(b6(t.sort)):e.source).map(t.field))}});function fl1(t,e,n,i){const o=Xr[t](e,n);return{init:o.init||K4,update:function(u,l){l[i]=o.next(u)}}}const Xr={row_number:function(){return{next:t=>t.index+1}},rank:function(){let t;return{init:()=>t=1,next:e=>{const n=e.index,i=e.data;return n&&e.compare(i[n-1],i[n])?t=n+1:t}}},dense_rank:function(){let t;return{init:()=>t=1,next:e=>{const n=e.index,i=e.data;return n&&e.compare(i[n-1],i[n])?++t:t}}},percent_rank:function(){const t=Xr.rank(),e=t.next;return{init:t.init,next:n=>(e(n)-1)/(n.data.length-1)}},cume_dist:function(){let t;return{init:()=>t=0,next:e=>{const n=e.data,i=e.compare;let o=e.index;if(t<o){for(;o+1<n.length&&!i(n[o],n[o+1]);)++o;t=o}return(1+t)/n.length}}},ntile:function(t,e){e=+e,e>0||u1("ntile num must be greater than zero.");const n=Xr.cume_dist(),i=n.next;return{init:n.init,next:o=>Math.ceil(e*i(o))}},lag:function(t,e){return e=+e||1,{next:n=>{const i=n.index-e;return i>=0?t(n.data[i]):null}}},lead:function(t,e){return e=+e||1,{next:n=>{const i=n.index+e,o=n.data;return i<o.length?t(o[i]):null}}},first_value:function(t){return{next:e=>t(e.data[e.i0])}},last_value:function(t){return{next:e=>t(e.data[e.i1-1])}},nth_value:function(t,e){return e=+e,e>0||u1("nth_value nth must be greater than zero."),{next:n=>{const i=n.i0+(e-1);return i<n.i1?t(n.data[i]):null}}},prev_value:function(t){let e;return{init:()=>e=null,next:n=>{const i=t(n.data[n.index]);return i!=null?e=i:e}}},next_value:function(t){let e,n;return{init:()=>(e=null,n=-1),next:i=>{const o=i.data;return i.index<=n?e:(n=gl1(t,o,i.index))<0?(n=o.length,e=null):e=t(o[n])}}}};function gl1(t,e,n){for(let i=e.length;n<i;++n)if(t(e[n])!=null)return n;return-1}const hl1=Object.keys(Xr);function Nq(t){const e=S1(t.ops),n=S1(t.fields),i=S1(t.params),o=S1(t.aggregate_params),u=S1(t.as),l=this.outputs=[],a=this.windows=[],s={},c={},f=[],g=[];let p=!0;function m(v){S1(hn(v)).forEach(b=>s[b]=1)}m(t.sort),e.forEach((v,b)=>{const x=n[b],w=i[b],S=o[b]||null,A=ee(x),C=lq(v,A,u[b]);if(m(x),l.push(C),A1(Xr,v))a.push(fl1(v,x,w,C));else{if(x==null&&v!=="count"&&u1("Null aggregate field specified."),v==="count"){f.push(C);return}p=!1;let k=c[A];k||(k=c[A]=[],k.field=x,g.push(k)),k.push(aq(v,S,C))}}),(f.length||g.length)&&(this.cell=pl1(g,f,p)),this.inputs=Object.keys(s)}const Rq=Nq.prototype;Rq.init=function(){this.windows.forEach(t=>t.init()),this.cell&&this.cell.init()};Rq.update=function(t,e){const n=this.cell,i=this.windows,o=t.data,u=i&&i.length;let l;if(n){for(l=t.p0;l<t.i0;++l)n.rem(o[l]);for(l=t.p1;l<t.i1;++l)n.add(o[l]);n.set(e)}for(l=0;l<u;++l)i[l].update(t,e)};function pl1(t,e,n){t=t.map(s=>sq(s,s.field));const i={num:0,agg:null,store:!1,count:e};if(!n)for(var o=t.length,u=i.agg=Array(o),l=0;l<o;++l)u[l]=new t[l](i);if(i.store)var a=i.data=new JE;return i.add=function(s){if(i.num+=1,!n){a&&a.add(s);for(let c=0;c<o;++c)u[c].add(u[c].get(s),s)}},i.rem=function(s){if(i.num-=1,!n){a&&a.rem(s);for(let c=0;c<o;++c)u[c].rem(u[c].get(s),s)}},i.set=function(s){let c,f;for(a&&a.values(),c=0,f=e.length;c<f;++c)s[e[c]]=i.num;if(!n)for(c=0,f=u.length;c<f;++c)u[c].set(s)},i.init=function(){i.num=0,a&&a.reset();for(let s=0;s<o;++s)u[s].init()},i}function ES(t){i1.call(this,{},t),this._mlen=0,this._mods=[]}ES.Definition={type:"Window",metadata:{modifies:!0},params:[{name:"sort",type:"compare"},{name:"groupby",type:"field",array:!0},{name:"ops",type:"enum",array:!0,values:hl1.concat(L8)},{name:"params",type:"number",null:!0,array:!0},{name:"aggregate_params",type:"number",null:!0,array:!0},{name:"fields",type:"field",null:!0,array:!0},{name:"as",type:"string",null:!0,array:!0},{name:"frame",type:"number",null:!0,array:!0,length:2,default:[null,0]},{name:"ignorePeers",type:"boolean",default:!1}]};b1(ES,i1,{transform(t,e){this.stamp=e.stamp;const n=t.modified(),i=b6(t.sort),o=wx(t.groupby),u=a=>this.group(o(a));let l=this.state;(!l||n)&&(l=this.state=new Nq(t)),n||e.modified(l.inputs)?(this.value={},e.visit(e.SOURCE,a=>u(a).add(a))):(e.visit(e.REM,a=>u(a).remove(a)),e.visit(e.ADD,a=>u(a).add(a)));for(let a=0,s=this._mlen;a<s;++a)ml1(this._mods[a],l,i,t);return this._mlen=0,this._mods=[],e.reflow(n).modifies(l.outputs)},group(t){let e=this.value[t];return e||(e=this.value[t]=cq(z1),e.stamp=-1),e.stamp<this.stamp&&(e.stamp=this.stamp,this._mods[this._mlen++]=e),e}});function ml1(t,e,n,i){const o=i.sort,u=o&&!i.ignorePeers,l=i.frame||[null,0],a=t.data(n),s=a.length,c=u?ta(o):null,f={i0:0,i1:0,p0:0,p1:0,index:0,data:a,compare:o||bn(-1)};e.init();for(let g=0;g<s;++g)yl1(f,l,g,s),u&&vl1(f,c),e.update(f,a[g])}function yl1(t,e,n,i){t.p0=t.i0,t.p1=t.i1,t.i0=e[0]==null?0:Math.max(0,n-Math.abs(e[0])),t.i1=e[1]==null?i:Math.min(i,n+Math.abs(e[1])+1),t.index=n}function vl1(t,e){const n=t.i0,i=t.i1-1,o=t.compare,u=t.data,l=u.length-1;n>0&&!o(u[n],u[n-1])&&(t.i0=e.left(u,u[n])),i<l&&!o(u[i],u[i+1])&&(t.i1=e.right(u,u[i]))}const bl1=Object.freeze(Object.defineProperty({__proto__:null,aggregate:mu,bin:tS,collect:eS,compare:dq,countpattern:nS,cross:iS,density:oS,dotbin:lS,expression:mq,extent:aS,facet:$g,field:yq,filter:sS,flatten:cS,fold:dS,formula:fS,generate:vq,impute:gS,joinaggregate:hS,kde:pS,key:bq,load:xq,lookup:mS,multiextent:_q,multivalues:wq,params:Eq,pivot:yS,prefacet:Sq,project:vS,proxy:Aq,quantile:bS,relay:Cq,sample:xS,sequence:_S,sieve:kq,subflow:rS,timeunit:wS,tupleindex:$q,values:Mq,window:ES},Symbol.toStringTag,{value:"Module"}));function bt(t){return function(){return t}}const uO=Math.abs,tn=Math.atan2,r0=Math.cos,xl1=Math.max,pv=Math.min,ei=Math.sin,T0=Math.sqrt,un=1e-12,ml=Math.PI,kd=ml/2,Dq=2*ml;function _l1(t){return t>1?0:t<-1?ml:Math.acos(t)}function lO(t){return t>=1?kd:t<=-1?-kd:Math.asin(t)}const Ex=Math.PI,Sx=2*Ex,b0=1e-6,wl1=Sx-b0;function Oq(t){this._+=t[0];for(let e=1,n=t.length;e<n;++e)this._+=arguments[e]+t[e]}function El1(t){let e=Math.floor(t);if(!(e>=0))throw new Error(`invalid digits: ${t}`);if(e>15)return Oq;const n=10**e;return function(i){this._+=i[0];for(let o=1,u=i.length;o<u;++o)this._+=Math.round(arguments[o]*n)/n+i[o]}}let SS=class{constructor(e){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=e==null?Oq:El1(e)}moveTo(e,n){this._append`M${this._x0=this._x1=+e},${this._y0=this._y1=+n}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(e,n){this._append`L${this._x1=+e},${this._y1=+n}`}quadraticCurveTo(e,n,i,o){this._append`Q${+e},${+n},${this._x1=+i},${this._y1=+o}`}bezierCurveTo(e,n,i,o,u,l){this._append`C${+e},${+n},${+i},${+o},${this._x1=+u},${this._y1=+l}`}arcTo(e,n,i,o,u){if(e=+e,n=+n,i=+i,o=+o,u=+u,u<0)throw new Error(`negative radius: ${u}`);let l=this._x1,a=this._y1,s=i-e,c=o-n,f=l-e,g=a-n,p=f*f+g*g;if(this._x1===null)this._append`M${this._x1=e},${this._y1=n}`;else if(p>b0)if(!(Math.abs(g*s-c*f)>b0)||!u)this._append`L${this._x1=e},${this._y1=n}`;else{let m=i-l,v=o-a,b=s*s+c*c,x=m*m+v*v,w=Math.sqrt(b),S=Math.sqrt(p),A=u*Math.tan((Ex-Math.acos((b+p-x)/(2*w*S)))/2),C=A/S,k=A/w;Math.abs(C-1)>b0&&this._append`L${e+C*f},${n+C*g}`,this._append`A${u},${u},0,0,${+(g*m>f*v)},${this._x1=e+k*s},${this._y1=n+k*c}`}}arc(e,n,i,o,u,l){if(e=+e,n=+n,i=+i,l=!!l,i<0)throw new Error(`negative radius: ${i}`);let a=i*Math.cos(o),s=i*Math.sin(o),c=e+a,f=n+s,g=1^l,p=l?o-u:u-o;this._x1===null?this._append`M${c},${f}`:(Math.abs(this._x1-c)>b0||Math.abs(this._y1-f)>b0)&&this._append`L${c},${f}`,i&&(p<0&&(p=p%Sx+Sx),p>wl1?this._append`A${i},${i},0,1,${g},${e-a},${n-s}A${i},${i},0,1,${g},${this._x1=c},${this._y1=f}`:p>b0&&this._append`A${i},${i},0,${+(p>=Ex)},${g},${this._x1=e+i*Math.cos(u)},${this._y1=n+i*Math.sin(u)}`)}rect(e,n,i,o){this._append`M${this._x0=this._x1=+e},${this._y0=this._y1=+n}h${i=+i}v${+o}h${-i}Z`}toString(){return this._}};function Mg(){return new SS}Mg.prototype=SS.prototype;function Ng(t){let e=3;return t.digits=function(n){if(!arguments.length)return e;if(n==null)e=null;else{const i=Math.floor(n);if(!(i>=0))throw new RangeError(`invalid digits: ${n}`);e=i}return t},()=>new SS(e)}function Sl1(t){return t.innerRadius}function Al1(t){return t.outerRadius}function Cl1(t){return t.startAngle}function kl1(t){return t.endAngle}function Tl1(t){return t&&t.padAngle}function $l1(t,e,n,i,o,u,l,a){var s=n-t,c=i-e,f=l-o,g=a-u,p=g*s-f*c;if(!(p*p<un))return p=(f*(e-u)-g*(t-o))/p,[t+p*s,e+p*c]}function Ks(t,e,n,i,o,u,l){var a=t-n,s=e-i,c=(l?u:-u)/T0(a*a+s*s),f=c*s,g=-c*a,p=t+f,m=e+g,v=n+f,b=i+g,x=(p+v)/2,w=(m+b)/2,S=v-p,A=b-m,C=S*S+A*A,k=o-u,M=p*b-v*m,T=(A<0?-1:1)*T0(xl1(0,k*k*C-M*M)),D=(M*A-S*T)/C,I=(-M*S-A*T)/C,U=(M*A+S*T)/C,B=(-M*S+A*T)/C,V=D-x,W=I-w,O=U-x,j=B-w;return V*V+W*W>O*O+j*j&&(D=U,I=B),{cx:D,cy:I,x01:-f,y01:-g,x11:D*(o/k-1),y11:I*(o/k-1)}}function Ml1(){var t=Sl1,e=Al1,n=bt(0),i=null,o=Cl1,u=kl1,l=Tl1,a=null,s=Ng(c);function c(){var f,g,p=+t.apply(this,arguments),m=+e.apply(this,arguments),v=o.apply(this,arguments)-kd,b=u.apply(this,arguments)-kd,x=uO(b-v),w=b>v;if(a||(a=f=s()),m<p&&(g=m,m=p,p=g),!(m>un))a.moveTo(0,0);else if(x>Dq-un)a.moveTo(m*r0(v),m*ei(v)),a.arc(0,0,m,v,b,!w),p>un&&(a.moveTo(p*r0(b),p*ei(b)),a.arc(0,0,p,b,v,w));else{var S=v,A=b,C=v,k=b,M=x,T=x,D=l.apply(this,arguments)/2,I=D>un&&(i?+i.apply(this,arguments):T0(p*p+m*m)),U=pv(uO(m-p)/2,+n.apply(this,arguments)),B=U,V=U,W,O;if(I>un){var j=lO(I/p*ei(D)),R=lO(I/m*ei(D));(M-=j*2)>un?(j*=w?1:-1,C+=j,k-=j):(M=0,C=k=(v+b)/2),(T-=R*2)>un?(R*=w?1:-1,S+=R,A-=R):(T=0,S=A=(v+b)/2)}var P=m*r0(S),q=m*ei(S),Y=p*r0(k),z=p*ei(k);if(U>un){var G=m*r0(A),Q=m*ei(A),n1=p*r0(C),l1=p*ei(C),d1;if(x<ml)if(d1=$l1(P,q,n1,l1,G,Q,Y,z)){var x1=P-d1[0],j1=q-d1[1],M1=G-d1[0],v1=Q-d1[1],D1=1/ei(_l1((x1*M1+j1*v1)/(T0(x1*x1+j1*j1)*T0(M1*M1+v1*v1)))/2),B1=T0(d1[0]*d1[0]+d1[1]*d1[1]);B=pv(U,(p-B1)/(D1-1)),V=pv(U,(m-B1)/(D1+1))}else B=V=0}T>un?V>un?(W=Ks(n1,l1,P,q,m,V,w),O=Ks(G,Q,Y,z,m,V,w),a.moveTo(W.cx+W.x01,W.cy+W.y01),V<U?a.arc(W.cx,W.cy,V,tn(W.y01,W.x01),tn(O.y01,O.x01),!w):(a.arc(W.cx,W.cy,V,tn(W.y01,W.x01),tn(W.y11,W.x11),!w),a.arc(0,0,m,tn(W.cy+W.y11,W.cx+W.x11),tn(O.cy+O.y11,O.cx+O.x11),!w),a.arc(O.cx,O.cy,V,tn(O.y11,O.x11),tn(O.y01,O.x01),!w))):(a.moveTo(P,q),a.arc(0,0,m,S,A,!w)):a.moveTo(P,q),!(p>un)||!(M>un)?a.lineTo(Y,z):B>un?(W=Ks(Y,z,G,Q,p,-B,w),O=Ks(P,q,n1,l1,p,-B,w),a.lineTo(W.cx+W.x01,W.cy+W.y01),B<U?a.arc(W.cx,W.cy,B,tn(W.y01,W.x01),tn(O.y01,O.x01),!w):(a.arc(W.cx,W.cy,B,tn(W.y01,W.x01),tn(W.y11,W.x11),!w),a.arc(0,0,p,tn(W.cy+W.y11,W.cx+W.x11),tn(O.cy+O.y11,O.cx+O.x11),w),a.arc(O.cx,O.cy,B,tn(O.y11,O.x11),tn(O.y01,O.x01),!w))):a.arc(0,0,p,k,C,w)}if(a.closePath(),f)return a=null,f+""||null}return c.centroid=function(){var f=(+t.apply(this,arguments)+ +e.apply(this,arguments))/2,g=(+o.apply(this,arguments)+ +u.apply(this,arguments))/2-ml/2;return[r0(g)*f,ei(g)*f]},c.innerRadius=function(f){return arguments.length?(t=typeof f=="function"?f:bt(+f),c):t},c.outerRadius=function(f){return arguments.length?(e=typeof f=="function"?f:bt(+f),c):e},c.cornerRadius=function(f){return arguments.length?(n=typeof f=="function"?f:bt(+f),c):n},c.padRadius=function(f){return arguments.length?(i=f==null?null:typeof f=="function"?f:bt(+f),c):i},c.startAngle=function(f){return arguments.length?(o=typeof f=="function"?f:bt(+f),c):o},c.endAngle=function(f){return arguments.length?(u=typeof f=="function"?f:bt(+f),c):u},c.padAngle=function(f){return arguments.length?(l=typeof f=="function"?f:bt(+f),c):l},c.context=function(f){return arguments.length?(a=f??null,c):a},c}function Fq(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function zq(t){this._context=t}zq.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e);break}}};function AS(t){return new zq(t)}function Lq(t){return t[0]}function jq(t){return t[1]}function Pq(t,e){var n=bt(!0),i=null,o=AS,u=null,l=Ng(a);t=typeof t=="function"?t:t===void 0?Lq:bt(t),e=typeof e=="function"?e:e===void 0?jq:bt(e);function a(s){var c,f=(s=Fq(s)).length,g,p=!1,m;for(i==null&&(u=o(m=l())),c=0;c<=f;++c)!(c<f&&n(g=s[c],c,s))===p&&((p=!p)?u.lineStart():u.lineEnd()),p&&u.point(+t(g,c,s),+e(g,c,s));if(m)return u=null,m+""||null}return a.x=function(s){return arguments.length?(t=typeof s=="function"?s:bt(+s),a):t},a.y=function(s){return arguments.length?(e=typeof s=="function"?s:bt(+s),a):e},a.defined=function(s){return arguments.length?(n=typeof s=="function"?s:bt(!!s),a):n},a.curve=function(s){return arguments.length?(o=s,i!=null&&(u=o(i)),a):o},a.context=function(s){return arguments.length?(s==null?i=u=null:u=o(i=s),a):i},a}function Iq(t,e,n){var i=null,o=bt(!0),u=null,l=AS,a=null,s=Ng(c);t=typeof t=="function"?t:t===void 0?Lq:bt(+t),e=typeof e=="function"?e:bt(e===void 0?0:+e),n=typeof n=="function"?n:n===void 0?jq:bt(+n);function c(g){var p,m,v,b=(g=Fq(g)).length,x,w=!1,S,A=new Array(b),C=new Array(b);for(u==null&&(a=l(S=s())),p=0;p<=b;++p){if(!(p<b&&o(x=g[p],p,g))===w)if(w=!w)m=p,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),v=p-1;v>=m;--v)a.point(A[v],C[v]);a.lineEnd(),a.areaEnd()}w&&(A[p]=+t(x,p,g),C[p]=+e(x,p,g),a.point(i?+i(x,p,g):A[p],n?+n(x,p,g):C[p]))}if(S)return a=null,S+""||null}function f(){return Pq().defined(o).curve(l).context(u)}return c.x=function(g){return arguments.length?(t=typeof g=="function"?g:bt(+g),i=null,c):t},c.x0=function(g){return arguments.length?(t=typeof g=="function"?g:bt(+g),c):t},c.x1=function(g){return arguments.length?(i=g==null?null:typeof g=="function"?g:bt(+g),c):i},c.y=function(g){return arguments.length?(e=typeof g=="function"?g:bt(+g),n=null,c):e},c.y0=function(g){return arguments.length?(e=typeof g=="function"?g:bt(+g),c):e},c.y1=function(g){return arguments.length?(n=g==null?null:typeof g=="function"?g:bt(+g),c):n},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(n)},c.lineX1=function(){return f().x(i).y(e)},c.defined=function(g){return arguments.length?(o=typeof g=="function"?g:bt(!!g),c):o},c.curve=function(g){return arguments.length?(l=g,u!=null&&(a=l(u)),c):l},c.context=function(g){return arguments.length?(g==null?u=a=null:a=l(u=g),c):u},c}const Nl1={draw(t,e){const n=T0(e/ml);t.moveTo(n,0),t.arc(0,0,n,0,Dq)}};function Rl1(t,e){let n=null,i=Ng(o);t=typeof t=="function"?t:bt(t||Nl1),e=typeof e=="function"?e:bt(e===void 0?64:+e);function o(){let u;if(n||(n=u=i()),t.apply(this,arguments).draw(n,+e.apply(this,arguments)),u)return n=null,u+""||null}return o.type=function(u){return arguments.length?(t=typeof u=="function"?u:bt(u),o):t},o.size=function(u){return arguments.length?(e=typeof u=="function"?u:bt(+u),o):e},o.context=function(u){return arguments.length?(n=u??null,o):n},o}function yu(){}function Td(t,e,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+e)/6,(t._y0+4*t._y1+n)/6)}function Rg(t){this._context=t}Rg.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Td(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Td(this,t,e);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function Dl1(t){return new Rg(t)}function Bq(t){this._context=t}Bq.prototype={areaStart:yu,areaEnd:yu,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:{this._context.moveTo(this._x2,this._y2),this._context.closePath();break}case 2:{this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break}case 3:{this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4);break}}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x2=t,this._y2=e;break;case 1:this._point=2,this._x3=t,this._y3=e;break;case 2:this._point=3,this._x4=t,this._y4=e,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+e)/6);break;default:Td(this,t,e);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function Ol1(t){return new Bq(t)}function Uq(t){this._context=t}Uq.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===3)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,i=(this._y0+4*this._y1+e)/6;this._line?this._context.lineTo(n,i):this._context.moveTo(n,i);break;case 3:this._point=4;default:Td(this,t,e);break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}};function Fl1(t){return new Uq(t)}function qq(t,e){this._basis=new Rg(t),this._beta=e}qq.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,e=this._y,n=t.length-1;if(n>0)for(var i=t[0],o=e[0],u=t[n]-i,l=e[n]-o,a=-1,s;++a<=n;)s=a/n,this._basis.point(this._beta*t[a]+(1-this._beta)*(i+s*u),this._beta*e[a]+(1-this._beta)*(o+s*l));this._x=this._y=null,this._basis.lineEnd()},point:function(t,e){this._x.push(+t),this._y.push(+e)}};const zl1=(function t(e){function n(i){return e===1?new Rg(i):new qq(i,e)}return n.beta=function(i){return t(+i)},n})(.85);function $d(t,e,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-e),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function CS(t,e){this._context=t,this._k=(1-e)/6}CS.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:$d(this,this._x1,this._y1);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2,this._x1=t,this._y1=e;break;case 2:this._point=3;default:$d(this,t,e);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};const Ll1=(function t(e){function n(i){return new CS(i,e)}return n.tension=function(i){return t(+i)},n})(0);function kS(t,e){this._context=t,this._k=(1-e)/6}kS.prototype={areaStart:yu,areaEnd:yu,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:{this._context.moveTo(this._x3,this._y3),this._context.closePath();break}case 2:{this._context.lineTo(this._x3,this._y3),this._context.closePath();break}case 3:{this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5);break}}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:$d(this,t,e);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};const jl1=(function t(e){function n(i){return new kS(i,e)}return n.tension=function(i){return t(+i)},n})(0);function TS(t,e){this._context=t,this._k=(1-e)/6}TS.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===3)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:$d(this,t,e);break}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};const Pl1=(function t(e){function n(i){return new TS(i,e)}return n.tension=function(i){return t(+i)},n})(0);function $S(t,e,n){var i=t._x1,o=t._y1,u=t._x2,l=t._y2;if(t._l01_a>un){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,s=3*t._l01_a*(t._l01_a+t._l12_a);i=(i*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/s,o=(o*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/s}if(t._l23_a>un){var c=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,f=3*t._l23_a*(t._l23_a+t._l12_a);u=(u*c+t._x1*t._l23_2a-e*t._l12_2a)/f,l=(l*c+t._y1*t._l23_2a-n*t._l12_2a)/f}t._context.bezierCurveTo(i,o,u,l,t._x2,t._y2)}function Hq(t,e){this._context=t,this._alpha=e}Hq.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,i=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3;default:$S(this,t,e);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};const Il1=(function t(e){function n(i){return e?new Hq(i,e):new CS(i,0)}return n.alpha=function(i){return t(+i)},n})(.5);function Gq(t,e){this._context=t,this._alpha=e}Gq.prototype={areaStart:yu,areaEnd:yu,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:{this._context.moveTo(this._x3,this._y3),this._context.closePath();break}case 2:{this._context.lineTo(this._x3,this._y3),this._context.closePath();break}case 3:{this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5);break}}},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,i=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:$S(this,t,e);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};const Bl1=(function t(e){function n(i){return e?new Gq(i,e):new kS(i,0)}return n.alpha=function(i){return t(+i)},n})(.5);function Wq(t,e){this._context=t,this._alpha=e}Wq.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===3)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,i=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+i*i,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:$S(this,t,e);break}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}};const Ul1=(function t(e){function n(i){return e?new Wq(i,e):new TS(i,0)}return n.alpha=function(i){return t(+i)},n})(.5);function Yq(t){this._context=t}Yq.prototype={areaStart:yu,areaEnd:yu,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,e){t=+t,e=+e,this._point?this._context.lineTo(t,e):(this._point=1,this._context.moveTo(t,e))}};function ql1(t){return new Yq(t)}function aO(t){return t<0?-1:1}function rO(t,e,n){var i=t._x1-t._x0,o=e-t._x1,u=(t._y1-t._y0)/(i||o<0&&-0),l=(n-t._y1)/(o||i<0&&-0),a=(u*o+l*i)/(i+o);return(aO(u)+aO(l))*Math.min(Math.abs(u),Math.abs(l),.5*Math.abs(a))||0}function sO(t,e){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-e)/2:e}function mv(t,e,n){var i=t._x0,o=t._y0,u=t._x1,l=t._y1,a=(u-i)/3;t._context.bezierCurveTo(i+a,o+a*e,u-a,l-a*n,u,l)}function Md(t){this._context=t}Md.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:mv(this,this._t0,sO(this,this._t0));break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){var n=NaN;if(t=+t,e=+e,!(t===this._x1&&e===this._y1)){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,mv(this,sO(this,n=rO(this,t,e)),n);break;default:mv(this,this._t0,n=rO(this,t,e));break}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e,this._t0=n}}};function Vq(t){this._context=new Xq(t)}(Vq.prototype=Object.create(Md.prototype)).point=function(t,e){Md.prototype.point.call(this,e,t)};function Xq(t){this._context=t}Xq.prototype={moveTo:function(t,e){this._context.moveTo(e,t)},closePath:function(){this._context.closePath()},lineTo:function(t,e){this._context.lineTo(e,t)},bezierCurveTo:function(t,e,n,i,o,u){this._context.bezierCurveTo(e,t,i,n,u,o)}};function Hl1(t){return new Md(t)}function Gl1(t){return new Vq(t)}function Kq(t){this._context=t}Kq.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,e=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],e[0]):this._context.moveTo(t[0],e[0]),n===2)this._context.lineTo(t[1],e[1]);else for(var i=cO(t),o=cO(e),u=0,l=1;l<n;++u,++l)this._context.bezierCurveTo(i[0][u],o[0][u],i[1][u],o[1][u],t[l],e[l]);(this._line||this._line!==0&&n===1)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,e){this._x.push(+t),this._y.push(+e)}};function cO(t){var e,n=t.length-1,i,o=new Array(n),u=new Array(n),l=new Array(n);for(o[0]=0,u[0]=2,l[0]=t[0]+2*t[1],e=1;e<n-1;++e)o[e]=1,u[e]=4,l[e]=4*t[e]+2*t[e+1];for(o[n-1]=2,u[n-1]=7,l[n-1]=8*t[n-1]+t[n],e=1;e<n;++e)i=o[e]/u[e-1],u[e]-=i,l[e]-=i*l[e-1];for(o[n-1]=l[n-1]/u[n-1],e=n-2;e>=0;--e)o[e]=(l[e]-o[e+1])/u[e];for(u[n-1]=(t[n]+o[n-1])/2,e=0;e<n-1;++e)u[e]=2*t[e+1]-o[e+1];return[o,u]}function Wl1(t){return new Kq(t)}function Dg(t,e){this._context=t,this._t=e}Dg.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&this._point===2&&this._context.lineTo(this._x,this._y),(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:{if(this._t<=0)this._context.lineTo(this._x,e),this._context.lineTo(t,e);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,e)}break}}this._x=t,this._y=e}};function Yl1(t){return new Dg(t,.5)}function Vl1(t){return new Dg(t,0)}function Xl1(t){return new Dg(t,1)}function cu(t,e){if(typeof document<"u"&&document.createElement){const n=document.createElement("canvas");if(n&&n.getContext)return n.width=t,n.height=e,n}return null}const Kl1=()=>typeof Image<"u"?Image:null;function Ri(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t);break}return this}function Nu(t,e){switch(arguments.length){case 0:break;case 1:{typeof t=="function"?this.interpolator(t):this.range(t);break}default:{this.domain(t),typeof e=="function"?this.interpolator(e):this.range(e);break}}return this}const Ax=Symbol("implicit");function MS(){var t=new kD,e=[],n=[],i=Ax;function o(u){let l=t.get(u);if(l===void 0){if(i!==Ax)return i;t.set(u,l=e.push(u)-1)}return n[l%n.length]}return o.domain=function(u){if(!arguments.length)return e.slice();e=[],t=new kD;for(const l of u)t.has(l)||t.set(l,e.push(l)-1);return o},o.range=function(u){return arguments.length?(n=Array.from(u),o):n.slice()},o.unknown=function(u){return arguments.length?(i=u,o):i},o.copy=function(){return MS(e,n).unknown(i)},Ri.apply(o,arguments),o}function la(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function j8(t,e){var n=Object.create(t.prototype);for(var i in e)n[i]=e[i];return n}function Ru(){}var W0=.7,yl=1/W0,K5="\\s*([+-]?\\d+)\\s*",Kr="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",pi="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Ql1=/^#([0-9a-f]{3,8})$/,Zl1=new RegExp(`^rgb\\(${K5},${K5},${K5}\\)$`),Jl1=new RegExp(`^rgb\\(${pi},${pi},${pi}\\)$`),ta1=new RegExp(`^rgba\\(${K5},${K5},${K5},${Kr}\\)$`),ea1=new RegExp(`^rgba\\(${pi},${pi},${pi},${Kr}\\)$`),na1=new RegExp(`^hsl\\(${Kr},${pi},${pi}\\)$`),ia1=new RegExp(`^hsla\\(${Kr},${pi},${pi},${Kr}\\)$`),dO={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};la(Ru,Y0,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:fO,formatHex:fO,formatHex8:oa1,formatHsl:ua1,formatRgb:gO,toString:gO});function fO(){return this.rgb().formatHex()}function oa1(){return this.rgb().formatHex8()}function ua1(){return Qq(this).formatHsl()}function gO(){return this.rgb().formatRgb()}function Y0(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=Ql1.exec(t))?(n=e[1].length,e=parseInt(e[1],16),n===6?hO(e):n===3?new $e(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):n===8?Qs(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):n===4?Qs(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=Zl1.exec(t))?new $e(e[1],e[2],e[3],1):(e=Jl1.exec(t))?new $e(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=ta1.exec(t))?Qs(e[1],e[2],e[3],e[4]):(e=ea1.exec(t))?Qs(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=na1.exec(t))?yO(e[1],e[2]/100,e[3]/100,1):(e=ia1.exec(t))?yO(e[1],e[2]/100,e[3]/100,e[4]):dO.hasOwnProperty(t)?hO(dO[t]):t==="transparent"?new $e(NaN,NaN,NaN,0):null}function hO(t){return new $e(t>>16&255,t>>8&255,t&255,1)}function Qs(t,e,n,i){return i<=0&&(t=e=n=NaN),new $e(t,e,n,i)}function NS(t){return t instanceof Ru||(t=Y0(t)),t?(t=t.rgb(),new $e(t.r,t.g,t.b,t.opacity)):new $e}function vu(t,e,n,i){return arguments.length===1?NS(t):new $e(t,e,n,i??1)}function $e(t,e,n,i){this.r=+t,this.g=+e,this.b=+n,this.opacity=+i}la($e,vu,j8(Ru,{brighter(t){return t=t==null?yl:Math.pow(yl,t),new $e(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=t==null?W0:Math.pow(W0,t),new $e(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new $e(D0(this.r),D0(this.g),D0(this.b),Nd(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:pO,formatHex:pO,formatHex8:la1,formatRgb:mO,toString:mO}));function pO(){return`#${$0(this.r)}${$0(this.g)}${$0(this.b)}`}function la1(){return`#${$0(this.r)}${$0(this.g)}${$0(this.b)}${$0((isNaN(this.opacity)?1:this.opacity)*255)}`}function mO(){const t=Nd(this.opacity);return`${t===1?"rgb(":"rgba("}${D0(this.r)}, ${D0(this.g)}, ${D0(this.b)}${t===1?")":`, ${t})`}`}function Nd(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function D0(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function $0(t){return t=D0(t),(t<16?"0":"")+t.toString(16)}function yO(t,e,n,i){return i<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new S3(t,e,n,i)}function Qq(t){if(t instanceof S3)return new S3(t.h,t.s,t.l,t.opacity);if(t instanceof Ru||(t=Y0(t)),!t)return new S3;if(t instanceof S3)return t;t=t.rgb();var e=t.r/255,n=t.g/255,i=t.b/255,o=Math.min(e,n,i),u=Math.max(e,n,i),l=NaN,a=u-o,s=(u+o)/2;return a?(e===u?l=(n-i)/a+(n<i)*6:n===u?l=(i-e)/a+2:l=(e-n)/a+4,a/=s<.5?u+o:2-u-o,l*=60):a=s>0&&s<1?0:l,new S3(l,a,s,t.opacity)}function Rd(t,e,n,i){return arguments.length===1?Qq(t):new S3(t,e,n,i??1)}function S3(t,e,n,i){this.h=+t,this.s=+e,this.l=+n,this.opacity=+i}la(S3,Rd,j8(Ru,{brighter(t){return t=t==null?yl:Math.pow(yl,t),new S3(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?W0:Math.pow(W0,t),new S3(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+(this.h<0)*360,e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,i=n+(n<.5?n:1-n)*e,o=2*n-i;return new $e(yv(t>=240?t-240:t+120,o,i),yv(t,o,i),yv(t<120?t+240:t-120,o,i),this.opacity)},clamp(){return new S3(vO(this.h),Zs(this.s),Zs(this.l),Nd(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=Nd(this.opacity);return`${t===1?"hsl(":"hsla("}${vO(this.h)}, ${Zs(this.s)*100}%, ${Zs(this.l)*100}%${t===1?")":`, ${t})`}`}}));function vO(t){return t=(t||0)%360,t<0?t+360:t}function Zs(t){return Math.max(0,Math.min(1,t||0))}function yv(t,e,n){return(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)*255}const Zq=Math.PI/180,Jq=180/Math.PI,Dd=18,tH=.96422,eH=1,nH=.82521,iH=4/29,Q5=6/29,oH=3*Q5*Q5,aa1=Q5*Q5*Q5;function uH(t){if(t instanceof mi)return new mi(t.l,t.a,t.b,t.opacity);if(t instanceof No)return lH(t);t instanceof $e||(t=NS(t));var e=_v(t.r),n=_v(t.g),i=_v(t.b),o=vv((.2225045*e+.7168786*n+.0606169*i)/eH),u,l;return e===n&&n===i?u=l=o:(u=vv((.4360747*e+.3850649*n+.1430804*i)/tH),l=vv((.0139322*e+.0971045*n+.7141733*i)/nH)),new mi(116*o-16,500*(u-o),200*(o-l),t.opacity)}function Od(t,e,n,i){return arguments.length===1?uH(t):new mi(t,e,n,i??1)}function mi(t,e,n,i){this.l=+t,this.a=+e,this.b=+n,this.opacity=+i}la(mi,Od,j8(Ru,{brighter(t){return new mi(this.l+Dd*(t??1),this.a,this.b,this.opacity)},darker(t){return new mi(this.l-Dd*(t??1),this.a,this.b,this.opacity)},rgb(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return e=tH*bv(e),t=eH*bv(t),n=nH*bv(n),new $e(xv(3.1338561*e-1.6168667*t-.4906146*n),xv(-.9787684*e+1.9161415*t+.033454*n),xv(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}}));function vv(t){return t>aa1?Math.pow(t,1/3):t/oH+iH}function bv(t){return t>Q5?t*t*t:oH*(t-iH)}function xv(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function _v(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function ra1(t){if(t instanceof No)return new No(t.h,t.c,t.l,t.opacity);if(t instanceof mi||(t=uH(t)),t.a===0&&t.b===0)return new No(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*Jq;return new No(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Fd(t,e,n,i){return arguments.length===1?ra1(t):new No(t,e,n,i??1)}function No(t,e,n,i){this.h=+t,this.c=+e,this.l=+n,this.opacity=+i}function lH(t){if(isNaN(t.h))return new mi(t.l,0,0,t.opacity);var e=t.h*Zq;return new mi(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}la(No,Fd,j8(Ru,{brighter(t){return new No(this.h,this.c,this.l+Dd*(t??1),this.opacity)},darker(t){return new No(this.h,this.c,this.l-Dd*(t??1),this.opacity)},rgb(){return lH(this).rgb()}}));var aH=-.14861,RS=1.78277,DS=-.29227,Og=-.90649,Qr=1.97294,bO=Qr*Og,xO=Qr*RS,_O=RS*DS-Og*aH;function sa1(t){if(t instanceof O0)return new O0(t.h,t.s,t.l,t.opacity);t instanceof $e||(t=NS(t));var e=t.r/255,n=t.g/255,i=t.b/255,o=(_O*i+bO*e-xO*n)/(_O+bO-xO),u=i-o,l=(Qr*(n-o)-DS*u)/Og,a=Math.sqrt(l*l+u*u)/(Qr*o*(1-o)),s=a?Math.atan2(l,u)*Jq-120:NaN;return new O0(s<0?s+360:s,a,o,t.opacity)}function Cx(t,e,n,i){return arguments.length===1?sa1(t):new O0(t,e,n,i??1)}function O0(t,e,n,i){this.h=+t,this.s=+e,this.l=+n,this.opacity=+i}la(O0,Cx,j8(Ru,{brighter(t){return t=t==null?yl:Math.pow(yl,t),new O0(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=t==null?W0:Math.pow(W0,t),new O0(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=isNaN(this.h)?0:(this.h+120)*Zq,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),i=Math.cos(t),o=Math.sin(t);return new $e(255*(e+n*(aH*i+RS*o)),255*(e+n*(DS*i+Og*o)),255*(e+n*(Qr*i)),this.opacity)}}));function rH(t,e,n,i,o){var u=t*t,l=u*t;return((1-3*t+3*u-l)*e+(4-6*u+3*l)*n+(1+3*t+3*u-3*l)*i+l*o)/6}function sH(t){var e=t.length-1;return function(n){var i=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),o=t[i],u=t[i+1],l=i>0?t[i-1]:2*o-u,a=i<e-1?t[i+2]:2*u-o;return rH((n-i/e)*e,l,o,u,a)}}function cH(t){var e=t.length;return function(n){var i=Math.floor(((n%=1)<0?++n:n)*e),o=t[(i+e-1)%e],u=t[i%e],l=t[(i+1)%e],a=t[(i+2)%e];return rH((n-i/e)*e,o,u,l,a)}}const Fg=t=>()=>t;function dH(t,e){return function(n){return t+n*e}}function ca1(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(i){return Math.pow(t+i*e,n)}}function zg(t,e){var n=e-t;return n?dH(t,n>180||n<-180?n-360*Math.round(n/360):n):Fg(isNaN(t)?e:t)}function da1(t){return(t=+t)==1?Me:function(e,n){return n-e?ca1(e,n,t):Fg(isNaN(e)?n:e)}}function Me(t,e){var n=e-t;return n?dH(t,n):Fg(isNaN(t)?e:t)}const Zr=(function t(e){var n=da1(e);function i(o,u){var l=n((o=vu(o)).r,(u=vu(u)).r),a=n(o.g,u.g),s=n(o.b,u.b),c=Me(o.opacity,u.opacity);return function(f){return o.r=l(f),o.g=a(f),o.b=s(f),o.opacity=c(f),o+""}}return i.gamma=t,i})(1);function fH(t){return function(e){var n=e.length,i=new Array(n),o=new Array(n),u=new Array(n),l,a;for(l=0;l<n;++l)a=vu(e[l]),i[l]=a.r||0,o[l]=a.g||0,u[l]=a.b||0;return i=t(i),o=t(o),u=t(u),a.opacity=1,function(s){return a.r=i(s),a.g=o(s),a.b=u(s),a+""}}}var fa1=fH(sH),ga1=fH(cH);function OS(t,e){e||(e=[]);var n=t?Math.min(e.length,t.length):0,i=e.slice(),o;return function(u){for(o=0;o<n;++o)i[o]=t[o]*(1-u)+e[o]*u;return i}}function gH(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function ha1(t,e){return(gH(e)?OS:hH)(t,e)}function hH(t,e){var n=e?e.length:0,i=t?Math.min(n,t.length):0,o=new Array(i),u=new Array(n),l;for(l=0;l<i;++l)o[l]=u4(t[l],e[l]);for(;l<n;++l)u[l]=e[l];return function(a){for(l=0;l<i;++l)u[l]=o[l](a);return u}}function pH(t,e){var n=new Date;return t=+t,e=+e,function(i){return n.setTime(t*(1-i)+e*i),n}}function G2(t,e){return t=+t,e=+e,function(n){return t*(1-n)+e*n}}function mH(t,e){var n={},i={},o;(t===null||typeof t!="object")&&(t={}),(e===null||typeof e!="object")&&(e={});for(o in e)o in t?n[o]=u4(t[o],e[o]):i[o]=e[o];return function(u){for(o in n)i[o]=n[o](u);return i}}var kx=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,wv=new RegExp(kx.source,"g");function pa1(t){return function(){return t}}function ma1(t){return function(e){return t(e)+""}}function FS(t,e){var n=kx.lastIndex=wv.lastIndex=0,i,o,u,l=-1,a=[],s=[];for(t=t+"",e=e+"";(i=kx.exec(t))&&(o=wv.exec(e));)(u=o.index)>n&&(u=e.slice(n,u),a[l]?a[l]+=u:a[++l]=u),(i=i[0])===(o=o[0])?a[l]?a[l]+=o:a[++l]=o:(a[++l]=null,s.push({i:l,x:G2(i,o)})),n=wv.lastIndex;return n<e.length&&(u=e.slice(n),a[l]?a[l]+=u:a[++l]=u),a.length<2?s[0]?ma1(s[0].x):pa1(e):(e=s.length,function(c){for(var f=0,g;f<e;++f)a[(g=s[f]).i]=g.x(c);return a.join("")})}function u4(t,e){var n=typeof e,i;return e==null||n==="boolean"?Fg(e):(n==="number"?G2:n==="string"?(i=Y0(e))?(e=i,Zr):FS:e instanceof Y0?Zr:e instanceof Date?pH:gH(e)?OS:Array.isArray(e)?hH:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?mH:G2)(t,e)}function ya1(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}function va1(t,e){var n=zg(+t,+e);return function(i){var o=n(i);return o-360*Math.floor(o/360)}}function P8(t,e){return t=+t,e=+e,function(n){return Math.round(t*(1-n)+e*n)}}var wO=180/Math.PI,Tx={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function yH(t,e,n,i,o,u){var l,a,s;return(l=Math.sqrt(t*t+e*e))&&(t/=l,e/=l),(s=t*n+e*i)&&(n-=t*s,i-=e*s),(a=Math.sqrt(n*n+i*i))&&(n/=a,i/=a,s/=a),t*i<e*n&&(t=-t,e=-e,s=-s,l=-l),{translateX:o,translateY:u,rotate:Math.atan2(e,t)*wO,skewX:Math.atan(s)*wO,scaleX:l,scaleY:a}}var Js;function ba1(t){const e=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(t+"");return e.isIdentity?Tx:yH(e.a,e.b,e.c,e.d,e.e,e.f)}function xa1(t){return t==null||(Js||(Js=document.createElementNS("http://www.w3.org/2000/svg","g")),Js.setAttribute("transform",t),!(t=Js.transform.baseVal.consolidate()))?Tx:(t=t.matrix,yH(t.a,t.b,t.c,t.d,t.e,t.f))}function vH(t,e,n,i){function o(c){return c.length?c.pop()+" ":""}function u(c,f,g,p,m,v){if(c!==g||f!==p){var b=m.push("translate(",null,e,null,n);v.push({i:b-4,x:G2(c,g)},{i:b-2,x:G2(f,p)})}else(g||p)&&m.push("translate("+g+e+p+n)}function l(c,f,g,p){c!==f?(c-f>180?f+=360:f-c>180&&(c+=360),p.push({i:g.push(o(g)+"rotate(",null,i)-2,x:G2(c,f)})):f&&g.push(o(g)+"rotate("+f+i)}function a(c,f,g,p){c!==f?p.push({i:g.push(o(g)+"skewX(",null,i)-2,x:G2(c,f)}):f&&g.push(o(g)+"skewX("+f+i)}function s(c,f,g,p,m,v){if(c!==g||f!==p){var b=m.push(o(m)+"scale(",null,",",null,")");v.push({i:b-4,x:G2(c,g)},{i:b-2,x:G2(f,p)})}else(g!==1||p!==1)&&m.push(o(m)+"scale("+g+","+p+")")}return function(c,f){var g=[],p=[];return c=t(c),f=t(f),u(c.translateX,c.translateY,f.translateX,f.translateY,g,p),l(c.rotate,f.rotate,g,p),a(c.skewX,f.skewX,g,p),s(c.scaleX,c.scaleY,f.scaleX,f.scaleY,g,p),c=f=null,function(m){for(var v=-1,b=p.length,x;++v<b;)g[(x=p[v]).i]=x.x(m);return g.join("")}}}var bH=vH(ba1,"px, ","px)","deg)"),xH=vH(xa1,", ",")",")"),_a1=1e-12;function EO(t){return((t=Math.exp(t))+1/t)/2}function wa1(t){return((t=Math.exp(t))-1/t)/2}function Ea1(t){return((t=Math.exp(2*t))-1)/(t+1)}const _H=(function t(e,n,i){function o(u,l){var a=u[0],s=u[1],c=u[2],f=l[0],g=l[1],p=l[2],m=f-a,v=g-s,b=m*m+v*v,x,w;if(b<_a1)w=Math.log(p/c)/e,x=function(T){return[a+T*m,s+T*v,c*Math.exp(e*T*w)]};else{var S=Math.sqrt(b),A=(p*p-c*c+i*b)/(2*c*n*S),C=(p*p-c*c-i*b)/(2*p*n*S),k=Math.log(Math.sqrt(A*A+1)-A),M=Math.log(Math.sqrt(C*C+1)-C);w=(M-k)/e,x=function(T){var D=T*w,I=EO(k),U=c/(n*S)*(I*Ea1(e*D+k)-wa1(k));return[a+U*m,s+U*v,c*I/EO(e*D+k)]}}return x.duration=w*1e3*e/Math.SQRT2,x}return o.rho=function(u){var l=Math.max(.001,+u),a=l*l,s=a*a;return t(l,a,s)},o})(Math.SQRT2,2,4);function wH(t){return function(e,n){var i=t((e=Rd(e)).h,(n=Rd(n)).h),o=Me(e.s,n.s),u=Me(e.l,n.l),l=Me(e.opacity,n.opacity);return function(a){return e.h=i(a),e.s=o(a),e.l=u(a),e.opacity=l(a),e+""}}}const Sa1=wH(zg);var Aa1=wH(Me);function Ca1(t,e){var n=Me((t=Od(t)).l,(e=Od(e)).l),i=Me(t.a,e.a),o=Me(t.b,e.b),u=Me(t.opacity,e.opacity);return function(l){return t.l=n(l),t.a=i(l),t.b=o(l),t.opacity=u(l),t+""}}function EH(t){return function(e,n){var i=t((e=Fd(e)).h,(n=Fd(n)).h),o=Me(e.c,n.c),u=Me(e.l,n.l),l=Me(e.opacity,n.opacity);return function(a){return e.h=i(a),e.c=o(a),e.l=u(a),e.opacity=l(a),e+""}}}const ka1=EH(zg);var Ta1=EH(Me);function SH(t){return(function e(n){n=+n;function i(o,u){var l=t((o=Cx(o)).h,(u=Cx(u)).h),a=Me(o.s,u.s),s=Me(o.l,u.l),c=Me(o.opacity,u.opacity);return function(f){return o.h=l(f),o.s=a(f),o.l=s(Math.pow(f,n)),o.opacity=c(f),o+""}}return i.gamma=e,i})(1)}const $a1=SH(zg);var Ma1=SH(Me);function zS(t,e){e===void 0&&(e=t,t=u4);for(var n=0,i=e.length-1,o=e[0],u=new Array(i<0?0:i);n<i;)u[n]=t(o,o=e[++n]);return function(l){var a=Math.max(0,Math.min(i-1,Math.floor(l*=i)));return u[a](l-a)}}function Na1(t,e){for(var n=new Array(e),i=0;i<e;++i)n[i]=t(i/(e-1));return n}const Ra1=Object.freeze(Object.defineProperty({__proto__:null,interpolate:u4,interpolateArray:ha1,interpolateBasis:sH,interpolateBasisClosed:cH,interpolateCubehelix:$a1,interpolateCubehelixLong:Ma1,interpolateDate:pH,interpolateDiscrete:ya1,interpolateHcl:ka1,interpolateHclLong:Ta1,interpolateHsl:Sa1,interpolateHslLong:Aa1,interpolateHue:va1,interpolateLab:Ca1,interpolateNumber:G2,interpolateNumberArray:OS,interpolateObject:mH,interpolateRgb:Zr,interpolateRgbBasis:fa1,interpolateRgbBasisClosed:ga1,interpolateRound:P8,interpolateString:FS,interpolateTransformCss:bH,interpolateTransformSvg:xH,interpolateZoom:_H,piecewise:zS,quantize:Na1},Symbol.toStringTag,{value:"Module"}));function Da1(t){return function(){return t}}function $x(t){return+t}var SO=[0,1];function Xn(t){return t}function Mx(t,e){return(e-=t=+t)?function(n){return(n-t)/e}:Da1(isNaN(e)?NaN:.5)}function Oa1(t,e){var n;return t>e&&(n=t,t=e,e=n),function(i){return Math.max(t,Math.min(e,i))}}function Fa1(t,e,n){var i=t[0],o=t[1],u=e[0],l=e[1];return o<i?(i=Mx(o,i),u=n(l,u)):(i=Mx(i,o),u=n(u,l)),function(a){return u(i(a))}}function za1(t,e,n){var i=Math.min(t.length,e.length)-1,o=new Array(i),u=new Array(i),l=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),e=e.slice().reverse());++l<i;)o[l]=Mx(t[l],t[l+1]),u[l]=n(e[l],e[l+1]);return function(a){var s=hu(t,a,1,i)-1;return u[s](o[s](a))}}function I8(t,e){return e.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function Lg(){var t=SO,e=SO,n=u4,i,o,u,l=Xn,a,s,c;function f(){var p=Math.min(t.length,e.length);return l!==Xn&&(l=Oa1(t[0],t[p-1])),a=p>2?za1:Fa1,s=c=null,g}function g(p){return p==null||isNaN(p=+p)?u:(s||(s=a(t.map(i),e,n)))(i(l(p)))}return g.invert=function(p){return l(o((c||(c=a(e,t.map(i),G2)))(p)))},g.domain=function(p){return arguments.length?(t=Array.from(p,$x),f()):t.slice()},g.range=function(p){return arguments.length?(e=Array.from(p),f()):e.slice()},g.rangeRound=function(p){return e=Array.from(p),n=P8,f()},g.clamp=function(p){return arguments.length?(l=p?!0:Xn,f()):l!==Xn},g.interpolate=function(p){return arguments.length?(n=p,f()):n},g.unknown=function(p){return arguments.length?(u=p,g):u},function(p,m){return i=p,o=m,f()}}function AH(){return Lg()(Xn,Xn)}function CH(t,e,n,i){var o=pu(t,e,n),u;switch(i=G0(i??",f"),i.type){case"s":{var l=Math.max(Math.abs(t),Math.abs(e));return i.precision==null&&!isNaN(u=KB(o,l))&&(i.precision=u),wE(i,l)}case"":case"e":case"g":case"p":case"r":{i.precision==null&&!isNaN(u=QB(o,Math.max(Math.abs(t),Math.abs(e))))&&(i.precision=u-(i.type==="e"));break}case"f":case"%":{i.precision==null&&!isNaN(u=XB(o))&&(i.precision=u-(i.type==="%")*2);break}}return fg(i)}function _6(t){var e=t.domain;return t.ticks=function(n){var i=e();return cx(i[0],i[i.length-1],n??10)},t.tickFormat=function(n,i){var o=e();return CH(o[0],o[o.length-1],n??10,i)},t.nice=function(n){n==null&&(n=10);var i=e(),o=0,u=i.length-1,l=i[o],a=i[u],s,c,f=10;for(a<l&&(c=l,l=a,a=c,c=o,o=u,u=c);f-- >0;){if(c=dx(l,a,n),c===s)return i[o]=l,i[u]=a,e(i);if(c>0)l=Math.floor(l/c)*c,a=Math.ceil(a/c)*c;else if(c<0)l=Math.ceil(l*c)/c,a=Math.floor(a*c)/c;else break;s=c}return t},t}function LS(){var t=AH();return t.copy=function(){return I8(t,LS())},Ri.apply(t,arguments),_6(t)}function kH(t){var e;function n(i){return i==null||isNaN(i=+i)?e:i}return n.invert=n,n.domain=n.range=function(i){return arguments.length?(t=Array.from(i,$x),n):t.slice()},n.unknown=function(i){return arguments.length?(e=i,n):e},n.copy=function(){return kH(t).unknown(e)},t=arguments.length?Array.from(t,$x):[0,1],_6(n)}function TH(t,e){t=t.slice();var n=0,i=t.length-1,o=t[n],u=t[i],l;return u<o&&(l=n,n=i,i=l,l=o,o=u,u=l),t[n]=e.floor(o),t[i]=e.ceil(u),t}function AO(t){return Math.log(t)}function CO(t){return Math.exp(t)}function La1(t){return-Math.log(-t)}function ja1(t){return-Math.exp(-t)}function Pa1(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Ia1(t){return t===10?Pa1:t===Math.E?Math.exp:e=>Math.pow(t,e)}function Ba1(t){return t===Math.E?Math.log:t===10&&Math.log10||t===2&&Math.log2||(t=Math.log(t),e=>Math.log(e)/t)}function kO(t){return(e,n)=>-t(-e,n)}function jS(t){const e=t(AO,CO),n=e.domain;let i=10,o,u;function l(){return o=Ba1(i),u=Ia1(i),n()[0]<0?(o=kO(o),u=kO(u),t(La1,ja1)):t(AO,CO),e}return e.base=function(a){return arguments.length?(i=+a,l()):i},e.domain=function(a){return arguments.length?(n(a),l()):n()},e.ticks=a=>{const s=n();let c=s[0],f=s[s.length-1];const g=f<c;g&&([c,f]=[f,c]);let p=o(c),m=o(f),v,b;const x=a==null?10:+a;let w=[];if(!(i%1)&&m-p<x){if(p=Math.floor(p),m=Math.ceil(m),c>0){for(;p<=m;++p)for(v=1;v<i;++v)if(b=p<0?v/u(-p):v*u(p),!(b<c)){if(b>f)break;w.push(b)}}else for(;p<=m;++p)for(v=i-1;v>=1;--v)if(b=p>0?v/u(-p):v*u(p),!(b<c)){if(b>f)break;w.push(b)}w.length*2<x&&(w=cx(c,f,x))}else w=cx(p,m,Math.min(m-p,x)).map(u);return g?w.reverse():w},e.tickFormat=(a,s)=>{if(a==null&&(a=10),s==null&&(s=i===10?"s":","),typeof s!="function"&&(!(i%1)&&(s=G0(s)).precision==null&&(s.trim=!0),s=fg(s)),a===1/0)return s;const c=Math.max(1,i*a/e.ticks().length);return f=>{let g=f/u(Math.round(o(f)));return g*i<i-.5&&(g*=i),g<=c?s(f):""}},e.nice=()=>n(TH(n(),{floor:a=>u(Math.floor(o(a))),ceil:a=>u(Math.ceil(o(a)))})),e}function $H(){const t=jS(Lg()).domain([1,10]);return t.copy=()=>I8(t,$H()).base(t.base()),Ri.apply(t,arguments),t}function TO(t){return function(e){return Math.sign(e)*Math.log1p(Math.abs(e/t))}}function $O(t){return function(e){return Math.sign(e)*Math.expm1(Math.abs(e))*t}}function PS(t){var e=1,n=t(TO(e),$O(e));return n.constant=function(i){return arguments.length?t(TO(e=+i),$O(e)):e},_6(n)}function MH(){var t=PS(Lg());return t.copy=function(){return I8(t,MH()).constant(t.constant())},Ri.apply(t,arguments)}function MO(t){return function(e){return e<0?-Math.pow(-e,t):Math.pow(e,t)}}function Ua1(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function qa1(t){return t<0?-t*t:t*t}function IS(t){var e=t(Xn,Xn),n=1;function i(){return n===1?t(Xn,Xn):n===.5?t(Ua1,qa1):t(MO(n),MO(1/n))}return e.exponent=function(o){return arguments.length?(n=+o,i()):n},_6(e)}function BS(){var t=IS(Lg());return t.copy=function(){return I8(t,BS()).exponent(t.exponent())},Ri.apply(t,arguments),t}function Ha1(){return BS.apply(null,arguments).exponent(.5)}function NH(){var t=[],e=[],n=[],i;function o(){var l=0,a=Math.max(1,e.length);for(n=new Array(a-1);++l<a;)n[l-1]=qB(t,l/a);return u}function u(l){return l==null||isNaN(l=+l)?i:e[hu(n,l)]}return u.invertExtent=function(l){var a=e.indexOf(l);return a<0?[NaN,NaN]:[a>0?n[a-1]:t[0],a<n.length?n[a]:t[t.length-1]]},u.domain=function(l){if(!arguments.length)return t.slice();t=[];for(let a of l)a!=null&&!isNaN(a=+a)&&t.push(a);return t.sort(jo),o()},u.range=function(l){return arguments.length?(e=Array.from(l),o()):e.slice()},u.unknown=function(l){return arguments.length?(i=l,u):i},u.quantiles=function(){return n.slice()},u.copy=function(){return NH().domain(t).range(e).unknown(i)},Ri.apply(u,arguments)}function RH(){var t=0,e=1,n=1,i=[.5],o=[0,1],u;function l(s){return s!=null&&s<=s?o[hu(i,s,0,n)]:u}function a(){var s=-1;for(i=new Array(n);++s<n;)i[s]=((s+1)*e-(s-n)*t)/(n+1);return l}return l.domain=function(s){return arguments.length?([t,e]=s,t=+t,e=+e,a()):[t,e]},l.range=function(s){return arguments.length?(n=(o=Array.from(s)).length-1,a()):o.slice()},l.invertExtent=function(s){var c=o.indexOf(s);return c<0?[NaN,NaN]:c<1?[t,i[0]]:c>=n?[i[n-1],e]:[i[c-1],i[c]]},l.unknown=function(s){return arguments.length&&(u=s),l},l.thresholds=function(){return i.slice()},l.copy=function(){return RH().domain([t,e]).range(o).unknown(u)},Ri.apply(_6(l),arguments)}function DH(){var t=[.5],e=[0,1],n,i=1;function o(u){return u!=null&&u<=u?e[hu(t,u,0,i)]:n}return o.domain=function(u){return arguments.length?(t=Array.from(u),i=Math.min(t.length,e.length-1),o):t.slice()},o.range=function(u){return arguments.length?(e=Array.from(u),i=Math.min(t.length,e.length-1),o):e.slice()},o.invertExtent=function(u){var l=e.indexOf(u);return[t[l-1],t[l]]},o.unknown=function(u){return arguments.length?(n=u,o):n},o.copy=function(){return DH().domain(t).range(e).unknown(n)},Ri.apply(o,arguments)}function Ga1(t){return new Date(t)}function Wa1(t){return t instanceof Date?+t:+new Date(+t)}function US(t,e,n,i,o,u,l,a,s,c){var f=AH(),g=f.invert,p=f.domain,m=c(".%L"),v=c(":%S"),b=c("%I:%M"),x=c("%I %p"),w=c("%a %d"),S=c("%b %d"),A=c("%B"),C=c("%Y");function k(M){return(s(M)<M?m:a(M)<M?v:l(M)<M?b:u(M)<M?x:i(M)<M?o(M)<M?w:S:n(M)<M?A:C)(M)}return f.invert=function(M){return new Date(g(M))},f.domain=function(M){return arguments.length?p(Array.from(M,Wa1)):p().map(Ga1)},f.ticks=function(M){var T=p();return t(T[0],T[T.length-1],M??10)},f.tickFormat=function(M,T){return T==null?k:c(T)},f.nice=function(M){var T=p();return(!M||typeof M.range!="function")&&(M=e(T[0],T[T.length-1],M??10)),M?p(TH(T,M)):f},f.copy=function(){return I8(f,US(t,e,n,i,o,u,l,a,s,c))},f}function OH(){return Ri.apply(US(i01,o01,wi,Gr,ea,Io,pg,gg,Mo,kE).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)}function Ya1(){return Ri.apply(US(e01,n01,Ei,Wr,na,ru,mg,hg,Mo,TE).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)}function jg(){var t=0,e=1,n,i,o,u,l=Xn,a=!1,s;function c(g){return g==null||isNaN(g=+g)?s:l(o===0?.5:(g=(u(g)-n)*o,a?Math.max(0,Math.min(1,g)):g))}c.domain=function(g){return arguments.length?([t,e]=g,n=u(t=+t),i=u(e=+e),o=n===i?0:1/(i-n),c):[t,e]},c.clamp=function(g){return arguments.length?(a=!!g,c):a},c.interpolator=function(g){return arguments.length?(l=g,c):l};function f(g){return function(p){var m,v;return arguments.length?([m,v]=p,l=g(m,v),c):[l(0),l(1)]}}return c.range=f(u4),c.rangeRound=f(P8),c.unknown=function(g){return arguments.length?(s=g,c):s},function(g){return u=g,n=g(t),i=g(e),o=n===i?0:1/(i-n),c}}function Du(t,e){return e.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function qS(){var t=_6(jg()(Xn));return t.copy=function(){return Du(t,qS())},Nu.apply(t,arguments)}function FH(){var t=jS(jg()).domain([1,10]);return t.copy=function(){return Du(t,FH()).base(t.base())},Nu.apply(t,arguments)}function zH(){var t=PS(jg());return t.copy=function(){return Du(t,zH()).constant(t.constant())},Nu.apply(t,arguments)}function HS(){var t=IS(jg());return t.copy=function(){return Du(t,HS()).exponent(t.exponent())},Nu.apply(t,arguments)}function Va1(){return HS.apply(null,arguments).exponent(.5)}function Pg(){var t=0,e=.5,n=1,i=1,o,u,l,a,s,c=Xn,f,g=!1,p;function m(b){return isNaN(b=+b)?p:(b=.5+((b=+f(b))-u)*(i*b<i*u?a:s),c(g?Math.max(0,Math.min(1,b)):b))}m.domain=function(b){return arguments.length?([t,e,n]=b,o=f(t=+t),u=f(e=+e),l=f(n=+n),a=o===u?0:.5/(u-o),s=u===l?0:.5/(l-u),i=u<o?-1:1,m):[t,e,n]},m.clamp=function(b){return arguments.length?(g=!!b,m):g},m.interpolator=function(b){return arguments.length?(c=b,m):c};function v(b){return function(x){var w,S,A;return arguments.length?([w,S,A]=x,c=zS(b,[w,S,A]),m):[c(0),c(.5),c(1)]}}return m.range=v(u4),m.rangeRound=v(P8),m.unknown=function(b){return arguments.length?(p=b,m):p},function(b){return f=b,o=b(t),u=b(e),l=b(n),a=o===u?0:.5/(u-o),s=u===l?0:.5/(l-u),i=u<o?-1:1,m}}function LH(){var t=_6(Pg()(Xn));return t.copy=function(){return Du(t,LH())},Nu.apply(t,arguments)}function jH(){var t=jS(Pg()).domain([.1,1,10]);return t.copy=function(){return Du(t,jH()).base(t.base())},Nu.apply(t,arguments)}function PH(){var t=PS(Pg());return t.copy=function(){return Du(t,PH()).constant(t.constant())},Nu.apply(t,arguments)}function GS(){var t=IS(Pg());return t.copy=function(){return Du(t,GS()).exponent(t.exponent())},Nu.apply(t,arguments)}function Xa1(){return GS.apply(null,arguments).exponent(.5)}function Di(t){for(var e=t.length/6|0,n=new Array(e),i=0;i<e;)n[i]="#"+t.slice(i*6,++i*6);return n}const Ka1=Di("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Qa1=Di("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Za1=Di("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Ja1=Di("4269d0efb118ff725c6cc5b03ca951ff8ab7a463f297bbf59c6b4e9498a0"),t91=Di("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),e91=Di("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),n91=Di("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),i91=Di("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),o91=Di("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),u91=Di("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");function WS(t,e,n){const i=t-e+n*2;return t?i>0?i:1:0}const l91="identity",vl="linear",Qo="log",B8="pow",U8="sqrt",Ig="symlog",V0="time",X0="utc",yi="sequential",aa="diverging",bl="quantile",Bg="quantize",Ug="threshold",YS="ordinal",Nx="point",IH="band",VS="bin-ordinal",we="continuous",q8="discrete",H8="discretizing",c3="interpolating",XS="temporal";function a91(t){return function(e){let n=e[0],i=e[1],o;return i<n&&(o=n,n=i,i=o),[t.invert(n),t.invert(i)]}}function r91(t){return function(e){const n=t.range();let i=e[0],o=e[1],u=-1,l,a,s,c;for(o<i&&(a=i,i=o,o=a),s=0,c=n.length;s<c;++s)n[s]>=i&&n[s]<=o&&(u<0&&(u=s),l=s);if(!(u<0))return i=t.invertExtent(n[u]),o=t.invertExtent(n[l]),[i[0]===void 0?i[1]:i[0],o[1]===void 0?o[0]:o[1]]}}function KS(){const t=MS().unknown(void 0),e=t.domain,n=t.range;let i=[0,1],o,u,l=!1,a=0,s=0,c=.5;delete t.unknown;function f(){const g=e().length,p=i[1]<i[0],m=i[1-p],v=WS(g,a,s);let b=i[p-0];o=(m-b)/(v||1),l&&(o=Math.floor(o)),b+=(m-b-o*(g-a))*c,u=o*(1-a),l&&(b=Math.round(b),u=Math.round(u));const x=b2(g).map(w=>b+o*w);return n(p?x.reverse():x)}return t.domain=function(g){return arguments.length?(e(g),f()):e()},t.range=function(g){return arguments.length?(i=[+g[0],+g[1]],f()):i.slice()},t.rangeRound=function(g){return i=[+g[0],+g[1]],l=!0,f()},t.bandwidth=function(){return u},t.step=function(){return o},t.round=function(g){return arguments.length?(l=!!g,f()):l},t.padding=function(g){return arguments.length?(s=Math.max(0,Math.min(1,g)),a=s,f()):a},t.paddingInner=function(g){return arguments.length?(a=Math.max(0,Math.min(1,g)),f()):a},t.paddingOuter=function(g){return arguments.length?(s=Math.max(0,Math.min(1,g)),f()):s},t.align=function(g){return arguments.length?(c=Math.max(0,Math.min(1,g)),f()):c},t.invertRange=function(g){if(g[0]==null||g[1]==null)return;const p=i[1]<i[0],m=p?n().reverse():n(),v=m.length-1;let b=+g[0],x=+g[1],w,S,A;if(!(b!==b||x!==x)&&(x<b&&(A=b,b=x,x=A),!(x<m[0]||b>i[1-p])))return w=Math.max(0,hu(m,b)-1),S=b===x?w:hu(m,x)-1,b-m[w]>u+1e-10&&++w,p&&(A=w,w=v-S,S=v-A),w>S?void 0:e().slice(w,S+1)},t.invert=function(g){const p=t.invertRange([g,g]);return p&&p[0]},t.copy=function(){return KS().domain(e()).range(i).round(l).paddingInner(a).paddingOuter(s).align(c)},f()}function BH(t){const e=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,t.copy=function(){return BH(e())},t}function s91(){return BH(KS().paddingInner(1))}var c91=Array.prototype.map;function d91(t){return c91.call(t,fn)}const f91=Array.prototype.slice;function UH(){let t=[],e=[];function n(i){return i==null||i!==i?void 0:e[(hu(t,i)-1)%e.length]}return n.domain=function(i){return arguments.length?(t=d91(i),n):t.slice()},n.range=function(i){return arguments.length?(e=f91.call(i),n):e.slice()},n.tickFormat=function(i,o){return CH(t[0],st(t),i??10,o)},n.copy=function(){return UH().domain(n.domain()).range(n.range())},n}const zd=new Map,qH=Symbol("vega_scale");function HH(t){return t[qH]=!0,t}function NO(t){return t&&t[qH]===!0}function g91(t,e,n){const i=function(){const u=e();return u.invertRange||(u.invertRange=u.invert?a91(u):u.invertExtent?r91(u):void 0),u.type=t,HH(u)};return i.metadata=D3(S1(n)),i}function mt(t,e,n){return arguments.length>1?(zd.set(t,g91(t,e,n)),this):GH(t)?zd.get(t):void 0}mt(l91,kH);mt(vl,LS,we);mt(Qo,$H,[we,Qo]);mt(B8,BS,we);mt(U8,Ha1,we);mt(Ig,MH,we);mt(V0,OH,[we,XS]);mt(X0,Ya1,[we,XS]);mt(yi,qS,[we,c3]);mt(`${yi}-${vl}`,qS,[we,c3]);mt(`${yi}-${Qo}`,FH,[we,c3,Qo]);mt(`${yi}-${B8}`,HS,[we,c3]);mt(`${yi}-${U8}`,Va1,[we,c3]);mt(`${yi}-${Ig}`,zH,[we,c3]);mt(`${aa}-${vl}`,LH,[we,c3]);mt(`${aa}-${Qo}`,jH,[we,c3,Qo]);mt(`${aa}-${B8}`,GS,[we,c3]);mt(`${aa}-${U8}`,Xa1,[we,c3]);mt(`${aa}-${Ig}`,PH,[we,c3]);mt(bl,NH,[H8,bl]);mt(Bg,RH,H8);mt(Ug,DH,H8);mt(VS,UH,[q8,H8]);mt(YS,MS,q8);mt(IH,KS,q8);mt(Nx,s91,q8);function GH(t){return zd.has(t)}function w6(t,e){const n=zd.get(t);return n&&n.metadata[e]}function QS(t){return w6(t,we)}function xl(t){return w6(t,q8)}function Rx(t){return w6(t,H8)}function WH(t){return w6(t,Qo)}function h91(t){return w6(t,XS)}function YH(t){return w6(t,c3)}function VH(t){return w6(t,bl)}const p91=["clamp","base","constant","exponent"];function XH(t,e){const n=e[0],i=st(e)-n;return function(o){return t(n+o*i)}}function qg(t,e,n){return zS(ZS(e||"rgb",n),t)}function KH(t,e){const n=new Array(e),i=e+1;for(let o=0;o<e;)n[o]=t(++o/i);return n}function QH(t,e,n){const i=n-e;let o,u,l;return!i||!Number.isFinite(i)?bn(.5):(o=(u=t.type).indexOf("-"),u=o<0?u:u.slice(o+1),l=mt(u)().domain([e,n]).range([0,1]),p91.forEach(a=>t[a]?l[a](t[a]()):0),l)}function ZS(t,e){const n=Ra1[m91(t)];return e!=null&&n&&n.gamma?n.gamma(e):n}function m91(t){return"interpolate"+t.toLowerCase().split("-").map(e=>e[0].toUpperCase()+e.slice(1)).join("")}const y91={blues:"cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90",greens:"d3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429",greys:"e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e",oranges:"fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303",purples:"e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c",reds:"fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13",blueGreen:"d5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429",bluePurple:"ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71",greenBlue:"d3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1",orangeRed:"fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403",purpleBlue:"dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281",purpleBlueGreen:"dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353",purpleRed:"dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a",redPurple:"fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174",yellowGreen:"e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034",yellowOrangeBrown:"feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204",yellowOrangeRed:"fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225",blueOrange:"134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07",brownBlueGreen:"704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147",purpleGreen:"5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29",purpleOrange:"4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07",redBlue:"8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85",redGrey:"8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434",yellowGreenBlue:"eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185",redYellowBlue:"a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695",redYellowGreen:"a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837",pinkYellowGreen:"8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419",spectral:"9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2",viridis:"440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725",magma:"0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf",inferno:"0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4",plasma:"0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921",cividis:"00205100235800265d002961012b65042e670831690d346b11366c16396d1c3c6e213f6e26426e2c456e31476e374a6e3c4d6e42506e47536d4c566d51586e555b6e5a5e6e5e616e62646f66676f6a6a706e6d717270717573727976737c79747f7c75827f758682768985778c8877908b78938e789691789a94789e9778a19b78a59e77a9a177aea575b2a874b6ab73bbaf71c0b26fc5b66dc9b96acebd68d3c065d8c462ddc85fe2cb5ce7cf58ebd355f0d652f3da4ff7de4cfae249fce647",rainbow:"6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa",sinebow:"ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040",turbo:"23171b32204a3e2a71453493493eae4b49c54a53d7485ee44569ee4074f53c7ff8378af93295f72e9ff42ba9ef28b3e926bce125c5d925cdcf27d5c629dcbc2de3b232e9a738ee9d3ff39347f68950f9805afc7765fd6e70fe667cfd5e88fc5795fb51a1f84badf545b9f140c5ec3cd0e637dae034e4d931ecd12ef4c92bfac029ffb626ffad24ffa223ff9821ff8d1fff821dff771cfd6c1af76118f05616e84b14df4111d5380fcb2f0dc0260ab61f07ac1805a313029b0f00950c00910b00",browns:"eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632",tealBlues:"bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985",teals:"bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667",warmGreys:"dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e",goldGreen:"f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36",goldOrange:"f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26",goldRed:"f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e",lightGreyRed:"efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b",lightGreyTeal:"e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc",lightMulti:"e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c",lightOrange:"f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b",lightTealBlue:"e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988",darkBlue:"3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff",darkGold:"3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff",darkGreen:"3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa",darkMulti:"3737371f5287197d8c29a86995ce3fffe800ffffff",darkRed:"3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c"},v91={accent:Qa1,category10:Ka1,category20:"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5",category20b:"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6",category20c:"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9",dark2:Za1,observable10:Ja1,paired:t91,pastel1:e91,pastel2:n91,set1:i91,set2:o91,set3:u91,tableau10:"4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac",tableau20:"4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5"};function ZH(t){if(r1(t))return t;const e=t.length/6|0,n=new Array(e);for(let i=0;i<e;)n[i]="#"+t.slice(i*6,++i*6);return n}function JH(t,e){for(const n in t)JS(n,e(t[n]))}const RO={};JH(v91,ZH);JH(y91,t=>qg(ZH(t)));function JS(t,e){return t=t&&t.toLowerCase(),arguments.length>1?(RO[t]=e,this):RO[t]}const Pc="symbol",b91="discrete",x91="gradient",_91=t=>r1(t)?t.map(e=>String(e)):String(t),w91=(t,e)=>t[1]-e[1],E91=(t,e)=>e[1]-t[1];function tA(t,e,n){let i;return ht(e)&&(t.bins&&(e=Math.max(e,t.bins.length)),n!=null&&(e=Math.min(e,Math.floor(O8(t.domain())/n||1)+1))),E1(e)&&(i=e.step,e=e.interval),w1(e)&&(e=t.type===V0?ia(e):t.type==X0?oa(e):u1("Only time and utc scales accept interval strings."),i&&(e=e.every(i))),e}function tG(t,e,n){let i=t.range(),o=i[0],u=st(i),l=w91;if(o>u&&(i=u,u=o,o=i,l=E91),o=Math.floor(o),u=Math.ceil(u),e=e.map(a=>[a,t(a)]).filter(a=>o<=a[1]&&a[1]<=u).sort(l).map(a=>a[0]),n>0&&e.length>1){const a=[e[0],st(e)];for(;e.length>n&&e.length>=3;)e=e.filter((s,c)=>!(c%2));e.length<3&&(e=a)}return e}function eA(t,e){return t.bins?tG(t,t.bins,e):t.ticks?t.ticks(e):t.domain()}function eG(t,e,n,i,o,u){const l=e.type;let a=_91;if(l===V0||o===V0)a=t.timeFormat(i);else if(l===X0||o===X0)a=t.utcFormat(i);else if(WH(l)){const s=t.formatFloat(i);if(u||e.bins)a=s;else{const c=nG(e,n,!1);a=f=>c(f)?s(f):""}}else if(e.tickFormat){const s=e.domain();a=t.formatSpan(s[0],s[s.length-1],n,i)}else i&&(a=t.format(i));return a}function nG(t,e,n){const i=eA(t,e),o=t.base(),u=Math.log(o),l=Math.max(1,o*e/i.length),a=s=>{let c=s/Math.pow(o,Math.round(Math.log(s)/u));return c*o<o-.5&&(c*=o),c<=l};return n?i.filter(a):a}const Dx={[bl]:"quantiles",[Bg]:"thresholds",[Ug]:"domain"},iG={[bl]:"quantiles",[Bg]:"domain"};function oG(t,e){return t.bins?C91(t.bins):t.type===Qo?nG(t,e,!0):Dx[t.type]?A91(t[Dx[t.type]]()):eA(t,e)}function S91(t,e,n){const i=e[iG[e.type]](),o=i.length;let u=o>1?i[1]-i[0]:i[0],l;for(l=1;l<o;++l)u=Math.min(u,i[l]-i[l-1]);return t.formatSpan(0,u,30,n)}function A91(t){const e=[-1/0].concat(t);return e.max=1/0,e}function C91(t){const e=t.slice(0,-1);return e.max=st(t),e}const k91=t=>Dx[t.type]||t.bins;function uG(t,e,n,i,o,u,l){const a=iG[e.type]&&u!==V0&&u!==X0?S91(t,e,o):eG(t,e,n,o,u,l);return i===Pc&&k91(e)?T91(a):i===b91?$91(a):M91(a)}const T91=t=>(e,n,i)=>{const o=DO(i[n+1],DO(i.max,1/0)),u=OO(e,t),l=OO(o,t);return u&&l?u+" – "+l:l?"< "+l:"≥ "+u},DO=(t,e)=>t??e,$91=t=>(e,n)=>n?t(e):null,M91=t=>e=>t(e),OO=(t,e)=>Number.isFinite(t)?e(t):null;function N91(t){const e=t.domain(),n=e.length-1;let i=+e[0],o=+st(e),u=o-i;if(t.type===Ug){const l=n?u/n:.1;i-=l,o+=l,u=o-i}return l=>(l-i)/u}function R91(t,e,n,i){const o=i||e.type;return w1(n)&&h91(o)&&(n=n.replace(/%a/g,"%A").replace(/%b/g,"%B")),!n&&o===V0?t.timeFormat("%A, %d %B %Y, %X"):!n&&o===X0?t.utcFormat("%A, %d %B %Y, %X UTC"):uG(t,e,5,null,n,i,!0)}function lG(t,e,n){n=n||{};const i=Math.max(3,n.maxlen||7),o=R91(t,e,n.format,n.formatType);if(Rx(e.type)){const u=oG(e).slice(1).map(o),l=u.length;return`${l} boundar${l===1?"y":"ies"}: ${u.join(", ")}`}else if(xl(e.type)){const u=e.domain(),l=u.length,a=l>i?u.slice(0,i-2).map(o).join(", ")+", ending with "+u.slice(-1).map(o):u.map(o).join(", ");return`${l} value${l===1?"":"s"}: ${a}`}else{const u=e.domain();return`values from ${o(u[0])} to ${o(st(u))}`}}let aG=0;function D91(){aG=0}const Ld="p_";function nA(t){return t&&t.gradient}function rG(t,e,n){const i=t.gradient;let o=t.id,u=i==="radial"?Ld:"";return o||(o=t.id="gradient_"+aG++,i==="radial"?(t.x1=ni(t.x1,.5),t.y1=ni(t.y1,.5),t.r1=ni(t.r1,0),t.x2=ni(t.x2,.5),t.y2=ni(t.y2,.5),t.r2=ni(t.r2,.5),u=Ld):(t.x1=ni(t.x1,0),t.y1=ni(t.y1,0),t.x2=ni(t.x2,1),t.y2=ni(t.y2,0))),e[o]=t,"url("+(n||"")+"#"+u+o+")"}function ni(t,e){return t??e}function sG(t,e){var n=[],i;return i={gradient:"linear",x1:t?t[0]:0,y1:t?t[1]:0,x2:e?e[0]:1,y2:e?e[1]:0,stops:n,stop:function(o,u){return n.push({offset:o,color:u}),i}}}const FO={basis:{curve:Dl1},"basis-closed":{curve:Ol1},"basis-open":{curve:Fl1},bundle:{curve:zl1,tension:"beta",value:.85},cardinal:{curve:Ll1,tension:"tension",value:0},"cardinal-open":{curve:Pl1,tension:"tension",value:0},"cardinal-closed":{curve:jl1,tension:"tension",value:0},"catmull-rom":{curve:Il1,tension:"alpha",value:.5},"catmull-rom-closed":{curve:Bl1,tension:"alpha",value:.5},"catmull-rom-open":{curve:Ul1,tension:"alpha",value:.5},linear:{curve:AS},"linear-closed":{curve:ql1},monotone:{horizontal:Gl1,vertical:Hl1},natural:{curve:Wl1},step:{curve:Yl1},"step-after":{curve:Xl1},"step-before":{curve:Vl1}};function iA(t,e,n){var i=A1(FO,t)&&FO[t],o=null;return i&&(o=i.curve||i[e||"vertical"],i.tension&&n!=null&&(o=o[i.tension](n))),o}const O91={m:2,l:2,h:1,v:1,z:0,c:6,s:4,q:4,t:2,a:7},F91=/[mlhvzcsqta]([^mlhvzcsqta]+|$)/gi,z91=/^[+-]?(([0-9]*\.[0-9]+)|([0-9]+\.)|([0-9]+))([eE][+-]?[0-9]+)?/,L91=/^((\s+,?\s*)|(,\s*))/,j91=/^[01]/;function _l(t){const e=[];return(t.match(F91)||[]).forEach(i=>{let o=i[0];const u=o.toLowerCase(),l=O91[u],a=P91(u,l,i.slice(1).trim()),s=a.length;if(s<l||s&&s%l!==0)throw Error("Invalid SVG path, incorrect parameter count");if(e.push([o,...a.slice(0,l)]),s!==l){u==="m"&&(o=o==="M"?"L":"l");for(let c=l;c<s;c+=l)e.push([o,...a.slice(c,c+l)])}}),e}function P91(t,e,n){const i=[];for(let o=0;e&&o<n.length;)for(let u=0;u<e;++u){const l=t==="a"&&(u===3||u===4)?j91:z91,a=n.slice(o).match(l);if(a===null)throw Error("Invalid SVG path, incorrect parameter type");o+=a[0].length,i.push(+a[0]);const s=n.slice(o).match(L91);s!==null&&(o+=s[0].length)}return i}const bu=Math.PI/180,I91=1e-14,E0=Math.PI/2,ri=Math.PI*2,C5=Math.sqrt(3)/2;var Ev={},Sv={},cG=[].join;function B91(t,e,n,i,o,u,l,a,s){const c=cG.call(arguments);if(Ev[c])return Ev[c];const f=l*bu,g=Math.sin(f),p=Math.cos(f);n=Math.abs(n),i=Math.abs(i);const m=p*(a-t)*.5+g*(s-e)*.5,v=p*(s-e)*.5-g*(a-t)*.5;let b=m*m/(n*n)+v*v/(i*i);b>1&&(b=Math.sqrt(b),n*=b,i*=b);const x=p/n,w=g/n,S=-g/i,A=p/i,C=x*a+w*s,k=S*a+A*s,M=x*t+w*e,T=S*t+A*e;let I=1/((M-C)*(M-C)+(T-k)*(T-k))-.25;I<0&&(I=0);let U=Math.sqrt(I);u==o&&(U=-U);const B=.5*(C+M)-U*(T-k),V=.5*(k+T)+U*(M-C),W=Math.atan2(k-V,C-B);let j=Math.atan2(T-V,M-B)-W;j<0&&u===1?j+=ri:j>0&&u===0&&(j-=ri);const R=Math.ceil(Math.abs(j/(E0+.001))),P=[];for(let q=0;q<R;++q){const Y=W+q*j/R,z=W+(q+1)*j/R;P[q]=[B,V,Y,z,n,i,g,p]}return Ev[c]=P}function U91(t){const e=cG.call(t);if(Sv[e])return Sv[e];var n=t[0],i=t[1],o=t[2],u=t[3],l=t[4],a=t[5],s=t[6],c=t[7];const f=c*l,g=-s*a,p=s*l,m=c*a,v=Math.cos(o),b=Math.sin(o),x=Math.cos(u),w=Math.sin(u),S=.5*(u-o),A=Math.sin(S*.5),C=8/3*A*A/Math.sin(S),k=n+v-C*b,M=i+b+C*v,T=n+x,D=i+w,I=T+C*w,U=D-C*x;return Sv[e]=[f*k+g*M,p*k+m*M,f*I+g*U,p*I+m*U,f*T+g*D,p*T+m*D]}const q2=["l",0,0,0,0,0,0,0];function q91(t,e,n){const i=q2[0]=t[0];if(i==="a"||i==="A")q2[1]=e*t[1],q2[2]=n*t[2],q2[3]=t[3],q2[4]=t[4],q2[5]=t[5],q2[6]=e*t[6],q2[7]=n*t[7];else if(i==="h"||i==="H")q2[1]=e*t[1];else if(i==="v"||i==="V")q2[1]=n*t[1];else for(var o=1,u=t.length;o<u;++o)q2[o]=(o%2==1?e:n)*t[o];return q2}function Jr(t,e,n,i,o,u){var l,a=null,s=0,c=0,f=0,g=0,p,m,v,b,x=0,w=0;n==null&&(n=0),i==null&&(i=0),o==null&&(o=1),u==null&&(u=o),t.beginPath&&t.beginPath();for(var S=0,A=e.length;S<A;++S){switch(l=e[S],(o!==1||u!==1)&&(l=q91(l,o,u)),l[0]){case"l":s+=l[1],c+=l[2],t.lineTo(s+n,c+i);break;case"L":s=l[1],c=l[2],t.lineTo(s+n,c+i);break;case"h":s+=l[1],t.lineTo(s+n,c+i);break;case"H":s=l[1],t.lineTo(s+n,c+i);break;case"v":c+=l[1],t.lineTo(s+n,c+i);break;case"V":c=l[1],t.lineTo(s+n,c+i);break;case"m":s+=l[1],c+=l[2],x=s,w=c,t.moveTo(s+n,c+i);break;case"M":s=l[1],c=l[2],x=s,w=c,t.moveTo(s+n,c+i);break;case"c":p=s+l[5],m=c+l[6],f=s+l[3],g=c+l[4],t.bezierCurveTo(s+l[1]+n,c+l[2]+i,f+n,g+i,p+n,m+i),s=p,c=m;break;case"C":s=l[5],c=l[6],f=l[3],g=l[4],t.bezierCurveTo(l[1]+n,l[2]+i,f+n,g+i,s+n,c+i);break;case"s":p=s+l[3],m=c+l[4],f=2*s-f,g=2*c-g,t.bezierCurveTo(f+n,g+i,s+l[1]+n,c+l[2]+i,p+n,m+i),f=s+l[1],g=c+l[2],s=p,c=m;break;case"S":p=l[3],m=l[4],f=2*s-f,g=2*c-g,t.bezierCurveTo(f+n,g+i,l[1]+n,l[2]+i,p+n,m+i),s=p,c=m,f=l[1],g=l[2];break;case"q":p=s+l[3],m=c+l[4],f=s+l[1],g=c+l[2],t.quadraticCurveTo(f+n,g+i,p+n,m+i),s=p,c=m;break;case"Q":p=l[3],m=l[4],t.quadraticCurveTo(l[1]+n,l[2]+i,p+n,m+i),s=p,c=m,f=l[1],g=l[2];break;case"t":p=s+l[1],m=c+l[2],a[0].match(/[QqTt]/)===null?(f=s,g=c):a[0]==="t"?(f=2*s-v,g=2*c-b):a[0]==="q"&&(f=2*s-f,g=2*c-g),v=f,b=g,t.quadraticCurveTo(f+n,g+i,p+n,m+i),s=p,c=m,f=s+l[1],g=c+l[2];break;case"T":p=l[1],m=l[2],f=2*s-f,g=2*c-g,t.quadraticCurveTo(f+n,g+i,p+n,m+i),s=p,c=m;break;case"a":zO(t,s+n,c+i,[l[1],l[2],l[3],l[4],l[5],l[6]+s+n,l[7]+c+i]),s+=l[6],c+=l[7];break;case"A":zO(t,s+n,c+i,[l[1],l[2],l[3],l[4],l[5],l[6]+n,l[7]+i]),s=l[6],c=l[7];break;case"z":case"Z":s=x,c=w,t.closePath();break}a=l}}function zO(t,e,n,i){const o=B91(i[5],i[6],i[0],i[1],i[3],i[4],i[2],e,n);for(let u=0;u<o.length;++u){const l=U91(o[u]);t.bezierCurveTo(l[0],l[1],l[2],l[3],l[4],l[5])}}const LO=.5773502691896257,jO={circle:{draw:function(t,e){const n=Math.sqrt(e)/2;t.moveTo(n,0),t.arc(0,0,n,0,ri)}},cross:{draw:function(t,e){var n=Math.sqrt(e)/2,i=n/2.5;t.moveTo(-n,-i),t.lineTo(-n,i),t.lineTo(-i,i),t.lineTo(-i,n),t.lineTo(i,n),t.lineTo(i,i),t.lineTo(n,i),t.lineTo(n,-i),t.lineTo(i,-i),t.lineTo(i,-n),t.lineTo(-i,-n),t.lineTo(-i,-i),t.closePath()}},diamond:{draw:function(t,e){const n=Math.sqrt(e)/2;t.moveTo(-n,0),t.lineTo(0,-n),t.lineTo(n,0),t.lineTo(0,n),t.closePath()}},square:{draw:function(t,e){var n=Math.sqrt(e),i=-n/2;t.rect(i,i,n,n)}},arrow:{draw:function(t,e){var n=Math.sqrt(e)/2,i=n/7,o=n/2.5,u=n/8;t.moveTo(-i,n),t.lineTo(i,n),t.lineTo(i,-u),t.lineTo(o,-u),t.lineTo(0,-n),t.lineTo(-o,-u),t.lineTo(-i,-u),t.closePath()}},wedge:{draw:function(t,e){var n=Math.sqrt(e)/2,i=C5*n,o=i-n*LO,u=n/4;t.moveTo(0,-i-o),t.lineTo(-u,i-o),t.lineTo(u,i-o),t.closePath()}},triangle:{draw:function(t,e){var n=Math.sqrt(e)/2,i=C5*n,o=i-n*LO;t.moveTo(0,-i-o),t.lineTo(-n,i-o),t.lineTo(n,i-o),t.closePath()}},"triangle-up":{draw:function(t,e){var n=Math.sqrt(e)/2,i=C5*n;t.moveTo(0,-i),t.lineTo(-n,i),t.lineTo(n,i),t.closePath()}},"triangle-down":{draw:function(t,e){var n=Math.sqrt(e)/2,i=C5*n;t.moveTo(0,i),t.lineTo(-n,-i),t.lineTo(n,-i),t.closePath()}},"triangle-right":{draw:function(t,e){var n=Math.sqrt(e)/2,i=C5*n;t.moveTo(i,0),t.lineTo(-i,-n),t.lineTo(-i,n),t.closePath()}},"triangle-left":{draw:function(t,e){var n=Math.sqrt(e)/2,i=C5*n;t.moveTo(-i,0),t.lineTo(i,-n),t.lineTo(i,n),t.closePath()}},stroke:{draw:function(t,e){const n=Math.sqrt(e)/2;t.moveTo(-n,0),t.lineTo(n,0)}}};function dG(t){return A1(jO,t)?jO[t]:H91(t)}var Av={};function H91(t){if(!A1(Av,t)){const e=_l(t);Av[t]={draw:function(n,i){Jr(n,e,0,0,Math.sqrt(i)/2)}}}return Av[t]}const P4=.448084975506;function G91(t){return t.x}function W91(t){return t.y}function Y91(t){return t.width}function V91(t){return t.height}function ho(t){return typeof t=="function"?t:()=>+t}function tc(t,e,n){return Math.max(e,Math.min(t,n))}function fG(){var t=G91,e=W91,n=Y91,i=V91,o=ho(0),u=o,l=o,a=o,s=null;function c(f,g,p){var m,v=g??+t.call(this,f),b=p??+e.call(this,f),x=+n.call(this,f),w=+i.call(this,f),S=Math.min(x,w)/2,A=tc(+o.call(this,f),0,S),C=tc(+u.call(this,f),0,S),k=tc(+l.call(this,f),0,S),M=tc(+a.call(this,f),0,S);if(s||(s=m=Mg()),A<=0&&C<=0&&k<=0&&M<=0)s.rect(v,b,x,w);else{var T=v+x,D=b+w;s.moveTo(v+A,b),s.lineTo(T-C,b),s.bezierCurveTo(T-P4*C,b,T,b+P4*C,T,b+C),s.lineTo(T,D-M),s.bezierCurveTo(T,D-P4*M,T-P4*M,D,T-M,D),s.lineTo(v+k,D),s.bezierCurveTo(v+P4*k,D,v,D-P4*k,v,D-k),s.lineTo(v,b+A),s.bezierCurveTo(v,b+P4*A,v+P4*A,b,v+A,b),s.closePath()}if(m)return s=null,m+""||null}return c.x=function(f){return arguments.length?(t=ho(f),c):t},c.y=function(f){return arguments.length?(e=ho(f),c):e},c.width=function(f){return arguments.length?(n=ho(f),c):n},c.height=function(f){return arguments.length?(i=ho(f),c):i},c.cornerRadius=function(f,g,p,m){return arguments.length?(o=ho(f),u=g!=null?ho(g):o,a=p!=null?ho(p):o,l=m!=null?ho(m):u,c):o},c.context=function(f){return arguments.length?(s=f??null,c):s},c}function gG(){var t,e,n,i,o=null,u,l,a,s;function c(g,p,m){const v=m/2;if(u){var b=a-p,x=g-l;if(b||x){var w=Math.hypot(b,x),S=(b/=w)*s,A=(x/=w)*s,C=Math.atan2(x,b);o.moveTo(l-S,a-A),o.lineTo(g-b*v,p-x*v),o.arc(g,p,v,C-Math.PI,C),o.lineTo(l+S,a+A),o.arc(l,a,s,C,C+Math.PI)}else o.arc(g,p,v,0,ri);o.closePath()}else u=1;l=g,a=p,s=v}function f(g){var p,m=g.length,v,b=!1,x;for(o==null&&(o=x=Mg()),p=0;p<=m;++p)!(p<m&&i(v=g[p],p,g))===b&&(b=!b)&&(u=0),b&&c(+t(v,p,g),+e(v,p,g),+n(v,p,g));if(x)return o=null,x+""||null}return f.x=function(g){return arguments.length?(t=g,f):t},f.y=function(g){return arguments.length?(e=g,f):e},f.size=function(g){return arguments.length?(n=g,f):n},f.defined=function(g){return arguments.length?(i=g,f):i},f.context=function(g){return arguments.length?(g==null?o=null:o=g,f):o},f}function G8(t,e){return t??e}const W8=t=>t.x||0,Y8=t=>t.y||0,X91=t=>t.width||0,K91=t=>t.height||0,Q91=t=>(t.x||0)+(t.width||0),Z91=t=>(t.y||0)+(t.height||0),J91=t=>t.startAngle||0,tr1=t=>t.endAngle||0,er1=t=>t.padAngle||0,nr1=t=>t.innerRadius||0,ir1=t=>t.outerRadius||0,or1=t=>t.cornerRadius||0,ur1=t=>G8(t.cornerRadiusTopLeft,t.cornerRadius)||0,lr1=t=>G8(t.cornerRadiusTopRight,t.cornerRadius)||0,ar1=t=>G8(t.cornerRadiusBottomRight,t.cornerRadius)||0,rr1=t=>G8(t.cornerRadiusBottomLeft,t.cornerRadius)||0,sr1=t=>G8(t.size,64),cr1=t=>t.size||1,Hg=t=>t.defined!==!1,dr1=t=>dG(t.shape||"circle"),fr1=Ml1().startAngle(J91).endAngle(tr1).padAngle(er1).innerRadius(nr1).outerRadius(ir1).cornerRadius(or1),gr1=Iq().x(W8).y1(Y8).y0(Z91).defined(Hg),hr1=Iq().y(Y8).x1(W8).x0(Q91).defined(Hg),pr1=Pq().x(W8).y(Y8).defined(Hg),mr1=fG().x(W8).y(Y8).width(X91).height(K91).cornerRadius(ur1,lr1,ar1,rr1),yr1=Rl1().type(dr1).size(sr1),vr1=gG().x(W8).y(Y8).defined(Hg).size(cr1);function oA(t){return t.cornerRadius||t.cornerRadiusTopLeft||t.cornerRadiusTopRight||t.cornerRadiusBottomRight||t.cornerRadiusBottomLeft}function br1(t,e){return fr1.context(t)(e)}function xr1(t,e){const n=e[0],i=n.interpolate||"linear";return(n.orient==="horizontal"?hr1:gr1).curve(iA(i,n.orient,n.tension)).context(t)(e)}function _r1(t,e){const n=e[0],i=n.interpolate||"linear";return pr1.curve(iA(i,n.orient,n.tension)).context(t)(e)}function ra(t,e,n,i){return mr1.context(t)(e,n,i)}function wr1(t,e){return(e.mark.shape||e.shape).context(t)(e)}function Er1(t,e){return yr1.context(t)(e)}function Sr1(t,e){return vr1.context(t)(e)}var hG=1;function Ar1(){hG=1}function uA(t,e,n){var i=e.clip,o=t._defs,u=e.clip_id||(e.clip_id="clip"+hG++),l=o.clipping[u]||(o.clipping[u]={id:u});return Q1(i)?l.path=i(null):oA(n)?l.path=ra(null,n,0,0):(l.width=n.width||0,l.height=n.height||0),"url(#"+u+")"}function fe(t){this.clear(),t&&this.union(t)}fe.prototype={clone(){return new fe(this)},clear(){return this.x1=+Number.MAX_VALUE,this.y1=+Number.MAX_VALUE,this.x2=-Number.MAX_VALUE,this.y2=-Number.MAX_VALUE,this},empty(){return this.x1===+Number.MAX_VALUE&&this.y1===+Number.MAX_VALUE&&this.x2===-Number.MAX_VALUE&&this.y2===-Number.MAX_VALUE},equals(t){return this.x1===t.x1&&this.y1===t.y1&&this.x2===t.x2&&this.y2===t.y2},set(t,e,n,i){return n<t?(this.x2=t,this.x1=n):(this.x1=t,this.x2=n),i<e?(this.y2=e,this.y1=i):(this.y1=e,this.y2=i),this},add(t,e){return t<this.x1&&(this.x1=t),e<this.y1&&(this.y1=e),t>this.x2&&(this.x2=t),e>this.y2&&(this.y2=e),this},expand(t){return this.x1-=t,this.y1-=t,this.x2+=t,this.y2+=t,this},round(){return this.x1=Math.floor(this.x1),this.y1=Math.floor(this.y1),this.x2=Math.ceil(this.x2),this.y2=Math.ceil(this.y2),this},scale(t){return this.x1*=t,this.y1*=t,this.x2*=t,this.y2*=t,this},translate(t,e){return this.x1+=t,this.x2+=t,this.y1+=e,this.y2+=e,this},rotate(t,e,n){const i=this.rotatedPoints(t,e,n);return this.clear().add(i[0],i[1]).add(i[2],i[3]).add(i[4],i[5]).add(i[6],i[7])},rotatedPoints(t,e,n){var{x1:i,y1:o,x2:u,y2:l}=this,a=Math.cos(t),s=Math.sin(t),c=e-e*a+n*s,f=n-e*s-n*a;return[a*i-s*o+c,s*i+a*o+f,a*i-s*l+c,s*i+a*l+f,a*u-s*o+c,s*u+a*o+f,a*u-s*l+c,s*u+a*l+f]},union(t){return t.x1<this.x1&&(this.x1=t.x1),t.y1<this.y1&&(this.y1=t.y1),t.x2>this.x2&&(this.x2=t.x2),t.y2>this.y2&&(this.y2=t.y2),this},intersect(t){return t.x1>this.x1&&(this.x1=t.x1),t.y1>this.y1&&(this.y1=t.y1),t.x2<this.x2&&(this.x2=t.x2),t.y2<this.y2&&(this.y2=t.y2),this},encloses(t){return t&&this.x1<=t.x1&&this.x2>=t.x2&&this.y1<=t.y1&&this.y2>=t.y2},alignsWith(t){return t&&(this.x1==t.x1||this.x2==t.x2||this.y1==t.y1||this.y2==t.y2)},intersects(t){return t&&!(this.x2<t.x1||this.x1>t.x2||this.y2<t.y1||this.y1>t.y2)},contains(t,e){return!(t<this.x1||t>this.x2||e<this.y1||e>this.y2)},width(){return this.x2-this.x1},height(){return this.y2-this.y1}};function Gg(t){this.mark=t,this.bounds=this.bounds||new fe}function Wg(t){Gg.call(this,t),this.items=this.items||[]}b1(Wg,Gg);class pG{constructor(e){this._pending=0,this._loader=e||vg()}pending(){return this._pending}sanitizeURL(e){const n=this;return PO(n),n._loader.sanitize(e,{context:"href"}).then(i=>(F9(n),i)).catch(()=>(F9(n),null))}loadImage(e){const n=this,i=Kl1();return PO(n),n._loader.sanitize(e,{context:"image"}).then(o=>{const u=o.href;if(!u||!i)throw{url:u};const l=new i,a=A1(o,"crossOrigin")?o.crossOrigin:"anonymous";return a!=null&&(l.crossOrigin=a),l.onload=()=>F9(n),l.onerror=()=>F9(n),l.src=u,l}).catch(o=>(F9(n),{complete:!1,width:0,height:0,src:o&&o.url||""}))}ready(){const e=this;return new Promise(n=>{function i(o){e.pending()?setTimeout(()=>{i(!0)},10):n(o)}i(!1)})}}function PO(t){t._pending+=1}function F9(t){t._pending-=1}function l4(t,e,n){if(e.stroke&&e.opacity!==0&&e.strokeOpacity!==0){const i=e.strokeWidth!=null?+e.strokeWidth:1;t.expand(i+(n?Cr1(e,i):0))}return t}function Cr1(t,e){return t.strokeJoin&&t.strokeJoin!=="miter"?0:e}const kr1=ri-1e-8;let Yg,Ic,Bc,M0,Ox,Uc,Fx,zx;const Z4=(t,e)=>Yg.add(t,e),qc=(t,e)=>Z4(Ic=t,Bc=e),IO=t=>Z4(t,Yg.y1),BO=t=>Z4(Yg.x1,t),S0=(t,e)=>Ox*t+Fx*e,A0=(t,e)=>Uc*t+zx*e,Cv=(t,e)=>Z4(S0(t,e),A0(t,e)),kv=(t,e)=>qc(S0(t,e),A0(t,e));function V8(t,e){return Yg=t,e?(M0=e*bu,Ox=zx=Math.cos(M0),Uc=Math.sin(M0),Fx=-Uc):(Ox=zx=1,M0=Uc=Fx=0),Tr1}const Tr1={beginPath(){},closePath(){},moveTo:kv,lineTo:kv,rect(t,e,n,i){M0?(Cv(t+n,e),Cv(t+n,e+i),Cv(t,e+i),kv(t,e)):(Z4(t+n,e+i),qc(t,e))},quadraticCurveTo(t,e,n,i){const o=S0(t,e),u=A0(t,e),l=S0(n,i),a=A0(n,i);UO(Ic,o,l,IO),UO(Bc,u,a,BO),qc(l,a)},bezierCurveTo(t,e,n,i,o,u){const l=S0(t,e),a=A0(t,e),s=S0(n,i),c=A0(n,i),f=S0(o,u),g=A0(o,u);qO(Ic,l,s,f,IO),qO(Bc,a,c,g,BO),qc(f,g)},arc(t,e,n,i,o,u){if(i+=M0,o+=M0,Ic=n*Math.cos(o)+t,Bc=n*Math.sin(o)+e,Math.abs(o-i)>kr1)Z4(t-n,e-n),Z4(t+n,e+n);else{const l=c=>Z4(n*Math.cos(c)+t,n*Math.sin(c)+e);let a,s;if(l(i),l(o),o!==i)if(i=i%ri,i<0&&(i+=ri),o=o%ri,o<0&&(o+=ri),o<i&&(u=!u,a=i,i=o,o=a),u)for(o-=ri,a=i-i%E0,s=0;s<4&&a>o;++s,a-=E0)l(a);else for(a=i-i%E0+E0,s=0;s<4&&a<o;++s,a=a+E0)l(a)}}};function UO(t,e,n,i){const o=(t-e)/(t+n-2*e);0<o&&o<1&&i(t+(e-t)*o)}function qO(t,e,n,i,o){const u=i-t+3*e-3*n,l=t+n-2*e,a=t-e;let s=0,c=0,f;Math.abs(u)>I91?(f=l*l+a*u,f>=0&&(f=Math.sqrt(f),s=(-l+f)/u,c=(-l-f)/u)):s=.5*a/l,0<s&&s<1&&o(HO(s,t,e,n,i)),0<c&&c<1&&o(HO(c,t,e,n,i))}function HO(t,e,n,i,o){const u=1-t,l=u*u,a=t*t;return l*u*e+3*l*t*n+3*u*a*i+a*t*o}var du=(du=cu(1,1))?du.getContext("2d"):null;const Lx=new fe;function lA(t){return function(e,n){if(!du)return!0;t(du,e),Lx.clear().union(e.bounds).intersect(n).round();const{x1:i,y1:o,x2:u,y2:l}=Lx;for(let a=o;a<=l;++a)for(let s=i;s<=u;++s)if(du.isPointInPath(s,a))return!0;return!1}}function aA(t,e){return e.contains(t.x||0,t.y||0)}function mG(t,e){const n=t.x||0,i=t.y||0,o=t.width||0,u=t.height||0;return e.intersects(Lx.set(n,i,n+o,i+u))}function yG(t,e){const n=t.x||0,i=t.y||0,o=t.x2!=null?t.x2:n,u=t.y2!=null?t.y2:i;return q5(e,n,i,o,u)}function q5(t,e,n,i,o){const{x1:u,y1:l,x2:a,y2:s}=t,c=i-e,f=o-n;let g=0,p=1,m,v,b,x;for(x=0;x<4;++x){if(x===0&&(m=-c,v=-(u-e)),x===1&&(m=c,v=a-e),x===2&&(m=-f,v=-(l-n)),x===3&&(m=f,v=s-n),Math.abs(m)<1e-10&&v<0)return!1;if(b=v/m,m<0){if(b>p)return!1;b>g&&(g=b)}else if(m>0){if(b<g)return!1;b<p&&(p=b)}}return!0}function wl(t,e){t.globalCompositeOperation=e.blend||"source-over"}function v3(t,e){return t??e}function GO(t,e){const n=e.length;for(let i=0;i<n;++i)t.addColorStop(e[i].offset,e[i].color);return t}function $r1(t,e,n){const i=n.width(),o=n.height();let u;if(e.gradient==="radial")u=t.createRadialGradient(n.x1+v3(e.x1,.5)*i,n.y1+v3(e.y1,.5)*o,Math.max(i,o)*v3(e.r1,0),n.x1+v3(e.x2,.5)*i,n.y1+v3(e.y2,.5)*o,Math.max(i,o)*v3(e.r2,.5));else{const l=v3(e.x1,0),a=v3(e.y1,0),s=v3(e.x2,1),c=v3(e.y2,0);if(l===s||a===c||i===o)u=t.createLinearGradient(n.x1+l*i,n.y1+a*o,n.x1+s*i,n.y1+c*o);else{const f=cu(Math.ceil(i),Math.ceil(o)),g=f.getContext("2d");return g.scale(i,o),g.fillStyle=GO(g.createLinearGradient(l,a,s,c),e.stops),g.fillRect(0,0,i,o),t.createPattern(f,"no-repeat")}}return GO(u,e.stops)}function vG(t,e,n){return nA(n)?$r1(t,n,e.bounds):n}function jd(t,e,n){return n*=e.fillOpacity==null?1:e.fillOpacity,n>0?(t.globalAlpha=n,t.fillStyle=vG(t,e,e.fill),!0):!1}var Mr1=[];function El(t,e,n){var i=(i=e.strokeWidth)!=null?i:1;return i<=0?!1:(n*=e.strokeOpacity==null?1:e.strokeOpacity,n>0?(t.globalAlpha=n,t.strokeStyle=vG(t,e,e.stroke),t.lineWidth=i,t.lineCap=e.strokeCap||"butt",t.lineJoin=e.strokeJoin||"miter",t.miterLimit=e.strokeMiterLimit||10,t.setLineDash&&(t.setLineDash(e.strokeDash||Mr1),t.lineDashOffset=e.strokeDashOffset||0),!0):!1)}function Nr1(t,e){return t.zindex-e.zindex||t.index-e.index}function rA(t){if(!t.zdirty)return t.zitems;var e=t.items,n=[],i,o,u;for(o=0,u=e.length;o<u;++o)i=e[o],i.index=o,i.zindex&&n.push(i);return t.zdirty=!1,t.zitems=n.sort(Nr1)}function F3(t,e){var n=t.items,i,o;if(!n||!n.length)return;const u=rA(t);if(u&&u.length){for(i=0,o=n.length;i<o;++i)n[i].zindex||e(n[i]);n=u}for(i=0,o=n.length;i<o;++i)e(n[i])}function Pd(t,e){var n=t.items,i,o;if(!n||!n.length)return null;const u=rA(t);for(u&&u.length&&(n=u),o=n.length;--o>=0;)if(i=e(n[o]))return i;if(n===u){for(n=t.items,o=n.length;--o>=0;)if(!n[o].zindex&&(i=e(n[o])))return i}return null}function sA(t){return function(e,n,i){F3(n,o=>{(!i||i.intersects(o.bounds))&&bG(t,e,o,o)})}}function Rr1(t){return function(e,n,i){n.items.length&&(!i||i.intersects(n.bounds))&&bG(t,e,n.items[0],n.items)}}function bG(t,e,n,i){var o=n.opacity==null?1:n.opacity;o!==0&&(t(e,i)||(wl(e,n),n.fill&&jd(e,n,o)&&e.fill(),n.stroke&&El(e,n,o)&&e.stroke()))}function Vg(t){return t=t||o3,function(e,n,i,o,u,l){return i*=e.pixelRatio,o*=e.pixelRatio,Pd(n,a=>{const s=a.bounds;if(!(s&&!s.contains(u,l)||!s)&&t(e,a,i,o,u,l))return a})}}function X8(t,e){return function(n,i,o,u){var l=Array.isArray(i)?i[0]:i,a=e??l.fill,s=l.stroke&&n.isPointInStroke,c,f;return s&&(c=l.strokeWidth,f=l.strokeCap,n.lineWidth=c??1,n.lineCap=f??"butt"),t(n,i)?!1:a&&n.isPointInPath(o,u)||s&&n.isPointInStroke(o,u)}}function cA(t){return Vg(X8(t))}function F0(t,e){return"translate("+t+","+e+")"}function dA(t){return"rotate("+t+")"}function Dr1(t,e){return"scale("+t+","+e+")"}function xG(t){return F0(t.x||0,t.y||0)}function Or1(t){return F0(t.x||0,t.y||0)+(t.angle?" "+dA(t.angle):"")}function Fr1(t){return F0(t.x||0,t.y||0)+(t.angle?" "+dA(t.angle):"")+(t.scaleX||t.scaleY?" "+Dr1(t.scaleX||1,t.scaleY||1):"")}function fA(t,e,n){function i(l,a){l("transform",Or1(a)),l("d",e(null,a))}function o(l,a){return e(V8(l,a.angle),a),l4(l,a).translate(a.x||0,a.y||0)}function u(l,a){var s=a.x||0,c=a.y||0,f=a.angle||0;l.translate(s,c),f&&l.rotate(f*=bu),l.beginPath(),e(l,a),f&&l.rotate(-f),l.translate(-s,-c)}return{type:t,tag:"path",nested:!1,attr:i,bound:o,draw:sA(u),pick:cA(u),isect:n||lA(u)}}var zr1=fA("arc",br1);function Lr1(t,e){for(var n=t[0].orient==="horizontal"?e[1]:e[0],i=t[0].orient==="horizontal"?"y":"x",o=t.length,u=1/0,l,a;--o>=0;)t[o].defined!==!1&&(a=Math.abs(t[o][i]-n),a<u&&(u=a,l=t[o]));return l}function jr1(t,e){for(var n=Math.pow(t[0].strokeWidth||1,2),i=t.length,o,u,l;--i>=0;)if(t[i].defined!==!1&&(o=t[i].x-e[0],u=t[i].y-e[1],l=o*o+u*u,l<n))return t[i];return null}function Pr1(t,e){for(var n=t.length,i,o,u;--n>=0;)if(t[n].defined!==!1&&(i=t[n].x-e[0],o=t[n].y-e[1],u=i*i+o*o,i=t[n].size||1,u<i*i))return t[n];return null}function gA(t,e,n){function i(s,c){var f=c.mark.items;f.length&&s("d",e(null,f))}function o(s,c){var f=c.items;return f.length===0?s:(e(V8(s),f),l4(s,f[0]))}function u(s,c){s.beginPath(),e(s,c)}const l=X8(u);function a(s,c,f,g,p,m){var v=c.items,b=c.bounds;return!v||!v.length||b&&!b.contains(p,m)?null:(f*=s.pixelRatio,g*=s.pixelRatio,l(s,v,f,g)?v[0]:null)}return{type:t,tag:"path",nested:!0,attr:i,bound:o,draw:Rr1(u),pick:a,isect:aA,tip:n}}var Ir1=gA("area",xr1,Lr1);function Br1(t,e){var n=e.clip;t.save(),Q1(n)?(t.beginPath(),n(t),t.clip()):_G(t,e.group)}function _G(t,e){t.beginPath(),oA(e)?ra(t,e,0,0):t.rect(0,0,e.width||0,e.height||0),t.clip()}function wG(t){const e=v3(t.strokeWidth,1);return t.strokeOffset!=null?t.strokeOffset:t.stroke&&e>.5&&e<1.5?.5-Math.abs(e-1):0}function Ur1(t,e){t("transform",xG(e))}function EG(t,e){const n=wG(e);t("d",ra(null,e,n,n))}function qr1(t,e){t("class","background"),t("aria-hidden",!0),EG(t,e)}function Hr1(t,e){t("class","foreground"),t("aria-hidden",!0),e.strokeForeground?EG(t,e):t("d","")}function Gr1(t,e,n){const i=e.clip?uA(n,e,e):null;t("clip-path",i)}function Wr1(t,e){if(!e.clip&&e.items){const n=e.items,i=n.length;for(let o=0;o<i;++o)t.union(n[o].bounds)}return(e.clip||e.width||e.height)&&!e.noBound&&t.add(0,0).add(e.width||0,e.height||0),l4(t,e),t.translate(e.x||0,e.y||0)}function t8(t,e,n,i){const o=wG(e);t.beginPath(),ra(t,e,(n||0)+o,(i||0)+o)}const Yr1=X8(t8),Vr1=X8(t8,!1),Xr1=X8(t8,!0);function Kr1(t,e,n,i){F3(e,o=>{const u=o.x||0,l=o.y||0,a=o.strokeForeground,s=o.opacity==null?1:o.opacity;(o.stroke||o.fill)&&s&&(t8(t,o,u,l),wl(t,o),o.fill&&jd(t,o,s)&&t.fill(),o.stroke&&!a&&El(t,o,s)&&t.stroke()),t.save(),t.translate(u,l),o.clip&&_G(t,o),n&&n.translate(-u,-l),F3(o,c=>{(c.marktype==="group"||i==null||i.includes(c.marktype))&&this.draw(t,c,n,i)}),n&&n.translate(u,l),t.restore(),a&&o.stroke&&s&&(t8(t,o,u,l),wl(t,o),El(t,o,s)&&t.stroke())})}function Qr1(t,e,n,i,o,u){if(e.bounds&&!e.bounds.contains(o,u)||!e.items)return null;const l=n*t.pixelRatio,a=i*t.pixelRatio;return Pd(e,s=>{let c,f,g;const p=s.bounds;if(p&&!p.contains(o,u))return;f=s.x||0,g=s.y||0;const m=f+(s.width||0),v=g+(s.height||0),b=s.clip;if(b&&(o<f||o>m||u<g||u>v))return;if(t.save(),t.translate(f,g),f=o-f,g=u-g,b&&oA(s)&&!Xr1(t,s,l,a))return t.restore(),null;const x=s.strokeForeground,w=e.interactive!==!1;return w&&x&&s.stroke&&Vr1(t,s,l,a)?(t.restore(),s):(c=Pd(s,S=>Zr1(S,f,g)?this.pick(S,n,i,f,g):null),!c&&w&&(s.fill||!x&&s.stroke)&&Yr1(t,s,l,a)&&(c=s),t.restore(),c||null)})}function Zr1(t,e,n){return(t.interactive!==!1||t.marktype==="group")&&t.bounds&&t.bounds.contains(e,n)}var Jr1={type:"group",tag:"g",nested:!1,attr:Ur1,bound:Wr1,draw:Kr1,pick:Qr1,isect:mG,content:Gr1,background:qr1,foreground:Hr1},e8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",version:"1.1"};function hA(t,e){var n=t.image;return(!n||t.url&&t.url!==n.url)&&(n={complete:!1,width:0,height:0},e.loadImage(t.url).then(i=>{t.image=i,t.image.url=t.url})),n}function pA(t,e){return t.width!=null?t.width:!e||!e.width?0:t.aspect!==!1&&t.height?t.height*e.width/e.height:e.width}function mA(t,e){return t.height!=null?t.height:!e||!e.height?0:t.aspect!==!1&&t.width?t.width*e.height/e.width:e.height}function Xg(t,e){return t==="center"?e/2:t==="right"?e:0}function Kg(t,e){return t==="middle"?e/2:t==="bottom"?e:0}function t81(t,e,n){const i=hA(e,n),o=pA(e,i),u=mA(e,i),l=(e.x||0)-Xg(e.align,o),a=(e.y||0)-Kg(e.baseline,u),s=!i.src&&i.toDataURL?i.toDataURL():i.src||"";t("href",s,e8["xmlns:xlink"],"xlink:href"),t("transform",F0(l,a)),t("width",o),t("height",u),t("preserveAspectRatio",e.aspect===!1?"none":"xMidYMid")}function e81(t,e){const n=e.image,i=pA(e,n),o=mA(e,n),u=(e.x||0)-Xg(e.align,i),l=(e.y||0)-Kg(e.baseline,o);return t.set(u,l,u+i,l+o)}function n81(t,e,n){F3(e,i=>{if(n&&!n.intersects(i.bounds))return;const o=hA(i,this);let u=pA(i,o),l=mA(i,o);if(u===0||l===0)return;let a=(i.x||0)-Xg(i.align,u),s=(i.y||0)-Kg(i.baseline,l),c,f,g,p;i.aspect!==!1&&(f=o.width/o.height,g=i.width/i.height,f===f&&g===g&&f!==g&&(g<f?(p=u/f,s+=(l-p)/2,l=p):(p=l*f,a+=(u-p)/2,u=p))),(o.complete||o.toDataURL)&&(wl(t,i),t.globalAlpha=(c=i.opacity)!=null?c:1,t.imageSmoothingEnabled=i.smooth!==!1,t.drawImage(o,a,s,u,l))})}var i81={type:"image",tag:"image",nested:!1,attr:t81,bound:e81,draw:n81,pick:Vg(),isect:o3,get:hA,xOffset:Xg,yOffset:Kg},o81=gA("line",_r1,jr1);function u81(t,e){var n=e.scaleX||1,i=e.scaleY||1;(n!==1||i!==1)&&t("vector-effect","non-scaling-stroke"),t("transform",Fr1(e)),t("d",e.path)}function Hc(t,e){var n=e.path;if(n==null)return!0;var i=e.x||0,o=e.y||0,u=e.scaleX||1,l=e.scaleY||1,a=(e.angle||0)*bu,s=e.pathCache;(!s||s.path!==n)&&((e.pathCache=s=_l(n)).path=n),a&&t.rotate&&t.translate?(t.translate(i,o),t.rotate(a),Jr(t,s,0,0,u,l),t.rotate(-a),t.translate(-i,-o)):Jr(t,s,i,o,u,l)}function l81(t,e){return Hc(V8(t,e.angle),e)?t.set(0,0,0,0):l4(t,e,!0)}var a81={type:"path",tag:"path",nested:!1,attr:u81,bound:l81,draw:sA(Hc),pick:cA(Hc),isect:lA(Hc)};function r81(t,e){t("d",ra(null,e))}function s81(t,e){var n,i;return l4(t.set(n=e.x||0,i=e.y||0,n+e.width||0,i+e.height||0),e)}function WO(t,e){t.beginPath(),ra(t,e)}var c81={type:"rect",tag:"path",nested:!1,attr:r81,bound:s81,draw:sA(WO),pick:cA(WO),isect:mG};function d81(t,e){t("transform",xG(e)),t("x2",e.x2!=null?e.x2-(e.x||0):0),t("y2",e.y2!=null?e.y2-(e.y||0):0)}function f81(t,e){var n,i;return l4(t.set(n=e.x||0,i=e.y||0,e.x2!=null?e.x2:n,e.y2!=null?e.y2:i),e)}function SG(t,e,n){var i,o,u,l;return e.stroke&&El(t,e,n)?(i=e.x||0,o=e.y||0,u=e.x2!=null?e.x2:i,l=e.y2!=null?e.y2:o,t.beginPath(),t.moveTo(i,o),t.lineTo(u,l),!0):!1}function g81(t,e,n){F3(e,i=>{if(!(n&&!n.intersects(i.bounds))){var o=i.opacity==null?1:i.opacity;o&&SG(t,i,o)&&(wl(t,i),t.stroke())}})}function h81(t,e,n,i){return t.isPointInStroke?SG(t,e,1)&&t.isPointInStroke(n,i):!1}var p81={type:"rule",tag:"line",nested:!1,attr:d81,bound:f81,draw:g81,pick:Vg(h81),isect:yG},m81=fA("shape",wr1),y81=fA("symbol",Er1,aA);const YO=TB();var w2={height:Oi,measureWidth:yA,estimateWidth:Id,width:Id,canvas:AG};AG(!0);function AG(t){w2.width=t&&du?yA:Id}function Id(t,e){return CG(_u(t,e),Oi(t))}function CG(t,e){return~~(.8*t.length*e)}function yA(t,e){return Oi(t)<=0||!(e=_u(t,e))?0:kG(e,Qg(t))}function kG(t,e){const n=`(${e}) ${t}`;let i=YO.get(n);return i===void 0&&(du.font=e,i=du.measureText(t).width,YO.set(n,i)),i}function Oi(t){return t.fontSize!=null?+t.fontSize||0:11}function xu(t){return t.lineHeight!=null?t.lineHeight:Oi(t)+2}function v81(t){return r1(t)?t.length>1?t:t[0]:t}function K8(t){return v81(t.lineBreak&&t.text&&!r1(t.text)?t.text.split(t.lineBreak):t.text)}function vA(t){const e=K8(t);return(r1(e)?e.length-1:0)*xu(t)}function _u(t,e){const n=e==null?"":(e+"").trim();return t.limit>0&&n.length?x81(t,n):n}function b81(t){if(w2.width===yA){const e=Qg(t);return n=>kG(n,e)}else if(w2.width===Id){const e=Oi(t);return n=>CG(n,e)}else return e=>w2.width(t,e)}function x81(t,e){var n=+t.limit,i=b81(t);if(i(e)<n)return e;var o=t.ellipsis||"…",u=t.dir==="rtl",l=0,a=e.length,s;if(n-=i(o),u){for(;l<a;)s=l+a>>>1,i(e.slice(s))>n?l=s+1:a=s;return o+e.slice(l)}else{for(;l<a;)s=1+(l+a>>>1),i(e.slice(0,s))<n?l=s:a=s-1;return e.slice(0,l)+o}}function Q8(t,e){var n=t.font;return(e&&n?String(n).replace(/"/g,"'"):n)||"sans-serif"}function Qg(t,e){return(t.fontStyle?t.fontStyle+" ":"")+(t.fontVariant?t.fontVariant+" ":"")+(t.fontWeight?t.fontWeight+" ":"")+Oi(t)+"px "+Q8(t,e)}function bA(t){var e=t.baseline,n=Oi(t);return Math.round(e==="top"?.79*n:e==="middle"?.3*n:e==="bottom"?-.21*n:e==="line-top"?.29*n+.5*xu(t):e==="line-bottom"?.29*n-.5*xu(t):0)}const _81={left:"start",center:"middle",right:"end"},Cr=new fe;function Zg(t){var e=t.x||0,n=t.y||0,i=t.radius||0,o;return i&&(o=(t.theta||0)-E0,e+=i*Math.cos(o),n+=i*Math.sin(o)),Cr.x1=e,Cr.y1=n,Cr}function w81(t,e){var n=e.dx||0,i=(e.dy||0)+bA(e),o=Zg(e),u=o.x1,l=o.y1,a=e.angle||0,s;t("text-anchor",_81[e.align]||"start"),a?(s=F0(u,l)+" "+dA(a),(n||i)&&(s+=" "+F0(n,i))):s=F0(u+n,l+i),t("transform",s)}function xA(t,e,n){var i=w2.height(e),o=e.align,u=Zg(e),l=u.x1,a=u.y1,s=e.dx||0,c=(e.dy||0)+bA(e)-Math.round(.8*i),f=K8(e),g;if(r1(f)?(i+=xu(e)*(f.length-1),g=f.reduce((p,m)=>Math.max(p,w2.width(e,m)),0)):g=w2.width(e,f),o==="center"?s-=g/2:o==="right"&&(s-=g),t.set(s+=l,c+=a,s+g,c+i),e.angle&&!n)t.rotate(e.angle*bu,l,a);else if(n===2)return t.rotatedPoints(e.angle*bu,l,a);return t}function E81(t,e,n){F3(e,i=>{var o=i.opacity==null?1:i.opacity,u,l,a,s,c,f,g;if(!(n&&!n.intersects(i.bounds)||o===0||i.fontSize<=0||i.text==null||i.text.length===0)){if(t.font=Qg(i),t.textAlign=i.align||"left",u=Zg(i),l=u.x1,a=u.y1,i.angle&&(t.save(),t.translate(l,a),t.rotate(i.angle*bu),l=a=0),l+=i.dx||0,a+=(i.dy||0)+bA(i),f=K8(i),wl(t,i),r1(f))for(c=xu(i),s=0;s<f.length;++s)g=_u(i,f[s]),i.fill&&jd(t,i,o)&&t.fillText(g,l,a),i.stroke&&El(t,i,o)&&t.strokeText(g,l,a),a+=c;else g=_u(i,f),i.fill&&jd(t,i,o)&&t.fillText(g,l,a),i.stroke&&El(t,i,o)&&t.strokeText(g,l,a);i.angle&&t.restore()}})}function S81(t,e,n,i,o,u){if(e.fontSize<=0)return!1;if(!e.angle)return!0;var l=Zg(e),a=l.x1,s=l.y1,c=xA(Cr,e,1),f=-e.angle*bu,g=Math.cos(f),p=Math.sin(f),m=g*o-p*u+(a-g*a+p*s),v=p*o+g*u+(s-p*a-g*s);return c.contains(m,v)}function A81(t,e){const n=xA(Cr,t,2);return q5(e,n[0],n[1],n[2],n[3])||q5(e,n[0],n[1],n[4],n[5])||q5(e,n[4],n[5],n[6],n[7])||q5(e,n[2],n[3],n[6],n[7])}var C81={type:"text",tag:"text",nested:!1,attr:w81,bound:xA,draw:E81,pick:Vg(S81),isect:A81},k81=gA("trail",Sr1,Pr1),$2={arc:zr1,area:Ir1,group:Jr1,image:i81,line:o81,path:a81,rect:c81,rule:p81,shape:m81,symbol:y81,text:C81,trail:k81};function jx(t,e,n){var i=$2[t.mark.marktype],o=e||i.bound;return i.nested&&(t=t.mark),o(t.bounds||(t.bounds=new fe),t,n)}var VO={mark:null};function TG(t,e,n){var i=$2[t.marktype],o=i.bound,u=t.items,l=u&&u.length,a,s,c,f;if(i.nested)return l?c=u[0]:(VO.mark=t,c=VO),f=jx(c,o,n),e=e&&e.union(f)||f,e;if(e=e||t.bounds&&t.bounds.clear()||new fe,l)for(a=0,s=u.length;a<s;++a)e.union(jx(u[a],o,n));return t.bounds=e}const T81=["marktype","name","role","interactive","clip","items","zindex","x","y","width","height","align","baseline","fill","fillOpacity","opacity","blend","stroke","strokeOpacity","strokeWidth","strokeCap","strokeDash","strokeDashOffset","strokeForeground","strokeOffset","startAngle","endAngle","innerRadius","outerRadius","cornerRadius","padAngle","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomLeft","cornerRadiusBottomRight","interpolate","tension","orient","defined","url","aspect","smooth","path","scaleX","scaleY","x2","y2","size","shape","text","angle","theta","radius","dir","dx","dy","ellipsis","limit","lineBreak","lineHeight","font","fontSize","fontWeight","fontStyle","fontVariant","description","aria","ariaRole","ariaRoleDescription"];function $G(t,e){return JSON.stringify(t,T81,e)}function MG(t){const e=typeof t=="string"?JSON.parse(t):t;return NG(e)}function NG(t){var e=t.marktype,n=t.items,i,o,u;if(n)for(o=0,u=n.length;o<u;++o)i=e?"mark":"group",n[o][i]=t,n[o].zindex&&(n[o][i].zdirty=!0),(e||i)==="group"&&NG(n[o]);return e&&TG(t),t}class RG{constructor(e){arguments.length?this.root=MG(e):(this.root=XO({marktype:"group",name:"root",role:"frame"}),this.root.items=[new Wg(this.root)])}toJSON(e){return $G(this.root,e||0)}mark(e,n,i){n=n||this.root.items[0];const o=XO(e,n);return n.items[i]=o,o.zindex&&(o.group.zdirty=!0),o}}function XO(t,e){const n={bounds:new fe,clip:!!t.clip,group:e,interactive:t.interactive!==!1,items:[],marktype:t.marktype,name:t.name||void 0,role:t.role||void 0,zindex:t.zindex||0};return t.aria!=null&&(n.aria=t.aria),t.description&&(n.description=t.description),n}function J4(t,e,n){return!t&&typeof document<"u"&&document.createElement&&(t=document),t?n?t.createElementNS(n,e):t.createElement(e):null}function _A(t,e){e=e.toLowerCase();for(var n=t.childNodes,i=0,o=n.length;i<o;++i)if(n[i].tagName.toLowerCase()===e)return n[i]}function ye(t,e,n,i){var o=t.childNodes[e],u;return(!o||o.tagName.toLowerCase()!==n.toLowerCase())&&(u=o||null,o=J4(t.ownerDocument,n,i),t.insertBefore(o,u)),o}function W2(t,e){for(var n=t.childNodes,i=n.length;i>e;)t.removeChild(n[--i]);return t}function DG(t){return"mark-"+t.marktype+(t.role?" role-"+t.role:"")+(t.name?" "+t.name:"")}function Jg(t,e){const n=e.getBoundingClientRect();return[t.clientX-n.left-(e.clientLeft||0),t.clientY-n.top-(e.clientTop||0)]}function $81(t,e,n,i){var o=t&&t.mark,u,l;if(o&&(u=$2[o.marktype]).tip){for(l=Jg(e,n),l[0]-=i[0],l[1]-=i[1];t=t.mark.group;)l[0]-=t.x||0,l[1]-=t.y||0;t=u.tip(o.items,l)}return t}let wA=class{constructor(e,n){this._active=null,this._handlers={},this._loader=e||vg(),this._tooltip=n||M81}initialize(e,n,i){return this._el=e,this._obj=i||null,this.origin(n)}element(){return this._el}canvas(){return this._el&&this._el.firstChild}origin(e){return arguments.length?(this._origin=e||[0,0],this):this._origin.slice()}scene(e){return arguments.length?(this._scene=e,this):this._scene}on(){}off(){}_handlerIndex(e,n,i){for(let o=e?e.length:0;--o>=0;)if(e[o].type===n&&(!i||e[o].handler===i))return o;return-1}handlers(e){const n=this._handlers,i=[];if(e)i.push(...n[this.eventName(e)]);else for(const o in n)i.push(...n[o]);return i}eventName(e){const n=e.indexOf(".");return n<0?e:e.slice(0,n)}handleHref(e,n,i){this._loader.sanitize(i,{context:"href"}).then(o=>{const u=new MouseEvent(e.type,e),l=J4(null,"a");for(const a in o)l.setAttribute(a,o[a]);l.dispatchEvent(u)}).catch(()=>{})}handleTooltip(e,n,i){if(n&&n.tooltip!=null){n=$81(n,e,this.canvas(),this._origin);const o=i&&n&&n.tooltip||null;this._tooltip.call(this._obj,this,e,n,o)}}getItemBoundingClientRect(e){const n=this.canvas();if(!n)return;const i=n.getBoundingClientRect(),o=this._origin,u=e.bounds,l=u.width(),a=u.height();let s=u.x1+o[0]+i.left,c=u.y1+o[1]+i.top;for(;e.mark&&(e=e.mark.group);)s+=e.x||0,c+=e.y||0;return{x:s,y:c,width:l,height:a,left:s,top:c,right:s+l,bottom:c+a}}};function M81(t,e,n,i){t.element().setAttribute("title",i||"")}class Z8{constructor(e){this._el=null,this._bgcolor=null,this._loader=new pG(e)}initialize(e,n,i,o,u){return this._el=e,this.resize(n,i,o,u)}element(){return this._el}canvas(){return this._el&&this._el.firstChild}background(e){return arguments.length===0?this._bgcolor:(this._bgcolor=e,this)}resize(e,n,i,o){return this._width=e,this._height=n,this._origin=i||[0,0],this._scale=o||1,this}dirty(){}render(e,n){const i=this;return i._call=function(){i._render(e,n)},i._call(),i._call=null,i}_render(){}renderAsync(e,n){const i=this.render(e,n);return this._ready?this._ready.then(()=>i):Promise.resolve(i)}_load(e,n){var i=this,o=i._loader[e](n);if(!i._ready){const u=i._call;i._ready=i._loader.ready().then(l=>{l&&u(),i._ready=null})}return o}sanitizeURL(e){return this._load("sanitizeURL",e)}loadImage(e){return this._load("loadImage",e)}}const N81="keydown",R81="keypress",D81="keyup",OG="dragenter",Gc="dragleave",FG="dragover",Px="pointerdown",O81="pointerup",Bd="pointermove",Wc="pointerout",zG="pointerover",Ix="mousedown",F81="mouseup",LG="mousemove",Ud="mouseout",jG="mouseover",qd="click",z81="dblclick",L81="wheel",PG="mousewheel",Hd="touchstart",Gd="touchmove",Wd="touchend",j81=[N81,R81,D81,OG,Gc,FG,Px,O81,Bd,Wc,zG,Ix,F81,LG,Ud,jG,qd,z81,L81,PG,Hd,Gd,Wd],Bx=Bd,kr=Ud,Ux=qd;class J8 extends wA{constructor(e,n){super(e,n),this._down=null,this._touch=null,this._first=!0,this._events={},this.events=j81,this.pointermove=QO([Bd,LG],[zG,jG],[Wc,Ud]),this.dragover=QO([FG],[OG],[Gc]),this.pointerout=ZO([Wc,Ud]),this.dragleave=ZO([Gc])}initialize(e,n,i){return this._canvas=e&&_A(e,"canvas"),[qd,Ix,Px,Bd,Wc,Gc].forEach(o=>KO(this,o)),super.initialize(e,n,i)}canvas(){return this._canvas}context(){return this._canvas.getContext("2d")}DOMMouseScroll(e){this.fire(PG,e)}pointerdown(e){this._down=this._active,this.fire(Px,e)}mousedown(e){this._down=this._active,this.fire(Ix,e)}click(e){this._down===this._active&&(this.fire(qd,e),this._down=null)}touchstart(e){this._touch=this.pickEvent(e.changedTouches[0]),this._first&&(this._active=this._touch,this._first=!1),this.fire(Hd,e,!0)}touchmove(e){this.fire(Gd,e,!0)}touchend(e){this.fire(Wd,e,!0),this._touch=null}fire(e,n,i){const o=i?this._touch:this._active,u=this._handlers[e];if(n.vegaType=e,e===Ux&&o&&o.href?this.handleHref(n,o,o.href):(e===Bx||e===kr)&&this.handleTooltip(n,o,e!==kr),u)for(let l=0,a=u.length;l<a;++l)u[l].handler.call(this._obj,n,o)}on(e,n){const i=this.eventName(e),o=this._handlers;return this._handlerIndex(o[i],e,n)<0&&(KO(this,e),(o[i]||(o[i]=[])).push({type:e,handler:n})),this}off(e,n){const i=this.eventName(e),o=this._handlers[i],u=this._handlerIndex(o,e,n);return u>=0&&o.splice(u,1),this}pickEvent(e){const n=Jg(e,this._canvas),i=this._origin;return this.pick(this._scene,n[0],n[1],n[0]-i[0],n[1]-i[1])}pick(e,n,i,o,u){const l=this.context();return $2[e.marktype].pick.call(this,l,e,n,i,o,u)}}const P81=t=>t===Hd||t===Gd||t===Wd?[Hd,Gd,Wd]:[t];function KO(t,e){P81(e).forEach(n=>I81(t,n))}function I81(t,e){const n=t.canvas();n&&!t._events[e]&&(t._events[e]=1,n.addEventListener(e,t[e]?i=>t[e](i):i=>t.fire(e,i)))}function ar(t,e,n){e.forEach(i=>t.fire(i,n))}function QO(t,e,n){return function(i){const o=this._active,u=this.pickEvent(i);u===o?ar(this,t,i):((!o||!o.exit)&&ar(this,n,i),this._active=u,ar(this,e,i),ar(this,t,i))}}function ZO(t){return function(e){ar(this,t,e),this._active=null}}function B81(){return typeof window<"u"&&window.devicePixelRatio||1}function U81(t,e,n,i,o,u){const l=typeof HTMLElement<"u"&&t instanceof HTMLElement&&t.parentNode!=null,a=t.getContext("2d"),s=l?B81():o;t.width=e*s,t.height=n*s;for(const c in u)a[c]=u[c];return l&&s!==1&&(t.style.width=e+"px",t.style.height=n+"px"),a.pixelRatio=s,a.setTransform(s,0,0,s,s*i[0],s*i[1]),t}class Yd extends Z8{constructor(e){super(e),this._options={},this._redraw=!1,this._dirty=new fe,this._tempb=new fe}initialize(e,n,i,o,u,l){return this._options=l||{},this._canvas=this._options.externalContext?null:cu(1,1,this._options.type),e&&this._canvas&&(W2(e,0).appendChild(this._canvas),this._canvas.setAttribute("class","marks")),super.initialize(e,n,i,o,u)}resize(e,n,i,o){if(super.resize(e,n,i,o),this._canvas)U81(this._canvas,this._width,this._height,this._origin,this._scale,this._options.context);else{const u=this._options.externalContext;u||u1("CanvasRenderer is missing a valid canvas or context"),u.scale(this._scale,this._scale),u.translate(this._origin[0],this._origin[1])}return this._redraw=!0,this}canvas(){return this._canvas}context(){return this._options.externalContext||(this._canvas?this._canvas.getContext("2d"):null)}dirty(e){const n=this._tempb.clear().union(e.bounds);let i=e.mark.group;for(;i;)n.translate(i.x||0,i.y||0),i=i.mark.group;this._dirty.union(n)}_render(e,n){const i=this.context(),o=this._origin,u=this._width,l=this._height,a=this._dirty,s=q81(o,u,l);i.save();const c=this._redraw||a.empty()?(this._redraw=!1,s.expand(1)):H81(i,s.intersect(a),o);return this.clear(-o[0],-o[1],u,l),this.draw(i,e,c,n),i.restore(),a.clear(),this}draw(e,n,i,o){if(n.marktype!=="group"&&o!=null&&!o.includes(n.marktype))return;const u=$2[n.marktype];n.clip&&Br1(e,n),u.draw.call(this,e,n,i,o),n.clip&&e.restore()}clear(e,n,i,o){const u=this._options,l=this.context();u.type!=="pdf"&&!u.externalContext&&l.clearRect(e,n,i,o),this._bgcolor!=null&&(l.fillStyle=this._bgcolor,l.fillRect(e,n,i,o))}}const q81=(t,e,n)=>new fe().set(0,0,e,n).translate(-t[0],-t[1]);function H81(t,e,n){return e.expand(1).round(),t.pixelRatio%1&&e.scale(t.pixelRatio).round().scale(1/t.pixelRatio),e.translate(-(n[0]%1),-(n[1]%1)),t.beginPath(),t.rect(e.x1,e.y1,e.width(),e.height()),t.clip(),e}class IG extends wA{constructor(e,n){super(e,n);const i=this;i._hrefHandler=Tv(i,(o,u)=>{u&&u.href&&i.handleHref(o,u,u.href)}),i._tooltipHandler=Tv(i,(o,u)=>{i.handleTooltip(o,u,o.type!==kr)})}initialize(e,n,i){let o=this._svg;return o&&(o.removeEventListener(Ux,this._hrefHandler),o.removeEventListener(Bx,this._tooltipHandler),o.removeEventListener(kr,this._tooltipHandler)),this._svg=o=e&&_A(e,"svg"),o&&(o.addEventListener(Ux,this._hrefHandler),o.addEventListener(Bx,this._tooltipHandler),o.addEventListener(kr,this._tooltipHandler)),super.initialize(e,n,i)}canvas(){return this._svg}on(e,n){const i=this.eventName(e),o=this._handlers;if(this._handlerIndex(o[i],e,n)<0){const l={type:e,handler:n,listener:Tv(this,n)};(o[i]||(o[i]=[])).push(l),this._svg&&this._svg.addEventListener(i,l.listener)}return this}off(e,n){const i=this.eventName(e),o=this._handlers[i],u=this._handlerIndex(o,e,n);return u>=0&&(this._svg&&this._svg.removeEventListener(i,o[u].listener),o.splice(u,1)),this}}const Tv=(t,e)=>n=>{let i=n.target.__data__;i=Array.isArray(i)?i[0]:i,n.vegaType=n.type,e.call(t._obj,n,i)},BG="aria-hidden",EA="aria-label",SA="role",AA="aria-roledescription",UG="graphics-object",CA="graphics-symbol",qG=(t,e,n)=>({[SA]:t,[AA]:e,[EA]:n||void 0}),G81=D3(["axis-domain","axis-grid","axis-label","axis-tick","axis-title","legend-band","legend-entry","legend-gradient","legend-label","legend-title","legend-symbol","title"]),JO={axis:{desc:"axis",caption:V81},legend:{desc:"legend",caption:X81},"title-text":{desc:"title",caption:t=>`Title text '${eF(t)}'`},"title-subtitle":{desc:"subtitle",caption:t=>`Subtitle text '${eF(t)}'`}},tF={ariaRole:SA,ariaRoleDescription:AA,description:EA};function HG(t,e){const n=e.aria===!1;if(t(BG,n||void 0),n||e.description==null)for(const i in tF)t(tF[i],void 0);else{const i=e.mark.marktype;t(EA,e.description),t(SA,e.ariaRole||(i==="group"?UG:CA)),t(AA,e.ariaRoleDescription||`${i} mark`)}}function GG(t){return t.aria===!1?{[BG]:!0}:G81[t.role]?null:JO[t.role]?Y81(t,JO[t.role]):W81(t)}function W81(t){const e=t.marktype,n=e==="group"||e==="text"||t.items.some(i=>i.description!=null&&i.aria!==!1);return qG(n?UG:CA,`${e} mark container`,t.description)}function Y81(t,e){try{const n=t.items[0],i=e.caption||(()=>"");return qG(e.role||CA,e.desc,n.description||i(n))}catch{return null}}function eF(t){return S1(t.text).join(" ")}function V81(t){const e=t.datum,n=t.orient,i=e.title?WG(t):null,o=t.context,u=o.scales[e.scale].value,l=o.dataflow.locale(),a=u.type;return`${n==="left"||n==="right"?"Y":"X"}-axis`+(i?` titled '${i}'`:"")+` for a ${xl(a)?"discrete":a} scale with ${lG(l,u,t)}`}function X81(t){const e=t.datum,n=e.title?WG(t):null,i=`${e.type||""} legend`.trim(),o=e.scales,u=Object.keys(o),l=t.context,a=l.scales[o[u[0]]].value,s=l.dataflow.locale();return Q81(i)+(n?` titled '${n}'`:"")+` for ${K81(u)} with ${lG(s,a,t)}`}function WG(t){try{return S1(st(t.items).items[0].text).join(" ")}catch{return null}}function K81(t){return t=t.map(e=>e+(e==="fill"||e==="stroke"?" color":"")),t.length<2?t[0]:t.slice(0,-1).join(", ")+" and "+st(t)}function Q81(t){return t.length?t[0].toUpperCase()+t.slice(1):t}const YG=t=>(t+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),Z81=t=>YG(t).replace(/"/g,"&quot;").replace(/\t/g,"&#x9;").replace(/\n/g,"&#xA;").replace(/\r/g,"&#xD;");function kA(){let t="",e="",n="";const i=[],o=()=>e=n="",u=s=>{e&&(t+=`${e}>${n}`,o()),i.push(s)},l=(s,c)=>(c!=null&&(e+=` ${s}="${Z81(c)}"`),a),a={open(s,...c){u(s),e="<"+s;for(const f of c)for(const g in f)l(g,f[g]);return a},close(){const s=i.pop();return e?t+=e+(n?`>${n}</${s}>`:"/>"):t+=`</${s}>`,o(),a},attr:l,text:s=>(n+=YG(s),a),toString:()=>t};return a}const VG=t=>XG(kA(),t)+"";function XG(t,e){if(t.open(e.tagName),e.hasAttributes()){const n=e.attributes,i=n.length;for(let o=0;o<i;++o)t.attr(n[o].name,n[o].value)}if(e.hasChildNodes()){const n=e.childNodes;for(const i of n)i.nodeType===3?t.text(i.nodeValue):XG(t,i)}return t.close()}const Vd={fill:"fill",fillOpacity:"fill-opacity",stroke:"stroke",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",strokeCap:"stroke-linecap",strokeJoin:"stroke-linejoin",strokeDash:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeMiterLimit:"stroke-miterlimit",opacity:"opacity"},Xd={blend:"mix-blend-mode"},KG={fill:"none","stroke-miterlimit":10},z9=0,nF="http://www.w3.org/2000/xmlns/",me=e8.xmlns;class TA extends Z8{constructor(e){super(e),this._dirtyID=0,this._dirty=[],this._svg=null,this._root=null,this._defs=null}initialize(e,n,i,o,u){return this._defs={},this._clearDefs(),e&&(this._svg=ye(e,0,"svg",me),this._svg.setAttributeNS(nF,"xmlns",me),this._svg.setAttributeNS(nF,"xmlns:xlink",e8["xmlns:xlink"]),this._svg.setAttribute("version",e8.version),this._svg.setAttribute("class","marks"),W2(e,1),this._root=ye(this._svg,z9,"g",me),tu(this._root,KG),W2(this._svg,z9+1)),this.background(this._bgcolor),super.initialize(e,n,i,o,u)}background(e){return arguments.length&&this._svg&&this._svg.style.setProperty("background-color",e),super.background(...arguments)}resize(e,n,i,o){return super.resize(e,n,i,o),this._svg&&(tu(this._svg,{width:this._width*this._scale,height:this._height*this._scale,viewBox:`0 0 ${this._width} ${this._height}`}),this._root.setAttribute("transform",`translate(${this._origin})`)),this._dirty=[],this}canvas(){return this._svg}svg(){const e=this._svg,n=this._bgcolor;if(!e)return null;let i;n&&(e.removeAttribute("style"),i=ye(e,z9,"rect",me),tu(i,{width:this._width,height:this._height,fill:n}));const o=VG(e);return n&&(e.removeChild(i),this._svg.style.setProperty("background-color",n)),o}_render(e,n){return this._dirtyCheck()&&(this._dirtyAll&&this._clearDefs(),this.mark(this._root,e,void 0,n),W2(this._root,1)),this.defs(),this._dirty=[],++this._dirtyID,this}dirty(e){e.dirty!==this._dirtyID&&(e.dirty=this._dirtyID,this._dirty.push(e))}isDirty(e){return this._dirtyAll||!e._svg||!e._svg.ownerSVGElement||e.dirty===this._dirtyID}_dirtyCheck(){this._dirtyAll=!0;const e=this._dirty;if(!e.length||!this._dirtyID)return!0;const n=++this._dirtyID;let i,o,u,l,a,s,c;for(a=0,s=e.length;a<s;++a)if(i=e[a],o=i.mark,o.marktype!==u&&(u=o.marktype,l=$2[u]),o.zdirty&&o.dirty!==n&&(this._dirtyAll=!1,iF(i,n),o.items.forEach(f=>{f.dirty=n})),!o.zdirty){if(i.exit){l.nested&&o.items.length?(c=o.items[0],c._svg&&this._update(l,c._svg,c)):i._svg&&(c=i._svg.parentNode,c&&c.removeChild(i._svg)),i._svg=null;continue}i=l.nested?o.items[0]:i,i._update!==n&&(!i._svg||!i._svg.ownerSVGElement?(this._dirtyAll=!1,iF(i,n)):this._update(l,i._svg,i),i._update=n)}return!this._dirtyAll}mark(e,n,i,o){if(!this.isDirty(n))return n._svg;const u=this._svg,l=n.marktype,a=$2[l],s=n.interactive===!1?"none":null,c=a.tag==="g",f=oF(n,e,i,"g",u);if(l!=="group"&&o!=null&&!o.includes(l))return W2(f,0),n._svg;f.setAttribute("class",DG(n));const g=GG(n);for(const b in g)An(f,b,g[b]);c||An(f,"pointer-events",s),An(f,"clip-path",n.clip?uA(this,n,n.group):null);let p=null,m=0;const v=b=>{const x=this.isDirty(b),w=oF(b,f,p,a.tag,u);x&&(this._update(a,w,b),c&&e71(this,w,b,o)),p=w,++m};return a.nested?n.items.length&&v(n.items[0]):F3(n,v),W2(f,m),f}_update(e,n,i){Ro=n,an=n.__values__,HG(Tr,i),e.attr(Tr,i,this);const o=i71[e.type];o&&o.call(this,e,n,i),Ro&&this.style(Ro,i)}style(e,n){if(n!=null){for(const i in Vd){let o=i==="font"?Q8(n):n[i];if(o===an[i])continue;const u=Vd[i];o==null?e.removeAttribute(u):(nA(o)&&(o=rG(o,this._defs.gradient,QG())),e.setAttribute(u,o+"")),an[i]=o}for(const i in Xd)Yc(e,Xd[i],n[i])}}defs(){const e=this._svg,n=this._defs;let i=n.el,o=0;for(const u in n.gradient)i||(n.el=i=ye(e,z9+1,"defs",me)),o=J81(i,n.gradient[u],o);for(const u in n.clipping)i||(n.el=i=ye(e,z9+1,"defs",me)),o=t71(i,n.clipping[u],o);i&&(o===0?(e.removeChild(i),n.el=null):W2(i,o))}_clearDefs(){const e=this._defs;e.gradient={},e.clipping={}}}function iF(t,e){for(;t&&t.dirty!==e;t=t.mark.group)if(t.dirty=e,t.mark&&t.mark.dirty!==e)t.mark.dirty=e;else return}function J81(t,e,n){let i,o,u;if(e.gradient==="radial"){let l=ye(t,n++,"pattern",me);tu(l,{id:Ld+e.id,viewBox:"0,0,1,1",width:"100%",height:"100%",preserveAspectRatio:"xMidYMid slice"}),l=ye(l,0,"rect",me),tu(l,{width:1,height:1,fill:`url(${QG()}#${e.id})`}),t=ye(t,n++,"radialGradient",me),tu(t,{id:e.id,fx:e.x1,fy:e.y1,fr:e.r1,cx:e.x2,cy:e.y2,r:e.r2})}else t=ye(t,n++,"linearGradient",me),tu(t,{id:e.id,x1:e.x1,x2:e.x2,y1:e.y1,y2:e.y2});for(i=0,o=e.stops.length;i<o;++i)u=ye(t,i,"stop",me),u.setAttribute("offset",e.stops[i].offset),u.setAttribute("stop-color",e.stops[i].color);return W2(t,i),n}function t71(t,e,n){let i;return t=ye(t,n,"clipPath",me),t.setAttribute("id",e.id),e.path?(i=ye(t,0,"path",me),i.setAttribute("d",e.path)):(i=ye(t,0,"rect",me),tu(i,{x:0,y:0,width:e.width,height:e.height})),W2(t,1),n+1}function e71(t,e,n,i){e=e.lastChild.previousSibling;let o,u=0;F3(n,l=>{o=t.mark(e,l,o,i),++u}),W2(e,1+u)}function oF(t,e,n,i,o){let u=t._svg,l;if(!u&&(l=e.ownerDocument,u=J4(l,i,me),t._svg=u,t.mark&&(u.__data__=t,u.__values__={fill:"default"},i==="g"))){const a=J4(l,"path",me);u.appendChild(a),a.__data__=t;const s=J4(l,"g",me);u.appendChild(s),s.__data__=t;const c=J4(l,"path",me);u.appendChild(c),c.__data__=t,c.__values__={fill:"default"}}return(u.ownerSVGElement!==o||n71(u,n))&&e.insertBefore(u,n?n.nextSibling:e.firstChild),u}function n71(t,e){return t.parentNode&&t.parentNode.childNodes.length>1&&t.previousSibling!=e}let Ro=null,an=null;const i71={group(t,e,n){const i=Ro=e.childNodes[2];an=i.__values__,t.foreground(Tr,n,this),an=e.__values__,Ro=e.childNodes[1],t.content(Tr,n,this);const o=Ro=e.childNodes[0];t.background(Tr,n,this);const u=n.mark.interactive===!1?"none":null;if(u!==an.events&&(An(i,"pointer-events",u),An(o,"pointer-events",u),an.events=u),n.strokeForeground&&n.stroke){const l=n.fill;An(i,"display",null),this.style(o,n),An(o,"stroke",null),l&&(n.fill=null),an=i.__values__,this.style(i,n),l&&(n.fill=l),Ro=null}else An(i,"display","none")},image(t,e,n){n.smooth===!1?(Yc(e,"image-rendering","optimizeSpeed"),Yc(e,"image-rendering","pixelated")):Yc(e,"image-rendering",null)},text(t,e,n){const i=K8(n);let o,u,l,a;r1(i)?(u=i.map(s=>_u(n,s)),o=u.join(`
`),o!==an.text&&(W2(e,0),l=e.ownerDocument,a=xu(n),u.forEach((s,c)=>{const f=J4(l,"tspan",me);f.__data__=n,f.textContent=s,c&&(f.setAttribute("x",0),f.setAttribute("dy",a)),e.appendChild(f)}),an.text=o)):(u=_u(n,i),u!==an.text&&(e.textContent=u,an.text=u)),An(e,"font-family",Q8(n)),An(e,"font-size",Oi(n)+"px"),An(e,"font-style",n.fontStyle),An(e,"font-variant",n.fontVariant),An(e,"font-weight",n.fontWeight)}};function Tr(t,e,n){e!==an[t]&&(n?o71(Ro,t,e,n):An(Ro,t,e),an[t]=e)}function Yc(t,e,n){n!==an[e]&&(n==null?t.style.removeProperty(e):t.style.setProperty(e,n+""),an[e]=n)}function tu(t,e){for(const n in e)An(t,n,e[n])}function An(t,e,n){n!=null?t.setAttribute(e,n):t.removeAttribute(e)}function o71(t,e,n,i){n!=null?t.setAttributeNS(i,e,n):t.removeAttributeNS(i,e)}function QG(){let t;return typeof window>"u"?"":(t=window.location).hash?t.href.slice(0,-t.hash.length):t.href}class ZG extends Z8{constructor(e){super(e),this._text=null,this._defs={gradient:{},clipping:{}}}svg(){return this._text}_render(e){const n=kA();n.open("svg",K1({},e8,{class:"marks",width:this._width*this._scale,height:this._height*this._scale,viewBox:`0 0 ${this._width} ${this._height}`}));const i=this._bgcolor;return i&&i!=="transparent"&&i!=="none"&&n.open("rect",{width:this._width,height:this._height,fill:i}).close(),n.open("g",KG,{transform:"translate("+this._origin+")"}),this.mark(n,e),n.close(),this.defs(n),this._text=n.close()+"",this}mark(e,n){const i=$2[n.marktype],o=i.tag,u=[HG,i.attr];e.open("g",{class:DG(n),"clip-path":n.clip?uA(this,n,n.group):null},GG(n),{"pointer-events":o!=="g"&&n.interactive===!1?"none":null});const l=a=>{const s=this.href(a);if(s&&e.open("a",s),e.open(o,this.attr(n,a,u,o!=="g"?o:null)),o==="text"){const c=K8(a);if(r1(c)){const f={x:0,dy:xu(a)};for(let g=0;g<c.length;++g)e.open("tspan",g?f:null).text(_u(a,c[g])).close()}else e.text(_u(a,c))}else if(o==="g"){const c=a.strokeForeground,f=a.fill,g=a.stroke;c&&g&&(a.stroke=null),e.open("path",this.attr(n,a,i.background,"bgrect")).close(),e.open("g",this.attr(n,a,i.content)),F3(a,p=>this.mark(e,p)),e.close(),c&&g?(f&&(a.fill=null),a.stroke=g,e.open("path",this.attr(n,a,i.foreground,"bgrect")).close(),f&&(a.fill=f)):e.open("path",this.attr(n,a,i.foreground,"bgfore")).close()}e.close(),s&&e.close()};return i.nested?n.items&&n.items.length&&l(n.items[0]):F3(n,l),e.close()}href(e){const n=e.href;let i;if(n){if(i=this._hrefs&&this._hrefs[n])return i;this.sanitizeURL(n).then(o=>{o["xlink:href"]=o.href,o.href=null,(this._hrefs||(this._hrefs={}))[n]=o})}return null}attr(e,n,i,o){const u={},l=(a,s,c,f)=>{u[f||a]=s};return Array.isArray(i)?i.forEach(a=>a(l,n,this)):i(l,n,this),o&&u71(u,n,e,o,this._defs),u}defs(e){const n=this._defs.gradient,i=this._defs.clipping;if(Object.keys(n).length+Object.keys(i).length!==0){e.open("defs");for(const u in n){const l=n[u],a=l.stops;l.gradient==="radial"?(e.open("pattern",{id:Ld+u,viewBox:"0,0,1,1",width:"100%",height:"100%",preserveAspectRatio:"xMidYMid slice"}),e.open("rect",{width:"1",height:"1",fill:"url(#"+u+")"}).close(),e.close(),e.open("radialGradient",{id:u,fx:l.x1,fy:l.y1,fr:l.r1,cx:l.x2,cy:l.y2,r:l.r2})):e.open("linearGradient",{id:u,x1:l.x1,x2:l.x2,y1:l.y1,y2:l.y2});for(let s=0;s<a.length;++s)e.open("stop",{offset:a[s].offset,"stop-color":a[s].color}).close();e.close()}for(const u in i){const l=i[u];e.open("clipPath",{id:u}),l.path?e.open("path",{d:l.path}).close():e.open("rect",{x:0,y:0,width:l.width,height:l.height}).close(),e.close()}e.close()}}}function u71(t,e,n,i,o){let u;if(e==null||(i==="bgrect"&&n.interactive===!1&&(t["pointer-events"]="none"),i==="bgfore"&&(n.interactive===!1&&(t["pointer-events"]="none"),t.display="none",e.fill!==null)))return t;i==="image"&&e.smooth===!1&&(u=["image-rendering: optimizeSpeed;","image-rendering: pixelated;"]),i==="text"&&(t["font-family"]=Q8(e),t["font-size"]=Oi(e)+"px",t["font-style"]=e.fontStyle,t["font-variant"]=e.fontVariant,t["font-weight"]=e.fontWeight);for(const l in Vd){let a=e[l];const s=Vd[l];a==="transparent"&&(s==="fill"||s==="stroke")||a!=null&&(nA(a)&&(a=rG(a,o.gradient,"")),t[s]=a)}for(const l in Xd){const a=e[l];a!=null&&(u=u||[],u.push(`${Xd[l]}: ${a};`))}return u&&(t.style=u.join(" ")),t}const x3={svgMarkTypes:["text"],svgOnTop:!0,debug:!1};function l71(t){x3.svgMarkTypes=t.svgMarkTypes??["text"],x3.svgOnTop=t.svgOnTop??!0,x3.debug=t.debug??!1}class qx extends Z8{constructor(e){super(e),this._svgRenderer=new TA(e),this._canvasRenderer=new Yd(e)}initialize(e,n,i,o,u){this._root_el=ye(e,0,"div");const l=ye(this._root_el,0,"div"),a=ye(this._root_el,1,"div");return this._root_el.style.position="relative",x3.debug||(l.style.height="100%",a.style.position="absolute",a.style.top="0",a.style.left="0",a.style.height="100%",a.style.width="100%"),this._svgEl=x3.svgOnTop?a:l,this._canvasEl=x3.svgOnTop?l:a,this._svgEl.style.pointerEvents="none",this._canvasRenderer.initialize(this._canvasEl,n,i,o,u),this._svgRenderer.initialize(this._svgEl,n,i,o,u),super.initialize(e,n,i,o,u)}dirty(e){return x3.svgMarkTypes.includes(e.mark.marktype)?this._svgRenderer.dirty(e):this._canvasRenderer.dirty(e),this}_render(e,n){const o=(n??["arc","area","image","line","path","rect","rule","shape","symbol","text","trail"]).filter(u=>!x3.svgMarkTypes.includes(u));this._svgRenderer.render(e,x3.svgMarkTypes),this._canvasRenderer.render(e,o)}resize(e,n,i,o){return super.resize(e,n,i,o),this._svgRenderer.resize(e,n,i,o),this._canvasRenderer.resize(e,n,i,o),this}background(e){return x3.svgOnTop?this._canvasRenderer.background(e):this._svgRenderer.background(e),this}}class JG extends J8{constructor(e,n){super(e,n)}initialize(e,n,i){const o=ye(ye(e,0,"div"),x3.svgOnTop?0:1,"div");return super.initialize(o,n,i)}}const tW="canvas",eW="hybrid",nW="png",iW="svg",oW="none",eu={Canvas:tW,PNG:nW,SVG:iW,Hybrid:eW,None:oW},K0={};K0[tW]=K0[nW]={renderer:Yd,headless:Yd,handler:J8};K0[iW]={renderer:TA,headless:ZG,handler:IG};K0[eW]={renderer:qx,headless:qx,handler:JG};K0[oW]={};function th(t,e){return t=String(t||"").toLowerCase(),arguments.length>1?(K0[t]=e,this):K0[t]}function uW(t,e,n){const i=[],o=new fe().union(e),u=t.marktype;return u?lW(t,o,n,i):u==="group"?aW(t,o,n,i):u1("Intersect scene must be mark node or group item.")}function lW(t,e,n,i){if(a71(t,e,n)){const o=t.items,u=t.marktype,l=o.length;let a=0;if(u==="group")for(;a<l;++a)aW(o[a],e,n,i);else for(const s=$2[u].isect;a<l;++a){const c=o[a];rW(c,e,s)&&i.push(c)}}return i}function a71(t,e,n){return t.bounds&&e.intersects(t.bounds)&&(t.marktype==="group"||t.interactive!==!1&&(!n||n(t)))}function aW(t,e,n,i){n&&n(t.mark)&&rW(t,e,$2.group.isect)&&i.push(t);const o=t.items,u=o&&o.length;if(u){const l=t.x||0,a=t.y||0;e.translate(-l,-a);for(let s=0;s<u;++s)lW(o[s],e,n,i);e.translate(l,a)}return i}function rW(t,e,n){const i=t.bounds;return e.encloses(i)||e.intersects(i)&&n(t,e)}const $v=new fe;function sW(t){const e=t.clip;if(Q1(e))e(V8($v.clear()));else if(e)$v.set(0,0,t.group.width,t.group.height);else return;t.bounds.intersect($v)}const r71=1e-9;function $A(t,e,n){return t===e?!0:n==="path"?cW(t,e):t instanceof Date&&e instanceof Date?+t==+e:ht(t)&&ht(e)?Math.abs(t-e)<=r71:!t||!e||!E1(t)&&!E1(e)?t==e:s71(t,e)}function cW(t,e){return $A(_l(t),_l(e))}function s71(t,e){var n=Object.keys(t),i=Object.keys(e),o,u;if(n.length!==i.length)return!1;for(n.sort(),i.sort(),u=n.length-1;u>=0;u--)if(n[u]!=i[u])return!1;for(u=n.length-1;u>=0;u--)if(o=n[u],!$A(t[o],e[o],o))return!1;return typeof t==typeof e}function c71(){Ar1(),D91()}const Sl="top",A3="left",C3="right",wu="bottom",d71="top-left",f71="top-right",g71="bottom-left",h71="bottom-right",MA="start",Hx="middle",Cn="end",p71="x",m71="y",eh="group",NA="axis",RA="title",y71="frame",v71="scope",DA="legend",dW="row-header",fW="row-footer",gW="row-title",hW="column-header",pW="column-footer",mW="column-title",b71="padding",x71="symbol",yW="fit",vW="fit-x",bW="fit-y",_71="pad",OA="none",ec="all",Gx="each",FA="flush",nu="column",iu="row";function xW(t){i1.call(this,null,t)}b1(xW,i1,{transform(t,e){const n=e.dataflow,i=t.mark,o=i.marktype,u=$2[o],l=u.bound;let a=i.bounds,s;if(u.nested)i.items.length&&n.dirty(i.items[0]),a=nc(i,l),i.items.forEach(c=>{c.bounds.clear().union(a)});else if(o===eh||t.modified())switch(e.visit(e.MOD,c=>n.dirty(c)),a.clear(),i.items.forEach(c=>a.union(nc(c,l))),i.role){case NA:case DA:case RA:e.reflow()}else s=e.changed(e.REM),e.visit(e.ADD,c=>{a.union(nc(c,l))}),e.visit(e.MOD,c=>{s=s||a.alignsWith(c.bounds),n.dirty(c),a.union(nc(c,l))}),s&&(a.clear(),i.items.forEach(c=>a.union(c.bounds)));return sW(i),e.modifies("bounds")}});function nc(t,e,n){return e(t.bounds.clear(),t,n)}const uF=":vega_identifier:";function zA(t){i1.call(this,0,t)}zA.Definition={type:"Identifier",metadata:{modifies:!0},params:[{name:"as",type:"string",required:!0}]};b1(zA,i1,{transform(t,e){const n=w71(e.dataflow),i=t.as;let o=n.value;return e.visit(e.ADD,u=>u[i]=u[i]||++o),n.set(this.value=o),e}});function w71(t){return t._signals[uF]||(t._signals[uF]=t.add(0))}function _W(t){i1.call(this,null,t)}b1(_W,i1,{transform(t,e){let n=this.value;n||(n=e.dataflow.scenegraph().mark(t.markdef,E71(t),t.index),n.group.context=t.context,t.context.group||(t.context.group=n.group),n.source=this.source,n.clip=t.clip,n.interactive=t.interactive,this.value=n);const i=n.marktype===eh?Wg:Gg;return e.visit(e.ADD,o=>i.call(o,n)),(t.modified("clip")||t.modified("interactive"))&&(n.clip=t.clip,n.interactive=!!t.interactive,n.zdirty=!0,e.reflow()),n.items=e.source,e}});function E71(t){const e=t.groups,n=t.parent;return e&&e.size===1?e.get(Object.keys(e.object)[0]):e&&n?e.lookup(n):null}function wW(t){i1.call(this,null,t)}const lF={parity:t=>t.filter((e,n)=>n%2?e.opacity=0:1),greedy:(t,e)=>{let n;return t.filter((i,o)=>!o||!EW(n.bounds,i.bounds,e)?(n=i,1):i.opacity=0)}},EW=(t,e,n)=>n>Math.max(e.x1-t.x2,t.x1-e.x2,e.y1-t.y2,t.y1-e.y2),aF=(t,e)=>{for(var n=1,i=t.length,o=t[0].bounds,u;n<i;o=u,++n)if(EW(o,u=t[n].bounds,e))return!0},S71=t=>{const e=t.bounds;return e.width()>1&&e.height()>1},A71=(t,e,n)=>{var i=t.range(),o=new fe;return e===Sl||e===wu?o.set(i[0],-1/0,i[1],1/0):o.set(-1/0,i[0],1/0,i[1]),o.expand(n||1),u=>o.encloses(u.bounds)},rF=t=>(t.forEach(e=>e.opacity=1),t),sF=(t,e)=>t.reflow(e.modified()).modifies("opacity");b1(wW,i1,{transform(t,e){const n=lF[t.method]||lF.parity,i=t.separation||0;let o=e.materialize(e.SOURCE).source,u,l;if(!o||!o.length)return;if(!t.method)return t.modified("method")&&(rF(o),e=sF(e,t)),e;if(o=o.filter(S71),!o.length)return;if(t.sort&&(o=o.slice().sort(t.sort)),u=rF(o),e=sF(e,t),u.length>=3&&aF(u,i)){do u=n(u,i);while(u.length>=3&&aF(u,i));u.length<3&&!st(o).opacity&&(u.length>1&&(st(u).opacity=0),st(o).opacity=1)}t.boundScale&&t.boundTolerance>=0&&(l=A71(t.boundScale,t.boundOrient,+t.boundTolerance),o.forEach(s=>{l(s)||(s.opacity=0)}));const a=u[0].mark.bounds.clear();return o.forEach(s=>{s.opacity&&a.union(s.bounds)}),e}});function SW(t){i1.call(this,null,t)}b1(SW,i1,{transform(t,e){const n=e.dataflow;if(e.visit(e.ALL,i=>n.dirty(i)),e.fields&&e.fields.zindex){const i=e.source&&e.source[0];i&&(i.mark.zdirty=!0)}}});const ln=new fe;function H5(t,e,n){return t[e]===n?0:(t[e]=n,1)}function C71(t){var e=t.items[0].orient;return e===A3||e===C3}function k71(t){let e=+t.grid;return[t.ticks?e++:-1,t.labels?e++:-1,e+ +t.domain]}function T71(t,e,n,i){var o=e.items[0],u=o.datum,l=o.translate!=null?o.translate:.5,a=o.orient,s=k71(u),c=o.range,f=o.offset,g=o.position,p=o.minExtent,m=o.maxExtent,v=u.title&&o.items[s[2]].items[0],b=o.titlePadding,x=o.bounds,w=v&&vA(v),S=0,A=0,C,k;switch(ln.clear().union(x),x.clear(),(C=s[0])>-1&&x.union(o.items[C].bounds),(C=s[1])>-1&&x.union(o.items[C].bounds),a){case Sl:S=g||0,A=-f,k=Math.max(p,Math.min(m,-x.y1)),x.add(0,-k).add(c,0),v&&ic(t,v,k,b,w,0,-1,x);break;case A3:S=-f,A=g||0,k=Math.max(p,Math.min(m,-x.x1)),x.add(-k,0).add(0,c),v&&ic(t,v,k,b,w,1,-1,x);break;case C3:S=n+f,A=g||0,k=Math.max(p,Math.min(m,x.x2)),x.add(0,0).add(k,c),v&&ic(t,v,k,b,w,1,1,x);break;case wu:S=g||0,A=i+f,k=Math.max(p,Math.min(m,x.y2)),x.add(0,0).add(c,k),v&&ic(t,v,k,b,0,0,1,x);break;default:S=o.x,A=o.y}return l4(x.translate(S,A),o),H5(o,"x",S+l)|H5(o,"y",A+l)&&(o.bounds=ln,t.dirty(o),o.bounds=x,t.dirty(o)),o.mark.bounds.clear().union(x)}function ic(t,e,n,i,o,u,l,a){const s=e.bounds;if(e.auto){const c=l*(n+o+i);let f=0,g=0;t.dirty(e),u?f=(e.x||0)-(e.x=c):g=(e.y||0)-(e.y=c),e.mark.bounds.clear().union(s.translate(-f,-g)),t.dirty(e)}a.union(s)}const cF=(t,e)=>Math.floor(Math.min(t,e)),dF=(t,e)=>Math.ceil(Math.max(t,e));function $71(t){var e=t.items,n=e.length,i=0,o,u;const l={marks:[],rowheaders:[],rowfooters:[],colheaders:[],colfooters:[],rowtitle:null,coltitle:null};for(;i<n;++i)if(o=e[i],u=o.items,o.marktype===eh)switch(o.role){case NA:case DA:case RA:break;case dW:l.rowheaders.push(...u);break;case fW:l.rowfooters.push(...u);break;case hW:l.colheaders.push(...u);break;case pW:l.colfooters.push(...u);break;case gW:l.rowtitle=u[0];break;case mW:l.coltitle=u[0];break;default:l.marks.push(...u)}return l}function M71(t){return new fe().set(0,0,t.width||0,t.height||0)}function N71(t){const e=t.bounds.clone();return e.empty()?e.set(0,0,0,0):e.translate(-(t.x||0),-(t.y||0))}function Ut(t,e,n){const i=E1(t)?t[e]:t;return i??(n!==void 0?n:0)}function fF(t){return t<0?Math.ceil(-t):0}function AW(t,e,n){var i=!n.nodirty,o=n.bounds===FA?M71:N71,u=ln.set(0,0,0,0),l=Ut(n.align,nu),a=Ut(n.align,iu),s=Ut(n.padding,nu),c=Ut(n.padding,iu),f=n.columns||e.length,g=f<=0?1:Math.ceil(e.length/f),p=e.length,m=Array(p),v=Array(f),b=0,x=Array(p),w=Array(g),S=0,A=Array(p),C=Array(p),k=Array(p),M,T,D,I,U,B,V,W,O,j,R;for(T=0;T<f;++T)v[T]=0;for(T=0;T<g;++T)w[T]=0;for(T=0;T<p;++T)B=e[T],U=k[T]=o(B),B.x=B.x||0,A[T]=0,B.y=B.y||0,C[T]=0,D=T%f,I=~~(T/f),b=Math.max(b,V=Math.ceil(U.x2)),S=Math.max(S,W=Math.ceil(U.y2)),v[D]=Math.max(v[D],V),w[I]=Math.max(w[I],W),m[T]=s+fF(U.x1),x[T]=c+fF(U.y1),i&&t.dirty(e[T]);for(T=0;T<p;++T)T%f===0&&(m[T]=0),T<f&&(x[T]=0);if(l===Gx)for(D=1;D<f;++D){for(R=0,T=D;T<p;T+=f)R<m[T]&&(R=m[T]);for(T=D;T<p;T+=f)m[T]=R+v[D-1]}else if(l===ec){for(R=0,T=0;T<p;++T)T%f&&R<m[T]&&(R=m[T]);for(T=0;T<p;++T)T%f&&(m[T]=R+b)}else for(l=!1,D=1;D<f;++D)for(T=D;T<p;T+=f)m[T]+=v[D-1];if(a===Gx)for(I=1;I<g;++I){for(R=0,T=I*f,M=T+f;T<M;++T)R<x[T]&&(R=x[T]);for(T=I*f;T<M;++T)x[T]=R+w[I-1]}else if(a===ec){for(R=0,T=f;T<p;++T)R<x[T]&&(R=x[T]);for(T=f;T<p;++T)x[T]=R+S}else for(a=!1,I=1;I<g;++I)for(T=I*f,M=T+f;T<M;++T)x[T]+=w[I-1];for(O=0,T=0;T<p;++T)O=m[T]+(T%f?O:0),A[T]+=O-e[T].x;for(D=0;D<f;++D)for(j=0,T=D;T<p;T+=f)j+=x[T],C[T]+=j-e[T].y;if(l&&Ut(n.center,nu)&&g>1)for(T=0;T<p;++T)U=l===ec?b:v[T%f],O=U-k[T].x2-e[T].x-A[T],O>0&&(A[T]+=O/2);if(a&&Ut(n.center,iu)&&f!==1)for(T=0;T<p;++T)U=a===ec?S:w[~~(T/f)],j=U-k[T].y2-e[T].y-C[T],j>0&&(C[T]+=j/2);for(T=0;T<p;++T)u.union(k[T].translate(A[T],C[T]));switch(O=Ut(n.anchor,p71),j=Ut(n.anchor,m71),Ut(n.anchor,nu)){case Cn:O-=u.width();break;case Hx:O-=u.width()/2}switch(Ut(n.anchor,iu)){case Cn:j-=u.height();break;case Hx:j-=u.height()/2}for(O=Math.round(O),j=Math.round(j),u.clear(),T=0;T<p;++T)e[T].mark.bounds.clear();for(T=0;T<p;++T)B=e[T],B.x+=A[T]+=O,B.y+=C[T]+=j,u.union(B.mark.bounds.union(B.bounds.translate(A[T],C[T]))),i&&t.dirty(B);return u}function R71(t,e,n){var i=$71(e),o=i.marks,u=n.bounds===FA?D71:O71,l=n.offset,a=n.columns||o.length,s=a<=0?1:Math.ceil(o.length/a),c=s*a,f,g,p,m,v,b,x;const w=AW(t,o,n);w.empty()&&w.set(0,0,0,0),i.rowheaders&&(b=Ut(n.headerBand,iu,null),f=oc(t,i.rowheaders,o,a,s,-Ut(l,"rowHeader"),cF,0,u,"x1",0,a,1,b)),i.colheaders&&(b=Ut(n.headerBand,nu,null),g=oc(t,i.colheaders,o,a,a,-Ut(l,"columnHeader"),cF,1,u,"y1",0,1,a,b)),i.rowfooters&&(b=Ut(n.footerBand,iu,null),p=oc(t,i.rowfooters,o,a,s,Ut(l,"rowFooter"),dF,0,u,"x2",a-1,a,1,b)),i.colfooters&&(b=Ut(n.footerBand,nu,null),m=oc(t,i.colfooters,o,a,a,Ut(l,"columnFooter"),dF,1,u,"y2",c-a,1,a,b)),i.rowtitle&&(v=Ut(n.titleAnchor,iu),x=Ut(l,"rowTitle"),x=v===Cn?p+x:f-x,b=Ut(n.titleBand,iu,.5),gF(t,i.rowtitle,x,0,w,b)),i.coltitle&&(v=Ut(n.titleAnchor,nu),x=Ut(l,"columnTitle"),x=v===Cn?m+x:g-x,b=Ut(n.titleBand,nu,.5),gF(t,i.coltitle,x,1,w,b))}function D71(t,e){return e==="x1"?t.x||0:e==="y1"?t.y||0:e==="x2"?(t.x||0)+(t.width||0):e==="y2"?(t.y||0)+(t.height||0):void 0}function O71(t,e){return t.bounds[e]}function oc(t,e,n,i,o,u,l,a,s,c,f,g,p,m){var v=n.length,b=0,x=0,w,S,A,C,k,M,T,D,I;if(!v)return b;for(w=f;w<v;w+=g)n[w]&&(b=l(b,s(n[w],c)));if(!e.length)return b;for(e.length>o&&(t.warn("Grid headers exceed limit: "+o),e=e.slice(0,o)),b+=u,S=0,C=e.length;S<C;++S)t.dirty(e[S]),e[S].mark.bounds.clear();for(w=f,S=0,C=e.length;S<C;++S,w+=g){for(M=e[S],k=M.mark.bounds,A=w;A>=0&&(T=n[A])==null;A-=p);a?(D=m==null?T.x:Math.round(T.bounds.x1+m*T.bounds.width()),I=b):(D=b,I=m==null?T.y:Math.round(T.bounds.y1+m*T.bounds.height())),k.union(M.bounds.translate(D-(M.x||0),I-(M.y||0))),M.x=D,M.y=I,t.dirty(M),x=l(x,k[c])}return x}function gF(t,e,n,i,o,u){if(e){t.dirty(e);var l=n,a=n;i?l=Math.round(o.x1+u*o.width()):a=Math.round(o.y1+u*o.height()),e.bounds.translate(l-(e.x||0),a-(e.y||0)),e.mark.bounds.clear().union(e.bounds),e.x=l,e.y=a,t.dirty(e)}}function F71(t,e){const n=t[e]||{};return(i,o)=>n[i]!=null?n[i]:t[i]!=null?t[i]:o}function z71(t,e){let n=-1/0;return t.forEach(i=>{i.offset!=null&&(n=Math.max(n,i.offset))}),n>-1/0?n:e}function L71(t,e,n,i,o,u,l){const a=F71(n,e),s=z71(t,a("offset",0)),c=a("anchor",MA),f=c===Cn?1:c===Hx?.5:0,g={align:Gx,bounds:a("bounds",FA),columns:a("direction")==="vertical"?1:t.length,padding:a("margin",8),center:a("center"),nodirty:!0};switch(e){case A3:g.anchor={x:Math.floor(i.x1)-s,column:Cn,y:f*(l||i.height()+2*i.y1),row:c};break;case C3:g.anchor={x:Math.ceil(i.x2)+s,y:f*(l||i.height()+2*i.y1),row:c};break;case Sl:g.anchor={y:Math.floor(o.y1)-s,row:Cn,x:f*(u||o.width()+2*o.x1),column:c};break;case wu:g.anchor={y:Math.ceil(o.y2)+s,x:f*(u||o.width()+2*o.x1),column:c};break;case d71:g.anchor={x:s,y:s};break;case f71:g.anchor={x:u-s,y:s,column:Cn};break;case g71:g.anchor={x:s,y:l-s,row:Cn};break;case h71:g.anchor={x:u-s,y:l-s,column:Cn,row:Cn};break}return g}function j71(t,e){var n=e.items[0],i=n.datum,o=n.orient,u=n.bounds,l=n.x,a=n.y,s,c;return n._bounds?n._bounds.clear().union(u):n._bounds=u.clone(),u.clear(),I71(t,n,n.items[0].items[0]),u=P71(n,u),s=2*n.padding,c=2*n.padding,u.empty()||(s=Math.ceil(u.width()+s),c=Math.ceil(u.height()+c)),i.type===x71&&B71(n.items[0].items[0].items[0].items),o!==OA&&(n.x=l=0,n.y=a=0),n.width=s,n.height=c,l4(u.set(l,a,l+s,a+c),n),n.mark.bounds.clear().union(u),n}function P71(t,e){return t.items.forEach(n=>e.union(n.bounds)),e.x1=t.padding,e.y1=t.padding,e}function I71(t,e,n){var i=e.padding,o=i-n.x,u=i-n.y;if(!e.datum.title)(o||u)&&L9(t,n,o,u);else{var l=e.items[1].items[0],a=l.anchor,s=e.titlePadding||0,c=i-l.x,f=i-l.y;switch(l.orient){case A3:o+=Math.ceil(l.bounds.width())+s;break;case C3:case wu:break;default:u+=l.bounds.height()+s}switch((o||u)&&L9(t,n,o,u),l.orient){case A3:f+=k5(e,n,l,a,1,1);break;case C3:c+=k5(e,n,l,Cn,0,0)+s,f+=k5(e,n,l,a,1,1);break;case wu:c+=k5(e,n,l,a,0,0),f+=k5(e,n,l,Cn,-1,0,1)+s;break;default:c+=k5(e,n,l,a,0,0)}(c||f)&&L9(t,l,c,f),(c=Math.round(l.bounds.x1-i))<0&&(L9(t,n,-c,0),L9(t,l,-c,0))}}function k5(t,e,n,i,o,u,l){const a=t.datum.type!=="symbol",s=n.datum.vgrad,c=a&&(u||!s)&&!l?e.items[0]:e,f=c.bounds[o?"y2":"x2"]-t.padding,g=s&&u?f:0,p=s&&u?0:f,m=o<=0?0:vA(n);return Math.round(i===MA?g:i===Cn?p-m:.5*(f-m))}function L9(t,e,n,i){e.x+=n,e.y+=i,e.bounds.translate(n,i),e.mark.bounds.translate(n,i),t.dirty(e)}function B71(t){const e=t.reduce((n,i)=>(n[i.column]=Math.max(i.bounds.x2-i.x,n[i.column]||0),n),{});t.forEach(n=>{n.width=e[n.column],n.height=n.bounds.y2-n.y})}function U71(t,e,n,i,o){var u=e.items[0],l=u.frame,a=u.orient,s=u.anchor,c=u.offset,f=u.padding,g=u.items[0].items[0],p=u.items[1]&&u.items[1].items[0],m=a===A3||a===C3?i:n,v=0,b=0,x=0,w=0,S=0,A;if(l!==eh?a===A3?(v=o.y2,m=o.y1):a===C3?(v=o.y1,m=o.y2):(v=o.x1,m=o.x2):a===A3&&(v=i,m=0),A=s===MA?v:s===Cn?m:(v+m)/2,p&&p.text){switch(a){case Sl:case wu:S=g.bounds.height()+f;break;case A3:w=g.bounds.width()+f;break;case C3:w=-g.bounds.width()-f;break}ln.clear().union(p.bounds),ln.translate(w-(p.x||0),S-(p.y||0)),H5(p,"x",w)|H5(p,"y",S)&&(t.dirty(p),p.bounds.clear().union(ln),p.mark.bounds.clear().union(ln),t.dirty(p)),ln.clear().union(p.bounds)}else ln.clear();switch(ln.union(g.bounds),a){case Sl:b=A,x=o.y1-ln.height()-c;break;case A3:b=o.x1-ln.width()-c,x=A;break;case C3:b=o.x2+ln.width()+c,x=A;break;case wu:b=A,x=o.y2+c;break;default:b=u.x,x=u.y}return H5(u,"x",b)|H5(u,"y",x)&&(ln.translate(b,x),t.dirty(u),u.bounds.clear().union(ln),e.bounds.clear().union(ln),t.dirty(u)),u.bounds}function CW(t){i1.call(this,null,t)}b1(CW,i1,{transform(t,e){const n=e.dataflow;return t.mark.items.forEach(i=>{t.layout&&R71(n,i,t.layout),H71(n,i,t)}),q71(t.mark.group)?e.reflow():e}});function q71(t){return t&&t.mark.role!=="legend-entry"}function H71(t,e,n){var i=e.items,o=Math.max(0,e.width||0),u=Math.max(0,e.height||0),l=new fe().set(0,0,o,u),a=l.clone(),s=l.clone(),c=[],f,g,p,m,v,b;for(v=0,b=i.length;v<b;++v)switch(g=i[v],g.role){case NA:m=C71(g)?a:s,m.union(T71(t,g,o,u));break;case RA:f=g;break;case DA:c.push(j71(t,g));break;case y71:case v71:case dW:case fW:case gW:case hW:case pW:case mW:a.union(g.bounds),s.union(g.bounds);break;default:l.union(g.bounds)}if(c.length){const x={};c.forEach(w=>{p=w.orient||C3,p!==OA&&(x[p]||(x[p]=[])).push(w)});for(const w in x){const S=x[w];AW(t,S,L71(S,w,n.legends,a,s,o,u))}c.forEach(w=>{const S=w.bounds;if(S.equals(w._bounds)||(w.bounds=w._bounds,t.dirty(w),w.bounds=S,t.dirty(w)),n.autosize&&(n.autosize.type===yW||n.autosize.type===vW||n.autosize.type===bW))switch(w.orient){case A3:case C3:l.add(S.x1,0).add(S.x2,0);break;case Sl:case wu:l.add(0,S.y1).add(0,S.y2)}else l.union(S)})}l.union(a).union(s),f&&l.union(U71(t,f,o,u,l)),e.clip&&l.set(0,0,e.width||0,e.height||0),G71(t,e,l,n)}function G71(t,e,n,i){const o=i.autosize||{},u=o.type;if(t._autosize<1||!u)return;let l=t._width,a=t._height,s=Math.max(0,e.width||0),c=Math.max(0,Math.ceil(-n.x1)),f=Math.max(0,e.height||0),g=Math.max(0,Math.ceil(-n.y1));const p=Math.max(0,Math.ceil(n.x2-s)),m=Math.max(0,Math.ceil(n.y2-f));if(o.contains===b71){const v=t.padding();l-=v.left+v.right,a-=v.top+v.bottom}u===OA?(c=0,g=0,s=l,f=a):u===yW?(s=Math.max(0,l-c-p),f=Math.max(0,a-g-m)):u===vW?(s=Math.max(0,l-c-p),a=f+g+m):u===bW?(l=s+c+p,f=Math.max(0,a-g-m)):u===_71&&(l=s+c+p,a=f+g+m),t._resizeView(l,a,s,f,[c,g],o.resize)}const W71=Object.freeze(Object.defineProperty({__proto__:null,bound:xW,identifier:zA,mark:_W,overlap:wW,render:SW,viewlayout:CW},Symbol.toStringTag,{value:"Module"}));function kW(t){i1.call(this,null,t)}b1(kW,i1,{transform(t,e){if(this.value&&!t.modified())return e.StopPropagation;var n=e.dataflow.locale(),i=e.fork(e.NO_SOURCE|e.NO_FIELDS),o=this.value,u=t.scale,l=t.count==null?t.values?t.values.length:10:t.count,a=tA(u,l,t.minstep),s=t.format||eG(n,u,a,t.formatSpecifier,t.formatType,!!t.values),c=t.values?tG(u,t.values,a):eA(u,a);return o&&(i.rem=o),o=c.map((f,g)=>vt({index:g/(c.length-1||1),value:f,label:s(f)})),t.extra&&o.length&&o.push(vt({index:-1,extra:{value:o[0].value},label:""})),i.source=o,i.add=o,this.value=o,i}});function TW(t){i1.call(this,null,t)}function Y71(){return vt({})}function V71(t){const e=Jl().test(n=>n.exit);return e.lookup=n=>e.get(t(n)),e}b1(TW,i1,{transform(t,e){var n=e.dataflow,i=e.fork(e.NO_SOURCE|e.NO_FIELDS),o=t.item||Y71,u=t.key||z1,l=this.value;return r1(i.encode)&&(i.encode=null),l&&(t.modified("key")||e.modified(u))&&u1("DataJoin does not support modified key function or fields."),l||(e=e.addAll(),this.value=l=V71(u)),e.visit(e.ADD,a=>{const s=u(a);let c=l.get(s);c?c.exit?(l.empty--,i.add.push(c)):i.mod.push(c):(c=o(a),l.set(s,c),i.add.push(c)),c.datum=a,c.exit=!1}),e.visit(e.MOD,a=>{const s=u(a),c=l.get(s);c&&(c.datum=a,i.mod.push(c))}),e.visit(e.REM,a=>{const s=u(a),c=l.get(s);a===c.datum&&!c.exit&&(i.rem.push(c),c.exit=!0,++l.empty)}),e.changed(e.ADD_MOD)&&i.modifies("datum"),(e.clean()||t.clean&&l.empty>n.cleanThreshold)&&n.runAfter(l.clean),i}});function $W(t){i1.call(this,null,t)}b1($W,i1,{transform(t,e){var n=e.fork(e.ADD_REM),i=t.mod||!1,o=t.encoders,u=e.encode;if(r1(u))if(n.changed()||u.every(g=>o[g]))u=u[0],n.encode=null;else return e.StopPropagation;var l=u==="enter",a=o.update||I4,s=o.enter||I4,c=o.exit||I4,f=(u&&!l?o[u]:a)||I4;if(e.changed(e.ADD)&&(e.visit(e.ADD,g=>{s(g,t),a(g,t)}),n.modifies(s.output),n.modifies(a.output),f!==I4&&f!==a&&(e.visit(e.ADD,g=>{f(g,t)}),n.modifies(f.output))),e.changed(e.REM)&&c!==I4&&(e.visit(e.REM,g=>{c(g,t)}),n.modifies(c.output)),l||f!==I4){const g=e.MOD|(t.modified()?e.REFLOW:0);l?(e.visit(g,p=>{const m=s(p,t)||i;(f(p,t)||m)&&n.mod.push(p)}),n.mod.length&&n.modifies(s.output)):e.visit(g,p=>{(f(p,t)||i)&&n.mod.push(p)}),n.mod.length&&n.modifies(f.output)}return n.changed()?n:e.StopPropagation}});function MW(t){i1.call(this,[],t)}b1(MW,i1,{transform(t,e){if(this.value!=null&&!t.modified())return e.StopPropagation;var n=e.dataflow.locale(),i=e.fork(e.NO_SOURCE|e.NO_FIELDS),o=this.value,u=t.type||Pc,l=t.scale,a=+t.limit,s=tA(l,t.count==null?5:t.count,t.minstep),c=!!t.values||u===Pc,f=t.format||uG(n,l,s,u,t.formatSpecifier,t.formatType,c),g=t.values||oG(l,s),p,m,v,b,x;return o&&(i.rem=o),u===Pc?(a&&g.length>a?(e.dataflow.warn("Symbol legend count exceeds limit, filtering items."),o=g.slice(0,a-1),x=!0):o=g,Q1(v=t.size)?(!t.values&&l(o[0])===0&&(o=o.slice(1)),b=o.reduce((w,S)=>Math.max(w,v(S,t)),0)):v=bn(b=v||8),o=o.map((w,S)=>vt({index:S,label:f(w,S,o),value:w,offset:b,size:v(w,t)})),x&&(x=g[o.length],o.push(vt({index:o.length,label:`…${g.length-o.length} entries`,value:x,offset:b,size:v(x,t)})))):u===x91?(p=l.domain(),m=QH(l,p[0],st(p)),g.length<3&&!t.values&&p[0]!==st(p)&&(g=[p[0],st(p)]),o=g.map((w,S)=>vt({index:S,label:f(w,S,g),value:w,perc:m(w)}))):(v=g.length-1,m=N91(l),o=g.map((w,S)=>vt({index:S,label:f(w,S,g),value:w,perc:S?m(w):0,perc2:S===v?1:m(g[S+1])}))),i.source=o,i.add=o,this.value=o,i}});const X71=t=>t.source.x,K71=t=>t.source.y,Q71=t=>t.target.x,Z71=t=>t.target.y;function LA(t){i1.call(this,{},t)}LA.Definition={type:"LinkPath",metadata:{modifies:!0},params:[{name:"sourceX",type:"field",default:"source.x"},{name:"sourceY",type:"field",default:"source.y"},{name:"targetX",type:"field",default:"target.x"},{name:"targetY",type:"field",default:"target.y"},{name:"orient",type:"enum",default:"vertical",values:["horizontal","vertical","radial"]},{name:"shape",type:"enum",default:"line",values:["line","arc","curve","diagonal","orthogonal"]},{name:"require",type:"signal"},{name:"as",type:"string",default:"path"}]};b1(LA,i1,{transform(t,e){var n=t.sourceX||X71,i=t.sourceY||K71,o=t.targetX||Q71,u=t.targetY||Z71,l=t.as||"path",a=t.orient||"vertical",s=t.shape||"line",c=hF.get(s+"-"+a)||hF.get(s);return c||u1("LinkPath unsupported type: "+t.shape+(t.orient?"-"+t.orient:"")),e.visit(e.SOURCE,f=>{f[l]=c(n(f),i(f),o(f),u(f))}),e.reflow(t.modified()).modifies(l)}});const NW=(t,e,n,i)=>"M"+t+","+e+"L"+n+","+i,J71=(t,e,n,i)=>NW(e*Math.cos(t),e*Math.sin(t),i*Math.cos(n),i*Math.sin(n)),RW=(t,e,n,i)=>{var o=n-t,u=i-e,l=Math.hypot(o,u)/2,a=180*Math.atan2(u,o)/Math.PI;return"M"+t+","+e+"A"+l+","+l+" "+a+" 0 1 "+n+","+i},ts1=(t,e,n,i)=>RW(e*Math.cos(t),e*Math.sin(t),i*Math.cos(n),i*Math.sin(n)),DW=(t,e,n,i)=>{const o=n-t,u=i-e,l=.2*(o+u),a=.2*(u-o);return"M"+t+","+e+"C"+(t+l)+","+(e+a)+" "+(n+a)+","+(i-l)+" "+n+","+i},es1=(t,e,n,i)=>DW(e*Math.cos(t),e*Math.sin(t),i*Math.cos(n),i*Math.sin(n)),ns1=(t,e,n,i)=>"M"+t+","+e+"V"+i+"H"+n,is1=(t,e,n,i)=>"M"+t+","+e+"H"+n+"V"+i,os1=(t,e,n,i)=>{const o=Math.cos(t),u=Math.sin(t),l=Math.cos(n),a=Math.sin(n),s=Math.abs(n-t)>Math.PI?n<=t:n>t;return"M"+e*o+","+e*u+"A"+e+","+e+" 0 0,"+(s?1:0)+" "+e*l+","+e*a+"L"+i*l+","+i*a},us1=(t,e,n,i)=>{const o=(t+n)/2;return"M"+t+","+e+"C"+o+","+e+" "+o+","+i+" "+n+","+i},ls1=(t,e,n,i)=>{const o=(e+i)/2;return"M"+t+","+e+"C"+t+","+o+" "+n+","+o+" "+n+","+i},as1=(t,e,n,i)=>{const o=Math.cos(t),u=Math.sin(t),l=Math.cos(n),a=Math.sin(n),s=(e+i)/2;return"M"+e*o+","+e*u+"C"+s*o+","+s*u+" "+s*l+","+s*a+" "+i*l+","+i*a},hF=Jl({line:NW,"line-radial":J71,arc:RW,"arc-radial":ts1,curve:DW,"curve-radial":es1,"orthogonal-horizontal":ns1,"orthogonal-vertical":is1,"orthogonal-radial":os1,"diagonal-horizontal":us1,"diagonal-vertical":ls1,"diagonal-radial":as1});function jA(t){i1.call(this,null,t)}jA.Definition={type:"Pie",metadata:{modifies:!0},params:[{name:"field",type:"field"},{name:"startAngle",type:"number",default:0},{name:"endAngle",type:"number",default:6.283185307179586},{name:"sort",type:"boolean",default:!1},{name:"as",type:"string",array:!0,length:2,default:["startAngle","endAngle"]}]};b1(jA,i1,{transform(t,e){var n=t.as||["startAngle","endAngle"],i=n[0],o=n[1],u=t.field||Xl,l=t.startAngle||0,a=t.endAngle!=null?t.endAngle:2*Math.PI,s=e.source,c=s.map(u),f=c.length,g=l,p=(a-l)/WB(c),m=b2(f),v,b,x;for(t.sort&&m.sort((w,S)=>c[w]-c[S]),v=0;v<f;++v)x=c[m[v]],b=s[m[v]],b[i]=g,b[o]=g+=x*p;return this.value=c,e.reflow(t.modified()).modifies(n)}});const rs1=5;function ss1(t){const e=t.type;return!t.bins&&(e===vl||e===B8||e===U8)}function OW(t){return QS(t)&&t!==yi}const cs1=D3(["set","modified","clear","type","scheme","schemeExtent","schemeCount","domain","domainMin","domainMid","domainMax","domainRaw","domainImplicit","nice","zero","bins","range","rangeStep","round","reverse","interpolate","interpolateGamma"]);function FW(t){i1.call(this,null,t),this.modified(!0)}b1(FW,i1,{transform(t,e){var n=e.dataflow,i=this.value,o=ds1(t);(!i||o!==i.type)&&(this.value=i=mt(o)());for(o in t)if(!cs1[o]){if(o==="padding"&&OW(i.type))continue;Q1(i[o])?i[o](t[o]):n.warn("Unsupported scale property: "+o)}return ys1(i,t,ms1(i,t,gs1(i,t,n))),e.fork(e.NO_SOURCE|e.NO_FIELDS)}});function ds1(t){var e=t.type,n="",i;return e===yi?yi+"-"+vl:(fs1(t)&&(i=t.rawDomain?t.rawDomain.length:t.domain?t.domain.length+ +(t.domainMid!=null):0,n=i===2?yi+"-":i===3?aa+"-":""),(n+e||vl).toLowerCase())}function fs1(t){const e=t.type;return QS(e)&&e!==V0&&e!==X0&&(t.scheme||t.range&&t.range.length&&t.range.every(w1))}function gs1(t,e,n){const i=hs1(t,e.domainRaw,n);if(i>-1)return i;var o=e.domain,u=t.type,l=e.zero||e.zero===void 0&&ss1(t),a,s;if(!o)return 0;if((l||e.domainMin!=null||e.domainMax!=null||e.domainMid!=null)&&(a=(o=o.slice()).length-1||1,l&&(o[0]>0&&(o[0]=0),o[a]<0&&(o[a]=0)),e.domainMin!=null&&(o[0]=e.domainMin),e.domainMax!=null&&(o[a]=e.domainMax),e.domainMid!=null)){s=e.domainMid;const c=s>o[a]?a+1:s<o[0]?0:a;c!==a&&n.warn("Scale domainMid exceeds domain min or max.",s),o.splice(c,0,s)}return OW(u)&&e.padding&&o[0]!==st(o)&&(o=ps1(u,o,e.range,e.padding,e.exponent,e.constant)),t.domain(zW(u,o,n)),u===YS&&t.unknown(e.domainImplicit?Ax:void 0),e.nice&&t.nice&&t.nice(e.nice!==!0&&tA(t,e.nice)||null),o.length}function hs1(t,e,n){return e?(t.domain(zW(t.type,e,n)),e.length):-1}function ps1(t,e,n,i,o,u){var l=Math.abs(st(n)-n[0]),a=l/(l-2*i),s=t===Qo?fE(e,null,a):t===U8?vd(e,null,a,.5):t===B8?vd(e,null,a,o||1):t===Ig?gE(e,null,a,u||1):dE(e,null,a);return e=e.slice(),e[0]=s[0],e[e.length-1]=s[1],e}function zW(t,e,n){if(WH(t)){var i=Math.abs(e.reduce((o,u)=>o+(u<0?-1:u>0?1:0),0));i!==e.length&&n.warn("Log scale domain includes zero: "+y1(e))}return e}function ms1(t,e,n){let i=e.bins;if(i&&!r1(i)){const o=t.domain(),u=o[0],l=st(o),a=i.step;let s=i.start==null?u:i.start,c=i.stop==null?l:i.stop;a||u1("Scale bins parameter missing step property."),s<u&&(s=a*Math.ceil(u/a)),c>l&&(c=a*Math.floor(l/a)),i=b2(s,c+a/2,a)}return i?t.bins=i:t.bins&&delete t.bins,t.type===VS&&(i?!e.domain&&!e.domainRaw&&(t.domain(i),n=i.length):t.bins=t.domain()),n}function ys1(t,e,n){var i=t.type,o=e.round||!1,u=e.range;if(e.rangeStep!=null)u=vs1(i,e,n);else if(e.scheme&&(u=bs1(i,e,n),Q1(u))){if(t.interpolator)return t.interpolator(u);u1(`Scale type ${i} does not support interpolating color schemes.`)}if(u&&YH(i))return t.interpolator(qg(Wx(u,e.reverse),e.interpolate,e.interpolateGamma));u&&e.interpolate&&t.interpolate?t.interpolate(ZS(e.interpolate,e.interpolateGamma)):Q1(t.round)?t.round(o):Q1(t.rangeRound)&&t.interpolate(o?P8:u4),u&&t.range(Wx(u,e.reverse))}function vs1(t,e,n){t!==IH&&t!==Nx&&u1("Only band and point scales support rangeStep.");var i=(e.paddingOuter!=null?e.paddingOuter:e.padding)||0,o=t===Nx?1:(e.paddingInner!=null?e.paddingInner:e.padding)||0;return[0,e.rangeStep*WS(n,o,i)]}function bs1(t,e,n){var i=e.schemeExtent,o,u;return r1(e.scheme)?u=qg(e.scheme,e.interpolate,e.interpolateGamma):(o=e.scheme.toLowerCase(),u=JS(o),u||u1(`Unrecognized scheme name: ${e.scheme}`)),n=t===Ug?n+1:t===VS?n-1:t===bl||t===Bg?+e.schemeCount||rs1:n,YH(t)?pF(u,i,e.reverse):Q1(u)?KH(pF(u,i),n):t===YS?u:u.slice(0,n)}function pF(t,e,n){return Q1(t)&&(e||n)?XH(t,Wx(e||[0,1],n)):t}function Wx(t,e){return e?t.slice().reverse():t}function LW(t){i1.call(this,null,t)}b1(LW,i1,{transform(t,e){const n=t.modified("sort")||e.changed(e.ADD)||e.modified(t.sort.fields)||e.modified("datum");return n&&e.source.sort(b6(t.sort)),this.modified(n),e}});const mF="zero",jW="center",PW="normalize",IW=["y0","y1"];function PA(t){i1.call(this,null,t)}PA.Definition={type:"Stack",metadata:{modifies:!0},params:[{name:"field",type:"field"},{name:"groupby",type:"field",array:!0},{name:"sort",type:"compare"},{name:"offset",type:"enum",default:mF,values:[mF,jW,PW]},{name:"as",type:"string",array:!0,length:2,default:IW}]};b1(PA,i1,{transform(t,e){var n=t.as||IW,i=n[0],o=n[1],u=b6(t.sort),l=t.field||Xl,a=t.offset===jW?xs1:t.offset===PW?_s1:ws1,s,c,f,g;for(s=Es1(e.source,t.groupby,u,l),c=0,f=s.length,g=s.max;c<f;++c)a(s[c],g,l,i,o);return e.reflow(t.modified()).modifies(n)}});function xs1(t,e,n,i,o){for(var u=(e-t.sum)/2,l=t.length,a=0,s;a<l;++a)s=t[a],s[i]=u,s[o]=u+=Math.abs(n(s))}function _s1(t,e,n,i,o){for(var u=1/t.sum,l=0,a=t.length,s=0,c=0,f;s<a;++s)f=t[s],f[i]=l,f[o]=l=u*(c+=Math.abs(n(f)))}function ws1(t,e,n,i,o){for(var u=0,l=0,a=t.length,s=0,c,f;s<a;++s)f=t[s],c=+n(f),c<0?(f[i]=l,f[o]=l+=c):(f[i]=u,f[o]=u+=c)}function Es1(t,e,n,i){var o=[],u=b=>b(f),l,a,s,c,f,g,p,m,v;if(e==null)o.push(t.slice());else for(l={},a=0,s=t.length;a<s;++a)f=t[a],g=e.map(u),p=l[g],p||(l[g]=p=[],o.push(p)),p.push(f);for(g=0,v=0,c=o.length;g<c;++g){for(p=o[g],a=0,m=0,s=p.length;a<s;++a)m+=Math.abs(i(p[a]));p.sum=m,m>v&&(v=m),n&&p.sort(n)}return o.max=v,o}const Ss1=Object.freeze(Object.defineProperty({__proto__:null,axisticks:kW,datajoin:TW,encode:$W,legendentries:MW,linkpath:LA,pie:jA,scale:FW,sortitems:LW,stack:PA},Symbol.toStringTag,{value:"Module"}));var P1=1e-6,Kd=1e-12,nt=Math.PI,te=nt/2,Qd=nt/4,Fn=nt*2,oe=180/nt,tt=nt/180,rt=Math.abs,sa=Math.atan,a3=Math.atan2,I1=Math.cos,uc=Math.ceil,BW=Math.exp,Yx=Math.hypot,Zd=Math.log,Mv=Math.pow,L1=Math.sin,X2=Math.sign||function(t){return t>0?1:t<0?-1:0},zn=Math.sqrt,IA=Math.tan;function UW(t){return t>1?0:t<-1?nt:Math.acos(t)}function e2(t){return t>1?te:t<-1?-te:Math.asin(t)}function Ge(){}function Jd(t,e){t&&vF.hasOwnProperty(t.type)&&vF[t.type](t,e)}var yF={Feature:function(t,e){Jd(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,i=-1,o=n.length;++i<o;)Jd(n[i].geometry,e)}},vF={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,i=-1,o=n.length;++i<o;)t=n[i],e.point(t[0],t[1],t[2])},LineString:function(t,e){Vx(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,i=-1,o=n.length;++i<o;)Vx(n[i],e,0)},Polygon:function(t,e){bF(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,i=-1,o=n.length;++i<o;)bF(n[i],e)},GeometryCollection:function(t,e){for(var n=t.geometries,i=-1,o=n.length;++i<o;)Jd(n[i],e)}};function Vx(t,e,n){var i=-1,o=t.length-n,u;for(e.lineStart();++i<o;)u=t[i],e.point(u[0],u[1],u[2]);e.lineEnd()}function bF(t,e){var n=-1,i=t.length;for(e.polygonStart();++n<i;)Vx(t[n],e,1);e.polygonEnd()}function Co(t,e){t&&yF.hasOwnProperty(t.type)?yF[t.type](t,e):Jd(t,e)}var tf=new Dn,ef=new Dn,qW,HW,Xx,Kx,Qx,Ai={point:Ge,lineStart:Ge,lineEnd:Ge,polygonStart:function(){tf=new Dn,Ai.lineStart=As1,Ai.lineEnd=Cs1},polygonEnd:function(){var t=+tf;ef.add(t<0?Fn+t:t),this.lineStart=this.lineEnd=this.point=Ge},sphere:function(){ef.add(Fn)}};function As1(){Ai.point=ks1}function Cs1(){GW(qW,HW)}function ks1(t,e){Ai.point=GW,qW=t,HW=e,t*=tt,e*=tt,Xx=t,Kx=I1(e=e/2+Qd),Qx=L1(e)}function GW(t,e){t*=tt,e*=tt,e=e/2+Qd;var n=t-Xx,i=n>=0?1:-1,o=i*n,u=I1(e),l=L1(e),a=Qx*l,s=Kx*u+a*I1(o),c=a*i*L1(o);tf.add(a3(c,s)),Xx=t,Kx=u,Qx=l}function Ts1(t){return ef=new Dn,Co(t,Ai),ef*2}function nf(t){return[a3(t[1],t[0]),e2(t[2])]}function Q0(t){var e=t[0],n=t[1],i=I1(n);return[i*I1(e),i*L1(e),L1(n)]}function lc(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function Al(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function Nv(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function ac(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function of(t){var e=zn(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}var Wt,Yn,Zt,y2,x0,WW,YW,Z5,$r,W4,Zo,Eo={point:Zx,lineStart:xF,lineEnd:_F,polygonStart:function(){Eo.point=XW,Eo.lineStart=$s1,Eo.lineEnd=Ms1,$r=new Dn,Ai.polygonStart()},polygonEnd:function(){Ai.polygonEnd(),Eo.point=Zx,Eo.lineStart=xF,Eo.lineEnd=_F,tf<0?(Wt=-(Zt=180),Yn=-(y2=90)):$r>P1?y2=90:$r<-P1&&(Yn=-90),Zo[0]=Wt,Zo[1]=Zt},sphere:function(){Wt=-(Zt=180),Yn=-(y2=90)}};function Zx(t,e){W4.push(Zo=[Wt=t,Zt=t]),e<Yn&&(Yn=e),e>y2&&(y2=e)}function VW(t,e){var n=Q0([t*tt,e*tt]);if(Z5){var i=Al(Z5,n),o=[i[1],-i[0],0],u=Al(o,i);of(u),u=nf(u);var l=t-x0,a=l>0?1:-1,s=u[0]*oe*a,c,f=rt(l)>180;f^(a*x0<s&&s<a*t)?(c=u[1]*oe,c>y2&&(y2=c)):(s=(s+360)%360-180,f^(a*x0<s&&s<a*t)?(c=-u[1]*oe,c<Yn&&(Yn=c)):(e<Yn&&(Yn=e),e>y2&&(y2=e))),f?t<x0?m2(Wt,t)>m2(Wt,Zt)&&(Zt=t):m2(t,Zt)>m2(Wt,Zt)&&(Wt=t):Zt>=Wt?(t<Wt&&(Wt=t),t>Zt&&(Zt=t)):t>x0?m2(Wt,t)>m2(Wt,Zt)&&(Zt=t):m2(t,Zt)>m2(Wt,Zt)&&(Wt=t)}else W4.push(Zo=[Wt=t,Zt=t]);e<Yn&&(Yn=e),e>y2&&(y2=e),Z5=n,x0=t}function xF(){Eo.point=VW}function _F(){Zo[0]=Wt,Zo[1]=Zt,Eo.point=Zx,Z5=null}function XW(t,e){if(Z5){var n=t-x0;$r.add(rt(n)>180?n+(n>0?360:-360):n)}else WW=t,YW=e;Ai.point(t,e),VW(t,e)}function $s1(){Ai.lineStart()}function Ms1(){XW(WW,YW),Ai.lineEnd(),rt($r)>P1&&(Wt=-(Zt=180)),Zo[0]=Wt,Zo[1]=Zt,Z5=null}function m2(t,e){return(e-=t)<0?e+360:e}function Ns1(t,e){return t[0]-e[0]}function wF(t,e){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}function Rs1(t){var e,n,i,o,u,l,a;if(y2=Zt=-(Wt=Yn=1/0),W4=[],Co(t,Eo),n=W4.length){for(W4.sort(Ns1),e=1,i=W4[0],u=[i];e<n;++e)o=W4[e],wF(i,o[0])||wF(i,o[1])?(m2(i[0],o[1])>m2(i[0],i[1])&&(i[1]=o[1]),m2(o[0],i[1])>m2(i[0],i[1])&&(i[0]=o[0])):u.push(i=o);for(l=-1/0,n=u.length-1,e=0,i=u[n];e<=n;i=o,++e)o=u[e],(a=m2(i[1],o[0]))>l&&(l=a,Wt=o[0],Zt=i[1])}return W4=Zo=null,Wt===1/0||Yn===1/0?[[NaN,NaN],[NaN,NaN]]:[[Wt,Yn],[Zt,y2]]}var rr,uf,lf,af,rf,sf,cf,df,Jx,t_,e_,KW,QW,kn,Tn,$n,k3={sphere:Ge,point:BA,lineStart:EF,lineEnd:SF,polygonStart:function(){k3.lineStart=Fs1,k3.lineEnd=zs1},polygonEnd:function(){k3.lineStart=EF,k3.lineEnd=SF}};function BA(t,e){t*=tt,e*=tt;var n=I1(e);t7(n*I1(t),n*L1(t),L1(e))}function t7(t,e,n){++rr,lf+=(t-lf)/rr,af+=(e-af)/rr,rf+=(n-rf)/rr}function EF(){k3.point=Ds1}function Ds1(t,e){t*=tt,e*=tt;var n=I1(e);kn=n*I1(t),Tn=n*L1(t),$n=L1(e),k3.point=Os1,t7(kn,Tn,$n)}function Os1(t,e){t*=tt,e*=tt;var n=I1(e),i=n*I1(t),o=n*L1(t),u=L1(e),l=a3(zn((l=Tn*u-$n*o)*l+(l=$n*i-kn*u)*l+(l=kn*o-Tn*i)*l),kn*i+Tn*o+$n*u);uf+=l,sf+=l*(kn+(kn=i)),cf+=l*(Tn+(Tn=o)),df+=l*($n+($n=u)),t7(kn,Tn,$n)}function SF(){k3.point=BA}function Fs1(){k3.point=Ls1}function zs1(){ZW(KW,QW),k3.point=BA}function Ls1(t,e){KW=t,QW=e,t*=tt,e*=tt,k3.point=ZW;var n=I1(e);kn=n*I1(t),Tn=n*L1(t),$n=L1(e),t7(kn,Tn,$n)}function ZW(t,e){t*=tt,e*=tt;var n=I1(e),i=n*I1(t),o=n*L1(t),u=L1(e),l=Tn*u-$n*o,a=$n*i-kn*u,s=kn*o-Tn*i,c=Yx(l,a,s),f=e2(c),g=c&&-f/c;Jx.add(g*l),t_.add(g*a),e_.add(g*s),uf+=f,sf+=f*(kn+(kn=i)),cf+=f*(Tn+(Tn=o)),df+=f*($n+($n=u)),t7(kn,Tn,$n)}function js1(t){rr=uf=lf=af=rf=sf=cf=df=0,Jx=new Dn,t_=new Dn,e_=new Dn,Co(t,k3);var e=+Jx,n=+t_,i=+e_,o=Yx(e,n,i);return o<Kd&&(e=sf,n=cf,i=df,uf<P1&&(e=lf,n=af,i=rf),o=Yx(e,n,i),o<Kd)?[NaN,NaN]:[a3(n,e)*oe,e2(i/o)*oe]}function n_(t,e){function n(i,o){return i=t(i,o),e(i[0],i[1])}return t.invert&&e.invert&&(n.invert=function(i,o){return i=e.invert(i,o),i&&t.invert(i[0],i[1])}),n}function i_(t,e){return rt(t)>nt&&(t-=Math.round(t/Fn)*Fn),[t,e]}i_.invert=i_;function JW(t,e,n){return(t%=Fn)?e||n?n_(CF(t),kF(e,n)):CF(t):e||n?kF(e,n):i_}function AF(t){return function(e,n){return e+=t,rt(e)>nt&&(e-=Math.round(e/Fn)*Fn),[e,n]}}function CF(t){var e=AF(t);return e.invert=AF(-t),e}function kF(t,e){var n=I1(t),i=L1(t),o=I1(e),u=L1(e);function l(a,s){var c=I1(s),f=I1(a)*c,g=L1(a)*c,p=L1(s),m=p*n+f*i;return[a3(g*o-m*u,f*n-p*i),e2(m*o+g*u)]}return l.invert=function(a,s){var c=I1(s),f=I1(a)*c,g=L1(a)*c,p=L1(s),m=p*o-g*u;return[a3(g*o+p*u,f*n+m*i),e2(m*n-f*i)]},l}function Ps1(t){t=JW(t[0]*tt,t[1]*tt,t.length>2?t[2]*tt:0);function e(n){return n=t(n[0]*tt,n[1]*tt),n[0]*=oe,n[1]*=oe,n}return e.invert=function(n){return n=t.invert(n[0]*tt,n[1]*tt),n[0]*=oe,n[1]*=oe,n},e}function Is1(t,e,n,i,o,u){if(n){var l=I1(e),a=L1(e),s=i*n;o==null?(o=e+i*Fn,u=e-s/2):(o=TF(l,o),u=TF(l,u),(i>0?o<u:o>u)&&(o+=i*Fn));for(var c,f=o;i>0?f>u:f<u;f-=s)c=nf([l,-a*I1(f),-a*L1(f)]),t.point(c[0],c[1])}}function TF(t,e){e=Q0(e),e[0]-=t,of(e);var n=UW(-e[1]);return((-e[2]<0?-n:n)+Fn-P1)%Fn}function tY(){var t=[],e;return{point:function(n,i,o){e.push([n,i,o])},lineStart:function(){t.push(e=[])},lineEnd:Ge,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}}function Vc(t,e){return rt(t[0]-e[0])<P1&&rt(t[1]-e[1])<P1}function rc(t,e,n,i){this.x=t,this.z=e,this.o=n,this.e=i,this.v=!1,this.n=this.p=null}function eY(t,e,n,i,o){var u=[],l=[],a,s;if(t.forEach(function(v){if(!((b=v.length-1)<=0)){var b,x=v[0],w=v[b],S;if(Vc(x,w)){if(!x[2]&&!w[2]){for(o.lineStart(),a=0;a<b;++a)o.point((x=v[a])[0],x[1]);o.lineEnd();return}w[0]+=2*P1}u.push(S=new rc(x,v,null,!0)),l.push(S.o=new rc(x,null,S,!1)),u.push(S=new rc(w,v,null,!1)),l.push(S.o=new rc(w,null,S,!0))}}),!!u.length){for(l.sort(e),$F(u),$F(l),a=0,s=l.length;a<s;++a)l[a].e=n=!n;for(var c=u[0],f,g;;){for(var p=c,m=!0;p.v;)if((p=p.n)===c)return;f=p.z,o.lineStart();do{if(p.v=p.o.v=!0,p.e){if(m)for(a=0,s=f.length;a<s;++a)o.point((g=f[a])[0],g[1]);else i(p.x,p.n.x,1,o);p=p.n}else{if(m)for(f=p.p.z,a=f.length-1;a>=0;--a)o.point((g=f[a])[0],g[1]);else i(p.x,p.p.x,-1,o);p=p.p}p=p.o,f=p.z,m=!m}while(!p.v);o.lineEnd()}}}function $F(t){if(e=t.length){for(var e,n=0,i=t[0],o;++n<e;)i.n=o=t[n],o.p=i,i=o;i.n=o=t[0],o.p=i}}function Rv(t){return rt(t[0])<=nt?t[0]:X2(t[0])*((rt(t[0])+nt)%Fn-nt)}function Bs1(t,e){var n=Rv(e),i=e[1],o=L1(i),u=[L1(n),-I1(n),0],l=0,a=0,s=new Dn;o===1?i=te+P1:o===-1&&(i=-te-P1);for(var c=0,f=t.length;c<f;++c)if(p=(g=t[c]).length)for(var g,p,m=g[p-1],v=Rv(m),b=m[1]/2+Qd,x=L1(b),w=I1(b),S=0;S<p;++S,v=C,x=M,w=T,m=A){var A=g[S],C=Rv(A),k=A[1]/2+Qd,M=L1(k),T=I1(k),D=C-v,I=D>=0?1:-1,U=I*D,B=U>nt,V=x*M;if(s.add(a3(V*I*L1(U),w*T+V*I1(U))),l+=B?D+I*Fn:D,B^v>=n^C>=n){var W=Al(Q0(m),Q0(A));of(W);var O=Al(u,W);of(O);var j=(B^D>=0?-1:1)*e2(O[2]);(i>j||i===j&&(W[0]||W[1]))&&(a+=B^D>=0?1:-1)}}return(l<-P1||l<P1&&s<-Kd)^a&1}function nY(t,e,n,i){return function(o){var u=e(o),l=tY(),a=e(l),s=!1,c,f,g,p={point:m,lineStart:b,lineEnd:x,polygonStart:function(){p.point=w,p.lineStart=S,p.lineEnd=A,f=[],c=[]},polygonEnd:function(){p.point=m,p.lineStart=b,p.lineEnd=x,f=GB(f);var C=Bs1(c,i);f.length?(s||(o.polygonStart(),s=!0),eY(f,qs1,C,n,o)):C&&(s||(o.polygonStart(),s=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),s&&(o.polygonEnd(),s=!1),f=c=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function m(C,k){t(C,k)&&o.point(C,k)}function v(C,k){u.point(C,k)}function b(){p.point=v,u.lineStart()}function x(){p.point=m,u.lineEnd()}function w(C,k){g.push([C,k]),a.point(C,k)}function S(){a.lineStart(),g=[]}function A(){w(g[0][0],g[0][1]),a.lineEnd();var C=a.clean(),k=l.result(),M,T=k.length,D,I,U;if(g.pop(),c.push(g),g=null,!!T){if(C&1){if(I=k[0],(D=I.length-1)>0){for(s||(o.polygonStart(),s=!0),o.lineStart(),M=0;M<D;++M)o.point((U=I[M])[0],U[1]);o.lineEnd()}return}T>1&&C&2&&k.push(k.pop().concat(k.shift())),f.push(k.filter(Us1))}}return p}}function Us1(t){return t.length>1}function qs1(t,e){return((t=t.x)[0]<0?t[1]-te-P1:te-t[1])-((e=e.x)[0]<0?e[1]-te-P1:te-e[1])}const MF=nY(function(){return!0},Hs1,Ws1,[-nt,-te]);function Hs1(t){var e=NaN,n=NaN,i=NaN,o;return{lineStart:function(){t.lineStart(),o=1},point:function(u,l){var a=u>0?nt:-nt,s=rt(u-e);rt(s-nt)<P1?(t.point(e,n=(n+l)/2>0?te:-te),t.point(i,n),t.lineEnd(),t.lineStart(),t.point(a,n),t.point(u,n),o=0):i!==a&&s>=nt&&(rt(e-i)<P1&&(e-=i*P1),rt(u-a)<P1&&(u-=a*P1),n=Gs1(e,n,u,l),t.point(i,n),t.lineEnd(),t.lineStart(),t.point(a,n),o=0),t.point(e=u,n=l),i=a},lineEnd:function(){t.lineEnd(),e=n=NaN},clean:function(){return 2-o}}}function Gs1(t,e,n,i){var o,u,l=L1(t-n);return rt(l)>P1?sa((L1(e)*(u=I1(i))*L1(n)-L1(i)*(o=I1(e))*L1(t))/(o*u*l)):(e+i)/2}function Ws1(t,e,n,i){var o;if(t==null)o=n*te,i.point(-nt,o),i.point(0,o),i.point(nt,o),i.point(nt,0),i.point(nt,-o),i.point(0,-o),i.point(-nt,-o),i.point(-nt,0),i.point(-nt,o);else if(rt(t[0]-e[0])>P1){var u=t[0]<e[0]?nt:-nt;o=n*u/2,i.point(-u,o),i.point(0,o),i.point(u,o)}else i.point(e[0],e[1])}function Ys1(t){var e=I1(t),n=2*tt,i=e>0,o=rt(e)>P1;function u(f,g,p,m){Is1(m,t,n,p,f,g)}function l(f,g){return I1(f)*I1(g)>e}function a(f){var g,p,m,v,b;return{lineStart:function(){v=m=!1,b=1},point:function(x,w){var S=[x,w],A,C=l(x,w),k=i?C?0:c(x,w):C?c(x+(x<0?nt:-nt),w):0;if(!g&&(v=m=C)&&f.lineStart(),C!==m&&(A=s(g,S),(!A||Vc(g,A)||Vc(S,A))&&(S[2]=1)),C!==m)b=0,C?(f.lineStart(),A=s(S,g),f.point(A[0],A[1])):(A=s(g,S),f.point(A[0],A[1],2),f.lineEnd()),g=A;else if(o&&g&&i^C){var M;!(k&p)&&(M=s(S,g,!0))&&(b=0,i?(f.lineStart(),f.point(M[0][0],M[0][1]),f.point(M[1][0],M[1][1]),f.lineEnd()):(f.point(M[1][0],M[1][1]),f.lineEnd(),f.lineStart(),f.point(M[0][0],M[0][1],3)))}C&&(!g||!Vc(g,S))&&f.point(S[0],S[1]),g=S,m=C,p=k},lineEnd:function(){m&&f.lineEnd(),g=null},clean:function(){return b|(v&&m)<<1}}}function s(f,g,p){var m=Q0(f),v=Q0(g),b=[1,0,0],x=Al(m,v),w=lc(x,x),S=x[0],A=w-S*S;if(!A)return!p&&f;var C=e*w/A,k=-e*S/A,M=Al(b,x),T=ac(b,C),D=ac(x,k);Nv(T,D);var I=M,U=lc(T,I),B=lc(I,I),V=U*U-B*(lc(T,T)-1);if(!(V<0)){var W=zn(V),O=ac(I,(-U-W)/B);if(Nv(O,T),O=nf(O),!p)return O;var j=f[0],R=g[0],P=f[1],q=g[1],Y;R<j&&(Y=j,j=R,R=Y);var z=R-j,G=rt(z-nt)<P1,Q=G||z<P1;if(!G&&q<P&&(Y=P,P=q,q=Y),Q?G?P+q>0^O[1]<(rt(O[0]-j)<P1?P:q):P<=O[1]&&O[1]<=q:z>nt^(j<=O[0]&&O[0]<=R)){var n1=ac(I,(-U+W)/B);return Nv(n1,T),[O,nf(n1)]}}}function c(f,g){var p=i?t:nt-t,m=0;return f<-p?m|=1:f>p&&(m|=2),g<-p?m|=4:g>p&&(m|=8),m}return nY(l,a,u,i?[0,-t]:[-nt,t-nt])}function Vs1(t,e,n,i,o,u){var l=t[0],a=t[1],s=e[0],c=e[1],f=0,g=1,p=s-l,m=c-a,v;if(v=n-l,!(!p&&v>0)){if(v/=p,p<0){if(v<f)return;v<g&&(g=v)}else if(p>0){if(v>g)return;v>f&&(f=v)}if(v=o-l,!(!p&&v<0)){if(v/=p,p<0){if(v>g)return;v>f&&(f=v)}else if(p>0){if(v<f)return;v<g&&(g=v)}if(v=i-a,!(!m&&v>0)){if(v/=m,m<0){if(v<f)return;v<g&&(g=v)}else if(m>0){if(v>g)return;v>f&&(f=v)}if(v=u-a,!(!m&&v<0)){if(v/=m,m<0){if(v>g)return;v>f&&(f=v)}else if(m>0){if(v<f)return;v<g&&(g=v)}return f>0&&(t[0]=l+f*p,t[1]=a+f*m),g<1&&(e[0]=l+g*p,e[1]=a+g*m),!0}}}}}var sr=1e9,sc=-sr;function iY(t,e,n,i){function o(c,f){return t<=c&&c<=n&&e<=f&&f<=i}function u(c,f,g,p){var m=0,v=0;if(c==null||(m=l(c,g))!==(v=l(f,g))||s(c,f)<0^g>0)do p.point(m===0||m===3?t:n,m>1?i:e);while((m=(m+g+4)%4)!==v);else p.point(f[0],f[1])}function l(c,f){return rt(c[0]-t)<P1?f>0?0:3:rt(c[0]-n)<P1?f>0?2:1:rt(c[1]-e)<P1?f>0?1:0:f>0?3:2}function a(c,f){return s(c.x,f.x)}function s(c,f){var g=l(c,1),p=l(f,1);return g!==p?g-p:g===0?f[1]-c[1]:g===1?c[0]-f[0]:g===2?c[1]-f[1]:f[0]-c[0]}return function(c){var f=c,g=tY(),p,m,v,b,x,w,S,A,C,k,M,T={point:D,lineStart:V,lineEnd:W,polygonStart:U,polygonEnd:B};function D(j,R){o(j,R)&&f.point(j,R)}function I(){for(var j=0,R=0,P=m.length;R<P;++R)for(var q=m[R],Y=1,z=q.length,G=q[0],Q,n1,l1=G[0],d1=G[1];Y<z;++Y)Q=l1,n1=d1,G=q[Y],l1=G[0],d1=G[1],n1<=i?d1>i&&(l1-Q)*(i-n1)>(d1-n1)*(t-Q)&&++j:d1<=i&&(l1-Q)*(i-n1)<(d1-n1)*(t-Q)&&--j;return j}function U(){f=g,p=[],m=[],M=!0}function B(){var j=I(),R=M&&j,P=(p=GB(p)).length;(R||P)&&(c.polygonStart(),R&&(c.lineStart(),u(null,null,1,c),c.lineEnd()),P&&eY(p,a,j,u,c),c.polygonEnd()),f=c,p=m=v=null}function V(){T.point=O,m&&m.push(v=[]),k=!0,C=!1,S=A=NaN}function W(){p&&(O(b,x),w&&C&&g.rejoin(),p.push(g.result())),T.point=D,C&&f.lineEnd()}function O(j,R){var P=o(j,R);if(m&&v.push([j,R]),k)b=j,x=R,w=P,k=!1,P&&(f.lineStart(),f.point(j,R));else if(P&&C)f.point(j,R);else{var q=[S=Math.max(sc,Math.min(sr,S)),A=Math.max(sc,Math.min(sr,A))],Y=[j=Math.max(sc,Math.min(sr,j)),R=Math.max(sc,Math.min(sr,R))];Vs1(q,Y,t,e,n,i)?(C||(f.lineStart(),f.point(q[0],q[1])),f.point(Y[0],Y[1]),P||f.lineEnd(),M=!1):P&&(f.lineStart(),f.point(j,R),M=!1)}S=j,A=R,C=P}return T}}function NF(t,e,n){var i=b2(t,e-P1,n).concat(e);return function(o){return i.map(function(u){return[o,u]})}}function RF(t,e,n){var i=b2(t,e-P1,n).concat(e);return function(o){return i.map(function(u){return[u,o]})}}function Xs1(){var t,e,n,i,o,u,l,a,s=10,c=s,f=90,g=360,p,m,v,b,x=2.5;function w(){return{type:"MultiLineString",coordinates:S()}}function S(){return b2(uc(i/f)*f,n,f).map(v).concat(b2(uc(a/g)*g,l,g).map(b)).concat(b2(uc(e/s)*s,t,s).filter(function(A){return rt(A%f)>P1}).map(p)).concat(b2(uc(u/c)*c,o,c).filter(function(A){return rt(A%g)>P1}).map(m))}return w.lines=function(){return S().map(function(A){return{type:"LineString",coordinates:A}})},w.outline=function(){return{type:"Polygon",coordinates:[v(i).concat(b(l).slice(1),v(n).reverse().slice(1),b(a).reverse().slice(1))]}},w.extent=function(A){return arguments.length?w.extentMajor(A).extentMinor(A):w.extentMinor()},w.extentMajor=function(A){return arguments.length?(i=+A[0][0],n=+A[1][0],a=+A[0][1],l=+A[1][1],i>n&&(A=i,i=n,n=A),a>l&&(A=a,a=l,l=A),w.precision(x)):[[i,a],[n,l]]},w.extentMinor=function(A){return arguments.length?(e=+A[0][0],t=+A[1][0],u=+A[0][1],o=+A[1][1],e>t&&(A=e,e=t,t=A),u>o&&(A=u,u=o,o=A),w.precision(x)):[[e,u],[t,o]]},w.step=function(A){return arguments.length?w.stepMajor(A).stepMinor(A):w.stepMinor()},w.stepMajor=function(A){return arguments.length?(f=+A[0],g=+A[1],w):[f,g]},w.stepMinor=function(A){return arguments.length?(s=+A[0],c=+A[1],w):[s,c]},w.precision=function(A){return arguments.length?(x=+A,p=NF(u,o,90),m=RF(e,t,x),v=NF(a,l,90),b=RF(i,n,x),w):x},w.extentMajor([[-180,-90+P1],[180,90-P1]]).extentMinor([[-180,-80-P1],[180,80+P1]])}const n8=t=>t;var Dv=new Dn,o_=new Dn,oY,uY,u_,l_,ko={point:Ge,lineStart:Ge,lineEnd:Ge,polygonStart:function(){ko.lineStart=Ks1,ko.lineEnd=Zs1},polygonEnd:function(){ko.lineStart=ko.lineEnd=ko.point=Ge,Dv.add(rt(o_)),o_=new Dn},result:function(){var t=Dv/2;return Dv=new Dn,t}};function Ks1(){ko.point=Qs1}function Qs1(t,e){ko.point=lY,oY=u_=t,uY=l_=e}function lY(t,e){o_.add(l_*t-u_*e),u_=t,l_=e}function Zs1(){lY(oY,uY)}var Cl=1/0,ff=Cl,i8=-Cl,gf=i8,hf={point:Js1,lineStart:Ge,lineEnd:Ge,polygonStart:Ge,polygonEnd:Ge,result:function(){var t=[[Cl,ff],[i8,gf]];return i8=gf=-(ff=Cl=1/0),t}};function Js1(t,e){t<Cl&&(Cl=t),t>i8&&(i8=t),e<ff&&(ff=e),e>gf&&(gf=e)}var a_=0,r_=0,cr=0,pf=0,mf=0,G5=0,s_=0,c_=0,dr=0,aY,rY,si,ci,Y2={point:Z0,lineStart:DF,lineEnd:OF,polygonStart:function(){Y2.lineStart=nc1,Y2.lineEnd=ic1},polygonEnd:function(){Y2.point=Z0,Y2.lineStart=DF,Y2.lineEnd=OF},result:function(){var t=dr?[s_/dr,c_/dr]:G5?[pf/G5,mf/G5]:cr?[a_/cr,r_/cr]:[NaN,NaN];return a_=r_=cr=pf=mf=G5=s_=c_=dr=0,t}};function Z0(t,e){a_+=t,r_+=e,++cr}function DF(){Y2.point=tc1}function tc1(t,e){Y2.point=ec1,Z0(si=t,ci=e)}function ec1(t,e){var n=t-si,i=e-ci,o=zn(n*n+i*i);pf+=o*(si+t)/2,mf+=o*(ci+e)/2,G5+=o,Z0(si=t,ci=e)}function OF(){Y2.point=Z0}function nc1(){Y2.point=oc1}function ic1(){sY(aY,rY)}function oc1(t,e){Y2.point=sY,Z0(aY=si=t,rY=ci=e)}function sY(t,e){var n=t-si,i=e-ci,o=zn(n*n+i*i);pf+=o*(si+t)/2,mf+=o*(ci+e)/2,G5+=o,o=ci*t-si*e,s_+=o*(si+t),c_+=o*(ci+e),dr+=o*3,Z0(si=t,ci=e)}function cY(t){this._context=t}cY.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:{this._context.moveTo(t,e),this._point=1;break}case 1:{this._context.lineTo(t,e);break}default:{this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,Fn);break}}},result:Ge};var d_=new Dn,Ov,dY,fY,fr,gr,o8={point:Ge,lineStart:function(){o8.point=uc1},lineEnd:function(){Ov&&gY(dY,fY),o8.point=Ge},polygonStart:function(){Ov=!0},polygonEnd:function(){Ov=null},result:function(){var t=+d_;return d_=new Dn,t}};function uc1(t,e){o8.point=gY,dY=fr=t,fY=gr=e}function gY(t,e){fr-=t,gr-=e,d_.add(zn(fr*fr+gr*gr)),fr=t,gr=e}let FF,yf,zF,LF;class jF{constructor(e){this._append=e==null?hY:lc1(e),this._radius=4.5,this._=""}pointRadius(e){return this._radius=+e,this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){this._line===0&&(this._+="Z"),this._point=NaN}point(e,n){switch(this._point){case 0:{this._append`M${e},${n}`,this._point=1;break}case 1:{this._append`L${e},${n}`;break}default:{if(this._append`M${e},${n}`,this._radius!==zF||this._append!==yf){const i=this._radius,o=this._;this._="",this._append`m0,${i}a${i},${i} 0 1,1 0,${-2*i}a${i},${i} 0 1,1 0,${2*i}z`,zF=i,yf=this._append,LF=this._,this._=o}this._+=LF;break}}}result(){const e=this._;return this._="",e.length?e:null}}function hY(t){let e=1;this._+=t[0];for(const n=t.length;e<n;++e)this._+=arguments[e]+t[e]}function lc1(t){const e=Math.floor(t);if(!(e>=0))throw new RangeError(`invalid digits: ${t}`);if(e>15)return hY;if(e!==FF){const n=10**e;FF=e,yf=function(o){let u=1;this._+=o[0];for(const l=o.length;u<l;++u)this._+=Math.round(arguments[u]*n)/n+o[u]}}return yf}function UA(t,e){let n=3,i=4.5,o,u;function l(a){return a&&(typeof i=="function"&&u.pointRadius(+i.apply(this,arguments)),Co(a,o(u))),u.result()}return l.area=function(a){return Co(a,o(ko)),ko.result()},l.measure=function(a){return Co(a,o(o8)),o8.result()},l.bounds=function(a){return Co(a,o(hf)),hf.result()},l.centroid=function(a){return Co(a,o(Y2)),Y2.result()},l.projection=function(a){return arguments.length?(o=a==null?(t=null,n8):(t=a).stream,l):t},l.context=function(a){return arguments.length?(u=a==null?(e=null,new jF(n)):new cY(e=a),typeof i!="function"&&u.pointRadius(i),l):e},l.pointRadius=function(a){return arguments.length?(i=typeof a=="function"?a:(u.pointRadius(+a),+a),l):i},l.digits=function(a){if(!arguments.length)return n;if(a==null)n=null;else{const s=Math.floor(a);if(!(s>=0))throw new RangeError(`invalid digits: ${a}`);n=s}return e===null&&(u=new jF(n)),l},l.projection(t).digits(n).context(e)}function nh(t){return function(e){var n=new f_;for(var i in t)n[i]=t[i];return n.stream=e,n}}function f_(){}f_.prototype={constructor:f_,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function qA(t,e,n){var i=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),i!=null&&t.clipExtent(null),Co(n,t.stream(hf)),e(hf.result()),i!=null&&t.clipExtent(i),t}function ih(t,e,n){return qA(t,function(i){var o=e[1][0]-e[0][0],u=e[1][1]-e[0][1],l=Math.min(o/(i[1][0]-i[0][0]),u/(i[1][1]-i[0][1])),a=+e[0][0]+(o-l*(i[1][0]+i[0][0]))/2,s=+e[0][1]+(u-l*(i[1][1]+i[0][1]))/2;t.scale(150*l).translate([a,s])},n)}function HA(t,e,n){return ih(t,[[0,0],e],n)}function GA(t,e,n){return qA(t,function(i){var o=+e,u=o/(i[1][0]-i[0][0]),l=(o-u*(i[1][0]+i[0][0]))/2,a=-u*i[0][1];t.scale(150*u).translate([l,a])},n)}function WA(t,e,n){return qA(t,function(i){var o=+e,u=o/(i[1][1]-i[0][1]),l=-u*i[0][0],a=(o-u*(i[1][1]+i[0][1]))/2;t.scale(150*u).translate([l,a])},n)}var PF=16,ac1=I1(30*tt);function IF(t,e){return+e?sc1(t,e):rc1(t)}function rc1(t){return nh({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}function sc1(t,e){function n(i,o,u,l,a,s,c,f,g,p,m,v,b,x){var w=c-i,S=f-o,A=w*w+S*S;if(A>4*e&&b--){var C=l+p,k=a+m,M=s+v,T=zn(C*C+k*k+M*M),D=e2(M/=T),I=rt(rt(M)-1)<P1||rt(u-g)<P1?(u+g)/2:a3(k,C),U=t(I,D),B=U[0],V=U[1],W=B-i,O=V-o,j=S*W-w*O;(j*j/A>e||rt((w*W+S*O)/A-.5)>.3||l*p+a*m+s*v<ac1)&&(n(i,o,u,l,a,s,B,V,I,C/=T,k/=T,M,b,x),x.point(B,V),n(B,V,I,C,k,M,c,f,g,p,m,v,b,x))}}return function(i){var o,u,l,a,s,c,f,g,p,m,v,b,x={point:w,lineStart:S,lineEnd:C,polygonStart:function(){i.polygonStart(),x.lineStart=k},polygonEnd:function(){i.polygonEnd(),x.lineStart=S}};function w(D,I){D=t(D,I),i.point(D[0],D[1])}function S(){g=NaN,x.point=A,i.lineStart()}function A(D,I){var U=Q0([D,I]),B=t(D,I);n(g,p,f,m,v,b,g=B[0],p=B[1],f=D,m=U[0],v=U[1],b=U[2],PF,i),i.point(g,p)}function C(){x.point=w,i.lineEnd()}function k(){S(),x.point=M,x.lineEnd=T}function M(D,I){A(o=D,I),u=g,l=p,a=m,s=v,c=b,x.point=A}function T(){n(g,p,f,m,v,b,u,l,o,a,s,c,PF,i),x.lineEnd=C,C()}return x}}var cc1=nh({point:function(t,e){this.stream.point(t*tt,e*tt)}});function dc1(t){return nh({point:function(e,n){var i=t(e,n);return this.stream.point(i[0],i[1])}})}function fc1(t,e,n,i,o){function u(l,a){return l*=i,a*=o,[e+t*l,n-t*a]}return u.invert=function(l,a){return[(l-e)/t*i,(n-a)/t*o]},u}function BF(t,e,n,i,o,u){if(!u)return fc1(t,e,n,i,o);var l=I1(u),a=L1(u),s=l*t,c=a*t,f=l/t,g=a/t,p=(a*n-l*e)/t,m=(a*e+l*n)/t;function v(b,x){return b*=i,x*=o,[s*b-c*x+e,n-c*b-s*x]}return v.invert=function(b,x){return[i*(f*b-g*x+p),o*(m-g*b-f*x)]},v}function Fi(t){return pY(function(){return t})()}function pY(t){var e,n=150,i=480,o=250,u=0,l=0,a=0,s=0,c=0,f,g=0,p=1,m=1,v=null,b=MF,x=null,w,S,A,C=n8,k=.5,M,T,D,I,U;function B(j){return D(j[0]*tt,j[1]*tt)}function V(j){return j=D.invert(j[0],j[1]),j&&[j[0]*oe,j[1]*oe]}B.stream=function(j){return I&&U===j?I:I=cc1(dc1(f)(b(M(C(U=j)))))},B.preclip=function(j){return arguments.length?(b=j,v=void 0,O()):b},B.postclip=function(j){return arguments.length?(C=j,x=w=S=A=null,O()):C},B.clipAngle=function(j){return arguments.length?(b=+j?Ys1(v=j*tt):(v=null,MF),O()):v*oe},B.clipExtent=function(j){return arguments.length?(C=j==null?(x=w=S=A=null,n8):iY(x=+j[0][0],w=+j[0][1],S=+j[1][0],A=+j[1][1]),O()):x==null?null:[[x,w],[S,A]]},B.scale=function(j){return arguments.length?(n=+j,W()):n},B.translate=function(j){return arguments.length?(i=+j[0],o=+j[1],W()):[i,o]},B.center=function(j){return arguments.length?(u=j[0]%360*tt,l=j[1]%360*tt,W()):[u*oe,l*oe]},B.rotate=function(j){return arguments.length?(a=j[0]%360*tt,s=j[1]%360*tt,c=j.length>2?j[2]%360*tt:0,W()):[a*oe,s*oe,c*oe]},B.angle=function(j){return arguments.length?(g=j%360*tt,W()):g*oe},B.reflectX=function(j){return arguments.length?(p=j?-1:1,W()):p<0},B.reflectY=function(j){return arguments.length?(m=j?-1:1,W()):m<0},B.precision=function(j){return arguments.length?(M=IF(T,k=j*j),O()):zn(k)},B.fitExtent=function(j,R){return ih(B,j,R)},B.fitSize=function(j,R){return HA(B,j,R)},B.fitWidth=function(j,R){return GA(B,j,R)},B.fitHeight=function(j,R){return WA(B,j,R)};function W(){var j=BF(n,0,0,p,m,g).apply(null,e(u,l)),R=BF(n,i-j[0],o-j[1],p,m,g);return f=JW(a,s,c),T=n_(e,R),D=n_(f,T),M=IF(T,k),O()}function O(){return I=U=null,B}return function(){return e=t.apply(this,arguments),B.invert=e.invert&&V,W()}}function YA(t){var e=0,n=nt/3,i=pY(t),o=i(e,n);return o.parallels=function(u){return arguments.length?i(e=u[0]*tt,n=u[1]*tt):[e*oe,n*oe]},o}function gc1(t){var e=I1(t);function n(i,o){return[i*e,L1(o)/e]}return n.invert=function(i,o){return[i/e,e2(o*e)]},n}function hc1(t,e){var n=L1(t),i=(n+L1(e))/2;if(rt(i)<P1)return gc1(t);var o=1+n*(2*i-n),u=zn(o)/i;function l(a,s){var c=zn(o-2*i*L1(s))/i;return[c*L1(a*=i),u-c*I1(a)]}return l.invert=function(a,s){var c=u-s,f=a3(a,rt(c))*X2(c);return c*i<0&&(f-=nt*X2(a)*X2(c)),[f/i,e2((o-(a*a+c*c)*i*i)/(2*i))]},l}function vf(){return YA(hc1).scale(155.424).center([0,33.6442])}function mY(){return vf().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function pc1(t){var e=t.length;return{point:function(n,i){for(var o=-1;++o<e;)t[o].point(n,i)},sphere:function(){for(var n=-1;++n<e;)t[n].sphere()},lineStart:function(){for(var n=-1;++n<e;)t[n].lineStart()},lineEnd:function(){for(var n=-1;++n<e;)t[n].lineEnd()},polygonStart:function(){for(var n=-1;++n<e;)t[n].polygonStart()},polygonEnd:function(){for(var n=-1;++n<e;)t[n].polygonEnd()}}}function mc1(){var t,e,n=mY(),i,o=vf().rotate([154,0]).center([-2,58.5]).parallels([55,65]),u,l=vf().rotate([157,0]).center([-3,19.9]).parallels([8,18]),a,s,c={point:function(p,m){s=[p,m]}};function f(p){var m=p[0],v=p[1];return s=null,i.point(m,v),s||(u.point(m,v),s)||(a.point(m,v),s)}f.invert=function(p){var m=n.scale(),v=n.translate(),b=(p[0]-v[0])/m,x=(p[1]-v[1])/m;return(x>=.12&&x<.234&&b>=-.425&&b<-.214?o:x>=.166&&x<.234&&b>=-.214&&b<-.115?l:n).invert(p)},f.stream=function(p){return t&&e===p?t:t=pc1([n.stream(e=p),o.stream(p),l.stream(p)])},f.precision=function(p){return arguments.length?(n.precision(p),o.precision(p),l.precision(p),g()):n.precision()},f.scale=function(p){return arguments.length?(n.scale(p),o.scale(p*.35),l.scale(p),f.translate(n.translate())):n.scale()},f.translate=function(p){if(!arguments.length)return n.translate();var m=n.scale(),v=+p[0],b=+p[1];return i=n.translate(p).clipExtent([[v-.455*m,b-.238*m],[v+.455*m,b+.238*m]]).stream(c),u=o.translate([v-.307*m,b+.201*m]).clipExtent([[v-.425*m+P1,b+.12*m+P1],[v-.214*m-P1,b+.234*m-P1]]).stream(c),a=l.translate([v-.205*m,b+.212*m]).clipExtent([[v-.214*m+P1,b+.166*m+P1],[v-.115*m-P1,b+.234*m-P1]]).stream(c),g()},f.fitExtent=function(p,m){return ih(f,p,m)},f.fitSize=function(p,m){return HA(f,p,m)},f.fitWidth=function(p,m){return GA(f,p,m)},f.fitHeight=function(p,m){return WA(f,p,m)};function g(){return t=e=null,f}return f.scale(1070)}function yY(t){return function(e,n){var i=I1(e),o=I1(n),u=t(i*o);return u===1/0?[2,0]:[u*o*L1(e),u*L1(n)]}}function e7(t){return function(e,n){var i=zn(e*e+n*n),o=t(i),u=L1(o),l=I1(o);return[a3(e*u,i*l),e2(i&&n*u/i)]}}var vY=yY(function(t){return zn(2/(1+t))});vY.invert=e7(function(t){return 2*e2(t/2)});function yc1(){return Fi(vY).scale(124.75).clipAngle(180-.001)}var bY=yY(function(t){return(t=UW(t))&&t/L1(t)});bY.invert=e7(function(t){return t});function vc1(){return Fi(bY).scale(79.4188).clipAngle(180-.001)}function oh(t,e){return[t,Zd(IA((te+e)/2))]}oh.invert=function(t,e){return[t,2*sa(BW(e))-te]};function bc1(){return xY(oh).scale(961/Fn)}function xY(t){var e=Fi(t),n=e.center,i=e.scale,o=e.translate,u=e.clipExtent,l=null,a,s,c;e.scale=function(g){return arguments.length?(i(g),f()):i()},e.translate=function(g){return arguments.length?(o(g),f()):o()},e.center=function(g){return arguments.length?(n(g),f()):n()},e.clipExtent=function(g){return arguments.length?(g==null?l=a=s=c=null:(l=+g[0][0],a=+g[0][1],s=+g[1][0],c=+g[1][1]),f()):l==null?null:[[l,a],[s,c]]};function f(){var g=nt*i(),p=e(Ps1(e.rotate()).invert([0,0]));return u(l==null?[[p[0]-g,p[1]-g],[p[0]+g,p[1]+g]]:t===oh?[[Math.max(p[0]-g,l),a],[Math.min(p[0]+g,s),c]]:[[l,Math.max(p[1]-g,a)],[s,Math.min(p[1]+g,c)]])}return f()}function cc(t){return IA((te+t)/2)}function xc1(t,e){var n=I1(t),i=t===e?L1(t):Zd(n/I1(e))/Zd(cc(e)/cc(t)),o=n*Mv(cc(t),i)/i;if(!i)return oh;function u(l,a){o>0?a<-te+P1&&(a=-te+P1):a>te-P1&&(a=te-P1);var s=o/Mv(cc(a),i);return[s*L1(i*l),o-s*I1(i*l)]}return u.invert=function(l,a){var s=o-a,c=X2(i)*zn(l*l+s*s),f=a3(l,rt(s))*X2(s);return s*i<0&&(f-=nt*X2(l)*X2(s)),[f/i,2*sa(Mv(o/c,1/i))-te]},u}function _c1(){return YA(xc1).scale(109.5).parallels([30,30])}function bf(t,e){return[t,e]}bf.invert=bf;function _Y(){return Fi(bf).scale(152.63)}function wc1(t,e){var n=I1(t),i=t===e?L1(t):(n-I1(e))/(e-t),o=n/i+t;if(rt(i)<P1)return bf;function u(l,a){var s=o-a,c=i*l;return[s*L1(c),o-s*I1(c)]}return u.invert=function(l,a){var s=o-a,c=a3(l,rt(s))*X2(s);return s*i<0&&(c-=nt*X2(l)*X2(s)),[c/i,o-X2(i)*zn(l*l+s*s)]},u}function Ec1(){return YA(wc1).scale(131.154).center([0,13.9389])}var Mr=1.340264,Nr=-.081106,Rr=893e-6,Dr=.003796,xf=zn(3)/2,Sc1=12;function wY(t,e){var n=e2(xf*L1(e)),i=n*n,o=i*i*i;return[t*I1(n)/(xf*(Mr+3*Nr*i+o*(7*Rr+9*Dr*i))),n*(Mr+Nr*i+o*(Rr+Dr*i))]}wY.invert=function(t,e){for(var n=e,i=n*n,o=i*i*i,u=0,l,a,s;u<Sc1&&(a=n*(Mr+Nr*i+o*(Rr+Dr*i))-e,s=Mr+3*Nr*i+o*(7*Rr+9*Dr*i),n-=l=a/s,i=n*n,o=i*i*i,!(rt(l)<Kd));++u);return[xf*t*(Mr+3*Nr*i+o*(7*Rr+9*Dr*i))/I1(n),e2(L1(n)/xf)]};function Ac1(){return Fi(wY).scale(177.158)}function EY(t,e){var n=I1(e),i=I1(t)*n;return[n*L1(t)/i,L1(e)/i]}EY.invert=e7(sa);function Cc1(){return Fi(EY).scale(144.049).clipAngle(60)}function kc1(){var t=1,e=0,n=0,i=1,o=1,u=0,l,a,s=null,c,f,g,p=1,m=1,v=nh({point:function(C,k){var M=A([C,k]);this.stream.point(M[0],M[1])}}),b=n8,x,w;function S(){return p=t*i,m=t*o,x=w=null,A}function A(C){var k=C[0]*p,M=C[1]*m;if(u){var T=M*l-k*a;k=k*l+M*a,M=T}return[k+e,M+n]}return A.invert=function(C){var k=C[0]-e,M=C[1]-n;if(u){var T=M*l+k*a;k=k*l-M*a,M=T}return[k/p,M/m]},A.stream=function(C){return x&&w===C?x:x=v(b(w=C))},A.postclip=function(C){return arguments.length?(b=C,s=c=f=g=null,S()):b},A.clipExtent=function(C){return arguments.length?(b=C==null?(s=c=f=g=null,n8):iY(s=+C[0][0],c=+C[0][1],f=+C[1][0],g=+C[1][1]),S()):s==null?null:[[s,c],[f,g]]},A.scale=function(C){return arguments.length?(t=+C,S()):t},A.translate=function(C){return arguments.length?(e=+C[0],n=+C[1],S()):[e,n]},A.angle=function(C){return arguments.length?(u=C%360*tt,a=L1(u),l=I1(u),S()):u*oe},A.reflectX=function(C){return arguments.length?(i=C?-1:1,S()):i<0},A.reflectY=function(C){return arguments.length?(o=C?-1:1,S()):o<0},A.fitExtent=function(C,k){return ih(A,C,k)},A.fitSize=function(C,k){return HA(A,C,k)},A.fitWidth=function(C,k){return GA(A,C,k)},A.fitHeight=function(C,k){return WA(A,C,k)},A}function SY(t,e){var n=e*e,i=n*n;return[t*(.8707-.131979*n+i*(-.013791+i*(.003971*n-.001529*i))),e*(1.007226+n*(.015085+i*(-.044475+.028874*n-.005916*i)))]}SY.invert=function(t,e){var n=e,i=25,o;do{var u=n*n,l=u*u;n-=o=(n*(1.007226+u*(.015085+l*(-.044475+.028874*u-.005916*l)))-e)/(1.007226+u*(.015085*3+l*(-.044475*7+.028874*9*u-.005916*11*l)))}while(rt(o)>P1&&--i>0);return[t/(.8707+(u=n*n)*(-.131979+u*(-.013791+u*u*u*(.003971-.001529*u)))),n]};function Tc1(){return Fi(SY).scale(175.295)}function AY(t,e){return[I1(e)*L1(t),L1(e)]}AY.invert=e7(e2);function $c1(){return Fi(AY).scale(249.5).clipAngle(90+P1)}function CY(t,e){var n=I1(e),i=1+I1(t)*n;return[n*L1(t)/i,L1(e)/i]}CY.invert=e7(function(t){return 2*sa(t)});function Mc1(){return Fi(CY).scale(250).clipAngle(142)}function kY(t,e){return[Zd(IA((te+e)/2)),-t]}kY.invert=function(t,e){return[-e,2*sa(BW(t))-te]};function Nc1(){var t=xY(kY),e=t.center,n=t.rotate;return t.center=function(i){return arguments.length?e([-i[1],i[0]]):(i=e(),[i[1],-i[0]])},t.rotate=function(i){return arguments.length?n([i[0],i[1],i.length>2?i[2]+90:90]):(i=n(),[i[0],i[1],i[2]-90])},n([0,0,90]).scale(159.155)}var Rc1=Math.abs,g_=Math.cos,_f=Math.sin,Dc1=1e-6,TY=Math.PI,h_=TY/2,UF=Oc1(2);function qF(t){return t>1?h_:t<-1?-h_:Math.asin(t)}function Oc1(t){return t>0?Math.sqrt(t):0}function Fc1(t,e){var n=t*_f(e),i=30,o;do e-=o=(e+_f(e)-n)/(1+g_(e));while(Rc1(o)>Dc1&&--i>0);return e/2}function zc1(t,e,n){function i(o,u){return[t*o*g_(u=Fc1(n,u)),e*_f(u)]}return i.invert=function(o,u){return u=qF(u/e),[o/(t*g_(u)),qF((2*u+_f(2*u))/n)]},i}var Lc1=zc1(UF/h_,UF,TY);function jc1(){return Fi(Lc1).scale(169.529)}const Pc1=UA(),p_=["clipAngle","clipExtent","scale","translate","center","rotate","parallels","precision","reflectX","reflectY","coefficient","distance","fraction","lobes","parallel","radius","ratio","spacing","tilt"];function Ic1(t,e){return function n(){const i=e();return i.type=t,i.path=UA().projection(i),i.copy=i.copy||function(){const o=n();return p_.forEach(u=>{i[u]&&o[u](i[u]())}),o.path.pointRadius(i.path.pointRadius()),o},HH(i)}}function VA(t,e){if(!t||typeof t!="string")throw new Error("Projection type must be a name string.");return t=t.toLowerCase(),arguments.length>1?(wf[t]=Ic1(t,e),this):wf[t]||null}function $Y(t){return t&&t.path||Pc1}const wf={albers:mY,albersusa:mc1,azimuthalequalarea:yc1,azimuthalequidistant:vc1,conicconformal:_c1,conicequalarea:vf,conicequidistant:Ec1,equalEarth:Ac1,equirectangular:_Y,gnomonic:Cc1,identity:kc1,mercator:bc1,mollweide:jc1,naturalEarth1:Tc1,orthographic:$c1,stereographic:Mc1,transversemercator:Nc1};for(const t in wf)VA(t,wf[t]);function Bc1(){}const po=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function MY(){var t=1,e=1,n=a;function i(s,c){return c.map(f=>o(s,f))}function o(s,c){var f=[],g=[];return u(s,c,p=>{n(p,s,c),Uc1(p)>0?f.push([p]):g.push(p)}),g.forEach(p=>{for(var m=0,v=f.length,b;m<v;++m)if(qc1((b=f[m])[0],p)!==-1){b.push(p);return}}),{type:"MultiPolygon",value:c,coordinates:f}}function u(s,c,f){var g=[],p=[],m,v,b,x,w,S;for(m=v=-1,x=s[0]>=c,po[x<<1].forEach(A);++m<t-1;)b=x,x=s[m+1]>=c,po[b|x<<1].forEach(A);for(po[x<<0].forEach(A);++v<e-1;){for(m=-1,x=s[v*t+t]>=c,w=s[v*t]>=c,po[x<<1|w<<2].forEach(A);++m<t-1;)b=x,x=s[v*t+t+m+1]>=c,S=w,w=s[v*t+m+1]>=c,po[b|x<<1|w<<2|S<<3].forEach(A);po[x|w<<3].forEach(A)}for(m=-1,w=s[v*t]>=c,po[w<<2].forEach(A);++m<t-1;)S=w,w=s[v*t+m+1]>=c,po[w<<2|S<<3].forEach(A);po[w<<3].forEach(A);function A(C){var k=[C[0][0]+m,C[0][1]+v],M=[C[1][0]+m,C[1][1]+v],T=l(k),D=l(M),I,U;(I=p[T])?(U=g[D])?(delete p[I.end],delete g[U.start],I===U?(I.ring.push(M),f(I.ring)):g[I.start]=p[U.end]={start:I.start,end:U.end,ring:I.ring.concat(U.ring)}):(delete p[I.end],I.ring.push(M),p[I.end=D]=I):(I=g[D])?(U=p[T])?(delete g[I.start],delete p[U.end],I===U?(I.ring.push(M),f(I.ring)):g[U.start]=p[I.end]={start:U.start,end:I.end,ring:U.ring.concat(I.ring)}):(delete g[I.start],I.ring.unshift(k),g[I.start=T]=I):g[T]=p[D]={start:T,end:D,ring:[k,M]}}}function l(s){return s[0]*2+s[1]*(t+1)*4}function a(s,c,f){s.forEach(g=>{var p=g[0],m=g[1],v=p|0,b=m|0,x,w=c[b*t+v];p>0&&p<t&&v===p&&(x=c[b*t+v-1],g[0]=p+(f-x)/(w-x)-.5),m>0&&m<e&&b===m&&(x=c[(b-1)*t+v],g[1]=m+(f-x)/(w-x)-.5)})}return i.contour=o,i.size=function(s){if(!arguments.length)return[t,e];var c=Math.floor(s[0]),f=Math.floor(s[1]);return c>=0&&f>=0||u1("invalid size"),t=c,e=f,i},i.smooth=function(s){return arguments.length?(n=s?a:Bc1,i):n===a},i}function Uc1(t){for(var e=0,n=t.length,i=t[n-1][1]*t[0][0]-t[n-1][0]*t[0][1];++e<n;)i+=t[e-1][1]*t[e][0]-t[e-1][0]*t[e][1];return i}function qc1(t,e){for(var n=-1,i=e.length,o;++n<i;)if(o=Hc1(t,e[n]))return o;return 0}function Hc1(t,e){for(var n=e[0],i=e[1],o=-1,u=0,l=t.length,a=l-1;u<l;a=u++){var s=t[u],c=s[0],f=s[1],g=t[a],p=g[0],m=g[1];if(Gc1(s,g,e))return 0;f>i!=m>i&&n<(p-c)*(i-f)/(m-f)+c&&(o=-o)}return o}function Gc1(t,e,n){var i;return Wc1(t,e,n)&&Yc1(t[i=+(t[0]===e[0])],n[i],e[i])}function Wc1(t,e,n){return(e[0]-t[0])*(n[1]-t[1])===(n[0]-t[0])*(e[1]-t[1])}function Yc1(t,e,n){return t<=e&&e<=n||n<=e&&e<=t}function NY(t,e,n){return function(i){var o=_i(i),u=n?Math.min(o[0],0):o[0],l=o[1],a=l-u,s=e?pu(u,l,t):a/(t+1);return b2(u+s,l,s)}}function XA(t){i1.call(this,null,t)}XA.Definition={type:"Isocontour",metadata:{generates:!0},params:[{name:"field",type:"field"},{name:"thresholds",type:"number",array:!0},{name:"levels",type:"number"},{name:"nice",type:"boolean",default:!1},{name:"resolve",type:"enum",values:["shared","independent"],default:"independent"},{name:"zero",type:"boolean",default:!0},{name:"smooth",type:"boolean",default:!0},{name:"scale",type:"number",expr:!0},{name:"translate",type:"number",array:!0,expr:!0},{name:"as",type:"string",null:!0,default:"contour"}]};b1(XA,i1,{transform(t,e){if(this.value&&!e.changed()&&!t.modified())return e.StopPropagation;var n=e.fork(e.NO_SOURCE|e.NO_FIELDS),i=e.materialize(e.SOURCE).source,o=t.field||vn,u=MY().smooth(t.smooth!==!1),l=t.thresholds||Vc1(i,o,t),a=t.as===null?null:t.as||"contour",s=[];return i.forEach(c=>{const f=o(c),g=u.size([f.width,f.height])(f.values,r1(l)?l:l(f.values));Xc1(g,f,c,t),g.forEach(p=>{s.push(_g(c,vt(a!=null?{[a]:p}:p)))})}),this.value&&(n.rem=this.value),this.value=n.source=n.add=s,n}});function Vc1(t,e,n){const i=NY(n.levels||10,n.nice,n.zero!==!1);return n.resolve!=="shared"?i:i(t.map(o=>Po(e(o).values)))}function Xc1(t,e,n,i){let o=i.scale||e.scale,u=i.translate||e.translate;if(Q1(o)&&(o=o(n,i)),Q1(u)&&(u=u(n,i)),(o===1||o==null)&&!u)return;const l=(ht(o)?o:o[0])||1,a=(ht(o)?o:o[1])||1,s=u&&u[0]||0,c=u&&u[1]||0;t.forEach(RY(e,l,a,s,c))}function RY(t,e,n,i,o){const u=t.x1||0,l=t.y1||0,a=e*n<0;function s(g){g.forEach(c)}function c(g){a&&g.reverse(),g.forEach(f)}function f(g){g[0]=(g[0]-u)*e+i,g[1]=(g[1]-l)*n+o}return function(g){return g.coordinates.forEach(s),g}}function HF(t,e,n){const i=t>=0?t:jE(e,n);return Math.round((Math.sqrt(4*i*i+1)-1)/2)}function Fv(t){return Q1(t)?t:bn(+t)}function DY(){var t=s=>s[0],e=s=>s[1],n=Xl,i=[-1,-1],o=960,u=500,l=2;function a(s,c){const f=HF(i[0],s,t)>>l,g=HF(i[1],s,e)>>l,p=f?f+2:0,m=g?g+2:0,v=2*p+(o>>l),b=2*m+(u>>l),x=new Float32Array(v*b),w=new Float32Array(v*b);let S=x;s.forEach(C=>{const k=p+(+t(C)>>l),M=m+(+e(C)>>l);k>=0&&k<v&&M>=0&&M<b&&(x[k+M*v]+=+n(C))}),f>0&&g>0?(T5(v,b,x,w,f),$5(v,b,w,x,g),T5(v,b,x,w,f),$5(v,b,w,x,g),T5(v,b,x,w,f),$5(v,b,w,x,g)):f>0?(T5(v,b,x,w,f),T5(v,b,w,x,f),T5(v,b,x,w,f),S=w):g>0&&($5(v,b,x,w,g),$5(v,b,w,x,g),$5(v,b,x,w,g),S=w);const A=c?Math.pow(2,-2*l):1/WB(S);for(let C=0,k=v*b;C<k;++C)S[C]*=A;return{values:S,scale:1<<l,width:v,height:b,x1:p,y1:m,x2:p+(o>>l),y2:m+(u>>l)}}return a.x=function(s){return arguments.length?(t=Fv(s),a):t},a.y=function(s){return arguments.length?(e=Fv(s),a):e},a.weight=function(s){return arguments.length?(n=Fv(s),a):n},a.size=function(s){if(!arguments.length)return[o,u];var c=+s[0],f=+s[1];return c>=0&&f>=0||u1("invalid size"),o=c,u=f,a},a.cellSize=function(s){return arguments.length?((s=+s)>=1||u1("invalid cell size"),l=Math.floor(Math.log(s)/Math.LN2),a):1<<l},a.bandwidth=function(s){return arguments.length?(s=S1(s),s.length===1&&(s=[+s[0],+s[0]]),s.length!==2&&u1("invalid bandwidth"),i=s,a):i},a}function T5(t,e,n,i,o){const u=(o<<1)+1;for(let l=0;l<e;++l)for(let a=0,s=0;a<t+o;++a)a<t&&(s+=n[a+l*t]),a>=o&&(a>=u&&(s-=n[a-u+l*t]),i[a-o+l*t]=s/Math.min(a+1,t-1+u-a,u))}function $5(t,e,n,i,o){const u=(o<<1)+1;for(let l=0;l<t;++l)for(let a=0,s=0;a<e+o;++a)a<e&&(s+=n[l+a*t]),a>=o&&(a>=u&&(s-=n[l+(a-u)*t]),i[l+(a-o)*t]=s/Math.min(a+1,e-1+u-a,u))}function KA(t){i1.call(this,null,t)}KA.Definition={type:"KDE2D",metadata:{generates:!0},params:[{name:"size",type:"number",array:!0,length:2,required:!0},{name:"x",type:"field",required:!0},{name:"y",type:"field",required:!0},{name:"weight",type:"field"},{name:"groupby",type:"field",array:!0},{name:"cellSize",type:"number"},{name:"bandwidth",type:"number",array:!0,length:2},{name:"counts",type:"boolean",default:!1},{name:"as",type:"string",default:"grid"}]};const Kc1=["x","y","weight","size","cellSize","bandwidth"];function OY(t,e){return Kc1.forEach(n=>e[n]!=null?t[n](e[n]):0),t}b1(KA,i1,{transform(t,e){if(this.value&&!e.changed()&&!t.modified())return e.StopPropagation;var n=e.fork(e.NO_SOURCE|e.NO_FIELDS),i=e.materialize(e.SOURCE).source,o=Qc1(i,t.groupby),u=(t.groupby||[]).map(ee),l=OY(DY(),t),a=t.as||"grid",s=[];function c(f,g){for(let p=0;p<u.length;++p)f[u[p]]=g[p];return f}return s=o.map(f=>vt(c({[a]:l(f,t.counts)},f.dims))),this.value&&(n.rem=this.value),this.value=n.source=n.add=s,n}});function Qc1(t,e){var n=[],i=f=>f(a),o,u,l,a,s,c;if(e==null)n.push(t);else for(o={},u=0,l=t.length;u<l;++u)a=t[u],s=e.map(i),c=o[s],c||(o[s]=c=[],c.dims=s,n.push(c)),c.push(a);return n}function QA(t){i1.call(this,null,t)}QA.Definition={type:"Contour",metadata:{generates:!0},params:[{name:"size",type:"number",array:!0,length:2,required:!0},{name:"values",type:"number",array:!0},{name:"x",type:"field"},{name:"y",type:"field"},{name:"weight",type:"field"},{name:"cellSize",type:"number"},{name:"bandwidth",type:"number"},{name:"count",type:"number"},{name:"nice",type:"boolean",default:!1},{name:"thresholds",type:"number",array:!0},{name:"smooth",type:"boolean",default:!0}]};b1(QA,i1,{transform(t,e){if(this.value&&!e.changed()&&!t.modified())return e.StopPropagation;var n=e.fork(e.NO_SOURCE|e.NO_FIELDS),i=MY().smooth(t.smooth!==!1),o=t.values,u=t.thresholds||NY(t.count||10,t.nice,!!o),l=t.size,a,s;return o||(o=e.materialize(e.SOURCE).source,a=OY(DY(),t)(o,!0),s=RY(a,a.scale||1,a.scale||1,0,0),l=[a.width,a.height],o=a.values),u=r1(u)?u:u(o),o=i.size(l)(o,u),s&&o.forEach(s),this.value&&(n.rem=this.value),this.value=n.source=n.add=(o||[]).map(vt),n}});const m_="Feature",ZA="FeatureCollection",Zc1="MultiPoint";function JA(t){i1.call(this,null,t)}JA.Definition={type:"GeoJSON",metadata:{},params:[{name:"fields",type:"field",array:!0,length:2},{name:"geojson",type:"field"}]};b1(JA,i1,{transform(t,e){var n=this._features,i=this._points,o=t.fields,u=o&&o[0],l=o&&o[1],a=t.geojson||!o&&vn,s=e.ADD,c;c=t.modified()||e.changed(e.REM)||e.modified(hn(a))||u&&e.modified(hn(u))||l&&e.modified(hn(l)),(!this.value||c)&&(s=e.SOURCE,this._features=n=[],this._points=i=[]),a&&e.visit(s,f=>n.push(a(f))),u&&l&&(e.visit(s,f=>{var g=u(f),p=l(f);g!=null&&p!=null&&(g=+g)===g&&(p=+p)===p&&i.push([g,p])}),n=n.concat({type:m_,geometry:{type:Zc1,coordinates:i}})),this.value={type:ZA,features:n}}});function tC(t){i1.call(this,null,t)}tC.Definition={type:"GeoPath",metadata:{modifies:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string",default:"path"}]};b1(tC,i1,{transform(t,e){var n=e.fork(e.ALL),i=this.value,o=t.field||vn,u=t.as||"path",l=n.SOURCE;!i||t.modified()?(this.value=i=$Y(t.projection),n.materialize().reflow()):l=o===vn||e.modified(o.fields)?n.ADD_MOD:n.ADD;const a=Jc1(i,t.pointRadius);return n.visit(l,s=>s[u]=i(o(s))),i.pointRadius(a),n.modifies(u)}});function Jc1(t,e){const n=t.pointRadius();return t.context(null),e!=null&&t.pointRadius(e),n}function eC(t){i1.call(this,null,t)}eC.Definition={type:"GeoPoint",metadata:{modifies:!0},params:[{name:"projection",type:"projection",required:!0},{name:"fields",type:"field",array:!0,required:!0,length:2},{name:"as",type:"string",array:!0,length:2,default:["x","y"]}]};b1(eC,i1,{transform(t,e){var n=t.projection,i=t.fields[0],o=t.fields[1],u=t.as||["x","y"],l=u[0],a=u[1],s;function c(f){const g=n([i(f),o(f)]);g?(f[l]=g[0],f[a]=g[1]):(f[l]=void 0,f[a]=void 0)}return t.modified()?e=e.materialize().reflow(!0).visit(e.SOURCE,c):(s=e.modified(i.fields)||e.modified(o.fields),e.visit(s?e.ADD_MOD:e.ADD,c)),e.modifies(u)}});function nC(t){i1.call(this,null,t)}nC.Definition={type:"GeoShape",metadata:{modifies:!0,nomod:!0},params:[{name:"projection",type:"projection"},{name:"field",type:"field",default:"datum"},{name:"pointRadius",type:"number",expr:!0},{name:"as",type:"string",default:"shape"}]};b1(nC,i1,{transform(t,e){var n=e.fork(e.ALL),i=this.value,o=t.as||"shape",u=n.ADD;return(!i||t.modified())&&(this.value=i=td1($Y(t.projection),t.field||i3("datum"),t.pointRadius),n.materialize().reflow(),u=n.SOURCE),n.visit(u,l=>l[o]=i),n.modifies(o)}});function td1(t,e,n){const i=n==null?o=>t(e(o)):o=>{var u=t.pointRadius(),l=t.pointRadius(n)(e(o));return t.pointRadius(u),l};return i.context=o=>(t.context(o),i),i}function iC(t){i1.call(this,[],t),this.generator=Xs1()}iC.Definition={type:"Graticule",metadata:{changes:!0,generates:!0},params:[{name:"extent",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMajor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"extentMinor",type:"array",array:!0,length:2,content:{type:"number",array:!0,length:2}},{name:"step",type:"number",array:!0,length:2},{name:"stepMajor",type:"number",array:!0,length:2,default:[90,360]},{name:"stepMinor",type:"number",array:!0,length:2,default:[10,10]},{name:"precision",type:"number",default:2.5}]};b1(iC,i1,{transform(t,e){var n=this.value,i=this.generator,o;if(!n.length||t.modified())for(const u in t)Q1(i[u])&&i[u](t[u]);return o=i(),n.length?e.mod.push(BU(n[0],o)):e.add.push(vt(o)),n[0]=o,e}});function oC(t){i1.call(this,null,t)}oC.Definition={type:"heatmap",metadata:{modifies:!0},params:[{name:"field",type:"field"},{name:"color",type:"string",expr:!0},{name:"opacity",type:"number",expr:!0},{name:"resolve",type:"enum",values:["shared","independent"],default:"independent"},{name:"as",type:"string",default:"image"}]};b1(oC,i1,{transform(t,e){if(!e.changed()&&!t.modified())return e.StopPropagation;var n=e.materialize(e.SOURCE).source,i=t.resolve==="shared",o=t.field||vn,u=nd1(t.opacity,t),l=ed1(t.color,t),a=t.as||"image",s={$x:0,$y:0,$value:0,$max:i?Po(n.map(c=>Po(o(c).values))):0};return n.forEach(c=>{const f=o(c),g=K1({},c,s);i||(g.$max=Po(f.values||[])),c[a]=id1(f,g,l.dep?l:bn(l(g)),u.dep?u:bn(u(g)))}),e.reflow(!0).modifies(a)}});function ed1(t,e){let n;return Q1(t)?(n=i=>vu(t(i,e)),n.dep=FY(t)):n=bn(vu(t||"#888")),n}function nd1(t,e){let n;return Q1(t)?(n=i=>t(i,e),n.dep=FY(t)):t?n=bn(t):(n=i=>i.$value/i.$max||0,n.dep=!0),n}function FY(t){if(!Q1(t))return!1;const e=D3(hn(t));return e.$x||e.$y||e.$value||e.$max}function id1(t,e,n,i){const o=t.width,u=t.height,l=t.x1||0,a=t.y1||0,s=t.x2||o,c=t.y2||u,f=t.values,g=f?x=>f[x]:K4,p=cu(s-l,c-a),m=p.getContext("2d"),v=m.getImageData(0,0,s-l,c-a),b=v.data;for(let x=a,w=0;x<c;++x){e.$y=x-a;for(let S=l,A=x*o;S<s;++S,w+=4){e.$x=S-l,e.$value=g(S+A);const C=n(e);b[w+0]=C.r,b[w+1]=C.g,b[w+2]=C.b,b[w+3]=~~(255*i(e))}}return m.putImageData(v,0,0),p}function zY(t){i1.call(this,null,t),this.modified(!0)}b1(zY,i1,{transform(t,e){let n=this.value;return!n||t.modified("type")?(this.value=n=ud1(t.type),p_.forEach(i=>{t[i]!=null&&GF(n,i,t[i])})):p_.forEach(i=>{t.modified(i)&&GF(n,i,t[i])}),t.pointRadius!=null&&n.path.pointRadius(t.pointRadius),t.fit&&od1(n,t),e.fork(e.NO_SOURCE|e.NO_FIELDS)}});function od1(t,e){const n=ld1(e.fit);e.extent?t.fitExtent(e.extent,n):e.size&&t.fitSize(e.size,n)}function ud1(t){const e=VA((t||"mercator").toLowerCase());return e||u1("Unrecognized projection type: "+t),e()}function GF(t,e,n){Q1(t[e])&&t[e](n)}function ld1(t){return t=S1(t),t.length===1?t[0]:{type:ZA,features:t.reduce((e,n)=>e.concat(ad1(n)),[])}}function ad1(t){return t.type===ZA?t.features:S1(t).filter(e=>e!=null).map(e=>e.type===m_?e:{type:m_,geometry:e})}const rd1=Object.freeze(Object.defineProperty({__proto__:null,contour:QA,geojson:JA,geopath:tC,geopoint:eC,geoshape:nC,graticule:iC,heatmap:oC,isocontour:XA,kde2d:KA,projection:zY},Symbol.toStringTag,{value:"Module"}));function sd1(t,e){var n,i=1;t==null&&(t=0),e==null&&(e=0);function o(){var u,l=n.length,a,s=0,c=0;for(u=0;u<l;++u)a=n[u],s+=a.x,c+=a.y;for(s=(s/l-t)*i,c=(c/l-e)*i,u=0;u<l;++u)a=n[u],a.x-=s,a.y-=c}return o.initialize=function(u){n=u},o.x=function(u){return arguments.length?(t=+u,o):t},o.y=function(u){return arguments.length?(e=+u,o):e},o.strength=function(u){return arguments.length?(i=+u,o):i},o}function cd1(t){const e=+this._x.call(null,t),n=+this._y.call(null,t);return LY(this.cover(e,n),e,n,t)}function LY(t,e,n,i){if(isNaN(e)||isNaN(n))return t;var o,u=t._root,l={data:i},a=t._x0,s=t._y0,c=t._x1,f=t._y1,g,p,m,v,b,x,w,S;if(!u)return t._root=l,t;for(;u.length;)if((b=e>=(g=(a+c)/2))?a=g:c=g,(x=n>=(p=(s+f)/2))?s=p:f=p,o=u,!(u=u[w=x<<1|b]))return o[w]=l,t;if(m=+t._x.call(null,u.data),v=+t._y.call(null,u.data),e===m&&n===v)return l.next=u,o?o[w]=l:t._root=l,t;do o=o?o[w]=new Array(4):t._root=new Array(4),(b=e>=(g=(a+c)/2))?a=g:c=g,(x=n>=(p=(s+f)/2))?s=p:f=p;while((w=x<<1|b)===(S=(v>=p)<<1|m>=g));return o[S]=u,o[w]=l,t}function dd1(t){var e,n,i=t.length,o,u,l=new Array(i),a=new Array(i),s=1/0,c=1/0,f=-1/0,g=-1/0;for(n=0;n<i;++n)isNaN(o=+this._x.call(null,e=t[n]))||isNaN(u=+this._y.call(null,e))||(l[n]=o,a[n]=u,o<s&&(s=o),o>f&&(f=o),u<c&&(c=u),u>g&&(g=u));if(s>f||c>g)return this;for(this.cover(s,c).cover(f,g),n=0;n<i;++n)LY(this,l[n],a[n],t[n]);return this}function fd1(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,i=this._y0,o=this._x1,u=this._y1;if(isNaN(n))o=(n=Math.floor(t))+1,u=(i=Math.floor(e))+1;else{for(var l=o-n||1,a=this._root,s,c;n>t||t>=o||i>e||e>=u;)switch(c=(e<i)<<1|t<n,s=new Array(4),s[c]=a,a=s,l*=2,c){case 0:o=n+l,u=i+l;break;case 1:n=o-l,u=i+l;break;case 2:o=n+l,i=u-l;break;case 3:n=o-l,i=u-l;break}this._root&&this._root.length&&(this._root=a)}return this._x0=n,this._y0=i,this._x1=o,this._y1=u,this}function gd1(){var t=[];return this.visit(function(e){if(!e.length)do t.push(e.data);while(e=e.next)}),t}function hd1(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function Mn(t,e,n,i,o){this.node=t,this.x0=e,this.y0=n,this.x1=i,this.y1=o}function pd1(t,e,n){var i,o=this._x0,u=this._y0,l,a,s,c,f=this._x1,g=this._y1,p=[],m=this._root,v,b;for(m&&p.push(new Mn(m,o,u,f,g)),n==null?n=1/0:(o=t-n,u=e-n,f=t+n,g=e+n,n*=n);v=p.pop();)if(!(!(m=v.node)||(l=v.x0)>f||(a=v.y0)>g||(s=v.x1)<o||(c=v.y1)<u))if(m.length){var x=(l+s)/2,w=(a+c)/2;p.push(new Mn(m[3],x,w,s,c),new Mn(m[2],l,w,x,c),new Mn(m[1],x,a,s,w),new Mn(m[0],l,a,x,w)),(b=(e>=w)<<1|t>=x)&&(v=p[p.length-1],p[p.length-1]=p[p.length-1-b],p[p.length-1-b]=v)}else{var S=t-+this._x.call(null,m.data),A=e-+this._y.call(null,m.data),C=S*S+A*A;if(C<n){var k=Math.sqrt(n=C);o=t-k,u=e-k,f=t+k,g=e+k,i=m.data}}return i}function md1(t){if(isNaN(f=+this._x.call(null,t))||isNaN(g=+this._y.call(null,t)))return this;var e,n=this._root,i,o,u,l=this._x0,a=this._y0,s=this._x1,c=this._y1,f,g,p,m,v,b,x,w;if(!n)return this;if(n.length)for(;;){if((v=f>=(p=(l+s)/2))?l=p:s=p,(b=g>=(m=(a+c)/2))?a=m:c=m,e=n,!(n=n[x=b<<1|v]))return this;if(!n.length)break;(e[x+1&3]||e[x+2&3]||e[x+3&3])&&(i=e,w=x)}for(;n.data!==t;)if(o=n,!(n=n.next))return this;return(u=n.next)&&delete n.next,o?(u?o.next=u:delete o.next,this):e?(u?e[x]=u:delete e[x],(n=e[0]||e[1]||e[2]||e[3])&&n===(e[3]||e[2]||e[1]||e[0])&&!n.length&&(i?i[w]=n:this._root=n),this):(this._root=u,this)}function yd1(t){for(var e=0,n=t.length;e<n;++e)this.remove(t[e]);return this}function vd1(){return this._root}function bd1(){var t=0;return this.visit(function(e){if(!e.length)do++t;while(e=e.next)}),t}function xd1(t){var e=[],n,i=this._root,o,u,l,a,s;for(i&&e.push(new Mn(i,this._x0,this._y0,this._x1,this._y1));n=e.pop();)if(!t(i=n.node,u=n.x0,l=n.y0,a=n.x1,s=n.y1)&&i.length){var c=(u+a)/2,f=(l+s)/2;(o=i[3])&&e.push(new Mn(o,c,f,a,s)),(o=i[2])&&e.push(new Mn(o,u,f,c,s)),(o=i[1])&&e.push(new Mn(o,c,l,a,f)),(o=i[0])&&e.push(new Mn(o,u,l,c,f))}return this}function _d1(t){var e=[],n=[],i;for(this._root&&e.push(new Mn(this._root,this._x0,this._y0,this._x1,this._y1));i=e.pop();){var o=i.node;if(o.length){var u,l=i.x0,a=i.y0,s=i.x1,c=i.y1,f=(l+s)/2,g=(a+c)/2;(u=o[0])&&e.push(new Mn(u,l,a,f,g)),(u=o[1])&&e.push(new Mn(u,f,a,s,g)),(u=o[2])&&e.push(new Mn(u,l,g,f,c)),(u=o[3])&&e.push(new Mn(u,f,g,s,c))}n.push(i)}for(;i=n.pop();)t(i.node,i.x0,i.y0,i.x1,i.y1);return this}function wd1(t){return t[0]}function Ed1(t){return arguments.length?(this._x=t,this):this._x}function Sd1(t){return t[1]}function Ad1(t){return arguments.length?(this._y=t,this):this._y}function uC(t,e,n){var i=new lC(e??wd1,n??Sd1,NaN,NaN,NaN,NaN);return t==null?i:i.addAll(t)}function lC(t,e,n,i,o,u){this._x=t,this._y=e,this._x0=n,this._y0=i,this._x1=o,this._y1=u,this._root=void 0}function WF(t){for(var e={data:t.data},n=e;t=t.next;)n=n.next={data:t.data};return e}var jn=uC.prototype=lC.prototype;jn.copy=function(){var t=new lC(this._x,this._y,this._x0,this._y0,this._x1,this._y1),e=this._root,n,i;if(!e)return t;if(!e.length)return t._root=WF(e),t;for(n=[{source:e,target:t._root=new Array(4)}];e=n.pop();)for(var o=0;o<4;++o)(i=e.source[o])&&(i.length?n.push({source:i,target:e.target[o]=new Array(4)}):e.target[o]=WF(i));return t};jn.add=cd1;jn.addAll=dd1;jn.cover=fd1;jn.data=gd1;jn.extent=hd1;jn.find=pd1;jn.remove=md1;jn.removeAll=yd1;jn.root=vd1;jn.size=bd1;jn.visit=xd1;jn.visitAfter=_d1;jn.x=Ed1;jn.y=Ad1;function Nn(t){return function(){return t}}function ou(t){return(t()-.5)*1e-6}function Cd1(t){return t.x+t.vx}function kd1(t){return t.y+t.vy}function Td1(t){var e,n,i,o=1,u=1;typeof t!="function"&&(t=Nn(t==null?1:+t));function l(){for(var c,f=e.length,g,p,m,v,b,x,w=0;w<u;++w)for(g=uC(e,Cd1,kd1).visitAfter(a),c=0;c<f;++c)p=e[c],b=n[p.index],x=b*b,m=p.x+p.vx,v=p.y+p.vy,g.visit(S);function S(A,C,k,M,T){var D=A.data,I=A.r,U=b+I;if(D){if(D.index>p.index){var B=m-D.x-D.vx,V=v-D.y-D.vy,W=B*B+V*V;W<U*U&&(B===0&&(B=ou(i),W+=B*B),V===0&&(V=ou(i),W+=V*V),W=(U-(W=Math.sqrt(W)))/W*o,p.vx+=(B*=W)*(U=(I*=I)/(x+I)),p.vy+=(V*=W)*U,D.vx-=B*(U=1-U),D.vy-=V*U)}return}return C>m+U||M<m-U||k>v+U||T<v-U}}function a(c){if(c.data)return c.r=n[c.data.index];for(var f=c.r=0;f<4;++f)c[f]&&c[f].r>c.r&&(c.r=c[f].r)}function s(){if(e){var c,f=e.length,g;for(n=new Array(f),c=0;c<f;++c)g=e[c],n[g.index]=+t(g,c,e)}}return l.initialize=function(c,f){e=c,i=f,s()},l.iterations=function(c){return arguments.length?(u=+c,l):u},l.strength=function(c){return arguments.length?(o=+c,l):o},l.radius=function(c){return arguments.length?(t=typeof c=="function"?c:Nn(+c),s(),l):t},l}function $d1(t){return t.index}function YF(t,e){var n=t.get(e);if(!n)throw new Error("node not found: "+e);return n}function Md1(t){var e=$d1,n=g,i,o=Nn(30),u,l,a,s,c,f=1;t==null&&(t=[]);function g(x){return 1/Math.min(a[x.source.index],a[x.target.index])}function p(x){for(var w=0,S=t.length;w<f;++w)for(var A=0,C,k,M,T,D,I,U;A<S;++A)C=t[A],k=C.source,M=C.target,T=M.x+M.vx-k.x-k.vx||ou(c),D=M.y+M.vy-k.y-k.vy||ou(c),I=Math.sqrt(T*T+D*D),I=(I-u[A])/I*x*i[A],T*=I,D*=I,M.vx-=T*(U=s[A]),M.vy-=D*U,k.vx+=T*(U=1-U),k.vy+=D*U}function m(){if(l){var x,w=l.length,S=t.length,A=new Map(l.map((k,M)=>[e(k,M,l),k])),C;for(x=0,a=new Array(w);x<S;++x)C=t[x],C.index=x,typeof C.source!="object"&&(C.source=YF(A,C.source)),typeof C.target!="object"&&(C.target=YF(A,C.target)),a[C.source.index]=(a[C.source.index]||0)+1,a[C.target.index]=(a[C.target.index]||0)+1;for(x=0,s=new Array(S);x<S;++x)C=t[x],s[x]=a[C.source.index]/(a[C.source.index]+a[C.target.index]);i=new Array(S),v(),u=new Array(S),b()}}function v(){if(l)for(var x=0,w=t.length;x<w;++x)i[x]=+n(t[x],x,t)}function b(){if(l)for(var x=0,w=t.length;x<w;++x)u[x]=+o(t[x],x,t)}return p.initialize=function(x,w){l=x,c=w,m()},p.links=function(x){return arguments.length?(t=x,m(),p):t},p.id=function(x){return arguments.length?(e=x,p):e},p.iterations=function(x){return arguments.length?(f=+x,p):f},p.strength=function(x){return arguments.length?(n=typeof x=="function"?x:Nn(+x),v(),p):n},p.distance=function(x){return arguments.length?(o=typeof x=="function"?x:Nn(+x),b(),p):o},p}var Nd1={value:()=>{}};function n7(){for(var t=0,e=arguments.length,n={},i;t<e;++t){if(!(i=arguments[t]+"")||i in n||/[\s.]/.test(i))throw new Error("illegal type: "+i);n[i]=[]}return new Xc(n)}function Xc(t){this._=t}function Rd1(t,e){return t.trim().split(/^|\s+/).map(function(n){var i="",o=n.indexOf(".");if(o>=0&&(i=n.slice(o+1),n=n.slice(0,o)),n&&!e.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:i}})}Xc.prototype=n7.prototype={constructor:Xc,on:function(t,e){var n=this._,i=Rd1(t+"",n),o,u=-1,l=i.length;if(arguments.length<2){for(;++u<l;)if((o=(t=i[u]).type)&&(o=Dd1(n[o],t.name)))return o;return}if(e!=null&&typeof e!="function")throw new Error("invalid callback: "+e);for(;++u<l;)if(o=(t=i[u]).type)n[o]=VF(n[o],t.name,e);else if(e==null)for(o in n)n[o]=VF(n[o],t.name,null);return this},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new Xc(t)},call:function(t,e){if((o=arguments.length-2)>0)for(var n=new Array(o),i=0,o,u;i<o;++i)n[i]=arguments[i+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=this._[t],i=0,o=u.length;i<o;++i)u[i].value.apply(e,n)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var i=this._[t],o=0,u=i.length;o<u;++o)i[o].value.apply(e,n)}};function Dd1(t,e){for(var n=0,i=t.length,o;n<i;++n)if((o=t[n]).name===e)return o.value}function VF(t,e,n){for(var i=0,o=t.length;i<o;++i)if(t[i].name===e){t[i]=Nd1,t=t.slice(0,i).concat(t.slice(i+1));break}return n!=null&&t.push({name:e,value:n}),t}var kl=0,hr=0,j9=0,jY=1e3,Ef,pr,Sf=0,J0=0,uh=0,u8=typeof performance=="object"&&performance.now?performance:Date,PY=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function lh(){return J0||(PY(Od1),J0=u8.now()+uh)}function Od1(){J0=0}function l8(){this._call=this._time=this._next=null}l8.prototype=aC.prototype={constructor:l8,restart:function(t,e,n){if(typeof t!="function")throw new TypeError("callback is not a function");n=(n==null?lh():+n)+(e==null?0:+e),!this._next&&pr!==this&&(pr?pr._next=this:Ef=this,pr=this),this._call=t,this._time=n,y_()},stop:function(){this._call&&(this._call=null,this._time=1/0,y_())}};function aC(t,e,n){var i=new l8;return i.restart(t,e,n),i}function Fd1(){lh(),++kl;for(var t=Ef,e;t;)(e=J0-t._time)>=0&&t._call.call(void 0,e),t=t._next;--kl}function XF(){J0=(Sf=u8.now())+uh,kl=hr=0;try{Fd1()}finally{kl=0,Ld1(),J0=0}}function zd1(){var t=u8.now(),e=t-Sf;e>jY&&(uh-=e,Sf=t)}function Ld1(){for(var t,e=Ef,n,i=1/0;e;)e._call?(i>e._time&&(i=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Ef=n);pr=t,y_(i)}function y_(t){if(!kl){hr&&(hr=clearTimeout(hr));var e=t-J0;e>24?(t<1/0&&(hr=setTimeout(XF,t-u8.now()-uh)),j9&&(j9=clearInterval(j9))):(j9||(Sf=u8.now(),j9=setInterval(zd1,jY)),kl=1,PY(XF))}}function KF(t,e,n){var i=new l8;return e=e==null?0:+e,i.restart(o=>{i.stop(),t(o+e)},e,n),i}function jd1(t,e,n){var i=new l8,o=e;return e==null?(i.restart(t,e,n),i):(i._restart=i.restart,i.restart=function(u,l,a){l=+l,a=a==null?lh():+a,i._restart(function s(c){c+=o,i._restart(s,o+=l,a),u(c)},l,a)},i.restart(t,e,n),i)}const Pd1=1664525,Id1=1013904223,QF=4294967296;function Bd1(){let t=1;return()=>(t=(Pd1*t+Id1)%QF)/QF}function Ud1(t){return t.x}function qd1(t){return t.y}var Hd1=10,Gd1=Math.PI*(3-Math.sqrt(5));function Wd1(t){var e,n=1,i=.001,o=1-Math.pow(i,1/300),u=0,l=.6,a=new Map,s=aC(g),c=n7("tick","end"),f=Bd1();t==null&&(t=[]);function g(){p(),c.call("tick",e),n<i&&(s.stop(),c.call("end",e))}function p(b){var x,w=t.length,S;b===void 0&&(b=1);for(var A=0;A<b;++A)for(n+=(u-n)*o,a.forEach(function(C){C(n)}),x=0;x<w;++x)S=t[x],S.fx==null?S.x+=S.vx*=l:(S.x=S.fx,S.vx=0),S.fy==null?S.y+=S.vy*=l:(S.y=S.fy,S.vy=0);return e}function m(){for(var b=0,x=t.length,w;b<x;++b){if(w=t[b],w.index=b,w.fx!=null&&(w.x=w.fx),w.fy!=null&&(w.y=w.fy),isNaN(w.x)||isNaN(w.y)){var S=Hd1*Math.sqrt(.5+b),A=b*Gd1;w.x=S*Math.cos(A),w.y=S*Math.sin(A)}(isNaN(w.vx)||isNaN(w.vy))&&(w.vx=w.vy=0)}}function v(b){return b.initialize&&b.initialize(t,f),b}return m(),e={tick:p,restart:function(){return s.restart(g),e},stop:function(){return s.stop(),e},nodes:function(b){return arguments.length?(t=b,m(),a.forEach(v),e):t},alpha:function(b){return arguments.length?(n=+b,e):n},alphaMin:function(b){return arguments.length?(i=+b,e):i},alphaDecay:function(b){return arguments.length?(o=+b,e):+o},alphaTarget:function(b){return arguments.length?(u=+b,e):u},velocityDecay:function(b){return arguments.length?(l=1-b,e):1-l},randomSource:function(b){return arguments.length?(f=b,a.forEach(v),e):f},force:function(b,x){return arguments.length>1?(x==null?a.delete(b):a.set(b,v(x)),e):a.get(b)},find:function(b,x,w){var S=0,A=t.length,C,k,M,T,D;for(w==null?w=1/0:w*=w,S=0;S<A;++S)T=t[S],C=b-T.x,k=x-T.y,M=C*C+k*k,M<w&&(D=T,w=M);return D},on:function(b,x){return arguments.length>1?(c.on(b,x),e):c.on(b)}}}function Yd1(){var t,e,n,i,o=Nn(-30),u,l=1,a=1/0,s=.81;function c(m){var v,b=t.length,x=uC(t,Ud1,qd1).visitAfter(g);for(i=m,v=0;v<b;++v)e=t[v],x.visit(p)}function f(){if(t){var m,v=t.length,b;for(u=new Array(v),m=0;m<v;++m)b=t[m],u[b.index]=+o(b,m,t)}}function g(m){var v=0,b,x,w=0,S,A,C;if(m.length){for(S=A=C=0;C<4;++C)(b=m[C])&&(x=Math.abs(b.value))&&(v+=b.value,w+=x,S+=x*b.x,A+=x*b.y);m.x=S/w,m.y=A/w}else{b=m,b.x=b.data.x,b.y=b.data.y;do v+=u[b.data.index];while(b=b.next)}m.value=v}function p(m,v,b,x){if(!m.value)return!0;var w=m.x-e.x,S=m.y-e.y,A=x-v,C=w*w+S*S;if(A*A/s<C)return C<a&&(w===0&&(w=ou(n),C+=w*w),S===0&&(S=ou(n),C+=S*S),C<l&&(C=Math.sqrt(l*C)),e.vx+=w*m.value*i/C,e.vy+=S*m.value*i/C),!0;if(m.length||C>=a)return;(m.data!==e||m.next)&&(w===0&&(w=ou(n),C+=w*w),S===0&&(S=ou(n),C+=S*S),C<l&&(C=Math.sqrt(l*C)));do m.data!==e&&(A=u[m.data.index]*i/C,e.vx+=w*A,e.vy+=S*A);while(m=m.next)}return c.initialize=function(m,v){t=m,n=v,f()},c.strength=function(m){return arguments.length?(o=typeof m=="function"?m:Nn(+m),f(),c):o},c.distanceMin=function(m){return arguments.length?(l=m*m,c):Math.sqrt(l)},c.distanceMax=function(m){return arguments.length?(a=m*m,c):Math.sqrt(a)},c.theta=function(m){return arguments.length?(s=m*m,c):Math.sqrt(s)},c}function Vd1(t){var e=Nn(.1),n,i,o;typeof t!="function"&&(t=Nn(t==null?0:+t));function u(a){for(var s=0,c=n.length,f;s<c;++s)f=n[s],f.vx+=(o[s]-f.x)*i[s]*a}function l(){if(n){var a,s=n.length;for(i=new Array(s),o=new Array(s),a=0;a<s;++a)i[a]=isNaN(o[a]=+t(n[a],a,n))?0:+e(n[a],a,n)}}return u.initialize=function(a){n=a,l()},u.strength=function(a){return arguments.length?(e=typeof a=="function"?a:Nn(+a),l(),u):e},u.x=function(a){return arguments.length?(t=typeof a=="function"?a:Nn(+a),l(),u):t},u}function Xd1(t){var e=Nn(.1),n,i,o;typeof t!="function"&&(t=Nn(t==null?0:+t));function u(a){for(var s=0,c=n.length,f;s<c;++s)f=n[s],f.vy+=(o[s]-f.y)*i[s]*a}function l(){if(n){var a,s=n.length;for(i=new Array(s),o=new Array(s),a=0;a<s;++a)i[a]=isNaN(o[a]=+t(n[a],a,n))?0:+e(n[a],a,n)}}return u.initialize=function(a){n=a,l()},u.strength=function(a){return arguments.length?(e=typeof a=="function"?a:Nn(+a),l(),u):e},u.y=function(a){return arguments.length?(t=typeof a=="function"?a:Nn(+a),l(),u):t},u}const ZF={center:sd1,collide:Td1,nbody:Yd1,link:Md1,x:Vd1,y:Xd1},mr="forces",v_=["alpha","alphaMin","alphaTarget","velocityDecay","forces"],Kd1=["static","iterations"],IY=["x","y","vx","vy"];function rC(t){i1.call(this,null,t)}rC.Definition={type:"Force",metadata:{modifies:!0},params:[{name:"static",type:"boolean",default:!1},{name:"restart",type:"boolean",default:!1},{name:"iterations",type:"number",default:300},{name:"alpha",type:"number",default:1},{name:"alphaMin",type:"number",default:.001},{name:"alphaTarget",type:"number",default:0},{name:"velocityDecay",type:"number",default:.4},{name:"forces",type:"param",array:!0,params:[{key:{force:"center"},params:[{name:"x",type:"number",default:0},{name:"y",type:"number",default:0}]},{key:{force:"collide"},params:[{name:"radius",type:"number",expr:!0},{name:"strength",type:"number",default:.7},{name:"iterations",type:"number",default:1}]},{key:{force:"nbody"},params:[{name:"strength",type:"number",default:-30,expr:!0},{name:"theta",type:"number",default:.9},{name:"distanceMin",type:"number",default:1},{name:"distanceMax",type:"number"}]},{key:{force:"link"},params:[{name:"links",type:"data"},{name:"id",type:"field"},{name:"distance",type:"number",default:30,expr:!0},{name:"strength",type:"number",expr:!0},{name:"iterations",type:"number",default:1}]},{key:{force:"x"},params:[{name:"strength",type:"number",default:.1},{name:"x",type:"field"}]},{key:{force:"y"},params:[{name:"strength",type:"number",default:.1},{name:"y",type:"field"}]}]},{name:"as",type:"string",array:!0,modify:!1,default:IY}]};b1(rC,i1,{transform(t,e){var n=this.value,i=e.changed(e.ADD_REM),o=t.modified(v_),u=t.iterations||300;if(n?(i&&(e.modifies("index"),n.nodes(e.source)),(o||e.changed(e.MOD))&&BY(n,t,0,e)):(this.value=n=Zd1(e.source,t),n.on("tick",Qd1(e.dataflow,this)),t.static||(i=!0,n.tick()),e.modifies("index")),o||i||t.modified(Kd1)||e.changed()&&t.restart){if(n.alpha(Math.max(n.alpha(),t.alpha||1)).alphaDecay(1-Math.pow(n.alphaMin(),1/u)),t.static)for(n.stop();--u>=0;)n.tick();else if(n.stopped()&&n.restart(),!i)return e.StopPropagation}return this.finish(t,e)},finish(t,e){const n=e.dataflow;for(let a=this._argops,s=0,c=a.length,f;s<c;++s)if(f=a[s],!(f.name!==mr||f.op._argval.force!=="link")){for(var i=f.op._argops,o=0,u=i.length,l;o<u;++o)if(i[o].name==="links"&&(l=i[o].op.source)){n.pulse(l,n.changeset().reflow());break}}return e.reflow(t.modified()).modifies(IY)}});function Qd1(t,e){return()=>t.touch(e).run()}function Zd1(t,e){const n=Wd1(t),i=n.stop,o=n.restart;let u=!1;return n.stopped=()=>u,n.restart=()=>(u=!1,o()),n.stop=()=>(u=!0,i()),BY(n,e,!0).on("end",()=>u=!0)}function BY(t,e,n,i){var o=S1(e.forces),u,l,a,s;for(u=0,l=v_.length;u<l;++u)a=v_[u],a!==mr&&e.modified(a)&&t[a](e[a]);for(u=0,l=o.length;u<l;++u)s=mr+u,a=n||e.modified(mr,u)?tf1(o[u]):i&&Jd1(o[u],i)?t.force(s):null,a&&t.force(s,a);for(l=t.numForces||0;u<l;++u)t.force(mr+u,null);return t.numForces=o.length,t}function Jd1(t,e){var n,i;for(n in t)if(Q1(i=t[n])&&e.modified(hn(i)))return 1;return 0}function tf1(t){var e,n;A1(ZF,t.force)||u1("Unrecognized force: "+t.force),e=ZF[t.force]();for(n in t)Q1(e[n])&&ef1(e[n],t[n],t);return e}function ef1(t,e,n){t(Q1(e)?i=>e(i,n):e)}const nf1=Object.freeze(Object.defineProperty({__proto__:null,force:rC},Symbol.toStringTag,{value:"Module"}));function if1(t,e){return t.parent===e.parent?1:2}function of1(t){return t.reduce(uf1,0)/t.length}function uf1(t,e){return t+e.x}function lf1(t){return 1+t.reduce(af1,0)}function af1(t,e){return Math.max(t,e.y)}function rf1(t){for(var e;e=t.children;)t=e[0];return t}function sf1(t){for(var e;e=t.children;)t=e[e.length-1];return t}function cf1(){var t=if1,e=1,n=1,i=!1;function o(u){var l,a=0;u.eachAfter(function(p){var m=p.children;m?(p.x=of1(m),p.y=lf1(m)):(p.x=l?a+=t(p,l):0,p.y=0,l=p)});var s=rf1(u),c=sf1(u),f=s.x-t(s,c)/2,g=c.x+t(c,s)/2;return u.eachAfter(i?function(p){p.x=(p.x-u.x)*e,p.y=(u.y-p.y)*n}:function(p){p.x=(p.x-f)/(g-f)*e,p.y=(1-(u.y?p.y/u.y:1))*n})}return o.separation=function(u){return arguments.length?(t=u,o):t},o.size=function(u){return arguments.length?(i=!1,e=+u[0],n=+u[1],o):i?null:[e,n]},o.nodeSize=function(u){return arguments.length?(i=!0,e=+u[0],n=+u[1],o):i?[e,n]:null},o}function df1(t){var e=0,n=t.children,i=n&&n.length;if(!i)e=1;else for(;--i>=0;)e+=n[i].value;t.value=e}function ff1(){return this.eachAfter(df1)}function gf1(t,e){let n=-1;for(const i of this)t.call(e,i,++n,this);return this}function hf1(t,e){for(var n=this,i=[n],o,u,l=-1;n=i.pop();)if(t.call(e,n,++l,this),o=n.children)for(u=o.length-1;u>=0;--u)i.push(o[u]);return this}function pf1(t,e){for(var n=this,i=[n],o=[],u,l,a,s=-1;n=i.pop();)if(o.push(n),u=n.children)for(l=0,a=u.length;l<a;++l)i.push(u[l]);for(;n=o.pop();)t.call(e,n,++s,this);return this}function mf1(t,e){let n=-1;for(const i of this)if(t.call(e,i,++n,this))return i}function yf1(t){return this.eachAfter(function(e){for(var n=+t(e.data)||0,i=e.children,o=i&&i.length;--o>=0;)n+=i[o].value;e.value=n})}function vf1(t){return this.eachBefore(function(e){e.children&&e.children.sort(t)})}function bf1(t){for(var e=this,n=xf1(e,t),i=[e];e!==n;)e=e.parent,i.push(e);for(var o=i.length;t!==n;)i.splice(o,0,t),t=t.parent;return i}function xf1(t,e){if(t===e)return t;var n=t.ancestors(),i=e.ancestors(),o=null;for(t=n.pop(),e=i.pop();t===e;)o=t,t=n.pop(),e=i.pop();return o}function _f1(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e}function wf1(){return Array.from(this)}function Ef1(){var t=[];return this.eachBefore(function(e){e.children||t.push(e)}),t}function Sf1(){var t=this,e=[];return t.each(function(n){n!==t&&e.push({source:n.parent,target:n})}),e}function*Af1(){var t=this,e,n=[t],i,o,u;do for(e=n.reverse(),n=[];t=e.pop();)if(yield t,i=t.children)for(o=0,u=i.length;o<u;++o)n.push(i[o]);while(n.length)}function sC(t,e){t instanceof Map?(t=[void 0,t],e===void 0&&(e=Tf1)):e===void 0&&(e=kf1);for(var n=new Tl(t),i,o=[n],u,l,a,s;i=o.pop();)if((l=e(i.data))&&(s=(l=Array.from(l)).length))for(i.children=l,a=s-1;a>=0;--a)o.push(u=l[a]=new Tl(l[a])),u.parent=i,u.depth=i.depth+1;return n.eachBefore(UY)}function Cf1(){return sC(this).eachBefore($f1)}function kf1(t){return t.children}function Tf1(t){return Array.isArray(t)?t[1]:null}function $f1(t){t.data.value!==void 0&&(t.value=t.data.value),t.data=t.data.data}function UY(t){var e=0;do t.height=e;while((t=t.parent)&&t.height<++e)}function Tl(t){this.data=t,this.depth=this.height=0,this.parent=null}Tl.prototype=sC.prototype={constructor:Tl,count:ff1,each:gf1,eachAfter:pf1,eachBefore:hf1,find:mf1,sum:yf1,sort:vf1,path:bf1,ancestors:_f1,descendants:wf1,leaves:Ef1,links:Sf1,copy:Cf1,[Symbol.iterator]:Af1};function Kc(t){return t==null?null:qY(t)}function qY(t){if(typeof t!="function")throw new Error;return t}function C0(){return 0}function j5(t){return function(){return t}}const Mf1=1664525,Nf1=1013904223,JF=4294967296;function Rf1(){let t=1;return()=>(t=(Mf1*t+Nf1)%JF)/JF}function Df1(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function Of1(t,e){let n=t.length,i,o;for(;n;)o=e()*n--|0,i=t[n],t[n]=t[o],t[o]=i;return t}function Ff1(t,e){for(var n=0,i=(t=Of1(Array.from(t),e)).length,o=[],u,l;n<i;)u=t[n],l&&HY(l,u)?++n:(l=Lf1(o=zf1(o,u)),n=0);return l}function zf1(t,e){var n,i;if(zv(e,t))return[e];for(n=0;n<t.length;++n)if(dc(e,t[n])&&zv(yr(t[n],e),t))return[t[n],e];for(n=0;n<t.length-1;++n)for(i=n+1;i<t.length;++i)if(dc(yr(t[n],t[i]),e)&&dc(yr(t[n],e),t[i])&&dc(yr(t[i],e),t[n])&&zv(GY(t[n],t[i],e),t))return[t[n],t[i],e];throw new Error}function dc(t,e){var n=t.r-e.r,i=e.x-t.x,o=e.y-t.y;return n<0||n*n<i*i+o*o}function HY(t,e){var n=t.r-e.r+Math.max(t.r,e.r,1)*1e-9,i=e.x-t.x,o=e.y-t.y;return n>0&&n*n>i*i+o*o}function zv(t,e){for(var n=0;n<e.length;++n)if(!HY(t,e[n]))return!1;return!0}function Lf1(t){switch(t.length){case 1:return jf1(t[0]);case 2:return yr(t[0],t[1]);case 3:return GY(t[0],t[1],t[2])}}function jf1(t){return{x:t.x,y:t.y,r:t.r}}function yr(t,e){var n=t.x,i=t.y,o=t.r,u=e.x,l=e.y,a=e.r,s=u-n,c=l-i,f=a-o,g=Math.sqrt(s*s+c*c);return{x:(n+u+s/g*f)/2,y:(i+l+c/g*f)/2,r:(g+o+a)/2}}function GY(t,e,n){var i=t.x,o=t.y,u=t.r,l=e.x,a=e.y,s=e.r,c=n.x,f=n.y,g=n.r,p=i-l,m=i-c,v=o-a,b=o-f,x=s-u,w=g-u,S=i*i+o*o-u*u,A=S-l*l-a*a+s*s,C=S-c*c-f*f+g*g,k=m*v-p*b,M=(v*C-b*A)/(k*2)-i,T=(b*x-v*w)/k,D=(m*A-p*C)/(k*2)-o,I=(p*w-m*x)/k,U=T*T+I*I-1,B=2*(u+M*T+D*I),V=M*M+D*D-u*u,W=-(Math.abs(U)>1e-6?(B+Math.sqrt(B*B-4*U*V))/(2*U):V/B);return{x:i+M+T*W,y:o+D+I*W,r:W}}function tz(t,e,n){var i=t.x-e.x,o,u,l=t.y-e.y,a,s,c=i*i+l*l;c?(u=e.r+n.r,u*=u,s=t.r+n.r,s*=s,u>s?(o=(c+s-u)/(2*c),a=Math.sqrt(Math.max(0,s/c-o*o)),n.x=t.x-o*i-a*l,n.y=t.y-o*l+a*i):(o=(c+u-s)/(2*c),a=Math.sqrt(Math.max(0,u/c-o*o)),n.x=e.x+o*i-a*l,n.y=e.y+o*l+a*i)):(n.x=e.x+n.r,n.y=e.y)}function ez(t,e){var n=t.r+e.r-1e-6,i=e.x-t.x,o=e.y-t.y;return n>0&&n*n>i*i+o*o}function nz(t){var e=t._,n=t.next._,i=e.r+n.r,o=(e.x*n.r+n.x*e.r)/i,u=(e.y*n.r+n.y*e.r)/i;return o*o+u*u}function fc(t){this._=t,this.next=null,this.previous=null}function Pf1(t,e){if(!(u=(t=Df1(t)).length))return 0;var n,i,o,u,l,a,s,c,f,g,p;if(n=t[0],n.x=0,n.y=0,!(u>1))return n.r;if(i=t[1],n.x=-i.r,i.x=n.r,i.y=0,!(u>2))return n.r+i.r;tz(i,n,o=t[2]),n=new fc(n),i=new fc(i),o=new fc(o),n.next=o.previous=i,i.next=n.previous=o,o.next=i.previous=n;t:for(s=3;s<u;++s){tz(n._,i._,o=t[s]),o=new fc(o),c=i.next,f=n.previous,g=i._.r,p=n._.r;do if(g<=p){if(ez(c._,o._)){i=c,n.next=i,i.previous=n,--s;continue t}g+=c._.r,c=c.next}else{if(ez(f._,o._)){n=f,n.next=i,i.previous=n,--s;continue t}p+=f._.r,f=f.previous}while(c!==f.next);for(o.previous=n,o.next=i,n.next=i.previous=i=o,l=nz(n);(o=o.next)!==i;)(a=nz(o))<l&&(n=o,l=a);i=n.next}for(n=[i._],o=i;(o=o.next)!==i;)n.push(o._);for(o=Ff1(n,e),s=0;s<u;++s)n=t[s],n.x-=o.x,n.y-=o.y;return o.r}function If1(t){return Math.sqrt(t.value)}function Bf1(){var t=null,e=1,n=1,i=C0;function o(u){const l=Rf1();return u.x=e/2,u.y=n/2,t?u.eachBefore(iz(t)).eachAfter(Lv(i,.5,l)).eachBefore(oz(1)):u.eachBefore(iz(If1)).eachAfter(Lv(C0,1,l)).eachAfter(Lv(i,u.r/Math.min(e,n),l)).eachBefore(oz(Math.min(e,n)/(2*u.r))),u}return o.radius=function(u){return arguments.length?(t=Kc(u),o):t},o.size=function(u){return arguments.length?(e=+u[0],n=+u[1],o):[e,n]},o.padding=function(u){return arguments.length?(i=typeof u=="function"?u:j5(+u),o):i},o}function iz(t){return function(e){e.children||(e.r=Math.max(0,+t(e)||0))}}function Lv(t,e,n){return function(i){if(o=i.children){var o,u,l=o.length,a=t(i)*e||0,s;if(a)for(u=0;u<l;++u)o[u].r+=a;if(s=Pf1(o,n),a)for(u=0;u<l;++u)o[u].r-=a;i.r=s+a}}}function oz(t){return function(e){var n=e.parent;e.r*=t,n&&(e.x=n.x+t*e.x,e.y=n.y+t*e.y)}}function WY(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}function i7(t,e,n,i,o){for(var u=t.children,l,a=-1,s=u.length,c=t.value&&(i-e)/t.value;++a<s;)l=u[a],l.y0=n,l.y1=o,l.x0=e,l.x1=e+=l.value*c}function Uf1(){var t=1,e=1,n=0,i=!1;function o(l){var a=l.height+1;return l.x0=l.y0=n,l.x1=t,l.y1=e/a,l.eachBefore(u(e,a)),i&&l.eachBefore(WY),l}function u(l,a){return function(s){s.children&&i7(s,s.x0,l*(s.depth+1)/a,s.x1,l*(s.depth+2)/a);var c=s.x0,f=s.y0,g=s.x1-n,p=s.y1-n;g<c&&(c=g=(c+g)/2),p<f&&(f=p=(f+p)/2),s.x0=c,s.y0=f,s.x1=g,s.y1=p}}return o.round=function(l){return arguments.length?(i=!!l,o):i},o.size=function(l){return arguments.length?(t=+l[0],e=+l[1],o):[t,e]},o.padding=function(l){return arguments.length?(n=+l,o):n},o}var qf1={depth:-1},uz={},jv={};function Hf1(t){return t.id}function Gf1(t){return t.parentId}function lz(){var t=Hf1,e=Gf1,n;function i(o){var u=Array.from(o),l=t,a=e,s,c,f,g,p,m,v,b,x=new Map;if(n!=null){const w=u.map((C,k)=>Wf1(n(C,k,o))),S=w.map(az),A=new Set(w).add("");for(const C of S)A.has(C)||(A.add(C),w.push(C),S.push(az(C)),u.push(jv));l=(C,k)=>w[k],a=(C,k)=>S[k]}for(f=0,s=u.length;f<s;++f)c=u[f],m=u[f]=new Tl(c),(v=l(c,f,o))!=null&&(v+="")&&(b=m.id=v,x.set(b,x.has(b)?uz:m)),(v=a(c,f,o))!=null&&(v+="")&&(m.parent=v);for(f=0;f<s;++f)if(m=u[f],v=m.parent){if(p=x.get(v),!p)throw new Error("missing: "+v);if(p===uz)throw new Error("ambiguous: "+v);p.children?p.children.push(m):p.children=[m],m.parent=p}else{if(g)throw new Error("multiple roots");g=m}if(!g)throw new Error("no root");if(n!=null){for(;g.data===jv&&g.children.length===1;)g=g.children[0],--s;for(let w=u.length-1;w>=0&&(m=u[w],m.data===jv);--w)m.data=null}if(g.parent=qf1,g.eachBefore(function(w){w.depth=w.parent.depth+1,--s}).eachBefore(UY),g.parent=null,s>0)throw new Error("cycle");return g}return i.id=function(o){return arguments.length?(t=Kc(o),i):t},i.parentId=function(o){return arguments.length?(e=Kc(o),i):e},i.path=function(o){return arguments.length?(n=Kc(o),i):n},i}function Wf1(t){t=`${t}`;let e=t.length;return b_(t,e-1)&&!b_(t,e-2)&&(t=t.slice(0,-1)),t[0]==="/"?t:`/${t}`}function az(t){let e=t.length;if(e<2)return"";for(;--e>1&&!b_(t,e););return t.slice(0,e)}function b_(t,e){if(t[e]==="/"){let n=0;for(;e>0&&t[--e]==="\\";)++n;if((n&1)===0)return!0}return!1}function Yf1(t,e){return t.parent===e.parent?1:2}function Pv(t){var e=t.children;return e?e[0]:t.t}function Iv(t){var e=t.children;return e?e[e.length-1]:t.t}function Vf1(t,e,n){var i=n/(e.i-t.i);e.c-=i,e.s+=n,t.c+=i,e.z+=n,e.m+=n}function Xf1(t){for(var e=0,n=0,i=t.children,o=i.length,u;--o>=0;)u=i[o],u.z+=e,u.m+=e,e+=u.s+(n+=u.c)}function Kf1(t,e,n){return t.a.parent===e.parent?t.a:n}function Qc(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}Qc.prototype=Object.create(Tl.prototype);function Qf1(t){for(var e=new Qc(t,0),n,i=[e],o,u,l,a;n=i.pop();)if(u=n._.children)for(n.children=new Array(a=u.length),l=a-1;l>=0;--l)i.push(o=n.children[l]=new Qc(u[l],l)),o.parent=n;return(e.parent=new Qc(null,0)).children=[e],e}function Zf1(){var t=Yf1,e=1,n=1,i=null;function o(c){var f=Qf1(c);if(f.eachAfter(u),f.parent.m=-f.z,f.eachBefore(l),i)c.eachBefore(s);else{var g=c,p=c,m=c;c.eachBefore(function(S){S.x<g.x&&(g=S),S.x>p.x&&(p=S),S.depth>m.depth&&(m=S)});var v=g===p?1:t(g,p)/2,b=v-g.x,x=e/(p.x+v+b),w=n/(m.depth||1);c.eachBefore(function(S){S.x=(S.x+b)*x,S.y=S.depth*w})}return c}function u(c){var f=c.children,g=c.parent.children,p=c.i?g[c.i-1]:null;if(f){Xf1(c);var m=(f[0].z+f[f.length-1].z)/2;p?(c.z=p.z+t(c._,p._),c.m=c.z-m):c.z=m}else p&&(c.z=p.z+t(c._,p._));c.parent.A=a(c,p,c.parent.A||g[0])}function l(c){c._.x=c.z+c.parent.m,c.m+=c.parent.m}function a(c,f,g){if(f){for(var p=c,m=c,v=f,b=p.parent.children[0],x=p.m,w=m.m,S=v.m,A=b.m,C;v=Iv(v),p=Pv(p),v&&p;)b=Pv(b),m=Iv(m),m.a=c,C=v.z+S-p.z-x+t(v._,p._),C>0&&(Vf1(Kf1(v,c,g),c,C),x+=C,w+=C),S+=v.m,x+=p.m,A+=b.m,w+=m.m;v&&!Iv(m)&&(m.t=v,m.m+=S-w),p&&!Pv(b)&&(b.t=p,b.m+=x-A,g=c)}return g}function s(c){c.x*=e,c.y=c.depth*n}return o.separation=function(c){return arguments.length?(t=c,o):t},o.size=function(c){return arguments.length?(i=!1,e=+c[0],n=+c[1],o):i?null:[e,n]},o.nodeSize=function(c){return arguments.length?(i=!0,e=+c[0],n=+c[1],o):i?[e,n]:null},o}function ah(t,e,n,i,o){for(var u=t.children,l,a=-1,s=u.length,c=t.value&&(o-n)/t.value;++a<s;)l=u[a],l.x0=e,l.x1=i,l.y0=n,l.y1=n+=l.value*c}var YY=(1+Math.sqrt(5))/2;function VY(t,e,n,i,o,u){for(var l=[],a=e.children,s,c,f=0,g=0,p=a.length,m,v,b=e.value,x,w,S,A,C,k,M;f<p;){m=o-n,v=u-i;do x=a[g++].value;while(!x&&g<p);for(w=S=x,k=Math.max(v/m,m/v)/(b*t),M=x*x*k,C=Math.max(S/M,M/w);g<p;++g){if(x+=c=a[g].value,c<w&&(w=c),c>S&&(S=c),M=x*x*k,A=Math.max(S/M,M/w),A>C){x-=c;break}C=A}l.push(s={value:x,dice:m<v,children:a.slice(f,g)}),s.dice?i7(s,n,i,o,b?i+=v*x/b:u):ah(s,n,i,b?n+=m*x/b:o,u),b-=x,f=g}return l}const XY=(function t(e){function n(i,o,u,l,a){VY(e,i,o,u,l,a)}return n.ratio=function(i){return t((i=+i)>1?i:1)},n})(YY);function Jf1(){var t=XY,e=!1,n=1,i=1,o=[0],u=C0,l=C0,a=C0,s=C0,c=C0;function f(p){return p.x0=p.y0=0,p.x1=n,p.y1=i,p.eachBefore(g),o=[0],e&&p.eachBefore(WY),p}function g(p){var m=o[p.depth],v=p.x0+m,b=p.y0+m,x=p.x1-m,w=p.y1-m;x<v&&(v=x=(v+x)/2),w<b&&(b=w=(b+w)/2),p.x0=v,p.y0=b,p.x1=x,p.y1=w,p.children&&(m=o[p.depth+1]=u(p)/2,v+=c(p)-m,b+=l(p)-m,x-=a(p)-m,w-=s(p)-m,x<v&&(v=x=(v+x)/2),w<b&&(b=w=(b+w)/2),t(p,v,b,x,w))}return f.round=function(p){return arguments.length?(e=!!p,f):e},f.size=function(p){return arguments.length?(n=+p[0],i=+p[1],f):[n,i]},f.tile=function(p){return arguments.length?(t=qY(p),f):t},f.padding=function(p){return arguments.length?f.paddingInner(p).paddingOuter(p):f.paddingInner()},f.paddingInner=function(p){return arguments.length?(u=typeof p=="function"?p:j5(+p),f):u},f.paddingOuter=function(p){return arguments.length?f.paddingTop(p).paddingRight(p).paddingBottom(p).paddingLeft(p):f.paddingTop()},f.paddingTop=function(p){return arguments.length?(l=typeof p=="function"?p:j5(+p),f):l},f.paddingRight=function(p){return arguments.length?(a=typeof p=="function"?p:j5(+p),f):a},f.paddingBottom=function(p){return arguments.length?(s=typeof p=="function"?p:j5(+p),f):s},f.paddingLeft=function(p){return arguments.length?(c=typeof p=="function"?p:j5(+p),f):c},f}function tg1(t,e,n,i,o){var u=t.children,l,a=u.length,s,c=new Array(a+1);for(c[0]=s=l=0;l<a;++l)c[l+1]=s+=u[l].value;f(0,a,t.value,e,n,i,o);function f(g,p,m,v,b,x,w){if(g>=p-1){var S=u[g];S.x0=v,S.y0=b,S.x1=x,S.y1=w;return}for(var A=c[g],C=m/2+A,k=g+1,M=p-1;k<M;){var T=k+M>>>1;c[T]<C?k=T+1:M=T}C-c[k-1]<c[k]-C&&g+1<k&&--k;var D=c[k]-A,I=m-D;if(x-v>w-b){var U=m?(v*I+x*D)/m:x;f(g,k,D,v,b,U,w),f(k,p,I,U,b,x,w)}else{var B=m?(b*I+w*D)/m:w;f(g,k,D,v,b,x,B),f(k,p,I,v,B,x,w)}}}function eg1(t,e,n,i,o){(t.depth&1?ah:i7)(t,e,n,i,o)}const ng1=(function t(e){function n(i,o,u,l,a){if((s=i._squarify)&&s.ratio===e)for(var s,c,f,g,p=-1,m,v=s.length,b=i.value;++p<v;){for(c=s[p],f=c.children,g=c.value=0,m=f.length;g<m;++g)c.value+=f[g].value;c.dice?i7(c,o,u,l,b?u+=(a-u)*c.value/b:a):ah(c,o,u,b?o+=(l-o)*c.value/b:l,a),b-=c.value}else i._squarify=s=VY(e,i,o,u,l,a),s.ratio=e}return n.ratio=function(i){return t((i=+i)>1?i:1)},n})(YY);function x_(t,e,n){const i={};return t.each(o=>{const u=o.data;n(u)&&(i[e(u)]=o)}),t.lookup=i,t}function cC(t){i1.call(this,null,t)}cC.Definition={type:"Nest",metadata:{treesource:!0,changes:!0},params:[{name:"keys",type:"field",array:!0},{name:"generate",type:"boolean"}]};const ig1=t=>t.values;b1(cC,i1,{transform(t,e){e.source||u1("Nest transform requires an upstream data source.");var n=t.generate,i=t.modified(),o=e.clone(),u=this.value;return(!u||i||e.changed())&&(u&&u.each(l=>{l.children&&xg(l.data)&&o.rem.push(l.data)}),this.value=u=sC({values:S1(t.keys).reduce((l,a)=>(l.key(a),l),og1()).entries(o.source)},ig1),n&&u.each(l=>{l.children&&(l=vt(l.data),o.add.push(l),o.source.push(l))}),x_(u,z1,z1)),o.source.root=u,o}});function og1(){const t=[],e={entries:o=>i(n(o,0),0),key:o=>(t.push(o),e)};function n(o,u){if(u>=t.length)return o;const l=o.length,a=t[u++],s={},c={};let f=-1,g,p,m;for(;++f<l;)g=a(p=o[f])+"",(m=s[g])?m.push(p):s[g]=[p];for(g in s)c[g]=n(s[g],u);return c}function i(o,u){if(++u>t.length)return o;const l=[];for(const a in o)l.push({key:a,values:i(o[a],u)});return l}return e}function a4(t){i1.call(this,null,t)}const ug1=(t,e)=>t.parent===e.parent?1:2;b1(a4,i1,{transform(t,e){(!e.source||!e.source.root)&&u1(this.constructor.name+" transform requires a backing tree data source.");const n=this.layout(t.method),i=this.fields,o=e.source.root,u=t.as||i;t.field?o.sum(t.field):o.count(),t.sort&&o.sort(b6(t.sort,l=>l.data)),lg1(n,this.params,t),n.separation&&n.separation(t.separation!==!1?ug1:Xl);try{this.value=n(o)}catch(l){u1(l)}return o.each(l=>ag1(l,i,u)),e.reflow(t.modified()).modifies(u).modifies("leaf")}});function lg1(t,e,n){for(let i,o=0,u=e.length;o<u;++o)i=e[o],i in n&&t[i](n[i])}function ag1(t,e,n){const i=t.data,o=e.length-1;for(let u=0;u<o;++u)i[n[u]]=t[e[u]];i[n[o]]=t.children?t.children.length:0}const __=["x","y","r","depth","children"];function dC(t){a4.call(this,t)}dC.Definition={type:"Pack",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"radius",type:"field",default:null},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:__.length,default:__}]};b1(dC,a4,{layout:Bf1,params:["radius","size","padding"],fields:__});const w_=["x0","y0","x1","y1","depth","children"];function fC(t){a4.call(this,t)}fC.Definition={type:"Partition",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"padding",type:"number",default:0},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:w_.length,default:w_}]};b1(fC,a4,{layout:Uf1,params:["size","round","padding"],fields:w_});function gC(t){i1.call(this,null,t)}gC.Definition={type:"Stratify",metadata:{treesource:!0},params:[{name:"key",type:"field",required:!0},{name:"parentKey",type:"field",required:!0}]};b1(gC,i1,{transform(t,e){e.source||u1("Stratify transform requires an upstream data source.");let n=this.value;const i=t.modified(),o=e.fork(e.ALL).materialize(e.SOURCE),u=!n||i||e.changed(e.ADD_REM)||e.modified(t.key.fields)||e.modified(t.parentKey.fields);return o.source=o.source.slice(),u&&(n=o.source.length?x_(lz().id(t.key).parentId(t.parentKey)(o.source),t.key,o3):x_(lz()([{}]),t.key,t.key)),o.source.root=this.value=n,o}});const rz={tidy:Zf1,cluster:cf1},E_=["x","y","depth","children"];function hC(t){a4.call(this,t)}hC.Definition={type:"Tree",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"tidy",values:["tidy","cluster"]},{name:"size",type:"number",array:!0,length:2},{name:"nodeSize",type:"number",array:!0,length:2},{name:"separation",type:"boolean",default:!0},{name:"as",type:"string",array:!0,length:E_.length,default:E_}]};b1(hC,a4,{layout(t){const e=t||"tidy";if(A1(rz,e))return rz[e]();u1("Unrecognized Tree layout method: "+e)},params:["size","nodeSize"],fields:E_});function pC(t){i1.call(this,[],t)}pC.Definition={type:"TreeLinks",metadata:{tree:!0,generates:!0,changes:!0},params:[]};b1(pC,i1,{transform(t,e){const n=this.value,i=e.source&&e.source.root,o=e.fork(e.NO_SOURCE),u={};return i||u1("TreeLinks transform requires a tree data source."),e.changed(e.ADD_REM)?(o.rem=n,e.visit(e.SOURCE,l=>u[z1(l)]=1),i.each(l=>{const a=l.data,s=l.parent&&l.parent.data;s&&u[z1(a)]&&u[z1(s)]&&o.add.push(vt({source:s,target:a}))}),this.value=o.add):e.changed(e.MOD)&&(e.visit(e.MOD,l=>u[z1(l)]=1),n.forEach(l=>{(u[z1(l.source)]||u[z1(l.target)])&&o.mod.push(l)})),o}});const sz={binary:tg1,dice:i7,slice:ah,slicedice:eg1,squarify:XY,resquarify:ng1},S_=["x0","y0","x1","y1","depth","children"];function mC(t){a4.call(this,t)}mC.Definition={type:"Treemap",metadata:{tree:!0,modifies:!0},params:[{name:"field",type:"field"},{name:"sort",type:"compare"},{name:"method",type:"enum",default:"squarify",values:["squarify","resquarify","binary","dice","slice","slicedice"]},{name:"padding",type:"number",default:0},{name:"paddingInner",type:"number",default:0},{name:"paddingOuter",type:"number",default:0},{name:"paddingTop",type:"number",default:0},{name:"paddingRight",type:"number",default:0},{name:"paddingBottom",type:"number",default:0},{name:"paddingLeft",type:"number",default:0},{name:"ratio",type:"number",default:1.618033988749895},{name:"round",type:"boolean",default:!1},{name:"size",type:"number",array:!0,length:2},{name:"as",type:"string",array:!0,length:S_.length,default:S_}]};b1(mC,a4,{layout(){const t=Jf1();return t.ratio=e=>{const n=t.tile();n.ratio&&t.tile(n.ratio(e))},t.method=e=>{A1(sz,e)?t.tile(sz[e]):u1("Unrecognized Treemap layout method: "+e)},t},params:["method","ratio","size","round","padding","paddingInner","paddingOuter","paddingTop","paddingRight","paddingBottom","paddingLeft"],fields:S_});const rg1=Object.freeze(Object.defineProperty({__proto__:null,nest:cC,pack:dC,partition:fC,stratify:gC,tree:hC,treelinks:pC,treemap:mC},Symbol.toStringTag,{value:"Module"})),Bv=4278190080;function sg1(t,e){const n=t.bitmap();return(e||[]).forEach(i=>n.set(t(i.boundary[0]),t(i.boundary[3]))),[n,void 0]}function cg1(t,e,n,i,o){const u=t.width,l=t.height,a=i||o,s=cu(u,l).getContext("2d"),c=cu(u,l).getContext("2d"),f=a&&cu(u,l).getContext("2d");n.forEach(D=>Zc(s,D,!1)),Zc(c,e,!1),a&&Zc(f,e,!0);const g=Uv(s,u,l),p=Uv(c,u,l),m=a&&Uv(f,u,l),v=t.bitmap(),b=a&&t.bitmap();let x,w,S,A,C,k,M,T;for(w=0;w<l;++w)for(x=0;x<u;++x)C=w*u+x,k=g[C]&Bv,T=p[C]&Bv,M=a&&m[C]&Bv,(k||M||T)&&(S=t(x),A=t(w),!o&&(k||T)&&v.set(S,A),a&&(k||M)&&b.set(S,A));return[v,b]}function Uv(t,e,n){return new Uint32Array(t.getImageData(0,0,e,n).data.buffer)}function Zc(t,e,n){if(!e.length)return;const i=e[0].mark.marktype;i==="group"?e.forEach(o=>{o.items.forEach(u=>Zc(t,u.items,n))}):$2[i].draw(t,{items:n?e.map(dg1):e})}function dg1(t){const e=_g(t,{});return e.stroke&&e.strokeOpacity!==0||e.fill&&e.fillOpacity!==0?{...e,strokeOpacity:1,stroke:"#000",fillOpacity:0}:e}const mo=5,wn=31,a8=32,Y4=new Uint32Array(a8+1),E3=new Uint32Array(a8+1);E3[0]=0;Y4[0]=~E3[0];for(let t=1;t<=a8;++t)E3[t]=E3[t-1]<<1|1,Y4[t]=~E3[t];function fg1(t,e){const n=new Uint32Array(~~((t*e+a8)/a8));function i(u,l){n[u]|=l}function o(u,l){n[u]&=l}return{array:n,get:(u,l)=>{const a=l*t+u;return n[a>>>mo]&1<<(a&wn)},set:(u,l)=>{const a=l*t+u;i(a>>>mo,1<<(a&wn))},clear:(u,l)=>{const a=l*t+u;o(a>>>mo,~(1<<(a&wn)))},getRange:(u,l,a,s)=>{let c=s,f,g,p,m;for(;c>=l;--c)if(f=c*t+u,g=c*t+a,p=f>>>mo,m=g>>>mo,p===m){if(n[p]&Y4[f&wn]&E3[(g&wn)+1])return!0}else{if(n[p]&Y4[f&wn]||n[m]&E3[(g&wn)+1])return!0;for(let v=p+1;v<m;++v)if(n[v])return!0}return!1},setRange:(u,l,a,s)=>{let c,f,g,p,m;for(;l<=s;++l)if(c=l*t+u,f=l*t+a,g=c>>>mo,p=f>>>mo,g===p)i(g,Y4[c&wn]&E3[(f&wn)+1]);else for(i(g,Y4[c&wn]),i(p,E3[(f&wn)+1]),m=g+1;m<p;++m)i(m,4294967295)},clearRange:(u,l,a,s)=>{let c,f,g,p,m;for(;l<=s;++l)if(c=l*t+u,f=l*t+a,g=c>>>mo,p=f>>>mo,g===p)o(g,E3[c&wn]|Y4[(f&wn)+1]);else for(o(g,E3[c&wn]),o(p,Y4[(f&wn)+1]),m=g+1;m<p;++m)o(m,0)},outOfBounds:(u,l,a,s)=>u<0||l<0||s>=e||a>=t}}function gg1(t,e,n){const i=Math.max(1,Math.sqrt(t*e/1e6)),o=~~((t+2*n+i)/i),u=~~((e+2*n+i)/i),l=a=>~~((a+n)/i);return l.invert=a=>a*i-n,l.bitmap=()=>fg1(o,u),l.ratio=i,l.padding=n,l.width=t,l.height=e,l}function hg1(t,e,n,i){const o=t.width,u=t.height;return function(l){const a=l.datum.datum.items[i].items,s=a.length,c=l.datum.fontSize,f=w2.width(l.datum,l.datum.text);let g=0,p,m,v,b,x,w,S;for(let A=0;A<s;++A)p=a[A].x,v=a[A].y,m=a[A].x2===void 0?p:a[A].x2,b=a[A].y2===void 0?v:a[A].y2,x=(p+m)/2,w=(v+b)/2,S=Math.abs(m-p+b-v),S>=g&&(g=S,l.x=x,l.y=w);return x=f/2,w=c/2,p=l.x-x,m=l.x+x,v=l.y-w,b=l.y+w,l.align="center",p<0&&m<=o?l.align="left":0<=p&&o<m&&(l.align="right"),l.baseline="middle",v<0&&b<=u?l.baseline="top":0<=v&&u<b&&(l.baseline="bottom"),!0}}function Af(t,e,n,i,o,u){let l=n/2;return t-l<0||t+l>o||e-(l=i/2)<0||e+l>u}function uu(t,e,n,i,o,u,l,a){const s=o*u/(i*2),c=t(e-s),f=t(e+s),g=t(n-(u=u/2)),p=t(n+u);return l.outOfBounds(c,g,f,p)||l.getRange(c,g,f,p)||a&&a.getRange(c,g,f,p)}function pg1(t,e,n,i){const o=t.width,u=t.height,l=e[0],a=e[1];function s(c,f,g,p,m){const v=t.invert(c),b=t.invert(f);let x=g,w=u,S;if(!Af(v,b,p,m,o,u)&&!uu(t,v,b,m,p,x,l,a)&&!uu(t,v,b,m,p,m,l,null)){for(;w-x>=1;)S=(x+w)/2,uu(t,v,b,m,p,S,l,a)?w=S:x=S;if(x>g)return[v,b,x,!0]}}return function(c){const f=c.datum.datum.items[i].items,g=f.length,p=c.datum.fontSize,m=w2.width(c.datum,c.datum.text);let v=n?p:0,b=!1,x=!1,w=0,S,A,C,k,M,T,D,I,U,B,V,W,O,j,R,P,q;for(let Y=0;Y<g;++Y){for(S=f[Y].x,C=f[Y].y,A=f[Y].x2===void 0?S:f[Y].x2,k=f[Y].y2===void 0?C:f[Y].y2,S>A&&(q=S,S=A,A=q),C>k&&(q=C,C=k,k=q),U=t(S),V=t(A),B=~~((U+V)/2),W=t(C),j=t(k),O=~~((W+j)/2),D=B;D>=U;--D)for(I=O;I>=W;--I)P=s(D,I,v,m,p),P&&([c.x,c.y,v,b]=P);for(D=B;D<=V;++D)for(I=O;I<=j;++I)P=s(D,I,v,m,p),P&&([c.x,c.y,v,b]=P);!b&&!n&&(R=Math.abs(A-S+k-C),M=(S+A)/2,T=(C+k)/2,R>=w&&!Af(M,T,m,p,o,u)&&!uu(t,M,T,p,m,p,l,null)&&(w=R,c.x=M,c.y=T,x=!0))}return b||x?(M=m/2,T=p/2,l.setRange(t(c.x-M),t(c.y-T),t(c.x+M),t(c.y+T)),c.align="center",c.baseline="middle",!0):!1}}const mg1=[-1,-1,1,1],yg1=[-1,1,-1,1];function vg1(t,e,n,i){const o=t.width,u=t.height,l=e[0],a=e[1],s=t.bitmap();return function(c){const f=c.datum.datum.items[i].items,g=f.length,p=c.datum.fontSize,m=w2.width(c.datum,c.datum.text),v=[];let b=n?p:0,x=!1,w=!1,S=0,A,C,k,M,T,D,I,U,B,V,W,O;for(let j=0;j<g;++j){for(A=f[j].x,k=f[j].y,C=f[j].x2===void 0?A:f[j].x2,M=f[j].y2===void 0?k:f[j].y2,v.push([t((A+C)/2),t((k+M)/2)]);v.length;)if([I,U]=v.pop(),!(l.get(I,U)||a.get(I,U)||s.get(I,U))){s.set(I,U);for(let R=0;R<4;++R)T=I+mg1[R],D=U+yg1[R],s.outOfBounds(T,D,T,D)||v.push([T,D]);if(T=t.invert(I),D=t.invert(U),B=b,V=u,!Af(T,D,m,p,o,u)&&!uu(t,T,D,p,m,B,l,a)&&!uu(t,T,D,p,m,p,l,null)){for(;V-B>=1;)W=(B+V)/2,uu(t,T,D,p,m,W,l,a)?V=W:B=W;B>b&&(c.x=T,c.y=D,b=B,x=!0)}}!x&&!n&&(O=Math.abs(C-A+M-k),T=(A+C)/2,D=(k+M)/2,O>=S&&!Af(T,D,m,p,o,u)&&!uu(t,T,D,p,m,p,l,null)&&(S=O,c.x=T,c.y=D,w=!0))}return x||w?(T=m/2,D=p/2,l.setRange(t(c.x-T),t(c.y-D),t(c.x+T),t(c.y+D)),c.align="center",c.baseline="middle",!0):!1}}const bg1=["right","center","left"],xg1=["bottom","middle","top"];function _g1(t,e,n,i){const o=t.width,u=t.height,l=e[0],a=e[1],s=i.length;return function(c){const f=c.boundary,g=c.datum.fontSize;if(f[2]<0||f[5]<0||f[0]>o||f[3]>u)return!1;let p=c.textWidth??0,m,v,b,x,w,S,A,C,k,M,T,D,I,U,B;for(let V=0;V<s;++V){if(m=(n[V]&3)-1,v=(n[V]>>>2&3)-1,b=m===0&&v===0||i[V]<0,x=m&&v?Math.SQRT1_2:1,w=i[V]<0?-1:1,S=f[1+m]+i[V]*m*x,T=f[4+v]+w*g*v/2+i[V]*v*x,C=T-g/2,k=T+g/2,D=t(S),U=t(C),B=t(k),!p)if(cz(D,D,U,B,l,a,S,S,C,k,f,b))p=w2.width(c.datum,c.datum.text);else continue;if(M=S+w*p*m/2,S=M-p/2,A=M+p/2,D=t(S),I=t(A),cz(D,I,U,B,l,a,S,A,C,k,f,b))return c.x=m?m*w<0?A:S:M,c.y=v?v*w<0?k:C:T,c.align=bg1[m*w+1],c.baseline=xg1[v*w+1],l.setRange(D,U,I,B),!0}return!1}}function cz(t,e,n,i,o,u,l,a,s,c,f,g){return!(o.outOfBounds(t,n,e,i)||(g&&u||o).getRange(t,n,e,i))}const qv=0,Hv=4,Gv=8,Wv=0,Yv=1,Vv=2,wg1={"top-left":qv+Wv,top:qv+Yv,"top-right":qv+Vv,left:Hv+Wv,middle:Hv+Yv,right:Hv+Vv,"bottom-left":Gv+Wv,bottom:Gv+Yv,"bottom-right":Gv+Vv},Eg1={naive:hg1,"reduced-search":pg1,floodfill:vg1};function Sg1(t,e,n,i,o,u,l,a,s,c,f){if(!t.length)return t;const g=Math.max(i.length,o.length),p=Ag1(i,g),m=Cg1(o,g),v=kg1(t[0].datum),b=v==="group"&&t[0].datum.items[s].marktype,x=b==="area",w=Tg1(v,b,a,s),S=c===null||c===1/0,A=x&&f==="naive";let C=-1,k=-1;const M=t.map(U=>{const B=S?w2.width(U,U.text):void 0;return C=Math.max(C,B),k=Math.max(k,U.fontSize),{datum:U,opacity:0,x:void 0,y:void 0,align:void 0,baseline:void 0,boundary:w(U),textWidth:B}});c=c===null||c===1/0?Math.max(C,k)+Math.max(...i):c;const T=gg1(e[0],e[1],c);let D;if(!A){n&&M.sort((V,W)=>n(V.datum,W.datum));let U=!1;for(let V=0;V<m.length&&!U;++V)U=m[V]===5||p[V]<0;const B=(v&&l||x)&&t.map(V=>V.datum);D=u.length||B?cg1(T,B||[],u,U,x):sg1(T,l&&M)}const I=x?Eg1[f](T,D,l,s):_g1(T,D,m,p);return M.forEach(U=>U.opacity=+I(U)),M}function Ag1(t,e){const n=new Float64Array(e),i=t.length;for(let o=0;o<i;++o)n[o]=t[o]||0;for(let o=i;o<e;++o)n[o]=n[i-1];return n}function Cg1(t,e){const n=new Int8Array(e),i=t.length;for(let o=0;o<i;++o)n[o]|=wg1[t[o]];for(let o=i;o<e;++o)n[o]=n[i-1];return n}function kg1(t){return t&&t.mark&&t.mark.marktype}function Tg1(t,e,n,i){const o=u=>[u.x,u.x,u.x,u.y,u.y,u.y];return t?t==="line"||t==="area"?u=>o(u.datum):e==="line"?u=>{const l=u.datum.items[i].items;return o(l.length?l[n==="start"?0:l.length-1]:{x:NaN,y:NaN})}:u=>{const l=u.datum.bounds;return[l.x1,(l.x1+l.x2)/2,l.x2,l.y1,(l.y1+l.y2)/2,l.y2]}:o}const A_=["x","y","opacity","align","baseline"],KY=["top-left","left","bottom-left","top","bottom","top-right","right","bottom-right"];function yC(t){i1.call(this,null,t)}yC.Definition={type:"Label",metadata:{modifies:!0},params:[{name:"size",type:"number",array:!0,length:2,required:!0},{name:"sort",type:"compare"},{name:"anchor",type:"string",array:!0,default:KY},{name:"offset",type:"number",array:!0,default:[1]},{name:"padding",type:"number",default:0,null:!0},{name:"lineAnchor",type:"string",values:["start","end"],default:"end"},{name:"markIndex",type:"number",default:0},{name:"avoidBaseMark",type:"boolean",default:!0},{name:"avoidMarks",type:"data",array:!0},{name:"method",type:"string",default:"naive"},{name:"as",type:"string",array:!0,length:A_.length,default:A_}]};b1(yC,i1,{transform(t,e){function n(u){const l=t[u];return Q1(l)&&e.modified(l.fields)}const i=t.modified();if(!(i||e.changed(e.ADD_REM)||n("sort")))return;(!t.size||t.size.length!==2)&&u1("Size parameter should be specified as a [width, height] array.");const o=t.as||A_;return Sg1(e.materialize(e.SOURCE).source||[],t.size,t.sort,S1(t.offset==null?1:t.offset),S1(t.anchor||KY),t.avoidMarks||[],t.avoidBaseMark!==!1,t.lineAnchor||"end",t.markIndex||0,t.padding===void 0?0:t.padding,t.method||"naive").forEach(u=>{const l=u.datum;l[o[0]]=u.x,l[o[1]]=u.y,l[o[2]]=u.opacity,l[o[3]]=u.align,l[o[4]]=u.baseline}),e.reflow(i).modifies(o)}});const $g1=Object.freeze(Object.defineProperty({__proto__:null,label:yC},Symbol.toStringTag,{value:"Module"}));function QY(t,e){var n=[],i=function(f){return f(a)},o,u,l,a,s,c;if(e==null)n.push(t);else for(o={},u=0,l=t.length;u<l;++u)a=t[u],s=e.map(i),c=o[s],c||(o[s]=c=[],c.dims=s,n.push(c)),c.push(a);return n}function vC(t){i1.call(this,null,t)}vC.Definition={type:"Loess",metadata:{generates:!0},params:[{name:"x",type:"field",required:!0},{name:"y",type:"field",required:!0},{name:"groupby",type:"field",array:!0},{name:"bandwidth",type:"number",default:.3},{name:"as",type:"string",array:!0}]};b1(vC,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE|e.NO_FIELDS);if(!this.value||e.changed()||t.modified()){const i=e.materialize(e.SOURCE).source,o=QY(i,t.groupby),u=(t.groupby||[]).map(ee),l=u.length,a=t.as||[ee(t.x),ee(t.y)],s=[];o.forEach(c=>{uq(c,t.x,t.y,t.bandwidth||.3).forEach(f=>{const g={};for(let p=0;p<l;++p)g[u[p]]=c.dims[p];g[a[0]]=f[0],g[a[1]]=f[1],s.push(vt(g))})}),this.value&&(n.rem=this.value),this.value=n.add=n.source=s}return n}});const C_={constant:KE,linear:QE,log:eq,exp:nq,pow:iq,quad:ZE,poly:oq},Mg1=(t,e)=>t==="poly"?e:t==="quad"?2:1;function bC(t){i1.call(this,null,t)}bC.Definition={type:"Regression",metadata:{generates:!0},params:[{name:"x",type:"field",required:!0},{name:"y",type:"field",required:!0},{name:"groupby",type:"field",array:!0},{name:"method",type:"string",default:"linear",values:Object.keys(C_)},{name:"order",type:"number",default:3},{name:"extent",type:"number",array:!0,length:2},{name:"params",type:"boolean",default:!1},{name:"as",type:"string",array:!0}]};b1(bC,i1,{transform(t,e){const n=e.fork(e.NO_SOURCE|e.NO_FIELDS);if(!this.value||e.changed()||t.modified()){const i=e.materialize(e.SOURCE).source,o=QY(i,t.groupby),u=(t.groupby||[]).map(ee),l=t.method||"linear",a=t.order==null?3:t.order,s=Mg1(l,a),c=t.as||[ee(t.x),ee(t.y)],f=C_[l],g=[];let p=t.extent;A1(C_,l)||u1("Invalid regression method: "+l),p!=null&&l==="log"&&p[0]<=0&&(e.dataflow.warn("Ignoring extent with values <= 0 for log regression."),p=null),o.forEach(m=>{if(m.length<=s){e.dataflow.warn("Skipping regression with more parameters than data points.");return}const b=f(m,t.x,t.y,a);if(t.params){g.push(vt({keys:m.dims,coef:b.coef,rSquared:b.rSquared}));return}const x=p||_i(m,t.x),w=S=>{const A={};for(let C=0;C<u.length;++C)A[u[C]]=m.dims[C];A[c[0]]=S[0],A[c[1]]=S[1],g.push(vt(A))};l==="linear"||l==="constant"?x.forEach(S=>w([S,b.predict(S)])):Tg(b.predict,x,25,200).forEach(w)}),this.value&&(n.rem=this.value),this.value=n.add=n.source=g}return n}});const Ng1=Object.freeze(Object.defineProperty({__proto__:null,loess:vC,regression:bC},Symbol.toStringTag,{value:"Module"})),Bo=11102230246251565e-32,en=134217729,Rg1=(3+8*Bo)*Bo;function Xv(t,e,n,i,o){let u,l,a,s,c=e[0],f=i[0],g=0,p=0;f>c==f>-c?(u=c,c=e[++g]):(u=f,f=i[++p]);let m=0;if(g<t&&p<n)for(f>c==f>-c?(l=c+u,a=u-(l-c),c=e[++g]):(l=f+u,a=u-(l-f),f=i[++p]),u=l,a!==0&&(o[m++]=a);g<t&&p<n;)f>c==f>-c?(l=u+c,s=l-u,a=u-(l-s)+(c-s),c=e[++g]):(l=u+f,s=l-u,a=u-(l-s)+(f-s),f=i[++p]),u=l,a!==0&&(o[m++]=a);for(;g<t;)l=u+c,s=l-u,a=u-(l-s)+(c-s),c=e[++g],u=l,a!==0&&(o[m++]=a);for(;p<n;)l=u+f,s=l-u,a=u-(l-s)+(f-s),f=i[++p],u=l,a!==0&&(o[m++]=a);return(u!==0||m===0)&&(o[m++]=u),m}function Dg1(t,e){let n=e[0];for(let i=1;i<t;i++)n+=e[i];return n}function o7(t){return new Float64Array(t)}const Og1=(3+16*Bo)*Bo,Fg1=(2+12*Bo)*Bo,zg1=(9+64*Bo)*Bo*Bo,M5=o7(4),dz=o7(8),fz=o7(12),gz=o7(16),En=o7(4);function Lg1(t,e,n,i,o,u,l){let a,s,c,f,g,p,m,v,b,x,w,S,A,C,k,M,T,D;const I=t-o,U=n-o,B=e-u,V=i-u;C=I*V,p=en*I,m=p-(p-I),v=I-m,p=en*V,b=p-(p-V),x=V-b,k=v*x-(C-m*b-v*b-m*x),M=B*U,p=en*B,m=p-(p-B),v=B-m,p=en*U,b=p-(p-U),x=U-b,T=v*x-(M-m*b-v*b-m*x),w=k-T,g=k-w,M5[0]=k-(w+g)+(g-T),S=C+w,g=S-C,A=C-(S-g)+(w-g),w=A-M,g=A-w,M5[1]=A-(w+g)+(g-M),D=S+w,g=D-S,M5[2]=S-(D-g)+(w-g),M5[3]=D;let W=Dg1(4,M5),O=Fg1*l;if(W>=O||-W>=O||(g=t-I,a=t-(I+g)+(g-o),g=n-U,c=n-(U+g)+(g-o),g=e-B,s=e-(B+g)+(g-u),g=i-V,f=i-(V+g)+(g-u),a===0&&s===0&&c===0&&f===0)||(O=zg1*l+Rg1*Math.abs(W),W+=I*f+V*a-(B*c+U*s),W>=O||-W>=O))return W;C=a*V,p=en*a,m=p-(p-a),v=a-m,p=en*V,b=p-(p-V),x=V-b,k=v*x-(C-m*b-v*b-m*x),M=s*U,p=en*s,m=p-(p-s),v=s-m,p=en*U,b=p-(p-U),x=U-b,T=v*x-(M-m*b-v*b-m*x),w=k-T,g=k-w,En[0]=k-(w+g)+(g-T),S=C+w,g=S-C,A=C-(S-g)+(w-g),w=A-M,g=A-w,En[1]=A-(w+g)+(g-M),D=S+w,g=D-S,En[2]=S-(D-g)+(w-g),En[3]=D;const j=Xv(4,M5,4,En,dz);C=I*f,p=en*I,m=p-(p-I),v=I-m,p=en*f,b=p-(p-f),x=f-b,k=v*x-(C-m*b-v*b-m*x),M=B*c,p=en*B,m=p-(p-B),v=B-m,p=en*c,b=p-(p-c),x=c-b,T=v*x-(M-m*b-v*b-m*x),w=k-T,g=k-w,En[0]=k-(w+g)+(g-T),S=C+w,g=S-C,A=C-(S-g)+(w-g),w=A-M,g=A-w,En[1]=A-(w+g)+(g-M),D=S+w,g=D-S,En[2]=S-(D-g)+(w-g),En[3]=D;const R=Xv(j,dz,4,En,fz);C=a*f,p=en*a,m=p-(p-a),v=a-m,p=en*f,b=p-(p-f),x=f-b,k=v*x-(C-m*b-v*b-m*x),M=s*c,p=en*s,m=p-(p-s),v=s-m,p=en*c,b=p-(p-c),x=c-b,T=v*x-(M-m*b-v*b-m*x),w=k-T,g=k-w,En[0]=k-(w+g)+(g-T),S=C+w,g=S-C,A=C-(S-g)+(w-g),w=A-M,g=A-w,En[1]=A-(w+g)+(g-M),D=S+w,g=D-S,En[2]=S-(D-g)+(w-g),En[3]=D;const P=Xv(R,fz,4,En,gz);return gz[P-1]}function gc(t,e,n,i,o,u){const l=(e-u)*(n-o),a=(t-o)*(i-u),s=l-a,c=Math.abs(l+a);return Math.abs(s)>=Og1*c?s:-Lg1(t,e,n,i,o,u,c)}const hz=Math.pow(2,-52),hc=new Uint32Array(512);class Cf{static from(e,n=Ug1,i=qg1){const o=e.length,u=new Float64Array(o*2);for(let l=0;l<o;l++){const a=e[l];u[2*l]=n(a),u[2*l+1]=i(a)}return new Cf(u)}constructor(e){const n=e.length>>1;if(n>0&&typeof e[0]!="number")throw new Error("Expected coords to contain numbers.");this.coords=e;const i=Math.max(2*n-5,0);this._triangles=new Uint32Array(i*3),this._halfedges=new Int32Array(i*3),this._hashSize=Math.ceil(Math.sqrt(n)),this._hullPrev=new Uint32Array(n),this._hullNext=new Uint32Array(n),this._hullTri=new Uint32Array(n),this._hullHash=new Int32Array(this._hashSize),this._ids=new Uint32Array(n),this._dists=new Float64Array(n),this.update()}update(){const{coords:e,_hullPrev:n,_hullNext:i,_hullTri:o,_hullHash:u}=this,l=e.length>>1;let a=1/0,s=1/0,c=-1/0,f=-1/0;for(let I=0;I<l;I++){const U=e[2*I],B=e[2*I+1];U<a&&(a=U),B<s&&(s=B),U>c&&(c=U),B>f&&(f=B),this._ids[I]=I}const g=(a+c)/2,p=(s+f)/2;let m,v,b;for(let I=0,U=1/0;I<l;I++){const B=Kv(g,p,e[2*I],e[2*I+1]);B<U&&(m=I,U=B)}const x=e[2*m],w=e[2*m+1];for(let I=0,U=1/0;I<l;I++){if(I===m)continue;const B=Kv(x,w,e[2*I],e[2*I+1]);B<U&&B>0&&(v=I,U=B)}let S=e[2*v],A=e[2*v+1],C=1/0;for(let I=0;I<l;I++){if(I===m||I===v)continue;const U=Ig1(x,w,S,A,e[2*I],e[2*I+1]);U<C&&(b=I,C=U)}let k=e[2*b],M=e[2*b+1];if(C===1/0){for(let B=0;B<l;B++)this._dists[B]=e[2*B]-e[0]||e[2*B+1]-e[1];W5(this._ids,this._dists,0,l-1);const I=new Uint32Array(l);let U=0;for(let B=0,V=-1/0;B<l;B++){const W=this._ids[B],O=this._dists[W];O>V&&(I[U++]=W,V=O)}this.hull=I.subarray(0,U),this.triangles=new Uint32Array(0),this.halfedges=new Uint32Array(0);return}if(gc(x,w,S,A,k,M)<0){const I=v,U=S,B=A;v=b,S=k,A=M,b=I,k=U,M=B}const T=Bg1(x,w,S,A,k,M);this._cx=T.x,this._cy=T.y;for(let I=0;I<l;I++)this._dists[I]=Kv(e[2*I],e[2*I+1],T.x,T.y);W5(this._ids,this._dists,0,l-1),this._hullStart=m;let D=3;i[m]=n[b]=v,i[v]=n[m]=b,i[b]=n[v]=m,o[m]=0,o[v]=1,o[b]=2,u.fill(-1),u[this._hashKey(x,w)]=m,u[this._hashKey(S,A)]=v,u[this._hashKey(k,M)]=b,this.trianglesLen=0,this._addTriangle(m,v,b,-1,-1,-1);for(let I=0,U,B;I<this._ids.length;I++){const V=this._ids[I],W=e[2*V],O=e[2*V+1];if(I>0&&Math.abs(W-U)<=hz&&Math.abs(O-B)<=hz||(U=W,B=O,V===m||V===v||V===b))continue;let j=0;for(let z=0,G=this._hashKey(W,O);z<this._hashSize&&(j=u[(G+z)%this._hashSize],!(j!==-1&&j!==i[j]));z++);j=n[j];let R=j,P;for(;P=i[R],gc(W,O,e[2*R],e[2*R+1],e[2*P],e[2*P+1])>=0;)if(R=P,R===j){R=-1;break}if(R===-1)continue;let q=this._addTriangle(R,V,i[R],-1,-1,o[R]);o[V]=this._legalize(q+2),o[R]=q,D++;let Y=i[R];for(;P=i[Y],gc(W,O,e[2*Y],e[2*Y+1],e[2*P],e[2*P+1])<0;)q=this._addTriangle(Y,V,P,o[V],-1,o[Y]),o[V]=this._legalize(q+2),i[Y]=Y,D--,Y=P;if(R===j)for(;P=n[R],gc(W,O,e[2*P],e[2*P+1],e[2*R],e[2*R+1])<0;)q=this._addTriangle(P,V,R,-1,o[R],o[P]),this._legalize(q+2),o[P]=q,i[R]=R,D--,R=P;this._hullStart=n[V]=R,i[R]=n[Y]=V,i[V]=Y,u[this._hashKey(W,O)]=V,u[this._hashKey(e[2*R],e[2*R+1])]=R}this.hull=new Uint32Array(D);for(let I=0,U=this._hullStart;I<D;I++)this.hull[I]=U,U=i[U];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(e,n){return Math.floor(jg1(e-this._cx,n-this._cy)*this._hashSize)%this._hashSize}_legalize(e){const{_triangles:n,_halfedges:i,coords:o}=this;let u=0,l=0;for(;;){const a=i[e],s=e-e%3;if(l=s+(e+2)%3,a===-1){if(u===0)break;e=hc[--u];continue}const c=a-a%3,f=s+(e+1)%3,g=c+(a+2)%3,p=n[l],m=n[e],v=n[f],b=n[g];if(Pg1(o[2*p],o[2*p+1],o[2*m],o[2*m+1],o[2*v],o[2*v+1],o[2*b],o[2*b+1])){n[e]=b,n[a]=p;const w=i[g];if(w===-1){let A=this._hullStart;do{if(this._hullTri[A]===g){this._hullTri[A]=e;break}A=this._hullPrev[A]}while(A!==this._hullStart)}this._link(e,w),this._link(a,i[l]),this._link(l,g);const S=c+(a+1)%3;u<hc.length&&(hc[u++]=S)}else{if(u===0)break;e=hc[--u]}}return l}_link(e,n){this._halfedges[e]=n,n!==-1&&(this._halfedges[n]=e)}_addTriangle(e,n,i,o,u,l){const a=this.trianglesLen;return this._triangles[a]=e,this._triangles[a+1]=n,this._triangles[a+2]=i,this._link(a,o),this._link(a+1,u),this._link(a+2,l),this.trianglesLen+=3,a}}function jg1(t,e){const n=t/(Math.abs(t)+Math.abs(e));return(e>0?3-n:1+n)/4}function Kv(t,e,n,i){const o=t-n,u=e-i;return o*o+u*u}function Pg1(t,e,n,i,o,u,l,a){const s=t-l,c=e-a,f=n-l,g=i-a,p=o-l,m=u-a,v=s*s+c*c,b=f*f+g*g,x=p*p+m*m;return s*(g*x-b*m)-c*(f*x-b*p)+v*(f*m-g*p)<0}function Ig1(t,e,n,i,o,u){const l=n-t,a=i-e,s=o-t,c=u-e,f=l*l+a*a,g=s*s+c*c,p=.5/(l*c-a*s),m=(c*f-a*g)*p,v=(l*g-s*f)*p;return m*m+v*v}function Bg1(t,e,n,i,o,u){const l=n-t,a=i-e,s=o-t,c=u-e,f=l*l+a*a,g=s*s+c*c,p=.5/(l*c-a*s),m=t+(c*f-a*g)*p,v=e+(l*g-s*f)*p;return{x:m,y:v}}function W5(t,e,n,i){if(i-n<=20)for(let o=n+1;o<=i;o++){const u=t[o],l=e[u];let a=o-1;for(;a>=n&&e[t[a]]>l;)t[a+1]=t[a--];t[a+1]=u}else{const o=n+i>>1;let u=n+1,l=i;P9(t,o,u),e[t[n]]>e[t[i]]&&P9(t,n,i),e[t[u]]>e[t[i]]&&P9(t,u,i),e[t[n]]>e[t[u]]&&P9(t,n,u);const a=t[u],s=e[a];for(;;){do u++;while(e[t[u]]<s);do l--;while(e[t[l]]>s);if(l<u)break;P9(t,u,l)}t[n+1]=t[l],t[l]=a,i-u+1>=l-n?(W5(t,e,u,i),W5(t,e,n,l-1)):(W5(t,e,n,l-1),W5(t,e,u,i))}}function P9(t,e,n){const i=t[e];t[e]=t[n],t[n]=i}function Ug1(t){return t[0]}function qg1(t){return t[1]}const pz=1e-6;class N0{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(e,n){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+n}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(e,n){this._+=`L${this._x1=+e},${this._y1=+n}`}arc(e,n,i){e=+e,n=+n,i=+i;const o=e+i,u=n;if(i<0)throw new Error("negative radius");this._x1===null?this._+=`M${o},${u}`:(Math.abs(this._x1-o)>pz||Math.abs(this._y1-u)>pz)&&(this._+="L"+o+","+u),i&&(this._+=`A${i},${i},0,1,1,${e-i},${n}A${i},${i},0,1,1,${this._x1=o},${this._y1=u}`)}rect(e,n,i,o){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+n}h${+i}v${+o}h${-i}Z`}value(){return this._||null}}class k_{constructor(){this._=[]}moveTo(e,n){this._.push([e,n])}closePath(){this._.push(this._[0].slice())}lineTo(e,n){this._.push([e,n])}value(){return this._.length?this._:null}}let Hg1=class{constructor(e,[n,i,o,u]=[0,0,960,500]){if(!((o=+o)>=(n=+n))||!((u=+u)>=(i=+i)))throw new Error("invalid bounds");this.delaunay=e,this._circumcenters=new Float64Array(e.points.length*2),this.vectors=new Float64Array(e.points.length*2),this.xmax=o,this.xmin=n,this.ymax=u,this.ymin=i,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:e,hull:n,triangles:i},vectors:o}=this;let u,l;const a=this.circumcenters=this._circumcenters.subarray(0,i.length/3*2);for(let b=0,x=0,w=i.length,S,A;b<w;b+=3,x+=2){const C=i[b]*2,k=i[b+1]*2,M=i[b+2]*2,T=e[C],D=e[C+1],I=e[k],U=e[k+1],B=e[M],V=e[M+1],W=I-T,O=U-D,j=B-T,R=V-D,P=(W*R-O*j)*2;if(Math.abs(P)<1e-9){if(u===void 0){u=l=0;for(const Y of n)u+=e[Y*2],l+=e[Y*2+1];u/=n.length,l/=n.length}const q=1e9*Math.sign((u-T)*R-(l-D)*j);S=(T+B)/2-q*R,A=(D+V)/2+q*j}else{const q=1/P,Y=W*W+O*O,z=j*j+R*R;S=T+(R*Y-O*z)*q,A=D+(W*z-j*Y)*q}a[x]=S,a[x+1]=A}let s=n[n.length-1],c,f=s*4,g,p=e[2*s],m,v=e[2*s+1];o.fill(0);for(let b=0;b<n.length;++b)s=n[b],c=f,g=p,m=v,f=s*4,p=e[2*s],v=e[2*s+1],o[c+2]=o[f]=m-v,o[c+3]=o[f+1]=p-g}render(e){const n=e==null?e=new N0:void 0,{delaunay:{halfedges:i,inedges:o,hull:u},circumcenters:l,vectors:a}=this;if(u.length<=1)return null;for(let f=0,g=i.length;f<g;++f){const p=i[f];if(p<f)continue;const m=Math.floor(f/3)*2,v=Math.floor(p/3)*2,b=l[m],x=l[m+1],w=l[v],S=l[v+1];this._renderSegment(b,x,w,S,e)}let s,c=u[u.length-1];for(let f=0;f<u.length;++f){s=c,c=u[f];const g=Math.floor(o[c]/3)*2,p=l[g],m=l[g+1],v=s*4,b=this._project(p,m,a[v+2],a[v+3]);b&&this._renderSegment(p,m,b[0],b[1],e)}return n&&n.value()}renderBounds(e){const n=e==null?e=new N0:void 0;return e.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),n&&n.value()}renderCell(e,n){const i=n==null?n=new N0:void 0,o=this._clip(e);if(o===null||!o.length)return;n.moveTo(o[0],o[1]);let u=o.length;for(;o[0]===o[u-2]&&o[1]===o[u-1]&&u>1;)u-=2;for(let l=2;l<u;l+=2)(o[l]!==o[l-2]||o[l+1]!==o[l-1])&&n.lineTo(o[l],o[l+1]);return n.closePath(),i&&i.value()}*cellPolygons(){const{delaunay:{points:e}}=this;for(let n=0,i=e.length/2;n<i;++n){const o=this.cellPolygon(n);o&&(o.index=n,yield o)}}cellPolygon(e){const n=new k_;return this.renderCell(e,n),n.value()}_renderSegment(e,n,i,o,u){let l;const a=this._regioncode(e,n),s=this._regioncode(i,o);a===0&&s===0?(u.moveTo(e,n),u.lineTo(i,o)):(l=this._clipSegment(e,n,i,o,a,s))&&(u.moveTo(l[0],l[1]),u.lineTo(l[2],l[3]))}contains(e,n,i){return n=+n,n!==n||(i=+i,i!==i)?!1:this.delaunay._step(e,n,i)===e}*neighbors(e){const n=this._clip(e);if(n)for(const i of this.delaunay.neighbors(e)){const o=this._clip(i);if(o){t:for(let u=0,l=n.length;u<l;u+=2)for(let a=0,s=o.length;a<s;a+=2)if(n[u]===o[a]&&n[u+1]===o[a+1]&&n[(u+2)%l]===o[(a+s-2)%s]&&n[(u+3)%l]===o[(a+s-1)%s]){yield i;break t}}}}_cell(e){const{circumcenters:n,delaunay:{inedges:i,halfedges:o,triangles:u}}=this,l=i[e];if(l===-1)return null;const a=[];let s=l;do{const c=Math.floor(s/3);if(a.push(n[c*2],n[c*2+1]),s=s%3===2?s-2:s+1,u[s]!==e)break;s=o[s]}while(s!==l&&s!==-1);return a}_clip(e){if(e===0&&this.delaunay.hull.length===1)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const n=this._cell(e);if(n===null)return null;const{vectors:i}=this,o=e*4;return this._simplify(i[o]||i[o+1]?this._clipInfinite(e,n,i[o],i[o+1],i[o+2],i[o+3]):this._clipFinite(e,n))}_clipFinite(e,n){const i=n.length;let o=null,u,l,a=n[i-2],s=n[i-1],c,f=this._regioncode(a,s),g,p=0;for(let m=0;m<i;m+=2)if(u=a,l=s,a=n[m],s=n[m+1],c=f,f=this._regioncode(a,s),c===0&&f===0)g=p,p=0,o?o.push(a,s):o=[a,s];else{let v,b,x,w,S;if(c===0){if((v=this._clipSegment(u,l,a,s,c,f))===null)continue;[b,x,w,S]=v}else{if((v=this._clipSegment(a,s,u,l,f,c))===null)continue;[w,S,b,x]=v,g=p,p=this._edgecode(b,x),g&&p&&this._edge(e,g,p,o,o.length),o?o.push(b,x):o=[b,x]}g=p,p=this._edgecode(w,S),g&&p&&this._edge(e,g,p,o,o.length),o?o.push(w,S):o=[w,S]}if(o)g=p,p=this._edgecode(o[0],o[1]),g&&p&&this._edge(e,g,p,o,o.length);else if(this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return o}_clipSegment(e,n,i,o,u,l){const a=u<l;for(a&&([e,n,i,o,u,l]=[i,o,e,n,l,u]);;){if(u===0&&l===0)return a?[i,o,e,n]:[e,n,i,o];if(u&l)return null;let s,c,f=u||l;f&8?(s=e+(i-e)*(this.ymax-n)/(o-n),c=this.ymax):f&4?(s=e+(i-e)*(this.ymin-n)/(o-n),c=this.ymin):f&2?(c=n+(o-n)*(this.xmax-e)/(i-e),s=this.xmax):(c=n+(o-n)*(this.xmin-e)/(i-e),s=this.xmin),u?(e=s,n=c,u=this._regioncode(e,n)):(i=s,o=c,l=this._regioncode(i,o))}}_clipInfinite(e,n,i,o,u,l){let a=Array.from(n),s;if((s=this._project(a[0],a[1],i,o))&&a.unshift(s[0],s[1]),(s=this._project(a[a.length-2],a[a.length-1],u,l))&&a.push(s[0],s[1]),a=this._clipFinite(e,a))for(let c=0,f=a.length,g,p=this._edgecode(a[f-2],a[f-1]);c<f;c+=2)g=p,p=this._edgecode(a[c],a[c+1]),g&&p&&(c=this._edge(e,g,p,a,c),f=a.length);else this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(a=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return a}_edge(e,n,i,o,u){for(;n!==i;){let l,a;switch(n){case 5:n=4;continue;case 4:n=6,l=this.xmax,a=this.ymin;break;case 6:n=2;continue;case 2:n=10,l=this.xmax,a=this.ymax;break;case 10:n=8;continue;case 8:n=9,l=this.xmin,a=this.ymax;break;case 9:n=1;continue;case 1:n=5,l=this.xmin,a=this.ymin;break}(o[u]!==l||o[u+1]!==a)&&this.contains(e,l,a)&&(o.splice(u,0,l,a),u+=2)}return u}_project(e,n,i,o){let u=1/0,l,a,s;if(o<0){if(n<=this.ymin)return null;(l=(this.ymin-n)/o)<u&&(s=this.ymin,a=e+(u=l)*i)}else if(o>0){if(n>=this.ymax)return null;(l=(this.ymax-n)/o)<u&&(s=this.ymax,a=e+(u=l)*i)}if(i>0){if(e>=this.xmax)return null;(l=(this.xmax-e)/i)<u&&(a=this.xmax,s=n+(u=l)*o)}else if(i<0){if(e<=this.xmin)return null;(l=(this.xmin-e)/i)<u&&(a=this.xmin,s=n+(u=l)*o)}return[a,s]}_edgecode(e,n){return(e===this.xmin?1:e===this.xmax?2:0)|(n===this.ymin?4:n===this.ymax?8:0)}_regioncode(e,n){return(e<this.xmin?1:e>this.xmax?2:0)|(n<this.ymin?4:n>this.ymax?8:0)}_simplify(e){if(e&&e.length>4){for(let n=0;n<e.length;n+=2){const i=(n+2)%e.length,o=(n+4)%e.length;(e[n]===e[i]&&e[i]===e[o]||e[n+1]===e[i+1]&&e[i+1]===e[o+1])&&(e.splice(i,2),n-=2)}e.length||(e=null)}return e}};const Gg1=2*Math.PI,N5=Math.pow;function Wg1(t){return t[0]}function Yg1(t){return t[1]}function Vg1(t){const{triangles:e,coords:n}=t;for(let i=0;i<e.length;i+=3){const o=2*e[i],u=2*e[i+1],l=2*e[i+2];if((n[l]-n[o])*(n[u+1]-n[o+1])-(n[u]-n[o])*(n[l+1]-n[o+1])>1e-10)return!1}return!0}function Xg1(t,e,n){return[t+Math.sin(t+e)*n,e+Math.cos(t-e)*n]}class xC{static from(e,n=Wg1,i=Yg1,o){return new xC("length"in e?Kg1(e,n,i,o):Float64Array.from(Qg1(e,n,i,o)))}constructor(e){this._delaunator=new Cf(e),this.inedges=new Int32Array(e.length/2),this._hullIndex=new Int32Array(e.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const e=this._delaunator,n=this.points;if(e.hull&&e.hull.length>2&&Vg1(e)){this.collinear=Int32Array.from({length:n.length/2},(p,m)=>m).sort((p,m)=>n[2*p]-n[2*m]||n[2*p+1]-n[2*m+1]);const s=this.collinear[0],c=this.collinear[this.collinear.length-1],f=[n[2*s],n[2*s+1],n[2*c],n[2*c+1]],g=1e-8*Math.hypot(f[3]-f[1],f[2]-f[0]);for(let p=0,m=n.length/2;p<m;++p){const v=Xg1(n[2*p],n[2*p+1],g);n[2*p]=v[0],n[2*p+1]=v[1]}this._delaunator=new Cf(n)}else delete this.collinear;const i=this.halfedges=this._delaunator.halfedges,o=this.hull=this._delaunator.hull,u=this.triangles=this._delaunator.triangles,l=this.inedges.fill(-1),a=this._hullIndex.fill(-1);for(let s=0,c=i.length;s<c;++s){const f=u[s%3===2?s-2:s+1];(i[s]===-1||l[f]===-1)&&(l[f]=s)}for(let s=0,c=o.length;s<c;++s)a[o[s]]=s;o.length<=2&&o.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=o[0],l[o[0]]=1,o.length===2&&(l[o[1]]=0,this.triangles[1]=o[1],this.triangles[2]=o[1]))}voronoi(e){return new Hg1(this,e)}*neighbors(e){const{inedges:n,hull:i,_hullIndex:o,halfedges:u,triangles:l,collinear:a}=this;if(a){const g=a.indexOf(e);g>0&&(yield a[g-1]),g<a.length-1&&(yield a[g+1]);return}const s=n[e];if(s===-1)return;let c=s,f=-1;do{if(yield f=l[c],c=c%3===2?c-2:c+1,l[c]!==e)return;if(c=u[c],c===-1){const g=i[(o[e]+1)%i.length];g!==f&&(yield g);return}}while(c!==s)}find(e,n,i=0){if(e=+e,e!==e||(n=+n,n!==n))return-1;const o=i;let u;for(;(u=this._step(i,e,n))>=0&&u!==i&&u!==o;)i=u;return u}_step(e,n,i){const{inedges:o,hull:u,_hullIndex:l,halfedges:a,triangles:s,points:c}=this;if(o[e]===-1||!c.length)return(e+1)%(c.length>>1);let f=e,g=N5(n-c[e*2],2)+N5(i-c[e*2+1],2);const p=o[e];let m=p;do{let v=s[m];const b=N5(n-c[v*2],2)+N5(i-c[v*2+1],2);if(b<g&&(g=b,f=v),m=m%3===2?m-2:m+1,s[m]!==e)break;if(m=a[m],m===-1){if(m=u[(l[e]+1)%u.length],m!==v&&N5(n-c[m*2],2)+N5(i-c[m*2+1],2)<g)return m;break}}while(m!==p);return f}render(e){const n=e==null?e=new N0:void 0,{points:i,halfedges:o,triangles:u}=this;for(let l=0,a=o.length;l<a;++l){const s=o[l];if(s<l)continue;const c=u[l]*2,f=u[s]*2;e.moveTo(i[c],i[c+1]),e.lineTo(i[f],i[f+1])}return this.renderHull(e),n&&n.value()}renderPoints(e,n){n===void 0&&(!e||typeof e.moveTo!="function")&&(n=e,e=null),n=n==null?2:+n;const i=e==null?e=new N0:void 0,{points:o}=this;for(let u=0,l=o.length;u<l;u+=2){const a=o[u],s=o[u+1];e.moveTo(a+n,s),e.arc(a,s,n,0,Gg1)}return i&&i.value()}renderHull(e){const n=e==null?e=new N0:void 0,{hull:i,points:o}=this,u=i[0]*2,l=i.length;e.moveTo(o[u],o[u+1]);for(let a=1;a<l;++a){const s=2*i[a];e.lineTo(o[s],o[s+1])}return e.closePath(),n&&n.value()}hullPolygon(){const e=new k_;return this.renderHull(e),e.value()}renderTriangle(e,n){const i=n==null?n=new N0:void 0,{points:o,triangles:u}=this,l=u[e*=3]*2,a=u[e+1]*2,s=u[e+2]*2;return n.moveTo(o[l],o[l+1]),n.lineTo(o[a],o[a+1]),n.lineTo(o[s],o[s+1]),n.closePath(),i&&i.value()}*trianglePolygons(){const{triangles:e}=this;for(let n=0,i=e.length/3;n<i;++n)yield this.trianglePolygon(n)}trianglePolygon(e){const n=new k_;return this.renderTriangle(e,n),n.value()}}function Kg1(t,e,n,i){const o=t.length,u=new Float64Array(o*2);for(let l=0;l<o;++l){const a=t[l];u[l*2]=e.call(i,a,l,t),u[l*2+1]=n.call(i,a,l,t)}return u}function*Qg1(t,e,n,i){let o=0;for(const u of t)yield e.call(i,u,o,t),yield n.call(i,u,o,t),++o}function _C(t){i1.call(this,null,t)}_C.Definition={type:"Voronoi",metadata:{modifies:!0},params:[{name:"x",type:"field",required:!0},{name:"y",type:"field",required:!0},{name:"size",type:"number",array:!0,length:2},{name:"extent",type:"array",array:!0,length:2,default:[[-1e5,-1e5],[1e5,1e5]],content:{type:"number",array:!0,length:2}},{name:"as",type:"string",default:"path"}]};const Zg1=[-1e5,-1e5,1e5,1e5];b1(_C,i1,{transform(t,e){const n=t.as||"path",i=e.source;if(!i||!i.length)return e;let o=t.size;o=o?[0,0,o[0],o[1]]:(o=t.extent)?[o[0][0],o[0][1],o[1][0],o[1][1]]:Zg1;const u=this.value=xC.from(i,t.x,t.y).voronoi(o);for(let l=0,a=i.length;l<a;++l){const s=u.cellPolygon(l);i[l][n]=s&&!th1(s)?Jg1(s):null}return e.reflow(t.modified()).modifies(n)}});function Jg1(t){const e=t[0][0],n=t[0][1];let i=t.length-1;for(;t[i][0]===e&&t[i][1]===n;--i);return"M"+t.slice(0,i+1).join("L")+"Z"}function th1(t){return t.length===2&&t[0][0]===t[1][0]&&t[0][1]===t[1][1]}const eh1=Object.freeze(Object.defineProperty({__proto__:null,voronoi:_C},Symbol.toStringTag,{value:"Module"}));var Qv=Math.PI/180,vr=64,Jc=2048;function nh1(){var t=[256,256],e,n,i,o,u,l,a,s=ZY,c=[],f=Math.random,g={};g.layout=function(){for(var v=p(cu()),b=rh1((t[0]>>5)*t[1]),x=null,w=c.length,S=-1,A=[],C=c.map(M=>({text:e(M),font:n(M),style:o(M),weight:u(M),rotate:l(M),size:~~(i(M)+1e-14),padding:a(M),xoff:0,yoff:0,x1:0,y1:0,x0:0,y0:0,hasText:!1,sprite:null,datum:M})).sort((M,T)=>T.size-M.size);++S<w;){var k=C[S];k.x=t[0]*(f()+.5)>>1,k.y=t[1]*(f()+.5)>>1,ih1(v,k,C,S),k.hasText&&m(b,k,x)&&(A.push(k),x?uh1(x,k):x=[{x:k.x+k.x0,y:k.y+k.y0},{x:k.x+k.x1,y:k.y+k.y1}],k.x-=t[0]>>1,k.y-=t[1]>>1)}return A};function p(v){v.width=v.height=1;var b=Math.sqrt(v.getContext("2d").getImageData(0,0,1,1).data.length>>2);v.width=(vr<<5)/b,v.height=Jc/b;var x=v.getContext("2d");return x.fillStyle=x.strokeStyle="red",x.textAlign="center",{context:x,ratio:b}}function m(v,b,x){for(var w=b.x,S=b.y,A=Math.hypot(t[0],t[1]),C=s(t),k=f()<.5?1:-1,M=-k,T,D,I;(T=C(M+=k))&&(D=~~T[0],I=~~T[1],!(Math.min(Math.abs(D),Math.abs(I))>=A));)if(b.x=w+D,b.y=S+I,!(b.x+b.x0<0||b.y+b.y0<0||b.x+b.x1>t[0]||b.y+b.y1>t[1])&&(!x||!oh1(b,v,t[0]))&&(!x||lh1(b,x))){for(var U=b.sprite,B=b.width>>5,V=t[0]>>5,W=b.x-(B<<4),O=W&127,j=32-O,R=b.y1-b.y0,P=(b.y+b.y0)*V+(W>>5),q,Y=0;Y<R;Y++){q=0;for(var z=0;z<=B;z++)v[P+z]|=q<<j|(z<B?(q=U[Y*B+z])>>>O:0);P+=V}return b.sprite=null,!0}return!1}return g.words=function(v){return arguments.length?(c=v,g):c},g.size=function(v){return arguments.length?(t=[+v[0],+v[1]],g):t},g.font=function(v){return arguments.length?(n=s0(v),g):n},g.fontStyle=function(v){return arguments.length?(o=s0(v),g):o},g.fontWeight=function(v){return arguments.length?(u=s0(v),g):u},g.rotate=function(v){return arguments.length?(l=s0(v),g):l},g.text=function(v){return arguments.length?(e=s0(v),g):e},g.spiral=function(v){return arguments.length?(s=sh1[v]||v,g):s},g.fontSize=function(v){return arguments.length?(i=s0(v),g):i},g.padding=function(v){return arguments.length?(a=s0(v),g):a},g.random=function(v){return arguments.length?(f=v,g):f},g}function ih1(t,e,n,i){if(!e.sprite){var o=t.context,u=t.ratio;o.clearRect(0,0,(vr<<5)/u,Jc/u);var l=0,a=0,s=0,c=n.length,f,g,p,m,v;for(--i;++i<c;){if(e=n[i],o.save(),o.font=e.style+" "+e.weight+" "+~~((e.size+1)/u)+"px "+e.font,f=o.measureText(e.text+"m").width*u,p=e.size<<1,e.rotate){var b=Math.sin(e.rotate*Qv),x=Math.cos(e.rotate*Qv),w=f*x,S=f*b,A=p*x,C=p*b;f=Math.max(Math.abs(w+C),Math.abs(w-C))+31>>5<<5,p=~~Math.max(Math.abs(S+A),Math.abs(S-A))}else f=f+31>>5<<5;if(p>s&&(s=p),l+f>=vr<<5&&(l=0,a+=s,s=0),a+p>=Jc)break;o.translate((l+(f>>1))/u,(a+(p>>1))/u),e.rotate&&o.rotate(e.rotate*Qv),o.fillText(e.text,0,0),e.padding&&(o.lineWidth=2*e.padding,o.strokeText(e.text,0,0)),o.restore(),e.width=f,e.height=p,e.xoff=l,e.yoff=a,e.x1=f>>1,e.y1=p>>1,e.x0=-e.x1,e.y0=-e.y1,e.hasText=!0,l+=f}for(var k=o.getImageData(0,0,(vr<<5)/u,Jc/u).data,M=[];--i>=0;)if(e=n[i],!!e.hasText){for(f=e.width,g=f>>5,p=e.y1-e.y0,m=0;m<p*g;m++)M[m]=0;if(l=e.xoff,l==null)return;a=e.yoff;var T=0,D=-1;for(v=0;v<p;v++){for(m=0;m<f;m++){var I=g*v+(m>>5),U=k[(a+v)*(vr<<5)+(l+m)<<2]?1<<31-m%32:0;M[I]|=U,T|=U}T?D=v:(e.y0++,p--,v--,a++)}e.y1=e.y0+D,e.sprite=M.slice(0,(e.y1-e.y0)*g)}}}function oh1(t,e,n){n>>=5;for(var i=t.sprite,o=t.width>>5,u=t.x-(o<<4),l=u&127,a=32-l,s=t.y1-t.y0,c=(t.y+t.y0)*n+(u>>5),f,g=0;g<s;g++){f=0;for(var p=0;p<=o;p++)if((f<<a|(p<o?(f=i[g*o+p])>>>l:0))&e[c+p])return!0;c+=n}return!1}function uh1(t,e){var n=t[0],i=t[1];e.x+e.x0<n.x&&(n.x=e.x+e.x0),e.y+e.y0<n.y&&(n.y=e.y+e.y0),e.x+e.x1>i.x&&(i.x=e.x+e.x1),e.y+e.y1>i.y&&(i.y=e.y+e.y1)}function lh1(t,e){return t.x+t.x1>e[0].x&&t.x+t.x0<e[1].x&&t.y+t.y1>e[0].y&&t.y+t.y0<e[1].y}function ZY(t){var e=t[0]/t[1];return function(n){return[e*(n*=.1)*Math.cos(n),n*Math.sin(n)]}}function ah1(t){var e=4,n=e*t[0]/t[1],i=0,o=0;return function(u){var l=u<0?-1:1;switch(Math.sqrt(1+4*l*u)-l&3){case 0:i+=n;break;case 1:o+=e;break;case 2:i-=n;break;default:o-=e;break}return[i,o]}}function rh1(t){for(var e=[],n=-1;++n<t;)e[n]=0;return e}function s0(t){return typeof t=="function"?t:function(){return t}}var sh1={archimedean:ZY,rectangular:ah1};const JY=["x","y","font","fontSize","fontStyle","fontWeight","angle"],ch1=["text","font","rotate","fontSize","fontStyle","fontWeight"];function wC(t){i1.call(this,nh1(),t)}wC.Definition={type:"Wordcloud",metadata:{modifies:!0},params:[{name:"size",type:"number",array:!0,length:2},{name:"font",type:"string",expr:!0,default:"sans-serif"},{name:"fontStyle",type:"string",expr:!0,default:"normal"},{name:"fontWeight",type:"string",expr:!0,default:"normal"},{name:"fontSize",type:"number",expr:!0,default:14},{name:"fontSizeRange",type:"number",array:"nullable",default:[10,50]},{name:"rotate",type:"number",expr:!0,default:0},{name:"text",type:"field"},{name:"spiral",type:"string",values:["archimedean","rectangular"]},{name:"padding",type:"number",expr:!0},{name:"as",type:"string",array:!0,length:7,default:JY}]};b1(wC,i1,{transform(t,e){t.size&&!(t.size[0]&&t.size[1])&&u1("Wordcloud size dimensions must be non-zero.");function n(v){const b=t[v];return Q1(b)&&e.modified(b.fields)}const i=t.modified();if(!(i||e.changed(e.ADD_REM)||ch1.some(n)))return;const o=e.materialize(e.SOURCE).source,u=this.value,l=t.as||JY;let a=t.fontSize||14,s;if(Q1(a)?s=t.fontSizeRange:a=bn(a),s){const v=a,b=mt("sqrt")().domain(_i(o,v)).range(s);a=x=>b(v(x))}o.forEach(v=>{v[l[0]]=NaN,v[l[1]]=NaN,v[l[3]]=0});const c=u.words(o).text(t.text).size(t.size||[500,500]).padding(t.padding||1).spiral(t.spiral||"archimedean").rotate(t.rotate||0).font(t.font||"sans-serif").fontStyle(t.fontStyle||"normal").fontWeight(t.fontWeight||"normal").fontSize(a).random(l3).layout(),f=u.size(),g=f[0]>>1,p=f[1]>>1,m=c.length;for(let v=0,b,x;v<m;++v)b=c[v],x=b.datum,x[l[0]]=b.x+g,x[l[1]]=b.y+p,x[l[2]]=b.font,x[l[3]]=b.size,x[l[4]]=b.style,x[l[5]]=b.weight,x[l[6]]=b.rotate;return e.reflow(i).modifies(l)}});const dh1=Object.freeze(Object.defineProperty({__proto__:null,wordcloud:wC},Symbol.toStringTag,{value:"Module"})),fh1=t=>new Uint8Array(t),gh1=t=>new Uint16Array(t),Or=t=>new Uint32Array(t);function hh1(){let t=8,e=[],n=Or(0),i=pc(0,t),o=pc(0,t);return{data:()=>e,seen:()=>n=ph1(n,e.length),add(u){for(let l=0,a=e.length,s=u.length,c;l<s;++l)c=u[l],c._index=a++,e.push(c)},remove(u,l){const a=e.length,s=Array(a-u),c=e;let f,g,p;for(g=0;!l[g]&&g<a;++g)s[g]=e[g],c[g]=g;for(p=g;g<a;++g)f=e[g],l[g]?c[g]=-1:(c[g]=p,i[p]=i[g],o[p]=o[g],s[p]=f,f._index=p++),i[g]=0;return e=s,c},size:()=>e.length,curr:()=>i,prev:()=>o,reset:u=>o[u]=i[u],all:()=>t<257?255:t<65537?65535:4294967295,set(u,l){i[u]|=l},clear(u,l){i[u]&=~l},resize(u,l){const a=i.length;(u>a||l>t)&&(t=Math.max(l,t),i=pc(u,t,i),o=pc(u,t))}}}function ph1(t,e,n){return t.length>=e?t:(n=n||new t.constructor(e),n.set(t),n)}function pc(t,e,n){const i=(e<257?fh1:e<65537?gh1:Or)(t);return n&&i.set(n),i}function mz(t,e,n){const i=1<<e;return{one:i,zero:~i,range:n.slice(),bisect:t.bisect,index:t.index,size:t.size,onAdd(o,u){const l=this,a=l.bisect(l.range,o.value),s=o.index,c=a[0],f=a[1],g=s.length;let p;for(p=0;p<c;++p)u[s[p]]|=i;for(p=f;p<g;++p)u[s[p]]|=i;return l}}}function yz(){let t=Or(0),e=[],n=0;function i(a,s,c){if(!s.length)return[];const f=n,g=s.length,p=Or(g);let m=Array(g),v,b,x;for(x=0;x<g;++x)m[x]=a(s[x]),p[x]=x;if(m=mh1(m,p),f)v=e,b=t,e=Array(f+g),t=Or(f+g),yh1(c,v,b,f,m,p,g,e,t);else{if(c>0)for(x=0;x<g;++x)p[x]+=c;e=m,t=p}return n=f+g,{index:p,value:m}}function o(a,s){const c=n;let f,g,p;for(g=0;!s[t[g]]&&g<c;++g);for(p=g;g<c;++g)s[f=t[g]]||(t[p]=f,e[p]=e[g],++p);n=c-a}function u(a){for(let s=0,c=n;s<c;++s)t[s]=a[t[s]]}function l(a,s){let c;return s?c=s.length:(s=e,c=n),[ku1(s,a[0],0,c),hu(s,a[1],0,c)]}return{insert:i,remove:o,bisect:l,reindex:u,index:()=>t,size:()=>n}}function mh1(t,e){return t.sort.call(e,(n,i)=>{const o=t[n],u=t[i];return o<u?-1:o>u?1:0}),Mu1(t,e)}function yh1(t,e,n,i,o,u,l,a,s){let c=0,f=0,g;for(g=0;c<i&&f<l;++g)e[c]<o[f]?(a[g]=e[c],s[g]=n[c++]):(a[g]=o[f],s[g]=u[f++]+t);for(;c<i;++c,++g)a[g]=e[c],s[g]=n[c];for(;f<l;++f,++g)a[g]=o[f],s[g]=u[f]+t}function EC(t){i1.call(this,hh1(),t),this._indices=null,this._dims=null}EC.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]};b1(EC,i1,{transform(t,e){if(this._dims){var n=t.modified("fields")||t.fields.some(i=>e.modified(i.fields));return n?this.reinit(t,e):this.eval(t,e)}else return this.init(t,e)},init(t,e){const n=t.fields,i=t.query,o=this._indices={},u=this._dims=[],l=i.length;let a=0,s,c;for(;a<l;++a)s=n[a].fname,c=o[s]||(o[s]=yz()),u.push(mz(c,a,i[a]));return this.eval(t,e)},reinit(t,e){const n=e.materialize().fork(),i=t.fields,o=t.query,u=this._indices,l=this._dims,a=this.value,s=a.curr(),c=a.prev(),f=a.all(),g=n.rem=n.add,p=n.mod,m=o.length,v={};let b,x,w,S,A,C,k,M,T;if(c.set(s),e.rem.length&&(A=this.remove(t,e,n)),e.add.length&&a.add(e.add),e.mod.length)for(C={},S=e.mod,k=0,M=S.length;k<M;++k)C[S[k]._index]=1;for(k=0;k<m;++k)T=i[k],(!l[k]||t.modified("fields",k)||e.modified(T.fields))&&(w=T.fname,(b=v[w])||(u[w]=x=yz(),v[w]=b=x.insert(T,e.source,0)),l[k]=mz(x,k,o[k]).onAdd(b,s));for(k=0,M=a.data().length;k<M;++k)A[k]||(c[k]!==s[k]?g.push(k):C[k]&&s[k]!==f&&p.push(k));return a.mask=(1<<m)-1,n},eval(t,e){const n=e.materialize().fork(),i=this._dims.length;let o=0;return e.rem.length&&(this.remove(t,e,n),o|=(1<<i)-1),t.modified("query")&&!t.modified("fields")&&(o|=this.update(t,e,n)),e.add.length&&(this.insert(t,e,n),o|=(1<<i)-1),e.mod.length&&(this.modify(e,n),o|=(1<<i)-1),this.value.mask=o,n},insert(t,e,n){const i=e.add,o=this.value,u=this._dims,l=this._indices,a=t.fields,s={},c=n.add,f=o.size()+i.length,g=u.length;let p=o.size(),m,v,b;o.resize(f,g),o.add(i);const x=o.curr(),w=o.prev(),S=o.all();for(m=0;m<g;++m)v=a[m].fname,b=s[v]||(s[v]=l[v].insert(a[m],i,p)),u[m].onAdd(b,x);for(;p<f;++p)w[p]=S,x[p]!==S&&c.push(p)},modify(t,e){const n=e.mod,i=this.value,o=i.curr(),u=i.all(),l=t.mod;let a,s,c;for(a=0,s=l.length;a<s;++a)c=l[a]._index,o[c]!==u&&n.push(c)},remove(t,e,n){const i=this._indices,o=this.value,u=o.curr(),l=o.prev(),a=o.all(),s={},c=n.rem,f=e.rem;let g,p,m,v;for(g=0,p=f.length;g<p;++g)m=f[g]._index,s[m]=1,l[m]=v=u[m],u[m]=a,v!==a&&c.push(m);for(m in i)i[m].remove(p,s);return this.reindex(e,p,s),s},reindex(t,e,n){const i=this._indices,o=this.value;t.runAfter(()=>{const u=o.remove(e,n);for(const l in i)i[l].reindex(u)})},update(t,e,n){const i=this._dims,o=t.query,u=e.stamp,l=i.length;let a=0,s,c;for(n.filters=0,c=0;c<l;++c)t.modified("query",c)&&(s=c,++a);if(a===1)a=i[s].one,this.incrementOne(i[s],o[s],n.add,n.rem);else for(c=0,a=0;c<l;++c)t.modified("query",c)&&(a|=i[c].one,this.incrementAll(i[c],o[c],u,n.add),n.rem=n.add);return a},incrementAll(t,e,n,i){const o=this.value,u=o.seen(),l=o.curr(),a=o.prev(),s=t.index(),c=t.bisect(t.range),f=t.bisect(e),g=f[0],p=f[1],m=c[0],v=c[1],b=t.one;let x,w,S;if(g<m)for(x=g,w=Math.min(m,p);x<w;++x)S=s[x],u[S]!==n&&(a[S]=l[S],u[S]=n,i.push(S)),l[S]^=b;else if(g>m)for(x=m,w=Math.min(g,v);x<w;++x)S=s[x],u[S]!==n&&(a[S]=l[S],u[S]=n,i.push(S)),l[S]^=b;if(p>v)for(x=Math.max(g,v),w=p;x<w;++x)S=s[x],u[S]!==n&&(a[S]=l[S],u[S]=n,i.push(S)),l[S]^=b;else if(p<v)for(x=Math.max(m,p),w=v;x<w;++x)S=s[x],u[S]!==n&&(a[S]=l[S],u[S]=n,i.push(S)),l[S]^=b;t.range=e.slice()},incrementOne(t,e,n,i){const o=this.value,u=o.curr(),l=t.index(),a=t.bisect(t.range),s=t.bisect(e),c=s[0],f=s[1],g=a[0],p=a[1],m=t.one;let v,b,x;if(c<g)for(v=c,b=Math.min(g,f);v<b;++v)x=l[v],u[x]^=m,n.push(x);else if(c>g)for(v=g,b=Math.min(c,p);v<b;++v)x=l[v],u[x]^=m,i.push(x);if(f>p)for(v=Math.max(c,p),b=f;v<b;++v)x=l[v],u[x]^=m,n.push(x);else if(f<p)for(v=Math.max(g,f),b=p;v<b;++v)x=l[v],u[x]^=m,i.push(x);t.range=e.slice()}});function SC(t){i1.call(this,null,t)}SC.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]};b1(SC,i1,{transform(t,e){const n=~(t.ignore||0),i=t.filter,o=i.mask;if((o&n)===0)return e.StopPropagation;const u=e.fork(e.ALL),l=i.data(),a=i.curr(),s=i.prev(),c=f=>a[f]&n?null:l[f];return u.filter(u.MOD,c),o&o-1?(u.filter(u.ADD,f=>{const g=a[f]&n;return!g&&g^s[f]&n?l[f]:null}),u.filter(u.REM,f=>{const g=a[f]&n;return g&&!(g^(g^s[f]&n))?l[f]:null})):(u.filter(u.ADD,c),u.filter(u.REM,f=>(a[f]&n)===o?l[f]:null)),u.filter(u.SOURCE,f=>c(f._index))}});const vh1=Object.freeze(Object.defineProperty({__proto__:null,crossfilter:EC,resolvefilter:SC},Symbol.toStringTag,{value:"Module"})),bh1="RawCode",t6="Literal",xh1="Property",_h1="Identifier",wh1="ArrayExpression",Eh1="BinaryExpression",tV="CallExpression",Sh1="ConditionalExpression",Ah1="LogicalExpression",Ch1="MemberExpression",kh1="ObjectExpression",Th1="UnaryExpression";function I3(t){this.type=t}I3.prototype.visit=function(t){let e,n,i;if(t(this))return 1;for(e=$h1(this),n=0,i=e.length;n<i;++n)if(e[n].visit(t))return 1};function $h1(t){switch(t.type){case wh1:return t.elements;case Eh1:case Ah1:return[t.left,t.right];case tV:return[t.callee].concat(t.arguments);case Sh1:return[t.test,t.consequent,t.alternate];case Ch1:return[t.object,t.property];case kh1:return t.properties;case xh1:return[t.key,t.value];case Th1:return[t.argument];case _h1:case t6:case bh1:default:return[]}}var zi,T1,o1,mn,At,rh=1,u7=2,e6=3,Ou=4,sh=5,E6=6,Wn=7,l7=8,Mh1=9;zi={};zi[rh]="Boolean";zi[u7]="<end>";zi[e6]="Identifier";zi[Ou]="Keyword";zi[sh]="Null";zi[E6]="Numeric";zi[Wn]="Punctuator";zi[l7]="String";zi[Mh1]="RegularExpression";var Nh1="ArrayExpression",Rh1="BinaryExpression",Dh1="CallExpression",Oh1="ConditionalExpression",eV="Identifier",Fh1="Literal",zh1="LogicalExpression",Lh1="MemberExpression",jh1="ObjectExpression",Ph1="Property",Ih1="UnaryExpression",Ne="Unexpected token %0",Bh1="Unexpected number",Uh1="Unexpected string",qh1="Unexpected identifier",Hh1="Unexpected reserved word",Gh1="Unexpected end of input",T_="Invalid regular expression",Zv="Invalid regular expression: missing /",nV="Octal literals are not allowed in strict mode.",Wh1="Duplicate data property in object literal not allowed in strict mode",We="ILLEGAL",r8="Disabled.",Yh1=new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"),Vh1=new RegExp("[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]");function ch(t,e){if(!t)throw new Error("ASSERT: "+e)}function So(t){return t>=48&&t<=57}function AC(t){return"0123456789abcdefABCDEF".includes(t)}function Fr(t){return"01234567".includes(t)}function Xh1(t){return t===32||t===9||t===11||t===12||t===160||t>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].includes(t)}function s8(t){return t===10||t===13||t===8232||t===8233}function a7(t){return t===36||t===95||t>=65&&t<=90||t>=97&&t<=122||t===92||t>=128&&Yh1.test(String.fromCharCode(t))}function kf(t){return t===36||t===95||t>=65&&t<=90||t>=97&&t<=122||t>=48&&t<=57||t===92||t>=128&&Vh1.test(String.fromCharCode(t))}const Kh1={if:1,in:1,do:1,var:1,for:1,new:1,try:1,let:1,this:1,else:1,case:1,void:1,with:1,enum:1,while:1,break:1,catch:1,throw:1,const:1,yield:1,class:1,super:1,return:1,typeof:1,delete:1,switch:1,export:1,import:1,public:1,static:1,default:1,finally:1,extends:1,package:1,private:1,function:1,continue:1,debugger:1,interface:1,protected:1,instanceof:1,implements:1};function iV(){for(;o1<mn;){const t=T1.charCodeAt(o1);if(Xh1(t)||s8(t))++o1;else break}}function $_(t){var e,n,i,o=0;for(n=t==="u"?4:2,e=0;e<n;++e)o1<mn&&AC(T1[o1])?(i=T1[o1++],o=o*16+"0123456789abcdef".indexOf(i.toLowerCase())):gt({},Ne,We);return String.fromCharCode(o)}function Qh1(){var t,e,n,i;for(t=T1[o1],e=0,t==="}"&&gt({},Ne,We);o1<mn&&(t=T1[o1++],!!AC(t));)e=e*16+"0123456789abcdef".indexOf(t.toLowerCase());return(e>1114111||t!=="}")&&gt({},Ne,We),e<=65535?String.fromCharCode(e):(n=(e-65536>>10)+55296,i=(e-65536&1023)+56320,String.fromCharCode(n,i))}function oV(){var t,e;for(t=T1.charCodeAt(o1++),e=String.fromCharCode(t),t===92&&(T1.charCodeAt(o1)!==117&&gt({},Ne,We),++o1,t=$_("u"),(!t||t==="\\"||!a7(t.charCodeAt(0)))&&gt({},Ne,We),e=t);o1<mn&&(t=T1.charCodeAt(o1),!!kf(t));)++o1,e+=String.fromCharCode(t),t===92&&(e=e.substr(0,e.length-1),T1.charCodeAt(o1)!==117&&gt({},Ne,We),++o1,t=$_("u"),(!t||t==="\\"||!kf(t.charCodeAt(0)))&&gt({},Ne,We),e+=t);return e}function Zh1(){var t,e;for(t=o1++;o1<mn;){if(e=T1.charCodeAt(o1),e===92)return o1=t,oV();if(kf(e))++o1;else break}return T1.slice(t,o1)}function Jh1(){var t,e,n;return t=o1,e=T1.charCodeAt(o1)===92?oV():Zh1(),e.length===1?n=e6:Kh1.hasOwnProperty(e)?n=Ou:e==="null"?n=sh:e==="true"||e==="false"?n=rh:n=e6,{type:n,value:e,start:t,end:o1}}function Jv(){var t=o1,e=T1.charCodeAt(o1),n,i=T1[o1],o,u,l;switch(e){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++o1,{type:Wn,value:String.fromCharCode(e),start:t,end:o1};default:if(n=T1.charCodeAt(o1+1),n===61)switch(e){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return o1+=2,{type:Wn,value:String.fromCharCode(e)+String.fromCharCode(n),start:t,end:o1};case 33:case 61:return o1+=2,T1.charCodeAt(o1)===61&&++o1,{type:Wn,value:T1.slice(t,o1),start:t,end:o1}}}if(l=T1.substr(o1,4),l===">>>=")return o1+=4,{type:Wn,value:l,start:t,end:o1};if(u=l.substr(0,3),u===">>>"||u==="<<="||u===">>=")return o1+=3,{type:Wn,value:u,start:t,end:o1};if(o=u.substr(0,2),i===o[1]&&"+-<>&|".includes(i)||o==="=>")return o1+=2,{type:Wn,value:o,start:t,end:o1};if(o==="//"&&gt({},Ne,We),"<>=!+-*%&|^/".includes(i))return++o1,{type:Wn,value:i,start:t,end:o1};gt({},Ne,We)}function tp1(t){let e="";for(;o1<mn&&AC(T1[o1]);)e+=T1[o1++];return e.length===0&&gt({},Ne,We),a7(T1.charCodeAt(o1))&&gt({},Ne,We),{type:E6,value:parseInt("0x"+e,16),start:t,end:o1}}function ep1(t){let e="0"+T1[o1++];for(;o1<mn&&Fr(T1[o1]);)e+=T1[o1++];return(a7(T1.charCodeAt(o1))||So(T1.charCodeAt(o1)))&&gt({},Ne,We),{type:E6,value:parseInt(e,8),octal:!0,start:t,end:o1}}function vz(){var t,e,n;if(n=T1[o1],ch(So(n.charCodeAt(0))||n===".","Numeric literal must start with a decimal digit or a decimal point"),e=o1,t="",n!=="."){if(t=T1[o1++],n=T1[o1],t==="0"){if(n==="x"||n==="X")return++o1,tp1(e);if(Fr(n))return ep1(e);n&&So(n.charCodeAt(0))&&gt({},Ne,We)}for(;So(T1.charCodeAt(o1));)t+=T1[o1++];n=T1[o1]}if(n==="."){for(t+=T1[o1++];So(T1.charCodeAt(o1));)t+=T1[o1++];n=T1[o1]}if(n==="e"||n==="E")if(t+=T1[o1++],n=T1[o1],(n==="+"||n==="-")&&(t+=T1[o1++]),So(T1.charCodeAt(o1)))for(;So(T1.charCodeAt(o1));)t+=T1[o1++];else gt({},Ne,We);return a7(T1.charCodeAt(o1))&&gt({},Ne,We),{type:E6,value:parseFloat(t),start:e,end:o1}}function np1(){var t="",e,n,i,o,u=!1;for(e=T1[o1],ch(e==="'"||e==='"',"String literal must starts with a quote"),n=o1,++o1;o1<mn;)if(i=T1[o1++],i===e){e="";break}else if(i==="\\")if(i=T1[o1++],!i||!s8(i.charCodeAt(0)))switch(i){case"u":case"x":T1[o1]==="{"?(++o1,t+=Qh1()):t+=$_(i);break;case"n":t+=`
`;break;case"r":t+="\r";break;case"t":t+="	";break;case"b":t+="\b";break;case"f":t+="\f";break;case"v":t+="\v";break;default:Fr(i)?(o="01234567".indexOf(i),o!==0&&(u=!0),o1<mn&&Fr(T1[o1])&&(u=!0,o=o*8+"01234567".indexOf(T1[o1++]),"0123".includes(i)&&o1<mn&&Fr(T1[o1])&&(o=o*8+"01234567".indexOf(T1[o1++]))),t+=String.fromCharCode(o)):t+=i;break}else i==="\r"&&T1[o1]===`
`&&++o1;else{if(s8(i.charCodeAt(0)))break;t+=i}return e!==""&&gt({},Ne,We),{type:l7,value:t,octal:u,start:n,end:o1}}function ip1(t,e){let n=t;e.includes("u")&&(n=n.replace(/\\u\{([0-9a-fA-F]+)\}/g,(i,o)=>{if(parseInt(o,16)<=1114111)return"x";gt({},T_)}).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"x"));try{new RegExp(n)}catch{gt({},T_)}try{return new RegExp(t,e)}catch{return null}}function op1(){var t,e,n,i,o;for(t=T1[o1],ch(t==="/","Regular expression literal must start with a slash"),e=T1[o1++],n=!1,i=!1;o1<mn;)if(t=T1[o1++],e+=t,t==="\\")t=T1[o1++],s8(t.charCodeAt(0))&&gt({},Zv),e+=t;else if(s8(t.charCodeAt(0)))gt({},Zv);else if(n)t==="]"&&(n=!1);else if(t==="/"){i=!0;break}else t==="["&&(n=!0);return i||gt({},Zv),o=e.substr(1,e.length-2),{value:o,literal:e}}function up1(){var t,e,n;for(e="",n="";o1<mn&&(t=T1[o1],!!kf(t.charCodeAt(0)));)++o1,t==="\\"&&o1<mn?gt({},Ne,We):(n+=t,e+=t);return n.search(/[^gimuy]/g)>=0&&gt({},T_,n),{value:n,literal:e}}function lp1(){var t,e,n,i;return At=null,iV(),t=o1,e=op1(),n=up1(),i=ip1(e.value,n.value),{literal:e.literal+n.literal,value:i,regex:{pattern:e.value,flags:n.value},start:t,end:o1}}function ap1(t){return t.type===e6||t.type===Ou||t.type===rh||t.type===sh}function uV(){if(iV(),o1>=mn)return{type:u7,start:o1,end:o1};const t=T1.charCodeAt(o1);return a7(t)?Jh1():t===40||t===41||t===59?Jv():t===39||t===34?np1():t===46?So(T1.charCodeAt(o1+1))?vz():Jv():So(t)?vz():Jv()}function Vn(){const t=At;return o1=t.end,At=uV(),o1=t.end,t}function lV(){const t=o1;At=uV(),o1=t}function rp1(t){const e=new I3(Nh1);return e.elements=t,e}function bz(t,e,n){const i=new I3(t==="||"||t==="&&"?zh1:Rh1);return i.operator=t,i.left=e,i.right=n,i}function sp1(t,e){const n=new I3(Dh1);return n.callee=t,n.arguments=e,n}function cp1(t,e,n){const i=new I3(Oh1);return i.test=t,i.consequent=e,i.alternate=n,i}function CC(t){const e=new I3(eV);return e.name=t,e}function br(t){const e=new I3(Fh1);return e.value=t.value,e.raw=T1.slice(t.start,t.end),t.regex&&(e.raw==="//"&&(e.raw="/(?:)/"),e.regex=t.regex),e}function xz(t,e,n){const i=new I3(Lh1);return i.computed=t==="[",i.object=e,i.property=n,i.computed||(n.member=!0),i}function dp1(t){const e=new I3(jh1);return e.properties=t,e}function _z(t,e,n){const i=new I3(Ph1);return i.key=e,i.value=n,i.kind=t,i}function fp1(t,e){const n=new I3(Ih1);return n.operator=t,n.argument=e,n.prefix=!0,n}function gt(t,e){var n,i=Array.prototype.slice.call(arguments,2),o=e.replace(/%(\d)/g,(u,l)=>(ch(l<i.length,"Message reference must be in range"),i[l]));throw n=new Error(o),n.index=o1,n.description=o,n}function dh(t){t.type===u7&&gt(t,Gh1),t.type===E6&&gt(t,Bh1),t.type===l7&&gt(t,Uh1),t.type===e6&&gt(t,qh1),t.type===Ou&&gt(t,Hh1),gt(t,Ne,t.value)}function yn(t){const e=Vn();(e.type!==Wn||e.value!==t)&&dh(e)}function Pt(t){return At.type===Wn&&At.value===t}function tb(t){return At.type===Ou&&At.value===t}function gp1(){const t=[];for(o1=At.start,yn("[");!Pt("]");)Pt(",")?(Vn(),t.push(null)):(t.push(n6()),Pt("]")||yn(","));return Vn(),rp1(t)}function wz(){o1=At.start;const t=Vn();return t.type===l7||t.type===E6?(t.octal&&gt(t,nV),br(t)):CC(t.value)}function hp1(){var t,e,n,i;if(o1=At.start,t=At,t.type===e6)return n=wz(),yn(":"),i=n6(),_z("init",n,i);if(t.type===u7||t.type===Wn)dh(t);else return e=wz(),yn(":"),i=n6(),_z("init",e,i)}function pp1(){var t=[],e,n,i,o={},u=String;for(o1=At.start,yn("{");!Pt("}");)e=hp1(),e.key.type===eV?n=e.key.name:n=u(e.key.value),i="$"+n,Object.prototype.hasOwnProperty.call(o,i)?gt({},Wh1):o[i]=!0,t.push(e),Pt("}")||yn(",");return yn("}"),dp1(t)}function mp1(){yn("(");const t=kC();return yn(")"),t}const yp1={if:1};function vp1(){var t,e,n;if(Pt("("))return mp1();if(Pt("["))return gp1();if(Pt("{"))return pp1();if(t=At.type,o1=At.start,t===e6||yp1[At.value])n=CC(Vn().value);else if(t===l7||t===E6)At.octal&&gt(At,nV),n=br(Vn());else{if(t===Ou)throw new Error(r8);t===rh?(e=Vn(),e.value=e.value==="true",n=br(e)):t===sh?(e=Vn(),e.value=null,n=br(e)):Pt("/")||Pt("/=")?(n=br(lp1()),lV()):dh(Vn())}return n}function bp1(){const t=[];if(yn("("),!Pt(")"))for(;o1<mn&&(t.push(n6()),!Pt(")"));)yn(",");return yn(")"),t}function xp1(){o1=At.start;const t=Vn();return ap1(t)||dh(t),CC(t.value)}function _p1(){return yn("."),xp1()}function wp1(){yn("[");const t=kC();return yn("]"),t}function Ep1(){var t,e,n;for(t=vp1();;)if(Pt("."))n=_p1(),t=xz(".",t,n);else if(Pt("("))e=bp1(),t=sp1(t,e);else if(Pt("["))n=wp1(),t=xz("[",t,n);else break;return t}function Ez(){const t=Ep1();if(At.type===Wn&&(Pt("++")||Pt("--")))throw new Error(r8);return t}function td(){var t,e;if(At.type!==Wn&&At.type!==Ou)e=Ez();else{if(Pt("++")||Pt("--"))throw new Error(r8);if(Pt("+")||Pt("-")||Pt("~")||Pt("!"))t=Vn(),e=td(),e=fp1(t.value,e);else{if(tb("delete")||tb("void")||tb("typeof"))throw new Error(r8);e=Ez()}}return e}function Sz(t){let e=0;if(t.type!==Wn&&t.type!==Ou)return 0;switch(t.value){case"||":e=1;break;case"&&":e=2;break;case"|":e=3;break;case"^":e=4;break;case"&":e=5;break;case"==":case"!=":case"===":case"!==":e=6;break;case"<":case">":case"<=":case">=":case"instanceof":case"in":e=7;break;case"<<":case">>":case">>>":e=8;break;case"+":case"-":e=9;break;case"*":case"/":case"%":e=11;break}return e}function Sp1(){var t,e,n,i,o,u,l,a,s,c;if(t=At,s=td(),i=At,o=Sz(i),o===0)return s;for(i.prec=o,Vn(),e=[t,At],l=td(),u=[s,i,l];(o=Sz(At))>0;){for(;u.length>2&&o<=u[u.length-2].prec;)l=u.pop(),a=u.pop().value,s=u.pop(),e.pop(),n=bz(a,s,l),u.push(n);i=Vn(),i.prec=o,u.push(i),e.push(At),n=td(),u.push(n)}for(c=u.length-1,n=u[c],e.pop();c>1;)e.pop(),n=bz(u[c-1].value,u[c-2],n),c-=2;return n}function n6(){var t,e,n;return t=Sp1(),Pt("?")&&(Vn(),e=n6(),yn(":"),n=n6(),t=cp1(t,e,n)),t}function kC(){const t=n6();if(Pt(","))throw new Error(r8);return t}function TC(t){T1=t,o1=0,mn=T1.length,At=null,lV();const e=kC();if(At.type!==u7)throw new Error("Unexpect token after expression.");return e}var aV={NaN:"NaN",E:"Math.E",LN2:"Math.LN2",LN10:"Math.LN10",LOG2E:"Math.LOG2E",LOG10E:"Math.LOG10E",PI:"Math.PI",SQRT1_2:"Math.SQRT1_2",SQRT2:"Math.SQRT2",MIN_VALUE:"Number.MIN_VALUE",MAX_VALUE:"Number.MAX_VALUE"};function rV(t){function e(l,a,s,c){let f=t(a[0]);return s&&(f=s+"("+f+")",s.lastIndexOf("new ",0)===0&&(f="("+f+")")),f+"."+l+(c<0?"":c===0?"()":"("+a.slice(1).map(t).join(",")+")")}function n(l,a,s){return c=>e(l,c,a,s)}const i="new Date",o="String",u="RegExp";return{isNaN:"Number.isNaN",isFinite:"Number.isFinite",abs:"Math.abs",acos:"Math.acos",asin:"Math.asin",atan:"Math.atan",atan2:"Math.atan2",ceil:"Math.ceil",cos:"Math.cos",exp:"Math.exp",floor:"Math.floor",hypot:"Math.hypot",log:"Math.log",max:"Math.max",min:"Math.min",pow:"Math.pow",random:"Math.random",round:"Math.round",sin:"Math.sin",sqrt:"Math.sqrt",tan:"Math.tan",clamp:function(l){l.length<3&&u1("Missing arguments to clamp function."),l.length>3&&u1("Too many arguments to clamp function.");const a=l.map(t);return"Math.max("+a[1]+", Math.min("+a[2]+","+a[0]+"))"},now:"Date.now",utc:"Date.UTC",datetime:i,date:n("getDate",i,0),day:n("getDay",i,0),year:n("getFullYear",i,0),month:n("getMonth",i,0),hours:n("getHours",i,0),minutes:n("getMinutes",i,0),seconds:n("getSeconds",i,0),milliseconds:n("getMilliseconds",i,0),time:n("getTime",i,0),timezoneoffset:n("getTimezoneOffset",i,0),utcdate:n("getUTCDate",i,0),utcday:n("getUTCDay",i,0),utcyear:n("getUTCFullYear",i,0),utcmonth:n("getUTCMonth",i,0),utchours:n("getUTCHours",i,0),utcminutes:n("getUTCMinutes",i,0),utcseconds:n("getUTCSeconds",i,0),utcmilliseconds:n("getUTCMilliseconds",i,0),length:n("length",null,-1),parseFloat:"parseFloat",parseInt:"parseInt",upper:n("toUpperCase",o,0),lower:n("toLowerCase",o,0),substring:n("substring",o),split:n("split",o),trim:n("trim",o,0),btoa:"btoa",atob:"atob",regexp:u,test:n("test",u),if:function(l){l.length<3&&u1("Missing arguments to if function."),l.length>3&&u1("Too many arguments to if function.");const a=l.map(t);return"("+a[0]+"?"+a[1]+":"+a[2]+")"}}}function Ap1(t){const e=t&&t.length-1;return e&&(t[0]==='"'&&t[e]==='"'||t[0]==="'"&&t[e]==="'")?t.slice(1,-1):t}function sV(t){t=t||{};const e=t.allowed?D3(t.allowed):{},n=t.forbidden?D3(t.forbidden):{},i=t.constants||aV,o=(t.functions||rV)(g),u=t.globalvar,l=t.fieldvar,a=Q1(u)?u:v=>`${u}["${v}"]`;[...Object.getOwnPropertyNames(Object.prototype).filter(v=>typeof Object.prototype[v]=="function")];let s={},c={},f=0;function g(v){if(w1(v))return v;const b=p[v.type];return b==null&&u1("Unsupported type: "+v.type),b(v)}const p={Literal:v=>v.raw,Identifier:v=>{const b=v.name;return f>0?b:A1(n,b)?u1("Illegal identifier: "+b):A1(i,b)?i[b]:A1(e,b)?b:(s[b]=1,a(b))},MemberExpression:v=>{const b=!v.computed,x=g(v.object);b&&(f+=1);const w=g(v.property);return x===l&&(c[Ap1(w)]=1),b&&(f-=1),x+(b?"."+w:"["+w+"]")},CallExpression:v=>{v.callee.type!=="Identifier"&&u1("Illegal callee type: "+v.callee.type);const b=v.callee.name,x=v.arguments,w=A1(o,b)&&o[b];return w||u1("Unrecognized function: "+b),Q1(w)?w(x):w+"("+x.map(g).join(",")+")"},ArrayExpression:v=>"["+v.elements.map(g).join(",")+"]",BinaryExpression:v=>"("+g(v.left)+" "+v.operator+" "+g(v.right)+")",UnaryExpression:v=>"("+v.operator+g(v.argument)+")",ConditionalExpression:v=>"("+g(v.test)+"?"+g(v.consequent)+":"+g(v.alternate)+")",LogicalExpression:v=>"("+g(v.left)+v.operator+g(v.right)+")",ObjectExpression:v=>{for(const b of v.properties){const x=b.key.name;aE.has(x)&&u1("Illegal property: "+x)}return"{"+v.properties.map(g).join(",")+"}"},Property:v=>{f+=1;const b=g(v.key);return f-=1,b+":"+g(v.value)}};function m(v){const b={code:g(v),globals:Object.keys(s),fields:Object.keys(c)};return s={},c={},b}return m.functions=o,m.constants=i,m}const Az=Symbol("vega_selection_getter");function cV(t){return(!t.getter||!t.getter[Az])&&(t.getter=i3(t.field),t.getter[Az]=!0),t.getter}const $C="intersect",Cz="union",Cp1="vlMulti",kp1="vlPoint",kz="or",Tp1="and",ai="_vgsid_",c8=i3(ai),$p1="E",Mp1="R",Np1="R-E",Rp1="R-LE",Dp1="R-RE",Op1="E-LT",Fp1="E-LTE",zp1="E-GT",Lp1="E-GTE",jp1="E-VALID",Pp1="E-ONE",Tf="index:unit";function Tz(t,e){for(var n=e.fields,i=e.values,o=n.length,u=0,l,a;u<o;++u)if(a=n[u],l=cV(a)(t),au(l)&&(l=fn(l)),au(i[u])&&(i[u]=fn(i[u])),r1(i[u])&&au(i[u][0])&&(i[u]=i[u].map(fn)),a.type===$p1){if(r1(i[u])?!i[u].includes(l):l!==i[u])return!1}else if(a.type===Mp1){if(!U5(l,i[u]))return!1}else if(a.type===Dp1){if(!U5(l,i[u],!0,!1))return!1}else if(a.type===Np1){if(!U5(l,i[u],!1,!1))return!1}else if(a.type===Rp1){if(!U5(l,i[u],!1,!0))return!1}else if(a.type===Op1){if(l>=i[u])return!1}else if(a.type===Fp1){if(l>i[u])return!1}else if(a.type===zp1){if(l<=i[u])return!1}else if(a.type===Lp1){if(l<i[u])return!1}else if(a.type===jp1){if(l===null||isNaN(l))return!1}else if(a.type===Pp1&&i[u].indexOf(l)===-1)return!1;return!0}function Ip1(t,e,n){for(var i=this.context.data[t],o=i?i.values.value:[],u=i?i[Tf]&&i[Tf].value:void 0,l=n===$C,a=o.length,s=0,c,f,g,p,m;s<a;++s)if(c=o[s],u&&l){if(f=f||{},g=f[p=c.unit]||0,g===-1)continue;if(m=Tz(e,c),f[p]=m?-1:++g,m&&u.size===1)return!0;if(!m&&g===u.get(p).count)return!1}else if(m=Tz(e,c),l^m)return m;return a&&l}const dV=ta(c8),Bp1=dV.left,Up1=dV.right;function qp1(t,e,n){const i=this.context.data[t],o=i?i.values.value:[],u=i?i[Tf]&&i[Tf].value:void 0,l=n===$C,a=c8(e),s=Bp1(o,a);if(s===o.length||c8(o[s])!==a)return!1;if(u&&l){if(u.size===1)return!0;if(Up1(o,a)-s<u.size)return!1}return!0}function Hp1(t,e){return t.map(n=>K1(e.fields?{values:e.fields.map(i=>cV(i)(n.datum))}:{[ai]:c8(n.datum)},e))}function Gp1(t,e,n,i){for(var o=this.context.data[t],u=o?o.values.value:[],l={},a={},s={},c,f,g,p,m,v,b,x,w,S,A=u.length,C=0,k,M;C<A;++C)if(c=u[C],p=c.unit,f=c.fields,g=c.values,f&&g){for(k=0,M=f.length;k<M;++k)m=f[k],b=l[m.field]||(l[m.field]={}),x=b[p]||(b[p]=[]),s[m.field]=w=m.type.charAt(0),S=eb[`${w}_union`],b[p]=S(x,S1(g[k]));n&&(x=a[p]||(a[p]=[]),x.push(S1(g).reduce((T,D,I)=>(T[f[I].field]=D,T),{})))}else m=ai,v=c8(c),b=l[m]||(l[m]={}),x=b[p]||(b[p]=[]),x.push(v),n&&(x=a[p]||(a[p]=[]),x.push({[ai]:v}));if(e=e||Cz,l[ai]?l[ai]=eb[`${ai}_${e}`](...Object.values(l[ai])):Object.keys(l).forEach(T=>{l[T]=Object.keys(l[T]).map(D=>l[T][D]).reduce((D,I)=>D===void 0?I:eb[`${s[T]}_${e}`](D,I))}),u=Object.keys(a),n&&u.length){const T=i?kp1:Cp1;l[T]=e===Cz?{[kz]:u.reduce((D,I)=>(D.push(...a[I]),D),[])}:{[Tp1]:u.map(D=>({[kz]:a[D]}))}}return l}var eb={[`${ai}_union`]:Pu1,[`${ai}_intersect`]:Lu1,E_union:function(t,e){if(!t.length)return e;for(var n=0,i=e.length;n<i;++n)t.includes(e[n])||t.push(e[n]);return t},E_intersect:function(t,e){return t.length?t.filter(n=>e.includes(n)):e},R_union:function(t,e){var n=fn(e[0]),i=fn(e[1]);return n>i&&(n=e[1],i=e[0]),t.length?(t[0]>n&&(t[0]=n),t[1]<i&&(t[1]=i),t):[n,i]},R_intersect:function(t,e){var n=fn(e[0]),i=fn(e[1]);return n>i&&(n=e[1],i=e[0]),t.length?i<t[0]||t[1]<n?[]:(t[0]<n&&(t[0]=n),t[1]>i&&(t[1]=i),t):[n,i]}};const Wp1=":",Yp1="@";function MC(t,e,n,i){e[0].type!==t6&&u1("First argument to selection functions must be a string literal.");const o=e[0].value,u=e.length>=2&&st(e).value,l="unit",a=Yp1+l,s=Wp1+o;u===$C&&!A1(i,a)&&(i[a]=n.getData(o).indataRef(n,l)),A1(i,s)||(i[s]=n.getData(o).tuplesRef())}function fV(t){const e=this.context.data[t];return e?e.values.value:[]}function Vp1(t,e,n){const i=this.context.data[t]["index:"+e],o=i?i.value.get(n):void 0;return o&&o.count}function Xp1(t,e){const n=this.context.dataflow,i=this.context.data[t],o=i.input;return n.pulse(o,n.changeset().remove(o3).insert(e)),1}function Kp1(t,e,n){if(t){const i=this.context.dataflow,o=t.mark.source;i.pulse(o,i.changeset().encode(t,e))}return n!==void 0?n:t}const r7=t=>function(e,n){const i=this.context.dataflow.locale();return e===null?"null":i[t](n)(e)},Qp1=r7("format"),gV=r7("timeFormat"),Zp1=r7("utcFormat"),Jp1=r7("timeParse"),tm1=r7("utcParse"),mc=new Date(2e3,0,1);function fh(t,e,n){return!Number.isInteger(t)||!Number.isInteger(e)?"":(mc.setYear(2e3),mc.setMonth(t),mc.setDate(e),gV.call(this,mc,n))}function em1(t){return fh.call(this,t,1,"%B")}function nm1(t){return fh.call(this,t,1,"%b")}function im1(t){return fh.call(this,0,2+t,"%A")}function om1(t){return fh.call(this,0,2+t,"%a")}const um1=":",lm1="@",M_="%",hV="$";function NC(t,e,n,i){e[0].type!==t6&&u1("First argument to data functions must be a string literal.");const o=e[0].value,u=um1+o;if(!A1(u,i))try{i[u]=n.getData(o).tuplesRef()}catch{}}function am1(t,e,n,i){e[0].type!==t6&&u1("First argument to indata must be a string literal."),e[1].type!==t6&&u1("Second argument to indata must be a string literal.");const o=e[0].value,u=e[1].value,l=lm1+u;A1(l,i)||(i[l]=n.getData(o).indataRef(n,u))}function On(t,e,n,i){if(e[0].type===t6)$z(n,i,e[0].value);else for(t in n.scales)$z(n,i,t)}function $z(t,e,n){const i=M_+n;if(!A1(e,i))try{e[i]=t.scaleRef(n)}catch{}}function Li(t,e){if(w1(t)){const n=e.scales[t];return n&&NO(n.value)?n.value:void 0}else if(Q1(t))return NO(t)?t:void 0}function rm1(t,e,n){e.__bandwidth=o=>o&&o.bandwidth?o.bandwidth():0,n._bandwidth=On,n._range=On,n._scale=On;const i=o=>"_["+(o.type===t6?y1(M_+o.value):y1(M_)+"+"+t(o))+"]";return{_bandwidth:o=>`this.__bandwidth(${i(o[0])})`,_range:o=>`${i(o[0])}.range()`,_scale:o=>`${i(o[0])}(${t(o[1])})`}}function RC(t,e){return function(n,i,o){if(n){const u=Li(n,(o||this).context);return u&&u.path[t](i)}else return e(i)}}const sm1=RC("area",Ts1),cm1=RC("bounds",Rs1),dm1=RC("centroid",js1);function fm1(t,e){const n=Li(t,(e||this).context);return n&&n.scale()}function gm1(t){const e=this.context.group;let n=!1;if(e)for(;t;){if(t===e){n=!0;break}t=t.mark.group}return n}function DC(t,e,n){try{t[e].apply(t,["EXPRESSION"].concat([].slice.call(n)))}catch(i){t.warn(i)}return n[n.length-1]}function hm1(){return DC(this.context.dataflow,"warn",arguments)}function pm1(){return DC(this.context.dataflow,"info",arguments)}function mm1(){return DC(this.context.dataflow,"debug",arguments)}function nb(t){const e=t/255;return e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4)}function N_(t){const e=vu(t),n=nb(e.r),i=nb(e.g),o=nb(e.b);return .2126*n+.7152*i+.0722*o}function ym1(t,e){const n=N_(t),i=N_(e),o=Math.max(n,i),u=Math.min(n,i);return(o+.05)/(u+.05)}function vm1(){const t=[].slice.call(arguments);return t.unshift({}),K1(...t)}function pV(t,e){return t===e||t!==t&&e!==e?!0:r1(t)?r1(e)&&t.length===e.length?bm1(t,e):!1:E1(t)&&E1(e)?mV(t,e):!1}function bm1(t,e){for(let n=0,i=t.length;n<i;++n)if(!pV(t[n],e[n]))return!1;return!0}function mV(t,e){for(const n in t)if(!pV(t[n],e[n]))return!1;return!0}function Mz(t){return e=>mV(t,e)}function xm1(t,e,n,i,o,u){const l=this.context.dataflow,a=this.context.data[t],s=a.input,c=l.stamp();let f=a.changes,g,p;if(l._trigger===!1||!(s.value.length||e||i))return 0;if((!f||f.stamp<c)&&(a.changes=f=l.changeset(),f.stamp=c,l.runAfter(()=>{a.modified=!0,l.pulse(s,f).run()},!0,1)),n&&(g=n===!0?o3:r1(n)||xg(n)?n:Mz(n),f.remove(g)),e&&f.insert(e),i&&(g=Mz(i),s.value.some(g)?f.remove(g):f.insert(i)),o)for(p in u)f.modify(o,p,u[p]);return 1}function _m1(t){const e=t.touches,n=e[0].clientX-e[1].clientX,i=e[0].clientY-e[1].clientY;return Math.hypot(n,i)}function wm1(t){const e=t.touches;return Math.atan2(e[0].clientY-e[1].clientY,e[0].clientX-e[1].clientX)}const Nz={};function Em1(t,e){const n=Nz[e]||(Nz[e]=i3(e));return r1(t)?t.map(n):n(t)}function gh(t){return r1(t)||ArrayBuffer.isView(t)?t:null}function OC(t){return gh(t)||(w1(t)?t:null)}function Sm1(t,...e){return gh(t).join(...e)}function Am1(t,...e){return OC(t).indexOf(...e)}function Cm1(t,...e){return OC(t).lastIndexOf(...e)}function km1(t,...e){return OC(t).slice(...e)}function Tm1(t,e,n){return Q1(n)&&u1("Function argument passed to replace."),!w1(e)&&!mE(e)&&u1("Please pass a string or RegExp argument to replace."),String(t).replace(e,n)}function $m1(t){return gh(t).slice().reverse()}function Mm1(t){return gh(t).slice().sort(Zl)}function Nm1(t,e,n){return WS(t||0,e||0,n||0)}function Rm1(t,e){const n=Li(t,(e||this).context);return n&&n.bandwidth?n.bandwidth():0}function Dm1(t,e){const n=Li(t,(e||this).context);return n?n.copy():void 0}function Om1(t,e){const n=Li(t,(e||this).context);return n?n.domain():[]}function Fm1(t,e,n){const i=Li(t,(n||this).context);return i?r1(e)?(i.invertRange||i.invert)(e):(i.invert||i.invertExtent)(e):void 0}function zm1(t,e){const n=Li(t,(e||this).context);return n&&n.range?n.range():[]}function Lm1(t,e,n){const i=Li(t,(n||this).context);return i?i(e):void 0}function jm1(t,e,n,i,o){t=Li(t,(o||this).context);const u=sG(e,n);let l=t.domain(),a=l[0],s=st(l),c=vn;return s-a?c=QH(t,a,s):t=(t.interpolator?mt("sequential")().interpolator(t.interpolator()):mt("linear")().interpolate(t.interpolate()).range(t.range())).domain([a=0,s=1]),t.ticks&&(l=t.ticks(+i||15),a!==l[0]&&l.unshift(a),s!==st(l)&&l.push(s)),l.forEach(f=>u.stop(c(f),t(f))),u}function Pm1(t,e,n){const i=Li(t,(n||this).context);return function(o){return i?i.path.context(o)(e):""}}function Im1(t){let e=null;return function(n){return n?Jr(n,e=e||_l(t)):t}}const yV=t=>t.data;function vV(t,e){const n=fV.call(e,t);return n.root&&n.root.lookup||{}}function Bm1(t,e,n){const i=vV(t,this),o=i[e],u=i[n];return o&&u?o.path(u).map(yV):void 0}function Um1(t,e){const n=vV(t,this)[e];return n?n.ancestors().map(yV):void 0}const bV=()=>typeof window<"u"&&window||null;function qm1(){const t=bV();return t?t.screen:{}}function Hm1(){const t=bV();return t?[t.innerWidth,t.innerHeight]:[void 0,void 0]}function Gm1(){const t=this.context.dataflow,e=t.container&&t.container();return e?[e.clientWidth,e.clientHeight]:[void 0,void 0]}function xV(t,e,n){if(!t)return[];const[i,o]=t,u=new fe().set(i[0],i[1],o[0],o[1]),l=n||this.context.dataflow.scenegraph().root;return uW(l,u,Wm1(e))}function Wm1(t){let e=null;if(t){const n=S1(t.marktype),i=S1(t.markname);e=o=>(!n.length||n.some(u=>o.marktype===u))&&(!i.length||i.some(u=>o.name===u))}return e}function Ym1(t,e,n,i=5){t=S1(t);const o=t[t.length-1];return o===void 0||Math.hypot(o[0]-e,o[1]-n)>i?[...t,[e,n]]:t}function Vm1(t){return S1(t).reduce((e,[n,i],o)=>e+=o==0?`M ${n},${i} `:o===t.length-1?" Z":`L ${n},${i} `,"")}function Xm1(t,e,n){const{x:i,y:o,mark:u}=n,l=new fe().set(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);for(const[s,c]of e)s<l.x1&&(l.x1=s),s>l.x2&&(l.x2=s),c<l.y1&&(l.y1=c),c>l.y2&&(l.y2=c);return l.translate(i,o),xV([[l.x1,l.y1],[l.x2,l.y2]],t,u).filter(s=>Km1(s.x,s.y,e))}function Km1(t,e,n){let i=0;for(let o=0,u=n.length-1;o<n.length;u=o++){const[l,a]=n[u],[s,c]=n[o];c>e!=a>e&&t<(l-s)*(e-c)/(a-c)+s&&i++}return i&1}const d8={random(){return l3()},cumulativeNormal:Ag,cumulativeLogNormal:HE,cumulativeUniform:VE,densityNormal:PE,densityLogNormal:qE,densityUniform:YE,quantileNormal:Cg,quantileLogNormal:GE,quantileUniform:XE,sampleNormal:Sg,sampleLogNormal:UE,sampleUniform:WE,isArray:r1,isBoolean:Mu,isDate:au,isDefined(t){return t!==void 0},isNumber:ht,isObject:E1,isRegExp:mE,isString:w1,isTuple:xg,isValid(t){return t!=null&&t===t},toBoolean:vE,toDate(t){return bE(t)},toNumber:fn,toString:xE,indexof:Am1,join:Sm1,lastindexof:Cm1,replace:Tm1,reverse:$m1,sort:Mm1,slice:km1,flush:AB,lerp:kB,merge:vm1,pad:MB,peek:st,pluck:Em1,span:O8,inrange:U5,truncate:NB,rgb:vu,lab:Od,hcl:Fd,hsl:Rd,luminance:N_,contrast:ym1,sequence:b2,format:Qp1,utcFormat:Zp1,utcParse:tm1,utcOffset:fU,utcSequence:pU,timeFormat:gV,timeParse:Jp1,timeOffset:dU,timeSequence:hU,timeUnitSpecifier:tU,monthFormat:em1,monthAbbrevFormat:nm1,dayFormat:im1,dayAbbrevFormat:om1,quarter:_B,utcquarter:wB,week:nU,utcweek:uU,dayofyear:eU,utcdayofyear:oU,warn:hm1,info:pm1,debug:mm1,extent(t){return _i(t)},inScope:gm1,intersect:xV,clampRange:EB,pinchDistance:_m1,pinchAngle:wm1,screen:qm1,containerSize:Gm1,windowSize:Hm1,bandspace:Nm1,setdata:Xp1,pathShape:Im1,panLinear:yB,panLog:vB,panPow:bB,panSymlog:xB,zoomLinear:dE,zoomLog:fE,zoomPow:vd,zoomSymlog:gE,encode:Kp1,modify:xm1,lassoAppend:Ym1,lassoPath:Vm1,intersectLasso:Xm1},Qm1=["view","item","group","xy","x","y"],Zm1="event.vega.",_V="this.",FC={},wV={forbidden:["_"],allowed:["datum","event","item"],fieldvar:"datum",globalvar:t=>`_[${y1(hV+t)}]`,functions:Jm1,constants:aV,visitors:FC},R_=sV(wV);function Jm1(t){const e=rV(t);Qm1.forEach(n=>e[n]=Zm1+n);for(const n in d8)e[n]=_V+n;return K1(e,rm1(t,d8,FC)),e}function re(t,e,n){return arguments.length===1?d8[t]:(d8[t]=e,n&&(FC[t]=n),R_&&(R_.functions[t]=_V+t),this)}re("bandwidth",Rm1,On);re("copy",Dm1,On);re("domain",Om1,On);re("range",zm1,On);re("invert",Fm1,On);re("scale",Lm1,On);re("gradient",jm1,On);re("geoArea",sm1,On);re("geoBounds",cm1,On);re("geoCentroid",dm1,On);re("geoShape",Pm1,On);re("geoScale",fm1,On);re("indata",Vp1,am1);re("data",fV,NC);re("treePath",Bm1,NC);re("treeAncestors",Um1,NC);re("vlSelectionTest",Ip1,MC);re("vlSelectionIdTest",qp1,MC);re("vlSelectionResolve",Gp1,MC);re("vlSelectionTuples",Hp1);function Ci(t,e){const n={};let i;try{t=w1(t)?t:y1(t)+"",i=TC(t)}catch{u1("Expression parse error: "+t)}i.visit(u=>{if(u.type!==tV)return;const l=u.callee.name,a=wV.visitors[l];a&&a(l,u.arguments,e,n)});const o=R_(i);return o.globals.forEach(u=>{const l=hV+u;!A1(n,l)&&e.getSignal(u)&&(n[l]=e.signalRef(u))}),{$expr:K1({code:o.code},e.options.ast?{ast:i}:null),$fields:o.fields,$params:n}}function ty1(t){const e=this,n=t.operators||[];return t.background&&(e.background=t.background),t.eventConfig&&(e.eventConfig=t.eventConfig),t.locale&&(e.locale=t.locale),n.forEach(i=>e.parseOperator(i)),n.forEach(i=>e.parseOperatorParameters(i)),(t.streams||[]).forEach(i=>e.parseStream(i)),(t.updates||[]).forEach(i=>e.parseUpdate(i)),e.resolve()}const ey1=D3(["rule"]),Rz=D3(["group","image","rect"]);function ny1(t,e){let n="";return ey1[e]||(t.x2&&(t.x?(Rz[e]&&(n+="if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;"),n+="o.width=o.x2-o.x;"):n+="o.x=o.x2-(o.width||0);"),t.xc&&(n+="o.x=o.xc-(o.width||0)/2;"),t.y2&&(t.y?(Rz[e]&&(n+="if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;"),n+="o.height=o.y2-o.y;"):n+="o.y=o.y2-(o.height||0);"),t.yc&&(n+="o.y=o.yc-(o.height||0)/2;")),n}function zC(t){return(t+"").toLowerCase()}function iy1(t){return zC(t)==="operator"}function oy1(t){return zC(t)==="collect"}function I9(t,e,n){n.endsWith(";")||(n="return("+n+");");const i=Function(...e.concat(n));return t&&t.functions?i.bind(t.functions):i}function uy1(t,e,n,i){return`((u = ${t}) < (v = ${e}) || u == null) && v != null ? ${n}
  : (u > v || v == null) && u != null ? ${i}
  : ((v = v instanceof Date ? +v : v), (u = u instanceof Date ? +u : u)) !== u && v === v ? ${n}
  : v !== v && u === u ? ${i} : `}var ly1={operator:(t,e)=>I9(t,["_"],e.code),parameter:(t,e)=>I9(t,["datum","_"],e.code),event:(t,e)=>I9(t,["event"],e.code),handler:(t,e)=>{const n=`var datum=event.item&&event.item.datum;return ${e.code};`;return I9(t,["_","event"],n)},encode:(t,e)=>{const{marktype:n,channels:i}=e;let o="var o=item,datum=o.datum,m=0,$;";for(const u in i){const l="o["+y1(u)+"]";o+=`$=${i[u].code};if(${l}!==$)${l}=$,m=1;`}return o+=ny1(i,n),o+="return m;",I9(t,["item","_"],o)},codegen:{get(t){const e=`[${t.map(y1).join("][")}]`,n=Function("_",`return _${e};`);return n.path=e,n},comparator(t,e){let n;const i=(u,l)=>{const a=e[l];let s,c;return u.path?(s=`a${u.path}`,c=`b${u.path}`):((n=n||{})["f"+l]=u,s=`this.f${l}(a)`,c=`this.f${l}(b)`),uy1(s,c,-a,a)},o=Function("a","b","var u, v; return "+t.map(i).join("")+"0;");return n?o.bind(n):o}}};function ay1(t){const e=this;iy1(t.type)||!t.type?e.operator(t,t.update?e.operatorExpression(t.update):null):e.transform(t,t.type)}function ry1(t){const e=this;if(t.params){const n=e.get(t.id);n||u1("Invalid operator id: "+t.id),e.dataflow.connect(n,n.parameters(e.parseParameters(t.params),t.react,t.initonly))}}function sy1(t,e){e=e||{};const n=this;for(const i in t){const o=t[i];e[i]=r1(o)?o.map(u=>Dz(u,n,e)):Dz(o,n,e)}return e}function Dz(t,e,n){if(!t||!E1(t))return t;for(let i=0,o=Oz.length,u;i<o;++i)if(u=Oz[i],A1(t,u.key))return u.parse(t,e,n);return t}var Oz=[{key:"$ref",parse:cy1},{key:"$key",parse:fy1},{key:"$expr",parse:dy1},{key:"$field",parse:gy1},{key:"$encode",parse:py1},{key:"$compare",parse:hy1},{key:"$context",parse:my1},{key:"$subflow",parse:yy1},{key:"$tupleid",parse:vy1}];function cy1(t,e){return e.get(t.$ref)||u1("Operator not defined: "+t.$ref)}function dy1(t,e,n){t.$params&&e.parseParameters(t.$params,n);const i="e:"+t.$expr.code;return e.fn[i]||(e.fn[i]=u2(e.parameterExpression(t.$expr),t.$fields))}function fy1(t,e){const n="k:"+t.$key+"_"+!!t.$flat;return e.fn[n]||(e.fn[n]=yE(t.$key,t.$flat,e.expr.codegen))}function gy1(t,e){if(!t.$field)return null;const n="f:"+t.$field+"_"+t.$name;return e.fn[n]||(e.fn[n]=i3(t.$field,t.$name,e.expr.codegen))}function hy1(t,e){const n="c:"+t.$compare+"_"+t.$order,i=S1(t.$compare).map(o=>o&&o.$tupleid?z1:o);return e.fn[n]||(e.fn[n]=hE(i,t.$order,e.expr.codegen))}function py1(t,e){const n=t.$encode,i={};for(const o in n){const u=n[o];i[o]=u2(e.encodeExpression(u.$expr),u.$fields),i[o].output=u.$output}return i}function my1(t,e){return e}function yy1(t,e){const n=t.$subflow;return function(i,o,u){const l=e.fork().parse(n),a=l.get(n.operators[0].id),s=l.signals.parent;return s&&s.set(u),a.detachSubflow=()=>e.detach(l),a}}function vy1(){return z1}function by1(t){var e=this,n=t.filter!=null?e.eventExpression(t.filter):void 0,i=t.stream!=null?e.get(t.stream):void 0,o;t.source?i=e.events(t.source,t.type,n):t.merge&&(o=t.merge.map(u=>e.get(u)),i=o[0].merge.apply(o[0],o.slice(1))),t.between&&(o=t.between.map(u=>e.get(u)),i=i.between(o[0],o[1])),t.filter&&(i=i.filter(n)),t.throttle!=null&&(i=i.throttle(+t.throttle)),t.debounce!=null&&(i=i.debounce(+t.debounce)),i==null&&u1("Invalid stream definition: "+JSON.stringify(t)),t.consume&&i.consume(!0),e.stream(t,i)}function xy1(t){var e=this,n=E1(n=t.source)?n.$ref:n,i=e.get(n),o=null,u=t.update,l=void 0;i||u1("Source not defined: "+t.source),o=t.target&&t.target.$expr?e.eventExpression(t.target.$expr):e.get(t.target),u&&u.$expr&&(u.$params&&(l=e.parseParameters(u.$params)),u=e.handlerExpression(u.$expr)),e.update(t,i,o,u,l)}const _y1={skip:!0};function wy1(t){var e=this,n={};if(t.signals){var i=n.signals={};Object.keys(e.signals).forEach(u=>{const l=e.signals[u];t.signals(u,l)&&(i[u]=l.value)})}if(t.data){var o=n.data={};Object.keys(e.data).forEach(u=>{const l=e.data[u];t.data(u,l)&&(o[u]=l.input.value)})}return e.subcontext&&t.recurse!==!1&&(n.subcontext=e.subcontext.map(u=>u.getState(t))),n}function Ey1(t){var e=this,n=e.dataflow,i=t.data,o=t.signals;Object.keys(o||{}).forEach(u=>{n.update(e.signals[u],o[u],_y1)}),Object.keys(i||{}).forEach(u=>{n.pulse(e.data[u].input,n.changeset().remove(o3).insert(i[u]))}),(t.subcontext||[]).forEach((u,l)=>{const a=e.subcontext[l];a&&a.setState(u)})}function EV(t,e,n,i){return new SV(t,e,n,i)}function SV(t,e,n,i){this.dataflow=t,this.transforms=e,this.events=t.events.bind(t),this.expr=i||ly1,this.signals={},this.scales={},this.nodes={},this.data={},this.fn={},n&&(this.functions=Object.create(n),this.functions.context=this)}function Fz(t){this.dataflow=t.dataflow,this.transforms=t.transforms,this.events=t.events,this.expr=t.expr,this.signals=Object.create(t.signals),this.scales=Object.create(t.scales),this.nodes=Object.create(t.nodes),this.data=Object.create(t.data),this.fn=Object.create(t.fn),t.functions&&(this.functions=Object.create(t.functions),this.functions.context=this)}SV.prototype=Fz.prototype={fork(){const t=new Fz(this);return(this.subcontext||(this.subcontext=[])).push(t),t},detach(t){this.subcontext=this.subcontext.filter(n=>n!==t);const e=Object.keys(t.nodes);for(const n of e)t.nodes[n]._targets=null;for(const n of e)t.nodes[n].detach();t.nodes=null},get(t){return this.nodes[t]},set(t,e){return this.nodes[t]=e},add(t,e){const n=this,i=n.dataflow,o=t.value;if(n.set(t.id,e),oy1(t.type)&&o&&(o.$ingest?i.ingest(e,o.$ingest,o.$format):o.$request?i.preload(e,o.$request,o.$format):i.pulse(e,i.changeset().insert(o))),t.root&&(n.root=e),t.parent){let u=n.get(t.parent.$ref);u?(i.connect(u,[e]),e.targets().add(u)):(n.unresolved=n.unresolved||[]).push(()=>{u=n.get(t.parent.$ref),i.connect(u,[e]),e.targets().add(u)})}if(t.signal&&(n.signals[t.signal]=e),t.scale&&(n.scales[t.scale]=e),t.data)for(const u in t.data){const l=n.data[u]||(n.data[u]={});t.data[u].forEach(a=>l[a]=e)}},resolve(){return(this.unresolved||[]).forEach(t=>t()),delete this.unresolved,this},operator(t,e){this.add(t,this.dataflow.add(t.value,e))},transform(t,e){this.add(t,this.dataflow.add(this.transforms[zC(e)]))},stream(t,e){this.set(t.id,e)},update(t,e,n,i,o){this.dataflow.on(e,n,i,o,t.options)},operatorExpression(t){return this.expr.operator(this,t)},parameterExpression(t){return this.expr.parameter(this,t)},eventExpression(t){return this.expr.event(this,t)},handlerExpression(t){return this.expr.handler(this,t)},encodeExpression(t){return this.expr.encode(this,t)},parse:ty1,parseOperator:ay1,parseOperatorParameters:ry1,parseParameters:sy1,parseStream:by1,parseUpdate:xy1,getState:wy1,setState:Ey1};function Sy1(t){const e=t.container();e&&(e.setAttribute("role","graphics-document"),e.setAttribute("aria-roleDescription","visualization"),AV(e,t.description()))}function AV(t,e){t&&(e==null?t.removeAttribute("aria-label"):t.setAttribute("aria-label",e))}function Ay1(t){t.add(null,e=>(t._background=e.bg,t._resize=1,e.bg),{bg:t._signals.background})}const ib="default";function Cy1(t){const e=t._signals.cursor||(t._signals.cursor=t.add({user:ib,item:null}));t.on(t.events("view","pointermove"),e,(n,i)=>{const o=e.value,u=o?w1(o)?o:o.user:ib,l=i.item&&i.item.cursor||null;return o&&u===o.user&&l==o.item?o:{user:u,item:l}}),t.add(null,function(n){let i=n.cursor,o=this.value;return w1(i)||(o=i.item,i=i.user),D_(t,i&&i!==ib?i:o||i),o},{cursor:e})}function D_(t,e){const n=t.globalCursor()?typeof document<"u"&&document.body:t.container();if(n)return e==null?n.style.removeProperty("cursor"):n.style.cursor=e}function $f(t,e){var n=t._runtime.data;return A1(n,e)||u1("Unrecognized data set: "+e),n[e]}function ky1(t,e){return arguments.length<2?$f(this,t).values.value:hh.call(this,t,x6().remove(o3).insert(e))}function hh(t,e){UU(e)||u1("Second argument to changes must be a changeset.");const n=$f(this,t);return n.modified=!0,this.pulse(n.input,e)}function Ty1(t,e){return hh.call(this,t,x6().insert(e))}function $y1(t,e){return hh.call(this,t,x6().remove(e))}function CV(t){var e=t.padding();return Math.max(0,t._viewWidth+e.left+e.right)}function kV(t){var e=t.padding();return Math.max(0,t._viewHeight+e.top+e.bottom)}function ph(t){var e=t.padding(),n=t._origin;return[e.left+n[0],e.top+n[1]]}function My1(t){var e=ph(t),n=CV(t),i=kV(t);t._renderer.background(t.background()),t._renderer.resize(n,i,e),t._handler.origin(e),t._resizeListeners.forEach(o=>{try{o(n,i)}catch(u){t.error(u)}})}function Ny1(t,e,n){var i=t._renderer,o=i&&i.canvas(),u,l,a;return o&&(a=ph(t),l=e.changedTouches?e.changedTouches[0]:e,u=Jg(l,o),u[0]-=a[0],u[1]-=a[1]),e.dataflow=t,e.item=n,e.vega=Ry1(t,n,u),e}function Ry1(t,e,n){const i=e?e.mark.marktype==="group"?e:e.mark.group:null;function o(l){var a=i,s;if(l){for(s=e;s;s=s.mark.group)if(s.mark.name===l){a=s;break}}return a&&a.mark&&a.mark.interactive?a:{}}function u(l){if(!l)return n;w1(l)&&(l=o(l));const a=n.slice();for(;l;)a[0]-=l.x||0,a[1]-=l.y||0,l=l.mark&&l.mark.group;return a}return{view:bn(t),item:bn(e||{}),group:o,xy:u,x:l=>u(l)[0],y:l=>u(l)[1]}}const zz="view",Dy1="timer",Oy1="window",Fy1={trap:!1};function zy1(t){const e=K1({defaults:{}},t),n=(i,o)=>{o.forEach(u=>{r1(i[u])&&(i[u]=D3(i[u]))})};return n(e.defaults,["prevent","allow"]),n(e,["view","window","selector"]),e}function TV(t,e,n,i){t._eventListeners.push({type:n,sources:S1(e),handler:i})}function Ly1(t,e){var n=t._eventConfig.defaults,i=n.prevent,o=n.allow;return i===!1||o===!0?!1:i===!0||o===!1?!0:i?i[e]:o?!o[e]:t.preventDefault()}function yc(t,e,n){const i=t._eventConfig&&t._eventConfig[e];return i===!1||E1(i)&&!i[n]?(t.warn(`Blocked ${e} ${n} event listener.`),!1):!0}function jy1(t,e,n){var i=this,o=new Eg(n),u=function(c,f){i.runAsync(null,()=>{t===zz&&Ly1(i,e)&&c.preventDefault(),o.receive(Ny1(i,c,f))})},l;if(t===Dy1)yc(i,"timer",e)&&i.timer(u,e);else if(t===zz)yc(i,"view",e)&&i.addEventListener(e,u,Fy1);else if(t===Oy1?yc(i,"window",e)&&typeof window<"u"&&(l=[window]):typeof document<"u"&&yc(i,"selector",e)&&(l=Array.from(document.querySelectorAll(t))),!l)i.warn("Can not resolve event source: "+t);else{for(var a=0,s=l.length;a<s;++a)l[a].addEventListener(e,u);TV(i,l,e,u)}return o}function Lz(t){return t.item}function jz(t){return t.item.mark.source}function Pz(t){return function(e,n){return n.vega.view().changeset().encode(n.item,t)}}function Py1(t,e){return t=[t||"hover"],e=[e||"update",t[0]],this.on(this.events("view","pointerover",Lz),jz,Pz(t)),this.on(this.events("view","pointerout",Lz),jz,Pz(e)),this}function Iy1(){var t=this._tooltip,e=this._timers,n=this._handler.handlers(),i=this._eventListeners,o,u,l,a,s;for(o=e.length;--o>=0;)e[o].stop();for(o=i.length;--o>=0;)for(l=i[o],u=l.sources.length;--u>=0;)l.sources[u].removeEventListener(l.type,l.handler);for(t&&t.call(this,this._handler,null,null,null),o=n.length;--o>=0;)s=n[o].type,a=n[o].handler,this._handler.off(s,a);return this}function E2(t,e,n){const i=document.createElement(t);for(const o in e)i.setAttribute(o,e[o]);return n!=null&&(i.textContent=n),i}const By1="vega-bind",Uy1="vega-bind-name",qy1="vega-bind-radio";function Hy1(t,e,n){if(!e)return;const i=n.param;let o=n.state;return o||(o=n.state={elements:null,active:!1,set:null,update:l=>{l!=t.signal(i.signal)&&t.runAsync(null,()=>{o.source=!0,t.signal(i.signal,l)})}},i.debounce&&(o.update=pE(i.debounce,o.update))),(i.input==null&&i.element?Gy1:Yy1)(o,e,i,t),o.active||(t.on(t._signals[i.signal],null,()=>{o.source?o.source=!1:o.set(t.signal(i.signal))}),o.active=!0),o}function Gy1(t,e,n,i){const o=n.event||"input",u=()=>t.update(e.value);i.signal(n.signal,e.value),e.addEventListener(o,u),TV(i,e,o,u),t.set=l=>{e.value=l,e.dispatchEvent(Wy1(o))}}function Wy1(t){return typeof Event<"u"?new Event(t):{type:t}}function Yy1(t,e,n,i){const o=i.signal(n.signal),u=E2("div",{class:By1}),l=n.input==="radio"?u:u.appendChild(E2("label"));l.appendChild(E2("span",{class:Uy1},n.name||n.signal)),e.appendChild(u);let a=Vy1;switch(n.input){case"checkbox":a=Xy1;break;case"select":a=Ky1;break;case"radio":a=Qy1;break;case"range":a=Zy1;break}a(t,l,n,o)}function Vy1(t,e,n,i){const o=E2("input");for(const u in n)u!=="signal"&&u!=="element"&&o.setAttribute(u==="input"?"type":u,n[u]);o.setAttribute("name",n.signal),o.value=i,e.appendChild(o),o.addEventListener("input",()=>t.update(o.value)),t.elements=[o],t.set=u=>o.value=u}function Xy1(t,e,n,i){const o={type:"checkbox",name:n.signal};i&&(o.checked=!0);const u=E2("input",o);e.appendChild(u),u.addEventListener("change",()=>t.update(u.checked)),t.elements=[u],t.set=l=>u.checked=!!l||null}function Ky1(t,e,n,i){const o=E2("select",{name:n.signal}),u=n.labels||[];n.options.forEach((l,a)=>{const s={value:l};Mf(l,i)&&(s.selected=!0),o.appendChild(E2("option",s,(u[a]||l)+""))}),e.appendChild(o),o.addEventListener("change",()=>{t.update(n.options[o.selectedIndex])}),t.elements=[o],t.set=l=>{for(let a=0,s=n.options.length;a<s;++a)if(Mf(n.options[a],l)){o.selectedIndex=a;return}}}function Qy1(t,e,n,i){const o=E2("span",{class:qy1}),u=n.labels||[];e.appendChild(o),t.elements=n.options.map((l,a)=>{const s={type:"radio",name:n.signal,value:l};Mf(l,i)&&(s.checked=!0);const c=E2("input",s);c.addEventListener("change",()=>t.update(l));const f=E2("label",{},(u[a]||l)+"");return f.prepend(c),o.appendChild(f),c}),t.set=l=>{const a=t.elements,s=a.length;for(let c=0;c<s;++c)Mf(a[c].value,l)&&(a[c].checked=!0)}}function Zy1(t,e,n,i){i=i!==void 0?i:(+n.max+ +n.min)/2;const o=n.max!=null?n.max:Math.max(100,+i)||100,u=n.min||Math.min(0,o,+i)||0,l=n.step||pu(u,o,100),a=E2("input",{type:"range",name:n.signal,min:u,max:o,step:l});a.value=i;const s=E2("span",{},+i);e.appendChild(a),e.appendChild(s);const c=()=>{s.textContent=a.value,t.update(+a.value)};a.addEventListener("input",c),a.addEventListener("change",c),t.elements=[a],t.set=f=>{a.value=f,s.textContent=f}}function Mf(t,e){return t===e||t+""==e+""}function $V(t,e,n,i,o,u){return e=e||new i(t.loader()),e.initialize(n,CV(t),kV(t),ph(t),o,u).background(t.background())}function LC(t,e){return e?function(){try{e.apply(this,arguments)}catch(n){t.error(n)}}:null}function Jy1(t,e,n,i){const o=new i(t.loader(),LC(t,t.tooltip())).scene(t.scenegraph().root).initialize(n,ph(t),t);return e&&e.handlers().forEach(u=>{o.on(u.type,u.handler)}),o}function tv1(t,e){const n=this,i=n._renderType,o=n._eventConfig.bind,u=th(i);t=n._el=t?ob(n,t,!0):null,Sy1(n),u||n.error("Unrecognized renderer type: "+i);const l=u.handler||J8,a=t?u.renderer:u.headless;return n._renderer=a?$V(n,n._renderer,t,a):null,n._handler=Jy1(n,n._handler,t,l),n._redraw=!0,t&&o!=="none"&&(e=e?n._elBind=ob(n,e,!0):t.appendChild(E2("form",{class:"vega-bindings"})),n._bind.forEach(s=>{s.param.element&&o!=="container"&&(s.element=ob(n,s.param.element,!!s.param.input))}),n._bind.forEach(s=>{Hy1(n,s.element||e,s)})),n}function ob(t,e,n){if(typeof e=="string")if(typeof document<"u"){if(e=document.querySelector(e),!e)return t.error("Signal bind element not found: "+e),null}else return t.error("DOM document instance not found."),null;if(e&&n)try{e.textContent=""}catch(i){e=null,t.error(i)}return e}const B9=t=>+t||0,ev1=t=>({top:t,bottom:t,left:t,right:t});function Iz(t){return E1(t)?{top:B9(t.top),bottom:B9(t.bottom),left:B9(t.left),right:B9(t.right)}:ev1(B9(t))}async function jC(t,e,n,i){const o=th(e),u=o&&o.headless;return u||u1("Unrecognized renderer type: "+e),await t.runAsync(),$V(t,null,null,u,n,i).renderAsync(t._scenegraph.root)}async function nv1(t,e){t!==eu.Canvas&&t!==eu.SVG&&t!==eu.PNG&&u1("Unrecognized image type: "+t);const n=await jC(this,t,e);return t===eu.SVG?iv1(n.svg(),"image/svg+xml"):n.canvas().toDataURL("image/png")}function iv1(t,e){const n=new Blob([t],{type:e});return window.URL.createObjectURL(n)}async function ov1(t,e){return(await jC(this,eu.Canvas,t,e)).canvas()}async function uv1(t){return(await jC(this,eu.SVG,t)).svg()}function lv1(t,e,n){return EV(t,pl,d8,n).parse(e)}function av1(t){var e=this._runtime.scales;return A1(e,t)||u1("Unrecognized scale or projection: "+t),e[t].value}var MV="width",NV="height",PC="padding",Bz={skip:!0};function RV(t,e){var n=t.autosize(),i=t.padding();return e-(n&&n.contains===PC?i.left+i.right:0)}function DV(t,e){var n=t.autosize(),i=t.padding();return e-(n&&n.contains===PC?i.top+i.bottom:0)}function rv1(t){var e=t._signals,n=e[MV],i=e[NV],o=e[PC];function u(){t._autosize=t._resize=1}t._resizeWidth=t.add(null,a=>{t._width=a.size,t._viewWidth=RV(t,a.size),u()},{size:n}),t._resizeHeight=t.add(null,a=>{t._height=a.size,t._viewHeight=DV(t,a.size),u()},{size:i});const l=t.add(null,u,{pad:o});t._resizeWidth.rank=n.rank+1,t._resizeHeight.rank=i.rank+1,l.rank=o.rank+1}function sv1(t,e,n,i,o,u){this.runAfter(l=>{let a=0;l._autosize=0,l.width()!==n&&(a=1,l.signal(MV,n,Bz),l._resizeWidth.skip(!0)),l.height()!==i&&(a=1,l.signal(NV,i,Bz),l._resizeHeight.skip(!0)),l._viewWidth!==t&&(l._resize=1,l._viewWidth=t),l._viewHeight!==e&&(l._resize=1,l._viewHeight=e),(l._origin[0]!==o[0]||l._origin[1]!==o[1])&&(l._resize=1,l._origin=o),a&&l.run("enter"),u&&l.runAfter(s=>s.resize())},!1,1)}function cv1(t){return this._runtime.getState(t||{data:dv1,signals:fv1,recurse:!0})}function dv1(t,e){return e.modified&&r1(e.input.value)&&!t.startsWith("_:vega:_")}function fv1(t,e){return!(t==="parent"||e instanceof pl.proxy)}function gv1(t){return this.runAsync(null,e=>{e._trigger=!1,e._runtime.setState(t)},e=>{e._trigger=!0}),this}function hv1(t,e){function n(i){t({timestamp:Date.now(),elapsed:i})}this._timers.push(jd1(n,e))}function pv1(t,e,n,i){const o=t.element();o&&o.setAttribute("title",mv1(i))}function mv1(t){return t==null?"":r1(t)?OV(t):E1(t)&&!au(t)?yv1(t):t+""}function yv1(t){return Object.keys(t).map(e=>{const n=t[e];return e+": "+(r1(n)?OV(n):FV(n))}).join(`
`)}function OV(t){return"["+t.map(FV).join(", ")+"]"}function FV(t){return r1(t)?"[…]":E1(t)&&!au(t)?"{…}":t}function vv1(){if(this.renderer()==="canvas"&&this._renderer._canvas){let t=null;const e=()=>{t?.();const n=matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`);n.addEventListener("change",e),t=()=>{n.removeEventListener("change",e)},this._renderer._canvas.getContext("2d").pixelRatio=window.devicePixelRatio||1,this._redraw=!0,this._resize=1,this.resize().runAsync()};e()}}function zV(t,e){const n=this;if(e=e||{},X5.call(n),e.loader&&n.loader(e.loader),e.logger&&n.logger(e.logger),e.logLevel!=null&&n.logLevel(e.logLevel),e.locale||t.locale){const u=K1({},t.locale,e.locale);n.locale(RU(u.number,u.time))}n._el=null,n._elBind=null,n._renderType=e.renderer||eu.Canvas,n._scenegraph=new RG;const i=n._scenegraph.root;n._renderer=null,n._tooltip=e.tooltip||pv1,n._redraw=!0,n._handler=new J8().scene(i),n._globalCursor=!1,n._preventDefault=!1,n._timers=[],n._eventListeners=[],n._resizeListeners=[],n._eventConfig=zy1(t.eventConfig),n.globalCursor(n._eventConfig.globalCursor);const o=lv1(n,t,e.expr);n._runtime=o,n._signals=o.signals,n._bind=(t.bindings||[]).map(u=>({state:null,param:K1({},u)})),o.root&&o.root.set(i),i.source=o.data.root.input,n.pulse(o.data.root.input,n.changeset().insert(i.items)),n._width=n.width(),n._height=n.height(),n._viewWidth=RV(n,n._width),n._viewHeight=DV(n,n._height),n._origin=[0,0],n._resize=0,n._autosize=1,rv1(n),Ay1(n),Cy1(n),n.description(t.description),e.hover&&n.hover(),e.container&&n.initialize(e.container,e.bind),e.watchPixelRatio&&n._watchPixelRatio()}function vc(t,e){return A1(t._signals,e)?t._signals[e]:u1("Unrecognized signal name: "+y1(e))}function LV(t,e){const n=(t._targets||[]).filter(i=>i._update&&i._update.handler===e);return n.length?n[0]:null}function Uz(t,e,n,i){let o=LV(n,i);return o||(o=LC(t,()=>i(e,n.value)),o.handler=i,t.on(n,null,o)),t}function qz(t,e,n){const i=LV(e,n);return i&&e._targets.remove(i),t}b1(zV,X5,{async evaluate(t,e,n){if(await X5.prototype.evaluate.call(this,t,e),this._redraw||this._resize)try{this._renderer&&(this._resize&&(this._resize=0,My1(this)),await this._renderer.renderAsync(this._scenegraph.root)),this._redraw=!1}catch(i){this.error(i)}return n&&Lc(this,n),this},dirty(t){this._redraw=!0,this._renderer&&this._renderer.dirty(t)},description(t){if(arguments.length){const e=t!=null?t+"":null;return e!==this._desc&&AV(this._el,this._desc=e),this}return this._desc},container(){return this._el},scenegraph(){return this._scenegraph},origin(){return this._origin.slice()},signal(t,e,n){const i=vc(this,t);return arguments.length===1?i.value:this.update(i,e,n)},width(t){return arguments.length?this.signal("width",t):this.signal("width")},height(t){return arguments.length?this.signal("height",t):this.signal("height")},padding(t){return arguments.length?this.signal("padding",Iz(t)):Iz(this.signal("padding"))},autosize(t){return arguments.length?this.signal("autosize",t):this.signal("autosize")},background(t){return arguments.length?this.signal("background",t):this.signal("background")},renderer(t){return arguments.length?(th(t)||u1("Unrecognized renderer type: "+t),t!==this._renderType&&(this._renderType=t,this._resetRenderer()),this):this._renderType},tooltip(t){return arguments.length?(t!==this._tooltip&&(this._tooltip=t,this._resetRenderer()),this):this._tooltip},loader(t){return arguments.length?(t!==this._loader&&(X5.prototype.loader.call(this,t),this._resetRenderer()),this):this._loader},resize(){return this._autosize=1,this.touch(vc(this,"autosize"))},_resetRenderer(){this._renderer&&(this._renderer=null,this.initialize(this._el,this._elBind))},_resizeView:sv1,addEventListener(t,e,n){let i=e;return n&&n.trap===!1||(i=LC(this,e),i.raw=e),this._handler.on(t,i),this},removeEventListener(t,e){for(var n=this._handler.handlers(t),i=n.length,o,u;--i>=0;)if(u=n[i].type,o=n[i].handler,t===u&&(e===o||e===o.raw)){this._handler.off(u,o);break}return this},addResizeListener(t){const e=this._resizeListeners;return e.includes(t)||e.push(t),this},removeResizeListener(t){var e=this._resizeListeners,n=e.indexOf(t);return n>=0&&e.splice(n,1),this},addSignalListener(t,e){return Uz(this,t,vc(this,t),e)},removeSignalListener(t,e){return qz(this,vc(this,t),e)},addDataListener(t,e){return Uz(this,t,$f(this,t).values,e)},removeDataListener(t,e){return qz(this,$f(this,t).values,e)},globalCursor(t){if(arguments.length){if(this._globalCursor!==!!t){const e=D_(this,null);this._globalCursor=!!t,e&&D_(this,e)}return this}else return this._globalCursor},preventDefault(t){return arguments.length?(this._preventDefault=t,this):this._preventDefault},timer:hv1,events:jy1,finalize:Iy1,hover:Py1,data:ky1,change:hh,insert:Ty1,remove:$y1,scale:av1,initialize:tv1,toImageURL:nv1,toCanvas:ov1,toSVG:uv1,getState:cv1,setState:gv1,_watchPixelRatio:vv1});const bv1="view",Nf="[",Rf="]",jV="{",PV="}",xv1=":",IV=",",_v1="@",wv1=">",Ev1=/[[\]{}]/,Sv1={"*":1,arc:1,area:1,group:1,image:1,line:1,path:1,rect:1,rule:1,shape:1,symbol:1,text:1,trail:1};let BV,UV;function Fu(t,e,n){return BV=e||bv1,UV=n||Sv1,qV(t.trim()).map(O_)}function Av1(t){return UV[t]}function zr(t,e,n,i,o){const u=t.length;let l=0,a;for(;e<u;++e){if(a=t[e],!l&&a===n)return e;o&&o.includes(a)?--l:i&&i.includes(a)&&++l}return e}function qV(t){const e=[],n=t.length;let i=0,o=0;for(;o<n;)o=zr(t,o,IV,Nf+jV,Rf+PV),e.push(t.substring(i,o).trim()),i=++o;if(e.length===0)throw"Empty event selector: "+t;return e}function O_(t){return t[0]==="["?Cv1(t):kv1(t)}function Cv1(t){const e=t.length;let n=1,i;if(n=zr(t,n,Rf,Nf,Rf),n===e)throw"Empty between selector: "+t;if(i=qV(t.substring(1,n)),i.length!==2)throw"Between selector must have two elements: "+t;if(t=t.slice(n+1).trim(),t[0]!==wv1)throw"Expected '>' after between selector: "+t;i=i.map(O_);const o=O_(t.slice(1).trim());return o.between?{between:i,stream:o}:(o.between=i,o)}function kv1(t){const e={source:BV},n=[];let i=[0,0],o=0,u=0,l=t.length,a=0,s,c;if(t[l-1]===PV){if(a=t.lastIndexOf(jV),a>=0){try{i=Tv1(t.substring(a+1,l-1))}catch{throw"Invalid throttle specification: "+t}t=t.slice(0,a).trim(),l=t.length}else throw"Unmatched right brace: "+t;a=0}if(!l)throw t;if(t[0]===_v1&&(o=++a),s=zr(t,a,xv1),s<l&&(n.push(t.substring(u,s).trim()),u=a=++s),a=zr(t,a,Nf),a===l)n.push(t.substring(u,l).trim());else if(n.push(t.substring(u,a).trim()),c=[],u=++a,u===l)throw"Unmatched left bracket: "+t;for(;a<l;){if(a=zr(t,a,Rf),a===l)throw"Unmatched left bracket: "+t;if(c.push(t.substring(u,a).trim()),a<l-1&&t[++a]!==Nf)throw"Expected left bracket: "+t;u=++a}if(!(l=n.length)||Ev1.test(n[l-1]))throw"Invalid event selector: "+t;return l>1?(e.type=n[1],o?e.markname=n[0].slice(1):Av1(n[0])?e.marktype=n[0]:e.source=n[0]):e.type=n[0],e.type.slice(-1)==="!"&&(e.consume=!0,e.type=e.type.slice(0,-1)),c!=null&&(e.filter=c),i[0]&&(e.throttle=i[0]),i[1]&&(e.debounce=i[1]),e}function Tv1(t){const e=t.split(IV);if(!t.length||e.length>2)throw t;return e.map(n=>{const i=+n;if(i!==i)throw t;return i})}function $v1(t){return E1(t)?t:{type:t||"pad"}}const U9=t=>+t||0,Mv1=t=>({top:t,bottom:t,left:t,right:t});function Nv1(t){return E1(t)?t.signal?t:{top:U9(t.top),bottom:U9(t.bottom),left:U9(t.left),right:U9(t.right)}:Mv1(U9(t))}const Re=t=>E1(t)&&!r1(t)?K1({},t):{value:t};function Hz(t,e,n,i){return n!=null?(E1(n)&&!r1(n)||r1(n)&&n.length&&E1(n[0])?t.update[e]=n:t[i||"enter"][e]={value:n},1):0}function Ve(t,e,n){for(const i in e)Hz(t,i,e[i]);for(const i in n)Hz(t,i,n[i],"update")}function ca(t,e,n){for(const i in e)n&&A1(n,i)||(t[i]=K1(t[i]||{},e[i]));return t}function P5(t,e){return e&&(e.enter&&e.enter[t]||e.update&&e.update[t])}const IC="mark",BC="frame",UC="scope",Rv1="axis",Dv1="axis-domain",Ov1="axis-grid",Fv1="axis-label",zv1="axis-tick",Lv1="axis-title",jv1="legend",Pv1="legend-band",Iv1="legend-entry",Bv1="legend-gradient",HV="legend-label",Uv1="legend-symbol",qv1="legend-title",Hv1="title",Gv1="title-text",Wv1="title-subtitle";function Yv1(t,e,n,i,o){const u={},l={};let a,s,c,f;s="lineBreak",e==="text"&&o[s]!=null&&!P5(s,t)&&ub(u,s,o[s]),(n=="legend"||String(n).startsWith("axis"))&&(n=null),f=n===BC?o.group:n===IC?K1({},o.mark,o[e]):null;for(s in f)c=P5(s,t)||(s==="fill"||s==="stroke")&&(P5("fill",t)||P5("stroke",t)),c||ub(u,s,f[s]);S1(i).forEach(g=>{const p=o.style&&o.style[g];for(const m in p)P5(m,t)||ub(u,m,p[m])}),t=K1({},t);for(s in u)f=u[s],f.signal?(a=a||{})[s]=f:l[s]=f;return t.enter=K1(l,t.enter),a&&(t.update=K1(a,t.update)),t}function ub(t,e,n){t[e]=n&&n.signal?{signal:n.signal}:{value:n}}const GV=t=>w1(t)?y1(t):t.signal?`(${t.signal})`:WV(t);function mh(t){if(t.gradient!=null)return Xv1(t);let e=t.signal?`(${t.signal})`:t.color?Vv1(t.color):t.field!=null?WV(t.field):t.value!==void 0?y1(t.value):void 0;return t.scale!=null&&(e=Kv1(t,e)),e===void 0&&(e=null),t.exponent!=null&&(e=`pow(${e},${ed(t.exponent)})`),t.mult!=null&&(e+=`*${ed(t.mult)}`),t.offset!=null&&(e+=`+${ed(t.offset)}`),t.round&&(e=`round(${e})`),e}const bc=(t,e,n,i)=>`(${t}(${[e,n,i].map(mh).join(",")})+'')`;function Vv1(t){return t.c?bc("hcl",t.h,t.c,t.l):t.h||t.s?bc("hsl",t.h,t.s,t.l):t.l||t.a?bc("lab",t.l,t.a,t.b):t.r||t.g||t.b?bc("rgb",t.r,t.g,t.b):null}function Xv1(t){const e=[t.start,t.stop,t.count].map(n=>n==null?null:y1(n));for(;e.length&&st(e)==null;)e.pop();return e.unshift(GV(t.gradient)),`gradient(${e.join(",")})`}function ed(t){return E1(t)?"("+mh(t)+")":t}function WV(t){return YV(E1(t)?t:{datum:t})}function YV(t){let e,n,i;if(t.signal)e="datum",i=t.signal;else if(t.group||t.parent){for(n=Math.max(1,t.level||1),e="item";n-- >0;)e+=".mark.group";t.parent?(i=t.parent,e+=".datum"):i=t.group}else t.datum?(e="datum",i=t.datum):u1("Invalid field reference: "+y1(t));return t.signal||(i=w1(i)?Ni(i).map(y1).join("]["):YV(i)),e+"["+i+"]"}function Kv1(t,e){const n=GV(t.scale);return t.range!=null?e=`lerp(_range(${n}), ${+t.range})`:(e!==void 0&&(e=`_scale(${n}, ${e})`),t.band&&(e=(e?e+"+":"")+`_bandwidth(${n})`+(+t.band==1?"":"*"+ed(t.band)),t.extra&&(e=`(datum.extra ? _scale(${n}, datum.extra.value) : ${e})`)),e==null&&(e="0")),e}function Qv1(t){let e="";return t.forEach(n=>{const i=mh(n);e+=n.test?`(${n.test})?${i}:`:i}),st(e)===":"&&(e+="null"),e}function VV(t,e,n,i,o,u){const l={};u=u||{},u.encoders={$encode:l},t=Yv1(t,e,n,i,o.config);for(const a in t)l[a]=Zv1(t[a],e,u,o);return u}function Zv1(t,e,n,i){const o={},u={};for(const l in t)t[l]!=null&&(o[l]=tb1(Jv1(t[l]),i,n,u));return{$expr:{marktype:e,channels:o},$fields:Object.keys(u),$output:Object.keys(t)}}function Jv1(t){return r1(t)?Qv1(t):mh(t)}function tb1(t,e,n,i){const o=Ci(t,e);return o.$fields.forEach(u=>i[u]=1),K1(n,o.$params),o.$expr}const eb1="outer",nb1=["value","update","init","react","bind"];function Gz(t,e){u1(t+' for "outer" push: '+y1(e))}function XV(t,e){const n=t.name;if(t.push===eb1)e.signals[n]||Gz("No prior signal definition",n),nb1.forEach(i=>{t[i]!==void 0&&Gz("Invalid property ",i)});else{const i=e.addSignal(n,t.value);t.react===!1&&(i.react=!1),t.bind&&e.addBinding(n,t.bind)}}function F_(t,e,n,i){this.id=-1,this.type=t,this.value=e,this.params=n,i&&(this.parent=i)}function yh(t,e,n,i){return new F_(t,e,n,i)}function Df(t,e){return yh("operator",t,e)}function F1(t){const e={$ref:t.id};return t.id<0&&(t.refs=t.refs||[]).push(e),e}function f8(t,e){return e?{$field:t,$name:e}:{$field:t}}const z_=f8("key");function Wz(t,e){return{$compare:t,$order:e}}function ib1(t,e){const n={$key:t};return e&&(n.$flat=!0),n}const ob1="ascending",ub1="descending";function lb1(t){return E1(t)?(t.order===ub1?"-":"+")+vh(t.op,t.field):""}function vh(t,e){return(t&&t.signal?"$"+t.signal:t||"")+(t&&e?"_":"")+(e&&e.signal?"$"+e.signal:e||"")}const qC="scope",L_="view";function xe(t){return t&&t.signal}function ab1(t){return t&&t.expr}function nd(t){if(xe(t))return!0;if(E1(t)){for(const e in t)if(nd(t[e]))return!0}return!1}function _3(t,e){return t??e}function z0(t){return t&&t.signal||t}const Yz="timer";function g8(t,e){return(t.merge?sb1:t.stream?cb1:t.type?db1:u1("Invalid stream specification: "+y1(t)))(t,e)}function rb1(t){return t===qC?L_:t||L_}function sb1(t,e){const n=t.merge.map(o=>g8(o,e)),i=HC({merge:n},t,e);return e.addStream(i).id}function cb1(t,e){const n=g8(t.stream,e),i=HC({stream:n},t,e);return e.addStream(i).id}function db1(t,e){let n;t.type===Yz?(n=e.event(Yz,t.throttle),t={between:t.between,filter:t.filter}):n=e.event(rb1(t.source),t.type);const i=HC({stream:n},t,e);return Object.keys(i).length===1?n:e.addStream(i).id}function HC(t,e,n){let i=e.between;return i&&(i.length!==2&&u1('Stream "between" parameter must have 2 entries: '+y1(e)),t.between=[g8(i[0],n),g8(i[1],n)]),i=e.filter?[].concat(e.filter):[],(e.marktype||e.markname||e.markrole)&&i.push(fb1(e.marktype,e.markname,e.markrole)),e.source===qC&&i.push("inScope(event.item)"),i.length&&(t.filter=Ci("("+i.join(")&&(")+")",n).$expr),(i=e.throttle)!=null&&(t.throttle=+i),(i=e.debounce)!=null&&(t.debounce=+i),e.consume&&(t.consume=!0),t}function fb1(t,e,n){const i="event.item";return i+(t&&t!=="*"?"&&"+i+".mark.marktype==='"+t+"'":"")+(n?"&&"+i+".mark.role==='"+n+"'":"")+(e?"&&"+i+".mark.name==='"+e+"'":"")}const gb1={code:"_.$value",ast:{type:"Identifier",value:"value"}};function hb1(t,e,n){const i=t.encode,o={target:n};let u=t.events,l=t.update,a=[];u||u1("Signal update missing events specification."),w1(u)&&(u=Fu(u,e.isSubscope()?qC:L_)),u=S1(u).filter(s=>s.signal||s.scale?(a.push(s),0):1),a.length>1&&(a=[mb1(a)]),u.length&&a.push(u.length>1?{merge:u}:u[0]),i!=null&&(l&&u1("Signal encode and update are mutually exclusive."),l="encode(item(),"+y1(i)+")"),o.update=w1(l)?Ci(l,e):l.expr!=null?Ci(l.expr,e):l.value!=null?l.value:l.signal!=null?{$expr:gb1,$params:{$value:e.signalRef(l.signal)}}:u1("Invalid signal update specification."),t.force&&(o.options={force:!0}),a.forEach(s=>e.addUpdate(K1(pb1(s,e),o)))}function pb1(t,e){return{source:t.signal?e.signalRef(t.signal):t.scale?e.scaleRef(t.scale):g8(t,e)}}function mb1(t){return{signal:"["+t.map(e=>e.scale?'scale("'+e.scale+'")':e.signal)+"]"}}function yb1(t,e){const n=e.getSignal(t.name);let i=t.update;t.init&&(i?u1("Signals can not include both init and update expressions."):(i=t.init,n.initonly=!0)),i&&(i=Ci(i,e),n.update=i.$expr,n.params=i.$params),t.on&&t.on.forEach(o=>hb1(o,e,n.id))}const Nt=t=>(e,n,i)=>yh(t,n,e||void 0,i),KV=Nt("aggregate"),vb1=Nt("axisticks"),QV=Nt("bound"),B3=Nt("collect"),Vz=Nt("compare"),bb1=Nt("datajoin"),ZV=Nt("encode"),xb1=Nt("expression"),_b1=Nt("facet"),wb1=Nt("field"),Eb1=Nt("key"),Sb1=Nt("legendentries"),Ab1=Nt("load"),Cb1=Nt("mark"),kb1=Nt("multiextent"),Tb1=Nt("multivalues"),$b1=Nt("overlap"),Mb1=Nt("params"),JV=Nt("prefacet"),Nb1=Nt("projection"),Rb1=Nt("proxy"),Db1=Nt("relay"),tX=Nt("render"),Ob1=Nt("scale"),S6=Nt("sieve"),Fb1=Nt("sortitems"),eX=Nt("viewlayout"),zb1=Nt("values");let Lb1=0;const nX={min:"min",max:"max",count:"sum"};function jb1(t,e){const n=t.type||"linear";GH(n)||u1("Unrecognized scale type: "+y1(n)),e.addScale(t.name,{type:n,domain:void 0})}function Pb1(t,e){const n=e.getScale(t.name).params;let i;n.domain=iX(t.domain,t,e),t.range!=null&&(n.range=uX(t,e,n)),t.interpolate!=null&&Xb1(t.interpolate,n),t.nice!=null&&(n.nice=Vb1(t.nice,e)),t.bins!=null&&(n.bins=Yb1(t.bins,e));for(i in t)A1(n,i)||i==="name"||(n[i]=K2(t[i],e))}function K2(t,e){return E1(t)?t.signal?e.signalRef(t.signal):u1("Unsupported object: "+y1(t)):t}function id(t,e){return t.signal?e.signalRef(t.signal):t.map(n=>K2(n,e))}function bh(t){u1("Can not find data set: "+y1(t))}function iX(t,e,n){if(!t){(e.domainMin!=null||e.domainMax!=null)&&u1("No scale domain defined for domainMin/domainMax to override.");return}return t.signal?n.signalRef(t.signal):(r1(t)?Ib1:t.fields?Ub1:Bb1)(t,e,n)}function Ib1(t,e,n){return t.map(i=>K2(i,n))}function Bb1(t,e,n){const i=n.getData(t.data);return i||bh(t.data),xl(e.type)?i.valuesRef(n,t.field,oX(t.sort,!1)):VH(e.type)?i.domainRef(n,t.field):i.extentRef(n,t.field)}function Ub1(t,e,n){const i=t.data,o=t.fields.reduce((u,l)=>(l=w1(l)?{data:i,field:l}:r1(l)||l.signal?qb1(l,n):l,u.push(l),u),[]);return(xl(e.type)?Hb1:VH(e.type)?Gb1:Wb1)(t,n,o)}function qb1(t,e){const n="_:vega:_"+Lb1++,i=B3({});if(r1(t))i.value={$ingest:t};else if(t.signal){const o="setdata("+y1(n)+","+t.signal+")";i.params.input=e.signalRef(o)}return e.addDataPipeline(n,[i,S6({})]),{data:n,field:"data"}}function Hb1(t,e,n){const i=oX(t.sort,!0);let o,u;const l=n.map(c=>{const f=e.getData(c.data);return f||bh(c.data),f.countsRef(e,c.field,i)}),a={groupby:z_,pulse:l};i&&(o=i.op||"count",u=i.field?vh(o,i.field):"count",a.ops=[nX[o]],a.fields=[e.fieldRef(u)],a.as=[u]),o=e.add(KV(a));const s=e.add(B3({pulse:F1(o)}));return u=e.add(zb1({field:z_,sort:e.sortRef(i),pulse:F1(s)})),F1(u)}function oX(t,e){return t&&(!t.field&&!t.op?E1(t)?t.field="key":t={field:"key"}:!t.field&&t.op!=="count"?u1("No field provided for sort aggregate op: "+t.op):e&&t.field&&t.op&&!nX[t.op]&&u1("Multiple domain scales can not be sorted using "+t.op)),t}function Gb1(t,e,n){const i=n.map(o=>{const u=e.getData(o.data);return u||bh(o.data),u.domainRef(e,o.field)});return F1(e.add(Tb1({values:i})))}function Wb1(t,e,n){const i=n.map(o=>{const u=e.getData(o.data);return u||bh(o.data),u.extentRef(e,o.field)});return F1(e.add(kb1({extents:i})))}function Yb1(t,e){return t.signal||r1(t)?id(t,e):e.objectProperty(t)}function Vb1(t,e){return t.signal?e.signalRef(t.signal):E1(t)?{interval:K2(t.interval),step:K2(t.step)}:K2(t)}function Xb1(t,e){e.interpolate=K2(t.type||t),t.gamma!=null&&(e.interpolateGamma=K2(t.gamma))}function uX(t,e,n){const i=e.config.range;let o=t.range;if(o.signal)return e.signalRef(o.signal);if(w1(o)){if(i&&A1(i,o))return t=K1({},t,{range:i[o]}),uX(t,e,n);o==="width"?o=[0,{signal:"width"}]:o==="height"?o=xl(t.type)?[0,{signal:"height"}]:[{signal:"height"},0]:u1("Unrecognized scale range value: "+y1(o))}else if(o.scheme){n.scheme=r1(o.scheme)?id(o.scheme,e):K2(o.scheme,e),o.extent&&(n.schemeExtent=id(o.extent,e)),o.count&&(n.schemeCount=K2(o.count,e));return}else if(o.step){n.rangeStep=K2(o.step,e);return}else{if(xl(t.type)&&!r1(o))return iX(o,t,e);r1(o)||u1("Unsupported range type: "+y1(o))}return o.map(u=>(r1(u)?id:K2)(u,e))}function Kb1(t,e){const n=e.config.projection||{},i={};for(const o in t)o!=="name"&&(i[o]=j_(t[o],o,e));for(const o in n)i[o]==null&&(i[o]=j_(n[o],o,e));e.addProjection(t.name,i)}function j_(t,e,n){return r1(t)?t.map(i=>j_(i,e,n)):E1(t)?t.signal?n.signalRef(t.signal):e==="fit"?t:u1("Unsupported parameter object: "+y1(t)):t}const U3="top",da="left",fa="right",Eu="bottom",lX="center",Qb1="vertical",Zb1="start",Jb1="middle",tx1="end",P_="index",GC="label",ex1="offset",$l="perc",nx1="perc2",J2="value",s7="guide-label",WC="guide-title",ix1="group-title",ox1="group-subtitle",Xz="symbol",od="gradient",I_="discrete",B_="size",ux1="shape",lx1="fill",ax1="stroke",rx1="strokeWidth",sx1="strokeDash",cx1="opacity",YC=[B_,ux1,lx1,ax1,rx1,sx1,cx1],c7={name:1,style:1,interactive:1},dt={value:0},t3={value:1},xh="group",aX="rect",VC="rule",dx1="symbol",A6="text";function h8(t){return t.type=xh,t.interactive=t.interactive||!1,t}function l2(t,e){const n=(i,o)=>_3(t[i],_3(e[i],o));return n.isVertical=i=>Qb1===_3(t.direction,e.direction||(i?e.symbolDirection:e.gradientDirection)),n.gradientLength=()=>_3(t.gradientLength,e.gradientLength||e.gradientWidth),n.gradientThickness=()=>_3(t.gradientThickness,e.gradientThickness||e.gradientHeight),n.entryColumns=()=>_3(t.columns,_3(e.columns,+n.isVertical(!0))),n}function rX(t,e){const n=e&&(e.update&&e.update[t]||e.enter&&e.enter[t]);return n&&n.signal?n:n?n.value:null}function fx1(t,e,n){const i=e.config.style[n];return i&&i[t]}function _h(t,e,n){return`item.anchor === '${Zb1}' ? ${t} : item.anchor === '${tx1}' ? ${e} : ${n}`}const XC=_h(y1(da),y1(fa),y1(lX));function gx1(t){const e=t("tickBand");let n=t("tickOffset"),i,o;return e?e.signal?(i={signal:`(${e.signal}) === 'extent' ? 1 : 0.5`},o={signal:`(${e.signal}) === 'extent'`},E1(n)||(n={signal:`(${e.signal}) === 'extent' ? 0 : ${n}`})):e==="extent"?(i=1,o=!0,n=0):(i=.5,o=!1):(i=t("bandPosition"),o=t("tickExtra")),{extra:o,band:i,offset:n}}function sX(t,e){return e?t?E1(t)?Object.assign({},t,{offset:sX(t.offset,e)}):{value:t,offset:e}:e:t}function M2(t,e){return e?(t.name=e.name,t.style=e.style||t.style,t.interactive=!!e.interactive,t.encode=ca(t.encode,e,c7)):t.interactive=!1,t}function hx1(t,e,n,i){const o=l2(t,n),u=o.isVertical(),l=o.gradientThickness(),a=o.gradientLength();let s,c,f,g,p;u?(c=[0,1],f=[0,0],g=l,p=a):(c=[0,0],f=[1,0],g=a,p=l);const m={enter:s={opacity:dt,x:dt,y:dt,width:Re(g),height:Re(p)},update:K1({},s,{opacity:t3,fill:{gradient:e,start:c,stop:f}}),exit:{opacity:dt}};return Ve(m,{stroke:o("gradientStrokeColor"),strokeWidth:o("gradientStrokeWidth")},{opacity:o("gradientOpacity")}),M2({type:aX,role:Bv1,encode:m},i)}function px1(t,e,n,i,o){const u=l2(t,n),l=u.isVertical(),a=u.gradientThickness(),s=u.gradientLength();let c,f,g,p,m="";l?(c="y",g="y2",f="x",p="width",m="1-"):(c="x",g="x2",f="y",p="height");const v={opacity:dt,fill:{scale:e,field:J2}};v[c]={signal:m+"datum."+$l,mult:s},v[f]=dt,v[g]={signal:m+"datum."+nx1,mult:s},v[p]=Re(a);const b={enter:v,update:K1({},v,{opacity:t3}),exit:{opacity:dt}};return Ve(b,{stroke:u("gradientStrokeColor"),strokeWidth:u("gradientStrokeWidth")},{opacity:u("gradientOpacity")}),M2({type:aX,role:Pv1,key:J2,from:o,encode:b},i)}const mx1=`datum.${$l}<=0?"${da}":datum.${$l}>=1?"${fa}":"${lX}"`,yx1=`datum.${$l}<=0?"${Eu}":datum.${$l}>=1?"${U3}":"${Jb1}"`;function Kz(t,e,n,i){const o=l2(t,e),u=o.isVertical(),l=Re(o.gradientThickness()),a=o.gradientLength();let s=o("labelOverlap"),c,f,g,p,m="";const v={enter:c={opacity:dt},update:f={opacity:t3,text:{field:GC}},exit:{opacity:dt}};return Ve(v,{fill:o("labelColor"),fillOpacity:o("labelOpacity"),font:o("labelFont"),fontSize:o("labelFontSize"),fontStyle:o("labelFontStyle"),fontWeight:o("labelFontWeight"),limit:_3(t.labelLimit,e.gradientLabelLimit)}),u?(c.align={value:"left"},c.baseline=f.baseline={signal:yx1},g="y",p="x",m="1-"):(c.align=f.align={signal:mx1},c.baseline={value:"top"},g="x",p="y"),c[g]=f[g]={signal:m+"datum."+$l,mult:a},c[p]=f[p]=l,l.offset=_3(t.labelOffset,e.gradientLabelOffset)||0,s=s?{separation:o("labelSeparation"),method:s,order:"datum."+P_}:void 0,M2({type:A6,role:HV,style:s7,key:J2,from:i,encode:v,overlap:s},n)}function vx1(t,e,n,i,o){const u=l2(t,e),l=n.entries,a=!!(l&&l.interactive),s=l?l.name:void 0,c=u("clipHeight"),f=u("symbolOffset"),g={data:"value"},p=`(${o}) ? datum.${ex1} : datum.${B_}`,m=c?Re(c):{field:B_},v=`datum.${P_}`,b=`max(1, ${o})`;let x,w,S,A,C;m.mult=.5,x={enter:w={opacity:dt,x:{signal:p,mult:.5,offset:f},y:m},update:S={opacity:t3,x:w.x,y:w.y},exit:{opacity:dt}};let k=null,M=null;t.fill||(k=e.symbolBaseFillColor,M=e.symbolBaseStrokeColor),Ve(x,{fill:u("symbolFillColor",k),shape:u("symbolType"),size:u("symbolSize"),stroke:u("symbolStrokeColor",M),strokeDash:u("symbolDash"),strokeDashOffset:u("symbolDashOffset"),strokeWidth:u("symbolStrokeWidth")},{opacity:u("symbolOpacity")}),YC.forEach(U=>{t[U]&&(S[U]=w[U]={scale:t[U],field:J2})});const T=M2({type:dx1,role:Uv1,key:J2,from:g,clip:c?!0:void 0,encode:x},n.symbols),D=Re(f);D.offset=u("labelOffset"),x={enter:w={opacity:dt,x:{signal:p,offset:D},y:m},update:S={opacity:t3,text:{field:GC},x:w.x,y:w.y},exit:{opacity:dt}},Ve(x,{align:u("labelAlign"),baseline:u("labelBaseline"),fill:u("labelColor"),fillOpacity:u("labelOpacity"),font:u("labelFont"),fontSize:u("labelFontSize"),fontStyle:u("labelFontStyle"),fontWeight:u("labelFontWeight"),limit:u("labelLimit")});const I=M2({type:A6,role:HV,style:s7,key:J2,from:g,encode:x},n.labels);return x={enter:{noBound:{value:!c},width:dt,height:c?Re(c):dt,opacity:dt},exit:{opacity:dt},update:S={opacity:t3,row:{signal:null},column:{signal:null}}},u.isVertical(!0)?(A=`ceil(item.mark.items.length / ${b})`,S.row.signal=`${v}%${A}`,S.column.signal=`floor(${v} / ${A})`,C={field:["row",v]}):(S.row.signal=`floor(${v} / ${b})`,S.column.signal=`${v} % ${b}`,C={field:v}),S.column.signal=`(${o})?${S.column.signal}:${v}`,i={facet:{data:i,name:"value",groupby:P_}},h8({role:UC,from:i,encode:ca(x,l,c7),marks:[T,I],name:s,interactive:a,sort:C})}function bx1(t,e){const n=l2(t,e);return{align:n("gridAlign"),columns:n.entryColumns(),center:{row:!0,column:!1},padding:{row:n("rowPadding"),column:n("columnPadding")}}}const KC='item.orient === "left"',QC='item.orient === "right"',wh=`(${KC} || ${QC})`,xx1=`datum.vgrad && ${wh}`,_x1=_h('"top"','"bottom"','"middle"'),wx1=_h('"right"','"left"','"center"'),Ex1=`datum.vgrad && ${QC} ? (${wx1}) : (${wh} && !(datum.vgrad && ${KC})) ? "left" : ${XC}`,Sx1=`item._anchor || (${wh} ? "middle" : "start")`,Ax1=`${xx1} ? (${KC} ? -90 : 90) : 0`,Cx1=`${wh} ? (datum.vgrad ? (${QC} ? "bottom" : "top") : ${_x1}) : "top"`;function kx1(t,e,n,i){const o=l2(t,e),u={enter:{opacity:dt},update:{opacity:t3,x:{field:{group:"padding"}},y:{field:{group:"padding"}}},exit:{opacity:dt}};return Ve(u,{orient:o("titleOrient"),_anchor:o("titleAnchor"),anchor:{signal:Sx1},angle:{signal:Ax1},align:{signal:Ex1},baseline:{signal:Cx1},text:t.title,fill:o("titleColor"),fillOpacity:o("titleOpacity"),font:o("titleFont"),fontSize:o("titleFontSize"),fontStyle:o("titleFontStyle"),fontWeight:o("titleFontWeight"),limit:o("titleLimit"),lineHeight:o("titleLineHeight")},{align:o("titleAlign"),baseline:o("titleBaseline")}),M2({type:A6,role:qv1,style:WC,from:i,encode:u},n)}function Tx1(t,e){let n;return E1(t)&&(t.signal?n=t.signal:t.path?n="pathShape("+Qz(t.path)+")":t.sphere&&(n="geoShape("+Qz(t.sphere)+', {type: "Sphere"})')),n?e.signalRef(n):!!t}function Qz(t){return E1(t)&&t.signal?t.signal:y1(t)}function cX(t){const e=t.role||"";return e.startsWith("axis")||e.startsWith("legend")||e.startsWith("title")?e:t.type===xh?UC:e||IC}function $x1(t){return{marktype:t.type,name:t.name||void 0,role:t.role||cX(t),zindex:+t.zindex||void 0,aria:t.aria,description:t.description}}function Mx1(t,e){return t&&t.signal?e.signalRef(t.signal):t!==!1}function ZC(t,e){const n=GU(t.type);n||u1("Unrecognized transform type: "+y1(t.type));const i=yh(n.type.toLowerCase(),null,dX(n,t,e));return t.signal&&e.addSignal(t.signal,e.proxy(i)),i.metadata=n.metadata||{},i}function dX(t,e,n){const i={},o=t.params.length;for(let u=0;u<o;++u){const l=t.params[u];i[l.name]=Nx1(l,e,n)}return i}function Nx1(t,e,n){const i=t.type,o=e[t.name];if(i==="index")return Rx1(t,e,n);if(o===void 0){t.required&&u1("Missing required "+y1(e.type)+" parameter: "+y1(t.name));return}else{if(i==="param")return Dx1(t,e,n);if(i==="projection")return n.projectionRef(e[t.name])}return t.array&&!xe(o)?o.map(u=>Zz(t,u,n)):Zz(t,o,n)}function Zz(t,e,n){const i=t.type;if(xe(e))return tL(i)?u1("Expression references can not be signals."):lb(i)?n.fieldRef(e):eL(i)?n.compareRef(e):n.signalRef(e.signal);{const o=t.expr||lb(i);return o&&Ox1(e)?n.exprRef(e.expr,e.as):o&&Fx1(e)?f8(e.field,e.as):tL(i)?Ci(e,n):zx1(i)?F1(n.getData(e).values):lb(i)?f8(e):eL(i)?n.compareRef(e):e}}function Rx1(t,e,n){return w1(e.from)||u1('Lookup "from" parameter must be a string literal.'),n.getData(e.from).lookupRef(n,e.key)}function Dx1(t,e,n){const i=e[t.name];return t.array?(r1(i)||u1("Expected an array of sub-parameters. Instead: "+y1(i)),i.map(o=>Jz(t,o,n))):Jz(t,i,n)}function Jz(t,e,n){const i=t.params.length;let o;for(let l=0;l<i;++l){o=t.params[l];for(const a in o.key)if(o.key[a]!==e[a]){o=null;break}if(o)break}o||u1("Unsupported parameter: "+y1(e));const u=K1(dX(o,e,n),o.key);return F1(n.add(Mb1(u)))}const Ox1=t=>t&&t.expr,Fx1=t=>t&&t.field,zx1=t=>t==="data",tL=t=>t==="expr",lb=t=>t==="field",eL=t=>t==="compare";function Lx1(t,e,n){let i,o,u,l,a;return t?(i=t.facet)&&(e||u1("Only group marks can be faceted."),i.field!=null?l=a=ud(i,n):(t.data?a=F1(n.getData(t.data).aggregate):(u=ZC(K1({type:"aggregate",groupby:S1(i.groupby)},i.aggregate),n),u.params.key=n.keyRef(i.groupby),u.params.pulse=ud(i,n),l=a=F1(n.add(u))),o=n.keyRef(i.groupby,!0))):l=F1(n.add(B3(null,[{}]))),l||(l=ud(t,n)),{key:o,pulse:l,parent:a}}function ud(t,e){return t.$ref?t:t.data&&t.data.$ref?t.data:F1(e.getData(t.data).output)}function i6(t,e,n,i,o){this.scope=t,this.input=e,this.output=n,this.values=i,this.aggregate=o,this.index={}}i6.fromEntries=function(t,e){const n=e.length,i=e[n-1],o=e[n-2];let u=e[0],l=null,a=1;for(u&&u.type==="load"&&(u=e[1]),t.add(e[0]);a<n;++a)e[a].params.pulse=F1(e[a-1]),t.add(e[a]),e[a].type==="aggregate"&&(l=e[a]);return new i6(t,u,o,i,l)};function fX(t){return w1(t)?t:null}function nL(t,e,n){const i=vh(n.op,n.field);let o;if(e.ops){for(let u=0,l=e.as.length;u<l;++u)if(e.as[u]===i)return}else e.ops=["count"],e.fields=[null],e.as=["count"];n.op&&(e.ops.push((o=n.op.signal)?t.signalRef(o):n.op),e.fields.push(t.fieldRef(n.field)),e.as.push(i))}function q9(t,e,n,i,o,u,l){const a=e[n]||(e[n]={}),s=lb1(u);let c=fX(o),f,g;if(c!=null&&(t=e.scope,c=c+(s?"|"+s:""),f=a[c]),!f){const p=u?{field:z_,pulse:e.countsRef(t,o,u)}:{field:t.fieldRef(o),pulse:F1(e.output)};s&&(p.sort=t.sortRef(u)),g=t.add(yh(i,void 0,p)),l&&(e.index[o]=g),f=F1(g),c!=null&&(a[c]=f)}return f}i6.prototype={countsRef(t,e,n){const i=this,o=i.counts||(i.counts={}),u=fX(e);let l,a,s;return u!=null&&(t=i.scope,l=o[u]),l?n&&n.field&&nL(t,l.agg.params,n):(s={groupby:t.fieldRef(e,"key"),pulse:F1(i.output)},n&&n.field&&nL(t,s,n),a=t.add(KV(s)),l=t.add(B3({pulse:F1(a)})),l={agg:a,ref:F1(l)},u!=null&&(o[u]=l)),l.ref},tuplesRef(){return F1(this.values)},extentRef(t,e){return q9(t,this,"extent","extent",e,!1)},domainRef(t,e){return q9(t,this,"domain","values",e,!1)},valuesRef(t,e,n){return q9(t,this,"vals","values",e,n||!0)},lookupRef(t,e){return q9(t,this,"lookup","tupleindex",e,!1)},indataRef(t,e){return q9(t,this,"indata","tupleindex",e,!0,!0)}};function jx1(t,e,n){const i=t.from.facet,o=i.name,u=ud(i,e);let l;i.name||u1("Facet must have a name: "+y1(i)),i.data||u1("Facet must reference a data set: "+y1(i)),i.field?l=e.add(JV({field:e.fieldRef(i.field),pulse:u})):i.groupby?l=e.add(_b1({key:e.keyRef(i.groupby),group:F1(e.proxy(n.parent)),pulse:u})):u1("Facet must specify groupby or field: "+y1(i));const a=e.fork(),s=a.add(B3()),c=a.add(S6({pulse:F1(s)}));a.addData(o,new i6(a,s,s,c)),a.addSignal("parent",null),l.params.subflow={$subflow:a.parse(t).toRuntime()}}function Px1(t,e,n){const i=e.add(JV({pulse:n.pulse})),o=e.fork();o.add(S6()),o.addSignal("parent",null),i.params.subflow={$subflow:o.parse(t).toRuntime()}}function gX(t,e,n){const i=t.remove,o=t.insert,u=t.toggle,l=t.modify,a=t.values,s=e.add(Df()),c="if("+t.trigger+',modify("'+n+'",'+[o,i,u,l,a].map(g=>g??"null").join(",")+"),0)",f=Ci(c,e);s.update=f.$expr,s.params=f.$params}function Eh(t,e){const n=cX(t),i=t.type===xh,o=t.from&&t.from.facet,u=t.overlap;let l=t.layout||n===UC||n===BC,a,s,c,f,g,p,m;const v=n===IC||l||o,b=Lx1(t.from,i,e);s=e.add(bb1({key:b.key||(t.key?f8(t.key):void 0),pulse:b.pulse,clean:!i}));const x=F1(s);s=c=e.add(B3({pulse:x})),s=e.add(Cb1({markdef:$x1(t),interactive:Mx1(t.interactive,e),clip:Tx1(t.clip,e),context:{$context:!0},groups:e.lookup(),parent:e.signals.parent?e.signalRef("parent"):null,index:e.markpath(),pulse:F1(s)}));const w=F1(s);s=f=e.add(ZV(VV(t.encode,t.type,n,t.style,e,{mod:!1,pulse:w}))),s.params.parent=e.encode(),t.transform&&t.transform.forEach(M=>{const T=ZC(M,e),D=T.metadata;(D.generates||D.changes)&&u1("Mark transforms should not generate new data."),D.nomod||(f.params.mod=!0),T.params.pulse=F1(s),e.add(s=T)}),t.sort&&(s=e.add(Fb1({sort:e.compareRef(t.sort),pulse:F1(s)})));const S=F1(s);(o||l)&&(l=e.add(eX({layout:e.objectProperty(t.layout),legends:e.legends,mark:w,pulse:S})),p=F1(l));const A=e.add(QV({mark:w,pulse:p||S}));m=F1(A),i&&(v&&(a=e.operators,a.pop(),l&&a.pop()),e.pushState(S,p||m,x),o?jx1(t,e,b):v?Px1(t,e,b):e.parse(t),e.popState(),v&&(l&&a.push(l),a.push(A))),u&&(m=Ix1(u,m,e));const C=e.add(tX({pulse:m})),k=e.add(S6({pulse:F1(C)},void 0,e.parent()));t.name!=null&&(g=t.name,e.addData(g,new i6(e,c,C,k)),t.on&&t.on.forEach(M=>{(M.insert||M.remove||M.toggle)&&u1("Marks only support modify triggers."),gX(M,e,g)}))}function Ix1(t,e,n){const i=t.method,o=t.bound,u=t.separation,l={separation:xe(u)?n.signalRef(u.signal):u,method:xe(i)?n.signalRef(i.signal):i,pulse:e};if(t.order&&(l.sort=n.compareRef({field:t.order})),o){const a=o.tolerance;l.boundTolerance=xe(a)?n.signalRef(a.signal):+a,l.boundScale=n.scaleRef(o.scale),l.boundOrient=o.orient}return F1(n.add($b1(l)))}function Bx1(t,e){const n=e.config.legend,i=t.encode||{},o=l2(t,n),u=i.legend||{},l=u.name||void 0,a=u.interactive,s=u.style,c={};let f=0,g,p,m;YC.forEach(A=>t[A]?(c[A]=t[A],f=f||t[A]):0),f||u1("Missing valid scale for legend.");const v=Ux1(t,e.scaleType(f)),b={title:t.title!=null,scales:c,type:v,vgrad:v!=="symbol"&&o.isVertical()},x=F1(e.add(B3(null,[b]))),w={enter:{x:{value:0},y:{value:0}}},S=F1(e.add(Sb1(p={type:v,scale:e.scaleRef(f),count:e.objectProperty(o("tickCount")),limit:e.property(o("symbolLimit")),values:e.objectProperty(t.values),minstep:e.property(t.tickMinStep),formatType:e.property(t.formatType),formatSpecifier:e.property(t.format)})));return v===od?(m=[hx1(t,f,n,i.gradient),Kz(t,n,i.labels,S)],p.count=p.count||e.signalRef(`max(2,2*floor((${z0(o.gradientLength())})/100))`)):v===I_?m=[px1(t,f,n,i.gradient,S),Kz(t,n,i.labels,S)]:(g=bx1(t,n),m=[vx1(t,n,i,S,z0(g.columns))],p.size=Gx1(t,e,m[0].marks)),m=[h8({role:Iv1,from:x,encode:w,marks:m,layout:g,interactive:a})],b.title&&m.push(kx1(t,n,i.title,x)),Eh(h8({role:jv1,from:x,encode:ca(Hx1(o,t,n),u,c7),marks:m,aria:o("aria"),description:o("description"),zindex:o("zindex"),name:l,interactive:a,style:s}),e)}function Ux1(t,e){let n=t.type||Xz;return!t.type&&qx1(t)===1&&(t.fill||t.stroke)&&(n=QS(e)?od:Rx(e)?I_:Xz),n!==od?n:Rx(e)?I_:od}function qx1(t){return YC.reduce((e,n)=>e+(t[n]?1:0),0)}function Hx1(t,e,n){const i={enter:{},update:{}};return Ve(i,{orient:t("orient"),offset:t("offset"),padding:t("padding"),titlePadding:t("titlePadding"),cornerRadius:t("cornerRadius"),fill:t("fillColor"),stroke:t("strokeColor"),strokeWidth:n.strokeWidth,strokeDash:n.strokeDash,x:t("legendX"),y:t("legendY"),format:e.format,formatType:e.formatType}),i}function Gx1(t,e,n){const i=z0(iL("size",t,n)),o=z0(iL("strokeWidth",t,n)),u=z0(Wx1(n[1].encode,e,s7));return Ci(`max(ceil(sqrt(${i})+${o}),${u})`,e)}function iL(t,e,n){return e[t]?`scale("${e[t]}",datum)`:rX(t,n[0].encode)}function Wx1(t,e,n){return rX("fontSize",t)||fx1("fontSize",e,n)}const Yx1=`item.orient==="${da}"?-90:item.orient==="${fa}"?90:0`;function Vx1(t,e){t=w1(t)?{text:t}:t;const n=l2(t,e.config.title),i=t.encode||{},o=i.group||{},u=o.name||void 0,l=o.interactive,a=o.style,s=[],c={},f=F1(e.add(B3(null,[c])));return s.push(Qx1(t,n,Xx1(t),f)),t.subtitle&&s.push(Zx1(t,n,i.subtitle,f)),Eh(h8({role:Hv1,from:f,encode:Kx1(n,o),marks:s,aria:n("aria"),description:n("description"),zindex:n("zindex"),name:u,interactive:l,style:a}),e)}function Xx1(t){const e=t.encode;return e&&e.title||K1({name:t.name,interactive:t.interactive,style:t.style},e)}function Kx1(t,e){const n={enter:{},update:{}};return Ve(n,{orient:t("orient"),anchor:t("anchor"),align:{signal:XC},angle:{signal:Yx1},limit:t("limit"),frame:t("frame"),offset:t("offset")||0,padding:t("subtitlePadding")}),ca(n,e,c7)}function Qx1(t,e,n,i){const o={value:0},u=t.text,l={enter:{opacity:o},update:{opacity:{value:1}},exit:{opacity:o}};return Ve(l,{text:u,align:{signal:"item.mark.group.align"},angle:{signal:"item.mark.group.angle"},limit:{signal:"item.mark.group.limit"},baseline:"top",dx:e("dx"),dy:e("dy"),fill:e("color"),font:e("font"),fontSize:e("fontSize"),fontStyle:e("fontStyle"),fontWeight:e("fontWeight"),lineHeight:e("lineHeight")},{align:e("align"),angle:e("angle"),baseline:e("baseline")}),M2({type:A6,role:Gv1,style:ix1,from:i,encode:l},n)}function Zx1(t,e,n,i){const o={value:0},u=t.subtitle,l={enter:{opacity:o},update:{opacity:{value:1}},exit:{opacity:o}};return Ve(l,{text:u,align:{signal:"item.mark.group.align"},angle:{signal:"item.mark.group.angle"},limit:{signal:"item.mark.group.limit"},baseline:"top",dx:e("dx"),dy:e("dy"),fill:e("subtitleColor"),font:e("subtitleFont"),fontSize:e("subtitleFontSize"),fontStyle:e("subtitleFontStyle"),fontWeight:e("subtitleFontWeight"),lineHeight:e("subtitleLineHeight")},{align:e("align"),angle:e("angle"),baseline:e("baseline")}),M2({type:A6,role:Wv1,style:ox1,from:i,encode:l},n)}function Jx1(t,e){const n=[];t.transform&&t.transform.forEach(i=>{n.push(ZC(i,e))}),t.on&&t.on.forEach(i=>{gX(i,e,t.name)}),e.addDataPipeline(t.name,t_1(t,e,n))}function t_1(t,e,n){const i=[];let o=null,u=!1,l=!1,a,s,c,f,g;for(t.values?xe(t.values)||nd(t.format)?(i.push(oL(e,t)),i.push(o=c0())):i.push(o=c0({$ingest:t.values,$format:t.format})):t.url?nd(t.url)||nd(t.format)?(i.push(oL(e,t)),i.push(o=c0())):i.push(o=c0({$request:t.url,$format:t.format})):t.source&&(o=a=S1(t.source).map(p=>F1(e.getData(p).output)),i.push(null)),s=0,c=n.length;s<c;++s)f=n[s],g=f.metadata,!o&&!g.source&&i.push(o=c0()),i.push(f),g.generates&&(l=!0),g.modifies&&!l&&(u=!0),g.source?o=f:g.changes&&(o=null);return a&&(c=a.length-1,i[0]=Db1({derive:u,pulse:c?a:a[0]}),(u||c)&&i.splice(1,0,c0())),o||i.push(c0()),i.push(S6({})),i}function c0(t){const e=B3({},t);return e.metadata={source:!0},e}function oL(t,e){return Ab1({url:e.url?t.property(e.url):void 0,async:e.async?t.property(e.async):void 0,values:e.values?t.property(e.values):void 0,format:t.objectProperty(e.format)})}const hX=t=>t===Eu||t===U3,Sh=(t,e,n)=>xe(t)?o_1(t.signal,e,n):t===da||t===U3?e:n,De=(t,e,n)=>xe(t)?n_1(t.signal,e,n):hX(t)?e:n,M3=(t,e,n)=>xe(t)?i_1(t.signal,e,n):hX(t)?n:e,pX=(t,e,n)=>xe(t)?u_1(t.signal,e,n):t===U3?{value:e}:{value:n},e_1=(t,e,n)=>xe(t)?l_1(t.signal,e,n):t===fa?{value:e}:{value:n},n_1=(t,e,n)=>mX(`${t} === '${U3}' || ${t} === '${Eu}'`,e,n),i_1=(t,e,n)=>mX(`${t} !== '${U3}' && ${t} !== '${Eu}'`,e,n),o_1=(t,e,n)=>JC(`${t} === '${da}' || ${t} === '${U3}'`,e,n),u_1=(t,e,n)=>JC(`${t} === '${U3}'`,e,n),l_1=(t,e,n)=>JC(`${t} === '${fa}'`,e,n),mX=(t,e,n)=>(e=e!=null?Re(e):e,n=n!=null?Re(n):n,uL(e)&&uL(n)?(e=e?e.signal||y1(e.value):null,n=n?n.signal||y1(n.value):null,{signal:`${t} ? (${e}) : (${n})`}):[K1({test:t},e)].concat(n||[])),uL=t=>t==null||Object.keys(t).length===1,JC=(t,e,n)=>({signal:`${t} ? (${Y5(e)}) : (${Y5(n)})`}),a_1=(t,e,n,i,o)=>({signal:(i!=null?`${t} === '${da}' ? (${Y5(i)}) : `:"")+(n!=null?`${t} === '${Eu}' ? (${Y5(n)}) : `:"")+(o!=null?`${t} === '${fa}' ? (${Y5(o)}) : `:"")+(e!=null?`${t} === '${U3}' ? (${Y5(e)}) : `:"")+"(null)"}),Y5=t=>xe(t)?t.signal:t==null?null:y1(t),r_1=(t,e)=>e===0?0:xe(t)?{signal:`(${t.signal}) * ${e}`}:{value:t*e},J5=(t,e)=>{const n=t.signal;return n&&n.endsWith("(null)")?{signal:n.slice(0,-6)+e.signal}:t};function R5(t,e,n,i){let o;if(e&&A1(e,t))return e[t];if(A1(n,t))return n[t];if(t.startsWith("title")){switch(t){case"titleColor":o="fill";break;case"titleFont":case"titleFontSize":case"titleFontWeight":o=t[5].toLowerCase()+t.slice(6)}return i[WC][o]}else if(t.startsWith("label")){switch(t){case"labelColor":o="fill";break;case"labelFont":case"labelFontSize":o=t[5].toLowerCase()+t.slice(6)}return i[s7][o]}return null}function lL(t){const e={};for(const n of t)if(n)for(const i in n)e[i]=1;return Object.keys(e)}function s_1(t,e){var n=e.config,i=n.style,o=n.axis,u=e.scaleType(t.scale)==="band"&&n.axisBand,l=t.orient,a,s,c;if(xe(l)){const g=lL([n.axisX,n.axisY]),p=lL([n.axisTop,n.axisBottom,n.axisLeft,n.axisRight]);a={};for(c of g)a[c]=De(l,R5(c,n.axisX,o,i),R5(c,n.axisY,o,i));s={};for(c of p)s[c]=a_1(l.signal,R5(c,n.axisTop,o,i),R5(c,n.axisBottom,o,i),R5(c,n.axisLeft,o,i),R5(c,n.axisRight,o,i))}else a=l===U3||l===Eu?n.axisX:n.axisY,s=n["axis"+l[0].toUpperCase()+l.slice(1)];return a||s||u?K1({},o,a,s,u):o}function c_1(t,e,n,i){const o=l2(t,e),u=t.orient;let l,a;const s={enter:l={opacity:dt},update:a={opacity:t3},exit:{opacity:dt}};Ve(s,{stroke:o("domainColor"),strokeCap:o("domainCap"),strokeDash:o("domainDash"),strokeDashOffset:o("domainDashOffset"),strokeWidth:o("domainWidth"),strokeOpacity:o("domainOpacity")});const c=aL(t,0),f=aL(t,1);return l.x=a.x=De(u,c,dt),l.x2=a.x2=De(u,f),l.y=a.y=M3(u,c,dt),l.y2=a.y2=M3(u,f),M2({type:VC,role:Dv1,from:i,encode:s},n)}function aL(t,e){return{scale:t.scale,range:e}}function d_1(t,e,n,i,o){const u=l2(t,e),l=t.orient,a=t.gridScale,s=Sh(l,1,-1),c=f_1(t.offset,s);let f,g,p;const m={enter:f={opacity:dt},update:p={opacity:t3},exit:g={opacity:dt}};Ve(m,{stroke:u("gridColor"),strokeCap:u("gridCap"),strokeDash:u("gridDash"),strokeDashOffset:u("gridDashOffset"),strokeOpacity:u("gridOpacity"),strokeWidth:u("gridWidth")});const v={scale:t.scale,field:J2,band:o.band,extra:o.extra,offset:o.offset,round:u("tickRound")},b=De(l,{signal:"height"},{signal:"width"}),x=a?{scale:a,range:0,mult:s,offset:c}:{value:0,offset:c},w=a?{scale:a,range:1,mult:s,offset:c}:K1(b,{mult:s,offset:c});return f.x=p.x=De(l,v,x),f.y=p.y=M3(l,v,x),f.x2=p.x2=M3(l,w),f.y2=p.y2=De(l,w),g.x=De(l,v),g.y=M3(l,v),M2({type:VC,role:Ov1,key:J2,from:i,encode:m},n)}function f_1(t,e){if(e!==1)if(!E1(t))t=xe(e)?{signal:`(${e.signal}) * (${t||0})`}:e*(t||0);else{let n=t=K1({},t);for(;n.mult!=null;)if(E1(n.mult))n=n.mult=K1({},n.mult);else return n.mult=xe(e)?{signal:`(${n.mult}) * (${e.signal})`}:n.mult*e,t;n.mult=e}return t}function g_1(t,e,n,i,o,u){const l=l2(t,e),a=t.orient,s=Sh(a,-1,1);let c,f,g;const p={enter:c={opacity:dt},update:g={opacity:t3},exit:f={opacity:dt}};Ve(p,{stroke:l("tickColor"),strokeCap:l("tickCap"),strokeDash:l("tickDash"),strokeDashOffset:l("tickDashOffset"),strokeOpacity:l("tickOpacity"),strokeWidth:l("tickWidth")});const m=Re(o);m.mult=s;const v={scale:t.scale,field:J2,band:u.band,extra:u.extra,offset:u.offset,round:l("tickRound")};return g.y=c.y=De(a,dt,v),g.y2=c.y2=De(a,m),f.x=De(a,v),g.x=c.x=M3(a,dt,v),g.x2=c.x2=M3(a,m),f.y=M3(a,v),M2({type:VC,role:zv1,key:J2,from:i,encode:p},n)}function ab(t,e,n,i,o){return{signal:'flush(range("'+t+'"), scale("'+t+'", datum.value), '+e+","+n+","+i+","+o+")"}}function h_1(t,e,n,i,o,u){const l=l2(t,e),a=t.orient,s=t.scale,c=Sh(a,-1,1),f=z0(l("labelFlush")),g=z0(l("labelFlushOffset")),p=l("labelAlign"),m=l("labelBaseline");let v=f===0||!!f,b;const x=Re(o);x.mult=c,x.offset=Re(l("labelPadding")||0),x.offset.mult=c;const w={scale:s,field:J2,band:.5,offset:sX(u.offset,l("labelOffset"))},S=De(a,v?ab(s,f,'"left"','"right"','"center"'):{value:"center"},e_1(a,"left","right")),A=De(a,pX(a,"bottom","top"),v?ab(s,f,'"top"','"bottom"','"middle"'):{value:"middle"}),C=ab(s,f,`-(${g})`,g,0);v=v&&g;const k={opacity:dt,x:De(a,w,x),y:M3(a,w,x)},M={enter:k,update:b={opacity:t3,text:{field:GC},x:k.x,y:k.y,align:S,baseline:A},exit:{opacity:dt,x:k.x,y:k.y}};Ve(M,{dx:!p&&v?De(a,C):null,dy:!m&&v?M3(a,C):null}),Ve(M,{angle:l("labelAngle"),fill:l("labelColor"),fillOpacity:l("labelOpacity"),font:l("labelFont"),fontSize:l("labelFontSize"),fontWeight:l("labelFontWeight"),fontStyle:l("labelFontStyle"),limit:l("labelLimit"),lineHeight:l("labelLineHeight")},{align:p,baseline:m});const T=l("labelBound");let D=l("labelOverlap");return D=D||T?{separation:l("labelSeparation"),method:D,order:"datum.index",bound:T?{scale:s,orient:a,tolerance:T}:null}:void 0,b.align!==S&&(b.align=J5(b.align,S)),b.baseline!==A&&(b.baseline=J5(b.baseline,A)),M2({type:A6,role:Fv1,style:s7,key:J2,from:i,encode:M,overlap:D},n)}function p_1(t,e,n,i){const o=l2(t,e),u=t.orient,l=Sh(u,-1,1);let a,s;const c={enter:a={opacity:dt,anchor:Re(o("titleAnchor",null)),align:{signal:XC}},update:s=K1({},a,{opacity:t3,text:Re(t.title)}),exit:{opacity:dt}},f={signal:`lerp(range("${t.scale}"), ${_h(0,1,.5)})`};return s.x=De(u,f),s.y=M3(u,f),a.angle=De(u,dt,r_1(l,90)),a.baseline=De(u,pX(u,Eu,U3),{value:Eu}),s.angle=a.angle,s.baseline=a.baseline,Ve(c,{fill:o("titleColor"),fillOpacity:o("titleOpacity"),font:o("titleFont"),fontSize:o("titleFontSize"),fontStyle:o("titleFontStyle"),fontWeight:o("titleFontWeight"),limit:o("titleLimit"),lineHeight:o("titleLineHeight")},{align:o("titleAlign"),angle:o("titleAngle"),baseline:o("titleBaseline")}),m_1(o,u,c,n),c.update.align=J5(c.update.align,a.align),c.update.angle=J5(c.update.angle,a.angle),c.update.baseline=J5(c.update.baseline,a.baseline),M2({type:A6,role:Lv1,style:WC,from:i,encode:c},n)}function m_1(t,e,n,i){const o=(a,s)=>a!=null?(n.update[s]=J5(Re(a),n.update[s]),!1):!P5(s,i),u=o(t("titleX"),"x"),l=o(t("titleY"),"y");n.enter.auto=l===u?Re(l):De(e,Re(l),Re(u))}function y_1(t,e){const n=s_1(t,e),i=t.encode||{},o=i.axis||{},u=o.name||void 0,l=o.interactive,a=o.style,s=l2(t,n),c=gx1(s),f={scale:t.scale,ticks:!!s("ticks"),labels:!!s("labels"),grid:!!s("grid"),domain:!!s("domain"),title:t.title!=null},g=F1(e.add(B3({},[f]))),p=F1(e.add(vb1({scale:e.scaleRef(t.scale),extra:e.property(c.extra),count:e.objectProperty(t.tickCount),values:e.objectProperty(t.values),minstep:e.property(t.tickMinStep),formatType:e.property(t.formatType),formatSpecifier:e.property(t.format)}))),m=[];let v;return f.grid&&m.push(d_1(t,n,i.grid,p,c)),f.ticks&&(v=s("tickSize"),m.push(g_1(t,n,i.ticks,p,v,c))),f.labels&&(v=f.ticks?v:0,m.push(h_1(t,n,i.labels,p,v,c))),f.domain&&m.push(c_1(t,n,i.domain,g)),f.title&&m.push(p_1(t,n,i.title,g)),Eh(h8({role:Rv1,from:g,encode:ca(v_1(s,t),o,c7),marks:m,aria:s("aria"),description:s("description"),zindex:s("zindex"),name:u,interactive:l,style:a}),e)}function v_1(t,e){const n={enter:{},update:{}};return Ve(n,{orient:t("orient"),offset:t("offset")||0,position:_3(e.position,0),titlePadding:t("titlePadding"),minExtent:t("minExtent"),maxExtent:t("maxExtent"),range:{signal:`abs(span(range("${e.scale}")))`},translate:t("translate"),format:e.format,formatType:e.formatType}),n}function yX(t,e,n){const i=S1(t.signals),o=S1(t.scales);return n||i.forEach(u=>XV(u,e)),S1(t.projections).forEach(u=>Kb1(u,e)),o.forEach(u=>jb1(u,e)),S1(t.data).forEach(u=>Jx1(u,e)),o.forEach(u=>Pb1(u,e)),(n||i).forEach(u=>yb1(u,e)),S1(t.axes).forEach(u=>y_1(u,e)),S1(t.marks).forEach(u=>Eh(u,e)),S1(t.legends).forEach(u=>Bx1(u,e)),t.title&&Vx1(t.title,e),e.parseLambdas(),e}const b_1=t=>ca({enter:{x:{value:0},y:{value:0}},update:{width:{signal:"width"},height:{signal:"height"}}},t);function x_1(t,e){const n=e.config,i=F1(e.root=e.add(Df())),o=__1(t,n);o.forEach(c=>XV(c,e)),e.description=t.description||n.description,e.eventConfig=n.events,e.legends=e.objectProperty(n.legend&&n.legend.layout),e.locale=n.locale;const u=e.add(B3()),l=e.add(ZV(VV(b_1(t.encode),xh,BC,t.style,e,{pulse:F1(u)}))),a=e.add(eX({layout:e.objectProperty(t.layout),legends:e.legends,autosize:e.signalRef("autosize"),mark:i,pulse:F1(l)}));e.operators.pop(),e.pushState(F1(l),F1(a),null),yX(t,e,o),e.operators.push(a);let s=e.add(QV({mark:i,pulse:F1(a)}));return s=e.add(tX({pulse:F1(s)})),s=e.add(S6({pulse:F1(s)})),e.addData("root",new i6(e,u,u,s)),e}function H9(t,e){return e&&e.signal?{name:t,update:e.signal}:{name:t,value:e}}function __1(t,e){const n=l=>_3(t[l],e[l]),i=[H9("background",n("background")),H9("autosize",$v1(n("autosize"))),H9("padding",Nv1(n("padding"))),H9("width",n("width")||0),H9("height",n("height")||0)],o=i.reduce((l,a)=>(l[a.name]=a,l),{}),u={};return S1(t.signals).forEach(l=>{A1(o,l.name)?l=K1(o[l.name],l):i.push(l),u[l.name]=l}),S1(e.signals).forEach(l=>{!A1(u,l.name)&&!A1(o,l.name)&&i.push(l)}),i}function vX(t,e){this.config=t||{},this.options=e||{},this.bindings=[],this.field={},this.signals={},this.lambdas={},this.scales={},this.events={},this.data={},this.streams=[],this.updates=[],this.operators=[],this.eventConfig=null,this.locale=null,this._id=0,this._subid=0,this._nextsub=[0],this._parent=[],this._encode=[],this._lookup=[],this._markpath=[]}function rL(t){this.config=t.config,this.options=t.options,this.legends=t.legends,this.field=Object.create(t.field),this.signals=Object.create(t.signals),this.lambdas=Object.create(t.lambdas),this.scales=Object.create(t.scales),this.events=Object.create(t.events),this.data=Object.create(t.data),this.streams=[],this.updates=[],this.operators=[],this._id=0,this._subid=++t._nextsub[0],this._nextsub=t._nextsub,this._parent=t._parent.slice(),this._encode=t._encode.slice(),this._lookup=t._lookup.slice(),this._markpath=t._markpath}vX.prototype=rL.prototype={parse(t){return yX(t,this)},fork(){return new rL(this)},isSubscope(){return this._subid>0},toRuntime(){return this.finish(),{description:this.description,operators:this.operators,streams:this.streams,updates:this.updates,bindings:this.bindings,eventConfig:this.eventConfig,locale:this.locale}},id(){return(this._subid?this._subid+":":0)+this._id++},add(t){return this.operators.push(t),t.id=this.id(),t.refs&&(t.refs.forEach(e=>{e.$ref=t.id}),t.refs=null),t},proxy(t){const e=t instanceof F_?F1(t):t;return this.add(Rb1({value:e}))},addStream(t){return this.streams.push(t),t.id=this.id(),t},addUpdate(t){return this.updates.push(t),t},finish(){let t,e;this.root&&(this.root.root=!0);for(t in this.signals)this.signals[t].signal=t;for(t in this.scales)this.scales[t].scale=t;function n(i,o,u){let l,a;i&&(l=i.data||(i.data={}),a=l[o]||(l[o]=[]),a.push(u))}for(t in this.data){e=this.data[t],n(e.input,t,"input"),n(e.output,t,"output"),n(e.values,t,"values");for(const i in e.index)n(e.index[i],t,"index:"+i)}return this},pushState(t,e,n){this._encode.push(F1(this.add(S6({pulse:t})))),this._parent.push(e),this._lookup.push(n?F1(this.proxy(n)):null),this._markpath.push(-1)},popState(){this._encode.pop(),this._parent.pop(),this._lookup.pop(),this._markpath.pop()},parent(){return st(this._parent)},encode(){return st(this._encode)},lookup(){return st(this._lookup)},markpath(){const t=this._markpath;return++t[t.length-1]},fieldRef(t,e){if(w1(t))return f8(t,e);t.signal||u1("Unsupported field reference: "+y1(t));const n=t.signal;let i=this.field[n];if(!i){const o={name:this.signalRef(n)};e&&(o.as=e),this.field[n]=i=F1(this.add(wb1(o)))}return i},compareRef(t){let e=!1;const n=u=>xe(u)?(e=!0,this.signalRef(u.signal)):ab1(u)?(e=!0,this.exprRef(u.expr)):u,i=S1(t.field).map(n),o=S1(t.order).map(n);return e?F1(this.add(Vz({fields:i,orders:o}))):Wz(i,o)},keyRef(t,e){let n=!1;const i=u=>xe(u)?(n=!0,F1(o[u.signal])):u,o=this.signals;return t=S1(t).map(i),n?F1(this.add(Eb1({fields:t,flat:e}))):ib1(t,e)},sortRef(t){if(!t)return t;const e=vh(t.op,t.field),n=t.order||ob1;return n.signal?F1(this.add(Vz({fields:e,orders:this.signalRef(n.signal)}))):Wz(e,n)},event(t,e){const n=t+":"+e;if(!this.events[n]){const i=this.id();this.streams.push({id:i,source:t,type:e}),this.events[n]=i}return this.events[n]},hasOwnSignal(t){return A1(this.signals,t)},addSignal(t,e){this.hasOwnSignal(t)&&u1("Duplicate signal name: "+y1(t));const n=e instanceof F_?e:this.add(Df(e));return this.signals[t]=n},getSignal(t){return this.signals[t]||u1("Unrecognized signal name: "+y1(t)),this.signals[t]},signalRef(t){return this.signals[t]?F1(this.signals[t]):(A1(this.lambdas,t)||(this.lambdas[t]=this.add(Df(null))),F1(this.lambdas[t]))},parseLambdas(){const t=Object.keys(this.lambdas);for(let e=0,n=t.length;e<n;++e){const i=t[e],o=Ci(i,this),u=this.lambdas[i];u.params=o.$params,u.update=o.$expr}},property(t){return t&&t.signal?this.signalRef(t.signal):t},objectProperty(t){return!t||!E1(t)?t:this.signalRef(t.signal||tk(t))},exprRef(t,e){const n={expr:Ci(t,this)};return e&&(n.expr.$name=e),F1(this.add(xb1(n)))},addBinding(t,e){this.bindings||u1("Nested signals do not support binding: "+y1(t)),this.bindings.push(K1({signal:t},e))},addScaleProj(t,e){A1(this.scales,t)&&u1("Duplicate scale or projection name: "+y1(t)),this.scales[t]=this.add(e)},addScale(t,e){this.addScaleProj(t,Ob1(e))},addProjection(t,e){this.addScaleProj(t,Nb1(e))},getScale(t){return this.scales[t]||u1("Unrecognized scale name: "+y1(t)),this.scales[t]},scaleRef(t){return F1(this.getScale(t))},scaleType(t){return this.getScale(t).params.type},projectionRef(t){return this.scaleRef(t)},projectionType(t){return this.scaleType(t)},addData(t,e){return A1(this.data,t)&&u1("Duplicate data set name: "+y1(t)),this.data[t]=e},getData(t){return this.data[t]||u1("Undefined data set name: "+y1(t)),this.data[t]},addDataPipeline(t,e){return A1(this.data,t)&&u1("Duplicate data set name: "+y1(t)),this.addData(t,i6.fromEntries(this,e))}};function tk(t){return(r1(t)?w_1:E_1)(t)}function w_1(t){const e=t.length;let n="[";for(let i=0;i<e;++i){const o=t[i];n+=(i>0?",":"")+(E1(o)?o.signal||tk(o):y1(o))}return n+"]"}function E_1(t){let e="{",n=0,i,o;for(i in t)o=t[i],e+=(++n>1?",":"")+y1(i)+":"+(E1(o)?o.signal||tk(o):y1(o));return e+"}"}function S_1(){const t="sans-serif",i="#4c78a8",o="#000",u="#888",l="#ddd";return{description:"Vega visualization",padding:0,autosize:"pad",background:null,events:{defaults:{allow:["wheel"]}},group:null,mark:null,arc:{fill:i},area:{fill:i},image:null,line:{stroke:i,strokeWidth:2},path:{stroke:i},rect:{fill:i},rule:{stroke:o},shape:{stroke:i},symbol:{fill:i,size:64},text:{fill:o,font:t,fontSize:11},trail:{fill:i,size:2},style:{"guide-label":{fill:o,font:t,fontSize:10},"guide-title":{fill:o,font:t,fontSize:11,fontWeight:"bold"},"group-title":{fill:o,font:t,fontSize:13,fontWeight:"bold"},"group-subtitle":{fill:o,font:t,fontSize:12},point:{size:30,strokeWidth:2,shape:"circle"},circle:{size:30,strokeWidth:2},square:{size:30,strokeWidth:2,shape:"square"},cell:{fill:"transparent",stroke:l},view:{fill:"transparent"}},title:{orient:"top",anchor:"middle",offset:4,subtitlePadding:3},axis:{minExtent:0,maxExtent:200,bandPosition:.5,domain:!0,domainWidth:1,domainColor:u,grid:!1,gridWidth:1,gridColor:l,labels:!0,labelAngle:0,labelLimit:180,labelOffset:0,labelPadding:2,ticks:!0,tickColor:u,tickOffset:0,tickRound:!0,tickSize:5,tickWidth:1,titlePadding:4},axisBand:{tickOffset:-.5},projection:{type:"mercator"},legend:{orient:"right",padding:0,gridAlign:"each",columnPadding:10,rowPadding:2,symbolDirection:"vertical",gradientDirection:"vertical",gradientLength:200,gradientThickness:16,gradientStrokeColor:l,gradientStrokeWidth:0,gradientLabelOffset:2,labelAlign:"left",labelBaseline:"middle",labelLimit:160,labelOffset:4,labelOverlap:!0,symbolLimit:30,symbolType:"circle",symbolSize:100,symbolOffset:0,symbolStrokeWidth:1.5,symbolBaseFillColor:"transparent",symbolBaseStrokeColor:u,titleLimit:180,titleOrient:"top",titlePadding:5,layout:{offset:18,direction:"horizontal",left:{direction:"vertical"},right:{direction:"vertical"}}},range:{category:{scheme:"tableau10"},ordinal:{scheme:"blues"},heatmap:{scheme:"yellowgreenblue"},ramp:{scheme:"blues"},diverging:{scheme:"blueorange",extent:[1,0]},symbol:["circle","square","triangle-up","cross","diamond","triangle-right","triangle-down","triangle-left"]}}}function A_1(t,e,n){return E1(t)||u1("Input Vega specification must be an object."),e=Kl(S_1(),e,t.config),x_1(t,new vX(e,n)).toRuntime()}var C_1="6.2.0";K1(pl,bl1,W71,Ss1,rd1,nf1,$g1,rg1,Ng1,eh1,dh1,vh1);const k_1=C_1,T_1=Object.freeze(Object.defineProperty({__proto__:null,Bounds:fe,CanvasHandler:J8,CanvasRenderer:Yd,DATE:t2,DAY:cn,DAYOFYEAR:Si,Dataflow:X5,Debug:fB,DisallowedObjectProperties:aE,Error:rE,EventStream:Eg,Gradient:sG,GroupItem:Wg,HOURS:k2,Handler:wA,HybridHandler:JG,HybridRenderer:qx,Info:dB,Item:Gg,MILLISECONDS:O3,MINUTES:T2,MONTH:pn,Marks:$2,MultiPulse:OE,None:cB,Operator:Dt,Parameters:wg,Pulse:su,QUARTER:Jn,RenderType:eu,Renderer:Z8,ResourceLoader:pG,SECONDS:u3,SVGHandler:IG,SVGRenderer:TA,SVGStringRenderer:ZG,Scenegraph:RG,TIME_UNITS:SE,Transform:i1,View:zV,WEEK:ve,Warn:sE,YEAR:Ye,accessor:u2,accessorFields:hn,accessorName:ee,array:S1,ascending:Zl,bandwidthNRD:jE,bin:VU,bootstrapCI:XU,boundClip:sW,boundContext:V8,boundItem:jx,boundMark:TG,boundStroke:l4,changeset:x6,clampRange:EB,codegenExpression:sV,compare:hE,constant:bn,cumulativeLogNormal:HE,cumulativeNormal:Ag,cumulativeUniform:VE,dayofyear:eU,debounce:pE,defaultLocale:$E,definition:GU,densityLogNormal:qE,densityNormal:PE,densityUniform:YE,domChild:ye,domClear:W2,domCreate:J4,domFind:_A,dotbin:KU,error:u1,expressionFunction:re,extend:K1,extent:_i,extentIndex:SB,falsy:I4,fastmap:Jl,field:i3,flush:AB,font:Qg,fontFamily:Q8,fontSize:Oi,format:zc,formatLocale:Ad,formats:RE,hasOwnProperty:A1,id:D8,identity:vn,inferType:OU,inferTypes:FU,ingest:vt,inherits:b1,inrange:U5,interpolate:ZS,interpolateColors:qg,interpolateRange:XH,intersect:uW,intersectBoxLine:q5,intersectPath:lA,intersectPoint:aA,intersectRule:yG,isArray:r1,isBoolean:Mu,isDate:au,isFunction:Q1,isIterable:CB,isNumber:ht,isObject:E1,isRegExp:mE,isString:w1,isTuple:xg,key:yE,lerp:kB,lineHeight:xu,loader:vg,locale:RU,logger:cE,lruCache:TB,markup:kA,merge:$B,mergeConfig:Kl,multiLineOffset:vA,one:Xl,pad:MB,panLinear:yB,panLog:vB,panPow:bB,panSymlog:xB,parse:A_1,parseExpression:TC,parseSelector:Fu,path:Mg,pathCurves:iA,pathEqual:cW,pathParse:_l,pathRectangle:fG,pathRender:Jr,pathSymbols:dG,pathTrail:gG,peek:st,point:Jg,projection:VA,quantileLogNormal:GE,quantileNormal:Cg,quantileUniform:XE,quantiles:zE,quantizeInterpolator:KH,quarter:_B,quartiles:LE,get random(){return l3},randomInteger:E51,randomKDE:BE,randomLCG:w51,randomLogNormal:ZU,randomMixture:JU,randomNormal:IE,randomUniform:tq,read:jU,regressionConstant:KE,regressionExp:nq,regressionLinear:QE,regressionLoess:uq,regressionLog:eq,regressionPoly:oq,regressionPow:iq,regressionQuad:ZE,renderModule:th,repeat:J9,resetDefaultLocale:x61,resetSVGDefIds:c71,responseType:LU,runtimeContext:EV,sampleCurve:Tg,sampleLogNormal:UE,sampleNormal:Sg,sampleUniform:WE,scale:mt,sceneEqual:$A,sceneFromJSON:MG,scenePickVisit:Pd,sceneToJSON:$G,sceneVisit:F3,sceneZOrder:rA,scheme:JS,serializeXML:VG,setHybridRendererOptions:l71,setRandom:x51,span:O8,splitAccessPath:Ni,stringValue:y1,textMetrics:w2,timeBin:vU,timeFloor:rU,timeFormatLocale:Yr,timeInterval:ia,timeOffset:dU,timeSequence:hU,timeUnitSpecifier:tU,timeUnits:AE,toBoolean:vE,toDate:bE,toNumber:fn,toSet:D3,toString:xE,transform:WU,transforms:pl,truncate:NB,truthy:o3,tupleid:z1,typeParsers:_x,utcFloor:sU,utcInterval:oa,utcOffset:fU,utcSequence:pU,utcdayofyear:oU,utcquarter:wB,utcweek:uU,version:k_1,visitArray:H4,week:nU,writeConfig:Ql,zero:K4,zoomLinear:dE,zoomLog:fE,zoomPow:vd,zoomSymlog:gE},Symbol.toStringTag,{value:"Module"}));function $_1(t,e,n){let i;e.x2&&(e.x?(n&&t.x>t.x2&&(i=t.x,t.x=t.x2,t.x2=i),t.width=t.x2-t.x):t.x=t.x2-(t.width||0)),e.xc&&(t.x=t.xc-(t.width||0)/2),e.y2&&(e.y?(n&&t.y>t.y2&&(i=t.y,t.y=t.y2,t.y2=i),t.height=t.y2-t.y):t.y=t.y2-(t.height||0)),e.yc&&(t.y=t.yc-(t.height||0)/2)}var M_1={NaN:NaN,E:Math.E,LN2:Math.LN2,LN10:Math.LN10,LOG2E:Math.LOG2E,LOG10E:Math.LOG10E,PI:Math.PI,SQRT1_2:Math.SQRT1_2,SQRT2:Math.SQRT2,MIN_VALUE:Number.MIN_VALUE,MAX_VALUE:Number.MAX_VALUE},N_1={"*":(t,e)=>t*e,"+":(t,e)=>t+e,"-":(t,e)=>t-e,"/":(t,e)=>t/e,"%":(t,e)=>t%e,">":(t,e)=>t>e,"<":(t,e)=>t<e,"<=":(t,e)=>t<=e,">=":(t,e)=>t>=e,"==":(t,e)=>t==e,"!=":(t,e)=>t!=e,"===":(t,e)=>t===e,"!==":(t,e)=>t!==e,"&":(t,e)=>t&e,"|":(t,e)=>t|e,"^":(t,e)=>t^e,"<<":(t,e)=>t<<e,">>":(t,e)=>t>>e,">>>":(t,e)=>t>>>e},R_1={"+":t=>+t,"-":t=>-t,"~":t=>~t,"!":t=>!t};const D_1=Array.prototype.slice,d0=(t,e,n)=>{const i=n?n(e[0]):e[0];return i[t].apply(i,D_1.call(e,1))},O_1=(t,e=0,n=1,i=0,o=0,u=0,l=0)=>w1(t)?new Date(t):new Date(t,e,n,i,o,u,l);var F_1={isNaN:Number.isNaN,isFinite:Number.isFinite,abs:Math.abs,acos:Math.acos,asin:Math.asin,atan:Math.atan,atan2:Math.atan2,ceil:Math.ceil,cos:Math.cos,exp:Math.exp,floor:Math.floor,log:Math.log,max:Math.max,min:Math.min,pow:Math.pow,random:Math.random,round:Math.round,sin:Math.sin,sqrt:Math.sqrt,tan:Math.tan,clamp:(t,e,n)=>Math.max(e,Math.min(n,t)),now:Date.now,utc:Date.UTC,datetime:O_1,date:t=>new Date(t).getDate(),day:t=>new Date(t).getDay(),year:t=>new Date(t).getFullYear(),month:t=>new Date(t).getMonth(),hours:t=>new Date(t).getHours(),minutes:t=>new Date(t).getMinutes(),seconds:t=>new Date(t).getSeconds(),milliseconds:t=>new Date(t).getMilliseconds(),time:t=>new Date(t).getTime(),timezoneoffset:t=>new Date(t).getTimezoneOffset(),utcdate:t=>new Date(t).getUTCDate(),utcday:t=>new Date(t).getUTCDay(),utcyear:t=>new Date(t).getUTCFullYear(),utcmonth:t=>new Date(t).getUTCMonth(),utchours:t=>new Date(t).getUTCHours(),utcminutes:t=>new Date(t).getUTCMinutes(),utcseconds:t=>new Date(t).getUTCSeconds(),utcmilliseconds:t=>new Date(t).getUTCMilliseconds(),length:t=>t.length,join:function(){return d0("join",arguments)},indexof:function(){return d0("indexOf",arguments)},lastindexof:function(){return d0("lastIndexOf",arguments)},slice:function(){return d0("slice",arguments)},reverse:t=>t.slice().reverse(),sort:t=>t.slice().sort(Zl),parseFloat,parseInt,upper:t=>String(t).toUpperCase(),lower:t=>String(t).toLowerCase(),substring:function(){return d0("substring",arguments,String)},split:function(){return d0("split",arguments,String)},replace:function(){return d0("replace",arguments,String)},trim:t=>String(t).trim(),btoa:t=>btoa(t),atob:t=>atob(t),regexp:RegExp,test:(t,e)=>RegExp(t).test(e)};const z_1=["view","item","group","xy","x","y"],bX=new Set([Function,eval,setTimeout,setInterval]);typeof setImmediate=="function"&&bX.add(setImmediate);const L_1={Literal:(t,e)=>e.value,Identifier:(t,e)=>{const n=e.name;return t.memberDepth>0?n:n==="datum"?t.datum:n==="event"?t.event:n==="item"?t.item:M_1[n]||t.params["$"+n]},MemberExpression:(t,e)=>{const n=!e.computed,i=t(e.object);n&&(t.memberDepth+=1);const o=t(e.property);if(n&&(t.memberDepth-=1),bX.has(i[o])){console.error(`Prevented interpretation of member "${o}" which could lead to insecure code execution`);return}return i[o]},CallExpression:(t,e)=>{const n=e.arguments;let i=e.callee.name;return i.startsWith("_")&&(i=i.slice(1)),i==="if"?t(n[0])?t(n[1]):t(n[2]):(t.fn[i]||F_1[i]).apply(t.fn,n.map(t))},ArrayExpression:(t,e)=>e.elements.map(t),BinaryExpression:(t,e)=>N_1[e.operator](t(e.left),t(e.right)),UnaryExpression:(t,e)=>R_1[e.operator](t(e.argument)),ConditionalExpression:(t,e)=>t(e.test)?t(e.consequent):t(e.alternate),LogicalExpression:(t,e)=>e.operator==="&&"?t(e.left)&&t(e.right):t(e.left)||t(e.right),ObjectExpression:(t,e)=>e.properties.reduce((n,i)=>{t.memberDepth+=1;const o=t(i.key);return t.memberDepth-=1,aE.has(t(i.value))?console.error(`Prevented interpretation of property "${o}" which could lead to insecure code execution`):n[o]=t(i.value),n},{})};function G9(t,e,n,i,o,u){const l=a=>L_1[a.type](l,a);return l.memberDepth=0,l.fn=Object.create(e),l.params=n,l.datum=i,l.event=o,l.item=u,z_1.forEach(a=>l.fn[a]=(...s)=>o.vega[a](...s)),l(t)}var j_1={operator(t,e){const n=e.ast,i=t.functions;return o=>G9(n,i,o)},parameter(t,e){const n=e.ast,i=t.functions;return(o,u)=>G9(n,i,u,o)},event(t,e){const n=e.ast,i=t.functions;return o=>G9(n,i,void 0,void 0,o)},handler(t,e){const n=e.ast,i=t.functions;return(o,u)=>{const l=u.item&&u.item.datum;return G9(n,i,o,l,u)}},encode(t,e){const{marktype:n,channels:i}=e,o=t.functions,u=n==="group"||n==="image"||n==="rect";return(l,a)=>{const s=l.datum;let c=0,f;for(const g in i)f=G9(i[g].ast,o,a,s,void 0,l),l[g]!==f&&(l[g]=f,c=1);return n!=="rule"&&$_1(l,i,u),c}}},P_1="6.4.0",I_1={version:P_1};function ek(t){return h1(t,"or")}function nk(t){return h1(t,"and")}function ik(t){return h1(t,"not")}function ld(t,e){if(ik(t))ld(t.not,e);else if(nk(t))for(const n of t.and)ld(n,e);else if(ek(t))for(const n of t.or)ld(n,e);else e(t)}function tl(t,e){return ik(t)?{not:tl(t.not,e)}:nk(t)?{and:t.and.map(n=>tl(n,e))}:ek(t)?{or:t.or.map(n=>tl(n,e))}:e(t)}const W1=structuredClone;function xX(t){throw new Error(t)}function Ml(t,e){const n={};for(const i of e)A1(t,i)&&(n[i]=t[i]);return n}function S2(t,e){const n={...t};for(const i of e)delete n[i];return n}Set.prototype.toJSON=function(){return`Set(${[...this].map(t=>_t(t)).join(",")})`};function at(t){if(ht(t))return t;const e=w1(t)?t:_t(t);if(e.length<250)return e;let n=0;for(let i=0;i<e.length;i++){const o=e.charCodeAt(i);n=(n<<5)-n+o,n=n&n}return n}function U_(t){return t===!1||t===null}function it(t,e){return t.includes(e)}function Nl(t,e){let n=0;for(const[i,o]of t.entries())if(e(o,i,n++))return!0;return!1}function ok(t,e){let n=0;for(const[i,o]of t.entries())if(!e(o,i,n++))return!1;return!0}function _X(t,...e){for(const n of e)B_1(t,n??{});return t}function B_1(t,e){for(const n of g1(e))Ql(t,n,e[n],!0)}function di(t,e){const n=[],i={};let o;for(const u of t)o=e(u),!(o in i)&&(i[o]=1,n.push(u));return n}function U_1(t,e){const n=g1(t),i=g1(e);if(n.length!==i.length)return!1;for(const o of n)if(t[o]!==e[o])return!1;return!0}function wX(t,e){if(t.size!==e.size)return!1;for(const n of t)if(!e.has(n))return!1;return!0}function uk(t,e){for(const n of t)if(e.has(n))return!0;return!1}function q_(t){const e=new Set;for(const n of t){const o=Ni(n).map((l,a)=>a===0?l:`[${l}]`),u=o.map((l,a)=>o.slice(0,a+1).join(""));for(const l of u)e.add(l)}return e}function lk(t,e){return t===void 0||e===void 0?!0:uk(q_(t),q_(e))}function Ot(t){return g1(t).length===0}const g1=Object.keys,de=Object.values,Su=Object.entries;function p8(t){return t===!0||t===!1}function qt(t){const e=t.replace(/\W/g,"_");return(t.match(/^\d+/)?"_":"")+e}function Lr(t,e){return ik(t)?`!(${Lr(t.not,e)})`:nk(t)?`(${t.and.map(n=>Lr(n,e)).join(") && (")})`:ek(t)?`(${t.or.map(n=>Lr(n,e)).join(") || (")})`:e(t)}function Of(t,e){if(e.length===0)return!0;const n=e.shift();return n in t&&Of(t[n],e)&&delete t[n],Ot(t)}function d7(t){return t.charAt(0).toUpperCase()+t.substr(1)}function ak(t,e="datum"){const n=Ni(t),i=[];for(let o=1;o<=n.length;o++){const u=`[${n.slice(0,o).map(y1).join("][")}]`;i.push(`${e}${u}`)}return i.join(" && ")}function EX(t,e="datum"){return`${e}[${y1(Ni(t).join("."))}]`}function St(t){return`datum['${t.replaceAll("'","\\'")}']`}function SX(t){return t.replaceAll("\\'","'").replaceAll("\\.",".")}function q_1(t){return t.replace(/(\[|\]|\.|'|")/g,"\\$1")}function r3(t){return`${Ni(t).map(q_1).join("\\.")}`}function o6(t,e,n){return t.replace(new RegExp(e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),"g"),n)}function ga(t){return`${Ni(t).join(".")}`}function Rl(t){return t?Ni(t).length:0}function le(...t){return t.find(e=>e!==void 0)}let AX=42;function CX(t){const e=++AX;return t?String(t)+e:e}function H_1(){AX=42}function kX(t){return TX(t)?t:`__${t}`}function TX(t){return t.startsWith("__")}function m8(t){if(t!==void 0)return(t%360+360)%360}function Ah(t){return ht(t)?!0:!isNaN(t)&&!isNaN(parseFloat(t))}const sL=Object.getPrototypeOf(structuredClone({}));function x2(t,e){if(t===e)return!0;if(t&&e&&typeof t=="object"&&typeof e=="object"){if(t.constructor.name!==e.constructor.name)return!1;let n,i;if(Array.isArray(t)){if(n=t.length,n!=e.length)return!1;for(i=n;i--!==0;)if(!x2(t[i],e[i]))return!1;return!0}if(t instanceof Map&&e instanceof Map){if(t.size!==e.size)return!1;for(const u of t.entries())if(!e.has(u[0]))return!1;for(const u of t.entries())if(!x2(u[1],e.get(u[0])))return!1;return!0}if(t instanceof Set&&e instanceof Set){if(t.size!==e.size)return!1;for(const u of t.entries())if(!e.has(u[0]))return!1;return!0}if(ArrayBuffer.isView(t)&&ArrayBuffer.isView(e)){if(n=t.length,n!=e.length)return!1;for(i=n;i--!==0;)if(t[i]!==e[i])return!1;return!0}if(t.constructor===RegExp)return t.source===e.source&&t.flags===e.flags;if(t.valueOf!==Object.prototype.valueOf&&t.valueOf!==sL.valueOf)return t.valueOf()===e.valueOf();if(t.toString!==Object.prototype.toString&&t.toString!==sL.toString)return t.toString()===e.toString();const o=Object.keys(t);if(n=o.length,n!==Object.keys(e).length)return!1;for(i=n;i--!==0;)if(!Object.prototype.hasOwnProperty.call(e,o[i]))return!1;for(i=n;i--!==0;){const u=o[i];if(!x2(t[u],e[u]))return!1}return!0}return t!==t&&e!==e}function _t(t){const e=[];return(function n(i){if(i?.toJSON&&typeof i.toJSON=="function"&&(i=i.toJSON()),i===void 0)return;if(typeof i=="number")return isFinite(i)?`${i}`:"null";if(typeof i!="object")return JSON.stringify(i);let o,u;if(Array.isArray(i)){for(u="[",o=0;o<i.length;o++)o&&(u+=","),u+=n(i[o])||"null";return`${u}]`}if(i===null)return"null";if(e.includes(i))throw new TypeError("Converting circular structure to JSON");const l=e.push(i)-1,a=Object.keys(i).sort();for(u="",o=0;o<a.length;o++){const s=a[o],c=n(i[s]);c&&(u&&(u+=","),u+=`${JSON.stringify(s)}:${c}`)}return e.splice(l,1),`{${u}}`})(t)}function h1(t,e){return E1(t)&&A1(t,e)&&t[e]!==void 0}const Uo="row",qo="column",Ch="facet",Ht="x",Le="y",q3="x2",ji="y2",zu="xOffset",ha="yOffset",H3="radius",r4="radius2",d3="theta",s4="theta2",G3="latitude",W3="longitude",Y3="latitude2",s3="longitude2",Lu="time",n2="color",Pi="fill",Ii="stroke",i2="shape",c4="size",C6="angle",d4="opacity",ju="fillOpacity",Pu="strokeOpacity",Iu="strokeWidth",Bu="strokeDash",f7="text",Dl="order",g7="detail",kh="key",u6="tooltip",Th="href",$h="url",Mh="description",G_1={x:1,y:1,x2:1,y2:1},$X={theta:1,theta2:1,radius:1,radius2:1};function MX(t){return A1($X,t)}const rk={longitude:1,longitude2:1,latitude:1,latitude2:1};function NX(t){switch(t){case G3:return"y";case Y3:return"y2";case W3:return"x";case s3:return"x2"}}function RX(t){return A1(rk,t)}const W_1=g1(rk),sk={...G_1,...$X,...rk,xOffset:1,yOffset:1,color:1,fill:1,stroke:1,time:1,opacity:1,fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeDash:1,size:1,angle:1,shape:1,order:1,text:1,detail:1,key:1,tooltip:1,href:1,url:1,description:1};function el(t){return t===n2||t===Pi||t===Ii}const DX={row:1,column:1,facet:1},Q2=g1(DX),ck={...sk,...DX},Y_1=g1(ck),{order:Rz1,detail:Dz1,tooltip:Oz1,...V_1}=ck,{row:Fz1,column:zz1,facet:Lz1,...X_1}=V_1;function K_1(t){return A1(X_1,t)}function OX(t){return A1(ck,t)}const Q_1=[q3,ji,Y3,s3,s4,r4];function FX(t){return k6(t)!==t}function k6(t){switch(t){case q3:return Ht;case ji:return Le;case Y3:return G3;case s3:return W3;case s4:return d3;case r4:return H3}return t}function Au(t){if(MX(t))switch(t){case d3:return"startAngle";case s4:return"endAngle";case H3:return"outerRadius";case r4:return"innerRadius"}return t}function Bi(t){switch(t){case Ht:return q3;case Le:return ji;case G3:return Y3;case W3:return s3;case d3:return s4;case H3:return r4}}function o2(t){switch(t){case Ht:case q3:return"width";case Le:case ji:return"height"}}function zX(t){switch(t){case Ht:return"xOffset";case Le:return"yOffset";case q3:return"x2Offset";case ji:return"y2Offset";case d3:return"thetaOffset";case H3:return"radiusOffset";case s4:return"theta2Offset";case r4:return"radius2Offset"}}function dk(t){switch(t){case Ht:return"xOffset";case Le:return"yOffset"}}function Z_1(t){switch(t){case"xOffset":return"x";case"yOffset":return"y"}}const J_1=g1(sk),{x:jz1,y:Pz1,x2:Iz1,y2:Bz1,xOffset:Uz1,yOffset:qz1,latitude:Hz1,longitude:Gz1,latitude2:Wz1,longitude2:Yz1,theta:Vz1,theta2:Xz1,radius:Kz1,radius2:Qz1,...fk}=sk,tw1=g1(fk),gk={x:1,y:1},f4=g1(gk);function ae(t){return A1(gk,t)}const hk={theta:1,radius:1},ew1=g1(hk);function Nh(t){return t==="width"?Ht:Le}const LX={xOffset:1,yOffset:1};function h7(t){return A1(LX,t)}const nw1={time:1};function rb(t){return t in nw1}const{text:Zz1,tooltip:Jz1,href:tL1,url:eL1,description:nL1,detail:iL1,key:oL1,order:uL1,...jX}=fk,iw1=g1(jX);function ow1(t){return A1(fk,t)}function uw1(t){switch(t){case n2:case Pi:case Ii:case c4:case i2:case d4:case Iu:case Bu:return!0;case ju:case Pu:case C6:case Lu:return!1}}const PX={...gk,...hk,...LX,...jX},pk=g1(PX);function Ui(t){return A1(PX,t)}function lw1(t,e){return rw1(t)[e]}const IX={arc:"always",area:"always",bar:"always",circle:"always",geoshape:"always",image:"always",line:"always",rule:"always",point:"always",rect:"always",square:"always",trail:"always",text:"always",tick:"always"},{geoshape:lL1,...aw1}=IX;function rw1(t){switch(t){case n2:case Pi:case Ii:case Mh:case g7:case kh:case u6:case Th:case Dl:case d4:case ju:case Pu:case Iu:case Ch:case Uo:case qo:return IX;case Ht:case Le:case zu:case ha:case G3:case W3:case Lu:return aw1;case q3:case ji:case Y3:case s3:return{area:"always",bar:"always",image:"always",rect:"always",rule:"always",circle:"binned",point:"binned",square:"binned",tick:"binned",line:"binned",trail:"binned"};case c4:return{point:"always",tick:"always",rule:"always",circle:"always",square:"always",bar:"always",text:"always",line:"always",trail:"always"};case Bu:return{line:"always",point:"always",tick:"always",rule:"always",circle:"always",square:"always",bar:"always",geoshape:"always"};case i2:return{point:"always",geoshape:"always"};case f7:return{text:"always"};case C6:return{point:"always",square:"always",text:"always"};case $h:return{image:"always"};case d3:return{text:"always",arc:"always"};case H3:return{text:"always",arc:"always"};case s4:case r4:return{arc:"always"}}}function sb(t){switch(t){case Ht:case Le:case d3:case H3:case zu:case ha:case c4:case C6:case Iu:case d4:case ju:case Pu:case Lu:case q3:case ji:case s4:case r4:return;case Ch:case Uo:case qo:case i2:case Bu:case f7:case u6:case Th:case $h:case Mh:return"discrete";case n2:case Pi:case Ii:return"flexible";case G3:case W3:case Y3:case s3:case g7:case kh:case Dl:return}}const sw1={argmax:1,argmin:1,average:1,count:1,distinct:1,exponential:1,exponentialb:1,product:1,max:1,mean:1,median:1,min:1,missing:1,q1:1,q3:1,ci0:1,ci1:1,stderr:1,stdev:1,stdevp:1,sum:1,valid:1,values:1,variance:1,variancep:1},cw1={count:1,min:1,max:1};function Jo(t){return h1(t,"argmin")}function Uu(t){return h1(t,"argmax")}function mk(t){return w1(t)&&A1(sw1,t)}const dw1=new Set(["count","valid","missing","distinct"]);function Rh(t){return w1(t)&&dw1.has(t)}function fw1(t){return w1(t)&&it(["min","max"],t)}const gw1=new Set(["count","sum","distinct","valid","missing"]),hw1=new Set(["mean","average","median","q1","q3","min","max"]);function BX(t){return Mu(t)&&(t=Hh(t,void 0)),`bin${g1(t).map(e=>Dh(t[e])?qt(`_${e}_${Su(t[e])}`):qt(`_${e}_${t[e]}`)).join("")}`}function jt(t){return t===!0||T6(t)&&!t.binned}function Be(t){return t==="binned"||T6(t)&&t.binned===!0}function T6(t){return E1(t)}function Dh(t){return h1(t,"param")}function cL(t){switch(t){case Uo:case qo:case c4:case n2:case Pi:case Ii:case Iu:case d4:case ju:case Pu:case i2:return 6;case Bu:return 4;default:return 10}}function p7(t){return h1(t,"expr")}function Ue(t,{level:e}={level:0}){const n=g1(t||{}),i={};for(const o of n)i[o]=e===0?v2(t[o]):Ue(t[o],{level:e-1});return i}function UX(t){const{anchor:e,frame:n,offset:i,orient:o,angle:u,limit:l,color:a,subtitleColor:s,subtitleFont:c,subtitleFontSize:f,subtitleFontStyle:g,subtitleFontWeight:p,subtitleLineHeight:m,subtitlePadding:v,...b}=t,x={...b,...a?{fill:a}:{}},w={...e?{anchor:e}:{},...n?{frame:n}:{},...i?{offset:i}:{},...o?{orient:o}:{},...u!==void 0?{angle:u}:{},...l!==void 0?{limit:l}:{}},S={...s?{subtitleColor:s}:{},...c?{subtitleFont:c}:{},...f?{subtitleFontSize:f}:{},...g?{subtitleFontStyle:g}:{},...p?{subtitleFontWeight:p}:{},...m?{subtitleLineHeight:m}:{},...v?{subtitlePadding:v}:{}},A=Ml(t,["align","baseline","dx","dy","limit"]);return{titleMarkConfig:x,subtitleMarkConfig:A,nonMarkTitleProperties:w,subtitle:S}}function V4(t){return w1(t)||r1(t)&&w1(t[0])}function $1(t){return h1(t,"signal")}function $6(t){return h1(t,"step")}function pw1(t){return r1(t)?!1:h1(t,"fields")&&!h1(t,"data")}function mw1(t){return r1(t)?!1:h1(t,"fields")&&h1(t,"data")}function Do(t){return r1(t)?!1:h1(t,"field")&&h1(t,"data")}const yw1={aria:1,description:1,ariaRole:1,ariaRoleDescription:1,blend:1,opacity:1,fill:1,fillOpacity:1,stroke:1,strokeCap:1,strokeWidth:1,strokeOpacity:1,strokeDash:1,strokeDashOffset:1,strokeJoin:1,strokeOffset:1,strokeMiterLimit:1,startAngle:1,endAngle:1,padAngle:1,innerRadius:1,outerRadius:1,size:1,shape:1,interpolate:1,tension:1,orient:1,align:1,baseline:1,text:1,dir:1,dx:1,dy:1,ellipsis:1,limit:1,radius:1,theta:1,angle:1,font:1,fontSize:1,fontWeight:1,fontStyle:1,lineBreak:1,lineHeight:1,cursor:1,href:1,tooltip:1,cornerRadius:1,cornerRadiusTopLeft:1,cornerRadiusTopRight:1,cornerRadiusBottomLeft:1,cornerRadiusBottomRight:1,aspect:1,width:1,height:1,url:1,smooth:1},vw1=g1(yw1),bw1={arc:1,area:1,group:1,image:1,line:1,path:1,rect:1,rule:1,shape:1,symbol:1,text:1,trail:1},H_=["cornerRadius","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomLeft","cornerRadiusBottomRight"],xw1=" – ";function qX(t){const e=r1(t.condition)?t.condition.map(dL):dL(t.condition);return{...v2(t),condition:e}}function v2(t){if(p7(t)){const{expr:e,...n}=t;return{signal:e,...n}}return t}function dL(t){if(p7(t)){const{expr:e,...n}=t;return{signal:e,...n}}return t}function It(t){if(p7(t)){const{expr:e,...n}=t;return{signal:e,...n}}return $1(t)?t:t!==void 0?{value:t}:void 0}function _w1(t){return $1(t)?t.signal:y1(t)}function fL(t){return $1(t)?t.signal:y1(t.value)}function T3(t){return $1(t)?t.signal:t==null?null:y1(t)}function ww1(t,e,n){for(const i of n){const o=ki(i,e.markDef,e.config);o!==void 0&&(t[i]=It(o))}return t}function HX(t){return[].concat(t.type,t.style??[])}function xt(t,e,n,i={}){const{vgChannel:o,ignoreVgConfig:u}=i;return o&&h1(e,o)?e[o]:e[t]!==void 0?e[t]:u&&(!o||o===t)?void 0:ki(t,e,n,i)}function ki(t,e,n,{vgChannel:i}={}){const o=G_(t,e,n.style);return le(i?o:void 0,o,i?n[e.type][i]:void 0,n[e.type][t],i?n.mark[i]:n.mark[t])}function G_(t,e,n){return GX(t,HX(e),n)}function GX(t,e,n){e=S1(e);let i;for(const o of e){const u=n[o];h1(u,t)&&(i=u[t])}return i}function WX(t,e){return S1(t).reduce((n,i)=>(n.field.push(_1(i,e)),n.order.push(i.sort??"ascending"),n),{field:[],order:[]})}function YX(t,e){const n=[...t];return e.forEach(i=>{for(const o of n)if(x2(o,i))return;n.push(i)}),n}function VX(t,e){return x2(t,e)||!e?t:t?[...S1(t),...S1(e)].join(", "):e}function XX(t,e){const n=t.value,i=e.value;if(n==null||i===null)return{explicit:t.explicit,value:null};if((V4(n)||$1(n))&&(V4(i)||$1(i)))return{explicit:t.explicit,value:VX(n,i)};if(V4(n)||$1(n))return{explicit:t.explicit,value:n};if(V4(i)||$1(i))return{explicit:t.explicit,value:i};if(!V4(n)&&!$1(n)&&!V4(i)&&!$1(i))return{explicit:t.explicit,value:YX(n,i)};throw new Error("It should never reach here")}function yk(t){return`Invalid specification ${_t(t)}. Make sure the specification includes at least one of the following properties: "mark", "layer", "facet", "hconcat", "vconcat", "concat", or "repeat".`}const Ew1='Autosize "fit" only works for single views and layered views.';function gL(t){return`${t=="width"?"Width":"Height"} "container" only works for single views and layered views.`}function hL(t){const e=t=="width"?"Width":"Height",n=t=="width"?"x":"y";return`${e} "container" only works well with autosize "fit" or "fit-${n}".`}function pL(t){return t?`Dropping "fit-${t}" because spec has discrete ${o2(t)}.`:'Dropping "fit" because spec has discrete size.'}function vk(t){return`Unknown field for ${t}. Cannot calculate view size.`}function mL(t){return`Cannot project a selection on encoding channel "${t}", which has no field.`}function Sw1(t,e){return`Cannot project a selection on encoding channel "${t}" as it uses an aggregate function ("${e}").`}function Aw1(t){return`The "nearest" transform is not supported for ${t} marks.`}function KX(t){return`Selection not supported for ${t} yet.`}function Cw1(t){return`Cannot find a selection named "${t}".`}const kw1="Scale bindings are currently only supported for scales with unbinned, continuous domains.",Tw1="Sequntial scales are deprecated. The available quantitative scale type values are linear, log, pow, sqrt, symlog, time and utc",$w1="Legend bindings are only supported for selections over an individual field or encoding channel.";function Mw1(t){return`Lookups can only be performed on selection parameters. "${t}" is a variable parameter.`}function Nw1(t){return`Cannot define and lookup the "${t}" selection in the same view. Try moving the lookup into a second, layered view?`}const Rw1="The same selection must be used to override scale domains in a layered view.",Dw1='Interval selections should be initialized using "x", "y", "longitude", or "latitude" keys.';function Ow1(t){return`Unknown repeated value "${t}".`}function yL(t){return`The "columns" property cannot be used when "${t}" has nested row/column.`}const Fw1="Multiple timer selections in one unit spec are not supported. Ignoring all but the first.",bk="Animation involving facet, layer, or concat is currently unsupported.";function zw1(t){return`A "field" or "encoding" must be specified when using a selection as a scale domain. Using "field": ${y1(t)}.`}function Lw1(t,e,n,i){return`${t.length?"Multiple ":"No "}matching ${y1(e)} encoding found for selection ${y1(n.param)}. Using "field": ${y1(i)}.`}const jw1="Axes cannot be shared in concatenated or repeated views yet (https://github.com/vega/vega-lite/issues/2415).";function Pw1(t){return`Unrecognized parse "${t}".`}function vL(t,e,n){return`An ancestor parsed field "${t}" as ${n} but a child wants to parse the field as ${e}.`}const Iw1="Attempt to add the same child twice.";function Bw1(t){return`Ignoring an invalid transform: ${_t(t)}.`}const Uw1='If "from.fields" is not specified, "as" has to be a string that specifies the key to be used for the data from the secondary source.';function bL(t){return`Config.customFormatTypes is not true, thus custom format type and format for channel ${t} are dropped.`}function qw1(t){const{parentProjection:e,projection:n}=t;return`Layer's shared projection ${_t(e)} is overridden by a child projection ${_t(n)}.`}const Hw1="Arc marks uses theta channel rather than angle, replacing angle with theta.";function Gw1(t){return`${t}Offset dropped because ${t} is continuous`}function Ww1(t,e,n){return`Channel ${t} is a ${e}. Converted to {value: ${_t(n)}}.`}function QX(t){return`Invalid field type "${t}".`}function Yw1(t,e){return`Invalid field type "${t}" for aggregate: "${e}", using "quantitative" instead.`}function Vw1(t){return`Invalid aggregation operator "${t}".`}function ZX(t,e){const{fill:n,stroke:i}=e;return`Dropping color ${t} as the plot also has ${n&&i?"fill and stroke":n?"fill":"stroke"}.`}function Xw1(t){return`Position range does not support relative band size for ${t}.`}function W_(t,e){return`Dropping ${_t(t)} from channel "${e}" since it does not contain any data field, datum, value, or signal.`}const Kw1="Line marks cannot encode size with a non-groupby field. You may want to use trail marks instead.";function Oh(t,e,n){return`${t} dropped as it is incompatible with "${e}".`}function Qw1(t){return`${t}-encoding is dropped as ${t} is not a valid encoding channel.`}function Zw1(t){return`${t} encoding should be discrete (ordinal / nominal / binned).`}function Jw1(t){return`${t} encoding should be discrete (ordinal / nominal / binned) or use a discretizing scale (e.g. threshold).`}function tE1(t){return`Facet encoding dropped as ${t.join(" and ")} ${t.length>1?"are":"is"} also specified.`}function cb(t,e){return`Using discrete channel "${t}" to encode "${e}" field can be misleading as it does not encode ${e==="ordinal"?"order":"magnitude"}.`}function eE1(t){return`The ${t} for range marks cannot be an expression`}function nE1(t,e){return`Line mark is for continuous lines and thus cannot be used with ${t&&e?"x2 and y2":t?"x2":"y2"}. We will use the rule mark (line segments) instead.`}function iE1(t,e){return`Specified orient "${t}" overridden with "${e}".`}function oE1(t){return`Cannot use the scale property "${t}" with non-color channel.`}function uE1(t){return`Cannot use the relative band size with ${t} scale.`}function lE1(t){return`Using unaggregated domain with raw field has no effect (${_t(t)}).`}function aE1(t){return`Unaggregated domain not applicable for "${t}" since it produces values outside the origin domain of the source data.`}function rE1(t){return`Unaggregated domain is currently unsupported for log scale (${_t(t)}).`}function sE1(t){return`Cannot apply size to non-oriented mark "${t}".`}function cE1(t,e,n){return`Channel "${t}" does not work with "${e}" scale. We are using "${n}" scale instead.`}function dE1(t,e){return`FieldDef does not work with "${t}" scale. We are using "${e}" scale instead.`}function JX(t,e,n){return`${n}-scale's "${e}" is dropped as it does not work with ${t} scale.`}function tK(t){return`The step for "${t}" is dropped because the ${t==="width"?"x":"y"} is continuous.`}function fE1(t,e,n,i){return`Conflicting ${e.toString()} property "${t.toString()}" (${_t(n)} and ${_t(i)}). Using ${_t(n)}.`}function gE1(t,e,n,i){return`Conflicting ${e.toString()} property "${t.toString()}" (${_t(n)} and ${_t(i)}). Using the union of the two domains.`}function hE1(t){return`Setting the scale to be independent for "${t}" means we also have to set the guide (axis or legend) to be independent.`}function pE1(t){return`Dropping sort property ${_t(t)} as unioned domains only support boolean or op "count", "min", and "max".`}const xL="Domains that should be unioned has conflicting sort properties. Sort will be set to true.",mE1="Detected faceted independent scales that union domain of multiple fields from different data sources. We will use the first field. The result view size may be incorrect.",yE1="Detected faceted independent scales that union domain of the same fields from different source. We will assume that this is the same field from a different fork of the same data source. However, if this is not the case, the result view size may be incorrect.",vE1="Detected faceted independent scales that union domain of multiple fields from the same data source. We will use the first field. The result view size may be incorrect.";function bE1(t){return`Cannot stack "${t}" if there is already "${t}2".`}function xE1(t){return`Stack is applied to a non-linear scale (${t}).`}function _E1(t){return`Stacking is applied even though the aggregate function is non-summative ("${t}").`}function Ff(t,e){return`Invalid ${t}: ${_t(e)}.`}function wE1(t){return`Dropping day from datetime ${_t(t)} as day cannot be combined with other units.`}function EE1(t,e){return`${e?"extent ":""}${e&&t?"and ":""}${t?"center ":""}${e&&t?"are ":"is "}not needed when data are aggregated.`}function SE1(t,e,n){return`${t} is not usually used with ${e} for ${n}.`}function AE1(t,e){return`Continuous axis should not have customized aggregation function ${t}; ${e} already agregates the axis.`}function _L(t){return`1D error band does not support ${t}.`}function eK(t){return`Channel ${t} is required for "binned" bin.`}function CE1(t){return`Channel ${t} should not be used with "binned" bin.`}function kE1(t){return`Domain for ${t} is required for threshold scale.`}const nK=cE(sE);let l6=nK;function TE1(t){return l6=t,l6}function $E1(){return l6=nK,l6}function xk(...t){l6.error(...t)}function m1(...t){l6.warn(...t)}function ME1(...t){l6.debug(...t)}function M6(t){if(t&&E1(t)){for(const e of wk)if(h1(t,e))return!0}return!1}const iK=["january","february","march","april","may","june","july","august","september","october","november","december"],NE1=iK.map(t=>t.substr(0,3)),oK=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],RE1=oK.map(t=>t.substr(0,3));function DE1(t){if(Ah(t)&&(t=+t),ht(t))return t>4&&m1(Ff("quarter",t)),t-1;throw new Error(Ff("quarter",t))}function OE1(t){if(Ah(t)&&(t=+t),ht(t))return t-1;{const e=t.toLowerCase(),n=iK.indexOf(e);if(n!==-1)return n;const i=e.substr(0,3),o=NE1.indexOf(i);if(o!==-1)return o;throw new Error(Ff("month",t))}}function FE1(t){if(Ah(t)&&(t=+t),ht(t))return t%7;{const e=t.toLowerCase(),n=oK.indexOf(e);if(n!==-1)return n;const i=e.substr(0,3),o=RE1.indexOf(i);if(o!==-1)return o;throw new Error(Ff("day",t))}}function _k(t,e){const n=[];if(e&&t.day!==void 0&&g1(t).length>1&&(m1(wE1(t)),t=W1(t),delete t.day),t.year!==void 0?n.push(t.year):n.push(2012),t.month!==void 0){const i=e?OE1(t.month):t.month;n.push(i)}else if(t.quarter!==void 0){const i=e?DE1(t.quarter):t.quarter;n.push(ht(i)?i*3:`${i}*3`)}else n.push(0);if(t.date!==void 0)n.push(t.date);else if(t.day!==void 0){const i=e?FE1(t.day):t.day;n.push(ht(i)?i+1:`${i}+1`)}else n.push(1);for(const i of["hours","minutes","seconds","milliseconds"]){const o=t[i];n.push(typeof o>"u"?0:o)}return n}function a6(t){const n=_k(t,!0).join(", ");return t.utc?`utc(${n})`:`datetime(${n})`}function zE1(t){const n=_k(t,!1).join(", ");return t.utc?`utc(${n})`:`datetime(${n})`}function LE1(t){const e=_k(t,!0);return t.utc?+new Date(Date.UTC(...e)):+new Date(...e)}const uK={year:1,quarter:1,month:1,week:1,day:1,dayofyear:1,date:1,hours:1,minutes:1,seconds:1,milliseconds:1},wk=g1(uK);function jE1(t){return A1(uK,t)}function N6(t){return E1(t)?t.binned:lK(t)}function lK(t){return t?.startsWith("binned")}function Ek(t){return t.startsWith("utc")}function PE1(t){return t.substring(3)}const IE1={"year-month":"%b %Y ","year-month-date":"%b %d, %Y "};function Fh(t){return wk.filter(e=>rK(t,e))}function aK(t){const e=Fh(t);return e[e.length-1]}function rK(t,e){const n=t.indexOf(e);return!(n<0||n>0&&e==="seconds"&&t.charAt(n-1)==="i"||t.length>n+3&&e==="day"&&t.charAt(n+3)==="o"||n>0&&e==="year"&&t.charAt(n-1)==="f")}function BE1(t,e,{end:n}={end:!1}){const i=ak(e),o=Ek(t)?"utc":"";function u(s){return s==="quarter"?`(${o}quarter(${i})-1)`:`${o}${s}(${i})`}let l;const a={};for(const s of wk)rK(t,s)&&(a[s]=u(s),l=s);return n&&(a[l]+="+1"),zE1(a)}function sK(t){if(!t)return;const e=Fh(t);return`timeUnitSpecifier(${_t(e)}, ${_t(IE1)})`}function UE1(t,e,n){if(!t)return;const i=sK(t);return`${n||Ek(t)?"utc":"time"}Format(${e}, ${i})`}function Oe(t){if(!t)return;let e;return w1(t)?lK(t)?e={unit:t.substring(6),binned:!0}:e={unit:t}:E1(t)&&(e={...t,...t.unit?{unit:t.unit}:{}}),Ek(e.unit)&&(e.utc=!0,e.unit=PE1(e.unit)),e}function qE1(t){const{utc:e,...n}=Oe(t);return n.unit?(e?"utc":"")+g1(n).map(i=>qt(`${i==="unit"?"":`_${i}_`}${n[i]}`)).join(""):`${e?"utc":""}timeunit${g1(n).map(i=>qt(`_${i}_${n[i]}`)).join("")}`}function cK(t,e=n=>n){const n=Oe(t),i=aK(n.unit);if(i&&i!=="day"){const o={year:2001,month:1,date:1,hours:0,minutes:0,seconds:0,milliseconds:0},{step:u,part:l}=dK(i,n.step),a={...o,[l]:+o[l]+u};return`${e(a6(a))} - ${e(a6(o))}`}}const HE1={year:1,month:1,date:1,hours:1,minutes:1,seconds:1,milliseconds:1};function GE1(t){return A1(HE1,t)}function dK(t,e=1){if(GE1(t))return{part:t,step:e};switch(t){case"day":case"dayofyear":return{part:"date",step:e};case"quarter":return{part:"month",step:e*3};case"week":return{part:"date",step:e*7}}}function WE1(t){return h1(t,"param")}function Sk(t){return!!t?.field&&t.equal!==void 0}function Ak(t){return!!t?.field&&t.lt!==void 0}function Ck(t){return!!t?.field&&t.lte!==void 0}function kk(t){return!!t?.field&&t.gt!==void 0}function Tk(t){return!!t?.field&&t.gte!==void 0}function $k(t){if(t?.field){if(r1(t.range)&&t.range.length===2)return!0;if($1(t.range))return!0}return!1}function Mk(t){return!!t?.field&&(r1(t.oneOf)||r1(t.in))}function YE1(t){return!!t?.field&&t.valid!==void 0}function fK(t){return Mk(t)||Sk(t)||$k(t)||Ak(t)||kk(t)||Ck(t)||Tk(t)}function ii(t,e){return Gh(t,{timeUnit:e,wrapTime:!0})}function VE1(t,e){return t.map(n=>ii(n,e))}function gK(t,e=!0){const{field:n}=t,i=Oe(t.timeUnit),{unit:o,binned:u}=i||{},l=_1(t,{expr:"datum"}),a=o?`time(${u?l:BE1(o,n)})`:l;if(Sk(t))return`${a}===${ii(t.equal,o)}`;if(Ak(t)){const s=t.lt;return`${a}<${ii(s,o)}`}else if(kk(t)){const s=t.gt;return`${a}>${ii(s,o)}`}else if(Ck(t)){const s=t.lte;return`${a}<=${ii(s,o)}`}else if(Tk(t)){const s=t.gte;return`${a}>=${ii(s,o)}`}else{if(Mk(t))return`indexof([${VE1(t.oneOf,o).join(",")}], ${a}) !== -1`;if(YE1(t))return zh(a,t.valid);if($k(t)){const{range:s}=Ue(t),c=$1(s)?{signal:`${s.signal}[0]`}:s[0],f=$1(s)?{signal:`${s.signal}[1]`}:s[1];if(c!==null&&f!==null&&e)return`inrange(${a}, [${ii(c,o)}, ${ii(f,o)}])`;const g=[];return c!==null&&g.push(`${a} >= ${ii(c,o)}`),f!==null&&g.push(`${a} <= ${ii(f,o)}`),g.length>0?g.join(" && "):"true"}}throw new Error(`Invalid field predicate: ${_t(t)}`)}function zh(t,e=!0){return e?`isValid(${t}) && isFinite(+${t})`:`!isValid(${t}) || !isFinite(+${t})`}function XE1(t){return fK(t)&&t.timeUnit?{...t,timeUnit:Oe(t.timeUnit)}:t}const m7={quantitative:"quantitative",ordinal:"ordinal",temporal:"temporal",nominal:"nominal",geojson:"geojson"};function KE1(t){return t==="quantitative"||t==="temporal"}function Nk(t){return t==="ordinal"||t==="nominal"}const r6=m7.quantitative,Rk=m7.ordinal,Ol=m7.temporal,Dk=m7.nominal,pa=m7.geojson;function QE1(t){if(t)switch(t=t.toLowerCase(),t){case"q":case r6:return"quantitative";case"t":case Ol:return"temporal";case"o":case Rk:return"ordinal";case"n":case Dk:return"nominal";case pa:return"geojson"}}const qe={LINEAR:"linear",LOG:"log",POW:"pow",SQRT:"sqrt",TIME:"time",UTC:"utc",POINT:"point",BAND:"band"},Y_={linear:"numeric",log:"numeric",pow:"numeric",sqrt:"numeric",symlog:"numeric",identity:"numeric",sequential:"numeric",time:"time",utc:"time",ordinal:"ordinal","bin-ordinal":"bin-ordinal",point:"ordinal-position",band:"ordinal-position",quantile:"discretizing",quantize:"discretizing",threshold:"discretizing"};function ZE1(t,e){const n=Y_[t],i=Y_[e];return n===i||n==="ordinal-position"&&i==="time"||i==="ordinal-position"&&n==="time"}const JE1={linear:0,log:1,pow:1,sqrt:1,symlog:1,identity:1,sequential:1,time:0,utc:0,point:10,band:11,ordinal:0,"bin-ordinal":0,quantile:0,quantize:0,threshold:0};function wL(t){return JE1[t]}const hK=new Set(["linear","log","pow","sqrt","symlog"]),pK=new Set([...hK,"time","utc"]);function mK(t){return hK.has(t)}const yK=new Set(["quantile","quantize","threshold"]),tS1=new Set([...pK,...yK,"sequential","identity"]),eS1=new Set(["ordinal","bin-ordinal","point","band"]);function Fe(t){return eS1.has(t)}function z3(t){return tS1.has(t)}function fi(t){return pK.has(t)}function Fl(t){return yK.has(t)}const nS1={pointPadding:.5,barBandPaddingInner:.1,rectBandPaddingInner:0,tickBandPaddingInner:.25,bandWithNestedOffsetPaddingInner:.2,bandWithNestedOffsetPaddingOuter:.2,minBandSize:2,minFontSize:8,maxFontSize:40,minOpacity:.3,maxOpacity:.8,minSize:4,minStrokeWidth:1,maxStrokeWidth:4,quantileCount:4,quantizeCount:4,zero:!0,framesPerSecond:2,animationDuration:5};function iS1(t){return!w1(t)&&h1(t,"name")}function vK(t){return h1(t,"param")}function oS1(t){return h1(t,"unionWith")}function uS1(t){return E1(t)&&"field"in t}const lS1={type:1,domain:1,domainMax:1,domainMin:1,domainMid:1,domainRaw:1,align:1,range:1,rangeMax:1,rangeMin:1,scheme:1,bins:1,reverse:1,round:1,clamp:1,nice:1,base:1,exponent:1,constant:1,interpolate:1,zero:1,padding:1,paddingInner:1,paddingOuter:1},{type:aL1,domain:rL1,range:sL1,rangeMax:cL1,rangeMin:dL1,scheme:fL1,...aS1}=lS1,rS1=g1(aS1);function V_(t,e){switch(e){case"type":case"domain":case"reverse":case"range":return!0;case"scheme":case"interpolate":return!["point","band","identity"].includes(t);case"bins":return!["point","band","identity","ordinal"].includes(t);case"round":return fi(t)||t==="band"||t==="point";case"padding":case"rangeMin":case"rangeMax":return fi(t)||["point","band"].includes(t);case"paddingOuter":case"align":return["point","band"].includes(t);case"paddingInner":return t==="band";case"domainMax":case"domainMid":case"domainMin":case"domainRaw":case"clamp":return fi(t);case"nice":return fi(t)||t==="quantize"||t==="threshold";case"exponent":return t==="pow";case"base":return t==="log";case"constant":return t==="symlog";case"zero":return z3(t)&&!it(["log","time","utc","threshold","quantile"],t)}}function bK(t,e){switch(e){case"interpolate":case"scheme":case"domainMid":return el(t)?void 0:oE1(e);case"align":case"type":case"bins":case"domain":case"domainMax":case"domainMin":case"domainRaw":case"range":case"base":case"exponent":case"constant":case"nice":case"padding":case"paddingInner":case"paddingOuter":case"rangeMax":case"rangeMin":case"reverse":case"round":case"clamp":case"zero":return}}function sS1(t,e){return it([Rk,Dk],e)?t===void 0||Fe(t):e===Ol?it([qe.TIME,qe.UTC,void 0],t):e===r6?mK(t)||Fl(t)||t===void 0:!0}function cS1(t,e,n=!1){if(!Ui(t))return!1;switch(t){case Ht:case Le:case zu:case ha:case d3:case H3:return fi(e)||e==="band"?!0:e==="point"?!n:!1;case Lu:return it(["linear","band"],e);case c4:case Iu:case d4:case ju:case Pu:case C6:return fi(e)||Fl(e)||it(["band","point","ordinal"],e);case n2:case Pi:case Ii:return e!=="band";case Bu:case i2:return e==="ordinal"||Fl(e)}}function dS1(t){return E1(t)&&"value"in t}const Pn={arc:"arc",area:"area",bar:"bar",image:"image",line:"line",point:"point",rect:"rect",rule:"rule",text:"text",tick:"tick",trail:"trail",circle:"circle",square:"square",geoshape:"geoshape"},xK=Pn.arc,Lh=Pn.area,jh=Pn.bar,fS1=Pn.image,Ph=Pn.line,Ih=Pn.point,gS1=Pn.rect,zf=Pn.rule,_K=Pn.text,Ok=Pn.tick,hS1=Pn.trail,Fk=Pn.circle,zk=Pn.square,wK=Pn.geoshape;function qu(t){return["line","area","trail"].includes(t)}function y8(t){return["rect","bar","image","arc","tick"].includes(t)}const pS1=new Set(g1(Pn));function Ti(t){return h1(t,"type")}const mS1=["stroke","strokeWidth","strokeDash","strokeDashOffset","strokeOpacity","strokeJoin","strokeMiterLimit"],yS1=["fill","fillOpacity"],vS1=[...mS1,...yS1],bS1={color:1,filled:1,invalid:1,order:1,radius2:1,theta2:1,timeUnitBandSize:1,timeUnitBandPosition:1},EL=g1(bS1),db=["binSpacing","continuousBandSize","discreteBandSize","minBandSize"],xS1={area:["line","point"],bar:db,rect:db,line:["point"],tick:["bandSize","thickness",...db]},_S1={color:"#4c78a8",invalid:"break-paths-show-path-domains",timeUnitBandSize:1},wS1={mark:1,arc:1,area:1,bar:1,circle:1,image:1,line:1,point:1,rect:1,rule:1,square:1,text:1,tick:1,trail:1,geoshape:1},EK=g1(wS1);function s6(t){return h1(t,"band")}const ES1={horizontal:["cornerRadiusTopRight","cornerRadiusBottomRight"],vertical:["cornerRadiusTopLeft","cornerRadiusTopRight"]},SS1=5,Lk={binSpacing:0,continuousBandSize:SS1,minBandSize:.25,timeUnitBandPosition:.5},AS1={...Lk,binSpacing:1},CS1={...Lk,thickness:1};function kS1(t){return Ti(t)?t.type:t}function SK(t,{isPath:e}){return t===void 0||t==="break-paths-show-path-domains"?e?"break-paths-show-domains":"filter":t===null?"show":t}function jk({markDef:t,config:e,scaleChannel:n,scaleType:i,isCountAggregate:o}){if(!i||!z3(i)||o)return"always-valid";const u=SK(xt("invalid",t,e),{isPath:qu(t.type)});return e.scale?.invalid?.[n]!==void 0?"show":u}function TS1(t){return t==="break-paths-filter-domains"||t==="break-paths-show-domains"}function AK({scaleName:t,scale:e,mode:n}){const i=`domain('${t}')`;if(!e||!t)return;const o=`${i}[0]`,u=`peek(${i})`,l=e.domainHasZero();return l==="definitely"?{scale:t,value:0}:l==="maybe"?{signal:`scale('${t}', inrange(0, ${i}) ? 0 : ${n==="zeroOrMin"?o:u})`}:{signal:`scale('${t}', ${n==="zeroOrMin"?o:u})`}}function CK({scaleChannel:t,channelDef:e,scale:n,scaleName:i,markDef:o,config:u}){const l=n?.get("type"),a=j3(e),s=Rh(a?.aggregate),c=jk({scaleChannel:t,markDef:o,config:u,scaleType:l,isCountAggregate:s});if(a&&c==="show"){const f=u.scale.invalid?.[t]??"zero-or-min";return{test:zh(_1(a,{expr:"datum"}),!1),...$S1(f,n,i)}}}function $S1(t,e,n){if(dS1(t)){const{value:i}=t;return $1(i)?{signal:i.signal}:{value:i}}return AK({scale:e,scaleName:n,mode:"zeroOrMin"})}function Pk(t){const{channel:e,channelDef:n,markDef:i,scale:o,scaleName:u,config:l}=t,a=k6(e),s=Ik(t),c=CK({scaleChannel:a,channelDef:n,scale:o,scaleName:u,markDef:i,config:l});return c!==void 0?[c,s]:s}function MS1(t){const{datum:e}=t;return M6(e)?a6(e):`${_t(e)}`}function L0(t,e,n,i){const o={};if(e&&(o.scale=e),qi(t)){const{datum:u}=t;M6(u)?o.signal=a6(u):$1(u)?o.signal=u.signal:p7(u)?o.signal=u.expr:o.value=u}else o.field=_1(t,n);if(i){const{offset:u,band:l}=i;u&&(o.offset=u),l&&(o.band=l)}return o}function Lf({scaleName:t,fieldOrDatumDef:e,fieldOrDatumDef2:n,offset:i,startSuffix:o,endSuffix:u="end",bandPosition:l=.5}){const a=!$1(l)&&0<l&&l<1?"datum":void 0,s=_1(e,{expr:a,suffix:o}),c=n!==void 0?_1(n,{expr:a}):_1(e,{suffix:u,expr:a}),f={};if(l===0||l===1){f.scale=t;const g=l===0?s:c;f.field=g}else{const g=$1(l)?`(1-${l.signal}) * ${s} + ${l.signal} * ${c}`:`${1-l} * ${s} + ${l} * ${c}`;f.signal=`scale("${t}", ${g})`}return i&&(f.offset=i),f}function NS1({scaleName:t,fieldDef:e}){const n=_1(e,{expr:"datum"}),i=_1(e,{expr:"datum",suffix:"end"});return`abs(scale("${t}", ${i}) - scale("${t}", ${n}))`}function Ik({channel:t,channelDef:e,channel2Def:n,markDef:i,config:o,scaleName:u,scale:l,stack:a,offset:s,defaultRef:c,bandPosition:f}){if(e){if(V1(e)){const g=l?.get("type");if(Ln(e)){f??=Cu({fieldDef:e,fieldDef2:n,markDef:i,config:o});const{bin:p,timeUnit:m,type:v}=e;if(jt(p)||f&&m&&v===Ol)return a?.impute?L0(e,u,{binSuffix:"mid"},{offset:s}):f&&!Fe(g)?Lf({scaleName:u,fieldOrDatumDef:e,bandPosition:f,offset:s}):L0(e,u,_7(e,t)?{binSuffix:"range"}:{},{offset:s});if(Be(p)){if(p1(n))return Lf({scaleName:u,fieldOrDatumDef:e,fieldOrDatumDef2:n,bandPosition:f,offset:s});m1(eK(t===Ht?q3:ji))}}return L0(e,u,Fe(g)?{binSuffix:"range"}:{},{offset:s,band:g==="band"?f??e.bandPosition??.5:void 0})}else if(L3(e)){const g=e.value,p=s?{offset:s}:{};return{...jr(t,g),...p}}}return Q1(c)&&(c=c()),c&&{...c,...s?{offset:s}:{}}}function jr(t,e){return it(["x","x2"],t)&&e==="width"?{field:{group:"width"}}:it(["y","y2"],t)&&e==="height"?{field:{group:"height"}}:It(e)}function c6(t){return t&&t!=="number"&&t!=="time"}function kK(t,e,n){return`${t}(${e}${n?`, ${_t(n)}`:""})`}function Bk({fieldOrDatumDef:t,format:e,formatType:n,expr:i,normalizeStack:o,config:u}){if(c6(n))return $3({fieldOrDatumDef:t,format:e,formatType:n,expr:i,config:u});const l=TK(t,i,o),a=zl(t);if(e===void 0&&n===void 0&&u.customFormatTypes){if(a==="quantitative"){if(o&&u.normalizedNumberFormatType)return $3({fieldOrDatumDef:t,format:u.normalizedNumberFormat,formatType:u.normalizedNumberFormatType,expr:i,config:u});if(u.numberFormatType)return $3({fieldOrDatumDef:t,format:u.numberFormat,formatType:u.numberFormatType,expr:i,config:u})}if(a==="temporal"&&u.timeFormatType&&p1(t)&&t.timeUnit===void 0)return $3({fieldOrDatumDef:t,format:u.timeFormat,formatType:u.timeFormatType,expr:i,config:u})}function s(c){return p1(c)?Oe(c.timeUnit)||{}:{unit:void 0,utc:void 0}}if(jl(t)){const{unit:c,utc:f}=s(t),g=DS1({field:l,timeUnit:c,format:e,formatType:u.timeFormatType,rawTimeFormat:u.timeFormat,isUTCScale:f||R6(t)&&t.scale?.type===qe.UTC});return g?{signal:g}:void 0}if(e=X_({type:a,specifiedFormat:e,config:u,normalizeStack:o}),p1(t)&&jt(t.bin)){const c=_1(t,{expr:i,binSuffix:"end"});return{signal:y7(l,c,e,n,u)}}else return e||zl(t)==="quantitative"?{signal:`${NK(l,e)}`}:{signal:`isValid(${l}) ? ${l} : ""+${l}`}}function TK(t,e,n){return p1(t)?n?`${_1(t,{expr:e,suffix:"end"})}-${_1(t,{expr:e,suffix:"start"})}`:_1(t,{expr:e}):MS1(t)}function $3({fieldOrDatumDef:t,format:e,formatType:n,expr:i,normalizeStack:o,config:u,field:l}){if(l??=TK(t,i,o),l!=="datum.value"&&p1(t)&&jt(t.bin)){const a=_1(t,{expr:i,binSuffix:"end"});return{signal:y7(l,a,e,n,u)}}return{signal:kK(n,l,e)}}function $K(t,e,n,i,o,u){if(!(w1(i)&&c6(i))&&!(n===void 0&&i===void 0&&o.customFormatTypes&&zl(t)==="quantitative"&&(o.normalizedNumberFormatType&&Ll(t)&&t.stack==="normalize"||o.numberFormatType))){if(Ll(t)&&t.stack==="normalize"&&o.normalizedNumberFormat)return X_({type:"quantitative",config:o,normalizeStack:!0});if(jl(t)){const l=p1(t)?Oe(t.timeUnit)?.unit:void 0;return l===void 0&&o.customFormatTypes&&o.timeFormatType?void 0:RS1({specifiedFormat:n,timeUnit:l,config:o,omitTimeFormatConfig:u})}return X_({type:e,specifiedFormat:n,config:o})}}function MK(t,e,n){if(t&&($1(t)||t==="number"||t==="time"))return t;if(jl(e)&&n!=="time"&&n!=="utc")return p1(e)&&Oe(e?.timeUnit)?.utc?"utc":"time"}function X_({type:t,specifiedFormat:e,config:n,normalizeStack:i}){if(w1(e))return e;if(t===r6)return i?n.normalizedNumberFormat:n.numberFormat}function RS1({specifiedFormat:t,timeUnit:e,config:n,omitTimeFormatConfig:i}){return t||(e?{signal:sK(e)}:i?void 0:n.timeFormat)}function NK(t,e){return`format(${t}, "${e||""}")`}function SL(t,e,n,i){return c6(n)?kK(n,t,e):NK(t,(w1(e)?e:void 0)??i.numberFormat)}function y7(t,e,n,i,o){if(n===void 0&&i===void 0&&o.customFormatTypes&&o.numberFormatType)return y7(t,e,o.numberFormat,o.numberFormatType,o);const u=SL(t,n,i,o),l=SL(e,n,i,o);return`${zh(t,!1)} ? "null" : ${u} + "${xw1}" + ${l}`}function DS1({field:t,timeUnit:e,format:n,formatType:i,rawTimeFormat:o,isUTCScale:u}){return!e||n?!e&&i?`${i}(${t}, ${_t(n)})`:(n=w1(n)?n:o,`${u?"utc":"time"}Format(${t}, ${_t(n)})`):UE1(e,t,u)}const Bh="min",OS1={x:1,y:1,color:1,fill:1,stroke:1,strokeWidth:1,size:1,shape:1,fillOpacity:1,strokeOpacity:1,opacity:1,text:1};function AL(t){return A1(OS1,t)}function FS1(t){return h1(t,"encoding")}function Ho(t){return t&&(t.op==="count"||h1(t,"field"))}function RK(t){return t&&r1(t)}function v7(t){return h1(t,"row")||h1(t,"column")}function Uk(t){return h1(t,"header")}function Uh(t){return h1(t,"facet")}function zS1(t){return h1(t,"param")}function LS1(t){return!w1(t)&&h1(t,"repeat")}function CL(t){const{field:e,timeUnit:n,bin:i,aggregate:o}=t;return{...n?{timeUnit:n}:{},...i?{bin:i}:{},...o?{aggregate:o}:{},field:e}}function qk(t){return h1(t,"sort")}function Cu({fieldDef:t,fieldDef2:e,markDef:n,config:i}){if(V1(t)&&t.bandPosition!==void 0)return t.bandPosition;if(p1(t)){const{timeUnit:o,bin:u}=t;if(o&&!e)return ki("timeUnitBandPosition",n,i);if(jt(u))return .5}}function DK({channel:t,fieldDef:e,fieldDef2:n,markDef:i,config:o,scaleType:u,useVlSizeChannel:l}){const a=o2(t),s=xt(l?"size":a,i,o,{vgChannel:a});if(s!==void 0)return s;if(p1(e)){const{timeUnit:c,bin:f}=e;if(c&&!n)return{band:ki("timeUnitBandSize",i,o)};if(jt(f)&&!Fe(u))return{band:1}}if(y8(i.type))return u?Fe(u)?o[i.type]?.discreteBandSize||{band:1}:o[i.type]?.continuousBandSize:o[i.type]?.discreteBandSize}function OK(t,e,n,i){return jt(t.bin)||t.timeUnit&&Ln(t)&&t.type==="temporal"?Cu({fieldDef:t,fieldDef2:e,markDef:n,config:i})!==void 0:!1}function FK(t){return h1(t,"sort")&&!h1(t,"field")}function b7(t){return h1(t,"condition")}function qh(t){const e=t?.condition;return!!e&&!r1(e)&&p1(e)}function x7(t){const e=t?.condition;return!!e&&!r1(e)&&V1(e)}function jS1(t){const e=t?.condition;return!!e&&(r1(e)||L3(e))}function p1(t){return h1(t,"field")||t?.aggregate==="count"}function zl(t){return t?.type}function qi(t){return h1(t,"datum")}function lu(t){return Ln(t)&&!Pf(t)||jf(t)}function kL(t){return Ln(t)&&t.type==="quantitative"&&!t.bin||jf(t)}function jf(t){return qi(t)&&ht(t.datum)}function V1(t){return p1(t)||qi(t)}function Ln(t){return t&&(h1(t,"field")||t.aggregate==="count")&&h1(t,"type")}function L3(t){return h1(t,"value")}function R6(t){return h1(t,"scale")||h1(t,"sort")}function Ll(t){return h1(t,"axis")||h1(t,"stack")||h1(t,"impute")}function zK(t){return h1(t,"legend")}function LK(t){return h1(t,"format")||h1(t,"formatType")}function PS1(t){return S2(t,["legend","axis","header","scale"])}function IS1(t){return h1(t,"op")}function _1(t,e={}){let n=t.field;const i=e.prefix;let o=e.suffix,u="";if(US1(t))n=kX("count");else{let l;if(!e.nofn)if(IS1(t))l=t.op;else{const{bin:a,aggregate:s,timeUnit:c}=t;jt(a)?(l=BX(a),o=(e.binSuffix??"")+(e.suffix??"")):s?Uu(s)?(u=`["${n}"]`,n=`argmax_${s.argmax}`):Jo(s)?(u=`["${n}"]`,n=`argmin_${s.argmin}`):l=String(s):c&&!N6(c)&&(l=qE1(c),o=(!["range","mid"].includes(e.binSuffix)&&e.binSuffix||"")+(e.suffix??""))}l&&(n=n?`${l}_${n}`:l)}return o&&(n=`${n}_${o}`),i&&(n=`${i}_${n}`),e.forAs?ga(n):e.expr?EX(n,e.expr)+u:r3(n)+u}function Pf(t){switch(t.type){case"nominal":case"ordinal":case"geojson":return!0;case"quantitative":return p1(t)&&!!t.bin;case"temporal":return!1}throw new Error(QX(t.type))}function BS1(t){return R6(t)&&Fl(t.scale?.type)}function US1(t){return t.aggregate==="count"}function qS1(t,e){const{field:n,bin:i,timeUnit:o,aggregate:u}=t;if(u==="count")return e.countTitle;if(jt(i))return`${n} (binned)`;if(o&&!N6(o)){const l=Oe(o)?.unit;if(l)return`${n} (${Fh(l).join("-")})`}else if(u)return Uu(u)?`${n} for max ${u.argmax}`:Jo(u)?`${n} for min ${u.argmin}`:`${d7(u)} of ${n}`;return n}function HS1(t){const{aggregate:e,bin:n,timeUnit:i,field:o}=t;if(Uu(e))return`${o} for argmax(${e.argmax})`;if(Jo(e))return`${o} for argmin(${e.argmin})`;const u=i&&!N6(i)?Oe(i):void 0,l=e||u?.unit||u?.maxbins&&"timeunit"||jt(n)&&"bin";return l?`${l.toUpperCase()}(${o})`:o}const jK=(t,e)=>{switch(e.fieldTitle){case"plain":return t.field;case"functional":return HS1(t);default:return qS1(t,e)}};let PK=jK;function IK(t){PK=t}function GS1(){IK(jK)}function nl(t,e,{allowDisabling:n,includeDefault:i=!0}){const o=Hk(t)?.title;if(!p1(t))return o??t.title;const u=t,l=i?Gk(u,e):void 0;return n?le(o,u.title,l):o??u.title??l}function Hk(t){if(Ll(t)&&t.axis)return t.axis;if(zK(t)&&t.legend)return t.legend;if(Uk(t)&&t.header)return t.header}function Gk(t,e){return PK(t,e)}function If(t){if(LK(t)){const{format:e,formatType:n}=t;return{format:e,formatType:n}}else{const e=Hk(t)??{},{format:n,formatType:i}=e;return{format:n,formatType:i}}}function WS1(t,e){switch(e){case"latitude":case"longitude":return"quantitative";case"row":case"column":case"facet":case"shape":case"strokeDash":return"nominal";case"order":return"ordinal"}if(qk(t)&&r1(t.sort))return"ordinal";const{aggregate:n,bin:i,timeUnit:o}=t;if(o)return"temporal";if(i||n&&!Uu(n)&&!Jo(n))return"quantitative";if(R6(t)&&t.scale?.type)switch(Y_[t.scale.type]){case"numeric":case"discretizing":return"quantitative";case"time":return"temporal"}return"nominal"}function j3(t){if(p1(t))return t;if(qh(t))return t.condition}function be(t){if(V1(t))return t;if(x7(t))return t.condition}function BK(t,e,n,i={}){if(w1(t)||ht(t)||Mu(t)){const o=w1(t)?"string":ht(t)?"number":"boolean";return m1(Ww1(e,o,t)),{value:t}}return V1(t)?Bf(t,e,n,i):x7(t)?{...t,condition:Bf(t.condition,e,n,i)}:t}function Bf(t,e,n,i){if(LK(t)){const{format:o,formatType:u,...l}=t;if(c6(u)&&!n.customFormatTypes)return m1(bL(e)),Bf(l,e,n,i)}else{const o=Ll(t)?"axis":zK(t)?"legend":Uk(t)?"header":null;if(o&&t[o]){const{format:u,formatType:l,...a}=t[o];if(c6(l)&&!n.customFormatTypes)return m1(bL(e)),Bf({...t,[o]:a},e,n,i)}}return p1(t)?Wk(t,e,i):YS1(t)}function YS1(t){let e=t.type;if(e)return t;const{datum:n}=t;return e=ht(n)?"quantitative":w1(n)?"nominal":M6(n)?"temporal":void 0,{...t,type:e}}function Wk(t,e,{compositeMark:n=!1}={}){const{aggregate:i,timeUnit:o,bin:u,field:l}=t,a={...t};if(!n&&i&&!mk(i)&&!Uu(i)&&!Jo(i)&&(m1(Vw1(i)),delete a.aggregate),o&&(a.timeUnit=Oe(o)),l&&(a.field=`${l}`),jt(u)&&(a.bin=Hh(u,e)),Be(u)&&!ae(e)&&m1(CE1(e)),Ln(a)){const{type:s}=a,c=QE1(s);s!==c&&(a.type=c),s!=="quantitative"&&Rh(i)&&(m1(Yw1(s,i)),a.type="quantitative")}else if(!FX(e)){const s=WS1(a,e);a.type=s}if(Ln(a)){const{compatible:s,warning:c}=VS1(a,e)||{};s===!1&&m1(c)}if(qk(a)&&w1(a.sort)){const{sort:s}=a;if(AL(s))return{...a,sort:{encoding:s}};const c=s.substring(1);if(s.charAt(0)==="-"&&AL(c))return{...a,sort:{encoding:c,order:"descending"}}}if(Uk(a)){const{header:s}=a;if(s){const{orient:c,...f}=s;if(c)return{...a,header:{...f,labelOrient:s.labelOrient||c,titleOrient:s.titleOrient||c}}}}return a}function Hh(t,e){return Mu(t)?{maxbins:cL(e)}:t==="binned"?{binned:!0}:!t.maxbins&&!t.step?{...t,maxbins:cL(e)}:t}const D5={compatible:!0};function VS1(t,e){const n=t.type;if(n==="geojson"&&e!=="shape")return{compatible:!1,warning:`Channel ${e} should not be used with a geojson data.`};switch(e){case Uo:case qo:case Ch:return Pf(t)?D5:{compatible:!1,warning:Zw1(e)};case Ht:case Le:case zu:case ha:case n2:case Pi:case Ii:case f7:case g7:case kh:case u6:case Th:case $h:case C6:case d3:case H3:case Mh:return D5;case W3:case s3:case G3:case Y3:return n!==r6?{compatible:!1,warning:`Channel ${e} should be used with a quantitative field only, not ${t.type} field.`}:D5;case d4:case ju:case Pu:case Iu:case c4:case s4:case r4:case q3:case ji:case Lu:return n==="nominal"&&!t.sort?{compatible:!1,warning:`Channel ${e} should not be used with an unsorted discrete field.`}:D5;case i2:case Bu:return!Pf(t)&&!BS1(t)?{compatible:!1,warning:Jw1(e)}:D5;case Dl:return t.type==="nominal"&&!("sort"in t)?{compatible:!1,warning:"Channel order is inappropriate for nominal field, which has no inherent order."}:D5}}function jl(t){const{formatType:e}=If(t);return e==="time"||!e&&XS1(t)}function XS1(t){return t&&(t.type==="temporal"||p1(t)&&!!t.timeUnit)}function Gh(t,{timeUnit:e,type:n,wrapTime:i,undefinedIfExprNotRequired:o}){const u=e&&Oe(e)?.unit;let l=u||n==="temporal",a;return p7(t)?a=t.expr:$1(t)?a=t.signal:M6(t)?(l=!0,a=a6(t)):(w1(t)||ht(t))&&l&&(a=`datetime(${_t(t)})`,jE1(u)&&(ht(t)&&t<1e4||w1(t)&&isNaN(Date.parse(t)))&&(a=a6({[u]:t}))),a?i&&l?`time(${a})`:a:o?void 0:_t(t)}function UK(t,e){const{type:n}=t;return e.map(i=>{const o=p1(t)&&!N6(t.timeUnit)?t.timeUnit:void 0,u=Gh(i,{timeUnit:o,type:n,undefinedIfExprNotRequired:!0});return u!==void 0?{signal:u}:i})}function _7(t,e){return jt(t.bin)?Ui(e)&&["ordinal","nominal"].includes(t.type):(console.warn("Only call this method for binned field defs."),!1)}const TL={labelAlign:{part:"labels",vgProp:"align"},labelBaseline:{part:"labels",vgProp:"baseline"},labelColor:{part:"labels",vgProp:"fill"},labelFont:{part:"labels",vgProp:"font"},labelFontSize:{part:"labels",vgProp:"fontSize"},labelFontStyle:{part:"labels",vgProp:"fontStyle"},labelFontWeight:{part:"labels",vgProp:"fontWeight"},labelOpacity:{part:"labels",vgProp:"opacity"},labelOffset:null,labelPadding:null,gridColor:{part:"grid",vgProp:"stroke"},gridDash:{part:"grid",vgProp:"strokeDash"},gridDashOffset:{part:"grid",vgProp:"strokeDashOffset"},gridOpacity:{part:"grid",vgProp:"opacity"},gridWidth:{part:"grid",vgProp:"strokeWidth"},tickColor:{part:"ticks",vgProp:"stroke"},tickDash:{part:"ticks",vgProp:"strokeDash"},tickDashOffset:{part:"ticks",vgProp:"strokeDashOffset"},tickOpacity:{part:"ticks",vgProp:"opacity"},tickSize:null,tickWidth:{part:"ticks",vgProp:"strokeWidth"}};function w7(t){return t?.condition}const qK=["domain","grid","labels","ticks","title"],KS1={grid:"grid",gridCap:"grid",gridColor:"grid",gridDash:"grid",gridDashOffset:"grid",gridOpacity:"grid",gridScale:"grid",gridWidth:"grid",orient:"main",bandPosition:"both",aria:"main",description:"main",domain:"main",domainCap:"main",domainColor:"main",domainDash:"main",domainDashOffset:"main",domainOpacity:"main",domainWidth:"main",format:"main",formatType:"main",labelAlign:"main",labelAngle:"main",labelBaseline:"main",labelBound:"main",labelColor:"main",labelFlush:"main",labelFlushOffset:"main",labelFont:"main",labelFontSize:"main",labelFontStyle:"main",labelFontWeight:"main",labelLimit:"main",labelLineHeight:"main",labelOffset:"main",labelOpacity:"main",labelOverlap:"main",labelPadding:"main",labels:"main",labelSeparation:"main",maxExtent:"main",minExtent:"main",offset:"both",position:"main",tickCap:"main",tickColor:"main",tickDash:"main",tickDashOffset:"main",tickMinStep:"both",tickOffset:"both",tickOpacity:"main",tickRound:"both",ticks:"main",tickSize:"main",tickWidth:"both",title:"main",titleAlign:"main",titleAnchor:"main",titleAngle:"main",titleBaseline:"main",titleColor:"main",titleFont:"main",titleFontSize:"main",titleFontStyle:"main",titleFontWeight:"main",titleLimit:"main",titleLineHeight:"main",titleOpacity:"main",titlePadding:"main",titleX:"main",titleY:"main",encode:"both",scale:"both",tickBand:"both",tickCount:"both",tickExtra:"both",translate:"both",values:"both",zindex:"both"},HK={orient:1,aria:1,bandPosition:1,description:1,domain:1,domainCap:1,domainColor:1,domainDash:1,domainDashOffset:1,domainOpacity:1,domainWidth:1,format:1,formatType:1,grid:1,gridCap:1,gridColor:1,gridDash:1,gridDashOffset:1,gridOpacity:1,gridWidth:1,labelAlign:1,labelAngle:1,labelBaseline:1,labelBound:1,labelColor:1,labelFlush:1,labelFlushOffset:1,labelFont:1,labelFontSize:1,labelFontStyle:1,labelFontWeight:1,labelLimit:1,labelLineHeight:1,labelOffset:1,labelOpacity:1,labelOverlap:1,labelPadding:1,labels:1,labelSeparation:1,maxExtent:1,minExtent:1,offset:1,position:1,tickBand:1,tickCap:1,tickColor:1,tickCount:1,tickDash:1,tickDashOffset:1,tickExtra:1,tickMinStep:1,tickOffset:1,tickOpacity:1,tickRound:1,ticks:1,tickSize:1,tickWidth:1,title:1,titleAlign:1,titleAnchor:1,titleAngle:1,titleBaseline:1,titleColor:1,titleFont:1,titleFontSize:1,titleFontStyle:1,titleFontWeight:1,titleLimit:1,titleLineHeight:1,titleOpacity:1,titlePadding:1,titleX:1,titleY:1,translate:1,values:1,zindex:1},QS1={...HK,style:1,labelExpr:1,encoding:1};function $L(t){return A1(QS1,t)}const ZS1={axis:1,axisBand:1,axisBottom:1,axisDiscrete:1,axisLeft:1,axisPoint:1,axisQuantitative:1,axisRight:1,axisTemporal:1,axisTop:1,axisX:1,axisXBand:1,axisXDiscrete:1,axisXPoint:1,axisXQuantitative:1,axisXTemporal:1,axisY:1,axisYBand:1,axisYDiscrete:1,axisYPoint:1,axisYQuantitative:1,axisYTemporal:1},GK=g1(ZS1);function g4(t){return h1(t,"mark")}class Wh{name;run;constructor(e,n){this.name=e,this.run=n}hasMatchingType(e){return g4(e)?kS1(e.mark)===this.name:!1}}function j0(t,e){const n=t?.[e];return n?r1(n)?Nl(n,i=>!!i.field):p1(n)||qh(n):!1}function WK(t,e){const n=t?.[e];return n?r1(n)?Nl(n,i=>!!i.field):p1(n)||qi(n)||x7(n):!1}function YK(t,e){if(ae(e)){const n=t[e];if((p1(n)||qi(n))&&(Nk(n.type)||p1(n)&&n.timeUnit)){const i=dk(e);return WK(t,i)}}return!1}function VK(t){return Nl(Y_1,e=>{if(j0(t,e)){const n=t[e];if(r1(n))return Nl(n,i=>!!i.aggregate);{const i=j3(n);return i&&!!i.aggregate}}return!1})}function XK(t,e){const n=[],i=[],o=[],u=[],l={};return Yk(t,(a,s)=>{if(p1(a)){const{field:c,aggregate:f,bin:g,timeUnit:p,...m}=a;if(f||p||g){const b=Hk(a)?.title;let x=_1(a,{forAs:!0});const w={...b?[]:{title:nl(a,e,{allowDisabling:!0})},...m,field:x};if(f){let S;if(Uu(f)?(S="argmax",x=_1({op:"argmax",field:f.argmax},{forAs:!0}),w.field=`${x}.${c}`):Jo(f)?(S="argmin",x=_1({op:"argmin",field:f.argmin},{forAs:!0}),w.field=`${x}.${c}`):f!=="boxplot"&&f!=="errorbar"&&f!=="errorband"&&(S=f),S){const A={op:S,as:x};c&&(A.field=c),u.push(A)}}else if(n.push(x),Ln(a)&&jt(g)){if(i.push({bin:g,field:c,as:x}),n.push(_1(a,{binSuffix:"end"})),_7(a,s)&&n.push(_1(a,{binSuffix:"range"})),ae(s)){const S={field:`${x}_end`};l[`${s}2`]=S}w.bin="binned",FX(s)||(w.type=r6)}else if(p&&!N6(p)){o.push({timeUnit:p,field:c,as:x});const S=Ln(a)&&a.type!==Ol&&"time";S&&(s===f7||s===u6?w.formatType=S:ow1(s)?w.legend={formatType:S,...w.legend}:ae(s)&&(w.axis={formatType:S,...w.axis}))}l[s]=w}else n.push(c),l[s]=t[s]}else l[s]=t[s]}),{bins:i,timeUnits:o,aggregate:u,groupby:n,encoding:l}}function JS1(t,e,n){const i=lw1(e,n);if(i){if(i==="binned"){const o=t[e===q3?Ht:Le];return!!(p1(o)&&p1(t[e])&&Be(o.bin))}}else return!1;return!0}function tA1(t,e,n,i){const o={};for(const u of g1(t))OX(u)||m1(Qw1(u));for(let u of J_1){if(!t[u])continue;const l=t[u];if(h7(u)){const a=Z_1(u),s=o[a];if(p1(s)&&KE1(s.type)&&p1(l)&&!s.timeUnit){m1(Gw1(a));continue}}if(u==="angle"&&e==="arc"&&!t.theta&&(m1(Hw1),u=d3),!JS1(t,u,e)){m1(Oh(u,e));continue}if(u===c4&&e==="line"&&j3(t[u])?.aggregate){m1(Kw1);continue}if(u===n2&&(n?"fill"in t:"stroke"in t)){m1(ZX("encoding",{fill:"fill"in t,stroke:"stroke"in t}));continue}if(u===g7||u===Dl&&!r1(l)&&!L3(l)||u===u6&&r1(l)){if(l){if(u===Dl){const a=t[u];if(FK(a)){o[u]=a;continue}}o[u]=S1(l).reduce((a,s)=>(p1(s)?a.push(Wk(s,u)):m1(W_(s,u)),a),[])}}else{if(u===u6&&l===null)o[u]=null;else if(!p1(l)&&!qi(l)&&!L3(l)&&!b7(l)&&!$1(l)){m1(W_(l,u));continue}o[u]=BK(l,u,i)}}return o}function Yh(t,e){const n={};for(const i of g1(t)){const o=BK(t[i],i,e,{compositeMark:!0});n[i]=o}return n}function eA1(t){const e=[];for(const n of g1(t))if(j0(t,n)){const i=t[n],o=S1(i);for(const u of o)p1(u)?e.push(u):qh(u)&&e.push(u.condition)}return e}function Yk(t,e,n){if(t)for(const i of g1(t)){const o=t[i];if(r1(o))for(const u of o)e.call(n,u,i);else e.call(n,o,i)}}function nA1(t,e,n,i){return t?g1(t).reduce((o,u)=>{const l=t[u];return r1(l)?l.reduce((a,s)=>e.call(i,a,s,u),o):e.call(i,o,l,u)},n):n}function KK(t,e){return g1(e).reduce((n,i)=>{switch(i){case Ht:case Le:case Th:case Mh:case $h:case q3:case ji:case zu:case ha:case d3:case s4:case H3:case r4:case Lu:case G3:case W3:case Y3:case s3:case f7:case i2:case C6:case u6:return n;case Dl:if(t==="line"||t==="trail")return n;case g7:case kh:{const o=e[i];if(r1(o)||p1(o))for(const u of S1(o))u.aggregate||n.push(_1(u,{}));return n}case c4:if(t==="trail")return n;case n2:case Pi:case Ii:case d4:case ju:case Pu:case Bu:case Iu:{const o=j3(e[i]);return o&&!o.aggregate&&n.push(_1(o,{})),n}}},[])}function iA1(t){const{tooltip:e,...n}=t;if(!e)return{filteredEncoding:n};let i,o;if(r1(e)){for(const u of e)u.aggregate?(i||(i=[]),i.push(u)):(o||(o=[]),o.push(u));i&&(n.tooltip=i)}else e.aggregate?n.tooltip=e:o=e;return r1(o)&&o.length===1&&(o=o[0]),{customTooltipWithoutAggregatedField:o,filteredEncoding:n}}function K_(t,e,n,i=!0){if("tooltip"in n)return{tooltip:n.tooltip};const o=t.map(({fieldPrefix:l,titlePrefix:a})=>{const s=i?` of ${Vk(e)}`:"";return{field:l+e.field,type:e.type,title:$1(a)?{signal:`${a}"${escape(s)}"`}:a+s}}),u=eA1(n).map(PS1);return{tooltip:[...o,...di(u,at)]}}function Vk(t){const{title:e,field:n}=t;return le(e,n)}function Xk(t,e,n,i,o){const{scale:u,axis:l}=n;return({partName:a,mark:s,positionPrefix:c,endPositionPrefix:f=void 0,extraEncoding:g={}})=>{const p=Vk(n);return QK(t,a,o,{mark:s,encoding:{[e]:{field:`${c}_${n.field}`,type:n.type,...p!==void 0?{title:p}:{},...u!==void 0?{scale:u}:{},...l!==void 0?{axis:l}:{}},...w1(f)?{[`${e}2`]:{field:`${f}_${n.field}`}}:{},...i,...g}})}}function QK(t,e,n,i){const{clip:o,color:u,opacity:l}=t,a=t.type;return t[e]||t[e]===void 0&&n[e]?[{...i,mark:{...n[e],...o?{clip:o}:{},...u?{color:u}:{},...l?{opacity:l}:{},...Ti(i.mark)?i.mark:{type:i.mark},style:`${a}-${String(e)}`,...Mu(t[e])?{}:t[e]}}]:[]}function ZK(t,e,n){const{encoding:i}=t,o=e==="vertical"?"y":"x",u=i[o],l=i[`${o}2`],a=i[`${o}Error`],s=i[`${o}Error2`];return{continuousAxisChannelDef:xc(u,n),continuousAxisChannelDef2:xc(l,n),continuousAxisChannelDefError:xc(a,n),continuousAxisChannelDefError2:xc(s,n),continuousAxis:o}}function xc(t,e){if(t?.aggregate){const{aggregate:n,...i}=t;return n!==e&&m1(AE1(n,e)),i}else return t}function JK(t,e){const{mark:n,encoding:i}=t,{x:o,y:u}=i;if(Ti(n)&&n.orient)return n.orient;if(lu(o)){if(lu(u)){const l=p1(o)&&o.aggregate,a=p1(u)&&u.aggregate;if(!l&&a===e)return"vertical";if(!a&&l===e)return"horizontal";if(l===e&&a===e)throw new Error("Both x and y cannot have aggregate");return jl(u)&&!jl(o)?"horizontal":"vertical"}return"horizontal"}else{if(lu(u))return"vertical";throw new Error(`Need a valid continuous axis for ${e}s`)}}const Uf="boxplot",oA1=["box","median","outliers","rule","ticks"],uA1=new Wh(Uf,eQ);function tQ(t){return ht(t)?"tukey":t}function eQ(t,{config:e}){t={...t,encoding:Yh(t.encoding,e)};const{mark:n,encoding:i,params:o,projection:u,...l}=t,a=Ti(n)?n:{type:n};o&&m1(KX("boxplot"));const s=a.extent??e.boxplot.extent,c=xt("size",a,e),f=a.invalid,g=tQ(s),{bins:p,timeUnits:m,transform:v,continuousAxisChannelDef:b,continuousAxis:x,groupby:w,aggregate:S,encodingWithoutContinuousAxis:A,ticksOrient:C,boxOrient:k,customTooltipWithoutAggregatedField:M}=lA1(t,s,e),T=ga(b.field),{color:D,size:I,...U}=A,B=C1=>Xk(a,x,b,C1,e.boxplot),V=B(U),W=B(A),O=(E1(e.boxplot.box)?e.boxplot.box.color:e.mark.color)||"#4c78a8",j=B({...U,...I?{size:I}:{},color:{condition:{test:`${St(`lower_box_${b.field}`)} >= ${St(`upper_box_${b.field}`)}`,...D||{value:O}}}}),R=K_([{fieldPrefix:g==="min-max"?"upper_whisker_":"max_",titlePrefix:"Max"},{fieldPrefix:"upper_box_",titlePrefix:"Q3"},{fieldPrefix:"mid_box_",titlePrefix:"Median"},{fieldPrefix:"lower_box_",titlePrefix:"Q1"},{fieldPrefix:g==="min-max"?"lower_whisker_":"min_",titlePrefix:"Min"}],b,A),P={type:"tick",color:"black",opacity:1,orient:C,invalid:f,aria:!1},q=g==="min-max"?R:K_([{fieldPrefix:"upper_whisker_",titlePrefix:"Upper Whisker"},{fieldPrefix:"lower_whisker_",titlePrefix:"Lower Whisker"}],b,A),Y=[...V({partName:"rule",mark:{type:"rule",invalid:f,aria:!1},positionPrefix:"lower_whisker",endPositionPrefix:"lower_box",extraEncoding:q}),...V({partName:"rule",mark:{type:"rule",invalid:f,aria:!1},positionPrefix:"upper_box",endPositionPrefix:"upper_whisker",extraEncoding:q}),...V({partName:"ticks",mark:P,positionPrefix:"lower_whisker",extraEncoding:q}),...V({partName:"ticks",mark:P,positionPrefix:"upper_whisker",extraEncoding:q})],z=[...g!=="tukey"?Y:[],...W({partName:"box",mark:{type:"bar",...c?{size:c}:{},orient:k,invalid:f,ariaRoleDescription:"box"},positionPrefix:"lower_box",endPositionPrefix:"upper_box",extraEncoding:R}),...j({partName:"median",mark:{type:"tick",invalid:f,...E1(e.boxplot.median)&&e.boxplot.median.color?{color:e.boxplot.median.color}:{},...c?{size:c}:{},orient:C,aria:!1},positionPrefix:"mid_box",extraEncoding:R})];if(g==="min-max")return{...l,transform:(l.transform??[]).concat(v),layer:z};const G=St(`lower_box_${b.field}`),Q=St(`upper_box_${b.field}`),n1=`(${Q} - ${G})`,l1=`${G} - ${s} * ${n1}`,d1=`${Q} + ${s} * ${n1}`,x1=St(b.field),j1={joinaggregate:nQ(b.field),groupby:w},M1={transform:[{filter:`(${l1} <= ${x1}) && (${x1} <= ${d1})`},{aggregate:[{op:"min",field:b.field,as:`lower_whisker_${T}`},{op:"max",field:b.field,as:`upper_whisker_${T}`},{op:"min",field:`lower_box_${b.field}`,as:`lower_box_${T}`},{op:"max",field:`upper_box_${b.field}`,as:`upper_box_${T}`},...S],groupby:w}],layer:Y},{tooltip:v1,...D1}=U,{scale:B1,axis:f1}=b,lt=Vk(b),X1=QK(a,"outliers",e.boxplot,{transform:[{filter:`(${x1} < ${l1}) || (${x1} > ${d1})`}],mark:"point",encoding:{[x]:{field:b.field,type:b.type,...lt!==void 0?{title:lt}:{},...B1!==void 0?{scale:B1}:{},...f1!==void 0?{axis:f1}:{}},...D1,...D?{color:D}:{},...M?{tooltip:M}:{}}})[0];let Y1;const Ft=[...p,...m,j1];return X1?Y1={transform:Ft,layer:[X1,M1]}:(Y1=M1,Y1.transform.unshift(...Ft)),{...l,layer:[Y1,{transform:v,layer:z}]}}function nQ(t){const e=ga(t);return[{op:"q1",field:t,as:`lower_box_${e}`},{op:"q3",field:t,as:`upper_box_${e}`}]}function lA1(t,e,n){const i=JK(t,Uf),{continuousAxisChannelDef:o,continuousAxis:u}=ZK(t,i,Uf),l=o.field,a=ga(l),s=tQ(e),c=[...nQ(l),{op:"median",field:l,as:`mid_box_${a}`},{op:"min",field:l,as:(s==="min-max"?"lower_whisker_":"min_")+a},{op:"max",field:l,as:(s==="min-max"?"upper_whisker_":"max_")+a}],f=s==="min-max"||s==="tukey"?[]:[{calculate:`${St(`upper_box_${a}`)} - ${St(`lower_box_${a}`)}`,as:`iqr_${a}`},{calculate:`min(${St(`upper_box_${a}`)} + ${St(`iqr_${a}`)} * ${e}, ${St(`max_${a}`)})`,as:`upper_whisker_${a}`},{calculate:`max(${St(`lower_box_${a}`)} - ${St(`iqr_${a}`)} * ${e}, ${St(`min_${a}`)})`,as:`lower_whisker_${a}`}],{[u]:g,...p}=t.encoding,{customTooltipWithoutAggregatedField:m,filteredEncoding:v}=iA1(p),{bins:b,timeUnits:x,aggregate:w,groupby:S,encoding:A}=XK(v,n),C=i==="vertical"?"horizontal":"vertical",k=i,M=[...b,...x,{aggregate:[...w,...c],groupby:S},...f];return{bins:b,timeUnits:x,transform:M,groupby:S,aggregate:w,continuousAxisChannelDef:o,continuousAxis:u,encodingWithoutContinuousAxis:A,ticksOrient:C,boxOrient:k,customTooltipWithoutAggregatedField:m}}const Kk="errorbar",aA1=["ticks","rule"],rA1=new Wh(Kk,iQ);function iQ(t,{config:e}){t={...t,encoding:Yh(t.encoding,e)};const{transform:n,continuousAxisChannelDef:i,continuousAxis:o,encodingWithoutContinuousAxis:u,ticksOrient:l,markDef:a,outerSpec:s,tooltipEncoding:c}=oQ(t,Kk,e);delete u.size;const f=Xk(a,o,i,u,e.errorbar),g=a.thickness,p=a.size,m={type:"tick",orient:l,aria:!1,...g!==void 0?{thickness:g}:{},...p!==void 0?{size:p}:{}},v=[...f({partName:"ticks",mark:m,positionPrefix:"lower",extraEncoding:c}),...f({partName:"ticks",mark:m,positionPrefix:"upper",extraEncoding:c}),...f({partName:"rule",mark:{type:"rule",ariaRoleDescription:"errorbar",...g!==void 0?{size:g}:{}},positionPrefix:"lower",endPositionPrefix:"upper",extraEncoding:c})];return{...s,transform:n,...v.length>1?{layer:v}:{...v[0]}}}function sA1(t,e){const{encoding:n}=t;if(cA1(n))return{orient:JK(t,e),inputType:"raw"};const i=dA1(n),o=fA1(n),u=n.x,l=n.y;if(i){if(o)throw new Error(`${e} cannot be both type aggregated-upper-lower and aggregated-error`);const a=n.x2,s=n.y2;if(V1(a)&&V1(s))throw new Error(`${e} cannot have both x2 and y2`);if(V1(a)){if(lu(u))return{orient:"horizontal",inputType:"aggregated-upper-lower"};throw new Error(`Both x and x2 have to be quantitative in ${e}`)}else if(V1(s)){if(lu(l))return{orient:"vertical",inputType:"aggregated-upper-lower"};throw new Error(`Both y and y2 have to be quantitative in ${e}`)}throw new Error("No ranged axis")}else{const a=n.xError,s=n.xError2,c=n.yError,f=n.yError2;if(V1(s)&&!V1(a))throw new Error(`${e} cannot have xError2 without xError`);if(V1(f)&&!V1(c))throw new Error(`${e} cannot have yError2 without yError`);if(V1(a)&&V1(c))throw new Error(`${e} cannot have both xError and yError with both are quantiative`);if(V1(a)){if(lu(u))return{orient:"horizontal",inputType:"aggregated-error"};throw new Error("All x, xError, and xError2 (if exist) have to be quantitative")}else if(V1(c)){if(lu(l))return{orient:"vertical",inputType:"aggregated-error"};throw new Error("All y, yError, and yError2 (if exist) have to be quantitative")}throw new Error("No ranged axis")}}function cA1(t){return(V1(t.x)||V1(t.y))&&!V1(t.x2)&&!V1(t.y2)&&!V1(t.xError)&&!V1(t.xError2)&&!V1(t.yError)&&!V1(t.yError2)}function dA1(t){return V1(t.x2)||V1(t.y2)}function fA1(t){return V1(t.xError)||V1(t.xError2)||V1(t.yError)||V1(t.yError2)}function oQ(t,e,n){const{mark:i,encoding:o,params:u,projection:l,...a}=t,s=Ti(i)?i:{type:i};u&&m1(KX(e));const{orient:c,inputType:f}=sA1(t,e),{continuousAxisChannelDef:g,continuousAxisChannelDef2:p,continuousAxisChannelDefError:m,continuousAxisChannelDefError2:v,continuousAxis:b}=ZK(t,c,e),{errorBarSpecificAggregate:x,postAggregateCalculates:w,tooltipSummary:S,tooltipTitleWithFieldName:A}=gA1(s,g,p,m,v,f,e,n),{[b]:C,[b==="x"?"x2":"y2"]:k,[b==="x"?"xError":"yError"]:M,[b==="x"?"xError2":"yError2"]:T,...D}=o,{bins:I,timeUnits:U,aggregate:B,groupby:V,encoding:W}=XK(D,n),O=[...B,...x],j=f!=="raw"?[]:V,R=K_(S,g,W,A);return{transform:[...a.transform??[],...I,...U,...O.length===0?[]:[{aggregate:O,groupby:j}],...w],groupby:j,continuousAxisChannelDef:g,continuousAxis:b,encodingWithoutContinuousAxis:W,ticksOrient:c==="vertical"?"horizontal":"vertical",markDef:s,outerSpec:a,tooltipEncoding:R}}function gA1(t,e,n,i,o,u,l,a){let s=[],c=[];const f=e.field;let g,p=!1;if(u==="raw"){const m=t.center?t.center:t.extent?t.extent==="iqr"?"median":"mean":a.errorbar.center,v=t.extent?t.extent:m==="mean"?"stderr":"iqr";if(m==="median"!=(v==="iqr")&&m1(SE1(m,v,l)),v==="stderr"||v==="stdev")s=[{op:v,field:f,as:`extent_${f}`},{op:m,field:f,as:`center_${f}`}],c=[{calculate:`${St(`center_${f}`)} + ${St(`extent_${f}`)}`,as:`upper_${f}`},{calculate:`${St(`center_${f}`)} - ${St(`extent_${f}`)}`,as:`lower_${f}`}],g=[{fieldPrefix:"center_",titlePrefix:d7(m)},{fieldPrefix:"upper_",titlePrefix:ML(m,v,"+")},{fieldPrefix:"lower_",titlePrefix:ML(m,v,"-")}],p=!0;else{let b,x,w;v==="ci"?(b="mean",x="ci0",w="ci1"):(b="median",x="q1",w="q3"),s=[{op:x,field:f,as:`lower_${f}`},{op:w,field:f,as:`upper_${f}`},{op:b,field:f,as:`center_${f}`}],g=[{fieldPrefix:"upper_",titlePrefix:nl({field:f,aggregate:w,type:"quantitative"},a,{allowDisabling:!1})},{fieldPrefix:"lower_",titlePrefix:nl({field:f,aggregate:x,type:"quantitative"},a,{allowDisabling:!1})},{fieldPrefix:"center_",titlePrefix:nl({field:f,aggregate:b,type:"quantitative"},a,{allowDisabling:!1})}]}}else{(t.center||t.extent)&&m1(EE1(t.center,t.extent)),u==="aggregated-upper-lower"?(g=[],c=[{calculate:St(n.field),as:`upper_${f}`},{calculate:St(f),as:`lower_${f}`}]):u==="aggregated-error"&&(g=[{fieldPrefix:"",titlePrefix:f}],c=[{calculate:`${St(f)} + ${St(i.field)}`,as:`upper_${f}`}],o?c.push({calculate:`${St(f)} + ${St(o.field)}`,as:`lower_${f}`}):c.push({calculate:`${St(f)} - ${St(i.field)}`,as:`lower_${f}`}));for(const m of c)g.push({fieldPrefix:m.as.substring(0,6),titlePrefix:o6(o6(m.calculate,"datum['",""),"']","")})}return{postAggregateCalculates:c,errorBarSpecificAggregate:s,tooltipSummary:g,tooltipTitleWithFieldName:p}}function ML(t,e,n){return`${d7(t)} ${n} ${e}`}const Qk="errorband",hA1=["band","borders"],pA1=new Wh(Qk,uQ);function uQ(t,{config:e}){t={...t,encoding:Yh(t.encoding,e)};const{transform:n,continuousAxisChannelDef:i,continuousAxis:o,encodingWithoutContinuousAxis:u,markDef:l,outerSpec:a,tooltipEncoding:s}=oQ(t,Qk,e),c=l,f=Xk(c,o,i,u,e.errorband),g=t.encoding.x!==void 0&&t.encoding.y!==void 0;let p={type:g?"area":"rect"},m={type:g?"line":"rule"};const v={...c.interpolate?{interpolate:c.interpolate}:{},...c.tension&&c.interpolate?{tension:c.tension}:{}};return g?(p={...p,...v,ariaRoleDescription:"errorband"},m={...m,...v,aria:!1}):c.interpolate?m1(_L("interpolate")):c.tension&&m1(_L("tension")),{...a,transform:n,layer:[...f({partName:"band",mark:p,positionPrefix:"lower",endPositionPrefix:"upper",extraEncoding:s}),...f({partName:"borders",mark:m,positionPrefix:"lower",extraEncoding:s}),...f({partName:"borders",mark:m,positionPrefix:"upper",extraEncoding:s})]}}const lQ={};function Zk(t,e,n){const i=new Wh(t,e);lQ[t]={normalizer:i,parts:n}}function mA1(){return g1(lQ)}Zk(Uf,eQ,oA1);Zk(Kk,iQ,aA1);Zk(Qk,uQ,hA1);const yA1=["gradientHorizontalMaxLength","gradientHorizontalMinLength","gradientVerticalMaxLength","gradientVerticalMinLength","unselectedOpacity"],aQ={titleAlign:"align",titleAnchor:"anchor",titleAngle:"angle",titleBaseline:"baseline",titleColor:"color",titleFont:"font",titleFontSize:"fontSize",titleFontStyle:"fontStyle",titleFontWeight:"fontWeight",titleLimit:"limit",titleLineHeight:"lineHeight",titleOrient:"orient",titlePadding:"offset"},rQ={labelAlign:"align",labelAnchor:"anchor",labelAngle:"angle",labelBaseline:"baseline",labelColor:"color",labelFont:"font",labelFontSize:"fontSize",labelFontStyle:"fontStyle",labelFontWeight:"fontWeight",labelLimit:"limit",labelLineHeight:"lineHeight",labelOrient:"orient",labelPadding:"offset"},vA1=g1(aQ),bA1=g1(rQ),xA1={header:1,headerRow:1,headerColumn:1,headerFacet:1},sQ=g1(xA1),cQ=["size","shape","fill","stroke","strokeDash","strokeWidth","opacity"],_A1={gradientHorizontalMaxLength:200,gradientHorizontalMinLength:100,gradientVerticalMaxLength:200,gradientVerticalMinLength:64,unselectedOpacity:.35},wA1={aria:1,clipHeight:1,columnPadding:1,columns:1,cornerRadius:1,description:1,direction:1,fillColor:1,format:1,formatType:1,gradientLength:1,gradientOpacity:1,gradientStrokeColor:1,gradientStrokeWidth:1,gradientThickness:1,gridAlign:1,labelAlign:1,labelBaseline:1,labelColor:1,labelFont:1,labelFontSize:1,labelFontStyle:1,labelFontWeight:1,labelLimit:1,labelOffset:1,labelOpacity:1,labelOverlap:1,labelPadding:1,labelSeparation:1,legendX:1,legendY:1,offset:1,orient:1,padding:1,rowPadding:1,strokeColor:1,symbolDash:1,symbolDashOffset:1,symbolFillColor:1,symbolLimit:1,symbolOffset:1,symbolOpacity:1,symbolSize:1,symbolStrokeColor:1,symbolStrokeWidth:1,symbolType:1,tickCount:1,tickMinStep:1,title:1,titleAlign:1,titleAnchor:1,titleBaseline:1,titleColor:1,titleFont:1,titleFontSize:1,titleFontStyle:1,titleFontWeight:1,titleLimit:1,titleLineHeight:1,titleOpacity:1,titleOrient:1,titlePadding:1,type:1,values:1,zindex:1},P3="_vgsid_",EA1={point:{on:"click",fields:[P3],toggle:"event.shiftKey",resolve:"global",clear:"dblclick"},interval:{on:"[pointerdown, window:pointerup] > window:pointermove!",encodings:["x","y"],translate:"[pointerdown, window:pointerup] > window:pointermove!",zoom:"wheel!",mark:{fill:"#333",fillOpacity:.125,stroke:"white"},resolve:"global",clear:"dblclick"}};function Jk(t){return t==="legend"||!!t?.legend}function fb(t){return Jk(t)&&E1(t)}function tT(t){return!!t?.select}function dQ(t){const e=[];for(const n of t||[]){if(tT(n))continue;const{expr:i,bind:o,...u}=n;if(o&&i){const l={...u,bind:o,init:i};e.push(l)}else{const l={...u,...i?{update:i}:{},...o?{bind:o}:{}};e.push(l)}}return e}function SA1(t){return Vh(t)||nT(t)||eT(t)}function eT(t){return h1(t,"concat")}function Vh(t){return h1(t,"vconcat")}function nT(t){return h1(t,"hconcat")}function fQ({step:t,offsetIsDiscrete:e}){return e?t.for??"offset":"position"}function $i(t){return h1(t,"step")}function NL(t){return h1(t,"view")||h1(t,"width")||h1(t,"height")}const RL=20,AA1={align:1,bounds:1,center:1,columns:1,spacing:1},CA1=g1(AA1);function kA1(t,e,n){const i=n[e],o={},{spacing:u,columns:l}=i;u!==void 0&&(o.spacing=u),l!==void 0&&(Uh(t)&&!v7(t.facet)||eT(t))&&(o.columns=l),Vh(t)&&(o.columns=1);for(const a of CA1)if(t[a]!==void 0)if(a==="spacing"){const s=t[a];o[a]=ht(s)?s:{row:s.row??u,column:s.column??u}}else o[a]=t[a];return o}function Q_(t,e){return t[e]??t[e==="width"?"continuousWidth":"continuousHeight"]}function Z_(t,e){const n=qf(t,e);return $i(n)?n.step:gQ}function qf(t,e){const n=t[e]??t[e==="width"?"discreteWidth":"discreteHeight"];return le(n,{step:t.step})}const gQ=20,TA1={continuousWidth:300,continuousHeight:300,step:gQ},$A1={background:"white",padding:5,timeFormat:"%b %d, %Y",countTitle:"Count of Records",view:TA1,mark:_S1,arc:{},area:{},bar:AS1,circle:{},geoshape:{},image:{},line:{},point:{},rect:Lk,rule:{color:"black"},square:{},text:{color:"black"},tick:CS1,trail:{},boxplot:{size:14,extent:1.5,box:{},median:{color:"white"},outliers:{},rule:{},ticks:null},errorbar:{center:"mean",rule:!0,ticks:!1},errorband:{band:{opacity:.3},borders:!1},scale:nS1,projection:{},legend:_A1,header:{titlePadding:10,labelPadding:10},headerColumn:{},headerRow:{},headerFacet:{},selection:EA1,style:{},title:{},facet:{spacing:RL},concat:{spacing:RL},normalizedNumberFormat:".0%"},yo=["#4c78a8","#f58518","#e45756","#72b7b2","#54a24b","#eeca3b","#b279a2","#ff9da6","#9d755d","#bab0ac"],DL={text:11,guideLabel:10,guideTitle:11,groupTitle:13,groupSubtitle:12},OL={blue:yo[0],orange:yo[1],red:yo[2],teal:yo[3],green:yo[4],yellow:yo[5],purple:yo[6],pink:yo[7],brown:yo[8],gray0:"#000",gray1:"#111",gray2:"#222",gray3:"#333",gray4:"#444",gray5:"#555",gray6:"#666",gray7:"#777",gray8:"#888",gray9:"#999",gray10:"#aaa",gray11:"#bbb",gray12:"#ccc",gray13:"#ddd",gray14:"#eee",gray15:"#fff"};function MA1(t={}){return{signals:[{name:"color",value:E1(t)?{...OL,...t}:OL}],mark:{color:{signal:"color.blue"}},rule:{color:{signal:"color.gray0"}},text:{color:{signal:"color.gray0"}},style:{"guide-label":{fill:{signal:"color.gray0"}},"guide-title":{fill:{signal:"color.gray0"}},"group-title":{fill:{signal:"color.gray0"}},"group-subtitle":{fill:{signal:"color.gray0"}},cell:{stroke:{signal:"color.gray8"}}},axis:{domainColor:{signal:"color.gray13"},gridColor:{signal:"color.gray8"},tickColor:{signal:"color.gray13"}},range:{category:[{signal:"color.blue"},{signal:"color.orange"},{signal:"color.red"},{signal:"color.teal"},{signal:"color.green"},{signal:"color.yellow"},{signal:"color.purple"},{signal:"color.pink"},{signal:"color.brown"},{signal:"color.grey8"}]}}}function NA1(t){return{signals:[{name:"fontSize",value:E1(t)?{...DL,...t}:DL}],text:{fontSize:{signal:"fontSize.text"}},style:{"guide-label":{fontSize:{signal:"fontSize.guideLabel"}},"guide-title":{fontSize:{signal:"fontSize.guideTitle"}},"group-title":{fontSize:{signal:"fontSize.groupTitle"}},"group-subtitle":{fontSize:{signal:"fontSize.groupSubtitle"}}}}}function RA1(t){return{text:{font:t},style:{"guide-label":{font:t},"guide-title":{font:t},"group-title":{font:t},"group-subtitle":{font:t}}}}function hQ(t){const e=g1(t||{}),n={};for(const i of e){const o=t[i];n[i]=w7(o)?qX(o):v2(o)}return n}function DA1(t){const e=g1(t),n={};for(const i of e)n[i]=hQ(t[i]);return n}const OA1=[...EK,...GK,...sQ,"background","padding","legend","lineBreak","scale","style","title","view"];function pQ(t={}){const{color:e,font:n,fontSize:i,selection:o,...u}=t,l=Kl({},W1($A1),n?RA1(n):{},e?MA1(e):{},i?NA1(i):{},u||{});o&&Ql(l,"selection",o,!0);const a=S2(l,OA1);for(const s of["background","lineBreak","padding"])l[s]&&(a[s]=v2(l[s]));for(const s of EK)l[s]&&(a[s]=Ue(l[s]));for(const s of GK)l[s]&&(a[s]=hQ(l[s]));for(const s of sQ)l[s]&&(a[s]=Ue(l[s]));if(l.legend&&(a.legend=Ue(l.legend)),l.scale){const{invalid:s,...c}=l.scale,f=Ue(s,{level:1});a.scale={...Ue(c),...g1(f).length>0?{invalid:f}:{}}}return l.style&&(a.style=DA1(l.style)),l.title&&(a.title=Ue(l.title)),l.view&&(a.view=Ue(l.view)),a}const FA1=new Set(["view",...pS1]),zA1=["color","fontSize","background","padding","facet","concat","numberFormat","numberFormatType","normalizedNumberFormat","normalizedNumberFormatType","timeFormat","countTitle","header","axisQuantitative","axisTemporal","axisDiscrete","axisPoint","axisXBand","axisXPoint","axisXDiscrete","axisXQuantitative","axisXTemporal","axisYBand","axisYPoint","axisYDiscrete","axisYQuantitative","axisYTemporal","scale","selection","overlay"],LA1={view:["continuousWidth","continuousHeight","discreteWidth","discreteHeight","step"],...xS1};function jA1(t){t=W1(t);for(const e of zA1)delete t[e];if(t.axis)for(const e in t.axis)w7(t.axis[e])&&delete t.axis[e];if(t.legend)for(const e of yA1)delete t.legend[e];if(t.mark){for(const e of EL)delete t.mark[e];t.mark.tooltip&&E1(t.mark.tooltip)&&delete t.mark.tooltip}t.params&&(t.signals=(t.signals||[]).concat(dQ(t.params)),delete t.params);for(const e of FA1){for(const i of EL)delete t[e][i];const n=LA1[e];if(n)for(const i of n)delete t[e][i];IA1(t,e)}for(const e of mA1())delete t[e];PA1(t);for(const e in t)E1(t[e])&&Ot(t[e])&&delete t[e];return Ot(t)?void 0:t}function PA1(t){const{titleMarkConfig:e,subtitleMarkConfig:n,subtitle:i}=UX(t.title);Ot(e)||(t.style["group-title"]={...t.style["group-title"],...e}),Ot(n)||(t.style["group-subtitle"]={...t.style["group-subtitle"],...n}),Ot(i)?delete t.title:t.title=i}function IA1(t,e,n,i){const o=t[e];e==="view"&&(n="cell");const u={...o,...t.style[n??e]};Ot(u)||(t.style[n??e]=u),delete t[e]}function Xh(t){return h1(t,"layer")}function BA1(t){return h1(t,"repeat")}function UA1(t){return!r1(t.repeat)&&h1(t.repeat,"layer")}class iT{map(e,n){return Uh(e)?this.mapFacet(e,n):BA1(e)?this.mapRepeat(e,n):nT(e)?this.mapHConcat(e,n):Vh(e)?this.mapVConcat(e,n):eT(e)?this.mapConcat(e,n):this.mapLayerOrUnit(e,n)}mapLayerOrUnit(e,n){if(Xh(e))return this.mapLayer(e,n);if(g4(e))return this.mapUnit(e,n);throw new Error(yk(e))}mapLayer(e,n){return{...e,layer:e.layer.map(i=>this.mapLayerOrUnit(i,n))}}mapHConcat(e,n){return{...e,hconcat:e.hconcat.map(i=>this.map(i,n))}}mapVConcat(e,n){return{...e,vconcat:e.vconcat.map(i=>this.map(i,n))}}mapConcat(e,n){const{concat:i,...o}=e;return{...o,concat:i.map(u=>this.map(u,n))}}mapFacet(e,n){return{...e,spec:this.map(e.spec,n)}}mapRepeat(e,n){return{...e,spec:this.map(e.spec,n)}}}const qA1={zero:1,center:1,normalize:1};function HA1(t){return A1(qA1,t)}const GA1=new Set([xK,jh,Lh,zf,Ih,Fk,zk,Ph,_K,Ok]),WA1=new Set([jh,Lh,xK]);function O5(t){return p1(t)&&zl(t)==="quantitative"&&!t.bin}function FL(t,e,{orient:n,type:i}){const o=e==="x"?"y":"radius",u=e==="x"&&["bar","area"].includes(i),l=t[e],a=t[o];if(p1(l)&&p1(a))if(O5(l)&&O5(a)){if(l.stack)return e;if(a.stack)return o;const s=p1(l)&&!!l.aggregate,c=p1(a)&&!!a.aggregate;if(s!==c)return s?e:o;if(u){if(n==="vertical")return o;if(n==="horizontal")return e}}else{if(O5(l))return e;if(O5(a))return o}else{if(O5(l))return u&&n==="vertical"?void 0:e;if(O5(a))return u&&n==="horizontal"?void 0:o}}function YA1(t){switch(t){case"x":return"y";case"y":return"x";case"theta":return"radius";case"radius":return"theta"}}function mQ(t,e){const n=Ti(t)?t:{type:t},i=n.type;if(!GA1.has(i))return null;const o=FL(e,"x",n)||FL(e,"theta",n);if(!o)return null;const u=e[o],l=p1(u)?_1(u,{}):void 0,a=YA1(o),s=[],c=new Set;if(e[a]){const b=e[a],x=p1(b)?_1(b,{}):void 0;x&&x!==l&&(s.push(a),c.add(x))}const f=a==="x"?"xOffset":"yOffset",g=e[f],p=p1(g)?_1(g,{}):void 0;p&&p!==l&&(s.push(f),c.add(p));const m=tw1.reduce((b,x)=>{if(x!=="tooltip"&&j0(e,x)){const w=e[x];for(const S of S1(w)){const A=j3(S);if(A.aggregate)continue;const C=_1(A,{});(!C||!c.has(C))&&b.push({channel:x,fieldDef:A})}}return b},[]);let v;return u.stack!==void 0?Mu(u.stack)?v=u.stack?"zero":null:v=u.stack:WA1.has(i)&&(v="zero"),!v||!HA1(v)||VK(e)&&m.length===0?null:(u?.scale?.type&&u?.scale?.type!==qe.LINEAR&&u?.stack&&m1(xE1(u.scale.type)),V1(e[Bi(o)])?(u.stack!==void 0&&m1(bE1(o)),null):(p1(u)&&u.aggregate&&!gw1.has(u.aggregate)&&m1(_E1(u.aggregate)),{groupbyChannels:s,groupbyFields:c,fieldChannel:o,impute:u.impute===null?!1:qu(i),stackBy:m,offset:v}))}function yQ(t,e,n){const i=Ue(t),o=xt("orient",i,n);if(i.orient=QA1(i.type,e,o),o!==void 0&&o!==i.orient&&m1(iE1(i.orient,o)),i.type==="bar"&&i.orient){const s=xt("cornerRadiusEnd",i,n);if(s!==void 0){const c=i.orient==="horizontal"&&e.x2||i.orient==="vertical"&&e.y2?["cornerRadius"]:ES1[i.orient];for(const f of c)i[f]=s;i.cornerRadiusEnd!==void 0&&delete i.cornerRadiusEnd}}const u=xt("opacity",i,n),l=xt("fillOpacity",i,n);return u===void 0&&l===void 0&&(i.opacity=XA1(i.type,e)),xt("cursor",i,n)===void 0&&(i.cursor=VA1(i,e,n)),i}function VA1(t,e,n){return e.href||t.href||xt("href",t,n)?"pointer":t.cursor}const vQ=.7;function XA1(t,e){if(it([Ih,Ok,Fk,zk],t)&&!VK(e))return vQ}function KA1(t,e,{graticule:n}){if(n)return!1;const i=ki("filled",t,e),o=t.type;return le(i,o!==Ih&&o!==Ph&&o!==zf)}function QA1(t,e,n){switch(t){case Ih:case Fk:case zk:case gS1:case fS1:return}const{x:i,y:o,x2:u,y2:l}=e;switch(t){case _K:case jh:if(p1(i)&&(Be(i.bin)||p1(o)&&o.aggregate&&!i.aggregate))return"vertical";if(p1(o)&&(Be(o.bin)||p1(i)&&i.aggregate&&!o.aggregate))return"horizontal";if(l||u){if(n)return n;if(!u)return(p1(i)&&i.type===r6&&!jt(i.bin)||jf(i))&&p1(o)&&Be(o.bin)?"horizontal":"vertical";if(!l)return(p1(o)&&o.type===r6&&!jt(o.bin)||jf(o))&&p1(i)&&Be(i.bin)?"vertical":"horizontal"}case zf:if(u&&!(p1(i)&&Be(i.bin))&&l&&!(p1(o)&&Be(o.bin)))return;case Lh:if(l)return p1(o)&&Be(o.bin)?"horizontal":"vertical";if(u)return p1(i)&&Be(i.bin)?"vertical":"horizontal";if(t===zf){if(i&&!o)return"vertical";if(o&&!i)return"horizontal"}case Ph:case Ok:{const a=kL(i),s=kL(o);if(n)return n;if(a&&!s)return t!=="tick"?"horizontal":"vertical";if(!a&&s)return t!=="tick"?"vertical":"horizontal";if(a&&s)return"vertical";{const c=Ln(i)&&i.type===Ol,f=Ln(o)&&o.type===Ol;if(c&&!f)return"vertical";if(!c&&f)return"horizontal"}return}}return"vertical"}function ZA1(t){const{point:e,line:n,...i}=t;return g1(i).length>1?i:i.type}function JA1(t){for(const e of["line","area","rule","trail"])t[e]&&(t={...t,[e]:S2(t[e],["point","line"])});return t}function gb(t,e={},n){return t.point==="transparent"?{opacity:0}:t.point?E1(t.point)?t.point:{}:t.point!==void 0?null:e.point||n.shape?E1(e.point)?e.point:{}:void 0}function zL(t,e={}){return t.line?t.line===!0?{}:t.line:t.line!==void 0?null:e.line?e.line===!0?{}:e.line:void 0}class tC1{name="path-overlay";hasMatchingType(e,n){if(g4(e)){const{mark:i,encoding:o}=e,u=Ti(i)?i:{type:i};switch(u.type){case"line":case"rule":case"trail":return!!gb(u,n[u.type],o);case"area":return!!gb(u,n[u.type],o)||!!zL(u,n[u.type])}}return!1}run(e,n,i){const{config:o}=n,{params:u,projection:l,mark:a,name:s,encoding:c,...f}=e,g=Yh(c,o),p=Ti(a)?a:{type:a},m=gb(p,o[p.type],g),v=p.type==="area"&&zL(p,o[p.type]),b=[{name:s,...u?{params:u}:{},mark:ZA1({...p.type==="area"&&xt("opacity",p,o)==null&&xt("fillOpacity",p,o)==null?{opacity:vQ}:{},...p}),encoding:S2(g,["shape"])}],x=mQ(yQ(p,g,o),g);let w=g;if(x){const{fieldChannel:S,offset:A}=x;w={...g,[S]:{...g[S],...A?{stack:A}:{}}}}return w=S2(w,["y2","x2"]),v&&b.push({...l?{projection:l}:{},mark:{type:"line",...Ml(p,["clip","interpolate","tension","tooltip"]),...v},encoding:w}),m&&b.push({...l?{projection:l}:{},mark:{type:"point",opacity:1,filled:!0,...Ml(p,["clip","tooltip"]),...m},encoding:w}),i({...f,layer:b},{...n,config:JA1(o)})}}function eC1(t,e){return e?v7(t)?xQ(t,e):bQ(t,e):t}function hb(t,e){return e?xQ(t,e):t}function J_(t,e,n){const i=e[t];if(LS1(i)){if(i.repeat in n)return{...e,[t]:n[i.repeat]};m1(Ow1(i.repeat));return}return e}function bQ(t,e){if(t=J_("field",t,e),t!==void 0){if(t===null)return null;if(qk(t)&&Ho(t.sort)){const n=J_("field",t.sort,e);t={...t,...n?{sort:n}:{}}}return t}}function LL(t,e){if(p1(t))return bQ(t,e);{const n=J_("datum",t,e);return n!==t&&!n.type&&(n.type="nominal"),n}}function jL(t,e){if(V1(t)){const n=LL(t,e);if(n)return n;if(b7(t))return{condition:t.condition}}else{if(x7(t)){const n=LL(t.condition,e);if(n)return{...t,condition:n};{const{condition:i,...o}=t;return o}}return t}}function xQ(t,e){const n={};for(const i in t)if(h1(t,i)){const o=t[i];if(r1(o))n[i]=o.map(u=>jL(u,e)).filter(u=>u);else{const u=jL(o,e);u!==void 0&&(n[i]=u)}}return n}class nC1{name="RuleForRangedLine";hasMatchingType(e){if(g4(e)){const{encoding:n,mark:i}=e;if(i==="line"||Ti(i)&&i.type==="line")for(const o of Q_1){const u=k6(o),l=n[u];if(n[o]&&(p1(l)&&!Be(l.bin)||qi(l)))return!0}}return!1}run(e,n,i){const{encoding:o,mark:u}=e;return m1(nE1(!!o.x2,!!o.y2)),i({...e,mark:E1(u)?{...u,type:"rule"}:"rule"},n)}}class iC1 extends iT{nonFacetUnitNormalizers=[uA1,rA1,pA1,new tC1,new nC1];map(e,n){if(g4(e)){const i=j0(e.encoding,Uo),o=j0(e.encoding,qo),u=j0(e.encoding,Ch);if(i||o||u)return this.mapFacetedUnit(e,n)}return super.map(e,n)}mapUnit(e,n){const{parentEncoding:i,parentProjection:o}=n,u=hb(e.encoding,n.repeater),l={...e,...e.name?{name:[n.repeaterPrefix,e.name].filter(s=>s).join("_")}:{},...u?{encoding:u}:{}};if(i||o)return this.mapUnitWithParentEncodingOrProjection(l,n);const a=this.mapLayerOrUnit.bind(this);for(const s of this.nonFacetUnitNormalizers)if(s.hasMatchingType(l,n.config))return s.run(l,n,a);return l}mapRepeat(e,n){return UA1(e)?this.mapLayerRepeat(e,n):this.mapNonLayerRepeat(e,n)}mapLayerRepeat(e,n){const{repeat:i,spec:o,...u}=e,{row:l,column:a,layer:s}=i,{repeater:c={},repeaterPrefix:f=""}=n;return l||a?this.mapRepeat({...e,repeat:{...l?{row:l}:{},...a?{column:a}:{}},spec:{repeat:{layer:s},spec:o}},n):{...u,layer:s.map(g=>{const p={...c,layer:g},m=`${(o.name?`${o.name}_`:"")+f}child__layer_${qt(g)}`,v=this.mapLayerOrUnit(o,{...n,repeater:p,repeaterPrefix:m});return v.name=m,v})}}mapNonLayerRepeat(e,n){const{repeat:i,spec:o,data:u,...l}=e;!r1(i)&&e.columns&&(e=S2(e,["columns"]),m1(yL("repeat")));const a=[],{repeater:s={},repeaterPrefix:c=""}=n,f=!r1(i)&&i.row||[s?s.row:null],g=!r1(i)&&i.column||[s?s.column:null],p=r1(i)&&i||[s?s.repeat:null];for(const v of p)for(const b of f)for(const x of g){const w={repeat:v,row:b,column:x,layer:s.layer},S=`${(o.name?`${o.name}_`:"")+c}child__${r1(i)?`${qt(v)}`:(i.row?`row_${qt(b)}`:"")+(i.column?`column_${qt(x)}`:"")}`,A=this.map(o,{...n,repeater:w,repeaterPrefix:S});A.name=S,a.push(S2(A,["data"]))}const m=r1(i)?e.columns:i.column?i.column.length:1;return{data:o.data??u,align:"all",...l,columns:m,concat:a}}mapFacet(e,n){const{facet:i}=e;return v7(i)&&e.columns&&(e=S2(e,["columns"]),m1(yL("facet"))),super.mapFacet(e,n)}mapUnitWithParentEncodingOrProjection(e,n){const{encoding:i,projection:o}=e,{parentEncoding:u,parentProjection:l,config:a}=n,s=IL({parentProjection:l,projection:o}),c=PL({parentEncoding:u,encoding:hb(i,n.repeater)});return this.mapUnit({...e,...s?{projection:s}:{},...c?{encoding:c}:{}},{config:a})}mapFacetedUnit(e,n){const{row:i,column:o,facet:u,...l}=e.encoding,{mark:a,width:s,projection:c,height:f,view:g,params:p,encoding:m,...v}=e,{facetMapping:b,layout:x}=this.getFacetMappingAndLayout({row:i,column:o,facet:u},n),w=hb(l,n.repeater);return this.mapFacet({...v,...x,facet:b,spec:{...s?{width:s}:{},...f?{height:f}:{},...g?{view:g}:{},...c?{projection:c}:{},mark:a,encoding:w,...p?{params:p}:{}}},n)}getFacetMappingAndLayout(e,n){const{row:i,column:o,facet:u}=e;if(i||o){u&&m1(tE1([...i?[Uo]:[],...o?[qo]:[]]));const l={},a={};for(const s of[Uo,qo]){const c=e[s];if(c){const{align:f,center:g,spacing:p,columns:m,...v}=c;l[s]=v;for(const b of["align","center","spacing"])c[b]!==void 0&&(a[b]??={},a[b][s]=c[b])}}return{facetMapping:l,layout:a}}else{const{align:l,center:a,spacing:s,columns:c,...f}=u;return{facetMapping:eC1(f,n.repeater),layout:{...l?{align:l}:{},...a?{center:a}:{},...s?{spacing:s}:{},...c?{columns:c}:{}}}}}mapLayer(e,{parentEncoding:n,parentProjection:i,...o}){const{encoding:u,projection:l,...a}=e,s={...o,parentEncoding:PL({parentEncoding:n,encoding:u,layer:!0}),parentProjection:IL({parentProjection:i,projection:l})};return super.mapLayer({...a,...e.name?{name:[s.repeaterPrefix,e.name].filter(c=>c).join("_")}:{}},s)}}function PL({parentEncoding:t,encoding:e={},layer:n}){let i={};if(t){const o=new Set([...g1(t),...g1(e)]);for(const u of o){const l=e[u],a=t[u];if(V1(l)){const s={...a,...l};i[u]=s}else x7(l)?i[u]={...l,condition:{...a,...l.condition}}:l||l===null?i[u]=l:(n||L3(a)||$1(a)||V1(a)||r1(a))&&(i[u]=a)}}else i=e;return!i||Ot(i)?void 0:i}function IL(t){const{parentProjection:e,projection:n}=t;return e&&n&&m1(qw1({parentProjection:e,projection:n})),n??e}function oT(t){return h1(t,"filter")}function oC1(t){return h1(t,"stop")}function _Q(t){return h1(t,"lookup")}function uC1(t){return h1(t,"data")}function lC1(t){return h1(t,"param")}function aC1(t){return h1(t,"pivot")}function rC1(t){return h1(t,"density")}function sC1(t){return h1(t,"quantile")}function cC1(t){return h1(t,"regression")}function dC1(t){return h1(t,"loess")}function fC1(t){return h1(t,"sample")}function gC1(t){return h1(t,"window")}function hC1(t){return h1(t,"joinaggregate")}function pC1(t){return h1(t,"flatten")}function mC1(t){return h1(t,"calculate")}function wQ(t){return h1(t,"bin")}function yC1(t){return h1(t,"impute")}function vC1(t){return h1(t,"timeUnit")}function bC1(t){return h1(t,"aggregate")}function xC1(t){return h1(t,"stack")}function _C1(t){return h1(t,"fold")}function wC1(t){return h1(t,"extent")&&!h1(t,"density")&&!h1(t,"regression")}function EC1(t){return t.map(e=>oT(e)?{filter:tl(e.filter,XE1)}:e)}class SC1 extends iT{map(e,n){return n.emptySelections??={},n.selectionPredicates??={},e=BL(e,n),super.map(e,n)}mapLayerOrUnit(e,n){if(e=BL(e,n),e.encoding){const i={};for(const[o,u]of Su(e.encoding))i[o]=EQ(u,n);e={...e,encoding:i}}return super.mapLayerOrUnit(e,n)}mapUnit(e,n){const{selection:i,...o}=e;return i?{...o,params:Su(i).map(([u,l])=>{const{init:a,bind:s,empty:c,...f}=l;f.type==="single"?(f.type="point",f.toggle=!1):f.type==="multi"&&(f.type="point"),n.emptySelections[u]=c!=="none";for(const g of de(n.selectionPredicates[u]??{}))g.empty=c!=="none";return{name:u,value:a,select:f,bind:s}})}:e}}function BL(t,e){const{transform:n,...i}=t;if(n){const o=n.map(u=>{if(oT(u))return{filter:tw(u,e)};if(wQ(u)&&T6(u.bin))return{...u,bin:SQ(u.bin)};if(_Q(u)){const{selection:l,...a}=u.from;return l?{...u,from:{param:l,...a}}:u}return u});return{...i,transform:o}}return t}function EQ(t,e){const n=W1(t);if(p1(n)&&T6(n.bin)&&(n.bin=SQ(n.bin)),R6(n)&&n.scale?.domain?.selection){const{selection:i,...o}=n.scale.domain;n.scale.domain={...o,...i?{param:i}:{}}}if(b7(n))if(r1(n.condition))n.condition=n.condition.map(i=>{const{selection:o,param:u,test:l,...a}=i;return u?i:{...a,test:tw(i,e)}});else{const{selection:i,param:o,test:u,...l}=EQ(n.condition,e);n.condition=o?n.condition:{...l,test:tw(n.condition,e)}}return n}function SQ(t){const e=t.extent;if(e?.selection){const{selection:n,...i}=e;return{...t,extent:{...i,param:n}}}return t}function tw(t,e){const n=i=>tl(i,o=>{const u=e.emptySelections[o]??!0,l={param:o,empty:u};return e.selectionPredicates[o]??=[],e.selectionPredicates[o].push(l),l});return t.selection?n(t.selection):tl(t.test||t.filter,i=>i.selection?n(i.selection):i)}class ew extends iT{map(e,n){const i=n.selections??[];if(e.params&&!g4(e)){const o=[];for(const u of e.params)tT(u)?i.push(u):o.push(u);e.params=o}return n.selections=i,super.map(e,n)}mapUnit(e,n){const i=n.selections;if(!i||!i.length)return e;const o=(n.path??[]).concat(e.name),u=[];for(const l of i)if(!l.views||!l.views.length)u.push(l);else for(const a of l.views)(w1(a)&&(a===e.name||o.includes(a))||r1(a)&&a.map(s=>o.indexOf(s)).every((s,c,f)=>s!==-1&&(c===0||s>f[c-1])))&&u.push(l);return u.length&&(e.params=u),e}}for(const t of["mapFacet","mapRepeat","mapHConcat","mapVConcat","mapLayer"]){const e=ew.prototype[t];ew.prototype[t]=function(n,i){return e.call(this,n,AC1(n,i))}}function AC1(t,e){return t.name?{...e,path:(e.path??[]).concat(t.name)}:e}function AQ(t,e){e===void 0&&(e=pQ(t.config));const n=$C1(t,e),{width:i,height:o}=t,u=MC1(n,{width:i,height:o,autosize:t.autosize},e);return{...n,...u?{autosize:u}:{}}}const CC1=new iC1,kC1=new SC1,TC1=new ew;function $C1(t,e={}){const n={config:e};return TC1.map(CC1.map(kC1.map(t,n),n),n)}function UL(t){return w1(t)?{type:t}:t??{}}function MC1(t,e,n){let{width:i,height:o}=e;const u=g4(t)||Xh(t),l={};u?i=="container"&&o=="container"?(l.type="fit",l.contains="padding"):i=="container"?(l.type="fit-x",l.contains="padding"):o=="container"&&(l.type="fit-y",l.contains="padding"):(i=="container"&&(m1(gL("width")),i=void 0),o=="container"&&(m1(gL("height")),o=void 0));const a={type:"pad",...l,...n?UL(n.autosize):{},...UL(t.autosize)};if(a.type==="fit"&&!u&&(m1(Ew1),a.type="pad"),i=="container"&&!(a.type=="fit"||a.type=="fit-x")&&m1(hL("width")),o=="container"&&!(a.type=="fit"||a.type=="fit-y")&&m1(hL("height")),!x2(a,{type:"pad"}))return a}function NC1(t){return["fit","fit-x","fit-y"].includes(t)}function RC1(t){return t?`fit-${Nh(t)}`:"fit"}const DC1=["background","padding"];function qL(t,e){const n={};for(const i of DC1)t&&t[i]!==void 0&&(n[i]=v2(t[i]));return e&&(n.params=t.params),n}class h4{explicit;implicit;constructor(e={},n={}){this.explicit=e,this.implicit=n}clone(){return new h4(W1(this.explicit),W1(this.implicit))}combine(){return{...this.explicit,...this.implicit}}get(e){return le(this.explicit[e],this.implicit[e])}getWithExplicit(e){return this.explicit[e]!==void 0?{explicit:!0,value:this.explicit[e]}:this.implicit[e]!==void 0?{explicit:!1,value:this.implicit[e]}:{explicit:!1,value:void 0}}setWithExplicit(e,{value:n,explicit:i}){n!==void 0&&this.set(e,n,i)}set(e,n,i){return delete this[i?"implicit":"explicit"][e],this[i?"explicit":"implicit"][e]=n,this}copyKeyFromSplit(e,{explicit:n,implicit:i}){n[e]!==void 0?this.set(e,n[e],!0):i[e]!==void 0&&this.set(e,i[e],!1)}copyKeyFromObject(e,n){n[e]!==void 0&&this.set(e,n[e],!0)}copyAll(e){for(const n of g1(e.combine())){const i=e.getWithExplicit(n);this.setWithExplicit(n,i)}}}function li(t){return{explicit:!0,value:t}}function p2(t){return{explicit:!1,value:t}}function CQ(t){return(e,n,i,o)=>{const u=t(e.value,n.value);return u>0?e:u<0?n:Kh(e,n,i,o)}}function Kh(t,e,n,i){return t.explicit&&e.explicit&&m1(fE1(n,i,t.value,e.value)),t}function ku(t,e,n,i,o=Kh){return t===void 0||t.value===void 0?e:t.explicit&&!e.explicit?t:e.explicit&&!t.explicit?e:x2(t.value,e.value)?t:o(t,e,n,i)}class OC1 extends h4{explicit;implicit;parseNothing;constructor(e={},n={},i=!1){super(e,n),this.explicit=e,this.implicit=n,this.parseNothing=i}clone(){const e=super.clone();return e.parseNothing=this.parseNothing,e}}function Pl(t){return h1(t,"url")}function v8(t){return h1(t,"values")}function kQ(t){return h1(t,"name")&&!Pl(t)&&!v8(t)&&!fu(t)}function fu(t){return t&&(TQ(t)||$Q(t)||uT(t))}function TQ(t){return h1(t,"sequence")}function $Q(t){return h1(t,"sphere")}function uT(t){return h1(t,"graticule")}var Vt;(function(t){t[t.Raw=0]="Raw",t[t.Main=1]="Main",t[t.Row=2]="Row",t[t.Column=3]="Column",t[t.Lookup=4]="Lookup",t[t.PreFilterInvalid=5]="PreFilterInvalid",t[t.PostFilterInvalid=6]="PostFilterInvalid"})(Vt||(Vt={}));function MQ({invalid:t,isPath:e}){switch(SK(t,{isPath:e})){case"filter":return{marks:"exclude-invalid-values",scales:"exclude-invalid-values"};case"break-paths-show-domains":return{marks:e?"include-invalid-values":"exclude-invalid-values",scales:"include-invalid-values"};case"break-paths-filter-domains":return{marks:e?"include-invalid-values":"exclude-invalid-values",scales:"exclude-invalid-values"};case"show":return{marks:"include-invalid-values",scales:"include-invalid-values"}}}function FC1(t){const{marks:e,scales:n}=MQ(t);return e===n?Vt.Main:n==="include-invalid-values"?Vt.PreFilterInvalid:Vt.PostFilterInvalid}class Ct{debugName;_children=[];_parent=null;_hash;constructor(e,n){this.debugName=n,e&&(this.parent=e)}clone(){throw new Error("Cannot clone node")}get parent(){return this._parent}set parent(e){this._parent=e,e&&e.addChild(this)}get children(){return this._children}numChildren(){return this._children.length}addChild(e,n){if(this._children.includes(e)){m1(Iw1);return}n!==void 0?this._children.splice(n,0,e):this._children.push(e)}removeChild(e){const n=this._children.indexOf(e);return this._children.splice(n,1),n}remove(){let e=this._parent.removeChild(this);for(const n of this._children)n._parent=this._parent,this._parent.addChild(n,e++)}insertAsParentOf(e){const n=e.parent;n.removeChild(this),this.parent=n,e.parent=this}swapWithParent(){const e=this._parent,n=e.parent;for(const o of this._children)o.parent=e;this._children=[],e.removeChild(this);const i=e.parent.removeChild(e);this._parent=n,n.addChild(this,i),e.parent=this}}class Zn extends Ct{type;refCounts;_source;_name;clone(){const e=new this.constructor;return e.debugName=`clone_${this.debugName}`,e._source=this._source,e._name=`clone_${this._name}`,e.type=this.type,e.refCounts=this.refCounts,e.refCounts[e._name]=0,e}constructor(e,n,i,o){super(e,n),this.type=i,this.refCounts=o,this._source=this._name=n,this.refCounts&&!(this._name in this.refCounts)&&(this.refCounts[this._name]=0)}dependentFields(){return new Set}producedFields(){return new Set}hash(){return this._hash===void 0&&(this._hash=`Output ${CX()}`),this._hash}getSource(){return this.refCounts[this._name]++,this._source}isRequired(){return!!this.refCounts[this._name]}setSource(e){this._source=e}}function pb(t){return t.as!==void 0}function HL(t){return`${t}_end`}class vi extends Ct{timeUnits;clone(){return new vi(null,W1(this.timeUnits))}constructor(e,n){super(e),this.timeUnits=n}static makeFromEncoding(e,n){const i=n.reduceFieldDef((o,u,l)=>{const{field:a,timeUnit:s}=u;if(s){let c;if(N6(s)){if(Yt(n)){const{mark:f,markDef:g,config:p}=n,m=Cu({fieldDef:u,markDef:g,config:p});(y8(f)||m)&&(c={timeUnit:Oe(s),field:a})}}else c={as:_1(u,{forAs:!0}),field:a,timeUnit:s};if(Yt(n)){const{mark:f,markDef:g,config:p}=n,m=Cu({fieldDef:u,markDef:g,config:p});y8(f)&&ae(l)&&m!==.5&&(c.rectBandPosition=m)}c&&(o[at(c)]=c)}return o},{});return Ot(i)?null:new vi(e,i)}static makeFromTransform(e,n){const{timeUnit:i,...o}={...n},u=Oe(i),l={...o,timeUnit:u};return new vi(e,{[at(l)]:l})}merge(e){this.timeUnits={...this.timeUnits};for(const n in e.timeUnits)this.timeUnits[n]||(this.timeUnits[n]=e.timeUnits[n]);for(const n of e.children)e.removeChild(n),n.parent=this;e.remove()}removeFormulas(e){const n={};for(const[i,o]of Su(this.timeUnits)){const u=pb(o)?o.as:`${o.field}_end`;e.has(u)||(n[i]=o)}this.timeUnits=n}producedFields(){return new Set(de(this.timeUnits).map(e=>pb(e)?e.as:HL(e.field)))}dependentFields(){return new Set(de(this.timeUnits).map(e=>e.field))}hash(){return`TimeUnit ${at(this.timeUnits)}`}assemble(){const e=[];for(const n of de(this.timeUnits)){const{rectBandPosition:i}=n,o=Oe(n.timeUnit);if(pb(n)){const{field:u,as:l}=n,{unit:a,utc:s,...c}=o,f=[l,`${l}_end`];e.push({field:r3(u),type:"timeunit",...a?{units:Fh(a)}:{},...s?{timezone:"utc"}:{},...c,as:f}),e.push(...GL(f,i,o))}else if(n){const{field:u}=n,l=SX(u),a=NQ({timeUnit:o,field:l}),s=HL(l);e.push({type:"formula",expr:a,as:s}),e.push(...GL([l,s],i,o))}}return e}}const Qh="offsetted_rect_start",Zh="offsetted_rect_end";function NQ({timeUnit:t,field:e,reverse:n}){const{unit:i,utc:o}=t,u=aK(i),{part:l,step:a}=dK(u,t.step);return`${o?"utcOffset":"timeOffset"}('${l}', ${St(e)}, ${n?-a:a})`}function GL([t,e],n,i){if(n!==void 0&&n!==.5){const o=St(t),u=St(e);return[{type:"formula",expr:WL([NQ({timeUnit:i,field:t,reverse:!0}),o],n+.5),as:`${t}_${Qh}`},{type:"formula",expr:WL([o,u],n+.5),as:`${t}_${Zh}`}]}return[]}function WL([t,e],n){return`${1-n} * ${t} + ${n} * ${e}`}const E7="_tuple_fields";class zC1{hasChannel;hasField;hasSelectionId;timeUnit;items;constructor(...e){this.items=e,this.hasChannel={},this.hasField={},this.hasSelectionId=!1}}const LC1={defined:()=>!0,parse:(t,e,n)=>{const i=e.name,o=e.project??=new zC1,u={},l={},a=new Set,s=(v,b)=>{const x=b==="visual"?v.channel:v.field;let w=qt(`${i}_${x}`);for(let S=1;a.has(w);S++)w=qt(`${i}_${x}_${S}`);return a.add(w),{[b]:w}},c=e.type,f=t.config.selection[c],g=n.value!==void 0?S1(n.value):null;let{fields:p,encodings:m}=E1(n.select)?n.select:{};if(!p&&!m&&g){for(const v of g)if(E1(v))for(const b of g1(v))K_1(b)?(m||(m=[])).push(b):c==="interval"?(m1(Dw1),m=f.encodings):(p??=[]).push(b)}!p&&!m&&(m=f.encodings,"fields"in f&&(p=f.fields));for(const v of m??[]){const b=t.fieldDef(v);if(b){let x=b.field;if(b.aggregate){m1(Sw1(v,b.aggregate));continue}else if(!x){m1(mL(v));continue}if(b.timeUnit&&!N6(b.timeUnit)){x=t.vgField(v);const w={timeUnit:b.timeUnit,as:x,field:b.field};l[at(w)]=w}if(!u[x]){const w=c==="interval"&&Ui(v)&&z3(t.getScaleComponent(v).get("type"))?"R":b.bin?"R-RE":"E",S={field:x,channel:v,type:w,index:o.items.length};S.signals={...s(S,"data"),...s(S,"visual")},o.items.push(u[x]=S),o.hasField[x]=u[x],o.hasSelectionId=o.hasSelectionId||x===P3,RX(v)?(S.geoChannel=v,S.channel=NX(v),o.hasChannel[S.channel]=u[x]):o.hasChannel[v]=u[x]}}else m1(mL(v))}for(const v of p??[]){if(o.hasField[v])continue;const b={type:"E",field:v,index:o.items.length};b.signals={...s(b,"data")},o.items.push(b),o.hasField[v]=b,o.hasSelectionId=o.hasSelectionId||v===P3}g&&(e.init=g.map(v=>o.items.map(b=>E1(v)?v[b.geoChannel||b.channel]!==void 0?v[b.geoChannel||b.channel]:v[b.field]:v))),Ot(l)||(o.timeUnit=new vi(null,l))},signals:(t,e,n)=>{const i=e.name+E7;return n.filter(u=>u.name===i).length>0||e.project.hasSelectionId?n:n.concat({name:i,value:e.project.items.map(FQ)})}},RQ="_curr",ad="anim_value",I5="anim_clock",nw="eased_anim_clock",DQ="min_extent",OQ="max_range_extent",mb="last_tick_at",yb="is_playing",jC1=1/60*1e3,PC1=(t,e)=>[{name:nw,update:I5},{name:`${t}_domain`,init:`domain('${e}')`},{name:DQ,init:`extent(${t}_domain)[0]`},{name:OQ,init:`extent(range('${e}'))[1]`},{name:ad,update:`invert('${e}', ${nw})`}],IC1={defined:t=>t.type==="point",topLevelSignals:(t,e,n)=>(bi(e)&&(n=n.concat([{name:I5,init:"0",on:[{events:{type:"timer",throttle:jC1},update:`${yb} ? (${I5} + (now() - ${mb}) > ${OQ} ? 0 : ${I5} + (now() - ${mb})) : ${I5}`}]},{name:mb,init:"now()",on:[{events:[{signal:I5},{signal:yb}],update:"now()"}]},{name:yb,init:"true"}])),n),signals:(t,e,n)=>{const i=e.name,o=i+E7,u=e.project,l="(item().isVoronoi ? datum.datum : datum)",a=de(t.component.selection??{}).reduce((f,g)=>g.type==="interval"?f.concat(g.name+il):f,[]).map(f=>`indexof(item().mark.name, '${f}') < 0`).join(" && "),s=`datum && item().mark.marktype !== 'group' && indexof(item().mark.role, 'legend') < 0${a?` && ${a}`:""}`;let c=`unit: ${P0(t)}, `;if(e.project.hasSelectionId)c+=`${P3}: ${l}[${y1(P3)}]`;else if(bi(e))c+=`fields: ${o}, values: [${ad} ? ${ad} : ${DQ}]`;else{const f=u.items.map(g=>t.fieldDef(g.channel)?.bin?`[${l}[${y1(t.vgField(g.channel,{}))}], ${l}[${y1(t.vgField(g.channel,{binSuffix:"end"}))}]]`:`${l}[${y1(g.field)}]`).join(", ");c+=`fields: ${o}, values: [${f}]`}if(bi(e))return n.concat(PC1(e.name,t.scaleName(Lu)),[{name:i+e4,on:[{events:[{signal:nw},{signal:ad}],update:`{${c}}`,force:!0}]}]);{const f=e.events;return n.concat([{name:i+e4,on:f?[{events:f,update:`${s} ? {${c}} : null`,force:!0}]:[]}])}}};function FQ(t){const{signals:e,hasLegend:n,index:i,...o}=t;return o.field=r3(o.field),o}function d6(t,e=!0,n=vn){if(r1(t)){const i=t.map(o=>d6(o,e,n));return e?`[${i.join(", ")}]`:i}else if(M6(t))return n(e?a6(t):LE1(t));return e?n(_t(t)):t}function BC1(t,e){for(const n of de(t.component.selection??{})){const i=n.name;let o=`${i}${e4}, ${n.resolve==="global"?"true":`{unit: ${P0(t)}}`}`;for(const u of Jh)u.defined(n)&&(u.signals&&(e=u.signals(t,n,e)),u.modifyExpr&&(o=u.modifyExpr(t,n,o)));e.push({name:i+hk1,on:[{events:{signal:n.name+e4},update:`modify(${y1(n.name+f6)}, ${o})`}]})}return lT(e)}function UC1(t,e){if(t.component.selection&&g1(t.component.selection).length){const n=y1(t.getName("cell"));e.unshift({name:"facet",value:{},on:[{events:Fu("pointermove","scope"),update:`isTuple(facet) ? facet : group(${n}).datum`}]})}return lT(e)}function qC1(t,e){let n=!1;for(const i of de(t.component.selection??{})){const o=i.name,u=y1(o+f6);if(e.filter(a=>a.name===o).length===0){const a=i.resolve==="global"?"union":i.resolve,s=i.type==="point"?", true, true)":")";e.push({name:i.name,update:`${JQ}(${u}, ${y1(a)}${s}`})}n=!0;for(const a of Jh)a.defined(i)&&a.topLevelSignals&&(e=a.topLevelSignals(t,i,e))}return n&&e.filter(o=>o.name==="unit").length===0&&e.unshift({name:"unit",value:{},on:[{events:"pointermove",update:"isTuple(group()) ? group() : unit"}]}),lT(e)}function HC1(t,e){const n=[],i=[],o=P0(t,{escape:!1});for(const u of de(t.component.selection??{})){const l={name:u.name+f6};if(u.project.hasSelectionId&&(l.transform=[{type:"collect",sort:{field:P3}}]),u.init){const s=u.project.items.map(FQ);l.values=u.project.hasSelectionId?u.init.map(c=>({unit:o,[P3]:d6(c,!1)[0]})):u.init.map(c=>({unit:o,fields:s,values:d6(c,!1)}))}if([...n,...e].filter(s=>s.name===u.name+f6).length||n.push(l),bi(u)&&e.length){const s=t.lookupDataSource(t.getDataName(Vt.Main)),c=e.find(g=>g.name===s),f=c.transform.find(g=>g.type==="filter"&&g.expr.includes("vlSelectionTest"));if(f){c.transform=c.transform.filter(p=>p!==f);const g={name:c.name+RQ,source:c.name,transform:[f]};i.push(g)}}}return n.concat(e,i)}function zQ(t,e){for(const n of de(t.component.selection??{}))for(const i of Jh)i.defined(n)&&i.marks&&(e=i.marks(t,n,e));return e}function GC1(t,e){for(const n of t.children)Yt(n)&&(e=zQ(n,e));return e}function WC1(t,e,n,i){const o=oZ(t,e.param,e);return{signal:z3(n.get("type"))&&r1(i)&&i[0]>i[1]?`isValid(${o}) && reverse(${o})`:o}}function lT(t){return t.map(e=>(e.on&&!e.on.length&&delete e.on,e))}const Go={defined:t=>t.type==="interval"&&t.resolve==="global"&&t.bind&&t.bind==="scales",parse:(t,e)=>{const n=e.scales=[];for(const i of e.project.items){const o=i.channel;if(!Ui(o))continue;const u=t.getScaleComponent(o),l=u?u.get("type"):void 0;if(l=="sequential"&&m1(Tw1),!u||!z3(l)){m1(kw1);continue}u.set("selectionExtent",{param:e.name,field:i.field},!0),n.push(i)}},topLevelSignals:(t,e,n)=>{const i=e.scales.filter(l=>n.filter(a=>a.name===l.signals.data).length===0);if(!t.parent||ow(t)||i.length===0)return n;const o=n.find(l=>l.name===e.name);let u=o.update;if(u.includes(JQ))o.update=`{${i.map(l=>`${y1(r3(l.field))}: ${l.signals.data}`).join(", ")}}`;else{for(const l of i){const a=`${y1(r3(l.field))}: ${l.signals.data}`;u.includes(a)||(u=`${u.substring(0,u.length-1)}, ${a}}`)}o.update=u}return n.concat(i.map(l=>({name:l.signals.data})))},signals:(t,e,n)=>{if(t.parent&&!ow(t))for(const i of e.scales){const o=n.find(u=>u.name===i.signals.data);o.push="outer",delete o.value,delete o.update}return n}};function iw(t,e){return`domain(${y1(t.scaleName(e))})`}function ow(t){return t.parent&&xa(t.parent)&&(!t.parent.parent||ow(t.parent.parent))}const il="_brush",LQ="_scale_trigger",W9="geo_interval_init_tick",jQ="_init",YC1="_center",VC1={defined:t=>t.type==="interval",parse:(t,e,n)=>{if(t.hasProjection){const i={...E1(n.select)?n.select:{}};i.fields=[P3],i.encodings||(i.encodings=n.value?g1(n.value):[W3,G3]),n.select={type:"interval",...i}}if(e.translate&&!Go.defined(e)){const i=`!event.item || event.item.mark.name !== ${y1(e.name+il)}`;for(const o of e.events){if(!o.between){m1(`${o} is not an ordered event stream for interval selections.`);continue}const u=S1(o.between[0].filter??=[]);u.includes(i)||u.push(i)}}},signals:(t,e,n)=>{const i=e.name,o=i+e4,u=de(e.project.hasChannel).filter(a=>a.channel===Ht||a.channel===Le),l=e.init?e.init[0]:null;if(n.push(...u.reduce((a,s)=>a.concat(XC1(t,e,s,l?.[s.index])),[])),t.hasProjection){const a=y1(t.projectionName()),s=t.projectionName()+YC1,{x:c,y:f}=e.project.hasChannel,g=c?.signals.visual,p=f?.signals.visual,m=c?l?.[c.index]:`${s}[0]`,v=f?l?.[f.index]:`${s}[1]`,b=k=>t.getSizeSignalRef(k).signal,x=`[[${g?`${g}[0]`:"0"}, ${p?`${p}[0]`:"0"}],[${g?`${g}[1]`:b("width")}, ${p?`${p}[1]`:b("height")}]]`;l&&(n.unshift({name:i+jQ,init:`[scale(${a}, [${c?m[0]:m}, ${f?v[0]:v}]), scale(${a}, [${c?m[1]:m}, ${f?v[1]:v}])]`}),(!c||!f)&&(n.find(M=>M.name===s)||n.unshift({name:s,update:`invert(${a}, [${b("width")}/2, ${b("height")}/2])`})));const w=`intersect(${x}, {markname: ${y1(t.getName("marks"))}}, unit.mark)`,S=`{unit: ${P0(t)}}`,A=`vlSelectionTuples(${w}, ${S})`,C=u.map(k=>k.signals.visual);return n.concat({name:o,on:[{events:[...C.length?[{signal:C.join(" || ")}]:[],...l?[{signal:W9}]:[]],update:A}]})}else{if(!Go.defined(e)){const c=i+LQ,f=u.map(g=>{const p=g.channel,{data:m,visual:v}=g.signals,b=y1(t.scaleName(p)),x=t.getScaleComponent(p).get("type"),w=z3(x)?"+":"";return`(!isArray(${m}) || (${w}invert(${b}, ${v})[0] === ${w}${m}[0] && ${w}invert(${b}, ${v})[1] === ${w}${m}[1]))`});f.length&&n.push({name:c,value:{},on:[{events:u.map(g=>({scale:t.scaleName(g.channel)})),update:`${f.join(" && ")} ? ${c} : {}`}]})}const a=u.map(c=>c.signals.data),s=`unit: ${P0(t)}, fields: ${i+E7}, values`;return n.concat({name:o,...l?{init:`{${s}: ${d6(l)}}`}:{},...a.length?{on:[{events:[{signal:a.join(" || ")}],update:`${a.join(" && ")} ? {${s}: [${a}]} : null`}]}:{}})}},topLevelSignals:(t,e,n)=>(Yt(t)&&t.hasProjection&&e.init&&(n.filter(o=>o.name===W9).length||n.unshift({name:W9,value:null,on:[{events:"timer{1}",update:`${W9} === null ? {} : ${W9}`}]})),n),marks:(t,e,n)=>{const i=e.name,{x:o,y:u}=e.project.hasChannel,l=o?.signals.visual,a=u?.signals.visual,s=`data(${y1(e.name+f6)})`;if(Go.defined(e)||!o&&!u)return n;const c={x:o!==void 0?{signal:`${l}[0]`}:{value:0},y:u!==void 0?{signal:`${a}[0]`}:{value:0},x2:o!==void 0?{signal:`${l}[1]`}:{field:{group:"width"}},y2:u!==void 0?{signal:`${a}[1]`}:{field:{group:"height"}}};if(e.resolve==="global")for(const x of g1(c))c[x]=[{test:`${s}.length && ${s}[0].unit === ${P0(t)}`,...c[x]},{value:0}];const{fill:f,fillOpacity:g,cursor:p,...m}=e.mark,v=g1(m).reduce((x,w)=>(x[w]=[{test:[o!==void 0&&`${l}[0] !== ${l}[1]`,u!==void 0&&`${a}[0] !== ${a}[1]`].filter(S=>S).join(" && "),value:m[w]},{value:null}],x),{}),b=p??(e.translate?"move":null);return[{name:`${i+il}_bg`,type:"rect",clip:!0,encode:{enter:{fill:{value:f},fillOpacity:{value:g}},update:c}},...n,{name:i+il,type:"rect",clip:!0,encode:{enter:{...b?{cursor:{value:b}}:{},fill:{value:"transparent"}},update:{...c,...v}}}]}};function XC1(t,e,n,i){const o=!t.hasProjection,u=n.channel,l=n.signals.visual,a=y1(o?t.scaleName(u):t.projectionName()),s=p=>`scale(${a}, ${p})`,c=t.getSizeSignalRef(u===Ht?"width":"height").signal,f=`${u}(unit)`,g=e.events.reduce((p,m)=>[...p,{events:m.between[0],update:`[${f}, ${f}]`},{events:m,update:`[${l}[0], clamp(${f}, 0, ${c})]`}],[]);if(o){const p=n.signals.data,m=Go.defined(e),v=t.getScaleComponent(u),b=v?v.get("type"):void 0,x=i?{init:d6(i,!0,s)}:{value:[]};return g.push({events:{signal:e.name+LQ},update:z3(b)?`[${s(`${p}[0]`)}, ${s(`${p}[1]`)}]`:"[0, 0]"}),m?[{name:p,on:[]}]:[{name:l,...x,on:g},{name:p,...i?{init:d6(i)}:{},on:[{events:{signal:l},update:`${l}[0] === ${l}[1] ? null : invert(${a}, ${l})`}]}]}else{const p=u===Ht?0:1,m=e.name+jQ,v=i?{init:`[${m}[0][${p}], ${m}[1][${p}]]`}:{value:[]};return[{name:l,...v,on:g}]}}function ma({model:t,channelDef:e,vgChannel:n,invalidValueRef:i,mainRefFn:o}){const u=b7(e)&&e.condition;let l=[];u&&(l=S1(u).map(c=>{const f=o(c);if(zS1(c)){const{param:g,empty:p}=c;return{test:iZ(t,{param:g,empty:p}),...f}}else return{test:Wf(t,c.test),...f}})),i!==void 0&&l.push(i);const a=o(e);return a!==void 0&&l.push(a),l.length>1||l.length===1&&l[0].test?{[n]:l}:l.length===1?{[n]:l[0]}:{}}function aT(t,e="text"){const n=t.encoding[e];return ma({model:t,channelDef:n,vgChannel:e,mainRefFn:i=>rT(i,t.config),invalidValueRef:void 0})}function rT(t,e,n="datum"){if(t){if(L3(t))return It(t.value);if(V1(t)){const{format:i,formatType:o}=If(t);return Bk({fieldOrDatumDef:t,format:i,formatType:o,expr:n,config:e})}}}function PQ(t,e={}){const{encoding:n,markDef:i,config:o,stack:u}=t,l=n.tooltip;if(r1(l))return{tooltip:YL({tooltip:l},u,o,e)};{const a=e.reactiveGeom?"datum.datum":"datum";return ma({model:t,channelDef:l,vgChannel:"tooltip",mainRefFn:c=>{const f=BQ(c,o,a);if(f)return f;if(c===null)return;let g=xt("tooltip",i,o);if(g===!0&&(g={content:"encoding"}),w1(g))return{value:g};if(E1(g))return $1(g)?g:g.content==="encoding"?YL(n,u,o,e):{signal:a}},invalidValueRef:void 0})}}function IQ(t,e,n,{reactiveGeom:i}={}){const o={...n,...n.tooltipFormat},u=new Set,l=i?"datum.datum":"datum",a=[];function s(f,g){const p=k6(g),m=Ln(f)?f:{...f,type:t[p].type},v=m.title||Gk(m,o),b=S1(v).join(", ").replaceAll(/"/g,'\\"');let x;if(ae(g)){const w=g==="x"?"x2":"y2",S=j3(t[w]);if(Be(m.bin)&&S){const A=_1(m,{expr:l}),C=_1(S,{expr:l}),{format:k,formatType:M}=If(m);x=y7(A,C,k,M,o),u.add(w)}}if((ae(g)||g===d3||g===H3)&&e&&e.fieldChannel===g&&e.offset==="normalize"){const{format:w,formatType:S}=If(m);x=Bk({fieldOrDatumDef:m,format:w,formatType:S,expr:l,config:o,normalizeStack:!0}).signal}x??=BQ(m,o,l).signal,a.push({channel:g,key:b,value:x})}Yk(t,(f,g)=>{p1(f)?s(f,g):qh(f)&&s(f.condition,g)});const c={};for(const{channel:f,key:g,value:p}of a)!u.has(f)&&!c[g]&&(c[g]=p);return c}function YL(t,e,n,{reactiveGeom:i}={}){const o=IQ(t,e,n,{reactiveGeom:i}),u=Su(o).map(([l,a])=>`"${l}": ${a}`);return u.length>0?{signal:`{${u.join(", ")}}`}:void 0}function BQ(t,e,n="datum"){if(p1(t)&&Nk(t.type)&&!h1(t,"format")){const i=`datum["${t.field}"]`;return{signal:`isValid(${i}) ? isArray(${i}) ? join(${i}, '\\n') : ${i} : ""+${i}`}}return rT(t,e,n)}function KC1(t){const{markDef:e,config:n}=t,i=xt("aria",e,n);return i===!1?{}:{...i?{aria:i}:{},...QC1(t),...ZC1(t)}}function QC1(t){const{mark:e,markDef:n,config:i}=t;if(i.aria===!1)return{};const o=xt("ariaRoleDescription",n,i);return o!=null?{ariaRoleDescription:{value:o}}:A1(bw1,e)?{}:{ariaRoleDescription:{value:e}}}function ZC1(t){const{encoding:e,markDef:n,config:i,stack:o}=t,u=e.description;if(u)return ma({model:t,channelDef:u,vgChannel:"description",mainRefFn:s=>rT(s,t.config),invalidValueRef:void 0});const l=xt("description",n,i);if(l!=null)return{description:It(l)};if(i.aria===!1)return{};const a=IQ(e,o,i);if(!Ot(a))return{description:{signal:Su(a).filter(([s])=>!s.startsWith("_")).map(([s,c])=>[s,c.replaceAll("\\n"," ")]).map(([s,c],f)=>`"${f>0?"; ":""}${s}: " + (${c})`).join(" + ")}}}function He(t,e,n={}){const{markDef:i,encoding:o,config:u}=e,{vgChannel:l}=n;let{defaultRef:a,defaultValue:s}=n;const c=o[t];a===void 0&&(s??=xt(t,i,u,{vgChannel:l,ignoreVgConfig:!b7(c)}),s!==void 0&&(a=It(s)));const f={markDef:i,config:u,scaleName:e.scaleName(t),scale:e.getScaleComponent(t)},g=CK({...f,scaleChannel:t,channelDef:c});return ma({model:e,channelDef:c,vgChannel:l??t,invalidValueRef:g,mainRefFn:m=>Ik({...f,channel:t,channelDef:m,stack:null,defaultRef:a})})}function UQ(t,e={filled:void 0}){const{markDef:n,encoding:i,config:o}=t,{type:u}=n,l=e.filled??xt("filled",n,o),a=it(["bar","point","circle","square","geoshape"],u)?"transparent":void 0,s=xt(l===!0?"color":void 0,n,o,{vgChannel:"fill"})??o.mark[l===!0&&"color"]??a,c=xt(l===!1?"color":void 0,n,o,{vgChannel:"stroke"})??o.mark[l===!1&&"color"],f=l?"fill":"stroke",g={...s?{fill:It(s)}:{},...c?{stroke:It(c)}:{}};return n.color&&(l?n.fill:n.stroke)&&m1(ZX("property",{fill:"fill"in n,stroke:"stroke"in n})),{...g,...He("color",t,{vgChannel:f,defaultValue:l?s:c}),...He("fill",t,{defaultValue:i.fill?s:void 0}),...He("stroke",t,{defaultValue:i.stroke?c:void 0})}}function JC1(t){const{encoding:e,mark:n}=t,i=e.order;return!qu(n)&&L3(i)?ma({model:t,channelDef:i,vgChannel:"zindex",mainRefFn:o=>It(o.value),invalidValueRef:void 0}):{}}function Il({channel:t,markDef:e,encoding:n={},model:i,bandPosition:o}){const u=`${t}Offset`,l=e[u],a=n[u];if((u==="xOffset"||u==="yOffset")&&a)return{offsetType:"encoding",offset:Ik({channel:u,channelDef:a,markDef:e,config:i?.config,scaleName:i.scaleName(u),scale:i.getScaleComponent(u),stack:null,defaultRef:It(l),bandPosition:o})};const s=e[u];return s?{offsetType:"visual",offset:s}:{}}function Rn(t,e,{defaultPos:n,vgChannel:i}){const{encoding:o,markDef:u,config:l,stack:a}=e,s=o[t],c=o[Bi(t)],f=e.scaleName(t),g=e.getScaleComponent(t),{offset:p,offsetType:m}=Il({channel:t,markDef:u,encoding:o,model:e,bandPosition:.5}),v=sT({model:e,defaultPos:n,channel:t,scaleName:f,scale:g}),b=!s&&ae(t)&&(o.latitude||o.longitude)?{field:e.getName(t)}:tk1({channel:t,channelDef:s,channel2Def:c,markDef:u,config:l,scaleName:f,scale:g,stack:a,offset:p,defaultRef:v,bandPosition:m==="encoding"?0:void 0});return b?{[i||t]:b}:void 0}function tk1(t){const{channel:e,channelDef:n,scaleName:i,stack:o,offset:u,markDef:l}=t;if(V1(n)&&o&&e===o.fieldChannel){if(p1(n)){let a=n.bandPosition;if(a===void 0&&l.type==="text"&&(e==="radius"||e==="theta")&&(a=.5),a!==void 0)return Lf({scaleName:i,fieldOrDatumDef:n,startSuffix:"start",bandPosition:a,offset:u})}return L0(n,i,{suffix:"end"},{offset:u})}return Pk(t)}function sT({model:t,defaultPos:e,channel:n,scaleName:i,scale:o}){const{markDef:u,config:l}=t;return()=>{const a=k6(n),s=Au(n),c=xt(n,u,l,{vgChannel:s});if(c!==void 0)return jr(n,c);switch(e){case"zeroOrMin":return VL({scaleName:i,scale:o,mode:"zeroOrMin",mainChannel:a,config:l});case"zeroOrMax":return VL({scaleName:i,scale:o,mode:{zeroOrMax:{widthSignal:t.width.signal,heightSignal:t.height.signal}},mainChannel:a,config:l});case"mid":return{...t[o2(n)],mult:.5}}}}function VL({mainChannel:t,config:e,...n}){const i=AK(n),{mode:o}=n;if(i)return i;switch(t){case"radius":{if(o==="zeroOrMin")return{value:0};const{widthSignal:u,heightSignal:l}=o.zeroOrMax;return{signal:`min(${u},${l})/2`}}case"theta":return o==="zeroOrMin"?{value:0}:{signal:"2*PI"};case"x":return o==="zeroOrMin"?{value:0}:{field:{group:"width"}};case"y":return o==="zeroOrMin"?{field:{group:"height"}}:{value:0}}}const ek1={left:"x",center:"xc",right:"x2"},nk1={top:"y",middle:"yc",bottom:"y2"};function qQ(t,e,n,i="middle"){if(t==="radius"||t==="theta")return Au(t);const o=t==="x"?"align":"baseline",u=xt(o,e,n);let l;return $1(u)?(m1(eE1(o)),l=void 0):l=u,t==="x"?ek1[l||(i==="top"?"left":"center")]:nk1[l||i]}function Hf(t,e,{defaultPos:n,defaultPos2:i,range:o}){return o?HQ(t,e,{defaultPos:n,defaultPos2:i}):Rn(t,e,{defaultPos:n})}function HQ(t,e,{defaultPos:n,defaultPos2:i}){const{markDef:o,config:u}=e,l=Bi(t),a=o2(t),s=ik1(e,i,l),c=s[a]?qQ(t,o,u):Au(t);return{...Rn(t,e,{defaultPos:n,vgChannel:c}),...s}}function ik1(t,e,n){const{encoding:i,mark:o,markDef:u,stack:l,config:a}=t,s=k6(n),c=o2(n),f=Au(n),g=i[s],p=t.scaleName(s),m=t.getScaleComponent(s),{offset:v}=n in i||n in u?Il({channel:n,markDef:u,encoding:i,model:t}):Il({channel:s,markDef:u,encoding:i,model:t});if(!g&&(n==="x2"||n==="y2")&&(i.latitude||i.longitude)){const x=o2(n),w=t.markDef[x];return w!=null?{[x]:{value:w}}:{[f]:{field:t.getName(n)}}}const b=ok1({channel:n,channelDef:g,channel2Def:i[n],markDef:u,config:a,scaleName:p,scale:m,stack:l,offset:v,defaultRef:void 0});return b!==void 0?{[f]:b}:_c(n,u)||_c(n,{[n]:G_(n,u,a.style),[c]:G_(c,u,a.style)})||_c(n,a[o])||_c(n,a.mark)||{[f]:sT({model:t,defaultPos:e,channel:n,scaleName:p,scale:m})()}}function ok1({channel:t,channelDef:e,channel2Def:n,markDef:i,config:o,scaleName:u,scale:l,stack:a,offset:s,defaultRef:c}){return V1(e)&&a&&t.charAt(0)===a.fieldChannel.charAt(0)?L0(e,u,{suffix:"start"},{offset:s}):Pk({channel:t,channelDef:n,scaleName:u,scale:l,stack:a,markDef:i,config:o,offset:s,defaultRef:c})}function _c(t,e){const n=o2(t),i=Au(t);if(e[i]!==void 0)return{[i]:jr(t,e[i])};if(e[t]!==void 0)return{[i]:jr(t,e[t])};if(e[n]){const o=e[n];if(s6(o))m1(Xw1(n));else return{[n]:jr(t,o)}}}function t4(t,e){const{config:n,encoding:i,markDef:o}=t,u=o.type,l=Bi(e),a=o2(e),s=i[e],c=i[l],f=t.getScaleComponent(e),g=f?f.get("type"):void 0,p=o.orient,m=i[a]??i.size??xt("size",o,n,{vgChannel:a}),v=zX(e),b=u==="bar"&&(e==="x"?p==="vertical":p==="horizontal")||u==="tick"&&(e==="y"?p==="vertical":p==="horizontal");return p1(s)&&(jt(s.bin)||Be(s.bin)||s.timeUnit&&!c)&&!(m&&!s6(m))&&!i[v]&&!Fe(g)?ak1({fieldDef:s,fieldDef2:c,channel:e,model:t}):(V1(s)&&Fe(g)||b)&&!c?lk1(s,e,t):HQ(e,t,{defaultPos:"zeroOrMax",defaultPos2:"zeroOrMin"})}function uk1(t,e,n,i,o,u,l){if(s6(o))if(n){const s=n.get("type");if(s==="band"){let c=`bandwidth('${e}')`;o.band!==1&&(c=`${o.band} * ${c}`);const f=ki("minBandSize",{type:l},i);return{signal:f?`max(${T3(f)}, ${c})`:c}}else o.band!==1&&(m1(uE1(s)),o=void 0)}else return{mult:o.band,field:{group:t}};else{if($1(o))return o;if(o)return{value:o}}if(n){const s=n.get("range");if($6(s)&&ht(s.step))return{value:s.step-2}}if(!u){const{bandPaddingInner:s,barBandPaddingInner:c,rectBandPaddingInner:f,tickBandPaddingInner:g}=i.scale,p=le(s,l==="tick"?g:l==="bar"?c:f);if($1(p))return{signal:`(1 - (${p.signal})) * ${t}`};if(ht(p))return{signal:`${1-p} * ${t}`}}return{value:Z_(i.view,t)-2}}function lk1(t,e,n){const{markDef:i,encoding:o,config:u,stack:l}=n,a=i.orient,s=n.scaleName(e),c=n.getScaleComponent(e),f=o2(e),g=Bi(e),p=zX(e),m=n.scaleName(p),v=n.getScaleComponent(dk(e)),b=i.type==="tick"||a==="horizontal"&&e==="y"||a==="vertical"&&e==="x";let x;(o.size||i.size)&&(b?x=He("size",n,{vgChannel:f,defaultRef:It(i.size)}):m1(sE1(i.type)));const w=!!x,S=DK({channel:e,fieldDef:t,markDef:i,config:u,scaleType:(c||v)?.get("type"),useVlSizeChannel:b});x=x||{[f]:uk1(f,m||s,v||c,u,S,!!t,i.type)};const A=(c||v)?.get("type")==="band"&&s6(S)&&!w?"top":"middle",C=qQ(e,i,u,A),k=C==="xc"||C==="yc",{offset:M,offsetType:T}=Il({channel:e,markDef:i,encoding:o,model:n,bandPosition:k?.5:0}),D=Pk({channel:e,channelDef:t,markDef:i,config:u,scaleName:s,scale:c,stack:l,offset:M,defaultRef:sT({model:n,defaultPos:"mid",channel:e,scaleName:s,scale:c}),bandPosition:k?T==="encoding"?0:.5:$1(S)?{signal:`(1-${S})/2`}:s6(S)?(1-S.band)/2:0});if(f)return{[C]:D,...x};{const I=Au(g),U=x[f],B=M?{...U,offset:M}:U;return{[C]:D,[I]:r1(D)?[D[0],{...D[1],offset:B}]:{...D,offset:B}}}}function XL(t,e,n,i,o,u,l){if(MX(t))return 0;const a=t==="x"||t==="y2",s=a?-e/2:e/2;if($1(n)||$1(o)||$1(i)||u){const c=T3(n),f=T3(o),g=T3(i),p=T3(u),v=u?`(${l} < ${p} ? ${a?"":"-"}0.5 * (${p} - (${l})) : ${s})`:s,b=g?`${g} + `:"",x=c?`(${c} ? -1 : 1) * `:"",w=f?`(${f} + ${v})`:v;return{signal:b+x+w}}else return o=o||0,i+(n?-o-s:+o+s)}function ak1({fieldDef:t,fieldDef2:e,channel:n,model:i}){const{config:o,markDef:u,encoding:l}=i,a=i.getScaleComponent(n),s=i.scaleName(n),c=a?a.get("type"):void 0,f=a.get("reverse"),g=DK({channel:n,fieldDef:t,markDef:u,config:o,scaleType:c}),m=i.component.axes[n]?.[0]?.get("translate")??.5,v=ae(n)?xt("binSpacing",u,o)??0:0,b=Bi(n),x=Au(n),w=Au(b),S=ki("minBandSize",u,o),{offset:A}=Il({channel:n,markDef:u,encoding:l,model:i,bandPosition:0}),{offset:C}=Il({channel:b,markDef:u,encoding:l,model:i,bandPosition:0}),k=NS1({fieldDef:t,scaleName:s}),M=XL(n,v,f,m,A,S,k),T=XL(b,v,f,m,C??A,S,k),D=$1(g)?{signal:`(1-${g.signal})/2`}:s6(g)?(1-g.band)/2:.5,I=Cu({fieldDef:t,fieldDef2:e,markDef:u,config:o});if(jt(t.bin)||t.timeUnit){const U=t.timeUnit&&I!==.5;return{[w]:KL({fieldDef:t,scaleName:s,bandPosition:D,offset:T,useRectOffsetField:U}),[x]:KL({fieldDef:t,scaleName:s,bandPosition:$1(D)?{signal:`1-${D.signal}`}:1-D,offset:M,useRectOffsetField:U})}}else if(Be(t.bin)){const U=L0(t,s,{},{offset:T});if(p1(e))return{[w]:U,[x]:L0(e,s,{},{offset:M})};if(T6(t.bin)&&t.bin.step)return{[w]:U,[x]:{signal:`scale("${s}", ${_1(t,{expr:"datum"})} + ${t.bin.step})`,offset:M}}}m1(eK(b))}function KL({fieldDef:t,scaleName:e,bandPosition:n,offset:i,useRectOffsetField:o}){return Lf({scaleName:e,fieldOrDatumDef:t,bandPosition:n,offset:i,...o?{startSuffix:Qh,endSuffix:Zh}:{}})}const rk1=new Set(["aria","width","height"]);function f3(t,e){const{fill:n=void 0,stroke:i=void 0}=e.color==="include"?UQ(t):{};return{...sk1(t.markDef,e),...QL("fill",n),...QL("stroke",i),...He("opacity",t),...He("fillOpacity",t),...He("strokeOpacity",t),...He("strokeWidth",t),...He("strokeDash",t),...JC1(t),...PQ(t),...aT(t,"href"),...KC1(t)}}function QL(t,e){return e?{[t]:e}:{}}function sk1(t,e){return vw1.reduce((n,i)=>(!rk1.has(i)&&h1(t,i)&&e[i]!=="ignore"&&(n[i]=It(t[i])),n),{})}function cT(t){const{config:e,markDef:n}=t,i=new Set;if(t.forEachFieldDef((o,u)=>{let l;if(!Ui(u)||!(l=t.getScaleType(u)))return;const a=Rh(o.aggregate),s=jk({scaleChannel:u,markDef:n,config:e,scaleType:l,isCountAggregate:a});if(TS1(s)){const c=t.vgField(u,{expr:"datum",binSuffix:t.stack?.impute?"mid":void 0});c&&i.add(c)}}),i.size>0)return{defined:{signal:[...i].map(u=>zh(u,!0)).join(" && ")}}}function ZL(t,e){if(e!==void 0)return{[t]:It(e)}}const vb="voronoi",GQ={defined:t=>t.type==="point"&&t.nearest,parse:(t,e)=>{if(e.events)for(const n of e.events)n.markname=t.getName(vb)},marks:(t,e,n)=>{const{x:i,y:o}=e.project.hasChannel,u=t.mark;if(qu(u))return m1(Aw1(u)),n;const l={name:t.getName(vb),type:"path",interactive:!0,aria:!1,from:{data:t.getName("marks")},encode:{update:{fill:{value:"transparent"},strokeWidth:{value:.35},stroke:{value:"transparent"},isVoronoi:{value:!0},...PQ(t,{reactiveGeom:!0})}},transform:[{type:"voronoi",x:{expr:i||!o?"datum.datum.x || 0":"0"},y:{expr:o||!i?"datum.datum.y || 0":"0"},size:[t.getSizeSignalRef("width"),t.getSizeSignalRef("height")]}]};let a=0,s=!1;return n.forEach((c,f)=>{const g=c.name??"";g===t.component.mark[0].name?a=f:g.includes(vb)&&(s=!0)}),s||n.splice(a+1,0,l),n}},WQ={defined:t=>t.type==="point"&&t.resolve==="global"&&t.bind&&t.bind!=="scales"&&!Jk(t.bind),parse:(t,e,n)=>tZ(e,n),topLevelSignals:(t,e,n)=>{const i=e.name,o=e.project,u=e.bind,l=e.init?.[0],a=GQ.defined(e)?"(item().isVoronoi ? datum.datum : datum)":"datum";return o.items.forEach((s,c)=>{const f=qt(`${i}_${s.field}`);n.filter(p=>p.name===f).length||n.unshift({name:f,...l?{init:d6(l[c])}:{value:null},on:e.events?[{events:e.events,update:`datum && item().mark.marktype !== 'group' ? ${a}[${y1(s.field)}] : null`}]:[],bind:u[s.field]??u[s.channel]??u})}),n},signals:(t,e,n)=>{const i=e.name,o=e.project,u=n.find(c=>c.name===i+e4),l=i+E7,a=o.items.map(c=>qt(`${i}_${c.field}`)),s=a.map(c=>`${c} !== null`).join(" && ");return a.length&&(u.update=`${s} ? {fields: ${l}, values: [${a.join(", ")}]} : null`),delete u.value,delete u.on,n}},Gf="_toggle",YQ={defined:t=>t.type==="point"&&!bi(t)&&!!t.toggle,signals:(t,e,n)=>n.concat({name:e.name+Gf,value:!1,on:[{events:e.events,update:e.toggle}]}),modifyExpr:(t,e)=>{const n=e.name+e4,i=e.name+Gf;return`${i} ? null : ${n}, ${e.resolve==="global"?`${i} ? null : true, `:`${i} ? null : {unit: ${P0(t)}}, `}${i} ? ${n} : null`}},ck1={defined:t=>t.clear!==void 0&&t.clear!==!1&&!bi(t),parse:(t,e)=>{e.clear&&(e.clear=w1(e.clear)?Fu(e.clear,"view"):e.clear)},topLevelSignals:(t,e,n)=>{if(WQ.defined(e))for(const i of e.project.items){const o=n.findIndex(u=>u.name===qt(`${e.name}_${i.field}`));o!==-1&&n[o].on.push({events:e.clear,update:"null"})}return n},signals:(t,e,n)=>{function i(o,u){o!==-1&&n[o].on&&n[o].on.push({events:e.clear,update:u})}if(e.type==="interval")for(const o of e.project.items){const u=n.findIndex(l=>l.name===o.signals.visual);if(i(u,"[0, 0]"),u===-1){const l=n.findIndex(a=>a.name===o.signals.data);i(l,"null")}}else{let o=n.findIndex(u=>u.name===e.name+e4);i(o,"null"),YQ.defined(e)&&(o=n.findIndex(u=>u.name===e.name+Gf),i(o,"false"))}return n}},VQ={defined:t=>{const e=t.resolve==="global"&&t.bind&&Jk(t.bind),n=t.project.items.length===1&&t.project.items[0].field!==P3;return e&&!n&&m1($w1),e&&n},parse:(t,e,n)=>{const i=W1(n);if(i.select=w1(i.select)?{type:i.select,toggle:e.toggle}:{...i.select,toggle:e.toggle},tZ(e,i),E1(n.select)&&(n.select.on||n.select.clear)){const l='event.item && indexof(event.item.mark.role, "legend") < 0';for(const a of e.events)a.filter=S1(a.filter??[]),a.filter.includes(l)||a.filter.push(l)}const o=fb(e.bind)?e.bind.legend:"click",u=w1(o)?Fu(o,"view"):S1(o);e.bind={legend:{merge:u}}},topLevelSignals:(t,e,n)=>{const i=e.name,o=fb(e.bind)&&e.bind.legend,u=l=>a=>{const s=W1(a);return s.markname=l,s};for(const l of e.project.items){if(!l.hasLegend)continue;const a=`${qt(l.field)}_legend`,s=`${i}_${a}`;if(n.filter(f=>f.name===s).length===0){const f=o.merge.map(u(`${a}_symbols`)).concat(o.merge.map(u(`${a}_labels`))).concat(o.merge.map(u(`${a}_entries`)));n.unshift({name:s,...e.init?{}:{value:null},on:[{events:f,update:"isDefined(datum.value) ? datum.value : item().items[0].items[0].datum.value",force:!0},{events:o.merge,update:`!event.item || !datum ? null : ${s}`,force:!0}]})}}return n},signals:(t,e,n)=>{const i=e.name,o=e.project,u=n.find(p=>p.name===i+e4),l=i+E7,a=o.items.filter(p=>p.hasLegend).map(p=>qt(`${i}_${qt(p.field)}_legend`)),c=`${a.map(p=>`${p} !== null`).join(" && ")} ? {fields: ${l}, values: [${a.join(", ")}]} : null`;e.events&&a.length>0?u.on.push({events:a.map(p=>({signal:p})),update:c}):a.length>0&&(u.update=c,delete u.value,delete u.on);const f=n.find(p=>p.name===i+Gf),g=fb(e.bind)&&e.bind.legend;return f&&(e.events?f.on.push({...f.on[0],events:g}):f.on[0].events=g),n}};function dk1(t,e,n){const i=t.fieldDef(e)?.field;for(const o of de(t.component.selection??{})){const u=o.project.hasField[i]??o.project.hasChannel[e];if(u&&VQ.defined(o)){const l=n.get("selections")??[];l.push(o.name),n.set("selections",l,!1),u.hasLegend=!0}}}const XQ="_translate_anchor",KQ="_translate_delta",fk1={defined:t=>t.type==="interval"&&t.translate,signals:(t,e,n)=>{const i=e.name,o=Go.defined(e),u=i+XQ,{x:l,y:a}=e.project.hasChannel;let s=Fu(e.translate,"scope");return o||(s=s.map(c=>(c.between[0].markname=i+il,c))),n.push({name:u,value:{},on:[{events:s.map(c=>c.between[0]),update:`{x: x(unit), y: y(unit)${l!==void 0?`, extent_x: ${o?iw(t,Ht):`slice(${l.signals.visual})`}`:""}${a!==void 0?`, extent_y: ${o?iw(t,Le):`slice(${a.signals.visual})`}`:""}}`}]},{name:i+KQ,value:{},on:[{events:s,update:`{x: ${u}.x - x(unit), y: ${u}.y - y(unit)}`}]}),l!==void 0&&JL(t,e,l,"width",n),a!==void 0&&JL(t,e,a,"height",n),n}};function JL(t,e,n,i,o){const u=e.name,l=u+XQ,a=u+KQ,s=n.channel,c=Go.defined(e),f=o.find(k=>k.name===n.signals[c?"data":"visual"]),g=t.getSizeSignalRef(i).signal,p=t.getScaleComponent(s),m=p?.get("type"),v=p?.get("reverse"),b=c?s===Ht?v?"":"-":v?"-":"":"",x=`${l}.extent_${s}`,w=`${b}${a}.${s} / ${c?`${g}`:`span(${x})`}`,S=!c||!p?"panLinear":m==="log"?"panLog":m==="symlog"?"panSymlog":m==="pow"?"panPow":"panLinear",A=c?m==="pow"?`, ${p.get("exponent")??1}`:m==="symlog"?`, ${p.get("constant")??1}`:"":"",C=`${S}(${x}, ${w}${A})`;f.on.push({events:{signal:a},update:c?C:`clampRange(${C}, 0, ${g})`})}const QQ="_zoom_anchor",ZQ="_zoom_delta",gk1={defined:t=>t.type==="interval"&&t.zoom,signals:(t,e,n)=>{const i=e.name,o=Go.defined(e),u=i+ZQ,{x:l,y:a}=e.project.hasChannel,s=y1(t.scaleName(Ht)),c=y1(t.scaleName(Le));let f=Fu(e.zoom,"scope");return o||(f=f.map(g=>(g.markname=i+il,g))),n.push({name:i+QQ,on:[{events:f,update:o?`{${[s?`x: invert(${s}, x(unit))`:"",c?`y: invert(${c}, y(unit))`:""].filter(g=>g).join(", ")}}`:"{x: x(unit), y: y(unit)}"}]},{name:u,on:[{events:f,force:!0,update:"pow(1.001, event.deltaY * pow(16, event.deltaMode))"}]}),l!==void 0&&tj(t,e,l,"width",n),a!==void 0&&tj(t,e,a,"height",n),n}};function tj(t,e,n,i,o){const u=e.name,l=n.channel,a=Go.defined(e),s=o.find(S=>S.name===n.signals[a?"data":"visual"]),c=t.getSizeSignalRef(i).signal,f=t.getScaleComponent(l),g=f?.get("type"),p=a?iw(t,l):s.name,m=u+ZQ,v=`${u}${QQ}.${l}`,b=!a||!f?"zoomLinear":g==="log"?"zoomLog":g==="symlog"?"zoomSymlog":g==="pow"?"zoomPow":"zoomLinear",x=a?g==="pow"?`, ${f.get("exponent")??1}`:g==="symlog"?`, ${f.get("constant")??1}`:"":"",w=`${b}(${p}, ${v}, ${m}${x})`;s.on.push({events:{signal:m},update:a?w:`clampRange(${w}, 0, ${c})`})}const f6="_store",e4="_tuple",hk1="_modify",JQ="vlSelectionResolve",Jh=[IC1,VC1,LC1,YQ,WQ,Go,VQ,ck1,fk1,gk1,GQ];function pk1(t){let e=t.parent;for(;e&&!A2(e);)e=e.parent;return e}function P0(t,{escape:e}={escape:!0}){let n=e?y1(t.name):t.name;const i=pk1(t);if(i){const{facet:o}=i;for(const u of Q2)o[u]&&(n+=` + '__facet_${u}_' + (facet[${y1(i.vgField(u))}])`)}return n}function dT(t){return de(t.component.selection??{}).reduce((e,n)=>e||n.project.hasSelectionId,!1)}function tZ(t,e){(w1(e.select)||!e.select.on)&&delete t.events,(w1(e.select)||!e.select.clear)&&delete t.clear,(w1(e.select)||!e.select.toggle)&&delete t.toggle}function bi(t){return t.events?.find(e=>"type"in e&&e.type==="timer")}function uw(t){const e=[];return t.type==="Identifier"?[t.name]:t.type==="Literal"?[t.value]:(t.type==="MemberExpression"&&(e.push(...uw(t.object)),e.push(...uw(t.property))),e)}function eZ(t){return t.object.type==="MemberExpression"?eZ(t.object):t.object.name==="datum"}function nZ(t){const e=TC(t),n=new Set;return e.visit(i=>{i.type==="MemberExpression"&&eZ(i)&&n.add(uw(i).slice(1).join("."))}),n}class ya extends Ct{model;filter;expr;_dependentFields;clone(){return new ya(null,this.model,W1(this.filter))}constructor(e,n,i){super(e),this.model=n,this.filter=i,this.expr=Wf(this.model,this.filter,this),this._dependentFields=nZ(this.expr)}dependentFields(){return this._dependentFields}producedFields(){return new Set}assemble(){return{type:"filter",expr:this.expr}}hash(){return`Filter ${this.expr}`}}function mk1(t,e){const n={},i=t.config.selection;if(!e||!e.length)return n;let o=0;for(const u of e){const l=qt(u.name),a=u.select,s=w1(a)?a:a.type,c=E1(a)?W1(a):{type:s},f=i[s];for(const m in f)m==="fields"||m==="encodings"||(m==="mark"&&(c.mark={...f.mark,...c.mark}),(c[m]===void 0||c[m]===!0)&&(c[m]=W1(f[m]??c[m])));const g=n[l]={...c,name:l,type:s,init:u.value,bind:u.bind,events:w1(c.on)?Fu(c.on,"scope"):S1(W1(c.on))};if(bi(g)&&(o++,o>1)){delete n[l];continue}const p=W1(u);for(const m of Jh)m.defined(g)&&m.parse&&m.parse(t,g,p)}return o>1&&m1(Fw1),n}function iZ(t,e,n,i="datum"){const o=w1(e)?e:e.param,u=qt(o),l=y1(u+f6);let a;try{a=t.getSelectionComponent(u,o)}catch{return`!!${u}`}if(a.project.timeUnit){const p=n??t.component.data.raw,m=a.project.timeUnit.clone();p.parent?m.insertAsParentOf(p):p.parent=m}const s=a.project.hasSelectionId?"vlSelectionIdTest(":"vlSelectionTest(",c=a.resolve==="global"?")":`, ${y1(a.resolve)})`,f=`${s}${l}, ${i}${c}`,g=`length(data(${l}))`;return e.empty===!1?`${g} && ${f}`:`!${g} || ${f}`}function oZ(t,e,n){const i=qt(e),o=n.encoding;let u=n.field,l;try{l=t.getSelectionComponent(i,e)}catch{return i}if(!o&&!u)u=l.project.items[0].field,l.project.items.length>1&&m1(zw1(u));else if(o&&!u){const a=l.project.items.filter(s=>s.channel===o);!a.length||a.length>1?(u=l.project.items[0].field,m1(Lw1(a,o,n,u))):u=a[0].field}return`${l.name}[${y1(r3(u))}]`}function yk1(t,e){for(const[n,i]of Su(t.component.selection??{})){const o=t.getName(`lookup_${n}`);t.component.data.outputNodes[o]=i.materialized=new Zn(new ya(e,t,{param:n}),o,Vt.Lookup,t.component.data.outputNodeRefCounts)}}function Wf(t,e,n){return Lr(e,i=>w1(i)?i:WE1(i)?iZ(t,i,n):gK(i))}function vk1(t,e){if(t)return r1(t)&&!V4(t)?t.map(n=>Gk(n,e)).join(", "):t}function bb(t,e,n,i){t.encode??={},t.encode[e]??={},t.encode[e].update??={},t.encode[e].update[n]=i}function xr(t,e,n,i={header:!1}){const{disable:o,orient:u,scale:l,labelExpr:a,title:s,zindex:c,...f}=t.combine();if(!o){for(const g in f){const p=g,m=KS1[p],v=f[p];if(m&&m!==e&&m!=="both")delete f[p];else if(w7(v)){const{condition:b,...x}=v,w=S1(b),S=TL[p];if(S){const{vgProp:A,part:C}=S,k=[...w.map(M=>{const{test:T,...D}=M;return{test:Wf(null,T),...D}}),x];bb(f,C,A,k),delete f[p]}else if(S===null){const A={signal:w.map(C=>{const{test:k,...M}=C;return`${Wf(null,k)} ? ${fL(M)} : `}).join("")+fL(x)};f[p]=A}}else if($1(v)){const b=TL[p];if(b){const{vgProp:x,part:w}=b;bb(f,w,x,v),delete f[p]}}it(["labelAlign","labelBaseline"],p)&&f[p]===null&&delete f[p]}if(e==="grid"){if(!f.grid)return;if(f.encode){const{grid:g}=f.encode;f.encode={...g?{grid:g}:{}},Ot(f.encode)&&delete f.encode}return{scale:l,orient:u,...f,domain:!1,labels:!1,aria:!1,maxExtent:0,minExtent:0,ticks:!1,zindex:le(c,0)}}else{if(!i.header&&t.mainExtracted)return;if(a!==void 0){let p=a;f.encode?.labels?.update&&$1(f.encode.labels.update.text)&&(p=o6(a,"datum.label",f.encode.labels.update.text.signal)),bb(f,"labels","text",{signal:p})}if(f.labelAlign===null&&delete f.labelAlign,f.encode){for(const p of qK)t.hasAxisPart(p)||delete f.encode[p];Ot(f.encode)&&delete f.encode}const g=vk1(s,n);return{scale:l,orient:u,grid:!1,...g?{title:g}:{},...f,...n.aria===!1?{aria:!1}:{},zindex:le(c,0)}}}}function uZ(t){const{axes:e}=t.component,n=[];for(const i of f4)if(e[i]){for(const o of e[i])if(!o.get("disable")&&!o.get("gridScale")){const u=i==="x"?"height":"width",l=t.getSizeSignalRef(u).signal;u!==l&&n.push({name:u,update:l})}}return n}function bk1(t,e){const{x:n=[],y:i=[]}=t;return[...n.map(o=>xr(o,"grid",e)),...i.map(o=>xr(o,"grid",e)),...n.map(o=>xr(o,"main",e)),...i.map(o=>xr(o,"main",e))].filter(o=>o)}function ej(t,e,n,i){return Object.assign.apply(null,[{},...t.map(o=>{if(o==="axisOrient"){const u=n==="x"?"bottom":"left",l=e[n==="x"?"axisBottom":"axisLeft"]||{},a=e[n==="x"?"axisTop":"axisRight"]||{},s=new Set([...g1(l),...g1(a)]),c={};for(const f of s.values())c[f]={signal:`${i.signal} === "${u}" ? ${T3(l[f])} : ${T3(a[f])}`};return c}return e[o]})])}function xk1(t,e,n,i){const o=e==="band"?["axisDiscrete","axisBand"]:e==="point"?["axisDiscrete","axisPoint"]:mK(e)?["axisQuantitative"]:e==="time"||e==="utc"?["axisTemporal"]:[],u=t==="x"?"axisX":"axisY",l=$1(n)?"axisOrient":`axis${d7(n)}`,a=[...o,...o.map(c=>u+c.substr(4))],s=["axis",l,u];return{vlOnlyAxisConfig:ej(a,i,t,n),vgAxisConfig:ej(s,i,t,n),axisConfigStyle:_k1([...s,...a],i)}}function _k1(t,e){const n=[{}];for(const i of t){let o=e[i]?.style;if(o){o=S1(o);for(const u of o)n.push(e.style[u])}}return Object.assign.apply(null,n)}function lw(t,e,n,i={}){const o=GX(t,n,e);if(o!==void 0)return{configFrom:"style",configValue:o};for(const u of["vlOnlyAxisConfig","vgAxisConfig","axisConfigStyle"])if(i[u]?.[t]!==void 0)return{configFrom:u,configValue:i[u][t]};return{}}const nj={scale:({model:t,channel:e})=>t.scaleName(e),format:({format:t})=>t,formatType:({formatType:t})=>t,grid:({fieldOrDatumDef:t,axis:e,scaleType:n})=>e.grid??wk1(n,t),gridScale:({model:t,channel:e})=>Ek1(t,e),labelAlign:({axis:t,labelAngle:e,orient:n,channel:i})=>t.labelAlign||aZ(e,n,i),labelAngle:({labelAngle:t})=>t,labelBaseline:({axis:t,labelAngle:e,orient:n,channel:i})=>t.labelBaseline||lZ(e,n,i),labelFlush:({axis:t,fieldOrDatumDef:e,channel:n})=>t.labelFlush??Ak1(e.type,n),labelOverlap:({axis:t,fieldOrDatumDef:e,scaleType:n})=>t.labelOverlap??Ck1(e.type,n,p1(e)&&!!e.timeUnit,p1(e)?e.sort:void 0),orient:({orient:t})=>t,tickCount:({channel:t,model:e,axis:n,fieldOrDatumDef:i,scaleType:o})=>{const u=t==="x"?"width":t==="y"?"height":void 0,l=u?e.getSizeSignalRef(u):void 0;return n.tickCount??Tk1({fieldOrDatumDef:i,scaleType:o,size:l,values:n.values})},tickMinStep:({axis:t,format:e,fieldOrDatumDef:n})=>t.tickMinStep??$k1({format:e,fieldOrDatumDef:n}),title:({axis:t,model:e,channel:n})=>{if(t.title!==void 0)return t.title;const i=rZ(e,n);if(i!==void 0)return i;const o=e.typedFieldDef(n),u=n==="x"?"x2":"y2",l=e.fieldDef(u);return YX(o?[CL(o)]:[],p1(l)?[CL(l)]:[])},values:({axis:t,fieldOrDatumDef:e})=>Mk1(t,e),zindex:({axis:t,fieldOrDatumDef:e,mark:n})=>t.zindex??Nk1(n,e)};function wk1(t,e){return!Fe(t)&&p1(e)&&!jt(e?.bin)&&!Be(e?.bin)}function Ek1(t,e){const n=e==="x"?"y":"x";if(t.getScaleComponent(n))return t.scaleName(n)}function Sk1(t,e,n,i,o){const u=e?.labelAngle;if(u!==void 0)return $1(u)?u:m8(u);{const{configValue:l}=lw("labelAngle",i,e?.style,o);return l!==void 0?m8(l):n===Ht&&it([Dk,Rk],t.type)&&!(p1(t)&&t.timeUnit)?270:void 0}}function aw(t){return`(((${t.signal} % 360) + 360) % 360)`}function lZ(t,e,n,i){if(t!==void 0)if(n==="x"){if($1(t)){const o=aw(t),u=$1(e)?`(${e.signal} === "top")`:e==="top";return{signal:`(45 < ${o} && ${o} < 135) || (225 < ${o} && ${o} < 315) ? "middle" :(${o} <= 45 || 315 <= ${o}) === ${u} ? "bottom" : "top"`}}if(45<t&&t<135||225<t&&t<315)return"middle";if($1(e)){const o=t<=45||315<=t?"===":"!==";return{signal:`${e.signal} ${o} "top" ? "bottom" : "top"`}}return(t<=45||315<=t)==(e==="top")?"bottom":"top"}else{if($1(t)){const o=aw(t),u=$1(e)?`(${e.signal} === "left")`:e==="left";return{signal:`${o} <= 45 || 315 <= ${o} || (135 <= ${o} && ${o} <= 225) ? ${i?'"middle"':"null"} : (45 <= ${o} && ${o} <= 135) === ${u} ? "top" : "bottom"`}}if(t<=45||315<=t||135<=t&&t<=225)return i?"middle":null;if($1(e)){const o=45<=t&&t<=135?"===":"!==";return{signal:`${e.signal} ${o} "left" ? "top" : "bottom"`}}return(45<=t&&t<=135)==(e==="left")?"top":"bottom"}}function aZ(t,e,n){if(t===void 0)return;const i=n==="x",o=i?0:90,u=i?"bottom":"left";if($1(t)){const l=aw(t),a=$1(e)?`(${e.signal} === "${u}")`:e===u;return{signal:`(${o?`(${l} + 90)`:l} % 180 === 0) ? ${i?null:'"center"'} :(${o} < ${l} && ${l} < ${180+o}) === ${a} ? "left" : "right"`}}if((t+o)%180===0)return i?null:"center";if($1(e)){const l=o<t&&t<180+o?"===":"!==";return{signal:`${`${e.signal} ${l} "${u}"`} ? "left" : "right"`}}return(o<t&&t<180+o)==(e===u)?"left":"right"}function Ak1(t,e){if(e==="x"&&it(["quantitative","temporal"],t))return!0}function Ck1(t,e,n,i){if(n&&!E1(i)||t!=="nominal"&&t!=="ordinal")return e==="log"||e==="symlog"?"greedy":!0}function kk1(t){return t==="x"?"bottom":"left"}function Tk1({fieldOrDatumDef:t,scaleType:e,size:n,values:i}){if(!i&&!Fe(e)&&e!=="log"){if(p1(t)){if(jt(t.bin))return{signal:`ceil(${n.signal}/10)`};if(t.timeUnit&&it(["month","hours","day","quarter"],Oe(t.timeUnit)?.unit))return}return{signal:`ceil(${n.signal}/40)`}}}function $k1({format:t,fieldOrDatumDef:e}){if(t==="d")return 1;if(p1(e)){const{timeUnit:n}=e;if(n){const i=cK(n);if(i)return{signal:i}}}}function rZ(t,e){const n=e==="x"?"x2":"y2",i=t.fieldDef(e),o=t.fieldDef(n),u=i?i.title:void 0,l=o?o.title:void 0;if(u&&l)return VX(u,l);if(u)return u;if(l)return l;if(u!==void 0)return u;if(l!==void 0)return l}function Mk1(t,e){const n=t.values;if(r1(n))return UK(e,n);if($1(n))return n}function Nk1(t,e){return t==="rect"&&Pf(e)?1:0}class Bl extends Ct{transform;_dependentFields;clone(){return new Bl(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this._dependentFields=nZ(this.transform.calculate)}static parseAllForSortIndex(e,n){return n.forEachFieldDef((i,o)=>{if(R6(i)&&RK(i.sort)){const{field:u,timeUnit:l}=i,a=i.sort,s=a.map((c,f)=>`${gK({field:u,timeUnit:l,equal:c})} ? ${f} : `).join("")+a.length;e=new Bl(e,{calculate:s,as:Ul(i,o,{forAs:!0})})}}),e}producedFields(){return new Set([this.transform.as])}dependentFields(){return this._dependentFields}assemble(){return{type:"formula",expr:this.transform.calculate,as:this.transform.as}}hash(){return`Calculate ${at(this.transform)}`}}function Ul(t,e,n){return _1(t,{prefix:e,suffix:"sort_index",...n})}function tp(t,e){return it(["top","bottom"],e)?"column":it(["left","right"],e)||t==="row"?"row":"column"}function ql(t,e,n,i){const o=i==="row"?n.headerRow:i==="column"?n.headerColumn:n.headerFacet;return le((e||{})[t],o[t],n.header[t])}function ep(t,e,n,i){const o={};for(const u of t){const l=ql(u,e||{},n,i);l!==void 0&&(o[u]=l)}return o}const fT=["row","column"],gT=["header","footer"];function Rk1(t,e){const n=t.component.layoutHeaders[e].title,i=t.config?t.config:void 0,o=t.component.layoutHeaders[e].facetFieldDef?t.component.layoutHeaders[e].facetFieldDef:void 0,{titleAnchor:u,titleAngle:l,titleOrient:a}=ep(["titleAnchor","titleAngle","titleOrient"],o.header,i,e),s=tp(e,a),c=m8(l);return{name:`${e}-title`,type:"group",role:`${s}-title`,title:{text:n,...e==="row"?{orient:"left"}:{},style:"guide-title",...cZ(c,s),...sZ(s,c,u),...dZ(i,o,e,vA1,aQ)}}}function sZ(t,e,n="middle"){switch(n){case"start":return{align:"left"};case"end":return{align:"right"}}const i=aZ(e,t==="row"?"left":"top",t==="row"?"y":"x");return i?{align:i}:{}}function cZ(t,e){const n=lZ(t,e==="row"?"left":"top",e==="row"?"y":"x",!0);return n?{baseline:n}:{}}function Dk1(t,e){const n=t.component.layoutHeaders[e],i=[];for(const o of gT)if(n[o])for(const u of n[o]){const l=Fk1(t,e,o,n,u);l!=null&&i.push(l)}return i}function Ok1(t,e){const{sort:n}=t;return Ho(n)?{field:_1(n,{expr:"datum"}),order:n.order??"ascending"}:r1(n)?{field:Ul(t,e,{expr:"datum"}),order:"ascending"}:{field:_1(t,{expr:"datum"}),order:n??"ascending"}}function rw(t,e,n){const{format:i,formatType:o,labelAngle:u,labelAnchor:l,labelOrient:a,labelExpr:s}=ep(["format","formatType","labelAngle","labelAnchor","labelOrient","labelExpr"],t.header,n,e),c=Bk({fieldOrDatumDef:t,format:i,formatType:o,expr:"parent",config:n}).signal,f=tp(e,a);return{text:{signal:s?o6(o6(s,"datum.label",c),"datum.value",_1(t,{expr:"parent"})):c},...e==="row"?{orient:"left"}:{},style:"guide-label",frame:"group",...cZ(u,f),...sZ(f,u,l),...dZ(n,t,e,bA1,rQ)}}function Fk1(t,e,n,i,o){if(o){let u=null;const{facetFieldDef:l}=i,a=t.config?t.config:void 0;if(l&&o.labels){const{labelOrient:g}=ep(["labelOrient"],l.header,a,e);(e==="row"&&!it(["top","bottom"],g)||e==="column"&&!it(["left","right"],g))&&(u=rw(l,e,a))}const s=A2(t)&&!v7(t.facet),c=o.axes,f=c?.length>0;if(u||f){const g=e==="row"?"height":"width";return{name:t.getName(`${e}_${n}`),type:"group",role:`${e}-${n}`,...i.facetFieldDef?{from:{data:t.getName(`${e}_domain`)},sort:Ok1(l,e)}:{},...f&&s?{from:{data:t.getName(`facet_domain_${e}`)}}:{},...u?{title:u}:{},...o.sizeSignal?{encode:{update:{[g]:o.sizeSignal}}}:{},...f?{axes:c}:{}}}}return null}const zk1={column:{start:0,end:1},row:{start:1,end:0}};function Lk1(t,e){return zk1[e][t]}function jk1(t,e){const n={};for(const i of Q2){const o=t[i];if(o?.facetFieldDef){const{titleAnchor:u,titleOrient:l}=ep(["titleAnchor","titleOrient"],o.facetFieldDef.header,e,i),a=tp(i,l),s=Lk1(u,a);s!==void 0&&(n[a]=s)}}return Ot(n)?void 0:n}function dZ(t,e,n,i,o){const u={};for(const l of i){if(!o[l])continue;const a=ql(l,e?.header,t,n);a!==void 0&&(u[o[l]]=a)}return u}function hT(t){return[...wc(t,"width"),...wc(t,"height"),...wc(t,"childWidth"),...wc(t,"childHeight")]}function wc(t,e){const n=e==="width"?"x":"y",i=t.component.layoutSize.get(e);if(i==null||i==="merged")return[];const o=t.getSizeSignalRef(e).signal;if(i==="step"){const u=t.getScaleComponent(n);if(u){const l=u.get("type"),a=u.get("range");if(Fe(l)&&$6(a)){const s=t.scaleName(n);return A2(t.parent)&&t.parent.component.resolve.scale[n]==="independent"?[ij(s,a)]:[ij(s,a),{name:o,update:fZ(s,u,`domain('${s}').length`)}]}}throw new Error("layout size is step although width/height is not step.")}else if(i=="container"){const u=o.endsWith("width"),l=u?"containerSize()[0]":"containerSize()[1]",a=Q_(t.config.view,u?"width":"height"),s=`isFinite(${l}) ? ${l} : ${a}`;return[{name:o,init:s,on:[{update:s,events:"window:resize"}]}]}else return[{name:o,value:i}]}function ij(t,e){const n=`${t}_step`;return $1(e.step)?{name:n,update:e.step.signal}:{name:n,value:e.step}}function fZ(t,e,n){const i=e.get("type"),o=e.get("padding"),u=le(e.get("paddingOuter"),o);let l=e.get("paddingInner");return l=i==="band"?l!==void 0?l:o:1,`bandspace(${n}, ${T3(l)}, ${T3(u)}) * ${t}_step`}function gZ(t){return t==="childWidth"?"width":t==="childHeight"?"height":t}function hZ(t,e){return g1(t).reduce((n,i)=>({...n,...ma({model:e,channelDef:t[i],vgChannel:i,mainRefFn:o=>It(o.value),invalidValueRef:void 0})}),{})}function pZ(t,e){if(A2(e))return t==="theta"?"independent":"shared";if(xa(e))return"shared";if(_T(e))return ae(t)||t==="theta"||t==="radius"?"independent":"shared";throw new Error("invalid model type for resolve")}function pT(t,e){const n=t.scale[e],i=ae(e)?"axis":"legend";return n==="independent"?(t[i][e]==="shared"&&m1(hE1(e)),"independent"):t[i][e]||"shared"}const Pk1={...wA1,disable:1,labelExpr:1,selections:1,opacity:1,shape:1,stroke:1,fill:1,size:1,strokeWidth:1,strokeDash:1,encode:1},mZ=g1(Pk1);class Ik1 extends h4{}const oj={symbols:Bk1,gradient:Uk1,labels:qk1,entries:Hk1};function Bk1(t,{fieldOrDatumDef:e,model:n,channel:i,legendCmpt:o,legendType:u}){if(u!=="symbol")return;const{markDef:l,encoding:a,config:s,mark:c}=n,f=l.filled&&c!=="trail";let g={...ww1({},n,vS1),...UQ(n,{filled:f})};const p=o.get("symbolOpacity")??s.legend.symbolOpacity,m=o.get("symbolFillColor")??s.legend.symbolFillColor,v=o.get("symbolStrokeColor")??s.legend.symbolStrokeColor,b=p===void 0?yZ(a.opacity)??l.opacity:void 0;if(g.fill){if(i==="fill"||f&&i===n2)delete g.fill;else if(h1(g.fill,"field"))m?delete g.fill:(g.fill=It(s.legend.symbolBaseFillColor??"black"),g.fillOpacity=It(b??1));else if(r1(g.fill)){const x=sw(a.fill??a.color)??l.fill??(f&&l.color);x&&(g.fill=It(x))}}if(g.stroke){if(i==="stroke"||!f&&i===n2)delete g.stroke;else if(h1(g.stroke,"field")||v)delete g.stroke;else if(r1(g.stroke)){const x=le(sw(a.stroke||a.color),l.stroke,f?l.color:void 0);x&&(g.stroke={value:x})}}if(i!==d4){const x=p1(e)&&bZ(n,o,e);x?g.opacity=[{test:x,...It(b??1)},It(s.legend.unselectedOpacity)]:b&&(g.opacity=It(b))}return g={...g,...t},Ot(g)?void 0:g}function Uk1(t,{model:e,legendType:n,legendCmpt:i}){if(n!=="gradient")return;const{config:o,markDef:u,encoding:l}=e;let a={};const c=(i.get("gradientOpacity")??o.legend.gradientOpacity)===void 0?yZ(l.opacity)||u.opacity:void 0;return c&&(a.opacity=It(c)),a={...a,...t},Ot(a)?void 0:a}function qk1(t,{fieldOrDatumDef:e,model:n,channel:i,legendCmpt:o}){const u=n.legend(i)||{},l=n.config,a=p1(e)?bZ(n,o,e):void 0,s=a?[{test:a,value:1},{value:l.legend.unselectedOpacity}]:void 0,{format:c,formatType:f}=u;let g;c6(f)?g=$3({fieldOrDatumDef:e,field:"datum.value",format:c,formatType:f,config:l}):c===void 0&&f===void 0&&l.customFormatTypes&&(e.type==="quantitative"&&l.numberFormatType?g=$3({fieldOrDatumDef:e,field:"datum.value",format:l.numberFormat,formatType:l.numberFormatType,config:l}):e.type==="temporal"&&l.timeFormatType&&p1(e)&&e.timeUnit===void 0&&(g=$3({fieldOrDatumDef:e,field:"datum.value",format:l.timeFormat,formatType:l.timeFormatType,config:l})));const p={...s?{opacity:s}:{},...g?{text:g}:{},...t};return Ot(p)?void 0:p}function Hk1(t,{legendCmpt:e}){return e.get("selections")?.length?{...t,fill:{value:"transparent"}}:t}function yZ(t){return vZ(t,(e,n)=>Math.max(e,n.value))}function sw(t){return vZ(t,(e,n)=>le(e,n.value))}function vZ(t,e){if(jS1(t))return S1(t.condition).reduce(e,t.value);if(L3(t))return t.value}function bZ(t,e,n){const i=e.get("selections");if(!i?.length)return;const o=y1(n.field);return i.map(u=>`(!length(data(${y1(qt(u)+f6)})) || (${u}[${o}] && indexof(${u}[${o}], datum.value) >= 0))`).join(" || ")}const uj={direction:({direction:t})=>t,format:({fieldOrDatumDef:t,legend:e,config:n})=>{const{format:i,formatType:o}=e;return $K(t,t.type,i,o,n,!1)},formatType:({legend:t,fieldOrDatumDef:e,scaleType:n})=>{const{formatType:i}=t;return MK(i,e,n)},gradientLength:t=>{const{legend:e,legendConfig:n}=t;return e.gradientLength??n.gradientLength??Qk1(t)},labelOverlap:({legend:t,legendConfig:e,scaleType:n})=>t.labelOverlap??e.labelOverlap??Zk1(n),symbolType:({legend:t,markDef:e,channel:n,encoding:i})=>t.symbolType??Wk1(e.type,n,i.shape,e.shape),title:({fieldOrDatumDef:t,config:e})=>nl(t,e,{allowDisabling:!0}),type:({legendType:t,scaleType:e,channel:n})=>{if(el(n)&&fi(e)){if(t==="gradient")return}else if(t==="symbol")return;return t},values:({fieldOrDatumDef:t,legend:e})=>Gk1(e,t)};function Gk1(t,e){const n=t.values;if(r1(n))return UK(e,n);if($1(n))return n}function Wk1(t,e,n,i){if(e!=="shape"){const o=sw(n)??i;if(o)return o}switch(t){case"bar":case"rect":case"image":case"square":return"square";case"line":case"trail":case"rule":return"stroke";case"arc":case"point":case"circle":case"tick":case"geoshape":case"area":case"text":return"circle"}}function Yk1(t){const{legend:e}=t;return le(e.type,Vk1(t))}function Vk1({channel:t,timeUnit:e,scaleType:n}){if(el(t)){if(it(["quarter","month","day"],e))return"symbol";if(fi(n))return"gradient"}return"symbol"}function Xk1({legendConfig:t,legendType:e,orient:n,legend:i}){return i.direction??t[e?"gradientDirection":"symbolDirection"]??Kk1(n,e)}function Kk1(t,e){switch(t){case"top":case"bottom":return"horizontal";case"left":case"right":case"none":case void 0:return;default:return e==="gradient"?"horizontal":void 0}}function Qk1({legendConfig:t,model:e,direction:n,orient:i,scaleType:o}){const{gradientHorizontalMaxLength:u,gradientHorizontalMinLength:l,gradientVerticalMaxLength:a,gradientVerticalMinLength:s}=t;if(fi(o))return n==="horizontal"?i==="top"||i==="bottom"?lj(e,"width",l,u):l:lj(e,"height",s,a)}function lj(t,e,n,i){return{signal:`clamp(${t.getSizeSignalRef(e).signal}, ${n}, ${i})`}}function Zk1(t){if(it(["quantile","threshold","log","symlog"],t))return"greedy"}function xZ(t){const e=Yt(t)?Jk1(t):iT1(t);return t.component.legends=e,e}function Jk1(t){const{encoding:e}=t,n={};for(const i of[n2,...cQ]){const o=be(e[i]);!o||!t.getScaleComponent(i)||i===i2&&p1(o)&&o.type===pa||(n[i]=nT1(t,i))}return n}function tT1(t,e){const n=t.scaleName(e);if(t.mark==="trail"){if(e==="color")return{stroke:n};if(e==="size")return{strokeWidth:n}}return e==="color"?t.markDef.filled?{fill:n}:{stroke:n}:{[e]:n}}function eT1(t,e,n,i){switch(e){case"disable":return n!==void 0;case"values":return!!n?.values;case"title":if(e==="title"&&t===i?.title)return!0}return t===(n||{})[e]}function nT1(t,e){let n=t.legend(e);const{markDef:i,encoding:o,config:u}=t,l=u.legend,a=new Ik1({},tT1(t,e));dk1(t,e,a);const s=n!==void 0?!n:l.disable;if(a.set("disable",s,n!==void 0),s)return a;n=n||{};const c=t.getScaleComponent(e).get("type"),f=be(o[e]),g=p1(f)?Oe(f.timeUnit)?.unit:void 0,p=n.orient||u.legend.orient||"right",m=Yk1({legend:n,channel:e,timeUnit:g,scaleType:c}),v=Xk1({legend:n,legendType:m,orient:p,legendConfig:l}),b={legend:n,channel:e,model:t,markDef:i,encoding:o,fieldOrDatumDef:f,legendConfig:l,config:u,scaleType:c,orient:p,legendType:m,direction:v};for(const C of mZ){if(m==="gradient"&&C.startsWith("symbol")||m==="symbol"&&C.startsWith("gradient"))continue;const k=C in uj?uj[C](b):n[C];if(k!==void 0){const M=eT1(k,C,n,t.fieldDef(e));(M||u.legend[C]===void 0)&&a.set(C,k,M)}}const x=n?.encoding??{},w=a.get("selections"),S={},A={fieldOrDatumDef:f,model:t,channel:e,legendCmpt:a,legendType:m};for(const C of["labels","legend","title","symbols","gradient","entries"]){const k=hZ(x[C]??{},t),M=C in oj?oj[C](k,A):k;M!==void 0&&!Ot(M)&&(S[C]={...w?.length&&p1(f)?{name:`${qt(f.field)}_legend_${C}`}:{},...w?.length?{interactive:!0}:{},update:w?.length?{...M,cursor:{value:"pointer"}}:M})}return Ot(S)||a.set("encode",S,!!n?.encoding),a}function iT1(t){const{legends:e,resolve:n}=t.component;for(const i of t.children){xZ(i);for(const o of g1(i.component.legends))n.legend[o]=pT(t.component.resolve,o),n.legend[o]==="shared"&&(e[o]=_Z(e[o],i.component.legends[o]),e[o]||(n.legend[o]="independent",delete e[o]))}for(const i of g1(e))for(const o of t.children)o.component.legends[i]&&n.legend[i]==="shared"&&delete o.component.legends[i];return e}function _Z(t,e){if(!t)return e.clone();const n=t.getWithExplicit("orient"),i=e.getWithExplicit("orient");if(n.explicit&&i.explicit&&n.value!==i.value)return;let o=!1;for(const u of mZ){const l=ku(t.getWithExplicit(u),e.getWithExplicit(u),u,"legend",(a,s)=>{switch(u){case"symbolType":return oT1(a,s);case"title":return XX(a,s);case"type":return o=!0,p2("symbol")}return Kh(a,s,u,"legend")});t.setWithExplicit(u,l)}return o&&(t.implicit?.encode?.gradient&&Of(t.implicit,["encode","gradient"]),t.explicit?.encode?.gradient&&Of(t.explicit,["encode","gradient"])),t}function oT1(t,e){return e.value==="circle"?e:t}function uT1(t,e,n,i){t.encode??={},t.encode[e]??={},t.encode[e].update??={},t.encode[e].update[n]=i}function wZ(t){const e=t.component.legends,n={};for(const o of g1(e)){const u=t.getScaleComponent(o),l=_t(u.get("domains"));if(n[l])for(const a of n[l])_Z(a,e[o])||n[l].push(e[o]);else n[l]=[e[o].clone()]}return de(n).flat().map(o=>lT1(o,t.config)).filter(o=>o!==void 0)}function lT1(t,e){const{disable:n,labelExpr:i,selections:o,...u}=t.combine();if(!n){if(e.aria===!1&&u.aria==null&&(u.aria=!1),u.encode?.symbols){const l=u.encode.symbols.update;l.fill&&l.fill.value!=="transparent"&&!l.stroke&&!u.stroke&&(l.stroke={value:"transparent"});for(const a of cQ)u[a]&&delete l[a]}if(u.title||delete u.title,i!==void 0){let l=i;u.encode?.labels?.update&&$1(u.encode.labels.update.text)&&(l=o6(i,"datum.label",u.encode.labels.update.text.signal)),uT1(u,"labels","text",{signal:l})}return u}}function aT1(t){return xa(t)||_T(t)?rT1(t):EZ(t)}function rT1(t){return t.children.reduce((e,n)=>e.concat(n.assembleProjections()),EZ(t))}function EZ(t){const e=t.component.projection;if(!e||e.merged)return[];const n=e.combine(),{name:i}=n;if(e.data){const o={signal:`[${e.size.map(l=>l.signal).join(", ")}]`},u=e.data.reduce((l,a)=>{const s=$1(a)?a.signal:`data('${t.lookupDataSource(a)}')`;return it(l,s)||l.push(s),l},[]);if(u.length<=0)throw new Error("Projection's fit didn't find any data sources");return[{name:i,size:o,fit:{signal:u.length>1?`[${u.join(", ")}]`:u[0]},...n}]}else return[{name:i,translate:{signal:"[width / 2, height / 2]"},...n}]}const sT1=["type","clipAngle","clipExtent","center","rotate","precision","reflectX","reflectY","coefficient","distance","fraction","lobes","parallel","radius","ratio","spacing","tilt"];class SZ extends h4{specifiedProjection;size;data;merged=!1;constructor(e,n,i,o){super({...n},{name:e}),this.specifiedProjection=n,this.size=i,this.data=o}get isFit(){return!!this.data}}function AZ(t){t.component.projection=Yt(t)?cT1(t):gT1(t)}function cT1(t){if(t.hasProjection){const e=Ue(t.specifiedProjection),n=!(e&&(e.scale!=null||e.translate!=null)),i=n?[t.getSizeSignalRef("width"),t.getSizeSignalRef("height")]:void 0,o=n?dT1(t):void 0,u=new SZ(t.projectionName(!0),{...Ue(t.config.projection),...e},i,o);return u.get("type")||u.set("type","equalEarth",!1),u}}function dT1(t){const e=[],{encoding:n}=t;for(const i of[[W3,G3],[s3,Y3]])(be(n[i[0]])||be(n[i[1]]))&&e.push({signal:t.getName(`geojson_${e.length}`)});return t.channelHasField(i2)&&t.typedFieldDef(i2).type===pa&&e.push({signal:t.getName(`geojson_${e.length}`)}),e.length===0&&e.push(t.requestDataName(Vt.Main)),e}function fT1(t,e){const n=ok(sT1,o=>!!(!A1(t.explicit,o)&&!A1(e.explicit,o)||A1(t.explicit,o)&&A1(e.explicit,o)&&x2(t.get(o),e.get(o))));if(x2(t.size,e.size)){if(n)return t;if(x2(t.explicit,{}))return e;if(x2(e.explicit,{}))return t}return null}function gT1(t){if(t.children.length===0)return;let e;for(const i of t.children)AZ(i);const n=ok(t.children,i=>{const o=i.component.projection;if(o)if(e){const u=fT1(e,o);return u&&(e=u),!!u}else return e=o,!0;else return!0});if(e&&n){const i=t.projectionName(!0),o=new SZ(i,e.specifiedProjection,e.size,W1(e.data));for(const u of t.children){const l=u.component.projection;l&&(l.isFit&&o.data.push(...u.component.projection.data),u.renameProjection(l.get("name"),i),l.merged=!0)}return o}}function hT1(t,e,n,i){if(_7(e,n)){const o=Yt(t)?t.axis(n)??t.legend(n)??{}:{},u=_1(e,{expr:"datum"}),l=_1(e,{expr:"datum",binSuffix:"end"});return{formulaAs:_1(e,{binSuffix:"range",forAs:!0}),formula:y7(u,l,o.format,o.formatType,i)}}return{}}function CZ(t,e){return`${BX(t)}_${e}`}function pT1(t,e){return{signal:t.getName(`${e}_bins`),extentSignal:t.getName(`${e}_extent`)}}function mT(t,e,n){const i=Hh(n,void 0)??{},o=CZ(i,e);return t.getName(`${o}_bins`)}function mT1(t){return"as"in t}function aj(t,e,n){let i,o;mT1(t)?i=w1(t.as)?[t.as,`${t.as}_end`]:[t.as[0],t.as[1]]:i=[_1(t,{forAs:!0}),_1(t,{binSuffix:"end",forAs:!0})];const u={...Hh(e,void 0)},l=CZ(u,t.field),{signal:a,extentSignal:s}=pT1(n,l);if(Dh(u.extent)){const f=u.extent;o=oZ(n,f.param,f),delete u.extent}const c={bin:u,field:t.field,as:[i],...a?{signal:a}:{},...s?{extentSignal:s}:{},...o?{span:o}:{}};return{key:l,binComponent:c}}class xi extends Ct{bins;clone(){return new xi(null,W1(this.bins))}constructor(e,n){super(e),this.bins=n}static makeFromEncoding(e,n){const i=n.reduceFieldDef((o,u,l)=>{if(Ln(u)&&jt(u.bin)){const{key:a,binComponent:s}=aj(u,u.bin,n);o[a]={...s,...o[a],...hT1(n,u,l,n.config)}}return o},{});return Ot(i)?null:new xi(e,i)}static makeFromTransform(e,n,i){const{key:o,binComponent:u}=aj(n,n.bin,i);return new xi(e,{[o]:u})}merge(e,n){for(const i of g1(e.bins))i in this.bins?(n(e.bins[i].signal,this.bins[i].signal),this.bins[i].as=di([...this.bins[i].as,...e.bins[i].as],at)):this.bins[i]=e.bins[i];for(const i of e.children)e.removeChild(i),i.parent=this;e.remove()}producedFields(){return new Set(de(this.bins).map(e=>e.as).flat(2))}dependentFields(){return new Set(de(this.bins).map(e=>e.field))}hash(){return`Bin ${at(this.bins)}`}assemble(){return de(this.bins).flatMap(e=>{const n=[],[i,...o]=e.as,{extent:u,...l}=e.bin,a={type:"bin",field:r3(e.field),as:i,signal:e.signal,...Dh(u)?{extent:null}:{extent:u},...e.span?{span:{signal:`span(${e.span})`}}:{},...l};!u&&e.extentSignal&&(n.push({type:"extent",field:r3(e.field),signal:e.extentSignal}),a.extent={signal:e.extentSignal}),n.push(a);for(const s of o)for(let c=0;c<2;c++)n.push({type:"formula",expr:_1({field:i[c]},{expr:"datum"}),as:s[c]});return e.formula&&n.push({type:"formula",expr:e.formula,as:e.formulaAs}),n})}}function yT1(t,e,n,i){const o=Yt(i)?i.encoding[Bi(e)]:void 0;if(Ln(n)&&Yt(i)&&OK(n,o,i.markDef,i.config)){t.add(_1(n,{})),t.add(_1(n,{suffix:"end"}));const{mark:u,markDef:l,config:a}=i,s=Cu({fieldDef:n,markDef:l,config:a});y8(u)&&s!==.5&&ae(e)&&(t.add(_1(n,{suffix:Qh})),t.add(_1(n,{suffix:Zh}))),n.bin&&_7(n,e)&&t.add(_1(n,{binSuffix:"range"}))}else if(RX(e)){const u=NX(e);t.add(i.getName(u))}else t.add(_1(n));return R6(n)&&uS1(n.scale?.range)&&t.add(n.scale.range.field),t}function vT1(t,e){for(const n of g1(e)){const i=e[n];for(const o of g1(i))n in t?t[n][o]=new Set([...t[n][o]??[],...i[o]]):t[n]={[o]:i[o]}}}class N3 extends Ct{dimensions;measures;clone(){return new N3(null,new Set(this.dimensions),W1(this.measures))}constructor(e,n,i){super(e),this.dimensions=n,this.measures=i}get groupBy(){return this.dimensions}static makeFromEncoding(e,n){let i=!1;n.forEachFieldDef(l=>{l.aggregate&&(i=!0)});const o={},u=new Set;return!i||(n.forEachFieldDef((l,a)=>{const{aggregate:s,field:c}=l;if(s)if(s==="count")o["*"]??={},o["*"].count=new Set([_1(l,{forAs:!0})]);else{if(Jo(s)||Uu(s)){const f=Jo(s)?"argmin":"argmax",g=s[f];o[g]??={},o[g][f]=new Set([_1({op:f,field:g},{forAs:!0})])}else o[c]??={},o[c][s]=new Set([_1(l,{forAs:!0})]);Ui(a)&&n.scaleDomain(a)==="unaggregated"&&(o[c]??={},o[c].min=new Set([_1({field:c,aggregate:"min"},{forAs:!0})]),o[c].max=new Set([_1({field:c,aggregate:"max"},{forAs:!0})]))}else yT1(u,a,l,n)}),u.size+g1(o).length===0)?null:new N3(e,u,o)}static makeFromTransform(e,n){const i=new Set,o={};for(const u of n.aggregate){const{op:l,field:a,as:s}=u;l&&(l==="count"?(o["*"]??={},o["*"].count=new Set([s||_1(u,{forAs:!0})])):(o[a]??={},o[a][l]??=new Set,o[a][l].add(s||_1(u,{forAs:!0}))))}for(const u of n.groupby??[])i.add(u);return i.size+g1(o).length===0?null:new N3(e,i,o)}merge(e){return wX(this.dimensions,e.dimensions)?(vT1(this.measures,e.measures),!0):(ME1("different dimensions, cannot merge"),!1)}addDimensions(e){e.forEach(this.dimensions.add,this.dimensions)}dependentFields(){return new Set([...this.dimensions,...g1(this.measures)])}producedFields(){const e=new Set;for(const n of g1(this.measures))for(const i of g1(this.measures[n])){const o=this.measures[n][i];o.size===0?e.add(`${i}_${n}`):o.forEach(e.add,e)}return e}hash(){return`Aggregate ${at({dimensions:this.dimensions,measures:this.measures})}`}assemble(){const e=[],n=[],i=[];for(const u of g1(this.measures))for(const l of g1(this.measures[u]))for(const a of this.measures[u][l])i.push(a),e.push(l),n.push(u==="*"?null:r3(u));return{type:"aggregate",groupby:[...this.dimensions].map(r3),ops:e,fields:n,as:i}}}class va extends Ct{model;name;data;column;row;facet;childModel;constructor(e,n,i,o){super(e),this.model=n,this.name=i,this.data=o;for(const u of Q2){const l=n.facet[u];if(l){const{bin:a,sort:s}=l;this[u]={name:n.getName(`${u}_domain`),fields:[_1(l),...jt(a)?[_1(l,{binSuffix:"end"})]:[]],...Ho(s)?{sortField:s}:r1(s)?{sortIndexField:Ul(l,u)}:{}}}}this.childModel=n.child}hash(){let e="Facet";for(const n of Q2)this[n]&&(e+=` ${n.charAt(0)}:${at(this[n])}`);return e}get fields(){const e=[];for(const n of Q2)this[n]?.fields&&e.push(...this[n].fields);return e}dependentFields(){const e=new Set(this.fields);for(const n of Q2)this[n]&&(this[n].sortField&&e.add(this[n].sortField.field),this[n].sortIndexField&&e.add(this[n].sortIndexField));return e}producedFields(){return new Set}getSource(){return this.name}getChildIndependentFieldsWithStep(){const e={};for(const n of f4){const i=this.childModel.component.scales[n];if(i&&!i.merged){const o=i.get("type"),u=i.get("range");if(Fe(o)&&$6(u)){const l=np(this.childModel,n),a=xT(l);a?e[n]=a:m1(vk(n))}}}return e}assembleRowColumnHeaderData(e,n,i){const o={row:"y",column:"x",facet:void 0}[e],u=[],l=[],a=[];o&&i&&i[o]&&(n?(u.push(`distinct_${i[o]}`),l.push("max")):(u.push(i[o]),l.push("distinct")),a.push(`distinct_${i[o]}`));const{sortField:s,sortIndexField:c}=this[e];if(s){const{op:f=Bh,field:g}=s;u.push(g),l.push(f),a.push(_1(s,{forAs:!0}))}else c&&(u.push(c),l.push("max"),a.push(c));return{name:this[e].name,source:n??this.data,transform:[{type:"aggregate",groupby:this[e].fields,...u.length?{fields:u,ops:l,as:a}:{}}]}}assembleFacetHeaderData(e){const{columns:n}=this.model.layout,{layoutHeaders:i}=this.model.component,o=[],u={};for(const s of fT){for(const c of gT){const f=i[s]?.[c]??[];for(const g of f)if(g.axes?.length>0){u[s]=!0;break}}if(u[s]){const c=`length(data("${this.facet.name}"))`,f=s==="row"?n?{signal:`ceil(${c} / ${n})`}:1:n?{signal:`min(${c}, ${n})`}:{signal:c};o.push({name:`${this.facet.name}_${s}`,transform:[{type:"sequence",start:0,stop:f}]})}}const{row:l,column:a}=u;return(l||a)&&o.unshift(this.assembleRowColumnHeaderData("facet",null,e)),o}assemble(){const e=[];let n=null;const i=this.getChildIndependentFieldsWithStep(),{column:o,row:u,facet:l}=this;if(o&&u&&(i.x||i.y)){n=`cross_${this.column.name}_${this.row.name}`;const a=[].concat(i.x??[],i.y??[]),s=a.map(()=>"distinct");e.push({name:n,source:this.data,transform:[{type:"aggregate",groupby:this.fields,fields:a,ops:s}]})}for(const a of[qo,Uo])this[a]&&e.push(this.assembleRowColumnHeaderData(a,n,i));if(l){const a=this.assembleFacetHeaderData(i);a&&e.push(...a)}return e}}function rj(t){return t.startsWith("'")&&t.endsWith("'")||t.startsWith('"')&&t.endsWith('"')?t.slice(1,-1):t}function bT1(t,e){const n=ak(t);if(e==="number")return`toNumber(${n})`;if(e==="boolean")return`toBoolean(${n})`;if(e==="string")return`toString(${n})`;if(e==="date")return`toDate(${n})`;if(e==="flatten")return n;if(e.startsWith("date:")){const i=rj(e.slice(5,e.length));return`timeParse(${n},'${i}')`}else if(e.startsWith("utc:")){const i=rj(e.slice(4,e.length));return`utcParse(${n},'${i}')`}else return m1(Pw1(e)),null}function xT1(t){const e={};return ld(t.filter,n=>{if(fK(n)){let i=null;Sk(n)?i=v2(n.equal):Ck(n)?i=v2(n.lte):Ak(n)?i=v2(n.lt):kk(n)?i=v2(n.gt):Tk(n)?i=v2(n.gte):$k(n)?i=n.range[0]:Mk(n)&&(i=(n.oneOf??n.in)[0]),i&&(M6(i)?e[n.field]="date":ht(i)?e[n.field]="number":w1(i)&&(e[n.field]="string")),n.timeUnit&&(e[n.field]="date")}}),e}function _T1(t){const e={};function n(i){jl(i)?e[i.field]="date":i.type==="quantitative"&&fw1(i.aggregate)?e[i.field]="number":Rl(i.field)>1?i.field in e||(e[i.field]="flatten"):R6(i)&&Ho(i.sort)&&Rl(i.sort.field)>1&&(i.sort.field in e||(e[i.sort.field]="flatten"))}if((Yt(t)||A2(t))&&t.forEachFieldDef((i,o)=>{if(Ln(i))n(i);else{const u=k6(o),l=t.fieldDef(u);n({...i,type:l.type})}}),Yt(t)){const{mark:i,markDef:o,encoding:u}=t;if(qu(i)&&!t.encoding.order){const l=o.orient==="horizontal"?"y":"x",a=u[l];p1(a)&&a.type==="quantitative"&&!(a.field in e)&&(e[a.field]="number")}}return e}function wT1(t){const e={};if(Yt(t)&&t.component.selection)for(const n of g1(t.component.selection)){const i=t.component.selection[n];for(const o of i.project.items)!o.channel&&Rl(o.field)>1&&(e[o.field]="flatten")}return e}class gn extends Ct{_parse;clone(){return new gn(null,W1(this._parse))}constructor(e,n){super(e),this._parse=n}hash(){return`Parse ${at(this._parse)}`}static makeExplicit(e,n,i){let o={};const u=n.data;return!fu(u)&&u?.format?.parse&&(o=u.format.parse),this.makeWithAncestors(e,o,{},i)}static makeWithAncestors(e,n,i,o){for(const a of g1(i)){const s=o.getWithExplicit(a);s.value!==void 0&&(s.explicit||s.value===i[a]||s.value==="derived"||i[a]==="flatten"?delete i[a]:m1(vL(a,i[a],s.value)))}for(const a of g1(n)){const s=o.get(a);s!==void 0&&(s===n[a]?delete n[a]:m1(vL(a,n[a],s)))}const u=new h4(n,i);o.copyAll(u);const l={};for(const a of g1(u.combine())){const s=u.get(a);s!==null&&(l[a]=s)}return g1(l).length===0||o.parseNothing?null:new gn(e,l)}get parse(){return this._parse}merge(e){this._parse={...this._parse,...e.parse},e.remove()}assembleFormatParse(){const e={};for(const n of g1(this._parse)){const i=this._parse[n];Rl(n)===1&&(e[n]=i)}return e}producedFields(){return new Set(g1(this._parse))}dependentFields(){return new Set(g1(this._parse))}assembleTransforms(e=!1){return g1(this._parse).filter(n=>e?Rl(n)>1:!0).map(n=>{const i=bT1(n,this._parse[n]);return i?{type:"formula",expr:i,as:ga(n)}:null}).filter(n=>n!==null)}}class Tu extends Ct{clone(){return new Tu(null)}constructor(e){super(e)}dependentFields(){return new Set}producedFields(){return new Set([P3])}hash(){return"Identifier"}assemble(){return{type:"identifier",as:P3}}}class S7 extends Ct{params;clone(){return new S7(null,this.params)}constructor(e,n){super(e),this.params=n}dependentFields(){return new Set}producedFields(){}hash(){return`Graticule ${at(this.params)}`}assemble(){return{type:"graticule",...this.params===!0?{}:this.params}}}class A7 extends Ct{params;clone(){return new A7(null,this.params)}constructor(e,n){super(e),this.params=n}dependentFields(){return new Set}producedFields(){return new Set([this.params.as??"data"])}hash(){return`Hash ${at(this.params)}`}assemble(){return{type:"sequence",...this.params}}}class g6 extends Ct{_data;_name;_generator;constructor(e){super(null),e??={name:"source"};let n;if(fu(e)||(n=e.format?{...S2(e.format,["parse"])}:{}),v8(e))this._data={values:e.values};else if(Pl(e)){if(this._data={url:e.url},!n.type){let i=/(?:\.([^.]+))?$/.exec(e.url)[1];it(["json","csv","tsv","dsv","topojson"],i)||(i="json"),n.type=i}}else $Q(e)?this._data={values:[{type:"Sphere"}]}:(kQ(e)||fu(e))&&(this._data={});this._generator=fu(e),e.name&&(this._name=e.name),n&&!Ot(n)&&(this._data.format=n)}dependentFields(){return new Set}producedFields(){}get data(){return this._data}hasName(){return!!this._name}get isGenerator(){return this._generator}get dataName(){return this._name}set dataName(e){this._name=e}set parent(e){throw new Error("Source nodes have to be roots.")}remove(){throw new Error("Source nodes are roots and cannot be removed.")}hash(){throw new Error("Cannot hash sources")}assemble(){return{name:this._name,...this._data,transform:[]}}}function yT(t){return t instanceof g6||t instanceof S7||t instanceof A7}class vT{#t;constructor(){this.#t=!1}setModified(){this.#t=!0}get modifiedFlag(){return this.#t}}class D6 extends vT{getNodeDepths(e,n,i){i.set(e,n);for(const o of e.children)this.getNodeDepths(o,n+1,i);return i}optimize(e){const i=[...this.getNodeDepths(e,0,new Map).entries()].sort((o,u)=>u[1]-o[1]);for(const o of i)this.run(o[0]);return this.modifiedFlag}}class bT extends vT{optimize(e){this.run(e);for(const n of e.children)this.optimize(n);return this.modifiedFlag}}class ET1 extends bT{mergeNodes(e,n){const i=n.shift();for(const o of n)e.removeChild(o),o.parent=i,o.remove()}run(e){const n=e.children.map(o=>o.hash()),i={};for(let o=0;o<n.length;o++)i[n[o]]===void 0?i[n[o]]=[e.children[o]]:i[n[o]].push(e.children[o]);for(const o of g1(i))i[o].length>1&&(this.setModified(),this.mergeNodes(e,i[o]))}}class ST1 extends bT{requiresSelectionId;constructor(e){super(),this.requiresSelectionId=e&&dT(e)}run(e){e instanceof Tu&&(this.requiresSelectionId&&(yT(e.parent)||e.parent instanceof N3||e.parent instanceof gn)||(this.setModified(),e.remove()))}}class AT1 extends vT{optimize(e){return this.run(e,new Set),this.modifiedFlag}run(e,n){let i=new Set;e instanceof vi&&(i=e.producedFields(),uk(i,n)&&(this.setModified(),e.removeFormulas(n),e.producedFields.length===0&&e.remove()));for(const o of e.children)this.run(o,new Set([...n,...i]))}}class CT1 extends bT{constructor(){super()}run(e){e instanceof Zn&&!e.isRequired()&&(this.setModified(),e.remove())}}class kT1 extends D6{run(e){if(!yT(e)&&!(e.numChildren()>1)){for(const n of e.children)if(n instanceof gn)if(e instanceof gn)this.setModified(),e.merge(n);else{if(lk(e.producedFields(),n.dependentFields()))continue;this.setModified(),n.swapWithParent()}}}}class TT1 extends D6{run(e){const n=[...e.children],i=e.children.filter(o=>o instanceof gn);if(e.numChildren()>1&&i.length>=1){const o={},u=new Set;for(const l of i){const a=l.parse;for(const s of g1(a))s in o?o[s]!==a[s]&&u.add(s):o[s]=a[s]}for(const l of u)delete o[l];if(!Ot(o)){this.setModified();const l=new gn(e,o);for(const a of n){if(a instanceof gn)for(const s of g1(o))delete a.parse[s];e.removeChild(a),a.parent=l,a instanceof gn&&g1(a.parse).length===0&&a.remove()}}}}}class $T1 extends D6{run(e){e instanceof Zn||e.numChildren()>0||e instanceof va||e instanceof g6||(this.setModified(),e.remove())}}class MT1 extends D6{run(e){const n=e.children.filter(o=>o instanceof vi),i=n.pop();for(const o of n)this.setModified(),i.merge(o)}}class NT1 extends D6{run(e){const n=e.children.filter(o=>o instanceof N3),i={};for(const o of n){const u=at(o.groupBy);u in i||(i[u]=[]),i[u].push(o)}for(const o of g1(i)){const u=i[o];if(u.length>1){const l=u.pop();for(const a of u)l.merge(a)&&(e.removeChild(a),a.parent=l,a.remove(),this.setModified())}}}}class RT1 extends D6{model;constructor(e){super(),this.model=e}run(e){const n=!(yT(e)||e instanceof ya||e instanceof gn||e instanceof Tu),i=[],o=[];for(const u of e.children)u instanceof xi&&(n&&!lk(e.producedFields(),u.dependentFields())?i.push(u):o.push(u));if(i.length>0){const u=i.pop();for(const l of i)u.merge(l,this.model.renameSignal.bind(this.model));this.setModified(),e instanceof xi?e.merge(u,this.model.renameSignal.bind(this.model)):u.swapWithParent()}if(o.length>1){const u=o.pop();for(const l of o)u.merge(l,this.model.renameSignal.bind(this.model));this.setModified()}}}class DT1 extends D6{run(e){const n=[...e.children];if(!Nl(n,l=>l instanceof Zn)||e.numChildren()<=1)return;const o=[];let u;for(const l of n)if(l instanceof Zn){let a=l;for(;a.numChildren()===1;){const[s]=a.children;if(s instanceof Zn)a=s;else break}o.push(...a.children),u?(e.removeChild(l),l.parent=u.parent,u.parent.removeChild(u),u.parent=a,this.setModified()):u=a}else o.push(l);if(o.length){this.setModified();for(const l of o)l.parent.removeChild(l),l.parent=u}}}class O6 extends Ct{transform;clone(){return new O6(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n}addDimensions(e){this.transform.groupby=di(this.transform.groupby.concat(e),n=>n)}dependentFields(){const e=new Set;return this.transform.groupby&&this.transform.groupby.forEach(e.add,e),this.transform.joinaggregate.map(n=>n.field).filter(n=>n!==void 0).forEach(e.add,e),e}producedFields(){return new Set(this.transform.joinaggregate.map(this.getDefaultName))}getDefaultName(e){return e.as??_1(e)}hash(){return`JoinAggregateTransform ${at(this.transform)}`}assemble(){const e=[],n=[],i=[];for(const u of this.transform.joinaggregate)n.push(u.op),i.push(this.getDefaultName(u)),e.push(u.field===void 0?null:u.field);const o=this.transform.groupby;return{type:"joinaggregate",as:i,ops:n,fields:e,...o!==void 0?{groupby:o}:{}}}}class Hl extends Ct{filter;clone(){return new Hl(null,{...this.filter})}constructor(e,n){super(e),this.filter=n}static make(e,n,i){const{config:o,markDef:u}=n,{marks:l,scales:a}=i;if(l==="include-invalid-values"&&a==="include-invalid-values")return null;const s=n.reduceFieldDef((c,f,g)=>{const p=Ui(g)&&n.getScaleComponent(g);if(p){const m=p.get("type"),{aggregate:v}=f,b=jk({scaleChannel:g,markDef:u,config:o,scaleType:m,isCountAggregate:Rh(v)});b!=="show"&&b!=="always-valid"&&(c[f.field]=f)}return c},{});return g1(s).length?new Hl(e,s):null}dependentFields(){return new Set(g1(this.filter))}producedFields(){return new Set}hash(){return`FilterInvalid ${at(this.filter)}`}assemble(){const e=g1(this.filter).reduce((n,i)=>{const o=this.filter[i],u=_1(o,{expr:"datum"});return o!==null&&(o.type==="temporal"?n.push(`(isDate(${u}) || (${cw(u)}))`):o.type==="quantitative"&&n.push(cw(u))),n},[]);return e.length>0?{type:"filter",expr:e.join(" && ")}:null}}function cw(t){return`isValid(${t}) && isFinite(+${t})`}function OT1(t){return t.stack.stackBy.reduce((e,n)=>{const i=n.fieldDef,o=_1(i);return o&&e.push(o),e},[])}function FT1(t){return r1(t)&&t.every(e=>w1(e))&&t.length>1}class Wo extends Ct{_stack;clone(){return new Wo(null,W1(this._stack))}constructor(e,n){super(e),this._stack=n}static makeFromTransform(e,n){const{stack:i,groupby:o,as:u,offset:l="zero"}=n,a=[],s=[];if(n.sort!==void 0)for(const g of n.sort)a.push(g.field),s.push(le(g.order,"ascending"));const c={field:a,order:s};let f;return FT1(u)?f=u:w1(u)?f=[u,`${u}_end`]:f=[`${n.stack}_start`,`${n.stack}_end`],new Wo(e,{dimensionFieldDefs:[],stackField:i,groupby:o,offset:l,sort:c,facetby:[],as:f})}static makeFromEncoding(e,n){const i=n.stack,{encoding:o}=n;if(!i)return null;const{groupbyChannels:u,fieldChannel:l,offset:a,impute:s}=i,c=u.map(m=>{const v=o[m];return j3(v)}).filter(m=>!!m),f=OT1(n),g=n.encoding.order;let p;if(r1(g)||p1(g))p=WX(g);else{const m=FK(g)?g.sort:l==="y"?"descending":"ascending";p=f.reduce((v,b)=>(v.field.includes(b)||(v.field.push(b),v.order.push(m)),v),{field:[],order:[]})}return new Wo(e,{dimensionFieldDefs:c,stackField:n.vgField(l),facetby:[],stackby:f,sort:p,offset:a,impute:s,as:[n.vgField(l,{suffix:"start",forAs:!0}),n.vgField(l,{suffix:"end",forAs:!0})]})}get stack(){return this._stack}addDimensions(e){this._stack.facetby.push(...e)}dependentFields(){const e=new Set;return e.add(this._stack.stackField),this.getGroupbyFields().forEach(e.add,e),this._stack.facetby.forEach(e.add,e),this._stack.sort.field.forEach(e.add,e),e}producedFields(){return new Set(this._stack.as)}hash(){return`Stack ${at(this._stack)}`}getGroupbyFields(){const{dimensionFieldDefs:e,impute:n,groupby:i}=this._stack;return e.length>0?e.map(o=>o.bin?n?[_1(o,{binSuffix:"mid"})]:[_1(o,{}),_1(o,{binSuffix:"end"})]:[_1(o)]).flat():i??[]}assemble(){const e=[],{facetby:n,dimensionFieldDefs:i,stackField:o,stackby:u,sort:l,offset:a,impute:s,as:c}=this._stack;if(s)for(const f of i){const{bandPosition:g=.5,bin:p}=f;if(p){const m=_1(f,{expr:"datum"}),v=_1(f,{expr:"datum",binSuffix:"end"});e.push({type:"formula",expr:`${cw(m)} ? ${g}*${m}+${1-g}*${v} : ${m}`,as:_1(f,{binSuffix:"mid",forAs:!0})})}e.push({type:"impute",field:o,groupby:[...u,...n],key:_1(f,{binSuffix:"mid"}),method:"value",value:0})}return e.push({type:"stack",groupby:[...this.getGroupbyFields(),...n],field:o,sort:l,as:c,offset:a}),e}}class ba extends Ct{transform;clone(){return new ba(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n}addDimensions(e){this.transform.groupby=di(this.transform.groupby.concat(e),n=>n)}dependentFields(){const e=new Set;return(this.transform.groupby??[]).forEach(e.add,e),(this.transform.sort??[]).forEach(n=>e.add(n.field)),this.transform.window.map(n=>n.field).filter(n=>n!==void 0).forEach(e.add,e),e}producedFields(){return new Set(this.transform.window.map(this.getDefaultName))}getDefaultName(e){return e.as??_1(e)}hash(){return`WindowTransform ${at(this.transform)}`}assemble(){const e=[],n=[],i=[],o=[];for(const g of this.transform.window)n.push(g.op),i.push(this.getDefaultName(g)),o.push(g.param===void 0?null:g.param),e.push(g.field===void 0?null:g.field);const u=this.transform.frame,l=this.transform.groupby;if(u&&u[0]===null&&u[1]===null&&n.every(g=>mk(g)))return{type:"joinaggregate",as:i,ops:n,fields:e,...l!==void 0?{groupby:l}:{}};const a=[],s=[];if(this.transform.sort!==void 0)for(const g of this.transform.sort)a.push(g.field),s.push(g.order??"ascending");const c={field:a,order:s},f=this.transform.ignorePeers;return{type:"window",params:o,as:i,ops:n,fields:e,sort:c,...f!==void 0?{ignorePeers:f}:{},...l!==void 0?{groupby:l}:{},...u!==void 0?{frame:u}:{}}}}function zT1(t){function e(n){if(!(n instanceof va)){const i=n.clone();if(i instanceof Zn){const o=fw+i.getSource();i.setSource(o),t.model.component.data.outputNodes[o]=i}else(i instanceof N3||i instanceof Wo||i instanceof ba||i instanceof O6)&&i.addDimensions(t.fields);for(const o of n.children.flatMap(e))o.parent=i;return[i]}return n.children.flatMap(e)}return e}function dw(t){if(t instanceof va)if(t.numChildren()===1&&!(t.children[0]instanceof Zn)){const e=t.children[0];(e instanceof N3||e instanceof Wo||e instanceof ba||e instanceof O6)&&e.addDimensions(t.fields),e.swapWithParent(),dw(t)}else{const e=t.model.component.data.main;kZ(e);const n=zT1(t),i=t.children.map(n).flat();for(const o of i)o.parent=e}else t.children.map(dw)}function kZ(t){if(t instanceof Zn&&t.type===Vt.Main&&t.numChildren()===1){const e=t.children[0];e instanceof va||(e.swapWithParent(),kZ(t))}}const fw="scale_",Ec=5;function gw(t){for(const e of t){for(const n of e.children)if(n.parent!==e)return!1;if(!gw(e.children))return!1}return!0}function y3(t,e){let n=!1;for(const i of e)n=t.optimize(i)||n;return n}function sj(t,e,n){let i=t.sources,o=!1;return o=y3(new CT1,i)||o,o=y3(new ST1(e),i)||o,i=i.filter(u=>u.numChildren()>0),o=y3(new $T1,i)||o,i=i.filter(u=>u.numChildren()>0),n||(o=y3(new kT1,i)||o,o=y3(new RT1(e),i)||o,o=y3(new AT1,i)||o,o=y3(new TT1,i)||o,o=y3(new NT1,i)||o,o=y3(new MT1,i)||o,o=y3(new ET1,i)||o,o=y3(new DT1,i)||o),t.sources=i,o}function LT1(t,e){gw(t.sources);let n=0,i=0;for(let o=0;o<Ec&&sj(t,e,!0);o++)n++;t.sources.map(dw);for(let o=0;o<Ec&&sj(t,e,!1);o++)i++;gw(t.sources),Math.max(n,i)===Ec&&m1(`Maximum optimization runs(${Ec}) reached.`)}class ke{constructor(e){Object.defineProperty(this,"signal",{enumerable:!0,get:e})}signal;static fromName(e,n){return new ke(()=>e(n))}}function TZ(t){Yt(t)?jT1(t):PT1(t)}function jT1(t){const e=t.component.scales;for(const n of g1(e)){const i=BT1(t,n);if(e[n].setWithExplicit("domains",i),qT1(t,n),t.component.data.isFaceted){let u=t;for(;!A2(u)&&u.parent;)u=u.parent;if(u.component.resolve.scale[n]==="shared")for(const a of i.value)Do(a)&&(a.data=fw+a.data.replace(fw,""))}}}function PT1(t){for(const n of t.children)TZ(n);const e=t.component.scales;for(const n of g1(e)){let i,o=null;for(const u of t.children){const l=u.component.scales[n];if(l){i===void 0?i=l.getWithExplicit("domains"):i=ku(i,l.getWithExplicit("domains"),"domains","scale",hw);const a=l.get("selectionExtent");o&&a&&o.param!==a.param&&m1(Rw1),o=a}}e[n].setWithExplicit("domains",i),o&&e[n].set("selectionExtent",o,!0)}}function IT1(t,e,n,i){if(t==="unaggregated"){const{valid:o,reason:u}=cj(e,n);if(!o){m1(u);return}}else if(t===void 0&&i.useUnaggregatedDomain){const{valid:o}=cj(e,n);if(o)return"unaggregated"}return t}function BT1(t,e){const n=t.getScaleComponent(e).get("type"),{encoding:i}=t,o=IT1(t.scaleDomain(e),t.typedFieldDef(e),n,t.config.scale);return o!==t.scaleDomain(e)&&(t.specifiedScales[e]={...t.specifiedScales[e],domain:o}),e==="x"&&be(i.x2)?be(i.x)?ku(U4(n,o,t,"x"),U4(n,o,t,"x2"),"domain","scale",hw):U4(n,o,t,"x2"):e==="y"&&be(i.y2)?be(i.y)?ku(U4(n,o,t,"y"),U4(n,o,t,"y2"),"domain","scale",hw):U4(n,o,t,"y2"):U4(n,o,t,e)}function UT1(t,e,n){return t.map(i=>({signal:`{data: ${Gh(i,{timeUnit:n,type:e})}}`}))}function xb(t,e,n){const i=Oe(n)?.unit;return e==="temporal"||i?UT1(t,e,i):[t]}function U4(t,e,n,i){const{encoding:o,markDef:u,mark:l,config:a,stack:s}=n,c=be(o[i]),{type:f}=c,g=c.timeUnit,p=FC1({invalid:ki("invalid",u,a),isPath:qu(l)});if(oS1(e)){const b=U4(t,void 0,n,i),x=xb(e.unionWith,f,g);return li([...x,...b.value])}else{if($1(e))return li([e]);if(e&&e!=="unaggregated"&&!vK(e))return li(xb(e,f,g))}if(s&&i===s.fieldChannel){if(s.offset==="normalize")return p2([[0,1]]);const b=n.requestDataName(p);return p2([{data:b,field:n.vgField(i,{suffix:"start"})},{data:b,field:n.vgField(i,{suffix:"end"})}])}const m=Ui(i)&&p1(c)?HT1(n,i,t):void 0;if(qi(c)){const b=xb([c.datum],f,g);return p2(b)}const v=c;if(e==="unaggregated"){const{field:b}=c;return p2([{data:n.requestDataName(p),field:_1({field:b,aggregate:"min"})},{data:n.requestDataName(p),field:_1({field:b,aggregate:"max"})}])}else if(jt(v.bin)){if(Fe(t))return p2(t==="bin-ordinal"?[]:[{data:p8(m)?n.requestDataName(p):n.requestDataName(Vt.Raw),field:n.vgField(i,_7(v,i)?{binSuffix:"range"}:{}),sort:m===!0||!E1(m)?{field:n.vgField(i,{}),op:"min"}:m}]);{const{bin:b}=v;if(jt(b)){const x=mT(n,v.field,b);return p2([new ke(()=>{const w=n.getSignalName(x);return`[${w}.start, ${w}.stop]`})])}else return p2([{data:n.requestDataName(p),field:n.vgField(i,{})}])}}else if(v.timeUnit&&it(["time","utc"],t)){const b=o[Bi(i)];if(OK(v,b,u,a)){const x=n.requestDataName(p),w=Cu({fieldDef:v,fieldDef2:b,markDef:u,config:a}),S=y8(l)&&w!==.5&&ae(i);return p2([{data:x,field:n.vgField(i,S?{suffix:Qh}:{})},{data:x,field:n.vgField(i,{suffix:S?Zh:"end"})}])}}return p2(m?[{data:p8(m)?n.requestDataName(p):n.requestDataName(Vt.Raw),field:n.vgField(i),sort:m}]:[{data:n.requestDataName(p),field:n.vgField(i)}])}function _b(t,e){const{op:n,field:i,order:o}=t;return{op:n??(e?"sum":Bh),...i?{field:r3(i)}:{},...o?{order:o}:{}}}function qT1(t,e){const n=t.component.scales[e],i=t.specifiedScales[e].domain,o=t.fieldDef(e)?.bin,u=vK(i)?i:void 0,l=T6(o)&&Dh(o.extent)?o.extent:void 0;(u||l)&&n.set("selectionExtent",u??l,!0)}function HT1(t,e,n){if(!Fe(n))return;const i=t.fieldDef(e),o=i.sort;if(RK(o))return{op:"min",field:Ul(i,e),order:"ascending"};const{stack:u}=t,l=u?new Set([...u.groupbyFields,...u.stackBy.map(a=>a.fieldDef.field)]):void 0;if(Ho(o)){const a=u&&!l.has(o.field);return _b(o,a)}else if(FS1(o)){const{encoding:a,order:s}=o,c=t.fieldDef(a),{aggregate:f,field:g}=c,p=u&&!l.has(g);if(Jo(f)||Uu(f))return _b({field:_1(c),order:s},p);if(mk(f)||!f)return _b({op:f,field:g,order:s},p)}else{if(o==="descending")return{op:"min",field:t.vgField(e),order:"descending"};if(it(["ascending",void 0],o))return!0}}function cj(t,e){const{aggregate:n,type:i}=t;return n?w1(n)&&!hw1.has(n)?{valid:!1,reason:aE1(n)}:i==="quantitative"&&e==="log"?{valid:!1,reason:rE1(t)}:{valid:!0}:{valid:!1,reason:lE1(t)}}function hw(t,e,n,i){return t.explicit&&e.explicit&&m1(gE1(n,i,t.value,e.value)),{explicit:t.explicit,value:[...t.value,...e.value]}}function GT1(t){const e=di(t.map(l=>{if(Do(l)){const{sort:a,...s}=l;return s}return l}),at),n=di(t.map(l=>{if(Do(l)){const a=l.sort;return a!==void 0&&!p8(a)&&("op"in a&&a.op==="count"&&delete a.field,a.order==="ascending"&&delete a.order),a}}).filter(l=>l!==void 0),at);if(e.length===0)return;if(e.length===1){const l=t[0];if(Do(l)&&n.length>0){let a=n[0];if(n.length>1){m1(xL);const s=n.filter(c=>E1(c)&&"op"in c&&c.op!=="min");n.every(c=>E1(c)&&"op"in c)&&s.length===1?a=s[0]:a=!0}else if(E1(a)&&"field"in a){const s=a.field;l.field===s&&(a=a.order?{order:a.order}:!0)}return{...l,sort:a}}return l}const i=di(n.map(l=>p8(l)||!("op"in l)||w1(l.op)&&A1(cw1,l.op)?l:(m1(pE1(l)),!0)),at);let o;i.length===1?o=i[0]:i.length>1&&(m1(xL),o=!0);const u=di(t.map(l=>Do(l)?l.data:null),l=>l);return u.length===1&&u[0]!==null?{data:u[0],fields:e.map(a=>a.field),...o?{sort:o}:{}}:{fields:e,...o?{sort:o}:{}}}function xT(t){if(Do(t)&&w1(t.field))return t.field;if(pw1(t)){let e;for(const n of t.fields)if(Do(n)&&w1(n.field)){if(!e)e=n.field;else if(e!==n.field)return m1(mE1),e}return m1(yE1),e}else if(mw1(t)){m1(vE1);const e=t.fields[0];return w1(e)?e:void 0}}function np(t,e){const i=t.component.scales[e].get("domains").map(o=>(Do(o)&&(o.data=t.lookupDataSource(o.data)),o));return GT1(i)}function $Z(t){return xa(t)||_T(t)?t.children.reduce((e,n)=>e.concat($Z(n)),dj(t)):dj(t)}function dj(t){return g1(t.component.scales).reduce((e,n)=>{const i=t.component.scales[n];if(i.merged)return e;const o=i.combine(),{name:u,type:l,selectionExtent:a,domains:s,range:c,reverse:f,...g}=o,p=WT1(o.range,u,n,t),m=np(t,n),v=a?WC1(t,a,i,m):null;return e.push({name:u,type:l,...m?{domain:m}:{},...v?{domainRaw:v}:{},range:p,...f!==void 0?{reverse:f}:{},...g}),e},[])}function WT1(t,e,n,i){if(ae(n)){if($6(t))return{step:{signal:`${e}_step`}}}else if(E1(t)&&Do(t))return{...t,data:i.lookupDataSource(t.data)};return t}class MZ extends h4{merged=!1;constructor(e,n){super({},{name:e}),this.setWithExplicit("type",n)}domainHasZero(){const e=this.get("type");if(it([qe.LOG,qe.TIME,qe.UTC],e))return"definitely-not";const n=this.get("zero");if(n===!0||n===void 0&&it([qe.LINEAR,qe.SQRT,qe.POW],e))return"definitely";const i=this.get("domains");if(i.length>0){let o=!1,u=!1,l=!1;for(const a of i){if(r1(a)){const s=a[0],c=a[a.length-1];if(ht(s)&&ht(c))if(s<=0&&c>=0){o=!0;continue}else{u=!0;continue}}l=!0}if(o)return"definitely";if(u&&!l)return"definitely-not"}return"maybe"}}const YT1=["range","scheme"];function VT1(t){const e=t.component.scales;for(const n of pk){const i=e[n];if(!i)continue;const o=XT1(n,t);i.setWithExplicit("range",o)}}function fj(t,e){const n=t.fieldDef(e);if(n?.bin){const{bin:i,field:o}=n,u=o2(e),l=t.getName(u);if(E1(i)&&i.binned&&i.step!==void 0)return new ke(()=>{const a=t.scaleName(e),s=`(domain("${a}")[1] - domain("${a}")[0]) / ${i.step}`;return`${t.getSignalName(l)} / (${s})`});if(jt(i)){const a=mT(t,o,i);return new ke(()=>{const s=t.getSignalName(a),c=`(${s}.stop - ${s}.start) / ${s}.step`;return`${t.getSignalName(l)} / (${c})`})}}}function XT1(t,e){const n=e.specifiedScales[t],{size:i}=e,u=e.getScaleComponent(t).get("type");for(const g of YT1)if(n[g]!==void 0){const p=V_(u,g),m=bK(t,g);if(!p)m1(JX(u,g,t));else if(m)m1(m);else switch(g){case"range":{const v=n.range;if(r1(v)){if(ae(t))return li(v.map(b=>{if(b==="width"||b==="height"){const x=e.getName(b),w=e.getSignalName.bind(e);return ke.fromName(w,x)}return b}))}else if(E1(v))return li({data:e.requestDataName(Vt.Main),field:v.field,sort:{op:"min",field:e.vgField(t)}});return li(v)}case"scheme":return li(KT1(n[g]))}}const l=t===Ht||t==="xOffset"?"width":"height",a=i[l];if($i(a)){if(ae(t))if(Fe(u)){const g=RZ(a,e,t);if(g)return li({step:g})}else m1(tK(l));else if(h7(t)){const g=t===zu?"x":"y";if(e.getScaleComponent(g).get("type")==="band"){const v=DZ(a,u);if(v)return li(v)}}}const{rangeMin:s,rangeMax:c}=n,f=QT1(t,e);return(s!==void 0||c!==void 0)&&V_(u,"rangeMin")&&r1(f)&&f.length===2?li([s??f[0],c??f[1]]):p2(f)}function KT1(t){return iS1(t)?{scheme:t.name,...S2(t,["name"])}:{scheme:t}}function NZ(t,e,n,{center:i}={}){const o=o2(t),u=e.getName(o),l=e.getSignalName.bind(e);return t===Le&&z3(n)?i?[ke.fromName(a=>`${l(a)}/2`,u),ke.fromName(a=>`-${l(a)}/2`,u)]:[ke.fromName(l,u),0]:i?[ke.fromName(a=>`-${l(a)}/2`,u),ke.fromName(a=>`${l(a)}/2`,u)]:[0,ke.fromName(l,u)]}function QT1(t,e){const{size:n,config:i,mark:o,encoding:u}=e,{type:l}=be(u[t]),s=e.getScaleComponent(t).get("type"),{domain:c,domainMid:f}=e.specifiedScales[t];switch(t){case Ht:case Le:{if(it(["point","band"],s)){const g=OZ(t,n,i.view);if($i(g))return{step:RZ(g,e,t)}}return NZ(t,e,s)}case zu:case ha:return ZT1(t,e,s);case c4:{const g=e$1(o,i),p=n$1(o,n,e,i);return Fl(s)?t$1(g,p,JT1(s,i,c,t)):[g,p]}case d3:return[0,Math.PI*2];case C6:return[0,360];case H3:return[0,new ke(()=>{const g=e.getSignalName(A2(e.parent)?"child_width":"width"),p=e.getSignalName(A2(e.parent)?"child_height":"height");return`min(${g},${p})/2`})];case Lu:return{step:1e3/i.scale.framesPerSecond};case Iu:return[i.scale.minStrokeWidth,i.scale.maxStrokeWidth];case Bu:return[[1,0],[4,2],[2,1],[1,1],[1,2,4,2]];case i2:return"symbol";case n2:case Pi:case Ii:return s==="ordinal"?l==="nominal"?"category":"ordinal":f!==void 0?"diverging":o==="rect"||o==="geoshape"?"heatmap":"ramp";case d4:case ju:case Pu:return[i.scale.minOpacity,i.scale.maxOpacity]}}function RZ(t,e,n){const{encoding:i}=e,o=e.getScaleComponent(n),u=dk(n),l=i[u];if(fQ({step:t,offsetIsDiscrete:V1(l)&&Nk(l.type)})==="offset"&&WK(i,u)){const s=e.getScaleComponent(u);let f=`domain('${e.scaleName(u)}').length`;if(s.get("type")==="band"){const p=s.get("paddingInner")??s.get("padding")??0,m=s.get("paddingOuter")??s.get("padding")??0;f=`bandspace(${f}, ${p}, ${m})`}const g=o.get("paddingInner")??o.get("padding");return{signal:`${t.step} * ${f} / (1-${_w1(g)})`}}else return t.step}function DZ(t,e){if(fQ({step:t,offsetIsDiscrete:Fe(e)})==="offset")return{step:t.step}}function ZT1(t,e,n){const i=t===zu?"x":"y",o=e.getScaleComponent(i);if(!o)return NZ(i,e,n,{center:!0});const u=o.get("type"),l=e.scaleName(i),{markDef:a,config:s}=e;if(u==="band"){const c=OZ(i,e.size,e.config.view);if($i(c)){const f=DZ(c,n);if(f)return f}return[0,{signal:`bandwidth('${l}')`}]}else{const c=e.encoding[i];if(p1(c)&&c.timeUnit){const f=cK(c.timeUnit,v=>`scale('${l}', ${v})`),g=e.config.scale.bandWithNestedOffsetPaddingInner,p=Cu({fieldDef:c,markDef:a,config:s})-.5,m=p!==0?` + ${p}`:"";if(g){const v=$1(g)?`${g.signal}/2${m}`:`${g/2+p}`,b=$1(g)?`(1 - ${g.signal}/2)${m}`:`${1-g/2+p}`;return[{signal:`${v} * (${f})`},{signal:`${b} * (${f})`}]}return[0,{signal:f}]}return xX(`Cannot use ${t} scale if ${i} scale is not discrete.`)}}function OZ(t,e,n){const i=t===Ht?"width":"height",o=e[i];return o!==void 0?o:qf(n,i)}function JT1(t,e,n,i){switch(t){case"quantile":return e.scale.quantileCount;case"quantize":return e.scale.quantizeCount;case"threshold":return n!==void 0&&r1(n)?n.length+1:(m1(kE1(i)),3)}}function t$1(t,e,n){const i=()=>{const o=T3(e),u=T3(t),l=`(${o} - ${u}) / (${n} - 1)`;return`sequence(${u}, ${o} + ${l}, ${l})`};return $1(e)?new ke(i):{signal:i()}}function e$1(t,e){switch(t){case"bar":case"tick":return e.scale.minBandSize;case"line":case"trail":case"rule":return e.scale.minStrokeWidth;case"text":return e.scale.minFontSize;case"point":case"square":case"circle":return e.scale.minSize}throw new Error(Oh("size",t))}const gj=.95;function n$1(t,e,n,i){const o={x:fj(n,"x"),y:fj(n,"y")};switch(t){case"bar":case"tick":{if(i.scale.maxBandSize!==void 0)return i.scale.maxBandSize;const u=hj(e,o,i.view);return ht(u)?u-1:new ke(()=>`${u.signal} - 1`)}case"line":case"trail":case"rule":return i.scale.maxStrokeWidth;case"text":return i.scale.maxFontSize;case"point":case"square":case"circle":{if(i.scale.maxSize)return i.scale.maxSize;const u=hj(e,o,i.view);return ht(u)?Math.pow(gj*u,2):new ke(()=>`pow(${gj} * ${u.signal}, 2)`)}}throw new Error(Oh("size",t))}function hj(t,e,n){const i=$i(t.width)?t.width.step:Z_(n,"width"),o=$i(t.height)?t.height.step:Z_(n,"height");return e.x||e.y?new ke(()=>`min(${[e.x?e.x.signal:i,e.y?e.y.signal:o].join(", ")})`):Math.min(i,o)}function FZ(t,e){Yt(t)?i$1(t,e):LZ(t,e)}function i$1(t,e){const n=t.component.scales,{config:i,encoding:o,markDef:u,specifiedScales:l}=t;for(const a of g1(n)){const s=l[a],c=n[a],f=t.getScaleComponent(a),g=be(o[a]),p=s[e],m=f.get("type"),v=f.get("padding"),b=f.get("paddingInner"),x=V_(m,e),w=bK(a,e);if(p!==void 0&&(x?w&&m1(w):m1(JX(m,e,a))),x&&w===void 0)if(p!==void 0){const S=g.timeUnit,A=g.type;switch(e){case"domainMax":case"domainMin":M6(s[e])||A==="temporal"||S?c.set(e,{signal:Gh(s[e],{type:A,timeUnit:S})},!0):c.set(e,s[e],!0);break;default:c.copyKeyFromObject(e,s)}}else{const S=h1(pj,e)?pj[e]({model:t,channel:a,fieldOrDatumDef:g,scaleType:m,scalePadding:v,scalePaddingInner:b,domain:s.domain,domainMin:s.domainMin,domainMax:s.domainMax,markDef:u,config:i,hasNestedOffsetScale:YK(o,a),hasSecondaryRangeChannel:!!o[Bi(a)]}):i.scale[e];S!==void 0&&c.set(e,S,!1)}}}const pj={bins:({model:t,fieldOrDatumDef:e})=>p1(e)?o$1(t,e):void 0,interpolate:({channel:t,fieldOrDatumDef:e})=>u$1(t,e.type),nice:({scaleType:t,channel:e,domain:n,domainMin:i,domainMax:o,fieldOrDatumDef:u})=>l$1(t,e,n,i,o,u),padding:({channel:t,scaleType:e,fieldOrDatumDef:n,markDef:i,config:o})=>a$1(t,e,o.scale,n,i,o.bar),paddingInner:({scalePadding:t,channel:e,markDef:n,scaleType:i,config:o,hasNestedOffsetScale:u})=>r$1(t,e,n.type,i,o.scale,u),paddingOuter:({scalePadding:t,channel:e,scaleType:n,scalePaddingInner:i,config:o,hasNestedOffsetScale:u})=>s$1(t,e,n,i,o.scale,u),reverse:({fieldOrDatumDef:t,scaleType:e,channel:n,config:i})=>{const o=p1(t)?t.sort:void 0;return c$1(e,o,n,i.scale)},zero:({channel:t,fieldOrDatumDef:e,domain:n,markDef:i,scaleType:o,config:u,hasSecondaryRangeChannel:l})=>d$1(t,e,n,i,o,u.scale,l)};function zZ(t){Yt(t)?VT1(t):LZ(t,"range")}function LZ(t,e){const n=t.component.scales;for(const i of t.children)e==="range"?zZ(i):FZ(i,e);for(const i of g1(n)){let o;for(const u of t.children){const l=u.component.scales[i];if(l){const a=l.getWithExplicit(e);o=ku(o,a,e,"scale",CQ((s,c)=>{switch(e){case"range":return s.step&&c.step?s.step-c.step:0}return 0}))}}n[i].setWithExplicit(e,o)}}function o$1(t,e){const n=e.bin;if(jt(n)){const i=mT(t,e.field,n);return new ke(()=>t.getSignalName(i))}else if(Be(n)&&T6(n)&&n.step!==void 0)return{step:n.step}}function u$1(t,e){if(it([n2,Pi,Ii],t)&&e!=="nominal")return"hcl"}function l$1(t,e,n,i,o,u){if(!(j3(u)?.bin||r1(n)||o!=null||i!=null||it([qe.TIME,qe.UTC],t)))return ae(e)?!0:void 0}function a$1(t,e,n,i,o,u){if(ae(t)){if(fi(e)){if(n.continuousPadding!==void 0)return n.continuousPadding;const{type:l,orient:a}=o;if(l==="bar"&&!(p1(i)&&(i.bin||i.timeUnit))&&(a==="vertical"&&t==="x"||a==="horizontal"&&t==="y"))return u.continuousBandSize}if(e===qe.POINT)return n.pointPadding}}function r$1(t,e,n,i,o,u=!1){if(t===void 0){if(ae(e)){const{bandPaddingInner:l,barBandPaddingInner:a,rectBandPaddingInner:s,tickBandPaddingInner:c,bandWithNestedOffsetPaddingInner:f}=o;return u?f:le(l,n==="bar"?a:n==="tick"?c:s)}else if(h7(e)&&i===qe.BAND)return o.offsetBandPaddingInner}}function s$1(t,e,n,i,o,u=!1){if(t===void 0){if(ae(e)){const{bandPaddingOuter:l,bandWithNestedOffsetPaddingOuter:a}=o;if(u)return a;if(n===qe.BAND)return le(l,$1(i)?{signal:`${i.signal}/2`}:i/2)}else if(h7(e)){if(n===qe.POINT)return .5;if(n===qe.BAND)return o.offsetBandPaddingOuter}}}function c$1(t,e,n,i){if(n==="x"&&i.xReverse!==void 0)return z3(t)&&e==="descending"?$1(i.xReverse)?{signal:`!${i.xReverse.signal}`}:!i.xReverse:i.xReverse;if(z3(t)&&e==="descending")return!0}function d$1(t,e,n,i,o,u,l){if(!!n&&n!=="unaggregated"&&z3(o)){if(r1(n)){const s=n[0],c=n[n.length-1];if(ht(s)&&s<=0&&ht(c)&&c>=0)return!0}return!1}if(t==="size"&&e.type==="quantitative"&&!Fl(o))return!0;if(!(p1(e)&&e.bin)&&it([...f4,...ew1],t)){const{orient:s,type:c}=i;return it(["bar","area","line","trail"],c)&&(s==="horizontal"&&t==="y"||s==="vertical"&&t==="x")?!1:it(["bar","area"],c)&&!l?!0:u?.zero}return!1}function f$1(t,e,n,i,o=!1){const u=g$1(e,n,i,o),{type:l}=t;return Ui(e)?l!==void 0?cS1(e,l)?p1(n)&&!sS1(l,n.type)?(m1(dE1(l,u)),u):l:(m1(cE1(e,l,u)),u):u:null}function g$1(t,e,n,i){switch(e.type){case"nominal":case"ordinal":{if(el(t)||sb(t)==="discrete")return t==="shape"&&e.type==="ordinal"&&m1(cb(t,"ordinal")),"ordinal";if(rb(t))return"band";if(ae(t)||h7(t)){if(it(["rect","bar","image","rule","tick"],n.type)||i)return"band"}else if(n.type==="arc"&&t in hk)return"band";const o=n[o2(t)];return s6(o)||Ll(e)&&e.axis?.tickBand?"band":"point"}case"temporal":return el(t)?"time":sb(t)==="discrete"?(m1(cb(t,"temporal")),"ordinal"):p1(e)&&e.timeUnit&&Oe(e.timeUnit).utc?"utc":rb(t)?"band":"time";case"quantitative":return el(t)?p1(e)&&jt(e.bin)?"bin-ordinal":"linear":sb(t)==="discrete"?(m1(cb(t,"quantitative")),"ordinal"):rb(t)?"band":"linear";case"geojson":return}throw new Error(QX(e.type))}function h$1(t,{ignoreRange:e}={}){jZ(t),TZ(t);for(const n of rS1)FZ(t,n);e||zZ(t)}function jZ(t){Yt(t)?t.component.scales=p$1(t):t.component.scales=y$1(t)}function p$1(t){const{encoding:e,mark:n,markDef:i}=t,o={};for(const u of pk){const l=be(e[u]);if(l&&n===wK&&u===i2&&l.type===pa)continue;let a=l&&l.scale;if(l&&a!==null&&a!==!1){a??={};const s=YK(e,u),c=f$1(a,u,l,i,s);o[u]=new MZ(t.scaleName(`${u}`,!0),{value:c,explicit:a.type===c})}}return o}const m$1=CQ((t,e)=>wL(t)-wL(e));function y$1(t){const e=t.component.scales={},n={},i=t.component.resolve;for(const o of t.children){jZ(o);for(const u of g1(o.component.scales))if(i.scale[u]??=pZ(u,t),i.scale[u]==="shared"){const l=n[u],a=o.component.scales[u].getWithExplicit("type");l?ZE1(l.value,a.value)?n[u]=ku(l,a,"type","scale",m$1):(i.scale[u]="independent",delete n[u]):n[u]=a}}for(const o of g1(n)){const u=t.scaleName(o,!0),l=n[o];e[o]=new MZ(u,l);for(const a of t.children){const s=a.component.scales[o];s&&(a.renameScale(s.get("name"),u),s.merged=!0)}}return e}class wb{nameMap;constructor(){this.nameMap={}}rename(e,n){this.nameMap[e]=n}has(e){return this.nameMap[e]!==void 0}get(e){for(;this.nameMap[e]&&e!==this.nameMap[e];)e=this.nameMap[e];return e}}function Yt(t){return t?.type==="unit"}function A2(t){return t?.type==="facet"}function _T(t){return t?.type==="concat"}function xa(t){return t?.type==="layer"}class wT{type;parent;config;name;size;title;description;data;transforms;layout;scaleNameMap;projectionNameMap;signalNameMap;component;view;constructor(e,n,i,o,u,l,a){this.type=n,this.parent=i,this.config=u,this.parent=i,this.config=u,this.view=Ue(a),this.name=e.name??o,this.title=V4(e.title)?{text:e.title}:e.title?Ue(e.title):void 0,this.scaleNameMap=i?i.scaleNameMap:new wb,this.projectionNameMap=i?i.projectionNameMap:new wb,this.signalNameMap=i?i.signalNameMap:new wb,this.data=e.data,this.description=e.description,this.transforms=EC1(e.transform??[]),this.layout=n==="layer"||n==="unit"?{}:kA1(e,n,u),this.component={data:{sources:i?i.component.data.sources:[],outputNodes:i?i.component.data.outputNodes:{},outputNodeRefCounts:i?i.component.data.outputNodeRefCounts:{},isFaceted:Uh(e)||i?.component.data.isFaceted&&e.data===void 0},layoutSize:new h4,layoutHeaders:{row:{},column:{},facet:{}},mark:null,resolve:{scale:{},axis:{},legend:{},...l?W1(l):{}},selection:null,scales:null,projection:null,axes:{},legends:{}}}get width(){return this.getSizeSignalRef("width")}get height(){return this.getSizeSignalRef("height")}parse(){this.parseScale(),this.parseLayoutSize(),this.renameTopLevelLayoutSizeSignal(),this.parseSelections(),this.parseProjection(),this.parseData(),this.parseAxesAndHeaders(),this.parseLegends(),this.parseMarkGroup()}parseScale(){h$1(this)}parseProjection(){AZ(this)}renameTopLevelLayoutSizeSignal(){this.getName("width")!=="width"&&this.renameSignal(this.getName("width"),"width"),this.getName("height")!=="height"&&this.renameSignal(this.getName("height"),"height")}parseLegends(){xZ(this)}assembleEncodeFromView(e){const{style:n,...i}=e,o={};for(const u of g1(i)){const l=i[u];l!==void 0&&(o[u]=It(l))}return o}assembleGroupEncodeEntry(e){let n={};return this.view&&(n=this.assembleEncodeFromView(this.view)),!e&&(this.description&&(n.description=It(this.description)),this.type==="unit"||this.type==="layer")?{width:this.getSizeSignalRef("width"),height:this.getSizeSignalRef("height"),...n}:Ot(n)?void 0:n}assembleLayout(){if(!this.layout)return;const{spacing:e,...n}=this.layout,{component:i,config:o}=this,u=jk1(i.layoutHeaders,o);return{padding:e,...this.assembleDefaultLayout(),...n,...u?{titleBand:u}:{}}}assembleDefaultLayout(){return{}}assembleHeaderMarks(){const{layoutHeaders:e}=this.component;let n=[];for(const i of Q2)e[i].title&&n.push(Rk1(this,i));for(const i of fT)n=n.concat(Dk1(this,i));return n}assembleAxes(){return bk1(this.component.axes,this.config)}assembleLegends(){return wZ(this)}assembleProjections(){return aT1(this)}assembleTitle(){const{encoding:e,...n}=this.title??{},i={...UX(this.config.title).nonMarkTitleProperties,...n,...e?{encode:{update:e}}:{}};if(i.text)return it(["unit","layer"],this.type)?it(["middle",void 0],i.anchor)&&(i.frame??="group"):i.anchor??="start",Ot(i)?void 0:i}assembleGroup(e=[]){const n={};e=e.concat(this.assembleSignals()),e.length>0&&(n.signals=e);const i=this.assembleLayout();i&&(n.layout=i),n.marks=[].concat(this.assembleHeaderMarks(),this.assembleMarks());const o=!this.parent||A2(this.parent)?$Z(this):[];o.length>0&&(n.scales=o);const u=this.assembleAxes();u.length>0&&(n.axes=u);const l=this.assembleLegends();return l.length>0&&(n.legends=l),n}getName(e){return qt((this.name?`${this.name}_`:"")+e)}getDataName(e){return this.getName(Vt[e].toLowerCase())}requestDataName(e){const n=this.getDataName(e),i=this.component.data.outputNodeRefCounts;return i[n]=(i[n]||0)+1,n}getSizeSignalRef(e){if(A2(this.parent)){const n=gZ(e),i=Nh(n),o=this.component.scales[i];if(o&&!o.merged){const u=o.get("type"),l=o.get("range");if(Fe(u)&&$6(l)){const a=o.get("name"),s=np(this,i),c=xT(s);if(c){const f=_1({aggregate:"distinct",field:c},{expr:"datum"});return{signal:fZ(a,o,f)}}else return m1(vk(i)),null}}}return{signal:this.signalNameMap.get(this.getName(e))}}lookupDataSource(e){const n=this.component.data.outputNodes[e];return n?n.getSource():e}getSignalName(e){return this.signalNameMap.get(e)}renameSignal(e,n){this.signalNameMap.rename(e,n)}renameScale(e,n){this.scaleNameMap.rename(e,n)}renameProjection(e,n){this.projectionNameMap.rename(e,n)}scaleName(e,n){if(n)return this.getName(e);if(OX(e)&&Ui(e)&&this.component.scales[e]||this.scaleNameMap.has(this.getName(e)))return this.scaleNameMap.get(this.getName(e))}projectionName(e){if(e)return this.getName("projection");if(this.component.projection&&!this.component.projection.merged||this.projectionNameMap.has(this.getName("projection")))return this.projectionNameMap.get(this.getName("projection"))}getScaleComponent(e){if(!this.component.scales)throw new Error("getScaleComponent cannot be called before parseScale(). Make sure you have called parseScale or use parseUnitModelWithScale().");const n=this.component.scales[e];return n&&!n.merged?n:this.parent?this.parent.getScaleComponent(e):void 0}getScaleType(e){const n=this.getScaleComponent(e);return n?n.get("type"):void 0}getSelectionComponent(e,n){let i=this.component.selection[e];if(!i&&this.parent&&(i=this.parent.getSelectionComponent(e,n)),!i)throw new Error(Cw1(n));return i}hasAxisOrientSignalRef(){return this.component.axes.x?.some(e=>e.hasOrientSignalRef())||this.component.axes.y?.some(e=>e.hasOrientSignalRef())}}class PZ extends wT{vgField(e,n={}){const i=this.fieldDef(e);if(i)return _1(i,n)}reduceFieldDef(e,n){return nA1(this.getMapping(),(i,o,u)=>{const l=j3(o);return l?e(i,l,u):i},n)}forEachFieldDef(e,n){Yk(this.getMapping(),(i,o)=>{const u=j3(i);u&&e(u,o)},n)}}class ip extends Ct{transform;clone(){return new ip(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n);const i=this.transform.as??[void 0,void 0];this.transform.as=[i[0]??"value",i[1]??"density"];const o=this.transform.resolve??"shared";this.transform.resolve=o}dependentFields(){return new Set([this.transform.density,...this.transform.groupby??[]])}producedFields(){return new Set(this.transform.as)}hash(){return`DensityTransform ${at(this.transform)}`}assemble(){const{density:e,...n}=this.transform,i={type:"kde",field:e,...n};return i.resolve=this.transform.resolve,i}}class op extends Ct{transform;clone(){return new op(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n)}dependentFields(){return new Set([this.transform.extent])}producedFields(){return new Set([])}hash(){return`ExtentTransform ${at(this.transform)}`}assemble(){const{extent:e,param:n}=this.transform;return{type:"extent",field:e,signal:n}}}class up extends Ct{transform;clone(){return new up(this.parent,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n);const{flatten:i,as:o=[]}=this.transform;this.transform.as=i.map((u,l)=>o[l]??u)}dependentFields(){return new Set(this.transform.flatten)}producedFields(){return new Set(this.transform.as)}hash(){return`FlattenTransform ${at(this.transform)}`}assemble(){const{flatten:e,as:n}=this.transform;return{type:"flatten",fields:e,as:n}}}class lp extends Ct{transform;clone(){return new lp(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n);const i=this.transform.as??[void 0,void 0];this.transform.as=[i[0]??"key",i[1]??"value"]}dependentFields(){return new Set(this.transform.fold)}producedFields(){return new Set(this.transform.as)}hash(){return`FoldTransform ${at(this.transform)}`}assemble(){const{fold:e,as:n}=this.transform;return{type:"fold",fields:e,as:n}}}class ol extends Ct{fields;geojson;signal;clone(){return new ol(null,W1(this.fields),this.geojson,this.signal)}static parseAll(e,n){if(n.component.projection&&!n.component.projection.isFit)return e;let i=0;for(const o of[[W3,G3],[s3,Y3]]){const u=o.map(l=>{const a=be(n.encoding[l]);return p1(a)?a.field:qi(a)?{expr:`${a.datum}`}:L3(a)?{expr:`${a.value}`}:void 0});(u[0]||u[1])&&(e=new ol(e,u,null,n.getName(`geojson_${i++}`)))}if(n.channelHasField(i2)){const o=n.typedFieldDef(i2);o.type===pa&&(e=new ol(e,null,o.field,n.getName(`geojson_${i++}`)))}return e}constructor(e,n,i,o){super(e),this.fields=n,this.geojson=i,this.signal=o}dependentFields(){const e=(this.fields??[]).filter(w1);return new Set([...this.geojson?[this.geojson]:[],...e])}producedFields(){return new Set}hash(){return`GeoJSON ${this.geojson} ${this.signal} ${at(this.fields)}`}assemble(){return[...this.geojson?[{type:"filter",expr:`isValid(datum["${this.geojson}"])`}]:[],{type:"geojson",...this.fields?{fields:this.fields}:{},...this.geojson?{geojson:this.geojson}:{},signal:this.signal}]}}class b8 extends Ct{projection;fields;as;clone(){return new b8(null,this.projection,W1(this.fields),W1(this.as))}constructor(e,n,i,o){super(e),this.projection=n,this.fields=i,this.as=o}static parseAll(e,n){if(!n.projectionName())return e;for(const i of[[W3,G3],[s3,Y3]]){const o=i.map(l=>{const a=be(n.encoding[l]);return p1(a)?a.field:qi(a)?{expr:`${a.datum}`}:L3(a)?{expr:`${a.value}`}:void 0}),u=i[0]===s3?"2":"";(o[0]||o[1])&&(e=new b8(e,n.projectionName(),o,[n.getName(`x${u}`),n.getName(`y${u}`)]))}return e}dependentFields(){return new Set(this.fields.filter(w1))}producedFields(){return new Set(this.as)}hash(){return`Geopoint ${this.projection} ${at(this.fields)} ${at(this.as)}`}assemble(){return{type:"geopoint",projection:this.projection,fields:this.fields,as:this.as}}}class I0 extends Ct{transform;clone(){return new I0(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n}dependentFields(){return new Set([this.transform.impute,this.transform.key,...this.transform.groupby??[]])}producedFields(){return new Set([this.transform.impute])}processSequence(e){const{start:n=0,stop:i,step:o}=e;return{signal:`sequence(${[n,i,...o?[o]:[]].join(",")})`}}static makeFromTransform(e,n){return new I0(e,n)}static makeFromEncoding(e,n){const i=n.encoding,o=i.x,u=i.y;if(p1(o)&&p1(u)){const l=o.impute?o:u.impute?u:void 0;if(l===void 0)return;const a=o.impute?u:u.impute?o:void 0,{method:s,value:c,frame:f,keyvals:g}=l.impute,p=KK(n.mark,i);return new I0(e,{impute:l.field,key:a.field,...s?{method:s}:{},...c!==void 0?{value:c}:{},...f?{frame:f}:{},...g!==void 0?{keyvals:g}:{},...p.length?{groupby:p}:{}})}return null}hash(){return`Impute ${at(this.transform)}`}assemble(){const{impute:e,key:n,keyvals:i,method:o,groupby:u,value:l,frame:a=[null,null]}=this.transform,s={type:"impute",field:e,key:n,...i?{keyvals:oC1(i)?this.processSequence(i):i}:{},method:"value",...u?{groupby:u}:{},value:!o||o==="value"?l:null};if(o&&o!=="value"){const c={type:"window",as:[`imputed_${e}_value`],ops:[o],fields:[e],frame:a,ignorePeers:!1,...u?{groupby:u}:{}},f={type:"formula",expr:`datum.${e} === null ? datum.imputed_${e}_value : datum.${e}`,as:e};return[s,c,f]}else return[s]}}class ap extends Ct{transform;clone(){return new ap(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n);const i=this.transform.as??[void 0,void 0];this.transform.as=[i[0]??n.on,i[1]??n.loess]}dependentFields(){return new Set([this.transform.loess,this.transform.on,...this.transform.groupby??[]])}producedFields(){return new Set(this.transform.as)}hash(){return`LoessTransform ${at(this.transform)}`}assemble(){const{loess:e,on:n,...i}=this.transform;return{type:"loess",x:n,y:e,...i}}}class x8 extends Ct{transform;secondary;clone(){return new x8(null,W1(this.transform),this.secondary)}constructor(e,n,i){super(e),this.transform=n,this.secondary=i}static make(e,n,i,o){const u=n.component.data.sources,{from:l}=i;let a=null;if(uC1(l)){let s=UZ(l.data,u);s||(s=new g6(l.data),u.push(s));const c=n.getName(`lookup_${o}`);a=new Zn(s,c,Vt.Lookup,n.component.data.outputNodeRefCounts),n.component.data.outputNodes[c]=a}else if(lC1(l)){const s=l.param;i={as:s,...i};let c;try{c=n.getSelectionComponent(qt(s),s)}catch{throw new Error(Mw1(s))}if(a=c.materialized,!a)throw new Error(Nw1(s))}return new x8(e,i,a.getSource())}dependentFields(){return new Set([this.transform.lookup])}producedFields(){return new Set(this.transform.as?S1(this.transform.as):this.transform.from.fields)}hash(){return`Lookup ${at({transform:this.transform,secondary:this.secondary})}`}assemble(){let e;if(this.transform.from.fields)e={values:this.transform.from.fields,...this.transform.as?{as:S1(this.transform.as)}:{}};else{let n=this.transform.as;w1(n)||(m1(Uw1),n="_lookup"),e={as:[n]}}return{type:"lookup",from:this.secondary,key:this.transform.from.key,fields:[this.transform.lookup],...e,...this.transform.default?{default:this.transform.default}:{}}}}class rp extends Ct{transform;clone(){return new rp(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n);const i=this.transform.as??[void 0,void 0];this.transform.as=[i[0]??"prob",i[1]??"value"]}dependentFields(){return new Set([this.transform.quantile,...this.transform.groupby??[]])}producedFields(){return new Set(this.transform.as)}hash(){return`QuantileTransform ${at(this.transform)}`}assemble(){const{quantile:e,...n}=this.transform;return{type:"quantile",field:e,...n}}}class sp extends Ct{transform;clone(){return new sp(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n,this.transform=W1(n);const i=this.transform.as??[void 0,void 0];this.transform.as=[i[0]??n.on,i[1]??n.regression]}dependentFields(){return new Set([this.transform.regression,this.transform.on,...this.transform.groupby??[]])}producedFields(){return new Set(this.transform.as)}hash(){return`RegressionTransform ${at(this.transform)}`}assemble(){const{regression:e,on:n,...i}=this.transform;return{type:"regression",x:n,y:e,...i}}}class cp extends Ct{transform;clone(){return new cp(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n}addDimensions(e){this.transform.groupby=di((this.transform.groupby??[]).concat(e),n=>n)}producedFields(){}dependentFields(){return new Set([this.transform.pivot,this.transform.value,...this.transform.groupby??[]])}hash(){return`PivotTransform ${at(this.transform)}`}assemble(){const{pivot:e,value:n,groupby:i,limit:o,op:u}=this.transform;return{type:"pivot",field:e,value:n,...o!==void 0?{limit:o}:{},...u!==void 0?{op:u}:{},...i!==void 0?{groupby:i}:{}}}}class dp extends Ct{transform;clone(){return new dp(null,W1(this.transform))}constructor(e,n){super(e),this.transform=n}dependentFields(){return new Set}producedFields(){return new Set}hash(){return`SampleTransform ${at(this.transform)}`}assemble(){return{type:"sample",size:this.transform.sample}}}function IZ(t){let e=0;function n(i,o){if(i instanceof g6&&!i.isGenerator&&!Pl(i.data)&&(t.push(o),o={name:null,source:o.name,transform:[]}),i instanceof gn&&(i.parent instanceof g6&&!o.source?(o.format={...o.format,parse:i.assembleFormatParse()},o.transform.push(...i.assembleTransforms(!0))):o.transform.push(...i.assembleTransforms())),i instanceof va){o.name||(o.name=`data_${e++}`),!o.source||o.transform.length>0?(t.push(o),i.data=o.name):i.data=o.source,t.push(...i.assemble());return}switch((i instanceof S7||i instanceof A7||i instanceof Hl||i instanceof ya||i instanceof Bl||i instanceof b8||i instanceof N3||i instanceof x8||i instanceof ba||i instanceof O6||i instanceof lp||i instanceof up||i instanceof ip||i instanceof ap||i instanceof rp||i instanceof sp||i instanceof Tu||i instanceof dp||i instanceof cp||i instanceof op)&&o.transform.push(i.assemble()),(i instanceof xi||i instanceof vi||i instanceof I0||i instanceof Wo||i instanceof ol)&&o.transform.push(...i.assemble()),i instanceof Zn&&(o.source&&o.transform.length===0?i.setSource(o.source):i.parent instanceof Zn?i.setSource(o.name):(o.name||(o.name=`data_${e++}`),i.setSource(o.name),i.numChildren()===1&&(t.push(o),o={name:null,source:o.name,transform:[]}))),i.numChildren()){case 0:i instanceof Zn&&(!o.source||o.transform.length>0)&&t.push(o);break;case 1:n(i.children[0],o);break;default:{o.name||(o.name=`data_${e++}`);let u=o.name;!o.source||o.transform.length>0?t.push(o):u=o.source;for(const l of i.children)n(l,{name:null,source:u,transform:[]});break}}}return n}function v$1(t){const e=[],n=IZ(e);for(const i of t.children)n(i,{source:t.name,name:null,transform:[]});return e}function b$1(t,e){const n=[],i=IZ(n);let o=0;for(const l of t.sources){l.hasName()||(l.dataName=`source_${o++}`);const a=l.assemble();i(l,a)}for(const l of n)l.transform.length===0&&delete l.transform;let u=0;for(const[l,a]of n.entries())(a.transform??[]).length===0&&!a.source&&n.splice(u++,0,n.splice(l,1)[0]);for(const l of n)for(const a of l.transform??[])a.type==="lookup"&&(a.from=t.outputNodes[a.from].getSource());for(const l of n)l.name in e&&(l.values=e[l.name]);return n}function x$1(t){return t==="top"||t==="left"||$1(t)?"header":"footer"}function _$1(t){for(const e of Q2)w$1(t,e);mj(t,"x"),mj(t,"y")}function w$1(t,e){const{facet:n,config:i,child:o,component:u}=t;if(t.channelHasField(e)){const l=n[e],a=ql("title",null,i,e);let s=nl(l,i,{allowDisabling:!0,includeDefault:a===void 0||!!a});o.component.layoutHeaders[e].title&&(s=r1(s)?s.join(", "):s,s+=` / ${o.component.layoutHeaders[e].title}`,o.component.layoutHeaders[e].title=null);const c=ql("labelOrient",l.header,i,e),f=l.header!==null?le(l.header?.labels,i.header.labels,!0):!1,g=it(["bottom","right"],c)?"footer":"header";u.layoutHeaders[e]={title:l.header!==null?s:null,facetFieldDef:l,[g]:e==="facet"?[]:[BZ(t,e,f)]}}}function BZ(t,e,n){const i=e==="row"?"height":"width";return{labels:n,sizeSignal:t.child.component.layoutSize.get(i)?t.child.getSizeSignalRef(i):void 0,axes:[]}}function mj(t,e){const{child:n}=t;if(n.component.axes[e]){const{layoutHeaders:i,resolve:o}=t.component;if(o.axis[e]=pT(o,e),o.axis[e]==="shared"){const u=e==="x"?"column":"row",l=i[u];for(const a of n.component.axes[e]){const s=x$1(a.get("orient"));l[s]??=[BZ(t,u,!1)];const c=xr(a,"main",t.config,{header:!0});c&&l[s][0].axes.push(c),a.mainExtracted=!0}}}}function E$1(t){ET(t),Yf(t,"width"),Yf(t,"height")}function S$1(t){ET(t);const e=t.layout.columns===1?"width":"childWidth",n=t.layout.columns===void 0?"height":"childHeight";Yf(t,e),Yf(t,n)}function ET(t){for(const e of t.children)e.parseLayoutSize()}function Yf(t,e){const n=gZ(e),i=Nh(n),o=t.component.resolve,u=t.component.layoutSize;let l;for(const a of t.children){const s=a.component.layoutSize.getWithExplicit(n),c=o.scale[i]??pZ(i,t);if(c==="independent"&&s.value==="step"){l=void 0;break}if(l){if(c==="independent"&&l.value!==s.value){l=void 0;break}l=ku(l,s,n,"")}else l=s}if(l){for(const a of t.children)t.renameSignal(a.getName(n),t.getName(e)),a.component.layoutSize.set(n,"merged",!1);u.setWithExplicit(e,l)}else u.setWithExplicit(e,{explicit:!1,value:void 0})}function A$1(t){const{size:e,component:n}=t;for(const i of f4){const o=o2(i);if(e[o]!=null&&e[o]!=null){const u=e[o];n.layoutSize.set(o,$i(u)?"step":u,!0)}else{const u=C$1(t,o);n.layoutSize.set(o,u,!1)}}}function C$1(t,e){const n=e==="width"?"x":"y",i=t.config,o=t.getScaleComponent(n);if(o){const u=o.get("type"),l=o.get("range");if(Fe(u)){const a=qf(i.view,e);return $6(l)||$i(a)?"step":a}else return Q_(i.view,e)}else{if(t.hasProjection||t.mark==="arc")return Q_(i.view,e);{const u=qf(i.view,e);return $i(u)?u.step:u}}}function pw(t,e,n){return _1(e,{suffix:`by_${_1(t)}`,...n})}class Pr extends PZ{facet;child;children;constructor(e,n,i,o){super(e,"facet",n,i,o,e.resolve),this.child=TT(e.spec,this,this.getName("child"),void 0,o),this.children=[this.child],this.facet=this.initFacet(e.facet)}initFacet(e){if(!v7(e))return{facet:this.initFacetFieldDef(e,"facet")};const n=g1(e),i={};for(const o of n){if(![Uo,qo].includes(o)){m1(Oh(o,"facet"));break}const u=e[o];if(u.field===void 0){m1(W_(u,o));break}i[o]=this.initFacetFieldDef(u,o)}return i}initFacetFieldDef(e,n){const i=Wk(e,n);return i.header?i.header=Ue(i.header):i.header===null&&(i.header=null),i}channelHasField(e){return h1(this.facet,e)}fieldDef(e){return this.facet[e]}parseData(){this.component.data=fp(this),this.child.parseData()}parseLayoutSize(){ET(this)}parseSelections(){this.child.parseSelections(),this.component.selection=this.child.component.selection,de(this.component.selection).some(e=>bi(e))&&xk(bk)}parseMarkGroup(){this.child.parseMarkGroup()}parseAxesAndHeaders(){this.child.parseAxesAndHeaders(),_$1(this)}assembleSelectionTopLevelSignals(e){return this.child.assembleSelectionTopLevelSignals(e)}assembleSignals(){return this.child.assembleSignals(),[]}assembleSelectionData(e){return this.child.assembleSelectionData(e)}getHeaderLayoutMixins(){const e={};for(const n of Q2)for(const i of gT){const o=this.component.layoutHeaders[n],u=o[i],{facetFieldDef:l}=o;if(l){const a=ql("titleOrient",l.header,this.config,n);if(["right","bottom"].includes(a)){const s=tp(n,a);e.titleAnchor??={},e.titleAnchor[s]="end"}}if(u?.[0]){const a=n==="row"?"height":"width",s=i==="header"?"headerBand":"footerBand";n!=="facet"&&!this.child.component.layoutSize.get(a)&&(e[s]??={},e[s][n]=.5),o.title&&(e.offset??={},e.offset[n==="row"?"rowTitle":"columnTitle"]=10)}}return e}assembleDefaultLayout(){const{column:e,row:n}=this.facet,i=e?this.columnDistinctSignal():n?1:void 0;let o="all";return(!n&&this.component.resolve.scale.x==="independent"||!e&&this.component.resolve.scale.y==="independent")&&(o="none"),{...this.getHeaderLayoutMixins(),...i?{columns:i}:{},bounds:"full",align:o}}assembleLayoutSignals(){return this.child.assembleLayoutSignals()}columnDistinctSignal(){if(!(this.parent&&this.parent instanceof Pr))return{signal:`length(data('${this.getName("column_domain")}'))`}}assembleGroupStyle(){}assembleGroup(e){return this.parent&&this.parent instanceof Pr?{...this.channelHasField("column")?{encode:{update:{columns:{field:_1(this.facet.column,{prefix:"distinct"})}}}}:{},...super.assembleGroup(e)}:super.assembleGroup(e)}getCardinalityAggregateForChild(){const e=[],n=[],i=[];if(this.child instanceof Pr){if(this.child.channelHasField("column")){const o=_1(this.child.facet.column);e.push(o),n.push("distinct"),i.push(`distinct_${o}`)}}else for(const o of f4){const u=this.child.component.scales[o];if(u&&!u.merged){const l=u.get("type"),a=u.get("range");if(Fe(l)&&$6(a)){const s=np(this.child,o),c=xT(s);c?(e.push(c),n.push("distinct"),i.push(`distinct_${c}`)):m1(vk(o))}}}return{fields:e,ops:n,as:i}}assembleFacet(){const{name:e,data:n}=this.component.data.facetRoot,{row:i,column:o}=this.facet,{fields:u,ops:l,as:a}=this.getCardinalityAggregateForChild(),s=[];for(const f of Q2){const g=this.facet[f];if(g){s.push(_1(g));const{bin:p,sort:m}=g;if(jt(p)&&s.push(_1(g,{binSuffix:"end"})),Ho(m)){const{field:v,op:b=Bh}=m,x=pw(g,m);i&&o?(u.push(x),l.push("max"),a.push(x)):(u.push(v),l.push(b),a.push(x))}else if(r1(m)){const v=Ul(g,f);u.push(v),l.push("max"),a.push(v)}}}const c=!!i&&!!o;return{name:e,data:n,groupby:s,...c||u.length>0?{aggregate:{...c?{cross:c}:{},...u.length?{fields:u,ops:l,as:a}:{}}}:{}}}facetSortFields(e){const{facet:n}=this,i=n[e];return i?Ho(i.sort)?[pw(i,i.sort,{expr:"datum"})]:r1(i.sort)?[Ul(i,e,{expr:"datum"})]:[_1(i,{expr:"datum"})]:[]}facetSortOrder(e){const{facet:n}=this,i=n[e];if(i){const{sort:o}=i;return[(Ho(o)?o.order:!r1(o)&&o)||"ascending"]}return[]}assembleLabelTitle(){const{facet:e,config:n}=this;if(e.facet)return rw(e.facet,"facet",n);const i={row:["top","bottom"],column:["left","right"]};for(const o of fT)if(e[o]){const u=ql("labelOrient",e[o]?.header,n,o);if(i[o].includes(u))return rw(e[o],o,n)}}assembleMarks(){const{child:e}=this,n=this.component.data.facetRoot,i=v$1(n),o=e.assembleGroupEncodeEntry(!1),u=this.assembleLabelTitle()||e.assembleTitle(),l=e.assembleGroupStyle();return[{name:this.getName("cell"),type:"group",...u?{title:u}:{},...l?{style:l}:{},from:{facet:this.assembleFacet()},sort:{field:Q2.map(s=>this.facetSortFields(s)).flat(),order:Q2.map(s=>this.facetSortOrder(s)).flat()},...i.length>0?{data:i}:{},...o?{encode:{update:o}}:{},...e.assembleGroup(UC1(this,[]))}]}getMapping(){return this.facet}}function k$1(t,e){const{row:n,column:i}=e;if(n&&i){let o=null;for(const u of[n,i])if(Ho(u.sort)){const{field:l,op:a=Bh}=u.sort;t=o=new O6(t,{joinaggregate:[{op:a,field:l,as:pw(u,u.sort,{forAs:!0})}],groupby:[_1(u)]})}return o}return null}function UZ(t,e){for(const n of e){const i=n.data;if(t.name&&n.hasName()&&t.name!==n.dataName)continue;const o=t.format?.mesh,u=i.format?.feature;if(o&&u)continue;const l=t.format?.feature;if((l||u)&&l!==u)continue;const a=i.format?.mesh;if(!((o||a)&&o!==a)){if(v8(t)&&v8(i)){if(x2(t.values,i.values))return n}else if(Pl(t)&&Pl(i)){if(t.url===i.url)return n}else if(kQ(t)&&t.name===n.dataName)return n}}return null}function T$1(t,e){if(t.data||!t.parent){if(t.data===null){const i=new g6({values:[]});return e.push(i),i}const n=UZ(t.data,e);if(n)return fu(t.data)||(n.data.format=_X({},t.data.format,n.data.format)),!n.hasName()&&t.data.name&&(n.dataName=t.data.name),n;{const i=new g6(t.data);return e.push(i),i}}else return t.parent.component.data.facetRoot?t.parent.component.data.facetRoot:t.parent.component.data.main}function $$1(t,e,n){let i=0;for(const o of e.transforms){let u,l;if(mC1(o))l=t=new Bl(t,o),u="derived";else if(oT(o)){const a=xT1(o);l=t=gn.makeWithAncestors(t,{},a,n)??t,t=new ya(t,e,o.filter)}else if(wQ(o))l=t=xi.makeFromTransform(t,o,e),u="number";else if(vC1(o))u="date",n.getWithExplicit(o.field).value===void 0&&(t=new gn(t,{[o.field]:u}),n.set(o.field,u,!1)),l=t=vi.makeFromTransform(t,o);else if(bC1(o))l=t=N3.makeFromTransform(t,o),u="number",dT(e)&&(t=new Tu(t));else if(_Q(o))l=t=x8.make(t,e,o,i++),u="derived";else if(gC1(o))l=t=new ba(t,o),u="number";else if(hC1(o))l=t=new O6(t,o),u="number";else if(xC1(o))l=t=Wo.makeFromTransform(t,o),u="derived";else if(_C1(o))l=t=new lp(t,o),u="derived";else if(wC1(o))l=t=new op(t,o),u="derived";else if(pC1(o))l=t=new up(t,o),u="derived";else if(aC1(o))l=t=new cp(t,o),u="derived";else if(fC1(o))t=new dp(t,o);else if(yC1(o))l=t=I0.makeFromTransform(t,o),u="derived";else if(rC1(o))l=t=new ip(t,o),u="derived";else if(sC1(o))l=t=new rp(t,o),u="derived";else if(cC1(o))l=t=new sp(t,o),u="derived";else if(dC1(o))l=t=new ap(t,o),u="derived";else{m1(Bw1(o));continue}if(l&&u!==void 0)for(const a of l.producedFields()??[])n.set(a,u,!1)}return t}function fp(t){let e=T$1(t,t.component.data.sources);const{outputNodes:n,outputNodeRefCounts:i}=t.component.data,o=t.data,l=!(o&&(fu(o)||Pl(o)||v8(o)))&&t.parent?t.parent.component.data.ancestorParse.clone():new OC1;fu(o)?(TQ(o)?e=new A7(e,o.sequence):uT(o)&&(e=new S7(e,o.graticule)),l.parseNothing=!0):o?.format?.parse===null&&(l.parseNothing=!0),e=gn.makeExplicit(e,t,l)??e,e=new Tu(e);const a=t.parent&&xa(t.parent);(Yt(t)||A2(t))&&a&&(e=xi.makeFromEncoding(e,t)??e),t.transforms.length>0&&(e=$$1(e,t,l));const s=wT1(t),c=_T1(t);e=gn.makeWithAncestors(e,{},{...s,...c},l)??e,Yt(t)&&(e=ol.parseAll(e,t),e=b8.parseAll(e,t)),(Yt(t)||A2(t))&&(a||(e=xi.makeFromEncoding(e,t)??e),e=vi.makeFromEncoding(e,t)??e,e=Bl.parseAllForSortIndex(e,t));const f=e=Sc(Vt.Raw,t,e);if(Yt(t)){const x=N3.makeFromEncoding(e,t);x&&(e=x,dT(t)&&(e=new Tu(e))),e=I0.makeFromEncoding(e,t)??e,e=Wo.makeFromEncoding(e,t)??e}let g,p;if(Yt(t)){const{markDef:x,mark:w,config:S}=t,A=xt("invalid",x,S),{marks:C,scales:k}=p=MQ({invalid:A,isPath:qu(w)});C!==k&&k==="include-invalid-values"&&(g=e=Sc(Vt.PreFilterInvalid,t,e)),C==="exclude-invalid-values"&&(e=Hl.make(e,t,p)??e)}const m=e=Sc(Vt.Main,t,e);let v;if(Yt(t)&&p){const{marks:x,scales:w}=p;x==="include-invalid-values"&&w==="exclude-invalid-values"&&(e=Hl.make(e,t,p)??e,v=e=Sc(Vt.PostFilterInvalid,t,e))}Yt(t)&&yk1(t,m);let b=null;if(A2(t)){const x=t.getName("facet");e=k$1(e,t.facet)??e,b=new va(e,t,x,m.getSource()),n[x]=b}return{...t.component.data,outputNodes:n,outputNodeRefCounts:i,raw:f,main:m,facetRoot:b,ancestorParse:l,preFilterInvalid:g,postFilterInvalid:v}}function Sc(t,e,n){const{outputNodes:i,outputNodeRefCounts:o}=e.component.data,u=e.getDataName(t),l=new Zn(n,u,t,o);return i[u]=l,l}class M$1 extends wT{children;constructor(e,n,i,o){super(e,"concat",n,i,o,e.resolve),(e.resolve?.axis?.x==="shared"||e.resolve?.axis?.y==="shared")&&m1(jw1),this.children=this.getChildren(e).map((u,l)=>TT(u,this,this.getName(`concat_${l}`),void 0,o))}parseData(){this.component.data=fp(this);for(const e of this.children)e.parseData()}parseSelections(){this.component.selection={};for(const e of this.children){e.parseSelections();for(const n of g1(e.component.selection))this.component.selection[n]=e.component.selection[n]}de(this.component.selection).some(e=>bi(e))&&xk(bk)}parseMarkGroup(){for(const e of this.children)e.parseMarkGroup()}parseAxesAndHeaders(){for(const e of this.children)e.parseAxesAndHeaders()}getChildren(e){return Vh(e)?e.vconcat:nT(e)?e.hconcat:e.concat}parseLayoutSize(){S$1(this)}parseAxisGroup(){return null}assembleSelectionTopLevelSignals(e){return this.children.reduce((n,i)=>i.assembleSelectionTopLevelSignals(n),e)}assembleSignals(){return this.children.forEach(e=>e.assembleSignals()),[]}assembleLayoutSignals(){const e=hT(this);for(const n of this.children)e.push(...n.assembleLayoutSignals());return e}assembleSelectionData(e){return this.children.reduce((n,i)=>i.assembleSelectionData(n),e)}assembleMarks(){return this.children.map(e=>{const n=e.assembleTitle(),i=e.assembleGroupStyle(),o=e.assembleGroupEncodeEntry(!1);return{type:"group",name:e.getName("group"),...n?{title:n}:{},...i?{style:i}:{},...o?{encode:{update:o}}:{},...e.assembleGroup()}})}assembleGroupStyle(){}assembleDefaultLayout(){const e=this.layout.columns;return{...e!=null?{columns:e}:{},bounds:"full",align:"each"}}}function N$1(t){return t===!1||t===null}const R$1={disable:1,gridScale:1,scale:1,...HK,labelExpr:1,encode:1},qZ=g1(R$1);class ST extends h4{explicit;implicit;mainExtracted;constructor(e={},n={},i=!1){super(),this.explicit=e,this.implicit=n,this.mainExtracted=i}clone(){return new ST(W1(this.explicit),W1(this.implicit),this.mainExtracted)}hasAxisPart(e){return e==="axis"?!0:e==="grid"||e==="title"?!!this.get(e):!N$1(this.get(e))}hasOrientSignalRef(){return $1(this.explicit.orient)}}function D$1(t,e,n){const{encoding:i,config:o}=t,u=be(i[e])??be(i[Bi(e)]),l=t.axis(e)||{},{format:a,formatType:s}=l;if(c6(s))return{text:$3({fieldOrDatumDef:u,field:"datum.value",format:a,formatType:s,config:o}),...n};if(a===void 0&&s===void 0&&o.customFormatTypes){if(zl(u)==="quantitative"){if(Ll(u)&&u.stack==="normalize"&&o.normalizedNumberFormatType)return{text:$3({fieldOrDatumDef:u,field:"datum.value",format:o.normalizedNumberFormat,formatType:o.normalizedNumberFormatType,config:o}),...n};if(o.numberFormatType)return{text:$3({fieldOrDatumDef:u,field:"datum.value",format:o.numberFormat,formatType:o.numberFormatType,config:o}),...n}}if(zl(u)==="temporal"&&o.timeFormatType&&p1(u)&&!u.timeUnit)return{text:$3({fieldOrDatumDef:u,field:"datum.value",format:o.timeFormat,formatType:o.timeFormatType,config:o}),...n}}return n}function O$1(t){return f4.reduce((e,n)=>(t.component.scales[n]&&(e[n]=[B$1(n,t)]),e),{})}const F$1={bottom:"top",top:"bottom",left:"right",right:"left"};function z$1(t){const{axes:e,resolve:n}=t.component,i={top:0,bottom:0,right:0,left:0};for(const o of t.children){o.parseAxesAndHeaders();for(const u of g1(o.component.axes))n.axis[u]=pT(t.component.resolve,u),n.axis[u]==="shared"&&(e[u]=L$1(e[u],o.component.axes[u]),e[u]||(n.axis[u]="independent",delete e[u]))}for(const o of f4){for(const u of t.children)if(u.component.axes[o]){if(n.axis[o]==="independent"){e[o]=(e[o]??[]).concat(u.component.axes[o]);for(const l of u.component.axes[o]){const{value:a,explicit:s}=l.getWithExplicit("orient");if(!$1(a)){if(i[a]>0&&!s){const c=F$1[a];i[a]>i[c]&&l.set("orient",c,!1)}i[a]++}}}delete u.component.axes[o]}if(n.axis[o]==="independent"&&e[o]&&e[o].length>1)for(const[u,l]of(e[o]||[]).entries())u>0&&l.get("grid")&&!l.explicit.grid&&(l.implicit.grid=!1)}}function L$1(t,e){if(t){if(t.length!==e.length)return;const n=t.length;for(let i=0;i<n;i++){const o=t[i],u=e[i];if(!!o!=!!u)return;if(o&&u){const l=o.getWithExplicit("orient"),a=u.getWithExplicit("orient");if(l.explicit&&a.explicit&&l.value!==a.value)return;t[i]=j$1(o,u)}}}else return e.map(n=>n.clone());return t}function j$1(t,e){for(const n of qZ){const i=ku(t.getWithExplicit(n),e.getWithExplicit(n),n,"axis",(o,u)=>{switch(n){case"title":return XX(o,u);case"gridScale":return{explicit:o.explicit,value:le(o.value,u.value)}}return Kh(o,u,n,"axis")});t.setWithExplicit(n,i)}return t}function P$1(t,e,n,i,o){if(e==="disable")return n!==void 0;switch(n=n||{},e){case"titleAngle":case"labelAngle":return t===($1(n.labelAngle)?n.labelAngle:m8(n.labelAngle));case"values":return!!n.values;case"encode":return!!n.encoding||!!n.labelAngle;case"title":if(t===rZ(i,o))return!0}return t===n[e]}const I$1=new Set(["grid","translate","format","formatType","orient","labelExpr","tickCount","position","tickMinStep"]);function B$1(t,e){let n=e.axis(t);const i=new ST,o=be(e.encoding[t]),{mark:u,config:l}=e,a=n?.orient||l[t==="x"?"axisX":"axisY"]?.orient||l.axis?.orient||kk1(t),s=e.getScaleComponent(t).get("type"),c=xk1(t,s,a,e.config),f=n!==void 0?!n:lw("disable",l.style,n?.style,c).configValue;if(i.set("disable",f,n!==void 0),f)return i;n=n||{};const g=Sk1(o,n,t,l.style,c),p=MK(n.formatType,o,s),m=$K(o,o.type,n.format,n.formatType,l,!0),v={fieldOrDatumDef:o,axis:n,channel:t,model:e,scaleType:s,orient:a,labelAngle:g,format:m,formatType:p,mark:u,config:l};for(const w of qZ){const S=w in nj?nj[w](v):$L(w)?n[w]:void 0,A=S!==void 0,C=P$1(S,w,n,e,t);if(A&&C)i.set(w,S,C);else{const{configValue:k=void 0,configFrom:M=void 0}=$L(w)&&w!=="values"?lw(w,l.style,n.style,c):{},T=k!==void 0;A&&!T?i.set(w,S,C):(M!=="vgAxisConfig"||I$1.has(w)&&T||w7(k)||$1(k))&&i.set(w,k,!1)}}const b=n.encoding??{},x=qK.reduce((w,S)=>{if(!i.hasAxisPart(S))return w;const A=hZ(b[S]??{},e),C=S==="labels"?D$1(e,t,A):A;return C!==void 0&&!Ot(C)&&(w[S]={update:C}),w},{});return Ot(x)||i.set("encode",x,!!n.encoding||n.labelAngle!==void 0),i}function U$1({encoding:t,size:e}){for(const n of f4){const i=o2(n);$i(e[i])&&lu(t[n])&&(delete e[i],m1(tK(i)))}return e}const q$1={vgMark:"arc",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",size:"ignore",orient:"ignore",theta:"ignore"}),...Rn("x",t,{defaultPos:"mid"}),...Rn("y",t,{defaultPos:"mid"}),...t4(t,"radius"),...t4(t,"theta")})},H$1={vgMark:"area",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",orient:"include",size:"ignore",theta:"ignore"}),...Hf("x",t,{defaultPos:"zeroOrMin",defaultPos2:"zeroOrMin",range:t.markDef.orient==="horizontal"}),...Hf("y",t,{defaultPos:"zeroOrMin",defaultPos2:"zeroOrMin",range:t.markDef.orient==="vertical"}),...cT(t)})},G$1={vgMark:"rect",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",orient:"ignore",size:"ignore",theta:"ignore"}),...t4(t,"x"),...t4(t,"y")})},W$1={vgMark:"shape",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",size:"ignore",orient:"ignore",theta:"ignore"})}),postEncodingTransform:t=>{const{encoding:e}=t,n=e.shape;return[{type:"geoshape",projection:t.projectionName(),...n&&p1(n)&&n.type===pa?{field:_1(n,{expr:"datum"})}:{}}]}},Y$1={vgMark:"image",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"ignore",orient:"ignore",size:"ignore",theta:"ignore"}),...t4(t,"x"),...t4(t,"y"),...aT(t,"url")})},V$1={vgMark:"line",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",size:"ignore",orient:"ignore",theta:"ignore"}),...Rn("x",t,{defaultPos:"mid"}),...Rn("y",t,{defaultPos:"mid"}),...He("size",t,{vgChannel:"strokeWidth"}),...cT(t)})},X$1={vgMark:"trail",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",size:"include",orient:"ignore",theta:"ignore"}),...Rn("x",t,{defaultPos:"mid"}),...Rn("y",t,{defaultPos:"mid"}),...He("size",t),...cT(t)})};function AT(t,e){const{config:n}=t;return{...f3(t,{align:"ignore",baseline:"ignore",color:"include",size:"include",orient:"ignore",theta:"ignore"}),...Rn("x",t,{defaultPos:"mid"}),...Rn("y",t,{defaultPos:"mid"}),...He("size",t),...He("angle",t),...K$1(t,n,e)}}function K$1(t,e,n){return n?{shape:{value:n}}:He("shape",t)}const Q$1={vgMark:"symbol",encodeEntry:t=>AT(t)},Z$1={vgMark:"symbol",encodeEntry:t=>AT(t,"circle")},J$1={vgMark:"symbol",encodeEntry:t=>AT(t,"square")},tM1={vgMark:"rect",encodeEntry:t=>({...f3(t,{align:"ignore",baseline:"ignore",color:"include",orient:"ignore",size:"ignore",theta:"ignore"}),...t4(t,"x"),...t4(t,"y")})},eM1={vgMark:"rule",encodeEntry:t=>{const{markDef:e}=t,n=e.orient;return!t.encoding.x&&!t.encoding.y&&!t.encoding.latitude&&!t.encoding.longitude?{}:{...f3(t,{align:"ignore",baseline:"ignore",color:"include",orient:"ignore",size:"ignore",theta:"ignore"}),...Hf("x",t,{defaultPos:n==="horizontal"?"zeroOrMax":"mid",defaultPos2:"zeroOrMin",range:n!=="vertical"}),...Hf("y",t,{defaultPos:n==="vertical"?"zeroOrMax":"mid",defaultPos2:"zeroOrMin",range:n!=="horizontal"}),...He("size",t,{vgChannel:"strokeWidth"})}}},nM1={vgMark:"text",encodeEntry:t=>{const{config:e,encoding:n}=t;return{...f3(t,{align:"include",baseline:"include",color:"include",size:"ignore",orient:"ignore",theta:"include"}),...Rn("x",t,{defaultPos:"mid"}),...Rn("y",t,{defaultPos:"mid"}),...aT(t),...He("size",t,{vgChannel:"fontSize"}),...He("angle",t),...ZL("align",iM1(t.markDef,n,e)),...ZL("baseline",oM1(t.markDef,n,e)),...Rn("radius",t,{defaultPos:null}),...Rn("theta",t,{defaultPos:null})}}};function iM1(t,e,n){if(xt("align",t,n)===void 0)return"center"}function oM1(t,e,n){if(xt("baseline",t,n)===void 0)return"middle"}const uM1={vgMark:"rect",encodeEntry:t=>{const{config:e,markDef:n}=t,i=n.orient,o=i==="horizontal"?"x":"y",u=i==="horizontal"?"y":"x",l=i==="horizontal"?"height":"width";return{...f3(t,{align:"ignore",baseline:"ignore",color:"include",orient:"ignore",size:"ignore",theta:"ignore"}),...t4(t,o),...Rn(u,t,{defaultPos:"mid",vgChannel:u==="y"?"yc":"xc"}),[l]:It(xt("thickness",n,e))}}},Ac={arc:q$1,area:H$1,bar:G$1,circle:Z$1,geoshape:W$1,image:Y$1,line:V$1,point:Q$1,rect:tM1,rule:eM1,square:J$1,text:nM1,tick:uM1,trail:X$1};function lM1(t){if(it([Ph,Lh,hS1],t.mark)){const e=KK(t.mark,t.encoding);if(e.length>0)return aM1(t,e)}else if(t.mark===jh){const e=H_.some(n=>xt(n,t.markDef,t.config));if(t.stack&&!t.fieldDef("size")&&e)return rM1(t)}return CT(t)}const yj="faceted_path_";function aM1(t,e){return[{name:t.getName("pathgroup"),type:"group",from:{facet:{name:yj+t.requestDataName(Vt.Main),data:t.requestDataName(Vt.Main),groupby:e}},encode:{update:{width:{field:{group:"width"}},height:{field:{group:"height"}}}},marks:CT(t,{fromPrefix:yj})}]}const vj="stack_group_";function rM1(t){const[e]=CT(t,{fromPrefix:vj}),n=t.scaleName(t.stack.fieldChannel),i=(c={})=>t.vgField(t.stack.fieldChannel,c),o=(c,f)=>{const g=[i({prefix:"min",suffix:"start",expr:f}),i({prefix:"max",suffix:"start",expr:f}),i({prefix:"min",suffix:"end",expr:f}),i({prefix:"max",suffix:"end",expr:f})];return`${c}(${g.map(p=>`scale('${n}',${p})`).join(",")})`};let u,l;t.stack.fieldChannel==="x"?(u={...Ml(e.encode.update,["y","yc","y2","height",...H_]),x:{signal:o("min","datum")},x2:{signal:o("max","datum")},clip:{value:!0}},l={x:{field:{group:"x"},mult:-1},height:{field:{group:"height"}}},e.encode.update={...S2(e.encode.update,["y","yc","y2"]),height:{field:{group:"height"}}}):(u={...Ml(e.encode.update,["x","xc","x2","width"]),y:{signal:o("min","datum")},y2:{signal:o("max","datum")},clip:{value:!0}},l={y:{field:{group:"y"},mult:-1},width:{field:{group:"width"}}},e.encode.update={...S2(e.encode.update,["x","xc","x2"]),width:{field:{group:"width"}}});for(const c of H_){const f=ki(c,t.markDef,t.config);e.encode.update[c]?(u[c]=e.encode.update[c],delete e.encode.update[c]):f&&(u[c]=It(f)),f&&(e.encode.update[c]={value:0})}const a=[];if(t.stack.groupbyChannels?.length>0)for(const c of t.stack.groupbyChannels){const f=t.fieldDef(c),g=_1(f);g&&a.push(g),(f?.bin||f?.timeUnit)&&a.push(_1(f,{binSuffix:"end"}))}return u=["stroke","strokeWidth","strokeJoin","strokeCap","strokeDash","strokeDashOffset","strokeMiterLimit","strokeOpacity"].reduce((c,f)=>{if(e.encode.update[f])return{...c,[f]:e.encode.update[f]};{const g=ki(f,t.markDef,t.config);return g!==void 0?{...c,[f]:It(g)}:c}},u),u.stroke&&(u.strokeForeground={value:!0},u.strokeOffset={value:0}),[{type:"group",from:{facet:{data:t.requestDataName(Vt.Main),name:vj+t.requestDataName(Vt.Main),groupby:a,aggregate:{fields:[i({suffix:"start"}),i({suffix:"start"}),i({suffix:"end"}),i({suffix:"end"})],ops:["min","max","min","max"]}}},encode:{update:u},marks:[{type:"group",encode:{update:l},marks:[e]}]}]}function sM1(t){const{encoding:e,stack:n,mark:i,markDef:o,config:u}=t,l=e.order;if(!(!r1(l)&&L3(l)&&U_(l.value)||!l&&U_(xt("order",o,u)))){if((r1(l)||p1(l))&&!n)return WX(l,{expr:"datum"});if(qu(i)){const a=o.orient==="horizontal"?"y":"x",s=e[a];if(p1(s))return{field:a}}}}function CT(t,e={fromPrefix:""}){const{mark:n,markDef:i,encoding:o,config:u}=t,l=le(i.clip,cM1(t),dM1(t)),a=HX(i),s=o.key,c=sM1(t),f=fM1(t);f&&Object.values(t.component.selection).some(m=>m.type==="point"&&!m.bind&&m.on!=="pointerover")&&(t.markDef.cursor??="pointer");const g=xt("aria",i,u),p=Ac[n].postEncodingTransform?Ac[n].postEncodingTransform(t):null;return[{name:t.getName("marks"),type:Ac[n].vgMark,...l?{clip:l}:{},...a?{style:a}:{},...s?{key:s.field}:{},...c?{sort:c}:{},...f||{},...g===!1?{aria:g}:{},from:{data:e.fromPrefix+t.requestDataName(Vt.Main)},encode:{update:Ac[n].encodeEntry(t)},...p?{transform:p}:{}}]}function cM1(t){const e=t.getScaleComponent("x"),n=t.getScaleComponent("y");return e?.get("selectionExtent")||n?.get("selectionExtent")?!0:void 0}function dM1(t){const e=t.component.projection;return e&&!e.isFit?!0:void 0}function fM1(t){if(!t.component.selection)return null;const e=g1(t.component.selection).length;let n=e,i=t.parent;for(;i&&n===0;)n=g1(i.component.selection).length,i=i.parent;return n?{interactive:e>0||t.mark==="geoshape"||!!t.encoding.tooltip||!!t.markDef.tooltip}:null}class HZ extends PZ{markDef;encoding;specifiedScales={};stack;specifiedAxes={};specifiedLegends={};specifiedProjection={};selection=[];children=[];constructor(e,n,i,o={},u){super(e,"unit",n,i,u,void 0,NL(e)?e.view:void 0);const l=Ti(e.mark)?{...e.mark}:{type:e.mark},a=l.type;l.filled===void 0&&(l.filled=KA1(l,u,{graticule:e.data&&uT(e.data)}));const s=this.encoding=tA1(e.encoding||{},a,l.filled,u);this.markDef=yQ(l,s,u),this.size=U$1({encoding:s,size:NL(e)?{...o,...e.width!==void 0?{width:e.width}:{},...e.height!==void 0?{height:e.height}:{}}:o}),this.stack=mQ(this.markDef,s),this.specifiedScales=this.initScales(a,s),this.specifiedAxes=this.initAxes(s),this.specifiedLegends=this.initLegends(s),this.specifiedProjection=e.projection,this.selection=(e.params??[]).filter(c=>tT(c)),this.alignStackOrderWithColorDomain()}get hasProjection(){const{encoding:e}=this,n=this.mark===wK,i=e&&W_1.some(o=>V1(e[o]));return n||i}scaleDomain(e){const n=this.specifiedScales[e];return n?n.domain:void 0}axis(e){return this.specifiedAxes[e]}legend(e){return this.specifiedLegends[e]}initScales(e,n){return pk.reduce((i,o)=>{const u=be(n[o]);return u&&(i[o]=this.initScale(u.scale??{})),i},{})}initScale(e){const{domain:n,range:i}=e,o=Ue(e);return r1(n)&&(o.domain=n.map(v2)),r1(i)&&(o.range=i.map(v2)),o}initAxes(e){return f4.reduce((n,i)=>{const o=e[i];if(V1(o)||i===Ht&&V1(e.x2)||i===Le&&V1(e.y2)){const u=V1(o)?o.axis:void 0;n[i]=u&&this.initAxis({...u})}return n},{})}initAxis(e){const n=g1(e),i={};for(const o of n){const u=e[o];i[o]=w7(u)?qX(u):v2(u)}return i}initLegends(e){return iw1.reduce((n,i)=>{const o=be(e[i]);if(o&&uw1(i)){const u=o.legend;n[i]=u&&Ue(u)}return n},{})}alignStackOrderWithColorDomain(){const{color:e,fill:n,order:i,xOffset:o,yOffset:u}=this.encoding,l=n||e,a=p1(l)?l:void 0,s=a?.field,c=a?.scale,f=a?.type,g=c?.domain,p=o||u,m=p1(p)?p:void 0,v=`_${s}_sort_index`;if(!i&&Array.isArray(g)&&typeof s=="string"&&f==="nominal")if(m&&!m.sort)m.sort=g;else{const b=`indexof(${y1(g)}, datum['${s}'])`,x=this.markDef?.orient==="horizontal"?"ascending":"descending";this.transforms.push({calculate:b,as:v}),this.encoding.order={field:v,type:"quantitative",sort:x}}}parseData(){this.component.data=fp(this)}parseLayoutSize(){A$1(this)}parseSelections(){this.component.selection=mk1(this,this.selection)}parseMarkGroup(){this.component.mark=lM1(this)}parseAxesAndHeaders(){this.component.axes=O$1(this)}assembleSelectionTopLevelSignals(e){return qC1(this,e)}assembleSignals(){return[...uZ(this),...BC1(this,[])]}assembleSelectionData(e){return HC1(this,e)}assembleLayout(){return null}assembleLayoutSignals(){return hT(this)}correctDataNames=e=>(e.from?.data&&(e.from.data=this.lookupDataSource(e.from.data),"time"in this.encoding&&(e.from.data=e.from.data+RQ)),e.from?.facet?.data&&(e.from.facet.data=this.lookupDataSource(e.from.facet.data)),e);assembleMarks(){let e=this.component.mark??[];return(!this.parent||!xa(this.parent))&&(e=zQ(this,e)),e.map(this.correctDataNames)}assembleGroupStyle(){const{style:e}=this.view||{};return e!==void 0?e:this.encoding.x||this.encoding.y?"cell":"view"}getMapping(){return this.encoding}get mark(){return this.markDef.type}channelHasField(e){return j0(this.encoding,e)}fieldDef(e){const n=this.encoding[e];return j3(n)}typedFieldDef(e){const n=this.fieldDef(e);return Ln(n)?n:null}}class kT extends wT{children;constructor(e,n,i,o,u){super(e,"layer",n,i,u,e.resolve,e.view);const l={...o,...e.width?{width:e.width}:{},...e.height?{height:e.height}:{}};this.children=e.layer.map((a,s)=>{if(Xh(a))return new kT(a,this,this.getName(`layer_${s}`),l,u);if(g4(a))return new HZ(a,this,this.getName(`layer_${s}`),l,u);throw new Error(yk(a))})}parseData(){this.component.data=fp(this);for(const e of this.children)e.parseData()}parseLayoutSize(){E$1(this)}parseSelections(){this.component.selection={};for(const e of this.children){e.parseSelections();for(const n of g1(e.component.selection))this.component.selection[n]=e.component.selection[n]}de(this.component.selection).some(e=>bi(e))&&xk(bk)}parseMarkGroup(){for(const e of this.children)e.parseMarkGroup()}parseAxesAndHeaders(){z$1(this)}assembleSelectionTopLevelSignals(e){return this.children.reduce((n,i)=>i.assembleSelectionTopLevelSignals(n),e)}assembleSignals(){return this.children.reduce((e,n)=>e.concat(n.assembleSignals()),uZ(this))}assembleLayoutSignals(){return this.children.reduce((e,n)=>e.concat(n.assembleLayoutSignals()),hT(this))}assembleSelectionData(e){return this.children.reduce((n,i)=>i.assembleSelectionData(n),e)}assembleGroupStyle(){const e=new Set;for(const i of this.children)for(const o of S1(i.assembleGroupStyle()))e.add(o);const n=Array.from(e);return n.length>1?n:n.length===1?n[0]:void 0}assembleTitle(){let e=super.assembleTitle();if(e)return e;for(const n of this.children)if(e=n.assembleTitle(),e)return e}assembleLayout(){return null}assembleMarks(){return GC1(this,this.children.flatMap(e=>e.assembleMarks()))}assembleLegends(){return this.children.reduce((e,n)=>e.concat(n.assembleLegends()),wZ(this))}}function TT(t,e,n,i,o){if(Uh(t))return new Pr(t,e,n,o);if(Xh(t))return new kT(t,e,n,i,o);if(g4(t))return new HZ(t,e,n,i,o);if(SA1(t))return new M$1(t,e,n,o);throw new Error(yk(t))}function gM1(t,e={}){e.logger&&TE1(e.logger),e.fieldTitle&&IK(e.fieldTitle);try{const n=pQ(Kl(e.config,t.config)),i=AQ(t,n),o=TT(i,null,"",void 0,n);return o.parse(),LT1(o.component.data,o),{spec:pM1(o,hM1(t,i.autosize,n,o),t.datasets,t.usermeta),normalized:i}}finally{e.logger&&$E1(),e.fieldTitle&&GS1()}}function hM1(t,e,n,i){const o=i.component.layoutSize.get("width"),u=i.component.layoutSize.get("height");if(e===void 0?(e={type:"pad"},i.hasAxisOrientSignalRef()&&(e.resize=!0)):w1(e)&&(e={type:e}),o&&u&&NC1(e.type)){if(o==="step"&&u==="step")m1(pL()),e.type="pad";else if(o==="step"||u==="step"){const l=o==="step"?"width":"height";m1(pL(Nh(l)));const a=l==="width"?"height":"width";e.type=RC1(a)}}return{...g1(e).length===1&&e.type?e.type==="pad"?{}:{autosize:e.type}:{autosize:e},...qL(n,!1),...qL(t,!0)}}function pM1(t,e,n={},i){const o=t.config?jA1(t.config):void 0,u=b$1(t.component.data,n),l=t.assembleSelectionData(u),a=t.assembleProjections(),s=t.assembleTitle(),c=t.assembleGroupStyle(),f=t.assembleGroupEncodeEntry(!0);let g=t.assembleLayoutSignals();g=g.filter(v=>(v.name==="width"||v.name==="height")&&v.value!==void 0?(e[v.name]=+v.value,!1):!0);const{params:p,...m}=e;return{$schema:"https://vega.github.io/schema/vega/v6.json",...t.description?{description:t.description}:{},...m,...s?{title:s}:{},...c?{style:c}:{},...f?{encode:{update:f}}:{},data:l,...a.length>0?{projections:a}:{},...t.assembleGroup([...g,...t.assembleSelectionTopLevelSignals([]),...dQ(p)]),...o?{config:o}:{},...i?{usermeta:i}:{}}}const mM1=I_1.version,yM1=Object.freeze(Object.defineProperty({__proto__:null,accessPathDepth:Rl,accessPathWithDatum:ak,accessWithDatumToUnescapedPath:St,compile:gM1,contains:it,deepEqual:x2,deleteNestedProperty:Of,duplicate:W1,entries:Su,every:ok,fieldIntersection:lk,flatAccessWithDatum:EX,getFirstDefined:le,hasIntersection:uk,hasProperty:h1,hash:at,internalField:kX,isBoolean:p8,isEmpty:Ot,isEqual:U_1,isInternalField:TX,isNullOrFalse:U_,isNumeric:Ah,keys:g1,logicalExpr:Lr,mergeDeep:_X,never:xX,normalize:AQ,normalizeAngle:m8,omit:S2,pick:Ml,prefixGenerator:q_,removePathFromField:ga,replaceAll:o6,replacePathInField:r3,resetIdCounter:H_1,setEqual:wX,some:Nl,stringify:_t,titleCase:d7,unescapeSingleQuoteAndPathDot:SX,unique:di,uniqueId:CX,vals:de,varName:qt,version:mM1},Symbol.toStringTag,{value:"Module"}));function GZ(t){const[e,n]=/schema\/([\w-]+)\/([\w\.\-]+)\.json$/g.exec(t).slice(1,3);return{library:e,version:n}}var vM1="3.0.0",bM1={version:vM1};const F5="#fff",bj="#888",xM1={background:"#333",view:{stroke:bj},title:{color:F5,subtitleColor:F5},style:{"guide-label":{fill:F5},"guide-title":{fill:F5}},axis:{domainColor:F5,gridColor:bj,tickColor:F5}},f0="#4572a7",_M1={background:"#fff",arc:{fill:f0},area:{fill:f0},line:{stroke:f0,strokeWidth:2},path:{stroke:f0},rect:{fill:f0},shape:{stroke:f0},symbol:{fill:f0,strokeWidth:1.5,size:50},axis:{bandPosition:.5,grid:!0,gridColor:"#000000",gridOpacity:1,gridWidth:.5,labelPadding:10,tickSize:5,tickWidth:.5},axisBand:{grid:!1,tickExtra:!0},legend:{labelBaseline:"middle",labelFontSize:11,symbolSize:50,symbolType:"square"},range:{category:["#4572a7","#aa4643","#8aa453","#71598e","#4598ae","#d98445","#94aace","#d09393","#b9cc98","#a99cbc"]}},g0="#30a2da",Eb="#cbcbcb",wM1="#999",EM1="#333",xj="#f0f0f0",_j="#333",SM1={arc:{fill:g0},area:{fill:g0},axis:{domainColor:Eb,grid:!0,gridColor:Eb,gridWidth:1,labelColor:wM1,labelFontSize:10,titleColor:EM1,tickColor:Eb,tickSize:10,titleFontSize:14,titlePadding:10,labelPadding:4},axisBand:{grid:!1},background:xj,group:{fill:xj},legend:{labelColor:_j,labelFontSize:11,padding:1,symbolSize:30,symbolType:"square",titleColor:_j,titleFontSize:14,titlePadding:10},line:{stroke:g0,strokeWidth:2},path:{stroke:g0,strokeWidth:.5},rect:{fill:g0},range:{category:["#30a2da","#fc4f30","#e5ae38","#6d904f","#8b8b8b","#b96db8","#ff9e27","#56cc60","#52d2ca","#52689e","#545454","#9fe4f8"],diverging:["#cc0020","#e77866","#f6e7e1","#d6e8ed","#91bfd9","#1d78b5"],heatmap:["#d6e8ed","#cee0e5","#91bfd9","#549cc6","#1d78b5"]},point:{filled:!0,shape:"circle"},shape:{stroke:g0},bar:{binSpacing:2,fill:g0,stroke:null},title:{anchor:"start",fontSize:24,fontWeight:600,offset:20}},h0="#000",AM1={group:{fill:"#e5e5e5"},arc:{fill:h0},area:{fill:h0},line:{stroke:h0},path:{stroke:h0},rect:{fill:h0},shape:{stroke:h0},symbol:{fill:h0,size:40},axis:{domain:!1,grid:!0,gridColor:"#FFFFFF",gridOpacity:1,labelColor:"#7F7F7F",labelPadding:4,tickColor:"#7F7F7F",tickSize:5.67,titleFontSize:16,titleFontWeight:"normal"},legend:{labelBaseline:"middle",labelFontSize:11,symbolSize:40},range:{category:["#000000","#7F7F7F","#1A1A1A","#999999","#333333","#B0B0B0","#4D4D4D","#C9C9C9","#666666","#DCDCDC"]}},CM1=22,kM1="normal",wj="Benton Gothic, sans-serif",Ej=11.5,TM1="normal",p0="#82c6df",Sb="Benton Gothic Bold, sans-serif",Sj="normal",Aj=13,Y9={"category-6":["#ec8431","#829eb1","#c89d29","#3580b1","#adc839","#ab7fb4"],"fire-7":["#fbf2c7","#f9e39c","#f8d36e","#f4bb6a","#e68a4f","#d15a40","#ab4232"],"fireandice-6":["#e68a4f","#f4bb6a","#f9e39c","#dadfe2","#a6b7c6","#849eae"]},$M1={background:"#ffffff",title:{anchor:"start",color:"#000000",font:Sb,fontSize:CM1,fontWeight:kM1},arc:{fill:p0},area:{fill:p0},line:{stroke:p0,strokeWidth:2},path:{stroke:p0},rect:{fill:p0},shape:{stroke:p0},symbol:{fill:p0,size:30},axis:{labelFont:wj,labelFontSize:Ej,labelFontWeight:TM1,titleFont:Sb,titleFontSize:Aj,titleFontWeight:Sj},axisX:{labelAngle:0,labelPadding:4,tickSize:3},axisY:{labelBaseline:"middle",maxExtent:45,minExtent:45,tickSize:2,titleAlign:"left",titleAngle:0,titleX:-45,titleY:-11},legend:{labelFont:wj,labelFontSize:Ej,symbolType:"square",titleFont:Sb,titleFontSize:Aj,titleFontWeight:Sj},range:{category:Y9["category-6"],diverging:Y9["fireandice-6"],heatmap:Y9["fire-7"],ordinal:Y9["fire-7"],ramp:Y9["fire-7"]}},m0="#ab5787",Cc="#979797",MM1={background:"#f9f9f9",arc:{fill:m0},area:{fill:m0},line:{stroke:m0},path:{stroke:m0},rect:{fill:m0},shape:{stroke:m0},symbol:{fill:m0,size:30},axis:{domainColor:Cc,domainWidth:.5,gridWidth:.2,labelColor:Cc,tickColor:Cc,tickWidth:.2,titleColor:Cc},axisBand:{grid:!1},axisX:{grid:!0,tickSize:10},axisY:{domain:!1,grid:!0,tickSize:0},legend:{labelFontSize:11,padding:1,symbolSize:30,symbolType:"square"},range:{category:["#ab5787","#51b2e5","#703c5c","#168dd9","#d190b6","#00609f","#d365ba","#154866","#666666","#c4c4c4"]}},y0="#3e5c69",NM1={background:"#fff",arc:{fill:y0},area:{fill:y0},line:{stroke:y0},path:{stroke:y0},rect:{fill:y0},shape:{stroke:y0},symbol:{fill:y0},axis:{domainWidth:.5,grid:!0,labelPadding:2,tickSize:5,tickWidth:.5,titleFontWeight:"normal"},axisBand:{grid:!1},axisX:{gridWidth:.2},axisY:{gridDash:[3],gridWidth:.4},legend:{labelFontSize:11,padding:1,symbolType:"square"},range:{category:["#3e5c69","#6793a6","#182429","#0570b0","#3690c0","#74a9cf","#a6bddb","#e2ddf2"]}},H2="#1696d2",Cj="#000000",RM1="#FFFFFF",kc="Lato",Ab="Lato",DM1="Lato",OM1="#DEDDDD",FM1=18,V9={"shades-blue":["#CFE8F3","#A2D4EC","#73BFE2","#46ABDB","#1696D2","#12719E","#0A4C6A","#062635"],"six-groups-cat-1":["#1696d2","#ec008b","#fdbf11","#000000","#d2d2d2","#55b748"],"six-groups-seq":["#cfe8f3","#a2d4ec","#73bfe2","#46abdb","#1696d2","#12719e"],"diverging-colors":["#ca5800","#fdbf11","#fdd870","#fff2cf","#cfe8f3","#73bfe2","#1696d2","#0a4c6a"]},zM1={background:RM1,title:{anchor:"start",fontSize:FM1,font:kc},axisX:{domain:!0,domainColor:Cj,domainWidth:1,grid:!1,labelFontSize:12,labelFont:Ab,labelAngle:0,tickColor:Cj,tickSize:5,titleFontSize:12,titlePadding:10,titleFont:kc},axisY:{domain:!1,domainWidth:1,grid:!0,gridColor:OM1,gridWidth:1,labelFontSize:12,labelFont:Ab,labelPadding:8,ticks:!1,titleFontSize:12,titlePadding:10,titleFont:kc,titleAngle:0,titleY:-10,titleX:18},legend:{labelFontSize:12,labelFont:Ab,symbolSize:100,titleFontSize:12,titlePadding:10,titleFont:kc,orient:"right",offset:10},view:{stroke:"transparent"},range:{category:V9["six-groups-cat-1"],diverging:V9["diverging-colors"],heatmap:V9["diverging-colors"],ordinal:V9["six-groups-seq"],ramp:V9["shades-blue"]},area:{fill:H2},rect:{fill:H2},line:{color:H2,stroke:H2,strokeWidth:5},trail:{color:H2,stroke:H2,strokeWidth:0,size:1},path:{stroke:H2,strokeWidth:.5},point:{filled:!0},text:{font:DM1,color:H2,fontSize:11,align:"center",fontWeight:400,size:11},style:{bar:{fill:H2,stroke:null}},arc:{fill:H2},shape:{stroke:H2},symbol:{fill:H2,size:30}},v0="#3366CC",kj="#ccc",Tc="Arial, sans-serif",LM1={arc:{fill:v0},area:{fill:v0},path:{stroke:v0},rect:{fill:v0},shape:{stroke:v0},symbol:{stroke:v0},circle:{fill:v0},background:"#fff",padding:{top:10,right:10,bottom:10,left:10},style:{"guide-label":{font:Tc,fontSize:12},"guide-title":{font:Tc,fontSize:12},"group-title":{font:Tc,fontSize:12}},title:{font:Tc,fontSize:14,fontWeight:"bold",dy:-3,anchor:"start"},axis:{gridColor:kj,tickColor:kj,domain:!1,grid:!0},range:{category:["#4285F4","#DB4437","#F4B400","#0F9D58","#AB47BC","#00ACC1","#FF7043","#9E9D24","#5C6BC0","#F06292","#00796B","#C2185B"],heatmap:["#c6dafc","#5e97f6","#2a56c6"]}},$T=t=>t*(1/3+1),Tj=$T(9),$j=$T(10),Mj=$T(12),X9="Segoe UI",Nj="wf_standard-font, helvetica, arial, sans-serif",Rj="#252423",K9="#605E5C",Dj="transparent",jM1="#C8C6C4",b3="#118DFF",PM1="#12239E",IM1="#E66C37",BM1="#6B007B",UM1="#E044A7",qM1="#744EC2",HM1="#D9B300",GM1="#D64550",WZ=b3,YZ="#DEEFFF",Oj=[YZ,WZ],WM1=[YZ,"#c7e4ff","#b0d9ff","#9aceff","#83c3ff","#6cb9ff","#55aeff","#3fa3ff","#2898ff",WZ],YM1={view:{stroke:Dj},background:Dj,font:X9,header:{titleFont:Nj,titleFontSize:Mj,titleColor:Rj,labelFont:X9,labelFontSize:$j,labelColor:K9},axis:{ticks:!1,grid:!1,domain:!1,labelColor:K9,labelFontSize:Tj,titleFont:Nj,titleColor:Rj,titleFontSize:Mj,titleFontWeight:"normal"},axisQuantitative:{tickCount:3,grid:!0,gridColor:jM1,gridDash:[1,5],labelFlush:!1},axisBand:{tickExtra:!0},axisX:{labelPadding:5},axisY:{labelPadding:10},bar:{fill:b3},line:{stroke:b3,strokeWidth:3,strokeCap:"round",strokeJoin:"round"},text:{font:X9,fontSize:Tj,fill:K9},arc:{fill:b3},area:{fill:b3,line:!0,opacity:.6},path:{stroke:b3},rect:{fill:b3},point:{fill:b3,filled:!0,size:75},shape:{stroke:b3},symbol:{fill:b3,strokeWidth:1.5,size:50},legend:{titleFont:X9,titleFontWeight:"bold",titleColor:K9,labelFont:X9,labelFontSize:$j,labelColor:K9,symbolType:"circle",symbolSize:75},range:{category:[b3,PM1,IM1,BM1,UM1,qM1,HM1,GM1],diverging:Oj,heatmap:Oj,ordinal:WM1}},Cb='IBM Plex Sans,system-ui,-apple-system,BlinkMacSystemFont,".sfnstext-regular",sans-serif',VM1='IBM Plex Sans Condensed, system-ui, -apple-system, BlinkMacSystemFont, ".SFNSText-Regular", sans-serif',kb=400,$c={textPrimary:{g90:"#f4f4f4",g100:"#f4f4f4",white:"#161616",g10:"#161616"},textSecondary:{g90:"#c6c6c6",g100:"#c6c6c6",white:"#525252",g10:"#525252"},layerAccent01:{white:"#e0e0e0",g10:"#e0e0e0",g90:"#525252",g100:"#393939"},gridBg:{white:"#ffffff",g10:"#ffffff",g90:"#161616",g100:"#161616"}},XM1=["#8a3ffc","#33b1ff","#007d79","#ff7eb6","#fa4d56","#fff1f1","#6fdc8c","#4589ff","#d12771","#d2a106","#08bdba","#bae6ff","#ba4e00","#d4bbff"],KM1=["#6929c4","#1192e8","#005d5d","#9f1853","#fa4d56","#570408","#198038","#002d9c","#ee538b","#b28600","#009d9a","#012749","#8a3800","#a56eff"];function gp({theme:t,background:e}){const n=["white","g10"].includes(t)?"light":"dark",i=$c.gridBg[t],o=$c.textPrimary[t],u=$c.textSecondary[t],l=n==="dark"?XM1:KM1,a=n==="dark"?"#d4bbff":"#6929c4";return{background:e,arc:{fill:a},area:{fill:a},path:{stroke:a},rect:{fill:a},shape:{stroke:a},symbol:{stroke:a},circle:{fill:a},view:{fill:i,stroke:i},group:{fill:i},title:{color:o,anchor:"start",dy:-15,fontSize:16,font:Cb,fontWeight:600},axis:{labelColor:u,labelFontSize:12,labelFont:VM1,labelFontWeight:kb,titleColor:o,titleFontWeight:600,titleFontSize:12,grid:!0,gridColor:$c.layerAccent01[t],labelAngle:0},axisX:{titlePadding:10},axisY:{titlePadding:2.5},style:{"guide-label":{font:Cb,fill:u,fontWeight:kb},"guide-title":{font:Cb,fill:u,fontWeight:kb}},range:{category:l,diverging:["#750e13","#a2191f","#da1e28","#fa4d56","#ff8389","#ffb3b8","#ffd7d9","#fff1f1","#e5f6ff","#bae6ff","#82cfff","#33b1ff","#1192e8","#0072c3","#00539a","#003a6d"],heatmap:["#f6f2ff","#e8daff","#d4bbff","#be95ff","#a56eff","#8a3ffc","#6929c4","#491d8b","#31135e","#1c0f30"]}}}const QM1=gp({theme:"white",background:"#ffffff"}),ZM1=gp({theme:"g10",background:"#f4f4f4"}),JM1=gp({theme:"g90",background:"#262626"}),tN1=gp({theme:"g100",background:"#161616"}),eN1=bM1.version,nN1=Object.freeze(Object.defineProperty({__proto__:null,carbong10:ZM1,carbong100:tN1,carbong90:JM1,carbonwhite:QM1,dark:xM1,excel:_M1,fivethirtyeight:SM1,ggplot2:AM1,googlecharts:LM1,latimes:$M1,powerbi:YM1,quartz:MM1,urbaninstitute:zM1,version:eN1,vox:NM1},Symbol.toStringTag,{value:"Module"}));function iN1(t,e,n,i){if(r1(t))return`[${t.map(o=>e(w1(o)?o:Fj(o,n))).join(", ")}]`;if(E1(t)){let o="";const{title:u,image:l,...a}=t;u&&(o+=`<h2>${e(u)}</h2>`),l&&(o+=`<img src="${new URL(e(l),i||location.href).href}">`);const s=Object.keys(a);if(s.length>0){o+="<table>";for(const c of s){let f=a[c];f!==void 0&&(E1(f)&&(f=Fj(f,n)),o+=`<tr><td class="key">${e(c)}</td><td class="value">${e(f)}</td></tr>`)}o+="</table>"}return o||"{}"}return e(t)}function oN1(t){const e=[];return function(n,i){if(typeof i!="object"||i===null)return i;const o=e.indexOf(this)+1;return e.length=o,e.length>t?"[Object]":e.indexOf(i)>=0?"[Circular]":(e.push(i),i)}}function Fj(t,e){return JSON.stringify(t,oN1(e))}var uN1=`#vg-tooltip-element {
  visibility: hidden;
  padding: 8px;
  position: fixed;
  z-index: 1000;
  font-family: sans-serif;
  font-size: 11px;
  border-radius: 3px;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
  /* The default theme is the light theme. */
  background-color: rgba(255, 255, 255, 0.95);
  border: 1px solid #d9d9d9;
  color: black;
}
#vg-tooltip-element.visible {
  visibility: visible;
}
#vg-tooltip-element h2 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 13px;
}
#vg-tooltip-element table {
  border-spacing: 0;
}
#vg-tooltip-element table tr {
  border: none;
}
#vg-tooltip-element table tr td {
  overflow: hidden;
  text-overflow: ellipsis;
  padding-top: 2px;
  padding-bottom: 2px;
}
#vg-tooltip-element table tr td.key {
  color: #808080;
  max-width: 150px;
  text-align: right;
  padding-right: 4px;
}
#vg-tooltip-element table tr td.value {
  display: block;
  max-width: 300px;
  max-height: 7em;
  text-align: left;
}
#vg-tooltip-element.dark-theme {
  background-color: rgba(32, 32, 32, 0.9);
  border: 1px solid #f5f5f5;
  color: white;
}
#vg-tooltip-element.dark-theme td.key {
  color: #bfbfbf;
}
`;const VZ="vg-tooltip-element",lN1={offsetX:10,offsetY:10,id:VZ,styleId:"vega-tooltip-style",theme:"light",disableDefaultStyle:!1,sanitize:aN1,maxDepth:2,formatTooltip:iN1,baseURL:"",anchor:"cursor",position:["top","bottom","left","right","top-left","top-right","bottom-left","bottom-right"]};function aN1(t){return String(t).replace(/&/g,"&amp;").replace(/</g,"&lt;")}function rN1(t){if(!/^[A-Za-z]+[-:.\w]*$/.test(t))throw new Error("Invalid HTML ID");return uN1.toString().replaceAll(VZ,t)}function XZ(t,e,{offsetX:n,offsetY:i}){const o=KZ({x1:t.clientX,x2:t.clientX,y1:t.clientY,y2:t.clientY},e,n,i),u=["bottom-right","bottom-left","top-right","top-left"];for(const l of u)if(QZ(o[l],e))return o[l];return o["top-left"]}function sN1(t,e,n,i,o){const{position:u,offsetX:l,offsetY:a}=o,s=t._el.getBoundingClientRect(),c=t._origin,f=cN1(s,c,n),g=KZ(f,i,l,a),p=Array.isArray(u)?u:[u];for(const m of p)if(QZ(g[m],i)&&!dN1(e,g[m],i))return g[m];return XZ(e,i,o)}function cN1(t,e,n){const i=n.isVoronoi?n.datum.bounds:n.bounds;let o=t.left+e[0]+i.x1,u=t.top+e[1]+i.y1,l=n;for(;l.mark.group;)l=l.mark.group,o+=l.x??0,u+=l.y??0;const a=i.x2-i.x1,s=i.y2-i.y1;return{x1:o,x2:o+a,y1:u,y2:u+s}}function KZ(t,e,n,i){const o=(t.x1+t.x2)/2,u=(t.y1+t.y2)/2,l=t.x1-e.width-n,a=o-e.width/2,s=t.x2+n,c=t.y1-e.height-i,f=u-e.height/2,g=t.y2+i;return{top:{x:a,y:c},bottom:{x:a,y:g},left:{x:l,y:f},right:{x:s,y:f},"top-left":{x:l,y:c},"top-right":{x:s,y:c},"bottom-left":{x:l,y:g},"bottom-right":{x:s,y:g}}}function QZ(t,e){return t.x>=0&&t.y>=0&&t.x+e.width<=window.innerWidth&&t.y+e.height<=window.innerHeight}function dN1(t,e,n){return t.clientX>=e.x&&t.clientX<=e.x+n.width&&t.clientY>=e.y&&t.clientY<=e.y+n.height}class fN1{call;options;el;constructor(e){this.options={...lN1,...e};const n=this.options.id;if(this.el=null,this.call=this.tooltipHandler.bind(this),!this.options.disableDefaultStyle&&!document.getElementById(this.options.styleId)){const i=document.createElement("style");i.setAttribute("id",this.options.styleId),i.innerHTML=rN1(n);const o=document.head;o.childNodes.length>0?o.insertBefore(i,o.childNodes[0]):o.appendChild(i)}}tooltipHandler(e,n,i,o){if(this.el=document.getElementById(this.options.id),this.el||(this.el=document.createElement("div"),this.el.setAttribute("id",this.options.id),this.el.classList.add("vg-tooltip"),(document.fullscreenElement??document.body).appendChild(this.el)),o==null||o===""){this.el.classList.remove("visible",`${this.options.theme}-theme`);return}this.el.innerHTML=this.options.formatTooltip(o,this.options.sanitize,this.options.maxDepth,this.options.baseURL),this.el.classList.add("visible",`${this.options.theme}-theme`);const{x:u,y:l}=this.options.anchor==="mark"?sN1(e,n,i,this.el.getBoundingClientRect(),this.options):XZ(n,this.el.getBoundingClientRect(),this.options);this.el.style.top=`${l}px`,this.el.style.left=`${u}px`}}var Tb={};/*!
 * https://github.com/Starcounter-Jack/JSON-Patch
 * (c) 2017-2022 Joachim Wester
 * MIT licensed
 */var gN1=(function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(i,o){i.__proto__=o}||function(i,o){for(var u in o)o.hasOwnProperty(u)&&(i[u]=o[u])},t(e,n)};return function(e,n){t(e,n);function i(){this.constructor=e}e.prototype=n===null?Object.create(n):(i.prototype=n.prototype,new i)}})(),hN1=Object.prototype.hasOwnProperty;function mw(t,e){return hN1.call(t,e)}function yw(t){if(Array.isArray(t)){for(var e=new Array(t.length),n=0;n<e.length;n++)e[n]=""+n;return e}if(Object.keys)return Object.keys(t);var i=[];for(var o in t)mw(t,o)&&i.push(o);return i}function _2(t){switch(typeof t){case"object":return JSON.parse(JSON.stringify(t));case"undefined":return null;default:return t}}function vw(t){for(var e=0,n=t.length,i;e<n;){if(i=t.charCodeAt(e),i>=48&&i<=57){e++;continue}return!1}return!0}function _0(t){return t.indexOf("/")===-1&&t.indexOf("~")===-1?t:t.replace(/~/g,"~0").replace(/\//g,"~1")}function ZZ(t){return t.replace(/~1/g,"/").replace(/~0/g,"~")}function bw(t){if(t===void 0)return!0;if(t){if(Array.isArray(t)){for(var e=0,n=t.length;e<n;e++)if(bw(t[e]))return!0}else if(typeof t=="object"){for(var i=yw(t),o=i.length,u=0;u<o;u++)if(bw(t[i[u]]))return!0}}return!1}function zj(t,e){var n=[t];for(var i in e){var o=typeof e[i]=="object"?JSON.stringify(e[i],null,2):e[i];typeof o<"u"&&n.push(i+": "+o)}return n.join(`
`)}var JZ=(function(t){gN1(e,t);function e(n,i,o,u,l){var a=this.constructor,s=t.call(this,zj(n,{name:i,index:o,operation:u,tree:l}))||this;return s.name=i,s.index=o,s.operation=u,s.tree=l,Object.setPrototypeOf(s,a.prototype),s.message=zj(n,{name:i,index:o,operation:u,tree:l}),s}return e})(Error),Jt=JZ,pN1=_2,V5={add:function(t,e,n){return t[e]=this.value,{newDocument:n}},remove:function(t,e,n){var i=t[e];return delete t[e],{newDocument:n,removed:i}},replace:function(t,e,n){var i=t[e];return t[e]=this.value,{newDocument:n,removed:i}},move:function(t,e,n){var i=Vf(n,this.path);i&&(i=_2(i));var o=B0(n,{op:"remove",path:this.from}).removed;return B0(n,{op:"add",path:this.path,value:o}),{newDocument:n,removed:i}},copy:function(t,e,n){var i=Vf(n,this.from);return B0(n,{op:"add",path:this.path,value:_2(i)}),{newDocument:n}},test:function(t,e,n){return{newDocument:n,test:_8(t[e],this.value)}},_get:function(t,e,n){return this.value=t[e],{newDocument:n}}},mN1={add:function(t,e,n){return vw(e)?t.splice(e,0,this.value):t[e]=this.value,{newDocument:n,index:e}},remove:function(t,e,n){var i=t.splice(e,1);return{newDocument:n,removed:i[0]}},replace:function(t,e,n){var i=t[e];return t[e]=this.value,{newDocument:n,removed:i}},move:V5.move,copy:V5.copy,test:V5.test,_get:V5._get};function Vf(t,e){if(e=="")return t;var n={op:"_get",path:e};return B0(t,n),n.value}function B0(t,e,n,i,o,u){if(n===void 0&&(n=!1),i===void 0&&(i=!0),o===void 0&&(o=!0),u===void 0&&(u=0),n&&(typeof n=="function"?n(e,0,t,e.path):Xf(e,0)),e.path===""){var l={newDocument:t};if(e.op==="add")return l.newDocument=e.value,l;if(e.op==="replace")return l.newDocument=e.value,l.removed=t,l;if(e.op==="move"||e.op==="copy")return l.newDocument=Vf(t,e.from),e.op==="move"&&(l.removed=t),l;if(e.op==="test"){if(l.test=_8(t,e.value),l.test===!1)throw new Jt("Test operation failed","TEST_OPERATION_FAILED",u,e,t);return l.newDocument=t,l}else{if(e.op==="remove")return l.removed=t,l.newDocument=null,l;if(e.op==="_get")return e.value=t,l;if(n)throw new Jt("Operation `op` property is not one of operations defined in RFC-6902","OPERATION_OP_INVALID",u,e,t);return l}}else{i||(t=_2(t));var a=e.path||"",s=a.split("/"),c=t,f=1,g=s.length,p=void 0,m=void 0,v=void 0;for(typeof n=="function"?v=n:v=Xf;;){if(m=s[f],m&&m.indexOf("~")!=-1&&(m=ZZ(m)),o&&(m=="__proto__"||m=="prototype"&&f>0&&s[f-1]=="constructor"))throw new TypeError("JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README");if(n&&p===void 0&&(c[m]===void 0?p=s.slice(0,f).join("/"):f==g-1&&(p=e.path),p!==void 0&&v(e,0,t,p)),f++,Array.isArray(c)){if(m==="-")m=c.length;else{if(n&&!vw(m))throw new Jt("Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index","OPERATION_PATH_ILLEGAL_ARRAY_INDEX",u,e,t);vw(m)&&(m=~~m)}if(f>=g){if(n&&e.op==="add"&&m>c.length)throw new Jt("The specified index MUST NOT be greater than the number of elements in the array","OPERATION_VALUE_OUT_OF_BOUNDS",u,e,t);var l=mN1[e.op].call(e,c,m,t);if(l.test===!1)throw new Jt("Test operation failed","TEST_OPERATION_FAILED",u,e,t);return l}}else if(f>=g){var l=V5[e.op].call(e,c,m,t);if(l.test===!1)throw new Jt("Test operation failed","TEST_OPERATION_FAILED",u,e,t);return l}if(c=c[m],n&&f<g&&(!c||typeof c!="object"))throw new Jt("Cannot perform operation at the desired path","OPERATION_PATH_UNRESOLVABLE",u,e,t)}}}function hp(t,e,n,i,o){if(i===void 0&&(i=!0),o===void 0&&(o=!0),n&&!Array.isArray(e))throw new Jt("Patch sequence must be an array","SEQUENCE_NOT_AN_ARRAY");i||(t=_2(t));for(var u=new Array(e.length),l=0,a=e.length;l<a;l++)u[l]=B0(t,e[l],n,!0,o,l),t=u[l].newDocument;return u.newDocument=t,u}function yN1(t,e,n){var i=B0(t,e);if(i.test===!1)throw new Jt("Test operation failed","TEST_OPERATION_FAILED",n,e,t);return i.newDocument}function Xf(t,e,n,i){if(typeof t!="object"||t===null||Array.isArray(t))throw new Jt("Operation is not an object","OPERATION_NOT_AN_OBJECT",e,t,n);if(V5[t.op]){if(typeof t.path!="string")throw new Jt("Operation `path` property is not a string","OPERATION_PATH_INVALID",e,t,n);if(t.path.indexOf("/")!==0&&t.path.length>0)throw new Jt('Operation `path` property must start with "/"',"OPERATION_PATH_INVALID",e,t,n);if((t.op==="move"||t.op==="copy")&&typeof t.from!="string")throw new Jt("Operation `from` property is not present (applicable in `move` and `copy` operations)","OPERATION_FROM_REQUIRED",e,t,n);if((t.op==="add"||t.op==="replace"||t.op==="test")&&t.value===void 0)throw new Jt("Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)","OPERATION_VALUE_REQUIRED",e,t,n);if((t.op==="add"||t.op==="replace"||t.op==="test")&&bw(t.value))throw new Jt("Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)","OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED",e,t,n);if(n){if(t.op=="add"){var o=t.path.split("/").length,u=i.split("/").length;if(o!==u+1&&o!==u)throw new Jt("Cannot perform an `add` operation at the desired path","OPERATION_PATH_CANNOT_ADD",e,t,n)}else if(t.op==="replace"||t.op==="remove"||t.op==="_get"){if(t.path!==i)throw new Jt("Cannot perform the operation at a path that does not exist","OPERATION_PATH_UNRESOLVABLE",e,t,n)}else if(t.op==="move"||t.op==="copy"){var l={op:"_get",path:t.from,value:void 0},a=tJ([l],n);if(a&&a.name==="OPERATION_PATH_UNRESOLVABLE")throw new Jt("Cannot perform the operation from a path that does not exist","OPERATION_FROM_UNRESOLVABLE",e,t,n)}}}else throw new Jt("Operation `op` property is not one of operations defined in RFC-6902","OPERATION_OP_INVALID",e,t,n)}function tJ(t,e,n){try{if(!Array.isArray(t))throw new Jt("Patch sequence must be an array","SEQUENCE_NOT_AN_ARRAY");if(e)hp(_2(e),_2(t),n||!0);else{n=n||Xf;for(var i=0;i<t.length;i++)n(t[i],i,e,void 0)}}catch(o){if(o instanceof Jt)return o;throw o}}function _8(t,e){if(t===e)return!0;if(t&&e&&typeof t=="object"&&typeof e=="object"){var n=Array.isArray(t),i=Array.isArray(e),o,u,l;if(n&&i){if(u=t.length,u!=e.length)return!1;for(o=u;o--!==0;)if(!_8(t[o],e[o]))return!1;return!0}if(n!=i)return!1;var a=Object.keys(t);if(u=a.length,u!==Object.keys(e).length)return!1;for(o=u;o--!==0;)if(!e.hasOwnProperty(a[o]))return!1;for(o=u;o--!==0;)if(l=a[o],!_8(t[l],e[l]))return!1;return!0}return t!==t&&e!==e}var vN1=Object.freeze({__proto__:null,JsonPatchError:Jt,_areEquals:_8,applyOperation:B0,applyPatch:hp,applyReducer:yN1,deepClone:pN1,getValueByPointer:Vf,validate:tJ,validator:Xf});/*!
 * https://github.com/Starcounter-Jack/JSON-Patch
 * (c) 2017-2021 Joachim Wester
 * MIT license
 */var MT=new WeakMap,bN1=(function(){function t(e){this.observers=new Map,this.obj=e}return t})(),xN1=(function(){function t(e,n){this.callback=e,this.observer=n}return t})();function _N1(t){return MT.get(t)}function wN1(t,e){return t.observers.get(e)}function EN1(t,e){t.observers.delete(e.callback)}function SN1(t,e){e.unobserve()}function AN1(t,e){var n=[],i,o=_N1(t);if(!o)o=new bN1(t),MT.set(t,o);else{var u=wN1(o,e);i=u&&u.observer}if(i)return i;if(i={},o.value=_2(t),e){i.callback=e,i.next=null;var l=function(){xw(i)},a=function(){clearTimeout(i.next),i.next=setTimeout(l)};typeof window<"u"&&(window.addEventListener("mouseup",a),window.addEventListener("keyup",a),window.addEventListener("mousedown",a),window.addEventListener("keydown",a),window.addEventListener("change",a))}return i.patches=n,i.object=t,i.unobserve=function(){xw(i),clearTimeout(i.next),EN1(o,i),typeof window<"u"&&(window.removeEventListener("mouseup",a),window.removeEventListener("keyup",a),window.removeEventListener("mousedown",a),window.removeEventListener("keydown",a),window.removeEventListener("change",a))},o.observers.set(e,new xN1(e,i)),i}function xw(t,e){e===void 0&&(e=!1);var n=MT.get(t.object);NT(n.value,t.object,t.patches,"",e),t.patches.length&&hp(n.value,t.patches);var i=t.patches;return i.length>0&&(t.patches=[],t.callback&&t.callback(i)),i}function NT(t,e,n,i,o){if(e!==t){typeof e.toJSON=="function"&&(e=e.toJSON());for(var u=yw(e),l=yw(t),a=!1,s=l.length-1;s>=0;s--){var c=l[s],f=t[c];if(mw(e,c)&&!(e[c]===void 0&&f!==void 0&&Array.isArray(e)===!1)){var g=e[c];typeof f=="object"&&f!=null&&typeof g=="object"&&g!=null&&Array.isArray(f)===Array.isArray(g)?NT(f,g,n,i+"/"+_0(c),o):f!==g&&(o&&n.push({op:"test",path:i+"/"+_0(c),value:_2(f)}),n.push({op:"replace",path:i+"/"+_0(c),value:_2(g)}))}else Array.isArray(t)===Array.isArray(e)?(o&&n.push({op:"test",path:i+"/"+_0(c),value:_2(f)}),n.push({op:"remove",path:i+"/"+_0(c)}),a=!0):(o&&n.push({op:"test",path:i,value:t}),n.push({op:"replace",path:i,value:e}))}if(!(!a&&u.length==l.length))for(var s=0;s<u.length;s++){var c=u[s];!mw(t,c)&&e[c]!==void 0&&n.push({op:"add",path:i+"/"+_0(c),value:_2(e[c])})}}}function CN1(t,e,n){n===void 0&&(n=!1);var i=[];return NT(t,e,i,"",n),i}var kN1=Object.freeze({__proto__:null,compare:CN1,generate:xw,observe:AN1,unobserve:SN1});Object.assign({},vN1,kN1,{JsonPatchError:JZ,deepClone:_2,escapePathComponent:_0,unescapePathComponent:ZZ});function TN1(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var $b,Lj;function $N1(){if(Lj)return $b;Lj=1;class t{constructor(){this.max=1e3,this.map=new Map}get(n){const i=this.map.get(n);if(i!==void 0)return this.map.delete(n),this.map.set(n,i),i}delete(n){return this.map.delete(n)}set(n,i){if(!this.delete(n)&&i!==void 0){if(this.map.size>=this.max){const u=this.map.keys().next().value;this.delete(u)}this.map.set(n,i)}return this}}return $b=t,$b}var Mb,jj;function RT(){if(jj)return Mb;jj=1;const t=Object.freeze({loose:!0}),e=Object.freeze({});return Mb=i=>i?typeof i!="object"?t:i:e,Mb}var Mc={exports:{}},Nb,Pj;function DT(){if(Pj)return Nb;Pj=1;const t="2.0.0",e=256,n=Number.MAX_SAFE_INTEGER||9007199254740991,i=16,o=e-6;return Nb={MAX_LENGTH:e,MAX_SAFE_COMPONENT_LENGTH:i,MAX_SAFE_BUILD_LENGTH:o,MAX_SAFE_INTEGER:n,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:t,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2},Nb}var Rb,Ij;function pp(){return Ij||(Ij=1,Rb=typeof process=="object"&&Tb&&Tb.NODE_DEBUG&&/\bsemver\b/i.test(Tb.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{}),Rb}var Bj;function OT(){return Bj||(Bj=1,(function(t,e){const{MAX_SAFE_COMPONENT_LENGTH:n,MAX_SAFE_BUILD_LENGTH:i,MAX_LENGTH:o}=DT(),u=pp();e=t.exports={};const l=e.re=[],a=e.safeRe=[],s=e.src=[],c=e.safeSrc=[],f=e.t={};let g=0;const p="[a-zA-Z0-9-]",m=[["\\s",1],["\\d",o],[p,i]],v=x=>{for(const[w,S]of m)x=x.split(`${w}*`).join(`${w}{0,${S}}`).split(`${w}+`).join(`${w}{1,${S}}`);return x},b=(x,w,S)=>{const A=v(w),C=g++;u(x,C,w),f[x]=C,s[C]=w,c[C]=A,l[C]=new RegExp(w,S?"g":void 0),a[C]=new RegExp(A,S?"g":void 0)};b("NUMERICIDENTIFIER","0|[1-9]\\d*"),b("NUMERICIDENTIFIERLOOSE","\\d+"),b("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${p}*`),b("MAINVERSION",`(${s[f.NUMERICIDENTIFIER]})\\.(${s[f.NUMERICIDENTIFIER]})\\.(${s[f.NUMERICIDENTIFIER]})`),b("MAINVERSIONLOOSE",`(${s[f.NUMERICIDENTIFIERLOOSE]})\\.(${s[f.NUMERICIDENTIFIERLOOSE]})\\.(${s[f.NUMERICIDENTIFIERLOOSE]})`),b("PRERELEASEIDENTIFIER",`(?:${s[f.NUMERICIDENTIFIER]}|${s[f.NONNUMERICIDENTIFIER]})`),b("PRERELEASEIDENTIFIERLOOSE",`(?:${s[f.NUMERICIDENTIFIERLOOSE]}|${s[f.NONNUMERICIDENTIFIER]})`),b("PRERELEASE",`(?:-(${s[f.PRERELEASEIDENTIFIER]}(?:\\.${s[f.PRERELEASEIDENTIFIER]})*))`),b("PRERELEASELOOSE",`(?:-?(${s[f.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${s[f.PRERELEASEIDENTIFIERLOOSE]})*))`),b("BUILDIDENTIFIER",`${p}+`),b("BUILD",`(?:\\+(${s[f.BUILDIDENTIFIER]}(?:\\.${s[f.BUILDIDENTIFIER]})*))`),b("FULLPLAIN",`v?${s[f.MAINVERSION]}${s[f.PRERELEASE]}?${s[f.BUILD]}?`),b("FULL",`^${s[f.FULLPLAIN]}$`),b("LOOSEPLAIN",`[v=\\s]*${s[f.MAINVERSIONLOOSE]}${s[f.PRERELEASELOOSE]}?${s[f.BUILD]}?`),b("LOOSE",`^${s[f.LOOSEPLAIN]}$`),b("GTLT","((?:<|>)?=?)"),b("XRANGEIDENTIFIERLOOSE",`${s[f.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),b("XRANGEIDENTIFIER",`${s[f.NUMERICIDENTIFIER]}|x|X|\\*`),b("XRANGEPLAIN",`[v=\\s]*(${s[f.XRANGEIDENTIFIER]})(?:\\.(${s[f.XRANGEIDENTIFIER]})(?:\\.(${s[f.XRANGEIDENTIFIER]})(?:${s[f.PRERELEASE]})?${s[f.BUILD]}?)?)?`),b("XRANGEPLAINLOOSE",`[v=\\s]*(${s[f.XRANGEIDENTIFIERLOOSE]})(?:\\.(${s[f.XRANGEIDENTIFIERLOOSE]})(?:\\.(${s[f.XRANGEIDENTIFIERLOOSE]})(?:${s[f.PRERELEASELOOSE]})?${s[f.BUILD]}?)?)?`),b("XRANGE",`^${s[f.GTLT]}\\s*${s[f.XRANGEPLAIN]}$`),b("XRANGELOOSE",`^${s[f.GTLT]}\\s*${s[f.XRANGEPLAINLOOSE]}$`),b("COERCEPLAIN",`(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?`),b("COERCE",`${s[f.COERCEPLAIN]}(?:$|[^\\d])`),b("COERCEFULL",s[f.COERCEPLAIN]+`(?:${s[f.PRERELEASE]})?(?:${s[f.BUILD]})?(?:$|[^\\d])`),b("COERCERTL",s[f.COERCE],!0),b("COERCERTLFULL",s[f.COERCEFULL],!0),b("LONETILDE","(?:~>?)"),b("TILDETRIM",`(\\s*)${s[f.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",b("TILDE",`^${s[f.LONETILDE]}${s[f.XRANGEPLAIN]}$`),b("TILDELOOSE",`^${s[f.LONETILDE]}${s[f.XRANGEPLAINLOOSE]}$`),b("LONECARET","(?:\\^)"),b("CARETTRIM",`(\\s*)${s[f.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",b("CARET",`^${s[f.LONECARET]}${s[f.XRANGEPLAIN]}$`),b("CARETLOOSE",`^${s[f.LONECARET]}${s[f.XRANGEPLAINLOOSE]}$`),b("COMPARATORLOOSE",`^${s[f.GTLT]}\\s*(${s[f.LOOSEPLAIN]})$|^$`),b("COMPARATOR",`^${s[f.GTLT]}\\s*(${s[f.FULLPLAIN]})$|^$`),b("COMPARATORTRIM",`(\\s*)${s[f.GTLT]}\\s*(${s[f.LOOSEPLAIN]}|${s[f.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",b("HYPHENRANGE",`^\\s*(${s[f.XRANGEPLAIN]})\\s+-\\s+(${s[f.XRANGEPLAIN]})\\s*$`),b("HYPHENRANGELOOSE",`^\\s*(${s[f.XRANGEPLAINLOOSE]})\\s+-\\s+(${s[f.XRANGEPLAINLOOSE]})\\s*$`),b("STAR","(<|>)?=?\\s*\\*"),b("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),b("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")})(Mc,Mc.exports)),Mc.exports}var Db,Uj;function MN1(){if(Uj)return Db;Uj=1;const t=/^[0-9]+$/,e=(i,o)=>{const u=t.test(i),l=t.test(o);return u&&l&&(i=+i,o=+o),i===o?0:u&&!l?-1:l&&!u?1:i<o?-1:1};return Db={compareIdentifiers:e,rcompareIdentifiers:(i,o)=>e(o,i)},Db}var Ob,qj;function FT(){if(qj)return Ob;qj=1;const t=pp(),{MAX_LENGTH:e,MAX_SAFE_INTEGER:n}=DT(),{safeRe:i,safeSrc:o,t:u}=OT(),l=RT(),{compareIdentifiers:a}=MN1();class s{constructor(f,g){if(g=l(g),f instanceof s){if(f.loose===!!g.loose&&f.includePrerelease===!!g.includePrerelease)return f;f=f.version}else if(typeof f!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof f}".`);if(f.length>e)throw new TypeError(`version is longer than ${e} characters`);t("SemVer",f,g),this.options=g,this.loose=!!g.loose,this.includePrerelease=!!g.includePrerelease;const p=f.trim().match(g.loose?i[u.LOOSE]:i[u.FULL]);if(!p)throw new TypeError(`Invalid Version: ${f}`);if(this.raw=f,this.major=+p[1],this.minor=+p[2],this.patch=+p[3],this.major>n||this.major<0)throw new TypeError("Invalid major version");if(this.minor>n||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>n||this.patch<0)throw new TypeError("Invalid patch version");p[4]?this.prerelease=p[4].split(".").map(m=>{if(/^[0-9]+$/.test(m)){const v=+m;if(v>=0&&v<n)return v}return m}):this.prerelease=[],this.build=p[5]?p[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(f){if(t("SemVer.compare",this.version,this.options,f),!(f instanceof s)){if(typeof f=="string"&&f===this.version)return 0;f=new s(f,this.options)}return f.version===this.version?0:this.compareMain(f)||this.comparePre(f)}compareMain(f){return f instanceof s||(f=new s(f,this.options)),a(this.major,f.major)||a(this.minor,f.minor)||a(this.patch,f.patch)}comparePre(f){if(f instanceof s||(f=new s(f,this.options)),this.prerelease.length&&!f.prerelease.length)return-1;if(!this.prerelease.length&&f.prerelease.length)return 1;if(!this.prerelease.length&&!f.prerelease.length)return 0;let g=0;do{const p=this.prerelease[g],m=f.prerelease[g];if(t("prerelease compare",g,p,m),p===void 0&&m===void 0)return 0;if(m===void 0)return 1;if(p===void 0)return-1;if(p===m)continue;return a(p,m)}while(++g)}compareBuild(f){f instanceof s||(f=new s(f,this.options));let g=0;do{const p=this.build[g],m=f.build[g];if(t("build compare",g,p,m),p===void 0&&m===void 0)return 0;if(m===void 0)return 1;if(p===void 0)return-1;if(p===m)continue;return a(p,m)}while(++g)}inc(f,g,p){if(f.startsWith("pre")){if(!g&&p===!1)throw new Error("invalid increment argument: identifier is empty");if(g){const m=new RegExp(`^${this.options.loose?o[u.PRERELEASELOOSE]:o[u.PRERELEASE]}$`),v=`-${g}`.match(m);if(!v||v[1]!==g)throw new Error(`invalid identifier: ${g}`)}}switch(f){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",g,p);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",g,p);break;case"prepatch":this.prerelease.length=0,this.inc("patch",g,p),this.inc("pre",g,p);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",g,p),this.inc("pre",g,p);break;case"release":if(this.prerelease.length===0)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{const m=Number(p)?1:0;if(this.prerelease.length===0)this.prerelease=[m];else{let v=this.prerelease.length;for(;--v>=0;)typeof this.prerelease[v]=="number"&&(this.prerelease[v]++,v=-2);if(v===-1){if(g===this.prerelease.join(".")&&p===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(m)}}if(g){let v=[g,m];p===!1&&(v=[g]),a(this.prerelease[0],g)===0?isNaN(this.prerelease[1])&&(this.prerelease=v):this.prerelease=v}break}default:throw new Error(`invalid increment argument: ${f}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}return Ob=s,Ob}var Fb,Hj;function _a(){if(Hj)return Fb;Hj=1;const t=FT();return Fb=(n,i,o)=>new t(n,o).compare(new t(i,o)),Fb}var zb,Gj;function NN1(){if(Gj)return zb;Gj=1;const t=_a();return zb=(n,i,o)=>t(n,i,o)===0,zb}var Lb,Wj;function RN1(){if(Wj)return Lb;Wj=1;const t=_a();return Lb=(n,i,o)=>t(n,i,o)!==0,Lb}var jb,Yj;function DN1(){if(Yj)return jb;Yj=1;const t=_a();return jb=(n,i,o)=>t(n,i,o)>0,jb}var Pb,Vj;function ON1(){if(Vj)return Pb;Vj=1;const t=_a();return Pb=(n,i,o)=>t(n,i,o)>=0,Pb}var Ib,Xj;function FN1(){if(Xj)return Ib;Xj=1;const t=_a();return Ib=(n,i,o)=>t(n,i,o)<0,Ib}var Bb,Kj;function zN1(){if(Kj)return Bb;Kj=1;const t=_a();return Bb=(n,i,o)=>t(n,i,o)<=0,Bb}var Ub,Qj;function LN1(){if(Qj)return Ub;Qj=1;const t=NN1(),e=RN1(),n=DN1(),i=ON1(),o=FN1(),u=zN1();return Ub=(a,s,c,f)=>{switch(s){case"===":return typeof a=="object"&&(a=a.version),typeof c=="object"&&(c=c.version),a===c;case"!==":return typeof a=="object"&&(a=a.version),typeof c=="object"&&(c=c.version),a!==c;case"":case"=":case"==":return t(a,c,f);case"!=":return e(a,c,f);case">":return n(a,c,f);case">=":return i(a,c,f);case"<":return o(a,c,f);case"<=":return u(a,c,f);default:throw new TypeError(`Invalid operator: ${s}`)}},Ub}var qb,Zj;function jN1(){if(Zj)return qb;Zj=1;const t=Symbol("SemVer ANY");class e{static get ANY(){return t}constructor(f,g){if(g=n(g),f instanceof e){if(f.loose===!!g.loose)return f;f=f.value}f=f.trim().split(/\s+/).join(" "),l("comparator",f,g),this.options=g,this.loose=!!g.loose,this.parse(f),this.semver===t?this.value="":this.value=this.operator+this.semver.version,l("comp",this)}parse(f){const g=this.options.loose?i[o.COMPARATORLOOSE]:i[o.COMPARATOR],p=f.match(g);if(!p)throw new TypeError(`Invalid comparator: ${f}`);this.operator=p[1]!==void 0?p[1]:"",this.operator==="="&&(this.operator=""),p[2]?this.semver=new a(p[2],this.options.loose):this.semver=t}toString(){return this.value}test(f){if(l("Comparator.test",f,this.options.loose),this.semver===t||f===t)return!0;if(typeof f=="string")try{f=new a(f,this.options)}catch{return!1}return u(f,this.operator,this.semver,this.options)}intersects(f,g){if(!(f instanceof e))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new s(f.value,g).test(this.value):f.operator===""?f.value===""?!0:new s(this.value,g).test(f.semver):(g=n(g),g.includePrerelease&&(this.value==="<0.0.0-0"||f.value==="<0.0.0-0")||!g.includePrerelease&&(this.value.startsWith("<0.0.0")||f.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&f.operator.startsWith(">")||this.operator.startsWith("<")&&f.operator.startsWith("<")||this.semver.version===f.semver.version&&this.operator.includes("=")&&f.operator.includes("=")||u(this.semver,"<",f.semver,g)&&this.operator.startsWith(">")&&f.operator.startsWith("<")||u(this.semver,">",f.semver,g)&&this.operator.startsWith("<")&&f.operator.startsWith(">")))}}qb=e;const n=RT(),{safeRe:i,t:o}=OT(),u=LN1(),l=pp(),a=FT(),s=eJ();return qb}var Hb,Jj;function eJ(){if(Jj)return Hb;Jj=1;const t=/\s+/g;class e{constructor(j,R){if(R=o(R),j instanceof e)return j.loose===!!R.loose&&j.includePrerelease===!!R.includePrerelease?j:new e(j.raw,R);if(j instanceof u)return this.raw=j.value,this.set=[[j]],this.formatted=void 0,this;if(this.options=R,this.loose=!!R.loose,this.includePrerelease=!!R.includePrerelease,this.raw=j.trim().replace(t," "),this.set=this.raw.split("||").map(P=>this.parseRange(P.trim())).filter(P=>P.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const P=this.set[0];if(this.set=this.set.filter(q=>!b(q[0])),this.set.length===0)this.set=[P];else if(this.set.length>1){for(const q of this.set)if(q.length===1&&x(q[0])){this.set=[q];break}}}this.formatted=void 0}get range(){if(this.formatted===void 0){this.formatted="";for(let j=0;j<this.set.length;j++){j>0&&(this.formatted+="||");const R=this.set[j];for(let P=0;P<R.length;P++)P>0&&(this.formatted+=" "),this.formatted+=R[P].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(j){const P=((this.options.includePrerelease&&m)|(this.options.loose&&v))+":"+j,q=i.get(P);if(q)return q;const Y=this.options.loose,z=Y?s[c.HYPHENRANGELOOSE]:s[c.HYPHENRANGE];j=j.replace(z,V(this.options.includePrerelease)),l("hyphen replace",j),j=j.replace(s[c.COMPARATORTRIM],f),l("comparator trim",j),j=j.replace(s[c.TILDETRIM],g),l("tilde trim",j),j=j.replace(s[c.CARETTRIM],p),l("caret trim",j);let G=j.split(" ").map(d1=>S(d1,this.options)).join(" ").split(/\s+/).map(d1=>B(d1,this.options));Y&&(G=G.filter(d1=>(l("loose invalid filter",d1,this.options),!!d1.match(s[c.COMPARATORLOOSE])))),l("range list",G);const Q=new Map,n1=G.map(d1=>new u(d1,this.options));for(const d1 of n1){if(b(d1))return[d1];Q.set(d1.value,d1)}Q.size>1&&Q.has("")&&Q.delete("");const l1=[...Q.values()];return i.set(P,l1),l1}intersects(j,R){if(!(j instanceof e))throw new TypeError("a Range is required");return this.set.some(P=>w(P,R)&&j.set.some(q=>w(q,R)&&P.every(Y=>q.every(z=>Y.intersects(z,R)))))}test(j){if(!j)return!1;if(typeof j=="string")try{j=new a(j,this.options)}catch{return!1}for(let R=0;R<this.set.length;R++)if(W(this.set[R],j,this.options))return!0;return!1}}Hb=e;const n=$N1(),i=new n,o=RT(),u=jN1(),l=pp(),a=FT(),{safeRe:s,t:c,comparatorTrimReplace:f,tildeTrimReplace:g,caretTrimReplace:p}=OT(),{FLAG_INCLUDE_PRERELEASE:m,FLAG_LOOSE:v}=DT(),b=O=>O.value==="<0.0.0-0",x=O=>O.value==="",w=(O,j)=>{let R=!0;const P=O.slice();let q=P.pop();for(;R&&P.length;)R=P.every(Y=>q.intersects(Y,j)),q=P.pop();return R},S=(O,j)=>(l("comp",O,j),O=M(O,j),l("caret",O),O=C(O,j),l("tildes",O),O=D(O,j),l("xrange",O),O=U(O,j),l("stars",O),O),A=O=>!O||O.toLowerCase()==="x"||O==="*",C=(O,j)=>O.trim().split(/\s+/).map(R=>k(R,j)).join(" "),k=(O,j)=>{const R=j.loose?s[c.TILDELOOSE]:s[c.TILDE];return O.replace(R,(P,q,Y,z,G)=>{l("tilde",O,P,q,Y,z,G);let Q;return A(q)?Q="":A(Y)?Q=`>=${q}.0.0 <${+q+1}.0.0-0`:A(z)?Q=`>=${q}.${Y}.0 <${q}.${+Y+1}.0-0`:G?(l("replaceTilde pr",G),Q=`>=${q}.${Y}.${z}-${G} <${q}.${+Y+1}.0-0`):Q=`>=${q}.${Y}.${z} <${q}.${+Y+1}.0-0`,l("tilde return",Q),Q})},M=(O,j)=>O.trim().split(/\s+/).map(R=>T(R,j)).join(" "),T=(O,j)=>{l("caret",O,j);const R=j.loose?s[c.CARETLOOSE]:s[c.CARET],P=j.includePrerelease?"-0":"";return O.replace(R,(q,Y,z,G,Q)=>{l("caret",O,q,Y,z,G,Q);let n1;return A(Y)?n1="":A(z)?n1=`>=${Y}.0.0${P} <${+Y+1}.0.0-0`:A(G)?Y==="0"?n1=`>=${Y}.${z}.0${P} <${Y}.${+z+1}.0-0`:n1=`>=${Y}.${z}.0${P} <${+Y+1}.0.0-0`:Q?(l("replaceCaret pr",Q),Y==="0"?z==="0"?n1=`>=${Y}.${z}.${G}-${Q} <${Y}.${z}.${+G+1}-0`:n1=`>=${Y}.${z}.${G}-${Q} <${Y}.${+z+1}.0-0`:n1=`>=${Y}.${z}.${G}-${Q} <${+Y+1}.0.0-0`):(l("no pr"),Y==="0"?z==="0"?n1=`>=${Y}.${z}.${G}${P} <${Y}.${z}.${+G+1}-0`:n1=`>=${Y}.${z}.${G}${P} <${Y}.${+z+1}.0-0`:n1=`>=${Y}.${z}.${G} <${+Y+1}.0.0-0`),l("caret return",n1),n1})},D=(O,j)=>(l("replaceXRanges",O,j),O.split(/\s+/).map(R=>I(R,j)).join(" ")),I=(O,j)=>{O=O.trim();const R=j.loose?s[c.XRANGELOOSE]:s[c.XRANGE];return O.replace(R,(P,q,Y,z,G,Q)=>{l("xRange",O,P,q,Y,z,G,Q);const n1=A(Y),l1=n1||A(z),d1=l1||A(G),x1=d1;return q==="="&&x1&&(q=""),Q=j.includePrerelease?"-0":"",n1?q===">"||q==="<"?P="<0.0.0-0":P="*":q&&x1?(l1&&(z=0),G=0,q===">"?(q=">=",l1?(Y=+Y+1,z=0,G=0):(z=+z+1,G=0)):q==="<="&&(q="<",l1?Y=+Y+1:z=+z+1),q==="<"&&(Q="-0"),P=`${q+Y}.${z}.${G}${Q}`):l1?P=`>=${Y}.0.0${Q} <${+Y+1}.0.0-0`:d1&&(P=`>=${Y}.${z}.0${Q} <${Y}.${+z+1}.0-0`),l("xRange return",P),P})},U=(O,j)=>(l("replaceStars",O,j),O.trim().replace(s[c.STAR],"")),B=(O,j)=>(l("replaceGTE0",O,j),O.trim().replace(s[j.includePrerelease?c.GTE0PRE:c.GTE0],"")),V=O=>(j,R,P,q,Y,z,G,Q,n1,l1,d1,x1)=>(A(P)?R="":A(q)?R=`>=${P}.0.0${O?"-0":""}`:A(Y)?R=`>=${P}.${q}.0${O?"-0":""}`:z?R=`>=${R}`:R=`>=${R}${O?"-0":""}`,A(n1)?Q="":A(l1)?Q=`<${+n1+1}.0.0-0`:A(d1)?Q=`<${n1}.${+l1+1}.0-0`:x1?Q=`<=${n1}.${l1}.${d1}-${x1}`:O?Q=`<${n1}.${l1}.${+d1+1}-0`:Q=`<=${Q}`,`${R} ${Q}`.trim()),W=(O,j,R)=>{for(let P=0;P<O.length;P++)if(!O[P].test(j))return!1;if(j.prerelease.length&&!R.includePrerelease){for(let P=0;P<O.length;P++)if(l(O[P].semver),O[P].semver!==u.ANY&&O[P].semver.prerelease.length>0){const q=O[P].semver;if(q.major===j.major&&q.minor===j.minor&&q.patch===j.patch)return!0}return!1}return!0};return Hb}var Gb,tP;function PN1(){if(tP)return Gb;tP=1;const t=eJ();return Gb=(n,i,o)=>{try{i=new t(i,o)}catch{return!1}return i.test(n)},Gb}var IN1=PN1(),nJ=TN1(IN1);function BN1(t,e,n){const i=t.open(e),o=250,{origin:u}=new URL(e);let l=40;function a(c){c.source===i&&(l=0,t.removeEventListener("message",a,!1))}t.addEventListener("message",a,!1);function s(){l<=0||(i.postMessage(n,u),setTimeout(s,o),l-=1)}setTimeout(s,o)}var UN1=`.vega-embed {
  position: relative;
  display: inline-block;
  box-sizing: border-box;
}
.vega-embed.has-actions {
  padding-right: 38px;
}
.vega-embed details:not([open]) > :not(summary) {
  display: none !important;
}
.vega-embed summary {
  list-style: none;
  position: absolute;
  top: 0;
  right: 0;
  padding: 6px;
  z-index: 1000;
  background: white;
  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
  color: #1b1e23;
  border: 1px solid #aaa;
  border-radius: 999px;
  opacity: 0.2;
  transition: opacity 0.4s ease-in;
  cursor: pointer;
  line-height: 0px;
}
.vega-embed summary::-webkit-details-marker {
  display: none;
}
.vega-embed summary:active {
  box-shadow: #aaa 0px 0px 0px 1px inset;
}
.vega-embed summary svg {
  width: 14px;
  height: 14px;
}
.vega-embed details[open] summary {
  opacity: 0.7;
}
.vega-embed:hover summary, .vega-embed:focus-within summary {
  opacity: 1 !important;
  transition: opacity 0.2s ease;
}
.vega-embed .vega-actions {
  position: absolute;
  z-index: 1001;
  top: 35px;
  right: -9px;
  display: flex;
  flex-direction: column;
  padding-bottom: 8px;
  padding-top: 8px;
  border-radius: 4px;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.2);
  border: 1px solid #d9d9d9;
  background: white;
  animation-duration: 0.15s;
  animation-name: scale-in;
  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);
  text-align: left;
}
.vega-embed .vega-actions a {
  padding: 8px 16px;
  font-family: sans-serif;
  font-size: 14px;
  font-weight: 600;
  white-space: nowrap;
  color: #434a56;
  text-decoration: none;
}
.vega-embed .vega-actions a:hover, .vega-embed .vega-actions a:focus {
  background-color: #f7f7f9;
  color: black;
}
.vega-embed .vega-actions::before, .vega-embed .vega-actions::after {
  content: "";
  display: inline-block;
  position: absolute;
}
.vega-embed .vega-actions::before {
  left: auto;
  right: 14px;
  top: -16px;
  border: 8px solid rgba(0, 0, 0, 0);
  border-bottom-color: #d9d9d9;
}
.vega-embed .vega-actions::after {
  left: auto;
  right: 15px;
  top: -14px;
  border: 7px solid rgba(0, 0, 0, 0);
  border-bottom-color: #fff;
}
.vega-embed .chart-wrapper.fit-x {
  width: 100%;
}
.vega-embed .chart-wrapper.fit-y {
  height: 100%;
}

.vega-embed-wrapper {
  max-width: 100%;
  overflow: auto;
  padding-right: 14px;
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.6);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
`;function iJ(t,...e){for(const n of e)qN1(t,n);return t}function qN1(t,e){for(const n of Object.keys(e))Ql(t,n,e[n],!0)}const oi=T_1;let w8=yM1;const eP=typeof window<"u"?window:void 0;w8===void 0&&eP?.vl?.compile&&(w8=eP.vl);const HN1={export:{svg:!0,png:!0},source:!0,compiled:!0,editor:!0},GN1={CLICK_TO_VIEW_ACTIONS:"Click to view actions",COMPILED_ACTION:"View Compiled Vega",EDITOR_ACTION:"Open in Vega Editor",PNG_ACTION:"Save as PNG",SOURCE_ACTION:"View Source",SVG_ACTION:"Save as SVG"},_r={vega:"Vega","vega-lite":"Vega-Lite"},Kf={vega:oi.version,"vega-lite":w8?w8.version:"not available"},WN1={vega:t=>t,"vega-lite":(t,e)=>w8.compile(t,{config:e}).spec},YN1=`
<svg viewBox="0 0 16 16" fill="currentColor" stroke="none" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
  <circle r="2" cy="8" cx="2"></circle>
  <circle r="2" cy="8" cx="8"></circle>
  <circle r="2" cy="8" cx="14"></circle>
</svg>`,VN1="chart-wrapper";function XN1(t){return typeof t=="function"}function nP(t,e,n,i){const o=`<html><head>${e}</head><body><pre><code class="json">`,u=`</code></pre>${n}</body></html>`,l=window.open("");l.document.write(o+t+u),l.document.title=`${_r[i]} JSON Source`}function KN1(t,e){if(t.$schema){const n=GZ(t.$schema);e&&e!==n.library&&console.warn(`The given visualization spec is written in ${_r[n.library]}, but mode argument sets ${_r[e]??e}.`);const i=n.library;return nJ(Kf[i],`^${n.version.slice(1)}`)||console.warn(`The input spec uses ${_r[i]} ${n.version}, but the current version of ${_r[i]} is v${Kf[i]}.`),i}return"mark"in t||"encoding"in t||"layer"in t||"hconcat"in t||"vconcat"in t||"facet"in t||"repeat"in t?"vega-lite":"marks"in t||"signals"in t||"scales"in t||"axes"in t?"vega":e??"vega"}function oJ(t){return!!(t&&"load"in t)}function iP(t){return oJ(t)?t:oi.loader(t)}function QN1(t){const e=t.usermeta?.embedOptions??{};return w1(e.defaultStyle)&&(e.defaultStyle=!1),e}async function mp(t,e,n={}){let i,o;w1(e)?(o=iP(n.loader),i=JSON.parse(await o.load(e))):i=e;const u=QN1(i),l=u.loader;(!o||l)&&(o=iP(n.loader??l));const a=await oP(u,o),s=await oP(n,o),c={...iJ(s,a),config:Kl(s.config??{},a.config??{})};return await JN1(t,i,c,o)}async function oP(t,e){const n=w1(t.config)?JSON.parse(await e.load(t.config)):t.config??{},i=w1(t.patch)?JSON.parse(await e.load(t.patch)):t.patch;return{...t,...i?{patch:i}:{},...n?{config:n}:{}}}function ZN1(t){const e=t.getRootNode?t.getRootNode():document;return e instanceof ShadowRoot?{root:e,rootContainer:e}:{root:document,rootContainer:document.head??document.body}}async function JN1(t,e,n={},i){const o=n.theme?Kl(nN1[n.theme],n.config??{}):n.config,u=Mu(n.actions)?n.actions:iJ({},HN1,n.actions??{}),l={...GN1,...n.i18n},a=n.renderer??"svg",s=n.logLevel??oi.Warn,c=n.downloadFileName??"visualization",f=typeof t=="string"?document.querySelector(t):t;if(!f)throw new Error(`${t} does not exist`);if(n.defaultStyle!==!1){const k="vega-embed-style",{root:M,rootContainer:T}=ZN1(f);if(!M.getElementById(k)){const D=document.createElement("style");D.id=k,D.innerHTML=n.defaultStyle===void 0||n.defaultStyle===!0?UN1.toString():n.defaultStyle,T.appendChild(D)}}const g=KN1(e,n.mode);let p=WN1[g](e,o);if(g==="vega-lite"&&p.$schema){const k=GZ(p.$schema);nJ(Kf.vega,`^${k.version.slice(1)}`)||console.warn(`The compiled spec uses Vega ${k.version}, but current version is v${Kf.vega}.`)}f.classList.add("vega-embed"),u&&f.classList.add("has-actions"),f.innerHTML="";let m=f;if(u){const k=document.createElement("div");k.classList.add(VN1),f.appendChild(k),m=k}const v=n.patch;if(v&&(p=v instanceof Function?v(p):hp(p,v,!0,!1).newDocument),n.formatLocale&&oi.formatLocale(n.formatLocale),n.timeFormatLocale&&oi.timeFormatLocale(n.timeFormatLocale),n.expressionFunctions)for(const k in n.expressionFunctions){const M=n.expressionFunctions[k];"fn"in M?oi.expressionFunction(k,M.fn,M.visitor):M instanceof Function&&oi.expressionFunction(k,M)}const{ast:b}=n,x=oi.parse(p,g==="vega-lite"?{}:o,{ast:b}),w=new(n.viewClass||oi.View)(x,{loader:i,logLevel:s,renderer:a,...b?{expr:oi.expressionInterpreter??n.expr??j_1}:{}});if(w.addSignalListener("autosize",(k,M)=>{const{type:T}=M;T=="fit-x"?(m.classList.add("fit-x"),m.classList.remove("fit-y")):T=="fit-y"?(m.classList.remove("fit-x"),m.classList.add("fit-y")):T=="fit"?m.classList.add("fit-x","fit-y"):m.classList.remove("fit-x","fit-y")}),n.tooltip!==!1){const{loader:k,tooltip:M}=n,T=k&&!oJ(k)?k?.baseURL:void 0,D=XN1(M)?M:new fN1({baseURL:T,...M===!0?{}:M}).call;w.tooltip(D)}let{hover:S}=n;if(S===void 0&&(S=g==="vega"),S){const{hoverSet:k,updateSet:M}=typeof S=="boolean"?{}:S;w.hover(k,M)}n&&(n.width!=null&&w.width(n.width),n.height!=null&&w.height(n.height),n.padding!=null&&w.padding(n.padding)),await w.initialize(m,n.bind).runAsync();let A;if(u!==!1){let k=f;if(n.defaultStyle!==!1||n.forceActionsMenu){const T=document.createElement("details");T.title=l.CLICK_TO_VIEW_ACTIONS,f.append(T),k=T;const D=document.createElement("summary");D.innerHTML=YN1,T.append(D),A=I=>{T.contains(I.target)||T.removeAttribute("open")},document.addEventListener("click",A)}const M=document.createElement("div");if(k.append(M),M.classList.add("vega-actions"),u===!0||u.export!==!1){for(const T of["svg","png"])if(u===!0||u.export===!0||u.export[T]){const D=l[`${T.toUpperCase()}_ACTION`],I=document.createElement("a"),U=E1(n.scaleFactor)?n.scaleFactor[T]:n.scaleFactor;I.text=D,I.href="#",I.target="_blank",I.download=`${c}.${T}`,I.addEventListener("mousedown",async function(B){B.preventDefault();const V=await w.toImageURL(T,U);this.href=V}),M.append(I)}}if(u===!0||u.source!==!1){const T=document.createElement("a");T.text=l.SOURCE_ACTION,T.href="#",T.addEventListener("click",function(D){nP(nv(e),n.sourceHeader??"",n.sourceFooter??"",g),D.preventDefault()}),M.append(T)}if(g==="vega-lite"&&(u===!0||u.compiled!==!1)){const T=document.createElement("a");T.text=l.COMPILED_ACTION,T.href="#",T.addEventListener("click",function(D){nP(nv(p),n.sourceHeader??"",n.sourceFooter??"","vega"),D.preventDefault()}),M.append(T)}if(u===!0||u.editor!==!1){const T=n.editorUrl??"https://vega.github.io/editor/",D=document.createElement("a");D.text=l.EDITOR_ACTION,D.href="#",D.addEventListener("click",function(I){BN1(window,T,{config:o,mode:v?"vega":g,renderer:a,spec:nv(v?p:e)}),I.preventDefault()}),M.append(D)}}function C(){A&&document.removeEventListener("click",A),w.finalize()}return{view:w,spec:e,vgSpec:p,finalize:C,embedOptions:n}}const tR1={view:{continuousWidth:400,continuousHeight:300}},eR1=[{mark:"point",encoding:{x:{type:"quantitative",axis:{title:"Per Capita Disposable Income"},field:"disp_income_per_cap",scale:{domain:[3e4,65928]}},y:{type:"quantitative",axis:{title:"Number of Gun Incidents"},field:"n_incidents"}},height:180,title:"Number of Gun Incidents vs. Per Capita Disposable Income",width:250},{mark:"line",encoding:{color:{value:"black"},x:{type:"quantitative",axis:{title:"Per Capita Disposable Income"},field:"disp_income_per_cap",scale:{domain:[3e4,65928]}},y:{type:"quantitative",axis:{title:"Number of Gun Incidents"},field:"n_incidents"}},height:180,title:"Number of Gun Incidents vs. Per Capita Disposable Income",transform:[{on:"disp_income_per_cap",regression:"n_incidents"}],width:250}],nR1={name:"data-bc30c81a523db1e5dc2f9115a7e8e799"},iR1="https://vega.github.io/schema/vega-lite/v4.8.1.json",oR1={"data-bc30c81a523db1e5dc2f9115a7e8e799":[{state:"Alabama",n_incidents:5469,st:1,stusps:"AL",pop_est:4863525,n_licensees:1515,disp_income_per_cap:35382},{state:"Alaska",n_incidents:1349,st:2,stusps:"AK",pop_est:741456,n_licensees:709,disp_income_per_cap:51194},{state:"Arizona",n_incidents:2323,st:4,stusps:"AZ",pop_est:6941072,n_licensees:2251,disp_income_per_cap:36490},{state:"Arkansas",n_incidents:2842,st:5,stusps:"AR",pop_est:2989918,n_licensees:1528,disp_income_per_cap:36185},{state:"California",n_incidents:16267,st:6,stusps:"CA",pop_est:39167117,n_licensees:3021,disp_income_per_cap:49601},{state:"Colorado",n_incidents:3198,st:8,stusps:"CO",pop_est:5539215,n_licensees:2114,disp_income_per_cap:45492},{state:"Connecticut",n_incidents:3064,st:9,stusps:"CT",pop_est:3578141,n_licensees:661,disp_income_per_cap:59090},{state:"Delaware",n_incidents:1682,st:10,stusps:"DE",pop_est:948921,n_licensees:142,disp_income_per_cap:42942},{state:"District of Columbia",n_incidents:3189,st:11,stusps:"DC",pop_est:685815,n_licensees:8,disp_income_per_cap:65928},{state:"Florida",n_incidents:15016,st:12,stusps:"FL",pop_est:20613477,n_licensees:3913,disp_income_per_cap:40989},{state:"Georgia",n_incidents:8919,st:13,stusps:"GA",pop_est:10301890,n_licensees:2374,disp_income_per_cap:37951},{state:"Hawaii",n_incidents:289,st:15,stusps:"HI",pop_est:1427559,n_licensees:114,disp_income_per_cap:45491},{state:"Idaho",n_incidents:661,st:16,stusps:"ID",pop_est:1682380,n_licensees:1146,disp_income_per_cap:36535},{state:"Illinois",n_incidents:17538,st:17,stusps:"IL",pop_est:12820527,n_licensees:2464,disp_income_per_cap:45717},{state:"Indiana",n_incidents:5845,st:18,stusps:"IN",pop_est:6634304,n_licensees:1754,disp_income_per_cap:39149},{state:"Iowa",n_incidents:2517,st:19,stusps:"IA",pop_est:3131371,n_licensees:1525,disp_income_per_cap:41461},{state:"Kansas",n_incidents:2141,st:20,stusps:"KS",pop_est:2910844,n_licensees:1348,disp_income_per_cap:42636},{state:"Kentucky",n_incidents:4154,st:21,stusps:"KY",pop_est:4438182,n_licensees:1699,disp_income_per_cap:35361},{state:"Louisiana",n_incidents:8094,st:22,stusps:"LA",pop_est:4678135,n_licensees:1461,disp_income_per_cap:38746},{state:"Maine",n_incidents:907,st:23,stusps:"ME",pop_est:1331317,n_licensees:632,disp_income_per_cap:40020},{state:"Maryland",n_incidents:5793,st:24,stusps:"MD",pop_est:6003323,n_licensees:702,disp_income_per_cap:51091},{state:"Massachusetts",n_incidents:5981,st:25,stusps:"MA",pop_est:6823608,n_licensees:599,disp_income_per_cap:55453},{state:"Michigan",n_incidents:6122,st:26,stusps:"MI",pop_est:9950571,n_licensees:2588,disp_income_per_cap:39648},{state:"Minnesota",n_incidents:2406,st:27,stusps:"MN",pop_est:5522744,n_licensees:1736,disp_income_per_cap:45883},{state:"Mississippi",n_incidents:3597,st:28,stusps:"MS",pop_est:2987938,n_licensees:1130,disp_income_per_cap:32608},{state:"Missouri",n_incidents:6621,st:29,stusps:"MO",pop_est:6087135,n_licensees:2691,disp_income_per_cap:39422},{state:"Montana",n_incidents:638,st:30,stusps:"MT",pop_est:1040859,n_licensees:1297,disp_income_per_cap:38989},{state:"Nebraska",n_incidents:1650,st:31,stusps:"NE",pop_est:1905616,n_licensees:841,disp_income_per_cap:44517},{state:"Nevada",n_incidents:1951,st:32,stusps:"NV",pop_est:2917563,n_licensees:772,disp_income_per_cap:39975},{state:"New Hampshire",n_incidents:964,st:33,stusps:"NH",pop_est:1342307,n_licensees:608,disp_income_per_cap:50333},{state:"New Jersey",n_incidents:5373,st:34,stusps:"NJ",pop_est:8870827,n_licensees:400,disp_income_per_cap:54033},{state:"New Mexico",n_incidents:1643,st:35,stusps:"NM",pop_est:2091630,n_licensees:821,disp_income_per_cap:35352},{state:"New York",n_incidents:9696,st:36,stusps:"NY",pop_est:19633428,n_licensees:2033,disp_income_per_cap:51369},{state:"North Carolina",n_incidents:8727,st:37,stusps:"NC",pop_est:10154788,n_licensees:2910,disp_income_per_cap:37727},{state:"North Dakota",n_incidents:573,st:38,stusps:"ND",pop_est:754434,n_licensees:509,disp_income_per_cap:47316},{state:"Ohio",n_incidents:10234,st:39,stusps:"OH",pop_est:11634370,n_licensees:2973,disp_income_per_cap:40039},{state:"Oklahoma",n_incidents:3449,st:40,stusps:"OK",pop_est:3926331,n_licensees:1849,disp_income_per_cap:37891},{state:"Oregon",n_incidents:2286,st:41,stusps:"OR",pop_est:4089976,n_licensees:1697,disp_income_per_cap:40330},{state:"Pennsylvania",n_incidents:8909,st:42,stusps:"PA",pop_est:12782275,n_licensees:3114,disp_income_per_cap:45534},{state:"Rhode Island",n_incidents:893,st:44,stusps:"RI",pop_est:1056770,n_licensees:115,disp_income_per_cap:44637},{state:"South Carolina",n_incidents:6934,st:45,stusps:"SC",pop_est:4957968,n_licensees:1332,disp_income_per_cap:36216},{state:"South Dakota",n_incidents:544,st:46,stusps:"SD",pop_est:862996,n_licensees:611,disp_income_per_cap:44227},{state:"Tennessee",n_incidents:7616,st:47,stusps:"TN",pop_est:6646010,n_licensees:1853,disp_income_per_cap:39853},{state:"Texas",n_incidents:13566,st:48,stusps:"TX",pop_est:27914410,n_licensees:7795,disp_income_per_cap:41278},{state:"Utah",n_incidents:1071,st:49,stusps:"UT",pop_est:3041868,n_licensees:1136,disp_income_per_cap:37563},{state:"Vermont",n_incidents:472,st:50,stusps:"VT",pop_est:623657,n_licensees:371,disp_income_per_cap:45485},{state:"Virginia",n_incidents:5943,st:51,stusps:"VA",pop_est:8410106,n_licensees:2082,disp_income_per_cap:46738},{state:"Washington",n_incidents:3430,st:53,stusps:"WA",pop_est:7294771,n_licensees:1467,disp_income_per_cap:49670},{state:"West Virginia",n_incidents:1573,st:54,stusps:"WV",pop_est:1831023,n_licensees:1079,disp_income_per_cap:33433},{state:"Wisconsin",n_incidents:4786,st:55,stusps:"WI",pop_est:5772628,n_licensees:1872,disp_income_per_cap:41908},{state:"Wyoming",n_incidents:494,st:56,stusps:"WY",pop_est:584215,n_licensees:733,disp_income_per_cap:49312}]},uR1={config:tR1,layer:eR1,data:nR1,$schema:iR1,datasets:oR1},lR1={view:{continuousWidth:400,continuousHeight:300}},aR1=[{mark:"point",encoding:{x:{type:"quantitative",axis:{title:"Estimated Population"},field:"pop_est",scale:{domain:[0,39172117]}},y:{type:"quantitative",axis:{title:"Number of Gun Incidents"},field:"n_incidents"}},height:180,title:"Number of Incidents vs. Est. Population",width:250},{mark:"line",encoding:{color:{value:"black"},x:{type:"quantitative",axis:{title:"Estimated Population"},field:"pop_est",scale:{domain:[0,39172117]}},y:{type:"quantitative",axis:{title:"Number of Gun Incidents"},field:"n_incidents"}},height:180,title:"Number of Incidents vs. Est. Population",transform:[{on:"pop_est",regression:"n_incidents"}],width:250}],rR1={name:"data-bc30c81a523db1e5dc2f9115a7e8e799"},sR1="https://vega.github.io/schema/vega-lite/v4.8.1.json",cR1={"data-bc30c81a523db1e5dc2f9115a7e8e799":[{state:"Alabama",n_incidents:5469,st:1,stusps:"AL",pop_est:4863525,n_licensees:1515,disp_income_per_cap:35382},{state:"Alaska",n_incidents:1349,st:2,stusps:"AK",pop_est:741456,n_licensees:709,disp_income_per_cap:51194},{state:"Arizona",n_incidents:2323,st:4,stusps:"AZ",pop_est:6941072,n_licensees:2251,disp_income_per_cap:36490},{state:"Arkansas",n_incidents:2842,st:5,stusps:"AR",pop_est:2989918,n_licensees:1528,disp_income_per_cap:36185},{state:"California",n_incidents:16267,st:6,stusps:"CA",pop_est:39167117,n_licensees:3021,disp_income_per_cap:49601},{state:"Colorado",n_incidents:3198,st:8,stusps:"CO",pop_est:5539215,n_licensees:2114,disp_income_per_cap:45492},{state:"Connecticut",n_incidents:3064,st:9,stusps:"CT",pop_est:3578141,n_licensees:661,disp_income_per_cap:59090},{state:"Delaware",n_incidents:1682,st:10,stusps:"DE",pop_est:948921,n_licensees:142,disp_income_per_cap:42942},{state:"District of Columbia",n_incidents:3189,st:11,stusps:"DC",pop_est:685815,n_licensees:8,disp_income_per_cap:65928},{state:"Florida",n_incidents:15016,st:12,stusps:"FL",pop_est:20613477,n_licensees:3913,disp_income_per_cap:40989},{state:"Georgia",n_incidents:8919,st:13,stusps:"GA",pop_est:10301890,n_licensees:2374,disp_income_per_cap:37951},{state:"Hawaii",n_incidents:289,st:15,stusps:"HI",pop_est:1427559,n_licensees:114,disp_income_per_cap:45491},{state:"Idaho",n_incidents:661,st:16,stusps:"ID",pop_est:1682380,n_licensees:1146,disp_income_per_cap:36535},{state:"Illinois",n_incidents:17538,st:17,stusps:"IL",pop_est:12820527,n_licensees:2464,disp_income_per_cap:45717},{state:"Indiana",n_incidents:5845,st:18,stusps:"IN",pop_est:6634304,n_licensees:1754,disp_income_per_cap:39149},{state:"Iowa",n_incidents:2517,st:19,stusps:"IA",pop_est:3131371,n_licensees:1525,disp_income_per_cap:41461},{state:"Kansas",n_incidents:2141,st:20,stusps:"KS",pop_est:2910844,n_licensees:1348,disp_income_per_cap:42636},{state:"Kentucky",n_incidents:4154,st:21,stusps:"KY",pop_est:4438182,n_licensees:1699,disp_income_per_cap:35361},{state:"Louisiana",n_incidents:8094,st:22,stusps:"LA",pop_est:4678135,n_licensees:1461,disp_income_per_cap:38746},{state:"Maine",n_incidents:907,st:23,stusps:"ME",pop_est:1331317,n_licensees:632,disp_income_per_cap:40020},{state:"Maryland",n_incidents:5793,st:24,stusps:"MD",pop_est:6003323,n_licensees:702,disp_income_per_cap:51091},{state:"Massachusetts",n_incidents:5981,st:25,stusps:"MA",pop_est:6823608,n_licensees:599,disp_income_per_cap:55453},{state:"Michigan",n_incidents:6122,st:26,stusps:"MI",pop_est:9950571,n_licensees:2588,disp_income_per_cap:39648},{state:"Minnesota",n_incidents:2406,st:27,stusps:"MN",pop_est:5522744,n_licensees:1736,disp_income_per_cap:45883},{state:"Mississippi",n_incidents:3597,st:28,stusps:"MS",pop_est:2987938,n_licensees:1130,disp_income_per_cap:32608},{state:"Missouri",n_incidents:6621,st:29,stusps:"MO",pop_est:6087135,n_licensees:2691,disp_income_per_cap:39422},{state:"Montana",n_incidents:638,st:30,stusps:"MT",pop_est:1040859,n_licensees:1297,disp_income_per_cap:38989},{state:"Nebraska",n_incidents:1650,st:31,stusps:"NE",pop_est:1905616,n_licensees:841,disp_income_per_cap:44517},{state:"Nevada",n_incidents:1951,st:32,stusps:"NV",pop_est:2917563,n_licensees:772,disp_income_per_cap:39975},{state:"New Hampshire",n_incidents:964,st:33,stusps:"NH",pop_est:1342307,n_licensees:608,disp_income_per_cap:50333},{state:"New Jersey",n_incidents:5373,st:34,stusps:"NJ",pop_est:8870827,n_licensees:400,disp_income_per_cap:54033},{state:"New Mexico",n_incidents:1643,st:35,stusps:"NM",pop_est:2091630,n_licensees:821,disp_income_per_cap:35352},{state:"New York",n_incidents:9696,st:36,stusps:"NY",pop_est:19633428,n_licensees:2033,disp_income_per_cap:51369},{state:"North Carolina",n_incidents:8727,st:37,stusps:"NC",pop_est:10154788,n_licensees:2910,disp_income_per_cap:37727},{state:"North Dakota",n_incidents:573,st:38,stusps:"ND",pop_est:754434,n_licensees:509,disp_income_per_cap:47316},{state:"Ohio",n_incidents:10234,st:39,stusps:"OH",pop_est:11634370,n_licensees:2973,disp_income_per_cap:40039},{state:"Oklahoma",n_incidents:3449,st:40,stusps:"OK",pop_est:3926331,n_licensees:1849,disp_income_per_cap:37891},{state:"Oregon",n_incidents:2286,st:41,stusps:"OR",pop_est:4089976,n_licensees:1697,disp_income_per_cap:40330},{state:"Pennsylvania",n_incidents:8909,st:42,stusps:"PA",pop_est:12782275,n_licensees:3114,disp_income_per_cap:45534},{state:"Rhode Island",n_incidents:893,st:44,stusps:"RI",pop_est:1056770,n_licensees:115,disp_income_per_cap:44637},{state:"South Carolina",n_incidents:6934,st:45,stusps:"SC",pop_est:4957968,n_licensees:1332,disp_income_per_cap:36216},{state:"South Dakota",n_incidents:544,st:46,stusps:"SD",pop_est:862996,n_licensees:611,disp_income_per_cap:44227},{state:"Tennessee",n_incidents:7616,st:47,stusps:"TN",pop_est:6646010,n_licensees:1853,disp_income_per_cap:39853},{state:"Texas",n_incidents:13566,st:48,stusps:"TX",pop_est:27914410,n_licensees:7795,disp_income_per_cap:41278},{state:"Utah",n_incidents:1071,st:49,stusps:"UT",pop_est:3041868,n_licensees:1136,disp_income_per_cap:37563},{state:"Vermont",n_incidents:472,st:50,stusps:"VT",pop_est:623657,n_licensees:371,disp_income_per_cap:45485},{state:"Virginia",n_incidents:5943,st:51,stusps:"VA",pop_est:8410106,n_licensees:2082,disp_income_per_cap:46738},{state:"Washington",n_incidents:3430,st:53,stusps:"WA",pop_est:7294771,n_licensees:1467,disp_income_per_cap:49670},{state:"West Virginia",n_incidents:1573,st:54,stusps:"WV",pop_est:1831023,n_licensees:1079,disp_income_per_cap:33433},{state:"Wisconsin",n_incidents:4786,st:55,stusps:"WI",pop_est:5772628,n_licensees:1872,disp_income_per_cap:41908},{state:"Wyoming",n_incidents:494,st:56,stusps:"WY",pop_est:584215,n_licensees:733,disp_income_per_cap:49312}]},dR1={config:lR1,layer:aR1,data:rR1,$schema:sR1,datasets:cR1},fR1={view:{continuousWidth:400,continuousHeight:300}},gR1=[{mark:"point",encoding:{x:{type:"quantitative",axis:{title:"Number of Statewide Gun Licensees"},field:"n_licensees"},y:{type:"quantitative",axis:{title:"Number of Gun Incidents"},field:"n_incidents"}},height:180,title:"Number of Gun Incidents vs. Per Capita Disposable Income",width:250},{mark:"line",encoding:{color:{value:"black"},x:{type:"quantitative",axis:{title:"Number of Statewide Gun Licensees"},field:"n_licensees"},y:{type:"quantitative",axis:{title:"Number of Gun Incidents"},field:"n_incidents"}},height:180,title:"Number of Gun Incidents vs. Per Capita Disposable Income",transform:[{on:"n_licensees",regression:"n_incidents"}],width:250}],hR1={name:"data-bc30c81a523db1e5dc2f9115a7e8e799"},pR1="https://vega.github.io/schema/vega-lite/v4.8.1.json",mR1={"data-bc30c81a523db1e5dc2f9115a7e8e799":[{state:"Alabama",n_incidents:5469,st:1,stusps:"AL",pop_est:4863525,n_licensees:1515,disp_income_per_cap:35382},{state:"Alaska",n_incidents:1349,st:2,stusps:"AK",pop_est:741456,n_licensees:709,disp_income_per_cap:51194},{state:"Arizona",n_incidents:2323,st:4,stusps:"AZ",pop_est:6941072,n_licensees:2251,disp_income_per_cap:36490},{state:"Arkansas",n_incidents:2842,st:5,stusps:"AR",pop_est:2989918,n_licensees:1528,disp_income_per_cap:36185},{state:"California",n_incidents:16267,st:6,stusps:"CA",pop_est:39167117,n_licensees:3021,disp_income_per_cap:49601},{state:"Colorado",n_incidents:3198,st:8,stusps:"CO",pop_est:5539215,n_licensees:2114,disp_income_per_cap:45492},{state:"Connecticut",n_incidents:3064,st:9,stusps:"CT",pop_est:3578141,n_licensees:661,disp_income_per_cap:59090},{state:"Delaware",n_incidents:1682,st:10,stusps:"DE",pop_est:948921,n_licensees:142,disp_income_per_cap:42942},{state:"District of Columbia",n_incidents:3189,st:11,stusps:"DC",pop_est:685815,n_licensees:8,disp_income_per_cap:65928},{state:"Florida",n_incidents:15016,st:12,stusps:"FL",pop_est:20613477,n_licensees:3913,disp_income_per_cap:40989},{state:"Georgia",n_incidents:8919,st:13,stusps:"GA",pop_est:10301890,n_licensees:2374,disp_income_per_cap:37951},{state:"Hawaii",n_incidents:289,st:15,stusps:"HI",pop_est:1427559,n_licensees:114,disp_income_per_cap:45491},{state:"Idaho",n_incidents:661,st:16,stusps:"ID",pop_est:1682380,n_licensees:1146,disp_income_per_cap:36535},{state:"Illinois",n_incidents:17538,st:17,stusps:"IL",pop_est:12820527,n_licensees:2464,disp_income_per_cap:45717},{state:"Indiana",n_incidents:5845,st:18,stusps:"IN",pop_est:6634304,n_licensees:1754,disp_income_per_cap:39149},{state:"Iowa",n_incidents:2517,st:19,stusps:"IA",pop_est:3131371,n_licensees:1525,disp_income_per_cap:41461},{state:"Kansas",n_incidents:2141,st:20,stusps:"KS",pop_est:2910844,n_licensees:1348,disp_income_per_cap:42636},{state:"Kentucky",n_incidents:4154,st:21,stusps:"KY",pop_est:4438182,n_licensees:1699,disp_income_per_cap:35361},{state:"Louisiana",n_incidents:8094,st:22,stusps:"LA",pop_est:4678135,n_licensees:1461,disp_income_per_cap:38746},{state:"Maine",n_incidents:907,st:23,stusps:"ME",pop_est:1331317,n_licensees:632,disp_income_per_cap:40020},{state:"Maryland",n_incidents:5793,st:24,stusps:"MD",pop_est:6003323,n_licensees:702,disp_income_per_cap:51091},{state:"Massachusetts",n_incidents:5981,st:25,stusps:"MA",pop_est:6823608,n_licensees:599,disp_income_per_cap:55453},{state:"Michigan",n_incidents:6122,st:26,stusps:"MI",pop_est:9950571,n_licensees:2588,disp_income_per_cap:39648},{state:"Minnesota",n_incidents:2406,st:27,stusps:"MN",pop_est:5522744,n_licensees:1736,disp_income_per_cap:45883},{state:"Mississippi",n_incidents:3597,st:28,stusps:"MS",pop_est:2987938,n_licensees:1130,disp_income_per_cap:32608},{state:"Missouri",n_incidents:6621,st:29,stusps:"MO",pop_est:6087135,n_licensees:2691,disp_income_per_cap:39422},{state:"Montana",n_incidents:638,st:30,stusps:"MT",pop_est:1040859,n_licensees:1297,disp_income_per_cap:38989},{state:"Nebraska",n_incidents:1650,st:31,stusps:"NE",pop_est:1905616,n_licensees:841,disp_income_per_cap:44517},{state:"Nevada",n_incidents:1951,st:32,stusps:"NV",pop_est:2917563,n_licensees:772,disp_income_per_cap:39975},{state:"New Hampshire",n_incidents:964,st:33,stusps:"NH",pop_est:1342307,n_licensees:608,disp_income_per_cap:50333},{state:"New Jersey",n_incidents:5373,st:34,stusps:"NJ",pop_est:8870827,n_licensees:400,disp_income_per_cap:54033},{state:"New Mexico",n_incidents:1643,st:35,stusps:"NM",pop_est:2091630,n_licensees:821,disp_income_per_cap:35352},{state:"New York",n_incidents:9696,st:36,stusps:"NY",pop_est:19633428,n_licensees:2033,disp_income_per_cap:51369},{state:"North Carolina",n_incidents:8727,st:37,stusps:"NC",pop_est:10154788,n_licensees:2910,disp_income_per_cap:37727},{state:"North Dakota",n_incidents:573,st:38,stusps:"ND",pop_est:754434,n_licensees:509,disp_income_per_cap:47316},{state:"Ohio",n_incidents:10234,st:39,stusps:"OH",pop_est:11634370,n_licensees:2973,disp_income_per_cap:40039},{state:"Oklahoma",n_incidents:3449,st:40,stusps:"OK",pop_est:3926331,n_licensees:1849,disp_income_per_cap:37891},{state:"Oregon",n_incidents:2286,st:41,stusps:"OR",pop_est:4089976,n_licensees:1697,disp_income_per_cap:40330},{state:"Pennsylvania",n_incidents:8909,st:42,stusps:"PA",pop_est:12782275,n_licensees:3114,disp_income_per_cap:45534},{state:"Rhode Island",n_incidents:893,st:44,stusps:"RI",pop_est:1056770,n_licensees:115,disp_income_per_cap:44637},{state:"South Carolina",n_incidents:6934,st:45,stusps:"SC",pop_est:4957968,n_licensees:1332,disp_income_per_cap:36216},{state:"South Dakota",n_incidents:544,st:46,stusps:"SD",pop_est:862996,n_licensees:611,disp_income_per_cap:44227},{state:"Tennessee",n_incidents:7616,st:47,stusps:"TN",pop_est:6646010,n_licensees:1853,disp_income_per_cap:39853},{state:"Texas",n_incidents:13566,st:48,stusps:"TX",pop_est:27914410,n_licensees:7795,disp_income_per_cap:41278},{state:"Utah",n_incidents:1071,st:49,stusps:"UT",pop_est:3041868,n_licensees:1136,disp_income_per_cap:37563},{state:"Vermont",n_incidents:472,st:50,stusps:"VT",pop_est:623657,n_licensees:371,disp_income_per_cap:45485},{state:"Virginia",n_incidents:5943,st:51,stusps:"VA",pop_est:8410106,n_licensees:2082,disp_income_per_cap:46738},{state:"Washington",n_incidents:3430,st:53,stusps:"WA",pop_est:7294771,n_licensees:1467,disp_income_per_cap:49670},{state:"West Virginia",n_incidents:1573,st:54,stusps:"WV",pop_est:1831023,n_licensees:1079,disp_income_per_cap:33433},{state:"Wisconsin",n_incidents:4786,st:55,stusps:"WI",pop_est:5772628,n_licensees:1872,disp_income_per_cap:41908},{state:"Wyoming",n_incidents:494,st:56,stusps:"WY",pop_est:584215,n_licensees:733,disp_income_per_cap:49312}]},yR1={config:fR1,layer:gR1,data:hR1,$schema:pR1,datasets:mR1},vR1=["As part of a class I took on data programming with Python, a partner and I did research surrounding gun violence in the US. The study covered the period from 2014 the the first three months of 2018. Analysis was done with Python to examine gun violence over time, the most dangerous places in the US for gun violence, and the causes of gun violence. For change over time, gun violence tends to be seasonal, decreasing significantly during the winter. Also, there was a dip around the beginning of 2018 that warrants further research. The distribution of gun violence is heavily skewed towards a few counties in the US, so that only a few counties are responsible for a vast majority of the gun crime in the US, especially Chicago, Detroit, Seattle, LA, and relatively few others. This study also examined gun ownership, population, and disposable income as possible causes of gun violence, using regression analysis and machine learning models to find which of the chosen causes could be best used to predict the amount of gun violence in a particular area."],bR1={content:["The graph of gun violence over time reveals that gun violence is very seasonal, increasing during the summer tapering off during winter. There is also a generally upward trend throughout most of the graph, until late 2017/early 2018, when it seems to go back down. The cause is unclear, but warrants further investigation."],caption:"Figure 2.1 - Gun Violence in the Period 2014-2018"},xR1={content:["When plotting a distribution of the number of incidents in all counties in the US, it is immediately clear that it is heavily skewed towards a few counties. The plot on the right only contains those counties in which there was one or more incidents involving a gun over the entire period of the study, 2014 to the first part of 2018. Of the roughly 3200 counties in the US, only about 300 of them had any incidents at all - these are shown at right. Of these, it is immediately noticeable that there are a tremendous number of very high outliers. It is not visible from this chart, but the third quartile of these counties is 38 incidents over the entire course of the study. For reference, anything above the third quartile of the top 300 counties is roughly 75 counties, or 2.5% of the counties nationally. This in turn means that 97.5% of counties nationally have had less than 40 gun-related incidents over the entire course of our study, which is slightly more than 4 years. This also means that 2.5% of the counties in the US are responsible for the vast majority of the gun crime in the US. A conservative estimate places the top 2.5% of counties in the US responsible for over 95% of the national gun crime.","Some of the highest outliers in the graph to the right include Chicago, Detroit, Seattle, LA, and several other areas with extremely high populations."],caption:"Figure 3.1 - Distribution of Non-zero Gun Crime Counties"},_R1={before:["The results of the previous section beg the question of where the worst counties are. The skewed distribution above makes a centroid map well-suited to this task."],after:["From this graph, it is again evident that there are relatively few counties which account for almost all the crime in the US, which makes statistical analysis very difficult. The biggest ones include Chicago, LA, Detroit, Seattle, and several areas of the east coast. The scale on the right shows that a small circle on the map still corresponds to 2000 incidents, which is a huge amount, based on the distribution above.","Therefore, any county with a circle larger than a dot on this map has an unusually high amount of gun violence."]},wR1={methods:"This project was originally done in Winter 2020, in CSE 163, Data Programming with Python. Data was organized into county using geospatial analysis with Geopandas. The plots were originally done with Matplotlib and Seaborn, but I have since gone back and redone them with Altair, which provides a cleaner look. The machine learning was done with scikit-learn, using the DecisionTreeRegressor model. I did this project originally with a partner named Cody Murphy, but I rewrote this project for the web alone.",github:"The code for this project is not on my github, as the code is messy and the files are disorganized. I am working to remedy this problem, but please feel free to contact me if you would like to discuss it.",databases:[{link:"https://github.com/jamesqo/gun-violence-data",source:"James Quo on GitHub",name:"Gun Violence Data"},{link:"https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html",source:"US Census Shapefile",name:"US Shapefile Data"},{link:"https://apps.bea.gov/regional/downloadzip.cfm",source:"Annual Personal Income by State",name:"Personal Income"},{link:"https://www.kaggle.com/doj/federal-firearm-licensees",source:"Kaggle",name:"Gun Licensees"},{link:"https://www.census.gov/programs-surveys/decennial-census/2020-census.html",source:"US Census",name:"State Populations"},{link:"https://vega.github.io/vega-datasets/",source:"Vega Datasets",name:"US Topojson Map"}]},ER1={intro:["Three possible causes of gun violence were identified: population, income, and gun ownership. The number of gun retailers, or 'licensees', in a particular state was used as a proxy for gun ownership, and disposable income was used as a proxy for average income. This data is at a state level, so the results of this section are excellent indicators of good topics for further research.","Each possible cause of gun violence was plotted against the number of gun-related incidents in the lower 48 states and the District of Columbia, with a regression line. The Pearson r-value was also calculated to measure the strength of each regression."],"ml-results":[{input:"Population",mse:"644,171"},{input:"Income",mse:"3,361,734"},{input:"Licensee Count",mse:"1,184,572"},{input:"Population, Disposable Income",mse:"591,809"},{input:"Population, Licensee Count",mse:"559,237"},{input:"Disposable Income, Licensee Count",mse:"915,882"},{input:"All Three",mse:"588,160"}],"correlation-graphs":[{id:"vs-population",caption:"Population, r = 0.91"},{id:"vs-income",caption:"Income, r = -0.07"},{id:"vs-licensees",caption:"# of Licensees, r = 0.80"}],"graph-analysis":["The first graph is not a surprise, given the map in the previous section. It seems that areas with higher population have higher levels of gun violence.","The second shows that there is no correlation with disposable income and the amount of gun violence, which indicates affluence does not discourage gun violence.","The third graph indicates a moderate correlation between the number of gun licensees and the amount of gun violence. However, these are not adjusted for population, so there may be a confounding variable."],"ml-analysis":["Machine learning was then used to analyze whether any particular cause would allow accurate predictions of gun violence in a state. Models were trained on combinations of causes, and the mean squared error of their predictions was calculated on testing data that had not been used to train the models.","The results, in the table at right, show the results of the machine learning. The most important and evident conclusion made from this data is that none of these are very good predictors of gun violence. However, there is some evidence of which causes are better or worse than each other at predicting gun violence.","Of the seven combinations of possible causes of gun violence, the four that contained population were far more accurate than the three that did not. Furthermore, the difference between population only and population with gun licensees does not appear to be significant, meaning gun ownership does not appear to be a good predictor of gun violence. This indicates that the correlation above is indeed because of the lurking variable of population, rather than indicating causality."]},rn={abstract:vR1,change_over_time:bR1,county_distribution:xR1,county_map:_R1,about:wR1,causes:ER1};function SR1(){return F.useEffect(()=>{const t=[dR1,uR1,yR1];for(let e=0;e<t.length;e++)mp(`#${rn.causes["correlation-graphs"][e].id}`,t[e])},[]),$.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{children:[$.jsx("h2",{children:"What Causes Gun Violence?"}),rn.causes.intro.map((t,e)=>$.jsx("p",{className:"text-left",children:t},e+10)),$.jsx(N1,{children:$.jsx(Z2,{children:rn.causes["correlation-graphs"].map((t,e)=>$.jsxs(ue,{children:[$.jsx("div",{id:t.id}),$.jsx("figcaption",{className:"text-muted mb-4",children:`Fig. 4.${e+1} - # of Incidents vs. ${t.caption}`})]},e))})}),rn.causes["graph-analysis"].map((t,e)=>$.jsx("p",{className:"text-left",children:t},e)),$.jsxs(Z2,{children:[$.jsx(ue,{className:"pl-0",children:rn.causes["ml-analysis"].map((t,e)=>$.jsx("p",{className:"text-left",children:t},e))}),$.jsxs(ue,{children:[$.jsxs(lE,{responsive:!0,children:[$.jsx("thead",{children:$.jsxs("tr",{children:[$.jsx("th",{children:"Input(s)"}),$.jsx("th",{children:"Mean Squared Error"})]})}),$.jsx("tbody",{children:rn.causes["ml-results"].map((t,e)=>$.jsxs("tr",{children:[$.jsx("td",{className:"text-left",children:t.input}),$.jsx("td",{children:t.mse})]},e))})]}),$.jsx("figcaption",{className:"text-muted mb-4",children:"Table 4.1 - Machine Learning Features with Mean Squared Error"})]})]})]})})}function AR1(){return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{children:[$.jsx("h2",{children:"About This Project"}),$.jsx("p",{className:"text-left",children:rn.about.methods}),$.jsx("p",{className:"text-left mb-0",children:"Datasets Used in this Project:"}),rn.about.databases.map((t,e)=>$.jsxs("p",{className:"mb-0 px-3",children:[t.name,"  -  ",$.jsx("a",{href:t.link,children:t.source})]},e)),$.jsx("p",{className:"text-left mt-3",children:rn.about.github})]})})}function uJ(t){let{title:e,content:n,id:i,caption:o}=t;return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{children:[$.jsx("h2",{children:e}),$.jsxs("div",{className:"d-flex mt-4",children:[$.jsx("div",{children:n.map((u,l)=>$.jsx("p",{className:"text-left",children:u},l))}),$.jsxs("div",{children:[$.jsx("div",{id:i,alt:o,className:"ml-2 mb-2"}),$.jsx("figcaption",{className:"text-muted mb-4",children:o})]})]})]})})}const CR1={view:{continuousWidth:400,continuousHeight:300}},kR1={name:"data-71e00856560b790bc0e8ae71caa7c5d1"},TR1="bar",$R1={x:{type:"quantitative",axis:{title:"ln(Number of Incidents)"},bin:!0,field:"log(count)"},y:{type:"quantitative",aggregate:"count",axis:{title:"Count of Records"}}},MR1=240,NR1=350,RR1="https://vega.github.io/schema/vega-lite/v4.8.1.json",DR1=JSON.parse('{"data-71e00856560b790bc0e8ae71caa7c5d1":[{"latitude":32.67293333333333,"longitude":-114.6346274509804,"count":51,"log(count)":3.9318256327243257},{"latitude":35.2590375,"longitude":-109.357125,"count":8,"log(count)":2.0794415416798357},{"latitude":31.61888723404255,"longitude":-110.09391489361701,"count":47,"log(count)":3.8501476017100584},{"latitude":35.24382325581396,"longitude":-111.67000000000002,"count":43,"log(count)":3.7612001156935624},{"latitude":32.86505999999999,"longitude":-109.71809999999998,"count":10,"log(count)":2.302585092994046},{"latitude":35.08569156626506,"longitude":-114.2140843373494,"count":83,"log(count)":4.418840607796598},{"latitude":32.19118870056498,"longitude":-110.96103672316391,"count":354,"log(count)":5.869296913133774},{"latitude":33.052049253731326,"longitude":-111.61695522388058,"count":67,"log(count)":4.204692619390966},{"latitude":33.47660473061766,"longitude":-112.07727135348195,"count":1522,"log(count)":7.3277805384216315},{"latitude":33.811550000000004,"longitude":-111.022875,"count":8,"log(count)":2.0794415416798357},{"latitude":31.43598,"longitude":-110.97520000000002,"count":5,"log(count)":1.6094379124341003},{"latitude":33.0519,"longitude":-109.32600000000001,"count":1,"log(count)":0},{"latitude":34.75562352941176,"longitude":-110.27358823529411,"count":17,"log(count)":2.833213344056216},{"latitude":34.61960476190477,"longitude":-112.24185714285717,"count":42,"log(count)":3.7376696182833684},{"latitude":33.815825,"longitude":-114.17549999999999,"count":8,"log(count)":2.0794415416798357},{"latitude":34.3913,"longitude":-91.4594,"count":8,"log(count)":2.0794415416798357},{"latitude":33.15395,"longitude":-91.89021666666667,"count":6,"log(count)":1.791759469228055},{"latitude":33.5174,"longitude":-92.075925,"count":4,"log(count)":1.3862943611198906},{"latitude":33.652,"longitude":-92.4743,"count":2,"log(count)":0.6931471805599453},{"latitude":36.37175,"longitude":-90.52611666666667,"count":6,"log(count)":1.791759469228055},{"latitude":33.213975,"longitude":-93.30857499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":34.09215999999999,"longitude":-93.0889,"count":5,"log(count)":1.6094379124341003},{"latitude":35.1521,"longitude":-92.7301,"count":1,"log(count)":0},{"latitude":35.83372481203006,"longitude":-90.68728082706774,"count":266,"log(count)":5.583496308781699},{"latitude":35.24632666666667,"longitude":-90.75041999999999,"count":15,"log(count)":2.70805020110221},{"latitude":33.8168,"longitude":-92.4188,"count":1,"log(count)":0},{"latitude":33.8384,"longitude":-91.47103999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":33.608222222222224,"longitude":-91.73774444444446,"count":18,"log(count)":2.8903717578961645},{"latitude":35.08516730769231,"longitude":-92.41744615384619,"count":52,"log(count)":3.9512437185814275},{"latitude":35.438633333333335,"longitude":-93.89746666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":34.50304537037037,"longitude":-93.06571203703709,"count":108,"log(count)":4.68213122712422},{"latitude":34.307759999999995,"longitude":-92.33198000000002,"count":5,"log(count)":1.6094379124341003},{"latitude":36.08179523809524,"longitude":-90.51699523809525,"count":21,"log(count)":3.044522437723423},{"latitude":33.67877142857142,"longitude":-93.58625714285714,"count":14,"log(count)":2.6390573296152584},{"latitude":34.374025,"longitude":-92.90375,"count":4,"log(count)":1.3862943611198906},{"latitude":36.10803333333333,"longitude":-91.95306666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":35.64736428571428,"longitude":-91.22578571428572,"count":14,"log(count)":2.6390573296152584},{"latitude":34.22091513157894,"longitude":-92.0187335526316,"count":152,"log(count)":5.0238805208462765},{"latitude":35.455470000000005,"longitude":-93.42788,"count":10,"log(count)":2.302585092994046},{"latitude":33.40065,"longitude":-93.518,"count":2,"log(count)":0.6931471805599453},{"latitude":36.07042,"longitude":-91.04526000000001,"count":10,"log(count)":2.302585092994046},{"latitude":34.7663,"longitude":-90.76596666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":33.9318,"longitude":-93.8471,"count":1,"log(count)":0},{"latitude":33.95865,"longitude":-91.801625,"count":4,"log(count)":1.3862943611198906},{"latitude":33.685042857142854,"longitude":-94.16565714285716,"count":7,"log(count)":1.9459101490553132},{"latitude":36.36266666666667,"longitude":-93.61416666666666,"count":6,"log(count)":1.791759469228055},{"latitude":35.433908333333335,"longitude":-92.127425,"count":12,"log(count)":2.4849066497880004},{"latitude":34.57429848484849,"longitude":-92.53720606060611,"count":66,"log(count)":4.189654742026425},{"latitude":33.1239,"longitude":-91.2595,"count":2,"log(count)":0.6931471805599453},{"latitude":35.51182272727272,"longitude":-94.25834545454545,"count":22,"log(count)":3.091042453358316},{"latitude":35.1684238095238,"longitude":-90.18734285714287,"count":21,"log(count)":3.044522437723423},{"latitude":35.757866666666665,"longitude":-91.59660000000001,"count":15,"log(count)":2.70805020110221},{"latitude":34.81389166666667,"longitude":-91.95823333333333,"count":24,"log(count)":3.1780538303479458},{"latitude":36.1105,"longitude":-93.70973999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":33.42185111111112,"longitude":-93.98947333333332,"count":45,"log(count)":3.8066624897703196},{"latitude":34.724125,"longitude":-91.215925,"count":8,"log(count)":2.0794415416798357},{"latitude":34.470150000000004,"longitude":-93.54625,"count":2,"log(count)":0.6931471805599453},{"latitude":33.7956,"longitude":-93.38225,"count":2,"log(count)":0.6931471805599453},{"latitude":33.60232,"longitude":-92.81682,"count":5,"log(count)":1.6094379124341003},{"latitude":34.981814285714286,"longitude":-92.70737142857142,"count":7,"log(count)":1.9459101490553132},{"latitude":34.540571739130435,"longitude":-90.62920217391299,"count":46,"log(count)":3.828641396489095},{"latitude":34.3347,"longitude":-93.5427,"count":1,"log(count)":0},{"latitude":35.606831818181824,"longitude":-90.49243181818184,"count":22,"log(count)":3.091042453358316},{"latitude":34.48473333333334,"longitude":-94.25456666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":34.7848,"longitude":-91.4585,"count":1,"log(count)":0},{"latitude":34.734054662973186,"longitude":-92.31293351800556,"count":1083,"log(count)":6.9874902470009905},{"latitude":36.3662,"longitude":-90.95949999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":34.7946,"longitude":-94.2071,"count":1,"log(count)":0},{"latitude":35.89693333333333,"longitude":-92.6137,"count":3,"log(count)":1.0986122886681098},{"latitude":35.351221153846154,"longitude":-94.38329999999999,"count":104,"log(count)":4.6443908991413725},{"latitude":34.005475000000004,"longitude":-94.30122499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":36.19501875,"longitude":-91.50755625,"count":16,"log(count)":2.772588722239781},{"latitude":36.33027368421052,"longitude":-92.36025789473683,"count":38,"log(count)":3.6375861597263857},{"latitude":36.3134125,"longitude":-94.24593888888887,"count":72,"log(count)":4.276666119016055},{"latitude":36.25231818181819,"longitude":-93.07687272727274,"count":11,"log(count)":2.3978952727983707},{"latitude":36.3044,"longitude":-92.65804285714285,"count":7,"log(count)":1.9459101490553132},{"latitude":35.91303153153154,"longitude":-89.92318558558553,"count":111,"log(count)":4.709530201312334},{"latitude":36.0082,"longitude":-93.18700000000001,"count":1,"log(count)":0},{"latitude":35.32938846153846,"longitude":-93.08018846153846,"count":26,"log(count)":3.258096538021482},{"latitude":35.88665,"longitude":-92.0946,"count":2,"log(count)":0.6931471805599453},{"latitude":33.20175,"longitude":-92.65032727272728,"count":22,"log(count)":3.091042453358316},{"latitude":35.5909,"longitude":-92.4807,"count":1,"log(count)":0},{"latitude":36.10890416666667,"longitude":-94.16226979166665,"count":96,"log(count)":4.564348191467836},{"latitude":35.26139393939394,"longitude":-91.74519696969696,"count":33,"log(count)":3.4965075614664802},{"latitude":34.9983,"longitude":-91.2524,"count":1,"log(count)":0},{"latitude":35.096283333333325,"longitude":-93.30375,"count":6,"log(count)":1.791759469228055},{"latitude":35.26312,"longitude":-93.68854999999999,"count":10,"log(count)":2.302585092994046},{"latitude":35.01348333333332,"longitude":-90.76375555555555,"count":36,"log(count)":3.58351893845611},{"latitude":32.475337499999995,"longitude":-86.50378999999998,"count":40,"log(count)":3.6888794541139363},{"latitude":30.57534302325582,"longitude":-87.75507790697675,"count":86,"log(count)":4.454347296253507},{"latitude":31.874304761904757,"longitude":-85.23385238095237,"count":21,"log(count)":3.044522437723423},{"latitude":32.992025,"longitude":-87.1540125,"count":8,"log(count)":2.0794415416798357},{"latitude":33.998400000000004,"longitude":-86.57107142857141,"count":21,"log(count)":3.044522437723423},{"latitude":32.13495555555556,"longitude":-85.71204444444446,"count":18,"log(count)":2.8903717578961645},{"latitude":31.798983999999997,"longitude":-86.635268,"count":25,"log(count)":3.2188758248682006},{"latitude":33.684663541666666,"longitude":-85.82779479166669,"count":96,"log(count)":4.564348191467836},{"latitude":32.841249999999995,"longitude":-85.2604590909091,"count":22,"log(count)":3.091042453358316},{"latitude":34.18816428571429,"longitude":-85.64573571428569,"count":14,"log(count)":2.6390573296152584},{"latitude":32.872,"longitude":-86.64472380952382,"count":21,"log(count)":3.044522437723423},{"latitude":32.11143,"longitude":-88.24618999999998,"count":10,"log(count)":2.302585092994046},{"latitude":31.60635,"longitude":-87.83725,"count":2,"log(count)":0.6931471805599453},{"latitude":33.1236,"longitude":-85.8348,"count":1,"log(count)":0},{"latitude":33.6497375,"longitude":-85.5378625,"count":8,"log(count)":2.0794415416798357},{"latitude":31.344178787878786,"longitude":-85.8738424242424,"count":33,"log(count)":3.4965075614664802},{"latitude":34.734145,"longitude":-87.68745749999998,"count":40,"log(count)":3.6888794541139363},{"latitude":31.435125,"longitude":-86.9027,"count":4,"log(count)":1.3862943611198906},{"latitude":32.99225,"longitude":-86.12938749999999,"count":8,"log(count)":2.0794415416798357},{"latitude":31.261542105263164,"longitude":-86.39512631578947,"count":19,"log(count)":2.9444389791664403},{"latitude":31.737612499999997,"longitude":-86.2640875,"count":8,"log(count)":2.0794415416798357},{"latitude":34.16857187499999,"longitude":-86.79469062500003,"count":32,"log(count)":3.4657359027997265},{"latitude":31.422860606060603,"longitude":-85.62291212121211,"count":33,"log(count)":3.4965075614664802},{"latitude":32.40242676056338,"longitude":-87.02944788732398,"count":142,"log(count)":4.955827057601261},{"latitude":34.46781500000001,"longitude":-85.80094500000001,"count":40,"log(count)":3.6888794541139363},{"latitude":32.52742499999999,"longitude":-86.24942500000002,"count":44,"log(count)":3.784189633918261},{"latitude":31.071814285714282,"longitude":-87.35728571428571,"count":28,"log(count)":3.332204510175204},{"latitude":34.01704605263157,"longitude":-86.00670921052631,"count":76,"log(count)":4.330733340286331},{"latitude":33.7619,"longitude":-87.7469,"count":1,"log(count)":0},{"latitude":34.48665,"longitude":-87.78023636363636,"count":22,"log(count)":3.091042453358316},{"latitude":31.107009090909095,"longitude":-85.76758181818182,"count":11,"log(count)":2.3978952727983707},{"latitude":32.8699625,"longitude":-87.90333749999999,"count":8,"log(count)":2.0794415416798357},{"latitude":32.820233333333334,"longitude":-87.61255555555555,"count":9,"log(count)":2.1972245773362196},{"latitude":31.465825000000002,"longitude":-85.23562500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":31.21295666666668,"longitude":-85.38645333333332,"count":90,"log(count)":4.499809670330265},{"latitude":34.77052173913044,"longitude":-85.8839739130435,"count":23,"log(count)":3.1354942159291497},{"latitude":33.518736306620255,"longitude":-86.82791742160275,"count":1435,"log(count)":7.268920128193722},{"latitude":33.7543,"longitude":-88.1053,"count":2,"log(count)":0.6931471805599453},{"latitude":34.84017222222222,"longitude":-87.65081296296296,"count":54,"log(count)":3.9889840465642745},{"latitude":34.483472727272726,"longitude":-87.23966363636363,"count":11,"log(count)":2.3978952727983707},{"latitude":32.616356488549606,"longitude":-85.3930801526717,"count":131,"log(count)":4.875197323201151},{"latitude":34.79911084337348,"longitude":-86.95637710843378,"count":83,"log(count)":4.418840607796598},{"latitude":32.188775,"longitude":-86.64219999999999,"count":8,"log(count)":2.0794415416798357},{"latitude":32.42731111111111,"longitude":-85.7121851851852,"count":27,"log(count)":3.295836866004329},{"latitude":34.74102111486485,"longitude":-86.61517128378378,"count":592,"log(count)":6.3835066348840055},{"latitude":32.45377692307692,"longitude":-87.82207692307692,"count":13,"log(count)":2.5649493574615367},{"latitude":34.107400000000005,"longitude":-87.98726666666666,"count":6,"log(count)":1.791759469228055},{"latitude":34.324882352941174,"longitude":-86.31934313725492,"count":51,"log(count)":3.9318256327243257},{"latitude":30.68537240398291,"longitude":-88.12627240398304,"count":703,"log(count)":6.555356891810665},{"latitude":31.494600000000002,"longitude":-87.32273333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":32.35177423935094,"longitude":-86.27925314401622,"count":493,"log(count)":6.20050917404269},{"latitude":34.555967741935476,"longitude":-86.96121935483876,"count":124,"log(count)":4.820281565605037},{"latitude":32.58431111111111,"longitude":-87.38743333333335,"count":9,"log(count)":2.1972245773362196},{"latitude":33.242016666666665,"longitude":-88.12901666666669,"count":6,"log(count)":1.791759469228055},{"latitude":31.799141666666667,"longitude":-85.94946944444445,"count":36,"log(count)":3.58351893845611},{"latitude":33.31132,"longitude":-85.54636,"count":5,"log(count)":1.6094379124341003},{"latitude":32.43346181818182,"longitude":-85.03600545454542,"count":55,"log(count)":4.007333185232471},{"latitude":33.275865454545446,"longitude":-86.71248727272726,"count":55,"log(count)":4.007333185232471},{"latitude":32.53788333333333,"longitude":-88.30182500000001,"count":12,"log(count)":2.4849066497880004},{"latitude":33.39805384615385,"longitude":-86.1542846153846,"count":39,"log(count)":3.6635616461296463},{"latitude":32.8789575,"longitude":-85.87660000000001,"count":40,"log(count)":3.6888794541139363},{"latitude":33.194180399999986,"longitude":-87.53662560000008,"count":250,"log(count)":5.521460917862246},{"latitude":33.815264,"longitude":-87.22265200000001,"count":25,"log(count)":3.2188758248682006},{"latitude":31.323,"longitude":-88.13884,"count":5,"log(count)":1.6094379124341003},{"latitude":31.993863636363642,"longitude":-87.41232727272727,"count":11,"log(count)":2.3978952727983707},{"latitude":34.18825,"longitude":-87.5041,"count":2,"log(count)":0.6931471805599453},{"latitude":33.67342,"longitude":-86.35101499999999,"count":20,"log(count)":2.995732273553991},{"latitude":39.849433014354084,"longitude":-104.93194736842108,"count":209,"log(count)":5.342334251964811},{"latitude":37.5579,"longitude":-105.875,"count":3,"log(count)":1.0986122886681098},{"latitude":39.672254545454514,"longitude":-104.86010454545455,"count":220,"log(count)":5.393627546352362},{"latitude":37.24993333333333,"longitude":-107.11566666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":40.07498437499999,"longitude":-105.19493750000001,"count":64,"log(count)":4.1588830833596715},{"latitude":38.6881,"longitude":-106.0775,"count":2,"log(count)":0.6931471805599453},{"latitude":39.709966666666666,"longitude":-105.56200000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":37.279250000000005,"longitude":-106.05850000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":37.2008,"longitude":-105.42399999999999,"count":1,"log(count)":0},{"latitude":38.1394,"longitude":-105.42200000000001,"count":1,"log(count)":0},{"latitude":38.78771666666666,"longitude":-108.008,"count":6,"log(count)":1.791759469228055},{"latitude":39.76690431893684,"longitude":-104.88571594684396,"count":602,"log(count)":6.400257445308821},{"latitude":39.44532619047619,"longitude":-104.87,"count":42,"log(count)":3.7376696182833684},{"latitude":39.60672352941177,"longitude":-106.7269411764706,"count":17,"log(count)":2.833213344056216},{"latitude":38.84338974042035,"longitude":-104.77208776267005,"count":809,"log(count)":6.695798917058491},{"latitude":39.38636666666667,"longitude":-104.19449999999999,"count":6,"log(count)":1.791759469228055},{"latitude":38.42923888888889,"longitude":-105.20811111111112,"count":36,"log(count)":3.58351893845611},{"latitude":39.539738888888884,"longitude":-107.56416666666665,"count":18,"log(count)":2.8903717578961645},{"latitude":39.817299999999996,"longitude":-105.47666666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":40.06225,"longitude":-105.878,"count":2,"log(count)":0.6931471805599453},{"latitude":38.549375,"longitude":-106.86575,"count":4,"log(count)":1.3862943611198906},{"latitude":37.628,"longitude":-104.85275,"count":4,"log(count)":1.3862943611198906},{"latitude":39.73346403508771,"longitude":-105.11525438596492,"count":114,"log(count)":4.736198448394496},{"latitude":39.2906,"longitude":-102.875,"count":1,"log(count)":0},{"latitude":37.20308571428571,"longitude":-107.75321428571426,"count":14,"log(count)":2.6390573296152584},{"latitude":39.2505,"longitude":-106.292,"count":1,"log(count)":0},{"latitude":40.50581041666667,"longitude":-105.10074999999993,"count":96,"log(count)":4.564348191467836},{"latitude":37.18384,"longitude":-104.64760000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":39.15545,"longitude":-103.529,"count":2,"log(count)":0.6931471805599453},{"latitude":39.08065043103447,"longitude":-108.52692672413788,"count":232,"log(count)":5.44673737166631},{"latitude":40.4557,"longitude":-107.8315,"count":4,"log(count)":1.3862943611198906},{"latitude":37.38986,"longitude":-108.6202,"count":5,"log(count)":1.6094379124341003},{"latitude":38.49782941176471,"longitude":-107.90288235294119,"count":17,"log(count)":2.833213344056216},{"latitude":40.2499,"longitude":-103.8,"count":1,"log(count)":0},{"latitude":38.0427,"longitude":-103.69200000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":39.36267142857143,"longitude":-105.62142857142855,"count":7,"log(count)":1.9459101490553132},{"latitude":39.183057142857145,"longitude":-106.87657142857144,"count":7,"log(count)":1.9459101490553132},{"latitude":38.0857,"longitude":-102.62100000000001,"count":1,"log(count)":0},{"latitude":38.26579750692521,"longitude":-104.62023268698061,"count":361,"log(count)":5.8888779583328805},{"latitude":40.0945,"longitude":-108.729,"count":1,"log(count)":0},{"latitude":37.61228,"longitude":-106.13579999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":40.48566666666667,"longitude":-106.88816666666666,"count":6,"log(count)":1.791759469228055},{"latitude":37.951924999999996,"longitude":-106.23724999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":37.9385,"longitude":-107.838,"count":1,"log(count)":0},{"latitude":39.59575,"longitude":-106.06625,"count":4,"log(count)":1.3862943611198906},{"latitude":38.841762499999994,"longitude":-105.18962500000002,"count":8,"log(count)":2.0794415416798357},{"latitude":40.368506796116485,"longitude":-104.73414563106797,"count":103,"log(count)":4.634728988229636},{"latitude":40.1185,"longitude":-102.72200000000001,"count":1,"log(count)":0},{"latitude":41.7618289408867,"longitude":-72.69934384236457,"count":812,"log(count)":6.699500340161678},{"latitude":41.85323421052631,"longitude":-72.38001842105264,"count":38,"log(count)":3.6375861597263857},{"latitude":41.16355173410407,"longitude":-73.28820067437367,"count":1038,"log(count)":6.945051063725834},{"latitude":41.72187368421053,"longitude":-73.21366578947367,"count":38,"log(count)":3.6375861597263857},{"latitude":41.503953191489366,"longitude":-72.5965553191489,"count":47,"log(count)":3.8501476017100584},{"latitude":41.35531868811879,"longitude":-72.94568539603958,"count":808,"log(count)":6.694562058521095},{"latitude":41.41650955414013,"longitude":-72.08394267515926,"count":157,"log(count)":5.056245805348308},{"latitude":41.75979565217392,"longitude":-72.07728695652173,"count":46,"log(count)":3.828641396489095},{"latitude":38.68827380952379,"longitude":-75.40364603174605,"count":126,"log(count)":4.836281906951478},{"latitude":39.72223066322135,"longitude":-75.5766731266151,"count":1161,"log(count)":7.057036981697891},{"latitude":39.136100568181824,"longitude":-75.52859176136364,"count":352,"log(count)":5.863631175598097},{"latitude":38.784428125000005,"longitude":-120.6200625,"count":32,"log(count)":3.4657359027997265},{"latitude":36.74696591889561,"longitude":-119.77996117342525,"count":1159,"log(count)":7.055312843339752},{"latitude":39.66225714285714,"longitude":-122.18564285714285,"count":14,"log(count)":2.6390573296152584},{"latitude":32.8484975,"longitude":-115.56105000000002,"count":40,"log(count)":3.6888794541139363},{"latitude":36.22899818181818,"longitude":-119.73736363636363,"count":55,"log(count)":4.007333185232471},{"latitude":38.990655,"longitude":-122.721,"count":20,"log(count)":2.995732273553991},{"latitude":34.03012401466549,"longitude":-118.22162603116426,"count":3273,"log(count)":8.09346227450118},{"latitude":37.024868627450985,"longitude":-119.99825490196075,"count":51,"log(count)":3.9318256327243257},{"latitude":37.997425714285704,"longitude":-122.56928571428573,"count":35,"log(count)":3.5553480614894135},{"latitude":37.5569,"longitude":-120.10657142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":39.36980322580646,"longitude":-123.41154838709677,"count":31,"log(count)":3.4339872044851463},{"latitude":37.295126819923325,"longitude":-120.56860919540235,"count":261,"log(count)":5.564520407322694},{"latitude":41.470150000000004,"longitude":-120.58699999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":36.61330910931178,"longitude":-121.58628137651827,"count":494,"log(count)":6.202535517187923},{"latitude":38.322908000000005,"longitude":-122.31396000000002,"count":25,"log(count)":3.2188758248682006},{"latitude":33.749120809248595,"longitude":-117.89328131021199,"count":519,"log(count)":6.251903883165888},{"latitude":38.86933559322035,"longitude":-121.10330508474574,"count":59,"log(count)":4.07753744390572},{"latitude":40.037816666666664,"longitude":-121.23033333333335,"count":6,"log(count)":1.791759469228055},{"latitude":33.816097331639114,"longitude":-116.86295044472672,"count":787,"log(count)":6.668228248417403},{"latitude":38.576711287758336,"longitude":-121.4320015898252,"count":629,"log(count)":6.444131256700441},{"latitude":36.859833333333334,"longitude":-121.43,"count":9,"log(count)":2.1972245773362196},{"latitude":34.20902673656615,"longitude":-117.27181651376146,"count":763,"log(count)":6.637258031284457},{"latitude":32.840744992526155,"longitude":-117.11138266068757,"count":669,"log(count)":6.505784060128229},{"latitude":37.75738368983962,"longitude":-122.4169491978609,"count":374,"log(count)":5.924255797414532},{"latitude":37.97618283828384,"longitude":-121.29073102310237,"count":606,"log(count)":6.406879986069314},{"latitude":35.289565384615386,"longitude":-120.6261153846154,"count":26,"log(count)":3.258096538021482},{"latitude":37.570991406250016,"longitude":-122.33598437500002,"count":128,"log(count)":4.852030263919617},{"latitude":34.81529099999999,"longitude":-120.31060000000001,"count":100,"log(count)":4.605170185988092},{"latitude":37.324588269794724,"longitude":-121.89056011730197,"count":341,"log(count)":5.831882477283517},{"latitude":36.95589548872181,"longitude":-121.8901503759399,"count":133,"log(count)":4.890349128221754},{"latitude":41.55466153846154,"longitude":-122.48492307692308,"count":13,"log(count)":2.5649493574615367},{"latitude":38.20030638297872,"longitude":-122.1186861702128,"count":188,"log(count)":5.236441962829949},{"latitude":37.6160945525292,"longitude":-120.96879766536952,"count":257,"log(count)":5.54907608489522},{"latitude":39.15116666666667,"longitude":-121.63933333333333,"count":21,"log(count)":3.044522437723423},{"latitude":40.701933333333336,"longitude":-123.21779999999998,"count":15,"log(count)":2.70805020110221},{"latitude":36.25594791666667,"longitude":-119.24357500000002,"count":240,"log(count)":5.480638923341991},{"latitude":37.984175,"longitude":-120.30124999999998,"count":12,"log(count)":2.4849066497880004},{"latitude":34.21920156249999,"longitude":-119.14795572916661,"count":384,"log(count)":5.950642552587727},{"latitude":38.60407812500001,"longitude":-121.68937500000003,"count":32,"log(count)":3.4657359027997265},{"latitude":39.14089696969697,"longitude":-121.52736363636362,"count":33,"log(count)":3.4965075614664802},{"latitude":30.33122507685559,"longitude":-81.67054852876598,"count":2277,"log(count)":7.7306140660637395},{"latitude":27.196175,"longitude":-81.8535,"count":4,"log(count)":1.3862943611198906},{"latitude":29.348386666666666,"longitude":-82.63656666666667,"count":15,"log(count)":2.70805020110221},{"latitude":29.6185,"longitude":-83.05013333333333,"count":6,"log(count)":1.791759469228055},{"latitude":30.08930303030303,"longitude":-81.79497575757574,"count":66,"log(count)":4.189654742026425},{"latitude":30.655642857142862,"longitude":-86.18357619047617,"count":42,"log(count)":3.7376696182833684},{"latitude":30.098245454545452,"longitude":-83.59210000000002,"count":11,"log(count)":2.3978952727983707},{"latitude":30.27452857142857,"longitude":-82.98348571428572,"count":7,"log(count)":1.9459101490553132},{"latitude":30.611050000000002,"longitude":-81.59959736842103,"count":38,"log(count)":3.6375861597263857},{"latitude":30.467959090909087,"longitude":-83.43052727272728,"count":22,"log(count)":3.091042453358316},{"latitude":29.9205,"longitude":-82.9734,"count":2,"log(count)":0.6931471805599453},{"latitude":30.556866666666664,"longitude":-83.82496666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":30.789926760563358,"longitude":-85.2220478873239,"count":71,"log(count)":4.2626798770413155},{"latitude":30.851346153846155,"longitude":-85.79120769230768,"count":13,"log(count)":2.5649493574615367},{"latitude":30.415799999999997,"longitude":-82.8734,"count":2,"log(count)":0.6931471805599453},{"latitude":30.487626771653566,"longitude":-87.25734763779532,"count":254,"log(count)":5.537334267018537},{"latitude":30.202771212121224,"longitude":-85.67241212121219,"count":198,"log(count)":5.288267030694535},{"latitude":28.28896076923076,"longitude":-82.50676846153843,"count":130,"log(count)":4.867534450455582},{"latitude":28.834413513513514,"longitude":-82.05612972972972,"count":37,"log(count)":3.6109179126442243},{"latitude":27.2657585365854,"longitude":-82.46159695121949,"count":164,"log(count)":5.099866427824199},{"latitude":26.946808620689662,"longitude":-82.08490689655169,"count":58,"log(count)":4.060443010546419},{"latitude":27.1357,"longitude":-80.8877,"count":1,"log(count)":0},{"latitude":27.480246801346787,"longitude":-82.5493198653199,"count":297,"log(count)":5.6937321388027},{"latitude":27.85358749999999,"longitude":-82.71094895833333,"count":384,"log(count)":5.950642552587727},{"latitude":28.02330900900902,"longitude":-81.80965765765767,"count":222,"log(count)":5.402677381872279},{"latitude":28.265592783505166,"longitude":-81.38853092783506,"count":97,"log(count)":4.574710978503383},{"latitude":28.25108773584905,"longitude":-80.69598333333326,"count":318,"log(count)":5.762051382780177},{"latitude":28.531155293276107,"longitude":-81.39076845493553,"count":1398,"log(count)":7.242797922793756},{"latitude":28.50885851063829,"longitude":-82.47070638297872,"count":94,"log(count)":4.543294782270004},{"latitude":28.851489655172415,"longitude":-82.45679655172417,"count":29,"log(count)":3.367295829986474},{"latitude":26.11297525641027,"longitude":-80.18755858974347,"count":780,"log(count)":6.659293919683638},{"latitude":26.19731226993865,"longitude":-81.68362208588948,"count":163,"log(count)":5.093750200806762},{"latitude":25.803079736649632,"longitude":-80.2576604242868,"count":1367,"log(count)":7.220373836723949},{"latitude":27.482035135135135,"longitude":-81.4486135135135,"count":37,"log(count)":3.6109179126442243},{"latitude":27.972384503311268,"longitude":-82.40551801324507,"count":755,"log(count)":6.626717749249025},{"latitude":26.601992329956563,"longitude":-81.83079768451519,"count":691,"log(count)":6.53813982376767},{"latitude":24.77015116279069,"longitude":-81.191076744186,"count":86,"log(count)":4.454347296253507},{"latitude":27.278890243902442,"longitude":-80.83441219512196,"count":41,"log(count)":3.713572066704308},{"latitude":26.653444938650313,"longitude":-80.12634210122683,"count":1304,"log(count)":7.1731917424865985},{"latitude":30.635880769230766,"longitude":-85.6272846153846,"count":26,"log(count)":3.258096538021482},{"latitude":29.702525,"longitude":-82.79934999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":29.92858571428571,"longitude":-82.13591428571429,"count":7,"log(count)":1.9459101490553132},{"latitude":28.725617948717968,"longitude":-81.30374564102561,"count":195,"log(count)":5.272999558563747},{"latitude":30.16089642857143,"longitude":-82.6484232142857,"count":56,"log(count)":4.02535169073515},{"latitude":29.627572500000014,"longitude":-81.68730874999997,"count":80,"log(count)":4.382026634673881},{"latitude":29.796850000000003,"longitude":-84.89488333333334,"count":12,"log(count)":2.4849066497880004},{"latitude":30.159369999999996,"longitude":-84.36763,"count":10,"log(count)":2.302585092994046},{"latitude":30.009933333333336,"longitude":-82.3687,"count":3,"log(count)":1.0986122886681098},{"latitude":30.612928787878797,"longitude":-87.01405606060608,"count":66,"log(count)":4.189654742026425},{"latitude":30.545212500000016,"longitude":-86.58007850000001,"count":200,"log(count)":5.298317366548036},{"latitude":30.439783268482465,"longitude":-84.30427821011672,"count":257,"log(count)":5.54907608489522},{"latitude":29.966887500000002,"longitude":-85.25525,"count":8,"log(count)":2.0794415416798357},{"latitude":30.61175384615385,"longitude":-84.60231538461538,"count":13,"log(count)":2.5649493574615367},{"latitude":30.457400000000003,"longitude":-85.08696666666667,"count":6,"log(count)":1.791759469228055},{"latitude":30.29666153846154,"longitude":-82.16223076923077,"count":13,"log(count)":2.5649493574615367},{"latitude":29.096242332613386,"longitude":-81.12026393088549,"count":463,"log(count)":6.137727054086234},{"latitude":29.159239152119714,"longitude":-82.11575735660843,"count":401,"log(count)":5.993961427306569},{"latitude":27.686290909090918,"longitude":-80.45054876033058,"count":121,"log(count)":4.795790545596741},{"latitude":26.738158333333335,"longitude":-81.09898333333332,"count":12,"log(count)":2.4849066497880004},{"latitude":29.916765420560736,"longitude":-81.40526915887855,"count":107,"log(count)":4.672828834461906},{"latitude":27.3957247813411,"longitude":-80.3533623906706,"count":343,"log(count)":5.8377304471659395},{"latitude":29.51381071428572,"longitude":-81.24072232142859,"count":112,"log(count)":4.718498871295094},{"latitude":29.65783608695652,"longitude":-82.36102869565215,"count":230,"log(count)":5.438079308923196},{"latitude":30.4303,"longitude":-84.96187499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":27.160699999999995,"longitude":-80.25067662337662,"count":77,"log(count)":4.343805421853684},{"latitude":28.752509174311946,"longitude":-81.77944908256877,"count":218,"log(count)":5.384495062789089},{"latitude":31.25375,"longitude":-83.24475,"count":6,"log(count)":1.791759469228055},{"latitude":33.61801666666667,"longitude":-85.04447916666668,"count":24,"log(count)":3.1780538303479458},{"latitude":33.37457407407407,"longitude":-84.76406666666665,"count":54,"log(count)":3.9889840465642745},{"latitude":32.8211,"longitude":-84.94482500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":33.054575,"longitude":-84.167575,"count":4,"log(count)":1.3862943611198906},{"latitude":31.78013333333334,"longitude":-81.7648,"count":6,"log(count)":1.791759469228055},{"latitude":30.84455304878047,"longitude":-83.28045548780491,"count":164,"log(count)":5.099866427824199},{"latitude":32.6345,"longitude":-84.53649999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":34.58873333333334,"longitude":-83.73711666666668,"count":6,"log(count)":1.791759469228055},{"latitude":31.24565,"longitude":-84.43090000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":32.39941666666667,"longitude":-82.07091666666666,"count":6,"log(count)":1.791759469228055},{"latitude":32.68574166666667,"longitude":-83.91848333333334,"count":12,"log(count)":2.4849066497880004},{"latitude":32.775725,"longitude":-81.943175,"count":4,"log(count)":1.3862943611198906},{"latitude":33.00666666666667,"longitude":-83.88231666666667,"count":12,"log(count)":2.4849066497880004},{"latitude":32.57147666666666,"longitude":-83.86753333333333,"count":30,"log(count)":3.4011973816621555},{"latitude":31.697560000000003,"longitude":-83.64708,"count":5,"log(count)":1.6094379124341003},{"latitude":31.555090909090907,"longitude":-83.85013636363637,"count":11,"log(count)":2.3978952727983707},{"latitude":31.704250000000002,"longitude":-84.15334285714287,"count":14,"log(count)":2.6390573296152584},{"latitude":32.06094814814814,"longitude":-84.2216851851852,"count":27,"log(count)":3.295836866004329},{"latitude":34.017399999999995,"longitude":-85.2137888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":31.213536363636365,"longitude":-84.17269999999999,"count":11,"log(count)":2.3978952727983707},{"latitude":30.853315909090917,"longitude":-83.96918863636364,"count":44,"log(count)":3.784189633918261},{"latitude":31.155408333333337,"longitude":-83.43275833333334,"count":12,"log(count)":2.4849066497880004},{"latitude":31.17960359712231,"longitude":-83.77703956834533,"count":139,"log(count)":4.9344739331306915},{"latitude":31.170366666666666,"longitude":-84.72343333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":31.445935416666668,"longitude":-83.51003125000001,"count":48,"log(count)":3.871201010907891},{"latitude":32.3201,"longitude":-84.5199,"count":1,"log(count)":0},{"latitude":31.54318571428571,"longitude":-82.4623,"count":7,"log(count)":1.9459101490553132},{"latitude":31.6712,"longitude":-85.06944999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":31.381220000000003,"longitude":-84.89496,"count":5,"log(count)":1.6094379124341003},{"latitude":32.157335714285715,"longitude":-82.37169285714286,"count":14,"log(count)":2.6390573296152584},{"latitude":33.07728208955224,"longitude":-83.23525223880597,"count":67,"log(count)":4.204692619390966},{"latitude":32.9851375,"longitude":-83.57987499999999,"count":8,"log(count)":2.0794415416798357},{"latitude":32.63282857142857,"longitude":-83.35117142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":32.040600000000005,"longitude":-83.458825,"count":4,"log(count)":1.3862943611198906},{"latitude":30.870525,"longitude":-83.562375,"count":4,"log(count)":1.3862943611198906},{"latitude":33.0849,"longitude":-82.37336666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":31.35095,"longitude":-82.93795,"count":2,"log(count)":0.6931471805599453},{"latitude":32.1683,"longitude":-81.9096,"count":1,"log(count)":0},{"latitude":33.5852,"longitude":-83.513025,"count":4,"log(count)":1.3862943611198906},{"latitude":33.31986666666666,"longitude":-83.71356666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":33.1791,"longitude":-84.3814,"count":1,"log(count)":0},{"latitude":32.53860666666667,"longitude":-82.90617999999999,"count":15,"log(count)":2.70805020110221},{"latitude":32.727475,"longitude":-82.72455,"count":4,"log(count)":1.3862943611198906},{"latitude":32.891125,"longitude":-84.3326,"count":4,"log(count)":1.3862943611198906},{"latitude":32.848800000000004,"longitude":-83.24306666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":33.05743333333333,"longitude":-84.71444166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":32.282624999999996,"longitude":-84.05725000000001,"count":4,"log(count)":1.3862943611198906},{"latitude":33.2266,"longitude":-85.0446,"count":1,"log(count)":0},{"latitude":33.296975,"longitude":-83.263575,"count":4,"log(count)":1.3862943611198906},{"latitude":32.02525,"longitude":-84.7972,"count":2,"log(count)":0.6931471805599453},{"latitude":31.999200000000002,"longitude":-82.0218,"count":2,"log(count)":0.6931471805599453},{"latitude":32.3661,"longitude":-83.32740000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":31.506670270270263,"longitude":-82.85644054054055,"count":37,"log(count)":3.6109179126442243},{"latitude":34.8701,"longitude":-85.4785,"count":3,"log(count)":1.0986122886681098},{"latitude":32.58588181818181,"longitude":-82.30991818181818,"count":11,"log(count)":2.3978952727983707},{"latitude":32.26446,"longitude":-83.46928,"count":5,"log(count)":1.6094379124341003},{"latitude":33.553250000000006,"longitude":-82.89375000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":33.40542857142857,"longitude":-82.65734285714287,"count":7,"log(count)":1.9459101490553132},{"latitude":34.1282,"longitude":-82.90215,"count":6,"log(count)":1.791759469228055},{"latitude":33.107840624999994,"longitude":-81.97799374999998,"count":32,"log(count)":3.4657359027997265},{"latitude":31.021425,"longitude":-83.071675,"count":4,"log(count)":1.3862943611198906},{"latitude":32.15575,"longitude":-83.18953750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":33.2789,"longitude":-82.9699,"count":2,"log(count)":0.6931471805599453},{"latitude":32.97752857142857,"longitude":-82.81912857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":33.5224,"longitude":-83.1928,"count":1,"log(count)":0},{"latitude":33.471289473684216,"longitude":-82.4838947368421,"count":19,"log(count)":2.9444389791664403},{"latitude":33.50985471698113,"longitude":-82.19120000000001,"count":53,"log(count)":3.970291913552122},{"latitude":31.2997,"longitude":-82.2477,"count":1,"log(count)":0},{"latitude":31.7793,"longitude":-82.3495,"count":2,"log(count)":0.6931471805599453},{"latitude":34.342,"longitude":-83.4427,"count":2,"log(count)":0.6931471805599453},{"latitude":34.4109,"longitude":-83.22915,"count":4,"log(count)":1.3862943611198906},{"latitude":34.13068571428572,"longitude":-83.55931818181821,"count":77,"log(count)":4.343805421853684},{"latitude":33.9127411764706,"longitude":-84.8165176470588,"count":34,"log(count)":3.5263605246161616},{"latitude":34.572878571428575,"longitude":-83.29090714285714,"count":14,"log(count)":2.6390573296152584},{"latitude":32.71525,"longitude":-81.611075,"count":4,"log(count)":1.3862943611198906},{"latitude":32.302549382716045,"longitude":-81.31367037037036,"count":81,"log(count)":4.394449154672439},{"latitude":32.423985641025624,"longitude":-81.76617641025639,"count":195,"log(count)":5.272999558563747},{"latitude":32.04693333333333,"longitude":-81.41994666666666,"count":15,"log(count)":2.70805020110221},{"latitude":31.8461,"longitude":-85.0863,"count":1,"log(count)":0},{"latitude":31.606375,"longitude":-81.9539,"count":4,"log(count)":1.3862943611198906},{"latitude":33.75586666666666,"longitude":-85.14543333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":32.343199999999996,"longitude":-84.84885,"count":2,"log(count)":0.6931471805599453},{"latitude":34.8651,"longitude":-84.3398,"count":1,"log(count)":0},{"latitude":34.945075,"longitude":-83.7948,"count":4,"log(count)":1.3862943611198906},{"latitude":31.573838862559263,"longitude":-84.1529876777252,"count":211,"log(count)":5.351858133476067},{"latitude":34.676,"longitude":-84.46284999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":30.947340000000004,"longitude":-84.21852999999999,"count":10,"log(count)":2.302585092994046},{"latitude":33.89383333333333,"longitude":-83.11098333333334,"count":6,"log(count)":1.791759469228055},{"latitude":33.76393,"longitude":-83.78320999999998,"count":20,"log(count)":2.995732273553991},{"latitude":33.721000000000004,"longitude":-82.7611,"count":3,"log(count)":1.0986122886681098},{"latitude":31.036925,"longitude":-82.7516,"count":4,"log(count)":1.3862943611198906},{"latitude":34.39405714285714,"longitude":-84.07884285714285,"count":7,"log(count)":1.9459101490553132},{"latitude":34.57666666666667,"longitude":-83.52111666666667,"count":12,"log(count)":2.4849066497880004},{"latitude":34.88276666666666,"longitude":-83.42013333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":34.20531875,"longitude":-84.82279791666666,"count":48,"log(count)":3.871201010907891},{"latitude":31.72412857142857,"longitude":-83.22005714285714,"count":7,"log(count)":1.9459101490553132},{"latitude":31.958986111111113,"longitude":-83.77681388888887,"count":36,"log(count)":3.58351893845611},{"latitude":32.14918,"longitude":-83.7444,"count":5,"log(count)":1.6094379124341003},{"latitude":34.49528333333333,"longitude":-85.3283,"count":6,"log(count)":1.791759469228055},{"latitude":30.90082727272728,"longitude":-84.58388636363637,"count":22,"log(count)":3.091042453358316},{"latitude":31.777444444444452,"longitude":-84.42198888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":31.7672,"longitude":-84.7769,"count":1,"log(count)":0},{"latitude":32.0978,"longitude":-82.54325,"count":2,"log(count)":0.6931471805599453},{"latitude":32.0422,"longitude":-84.5392,"count":1,"log(count)":0},{"latitude":33.28777142857143,"longitude":-83.9722,"count":7,"log(count)":1.9459101490553132},{"latitude":31.5920625,"longitude":-83.22945,"count":8,"log(count)":2.0794415416798357},{"latitude":33.26736666666667,"longitude":-84.2819875,"count":24,"log(count)":3.1780538303479458},{"latitude":34.8817,"longitude":-84.0768,"count":1,"log(count)":0},{"latitude":34.934617647058815,"longitude":-85.19574117647056,"count":17,"log(count)":2.833213344056216},{"latitude":34.79147391304349,"longitude":-84.95457826086958,"count":23,"log(count)":3.1354942159291497},{"latitude":34.25307350746267,"longitude":-85.17985373134326,"count":268,"log(count)":5.5909869805108565},{"latitude":34.8898,"longitude":-85.29946363636364,"count":22,"log(count)":3.091042453358316},{"latitude":34.515523529411766,"longitude":-84.93202941176469,"count":17,"log(count)":2.833213344056216},{"latitude":33.872686000000016,"longitude":-83.47038600000002,"count":50,"log(count)":3.912023005428146},{"latitude":31.52025,"longitude":-81.39865,"count":2,"log(count)":0.6931471805599453},{"latitude":31.947366666666664,"longitude":-82.97533333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":33.987563013698626,"longitude":-83.72640136986304,"count":73,"log(count)":4.290459441148391},{"latitude":31.81770967741935,"longitude":-81.58641612903227,"count":31,"log(count)":3.4339872044851463},{"latitude":34.525949999999995,"longitude":-83.98214999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":32.47103212951435,"longitude":-84.94299078455784,"count":803,"log(count)":6.688354713946762},{"latitude":33.65147575757575,"longitude":-84.01481212121212,"count":33,"log(count)":3.4965075614664802},{"latitude":31.222099999999998,"longitude":-82.35995555555556,"count":9,"log(count)":2.1972245773362196},{"latitude":30.83455,"longitude":-82.0038,"count":2,"log(count)":0.6931471805599453},{"latitude":33.435509999999994,"longitude":-82.02806815789467,"count":380,"log(count)":5.940171252720432},{"latitude":19.655126446280992,"longitude":-155.31057024793387,"count":121,"log(count)":4.795790545596741},{"latitude":21.36032249999999,"longitude":-157.91859999999994,"count":120,"log(count)":4.787491742782046},{"latitude":22.023984615384613,"longitude":-159.38546153846153,"count":13,"log(count)":2.5649493574615367},{"latitude":20.887872727272722,"longitude":-156.47595454545456,"count":22,"log(count)":3.091042453358316},{"latitude":43.82266,"longitude":-111.7909,"count":10,"log(count)":2.302585092994046},{"latitude":42.65858333333333,"longitude":-113.63716666666666,"count":6,"log(count)":1.791759469228055},{"latitude":44.039225,"longitude":-116.89225,"count":4,"log(count)":1.3862943611198906},{"latitude":42.86325,"longitude":-112.72425,"count":4,"log(count)":1.3862943611198906},{"latitude":43.60010748299318,"longitude":-116.26528571428567,"count":147,"log(count)":4.990432586778736},{"latitude":44.8124,"longitude":-116.40700000000001,"count":1,"log(count)":0},{"latitude":42.88208222222223,"longitude":-112.44504444444442,"count":45,"log(count)":3.8066624897703196},{"latitude":43.8314,"longitude":-115.834,"count":1,"log(count)":0},{"latitude":48.33006818181816,"longitude":-116.58231818181821,"count":22,"log(count)":3.091042453358316},{"latitude":48.70525,"longitude":-116.231,"count":2,"log(count)":0.6931471805599453},{"latitude":47.26800000000001,"longitude":-116.7464,"count":5,"log(count)":1.6094379124341003},{"latitude":42.67585,"longitude":-111.58,"count":4,"log(count)":1.3862943611198906},{"latitude":43.49886666666667,"longitude":-112.00201587301588,"count":63,"log(count)":4.143134726391533},{"latitude":42.86214285714285,"longitude":-114.73671428571427,"count":7,"log(count)":1.9459101490553132},{"latitude":43.90894,"longitude":-116.46,"count":5,"log(count)":1.6094379124341003},{"latitude":42.1015,"longitude":-111.88649999999998,"count":2,"log(count)":0.6931471805599453},{"latitude":46.719757894736844,"longitude":-116.90978947368421,"count":19,"log(count)":2.9444389791664403},{"latitude":42.97735,"longitude":-114.4525,"count":2,"log(count)":0.6931471805599453},{"latitude":47.71116774193549,"longitude":-116.83801612903225,"count":62,"log(count)":4.127134385045092},{"latitude":42.71496666666667,"longitude":-114.4755,"count":6,"log(count)":1.791759469228055},{"latitude":43.52565,"longitude":-114.30799999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":46.495324999999994,"longitude":-116.27350000000001,"count":4,"log(count)":1.3862943611198906},{"latitude":42.48465,"longitude":-113.63875,"count":4,"log(count)":1.3862943611198906},{"latitude":46.123,"longitude":-116.05024999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":43.715925,"longitude":-111.12575,"count":4,"log(count)":1.3862943611198906},{"latitude":42.55705185185185,"longitude":-114.50025925925924,"count":27,"log(count)":3.295836866004329},{"latitude":46.421178947368425,"longitude":-116.8758947368421,"count":19,"log(count)":2.9444389791664403},{"latitude":43.62078043478262,"longitude":-116.63394565217392,"count":92,"log(count)":4.5217885770490405},{"latitude":43.66955,"longitude":-111.9313,"count":10,"log(count)":2.302585092994046},{"latitude":45.16965,"longitude":-113.896,"count":2,"log(count)":0.6931471805599453},{"latitude":44.2607,"longitude":-112.301,"count":1,"log(count)":0},{"latitude":44.904399999999995,"longitude":-116.098,"count":2,"log(count)":0.6931471805599453},{"latitude":44.199,"longitude":-116.92200000000001,"count":1,"log(count)":0},{"latitude":44.5184,"longitude":-114.22399999999999,"count":1,"log(count)":0},{"latitude":42.1853,"longitude":-112.26599999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":43.24323333333333,"longitude":-116.42366666666665,"count":3,"log(count)":1.0986122886681098},{"latitude":43.1447875,"longitude":-115.703375,"count":8,"log(count)":2.0794415416798357},{"latitude":43.16682777777778,"longitude":-112.42455555555556,"count":18,"log(count)":2.8903717578961645},{"latitude":41.89567000000001,"longitude":-88.73967999999999,"count":20,"log(count)":2.995732273553991},{"latitude":41.82122608695654,"longitude":-88.0831239130435,"count":92,"log(count)":4.5217885770490405},{"latitude":41.24471666666667,"longitude":-88.94831666666668,"count":6,"log(count)":1.791759469228055},{"latitude":39.92417846153846,"longitude":-91.37816000000002,"count":65,"log(count)":4.174387269895637},{"latitude":37.069133333333326,"longitude":-89.24571111111112,"count":9,"log(count)":2.1972245773362196},{"latitude":38.8941,"longitude":-89.4113,"count":1,"log(count)":0},{"latitude":42.296087500000006,"longitude":-88.86329375,"count":16,"log(count)":2.772588722239781},{"latitude":41.35272499999999,"longitude":-89.267425,"count":4,"log(count)":1.3862943611198906},{"latitude":39.1346,"longitude":-90.62455,"count":2,"log(count)":0.6931471805599453},{"latitude":42.0386,"longitude":-89.9627,"count":1,"log(count)":0},{"latitude":40.13793246376813,"longitude":-88.23162057971021,"count":345,"log(count)":5.84354441703136},{"latitude":39.462174999999995,"longitude":-89.2776375,"count":8,"log(count)":2.0794415416798357},{"latitude":39.3914,"longitude":-87.6936,"count":1,"log(count)":0},{"latitude":38.55328333333333,"longitude":-89.30466666666666,"count":6,"log(count)":1.791759469228055},{"latitude":39.47918888888889,"longitude":-88.2950814814815,"count":27,"log(count)":3.295836866004329},{"latitude":39.2813,"longitude":-88.3107,"count":2,"log(count)":0.6931471805599453},{"latitude":39.6922,"longitude":-88.304,"count":1,"log(count)":0},{"latitude":39.6113,"longitude":-87.6956,"count":1,"log(count)":0},{"latitude":39.1031375,"longitude":-88.5109,"count":8,"log(count)":2.0794415416798357},{"latitude":39.04983333333333,"longitude":-89.02196666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":40.61666666666667,"longitude":-88.13195,"count":6,"log(count)":1.791759469228055},{"latitude":37.927483333333335,"longitude":-88.94978888888888,"count":18,"log(count)":2.8903717578961645},{"latitude":40.64565,"longitude":-89.9462,"count":2,"log(count)":0.6931471805599453},{"latitude":37.8902,"longitude":-88.3401,"count":1,"log(count)":0},{"latitude":39.4618,"longitude":-90.4728,"count":1,"log(count)":0},{"latitude":41.341075000000004,"longitude":-88.35042499999999,"count":8,"log(count)":2.0794415416798357},{"latitude":38.0941,"longitude":-88.53540000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":40.47696666666667,"longitude":-91.2185,"count":6,"log(count)":1.791759469228055},{"latitude":37.48515,"longitude":-88.26445,"count":2,"log(count)":0.6931471805599453},{"latitude":40.85123333333333,"longitude":-90.97171666666667,"count":6,"log(count)":1.791759469228055},{"latitude":41.36419,"longitude":-90.12475,"count":10,"log(count)":2.302585092994046},{"latitude":40.83367142857143,"longitude":-87.8229857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":37.735693684210524,"longitude":-89.23989473684209,"count":95,"log(count)":4.553876891600541},{"latitude":38.9784,"longitude":-88.1738,"count":1,"log(count)":0},{"latitude":38.31417948717948,"longitude":-88.90583076923077,"count":39,"log(count)":3.6635616461296463},{"latitude":39.06515,"longitude":-90.3341,"count":2,"log(count)":0.6931471805599453},{"latitude":42.36866,"longitude":-90.16772,"count":5,"log(count)":1.6094379124341003},{"latitude":37.5425,"longitude":-88.7628,"count":1,"log(count)":0},{"latitude":41.83902879377434,"longitude":-88.31370350194548,"count":257,"log(count)":5.54907608489522},{"latitude":41.1205155,"longitude":-87.84911149999999,"count":200,"log(count)":5.298317366548036},{"latitude":41.688047368421046,"longitude":-88.36482631578947,"count":19,"log(count)":2.9444389791664403},{"latitude":40.93445882352941,"longitude":-90.33231764705884,"count":17,"log(count)":2.833213344056216},{"latitude":41.84228,"longitude":-89.48324,"count":5,"log(count)":1.6094379124341003},{"latitude":40.989525,"longitude":-88.632525,"count":4,"log(count)":1.3862943611198906},{"latitude":40.14403333333333,"longitude":-89.36586666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":39.85139393939397,"longitude":-88.94818560606062,"count":132,"log(count)":4.882801922586371},{"latitude":39.257149999999996,"longitude":-89.95308333333332,"count":6,"log(count)":1.791759469228055},{"latitude":38.80628918918918,"longitude":-90.0846810810811,"count":185,"log(count)":5.220355825078324},{"latitude":38.55970930232558,"longitude":-89.06532558139537,"count":43,"log(count)":3.7612001156935624},{"latitude":40.9823,"longitude":-89.2354,"count":1,"log(count)":0},{"latitude":39.979733333333336,"longitude":-89.76436666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":39.747930000000004,"longitude":-90.25746000000001,"count":10,"log(count)":2.302585092994046},{"latitude":40.05518,"longitude":-88.52672,"count":5,"log(count)":1.6094379124341003},{"latitude":37.4911,"longitude":-88.5661,"count":1,"log(count)":0},{"latitude":41.49776406250001,"longitude":-90.51271406250001,"count":64,"log(count)":4.1588830833596715},{"latitude":37.738422222222226,"longitude":-88.52862222222224,"count":18,"log(count)":2.8903717578961645},{"latitude":39.6263,"longitude":-90.4545,"count":1,"log(count)":0},{"latitude":41.093999999999994,"longitude":-89.8648,"count":1,"log(count)":0},{"latitude":38.3844,"longitude":-87.9117,"count":1,"log(count)":0},{"latitude":38.3868,"longitude":-88.36935,"count":2,"log(count)":0.6931471805599453},{"latitude":38.17075,"longitude":-88.0832,"count":2,"log(count)":0.6931471805599453},{"latitude":40.14765,"longitude":-88.9581,"count":2,"log(count)":0.6931471805599453},{"latitude":41.01175,"longitude":-86.69720000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":40.14807272727273,"longitude":-85.01876363636364,"count":11,"log(count)":2.3978952727983707},{"latitude":39.682925,"longitude":-85.51505,"count":4,"log(count)":1.3862943611198906},{"latitude":37.99998333333333,"longitude":-87.35791666666667,"count":12,"log(count)":2.4849066497880004},{"latitude":39.835090322580655,"longitude":-84.90277311827955,"count":93,"log(count)":4.532599493153256},{"latitude":40.766749999999995,"longitude":-85.16636249999999,"count":8,"log(count)":2.0794415416798357},{"latitude":40.7775,"longitude":-86.81237777777775,"count":9,"log(count)":2.1972245773362196},{"latitude":40.74148333333333,"longitude":-86.33635833333335,"count":12,"log(count)":2.4849066497880004},{"latitude":38.36163968253969,"longitude":-85.72419365079367,"count":63,"log(count)":4.143134726391533},{"latitude":39.4606,"longitude":-87.12061999999999,"count":10,"log(count)":2.302585092994046},{"latitude":40.30497499999999,"longitude":-86.509225,"count":8,"log(count)":2.0794415416798357},{"latitude":38.67108,"longitude":-87.13985,"count":10,"log(count)":2.302585092994046},{"latitude":39.12595833333334,"longitude":-84.90753333333333,"count":12,"log(count)":2.4849066497880004},{"latitude":39.36458999999999,"longitude":-85.49142,"count":10,"log(count)":2.302585092994046},{"latitude":41.39162727272728,"longitude":-85.07150909090909,"count":11,"log(count)":2.3978952727983707},{"latitude":40.192728888888894,"longitude":-85.37898111111107,"count":90,"log(count)":4.499809670330265},{"latitude":41.66396779661017,"longitude":-85.95208135593225,"count":118,"log(count)":4.770684624465665},{"latitude":39.64925,"longitude":-85.139825,"count":4,"log(count)":1.3862943611198906},{"latitude":38.308962962962966,"longitude":-85.84536296296298,"count":27,"log(count)":3.295836866004329},{"latitude":39.415975,"longitude":-85.1140125,"count":8,"log(count)":2.0794415416798357},{"latitude":41.08688333333333,"longitude":-86.2297,"count":6,"log(count)":1.791759469228055},{"latitude":38.3106625,"longitude":-87.54376249999999,"count":8,"log(count)":2.0794415416798357},{"latitude":40.5390875,"longitude":-85.67583125,"count":16,"log(count)":2.772588722239781},{"latitude":39.996884848484854,"longitude":-86.04111515151517,"count":33,"log(count)":3.4965075614664802},{"latitude":39.815676470588244,"longitude":-85.85032941176473,"count":17,"log(count)":2.833213344056216},{"latitude":39.790836666666664,"longitude":-86.40034,"count":30,"log(count)":3.4011973816621555},{"latitude":39.912000000000006,"longitude":-85.41094736842105,"count":19,"log(count)":2.9444389791664403},{"latitude":40.481910638297876,"longitude":-86.12922127659577,"count":47,"log(count)":3.8501476017100584},{"latitude":40.83585,"longitude":-85.4791,"count":4,"log(count)":1.3862943611198906},{"latitude":40.450050000000005,"longitude":-84.92165,"count":2,"log(count)":0.6931471805599453},{"latitude":38.753640000000004,"longitude":-85.41409999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":38.9780625,"longitude":-85.63677500000001,"count":8,"log(count)":2.0794415416798357},{"latitude":39.537065789473694,"longitude":-86.09482894736843,"count":76,"log(count)":4.330733340286331},{"latitude":38.6952,"longitude":-87.4467,"count":3,"log(count)":1.0986122886681098},{"latitude":41.27868387096773,"longitude":-85.82473225806454,"count":31,"log(count)":3.4339872044851463},{"latitude":41.629555555555555,"longitude":-85.39911111111111,"count":9,"log(count)":2.1972245773362196},{"latitude":41.16323333333333,"longitude":-85.51716666666665,"count":3,"log(count)":1.0986122886681098},{"latitude":40.11438431372549,"longitude":-85.69073529411763,"count":51,"log(count)":3.9318256327243257},{"latitude":39.79680239616621,"longitude":-86.13662236421735,"count":1878,"log(count)":7.537962659768208},{"latitude":41.32467142857143,"longitude":-86.28612857142858,"count":7,"log(count)":1.9459101490553132},{"latitude":40.750963636363636,"longitude":-86.09847272727274,"count":11,"log(count)":2.3978952727983707},{"latitude":40.036770000000004,"longitude":-86.89268999999999,"count":10,"log(count)":2.302585092994046},{"latitude":39.5324375,"longitude":-86.390875,"count":8,"log(count)":2.0794415416798357},{"latitude":41.037,"longitude":-87.434,"count":2,"log(count)":0.6931471805599453},{"latitude":41.430600000000005,"longitude":-85.37694545454546,"count":11,"log(count)":2.3978952727983707},{"latitude":38.9634,"longitude":-84.9276,"count":2,"log(count)":0.6931471805599453},{"latitude":39.3297,"longitude":-86.856575,"count":4,"log(count)":1.3862943611198906},{"latitude":39.733200000000004,"longitude":-87.26003333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":38.4638,"longitude":-87.26089999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":41.53309027777778,"longitude":-87.12239166666672,"count":72,"log(count)":4.276666119016055},{"latitude":38.032199999999996,"longitude":-87.85385714285712,"count":7,"log(count)":1.9459101490553132},{"latitude":39.628077777777776,"longitude":-86.8666,"count":9,"log(count)":2.1972245773362196},{"latitude":39.105975,"longitude":-85.220325,"count":8,"log(count)":2.0794415416798357},{"latitude":38.6889875,"longitude":-85.72846249999999,"count":8,"log(count)":2.0794415416798357},{"latitude":39.53091538461538,"longitude":-85.77756153846151,"count":13,"log(count)":2.5649493574615367},{"latitude":38.1016,"longitude":-87.00143333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":41.28716666666667,"longitude":-86.67325000000001,"count":6,"log(count)":1.791759469228055},{"latitude":41.64469166666666,"longitude":-85.00304166666666,"count":12,"log(count)":2.4849066497880004},{"latitude":39.080299999999994,"longitude":-87.3804,"count":8,"log(count)":2.0794415416798357},{"latitude":38.6933,"longitude":-85.1874,"count":1,"log(count)":0},{"latitude":40.41062974683544,"longitude":-86.87740126582281,"count":158,"log(count)":5.062595033026967},{"latitude":40.3782,"longitude":-86.1041,"count":1,"log(count)":0},{"latitude":39.6644,"longitude":-85.0047,"count":1,"log(count)":0},{"latitude":37.9733570121951,"longitude":-87.54847774390248,"count":328,"log(count)":5.793013608384144},{"latitude":39.9437,"longitude":-87.4234,"count":2,"log(count)":0.6931471805599453},{"latitude":39.46606999999999,"longitude":-87.3945257142857,"count":70,"log(count)":4.248495242049359},{"latitude":40.89015,"longitude":-85.803025,"count":4,"log(count)":1.3862943611198906},{"latitude":40.4695,"longitude":-87.3546,"count":1,"log(count)":0},{"latitude":40.805425,"longitude":-84.94435,"count":4,"log(count)":1.3862943611198906},{"latitude":41.07111258503399,"longitude":-85.12888605442177,"count":588,"log(count)":6.376726947898627},{"latitude":40.5931,"longitude":-87.31170000000002,"count":3,"log(count)":1.0986122886681098},{"latitude":40.4495,"longitude":-85.3662,"count":1,"log(count)":0},{"latitude":39.99245000000001,"longitude":-86.35697500000002,"count":12,"log(count)":2.4849066497880004},{"latitude":40.600750000000005,"longitude":-86.61359999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":41.049800000000005,"longitude":-87.20645,"count":2,"log(count)":0.6931471805599453},{"latitude":41.57692005012532,"longitude":-87.38720463659142,"count":798,"log(count)":6.682108597449809},{"latitude":41.67961355932202,"longitude":-86.8097728813559,"count":59,"log(count)":4.07753744390572},{"latitude":38.61162999999999,"longitude":-86.13577000000001,"count":10,"log(count)":2.302585092994046},{"latitude":38.340825,"longitude":-86.453225,"count":4,"log(count)":1.3862943611198906},{"latitude":38.349488888888885,"longitude":-86.92595,"count":18,"log(count)":2.8903717578961645},{"latitude":39.05181428571428,"longitude":-87.03335714285713,"count":7,"log(count)":1.9459101490553132},{"latitude":38.203950000000006,"longitude":-86.13877500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":38.916977777777774,"longitude":-85.92340740740738,"count":27,"log(count)":3.295836866004329},{"latitude":38.6847,"longitude":-86.776025,"count":4,"log(count)":1.3862943611198906},{"latitude":39.15171333333334,"longitude":-86.52954222222222,"count":45,"log(count)":3.8066624897703196},{"latitude":38.54092857142857,"longitude":-86.43432857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":38.035360000000004,"longitude":-86.67839999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":39.20191627906977,"longitude":-85.91378139534885,"count":43,"log(count)":3.7612001156935624},{"latitude":39.238814285714284,"longitude":-86.22102857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":38.84417333333333,"longitude":-86.47145333333334,"count":15,"log(count)":2.70805020110221},{"latitude":41.672506868131855,"longitude":-86.25647472527474,"count":364,"log(count)":5.8971538676367405},{"latitude":40.937,"longitude":-94.8936,"count":1,"log(count)":0},{"latitude":43.2767,"longitude":-91.45643333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":40.73725,"longitude":-92.88544999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":42.0877,"longitude":-92.06365,"count":2,"log(count)":0.6931471805599453},{"latitude":42.50007054108215,"longitude":-92.3420957915832,"count":499,"log(count)":6.212606095751519},{"latitude":42.084542857142864,"longitude":-93.8896,"count":7,"log(count)":1.9459101490553132},{"latitude":42.7387,"longitude":-92.39178,"count":5,"log(count)":1.6094379124341003},{"latitude":42.49719999999999,"longitude":-91.87728333333332,"count":6,"log(count)":1.791759469228055},{"latitude":42.649770000000004,"longitude":-95.22032999999999,"count":10,"log(count)":2.302585092994046},{"latitude":42.7492,"longitude":-92.8047,"count":1,"log(count)":0},{"latitude":42.5501,"longitude":-94.6829,"count":1,"log(count)":0},{"latitude":42.0688,"longitude":-94.8676,"count":1,"log(count)":0},{"latitude":41.4036,"longitude":-95.0139,"count":1,"log(count)":0},{"latitude":41.74875,"longitude":-91.038375,"count":4,"log(count)":1.3862943611198906},{"latitude":43.137030434782616,"longitude":-93.22705652173913,"count":23,"log(count)":3.1354942159291497},{"latitude":42.7879,"longitude":-95.63105,"count":2,"log(count)":0.6931471805599453},{"latitude":42.963625,"longitude":-92.370475,"count":4,"log(count)":1.3862943611198906},{"latitude":41.0178,"longitude":-93.7841,"count":1,"log(count)":0},{"latitude":42.8574,"longitude":-91.2834,"count":2,"log(count)":0.6931471805599453},{"latitude":41.84881500000001,"longitude":-90.23749000000001,"count":20,"log(count)":2.995732273553991},{"latitude":42.08773333333333,"longitude":-95.36113333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":41.604350000000004,"longitude":-93.84904999999999,"count":6,"log(count)":1.791759469228055},{"latitude":40.6165,"longitude":-93.92299999999999,"count":1,"log(count)":0},{"latitude":42.517775,"longitude":-91.39869999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":40.82225000000001,"longitude":-91.12650606060608,"count":66,"log(count)":4.189654742026425},{"latitude":43.38508,"longitude":-95.1234,"count":5,"log(count)":1.6094379124341003},{"latitude":42.50144166666667,"longitude":-90.6902916666667,"count":60,"log(count)":4.0943445622221},{"latitude":43.384899999999995,"longitude":-94.77923333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":42.83327058823528,"longitude":-91.8294411764706,"count":17,"log(count)":2.833213344056216},{"latitude":43.067788888888884,"longitude":-92.67363333333333,"count":9,"log(count)":2.1972245773362196},{"latitude":42.754999999999995,"longitude":-93.2047,"count":3,"log(count)":1.0986122886681098},{"latitude":40.773250000000004,"longitude":-95.7787,"count":2,"log(count)":0.6931471805599453},{"latitude":42.0185,"longitude":-94.292,"count":2,"log(count)":0.6931471805599453},{"latitude":42.345699999999994,"longitude":-92.8616,"count":2,"log(count)":0.6931471805599453},{"latitude":41.70943333333333,"longitude":-94.35583333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":43.008700000000005,"longitude":-93.70075,"count":2,"log(count)":0.6931471805599453},{"latitude":42.500479999999996,"longitude":-93.27123999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":41.691199999999995,"longitude":-95.75,"count":2,"log(count)":0.6931471805599453},{"latitude":40.99636666666667,"longitude":-91.57740000000001,"count":6,"log(count)":1.791759469228055},{"latitude":43.41205,"longitude":-92.22425000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":42.716366666666666,"longitude":-94.21563333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":42.4024,"longitude":-95.5709,"count":2,"log(count)":0.6931471805599453},{"latitude":41.57946666666667,"longitude":-92.15323333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":42.0717,"longitude":-90.70670000000001,"count":4,"log(count)":1.3862943611198906},{"latitude":41.67788181818182,"longitude":-93.08846363636363,"count":11,"log(count)":2.3978952727983707},{"latitude":41.04963333333333,"longitude":-92.00483333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":41.663498863636356,"longitude":-91.54917954545458,"count":88,"log(count)":4.477336814478207},{"latitude":42.07955,"longitude":-91.19115,"count":2,"log(count)":0.6931471805599453},{"latitude":41.3397,"longitude":-92.2237,"count":1,"log(count)":0},{"latitude":43.0709,"longitude":-94.42,"count":1,"log(count)":0},{"latitude":40.55370714285714,"longitude":-91.35887142857143,"count":14,"log(count)":2.6390573296152584},{"latitude":41.982726377952794,"longitude":-91.66416141732276,"count":254,"log(count)":5.537334267018537},{"latitude":41.1803,"longitude":-91.1934,"count":1,"log(count)":0},{"latitude":41.0147,"longitude":-93.3227,"count":1,"log(count)":0},{"latitude":43.42695,"longitude":-95.99701666666668,"count":6,"log(count)":1.791759469228055},{"latitude":41.3614,"longitude":-93.97081428571428,"count":7,"log(count)":1.9459101490553132},{"latitude":41.28578,"longitude":-92.62197999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":41.317071428571424,"longitude":-93.09828571428571,"count":7,"log(count)":1.9459101490553132},{"latitude":42.00575,"longitude":-92.95853333333332,"count":12,"log(count)":2.4849066497880004},{"latitude":41.053875,"longitude":-95.742625,"count":4,"log(count)":1.3862943611198906},{"latitude":43.312200000000004,"longitude":-92.74154999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":42.031575000000004,"longitude":-95.987275,"count":4,"log(count)":1.3862943611198906},{"latitude":41.01897777777778,"longitude":-95.19352222222221,"count":9,"log(count)":2.1972245773362196},{"latitude":41.43361551724136,"longitude":-90.98007068965514,"count":58,"log(count)":4.060443010546419},{"latitude":43.418350000000004,"longitude":-95.6549,"count":2,"log(count)":0.6931471805599453},{"latitude":40.75325,"longitude":-95.19875,"count":2,"log(count)":0.6931471805599453},{"latitude":43.1207,"longitude":-94.7908,"count":2,"log(count)":0.6931471805599453},{"latitude":42.755325000000006,"longitude":-96.221575,"count":8,"log(count)":2.0794415416798357},{"latitude":41.59701791590496,"longitude":-93.62505868372936,"count":547,"log(count)":6.304448802421981},{"latitude":41.2623259259259,"longitude":-95.85343703703705,"count":81,"log(count)":4.394449154672439},{"latitude":41.5845,"longitude":-92.5334,"count":1,"log(count)":0},{"latitude":40.61,"longitude":-94.2805,"count":1,"log(count)":0},{"latitude":42.33412857142857,"longitude":-95.07245714285715,"count":7,"log(count)":1.9459101490553132},{"latitude":41.541205172413775,"longitude":-90.58000827586206,"count":290,"log(count)":5.66988092298052},{"latitude":43.14762,"longitude":-96.16718,"count":5,"log(count)":1.6094379124341003},{"latitude":42.01089523809524,"longitude":-93.62887142857143,"count":21,"log(count)":3.044522437723423},{"latitude":42.15705,"longitude":-92.50255,"count":4,"log(count)":1.3862943611198906},{"latitude":40.7663,"longitude":-94.83236666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":41.0636,"longitude":-94.3697,"count":1,"log(count)":0},{"latitude":41.008925,"longitude":-92.39797499999999,"count":12,"log(count)":2.4849066497880004},{"latitude":41.499966666666666,"longitude":-93.71533333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":41.32868571428571,"longitude":-91.73552857142855,"count":7,"log(count)":1.9459101490553132},{"latitude":42.49241951219512,"longitude":-94.17487073170733,"count":41,"log(count)":3.713572066704308},{"latitude":43.3245,"longitude":-93.67484999999999,"count":6,"log(count)":1.791759469228055},{"latitude":43.168899999999994,"longitude":-91.85489999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":42.48736705882351,"longitude":-96.38535294117648,"count":85,"log(count)":4.442651256490317},{"latitude":42.61855,"longitude":-93.86325,"count":2,"log(count)":0.6931471805599453},{"latitude":43.069250000000004,"longitude":-95.172975,"count":8,"log(count)":2.0794415416798357},{"latitude":39.3698,"longitude":-99.9707,"count":1,"log(count)":0},{"latitude":37.3296,"longitude":-97.5556,"count":1,"log(count)":0},{"latitude":39.4964,"longitude":-95.29755,"count":2,"log(count)":0.6931471805599453},{"latitude":37.1547,"longitude":-98.53205,"count":2,"log(count)":0.6931471805599453},{"latitude":38.374345,"longitude":-98.76857,"count":20,"log(count)":2.995732273553991},{"latitude":37.82915,"longitude":-94.69239999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":39.8581,"longitude":-95.5401,"count":3,"log(count)":1.0986122886681098},{"latitude":37.799475,"longitude":-96.88414166666666,"count":12,"log(count)":2.4849066497880004},{"latitude":37.10935,"longitude":-94.731075,"count":8,"log(count)":2.0794415416798357},{"latitude":39.7727,"longitude":-101.806,"count":2,"log(count)":0.6931471805599453},{"latitude":39.3479,"longitude":-97.179,"count":1,"log(count)":0},{"latitude":37.2593,"longitude":-99.3175,"count":1,"log(count)":0},{"latitude":37.17164375000001,"longitude":-96.98919374999998,"count":16,"log(count)":2.772588722239781},{"latitude":37.428,"longitude":-94.72757500000002,"count":24,"log(count)":3.1780538303479458},{"latitude":39.822725,"longitude":-100.4275,"count":4,"log(count)":1.3862943611198906},{"latitude":38.89494444444444,"longitude":-97.1339111111111,"count":9,"log(count)":2.1972245773362196},{"latitude":38.94982096774193,"longitude":-95.25652741935482,"count":62,"log(count)":4.127134385045092},{"latitude":38.90593333333334,"longitude":-99.39476666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":38.70956666666667,"longitude":-98.34070000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":37.75508333333334,"longitude":-100.02176666666666,"count":6,"log(count)":1.791759469228055},{"latitude":38.60232,"longitude":-95.24658000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":39.044951851851856,"longitude":-96.83872592592591,"count":27,"log(count)":3.295836866004329},{"latitude":39.1191,"longitude":-100.74700000000001,"count":1,"log(count)":0},{"latitude":37.8229,"longitude":-96.2938,"count":1,"log(count)":0},{"latitude":37.1884,"longitude":-98.039,"count":1,"log(count)":0},{"latitude":38.06448181818182,"longitude":-97.37471818181817,"count":11,"log(count)":2.3978952727983707},{"latitude":39.3884,"longitude":-95.77111428571429,"count":7,"log(count)":1.9459101490553132},{"latitude":39.1944,"longitude":-95.38788333333333,"count":6,"log(count)":1.791759469228055},{"latitude":38.943331932773106,"longitude":-94.73638151260505,"count":119,"log(count)":4.77912349311153},{"latitude":37.4636,"longitude":-98.416,"count":1,"log(count)":0},{"latitude":37.297976000000006,"longitude":-95.264232,"count":25,"log(count)":3.2188758248682006},{"latitude":39.291416981132066,"longitude":-94.93499999999999,"count":53,"log(count)":3.970291913552122},{"latitude":38.43465714285714,"longitude":-96.1531857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":38.390837499999996,"longitude":-97.58678749999999,"count":8,"log(count)":2.0794415416798357},{"latitude":38.36473333333333,"longitude":-97.08789999999999,"count":3,"log(count)":1.0986122886681098},{"latitude":39.7892,"longitude":-96.54845,"count":2,"log(count)":0.6931471805599453},{"latitude":38.71205,"longitude":-94.7354,"count":2,"log(count)":0.6931471805599453},{"latitude":37.133379999999995,"longitude":-95.65314,"count":15,"log(count)":2.70805020110221},{"latitude":38.6617,"longitude":-96.4783,"count":1,"log(count)":0},{"latitude":39.8991,"longitude":-95.8094,"count":1,"log(count)":0},{"latitude":37.6055,"longitude":-95.40885,"count":4,"log(count)":1.3862943611198906},{"latitude":38.4457,"longitude":-99.9076,"count":1,"log(count)":0},{"latitude":39.8329,"longitude":-99.8947,"count":1,"log(count)":0},{"latitude":38.6268,"longitude":-95.5643,"count":1,"log(count)":0},{"latitude":38.9897,"longitude":-97.8186,"count":1,"log(count)":0},{"latitude":38.076,"longitude":-99.2426,"count":1,"log(count)":0},{"latitude":39.23674285714286,"longitude":-96.33661428571429,"count":7,"log(count)":1.9459101490553132},{"latitude":37.62408571428572,"longitude":-98.73174285714286,"count":7,"log(count)":1.9459101490553132},{"latitude":38.02201250000001,"longitude":-97.91927083333336,"count":24,"log(count)":3.1780538303479458},{"latitude":39.18984255319149,"longitude":-96.5949893617021,"count":47,"log(count)":3.8501476017100584},{"latitude":39.2347,"longitude":-99.2982,"count":1,"log(count)":0},{"latitude":38.82208461538462,"longitude":-97.61007362637365,"count":91,"log(count)":4.51085950651685},{"latitude":37.6837705144291,"longitude":-97.32599046424095,"count":797,"log(count)":6.680854678790215},{"latitude":37.04485,"longitude":-100.92474999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":39.03681368715076,"longitude":-95.68319106145248,"count":358,"log(count)":5.8805329864007},{"latitude":39.5414,"longitude":-100.569,"count":1,"log(count)":0},{"latitude":39.3299,"longitude":-101.62049999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":37.9945,"longitude":-98.68435,"count":2,"log(count)":0.6931471805599453},{"latitude":37.1869,"longitude":-101.25200000000001,"count":1,"log(count)":0},{"latitude":39.3979,"longitude":-101.041,"count":1,"log(count)":0},{"latitude":39.0142,"longitude":-99.8886,"count":1,"log(count)":0},{"latitude":39.0211,"longitude":-96.2893,"count":1,"log(count)":0},{"latitude":37.5405,"longitude":-95.8337,"count":1,"log(count)":0},{"latitude":39.112573660714254,"longitude":-94.66808928571427,"count":224,"log(count)":5.4116460518550396},{"latitude":37.97727777777777,"longitude":-100.87488888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":37.957,"longitude":-101.781,"count":1,"log(count)":0},{"latitude":37.122566666666664,"longitude":-85.28415,"count":6,"log(count)":1.791759469228055},{"latitude":36.75,"longitude":-86.2202090909091,"count":11,"log(count)":2.3978952727983707},{"latitude":38.01486666666666,"longitude":-84.95314000000002,"count":15,"log(count)":2.70805020110221},{"latitude":37.02104,"longitude":-89.00296,"count":5,"log(count)":1.6094379124341003},{"latitude":37.01647435897438,"longitude":-85.94181282051284,"count":39,"log(count)":3.6635616461296463},{"latitude":38.185919999999996,"longitude":-83.77304,"count":5,"log(count)":1.6094379124341003},{"latitude":36.73263,"longitude":-83.66997499999998,"count":20,"log(count)":2.995732273553991},{"latitude":39.008141463414646,"longitude":-84.65667560975606,"count":41,"log(count)":3.713572066704308},{"latitude":38.21219,"longitude":-84.22038,"count":10,"log(count)":2.302585092994046},{"latitude":38.45260555555556,"longitude":-82.65268333333331,"count":18,"log(count)":2.8903717578961645},{"latitude":37.640043750000004,"longitude":-84.78243124999999,"count":16,"log(count)":2.772588722239781},{"latitude":38.5997,"longitude":-84.12,"count":1,"log(count)":0},{"latitude":37.55404444444444,"longitude":-83.38592222222223,"count":9,"log(count)":2.1972245773362196},{"latitude":37.669466666666665,"longitude":-86.31073333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":38.016528571428566,"longitude":-85.68332499999998,"count":28,"log(count)":3.332204510175204},{"latitude":37.191100000000006,"longitude":-86.824,"count":3,"log(count)":1.0986122886681098},{"latitude":37.13654285714286,"longitude":-87.90252857142858,"count":7,"log(count)":1.9459101490553132},{"latitude":36.61460952380952,"longitude":-88.32507142857142,"count":21,"log(count)":3.044522437723423},{"latitude":39.04239583333334,"longitude":-84.44472499999999,"count":24,"log(count)":3.1780538303479458},{"latitude":36.85433333333334,"longitude":-88.95776666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":38.6734,"longitude":-85.1047,"count":1,"log(count)":0},{"latitude":38.291044444444445,"longitude":-83.08114444444445,"count":9,"log(count)":2.1972245773362196},{"latitude":37.33468333333334,"longitude":-84.90968333333333,"count":6,"log(count)":1.791759469228055},{"latitude":36.85089781021895,"longitude":-87.4763781021898,"count":137,"log(count)":4.919980925828125},{"latitude":37.99569333333333,"longitude":-84.20045333333334,"count":15,"log(count)":2.70805020110221},{"latitude":37.14754210526316,"longitude":-83.73383684210526,"count":19,"log(count)":2.9444389791664403},{"latitude":36.723600000000005,"longitude":-85.1502,"count":2,"log(count)":0.6931471805599453},{"latitude":37.3293,"longitude":-88.0888,"count":1,"log(count)":0},{"latitude":36.7733,"longitude":-85.37799999999999,"count":1,"log(count)":0},{"latitude":37.75808591549296,"longitude":-87.11897605633804,"count":71,"log(count)":4.2626798770413155},{"latitude":37.170874999999995,"longitude":-86.250525,"count":4,"log(count)":1.3862943611198906},{"latitude":38.121,"longitude":-83.12323333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":37.70574444444445,"longitude":-83.98076666666665,"count":9,"log(count)":2.1972245773362196},{"latitude":38.03893009592325,"longitude":-84.4893812949639,"count":834,"log(count)":6.726233402358747},{"latitude":38.3129,"longitude":-83.7701,"count":1,"log(count)":0},{"latitude":37.5489,"longitude":-82.735805,"count":20,"log(count)":2.995732273553991},{"latitude":38.19782500000001,"longitude":-84.86997115384614,"count":52,"log(count)":3.9512437185814275},{"latitude":36.545820000000006,"longitude":-89.0654,"count":5,"log(count)":1.6094379124341003},{"latitude":38.80345,"longitude":-84.75295,"count":2,"log(count)":0.6931471805599453},{"latitude":37.625933333333336,"longitude":-84.52886666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":38.709700000000005,"longitude":-84.60485714285713,"count":7,"log(count)":1.9459101490553132},{"latitude":36.74302105263157,"longitude":-88.66266578947368,"count":38,"log(count)":3.6375861597263857},{"latitude":37.4937,"longitude":-86.321225,"count":8,"log(count)":2.0794415416798357},{"latitude":37.3182,"longitude":-85.4468,"count":1,"log(count)":0},{"latitude":38.52984444444444,"longitude":-82.80199999999999,"count":9,"log(count)":2.1972245773362196},{"latitude":37.86233333333333,"longitude":-86.8145,"count":3,"log(count)":1.0986122886681098},{"latitude":37.73058684210526,"longitude":-85.91587368421055,"count":38,"log(count)":3.6375861597263857},{"latitude":36.86685384615385,"longitude":-83.25907692307693,"count":26,"log(count)":3.258096538021482},{"latitude":38.4043,"longitude":-84.34407999999999,"count":10,"log(count)":2.302585092994046},{"latitude":37.25431,"longitude":-85.87169000000002,"count":10,"log(count)":2.302585092994046},{"latitude":37.83273285714286,"longitude":-87.56702285714286,"count":70,"log(count)":4.248495242049359},{"latitude":38.445142857142855,"longitude":-85.20732857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":37.30250249999999,"longitude":-87.51136,"count":40,"log(count)":3.6888794541139363},{"latitude":37.45612,"longitude":-84.05733,"count":10,"log(count)":2.302585092994046},{"latitude":38.21744011931407,"longitude":-85.75977882177474,"count":1341,"log(count)":7.201170883281678},{"latitude":37.88036400000001,"longitude":-84.58518400000001,"count":25,"log(count)":3.2188758248682006},{"latitude":37.801114285714284,"longitude":-82.81874285714287,"count":7,"log(count)":1.9459101490553132},{"latitude":39.03935483870966,"longitude":-84.52919838709676,"count":62,"log(count)":4.127134385045092},{"latitude":37.337399999999995,"longitude":-82.8913888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":36.90042352941176,"longitude":-83.85114705882351,"count":17,"log(count)":2.833213344056216},{"latitude":37.4397,"longitude":-85.6679,"count":1,"log(count)":0},{"latitude":37.09475925925925,"longitude":-84.1000351851852,"count":54,"log(count)":3.9889840465642745},{"latitude":38.04942857142857,"longitude":-82.68267142857144,"count":7,"log(count)":1.9459101490553132},{"latitude":37.607659999999996,"longitude":-83.68892,"count":5,"log(count)":1.6094379124341003},{"latitude":37.1332,"longitude":-83.35186000000002,"count":5,"log(count)":1.6094379124341003},{"latitude":37.1361,"longitude":-82.82951,"count":10,"log(count)":2.302585092994046},{"latitude":38.600300000000004,"longitude":-83.308,"count":4,"log(count)":1.3862943611198906},{"latitude":37.48855833333334,"longitude":-84.67708333333333,"count":12,"log(count)":2.4849066497880004},{"latitude":37.211,"longitude":-88.31825,"count":2,"log(count)":0.6931471805599453},{"latitude":36.84930666666666,"longitude":-86.89187333333332,"count":15,"log(count)":2.70805020110221},{"latitude":37.0575375,"longitude":-88.0413375,"count":8,"log(count)":2.0794415416798357},{"latitude":37.712517307692316,"longitude":-84.29260769230766,"count":52,"log(count)":3.9512437185814275},{"latitude":37.5473,"longitude":-82.9257,"count":1,"log(count)":0},{"latitude":37.57152,"longitude":-85.30978,"count":5,"log(count)":1.6094379124341003},{"latitude":36.928358333333335,"longitude":-88.35413333333334,"count":12,"log(count)":2.4849066497880004},{"latitude":37.83955,"longitude":-82.5184,"count":4,"log(count)":1.3862943611198906},{"latitude":38.64365,"longitude":-83.76150000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":37.06023608247424,"longitude":-88.63900103092782,"count":97,"log(count)":4.574710978503383},{"latitude":36.75450000000001,"longitude":-84.52295000000001,"count":4,"log(count)":1.3862943611198906},{"latitude":37.46006666666667,"longitude":-87.20890000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":37.99713333333333,"longitude":-86.17576666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":37.76658888888888,"longitude":-84.84085555555555,"count":9,"log(count)":2.1972245773362196},{"latitude":36.9592,"longitude":-85.661375,"count":4,"log(count)":1.3862943611198906},{"latitude":36.7254,"longitude":-85.70859999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":38.06075,"longitude":-83.930575,"count":4,"log(count)":1.3862943611198906},{"latitude":37.975025,"longitude":-83.278775,"count":4,"log(count)":1.3862943611198906},{"latitude":37.20712352941177,"longitude":-87.15122352941177,"count":17,"log(count)":2.833213344056216},{"latitude":37.81335862068965,"longitude":-85.4512275862069,"count":29,"log(count)":3.367295829986474},{"latitude":38.2725,"longitude":-83.9318,"count":1,"log(count)":0},{"latitude":37.45561176470588,"longitude":-86.82534117647062,"count":17,"log(count)":2.833213344056216},{"latitude":38.392466666666664,"longitude":-85.40323333333333,"count":12,"log(count)":2.4849066497880004},{"latitude":38.4295,"longitude":-84.7136,"count":1,"log(count)":0},{"latitude":37.4654,"longitude":-83.65101999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":38.717600000000004,"longitude":-84.4354,"count":2,"log(count)":0.6931471805599453},{"latitude":37.291181249999994,"longitude":-83.206275,"count":16,"log(count)":2.772588722239781},{"latitude":37.478527586206894,"longitude":-82.39876206896552,"count":29,"log(count)":3.367295829986474},{"latitude":37.82468,"longitude":-83.8198,"count":5,"log(count)":1.6094379124341003},{"latitude":37.09021463414634,"longitude":-84.60666097560974,"count":41,"log(count)":3.713572066704308},{"latitude":38.49385,"longitude":-84.06135,"count":2,"log(count)":0.6931471805599453},{"latitude":37.38084444444444,"longitude":-84.34279999999998,"count":9,"log(count)":2.1972245773362196},{"latitude":38.20052999999999,"longitude":-83.43841,"count":10,"log(count)":2.302585092994046},{"latitude":37.04643333333333,"longitude":-85.06533333333334,"count":6,"log(count)":1.791759469228055},{"latitude":38.22692068965517,"longitude":-84.56438275862068,"count":29,"log(count)":3.367295829986474},{"latitude":38.21138181818182,"longitude":-85.24724545454545,"count":11,"log(count)":2.3978952727983707},{"latitude":36.7294,"longitude":-86.58544000000002,"count":10,"log(count)":2.302585092994046},{"latitude":38.06445,"longitude":-85.30931666666667,"count":6,"log(count)":1.791759469228055},{"latitude":37.35823529411765,"longitude":-85.34674117647059,"count":17,"log(count)":2.833213344056216},{"latitude":36.84175,"longitude":-87.18406666666668,"count":6,"log(count)":1.791759469228055},{"latitude":36.83590833333334,"longitude":-87.845175,"count":12,"log(count)":2.4849066497880004},{"latitude":38.6338,"longitude":-85.32385,"count":2,"log(count)":0.6931471805599453},{"latitude":37.705200000000005,"longitude":-87.89604444444443,"count":9,"log(count)":2.1972245773362196},{"latitude":36.98016373626375,"longitude":-86.43495604395603,"count":91,"log(count)":4.51085950651685},{"latitude":37.72385,"longitude":-85.18576666666667,"count":6,"log(count)":1.791759469228055},{"latitude":36.82163333333333,"longitude":-84.83264444444444,"count":9,"log(count)":2.1972245773362196},{"latitude":37.495174999999996,"longitude":-87.752275,"count":4,"log(count)":1.3862943611198906},{"latitude":36.84321785714286,"longitude":-84.13506785714289,"count":28,"log(count)":3.332204510175204},{"latitude":37.73849230769231,"longitude":-83.49093076923077,"count":13,"log(count)":2.5649493574615367},{"latitude":38.06825555555556,"longitude":-84.73043333333334,"count":9,"log(count)":2.1972245773362196},{"latitude":29.93278284789647,"longitude":-90.14922766990284,"count":618,"log(count)":6.42648845745769},{"latitude":30.220824137931036,"longitude":-92.7423724137931,"count":29,"log(count)":3.367295829986474},{"latitude":31.7789,"longitude":-92.233,"count":2,"log(count)":0.6931471805599453},{"latitude":30.227026937269386,"longitude":-92.02785793357926,"count":271,"log(count)":5.602118820879701},{"latitude":29.7231225,"longitude":-90.69317249999999,"count":80,"log(count)":4.382026634673881},{"latitude":32.53803181818183,"longitude":-92.65806818181818,"count":22,"log(count)":3.091042453358316},{"latitude":30.481526415094347,"longitude":-90.83789811320754,"count":53,"log(count)":3.970291913552122},{"latitude":32.40929166666666,"longitude":-91.18604166666665,"count":12,"log(count)":2.4849066497880004},{"latitude":32.78121333333334,"longitude":-91.90745333333334,"count":15,"log(count)":2.70805020110221},{"latitude":31.758296610169474,"longitude":-93.09438644067795,"count":59,"log(count)":4.07753744390572},{"latitude":29.975327327127687,"longitude":-90.0497193816487,"count":3008,"log(count)":8.00903068506973},{"latitude":32.50186065573771,"longitude":-92.10578032786886,"count":183,"log(count)":5.209486152841421},{"latitude":29.566785714285714,"longitude":-89.77114285714285,"count":14,"log(count)":2.6390573296152584},{"latitude":30.251778125000005,"longitude":-92.3355828125,"count":64,"log(count)":4.1588830833596715},{"latitude":30.61293333333333,"longitude":-92.79566666666666,"count":6,"log(count)":1.791759469228055},{"latitude":30.215126785714283,"longitude":-90.95115178571426,"count":56,"log(count)":4.02535169073515},{"latitude":29.930045945945942,"longitude":-91.04292972972975,"count":37,"log(count)":3.6109179126442243},{"latitude":31.0962,"longitude":-92.0850375,"count":8,"log(count)":2.0794415416798357},{"latitude":30.689890000000002,"longitude":-93.26365000000001,"count":10,"log(count)":2.302585092994046},{"latitude":32.35753333333333,"longitude":-93.16106666666667,"count":6,"log(count)":1.791759469228055},{"latitude":32.5527245283019,"longitude":-93.70057075471694,"count":106,"log(count)":4.663439094112067},{"latitude":32.49167934782613,"longitude":-93.79580676328527,"count":828,"log(count)":6.71901315438526},{"latitude":30.22238380281691,"longitude":-93.23827746478875,"count":142,"log(count)":4.955827057601261},{"latitude":32.080033333333326,"longitude":-92.0862,"count":3,"log(count)":1.0986122886681098},{"latitude":29.8434,"longitude":-93.178,"count":1,"log(count)":0},{"latitude":31.670033333333336,"longitude":-91.84943333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":32.7778,"longitude":-93.0257,"count":2,"log(count)":0.6931471805599453},{"latitude":31.588960000000004,"longitude":-91.51182,"count":10,"log(count)":2.302585092994046},{"latitude":32.086253846153845,"longitude":-93.73875384615386,"count":13,"log(count)":2.5649493574615367},{"latitude":30.469013236929833,"longitude":-91.13713837597342,"count":899,"log(count)":6.80128303447162},{"latitude":32.7639,"longitude":-91.1892,"count":1,"log(count)":0},{"latitude":30.81865,"longitude":-91.05754999999999,"count":8,"log(count)":2.0794415416798357},{"latitude":30.741940000000003,"longitude":-92.32236000000003,"count":15,"log(count)":2.70805020110221},{"latitude":32.08148,"longitude":-91.6801,"count":5,"log(count)":1.6094379124341003},{"latitude":31.5148,"longitude":-92.44669999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":29.993842391304348,"longitude":-91.80713260869562,"count":92,"log(count)":4.5217885770490405},{"latitude":30.283129166666672,"longitude":-91.25301666666667,"count":24,"log(count)":3.1780538303479458},{"latitude":32.27,"longitude":-92.59006666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":30.69091176470588,"longitude":-91.48957647058825,"count":17,"log(count)":2.833213344056216},{"latitude":31.28811578947367,"longitude":-92.45759824561404,"count":114,"log(count)":4.736198448394496},{"latitude":32.02290000000001,"longitude":-93.35325,"count":4,"log(count)":1.3862943611198906},{"latitude":32.402614285714286,"longitude":-91.77765714285714,"count":7,"log(count)":1.9459101490553132},{"latitude":31.563875,"longitude":-93.58376666666665,"count":12,"log(count)":2.4849066497880004},{"latitude":30.572182407407404,"longitude":-90.47192592592593,"count":108,"log(count)":4.68213122712422},{"latitude":29.604923333333318,"longitude":-90.73448416666663,"count":120,"log(count)":4.787491742782046},{"latitude":32.77701875,"longitude":-92.39675624999998,"count":16,"log(count)":2.772588722239781},{"latitude":29.97313529411766,"longitude":-92.15749411764705,"count":34,"log(count)":3.5263605246161616},{"latitude":31.11472857142857,"longitude":-93.3002142857143,"count":14,"log(count)":2.6390573296152584},{"latitude":30.828049999999998,"longitude":-89.97968421052632,"count":38,"log(count)":3.6375861597263857},{"latitude":32.67811176470588,"longitude":-93.33056470588237,"count":17,"log(count)":2.833213344056216},{"latitude":30.461035294117643,"longitude":-91.26231176470588,"count":17,"log(count)":2.833213344056216},{"latitude":32.656400000000005,"longitude":-91.4865,"count":2,"log(count)":0.6931471805599453},{"latitude":30.7881,"longitude":-91.3784,"count":1,"log(count)":0},{"latitude":31.9229,"longitude":-92.65299999999998,"count":3,"log(count)":1.0986122886681098},{"latitude":44.1043530612245,"longitude":-70.20416326530611,"count":49,"log(count)":3.8918202981106265},{"latitude":46.65431071428571,"longitude":-68.15388571428572,"count":28,"log(count)":3.332204510175204},{"latitude":43.73559250000001,"longitude":-70.30133250000004,"count":120,"log(count)":4.787491742782046},{"latitude":44.68706296296297,"longitude":-70.21364814814815,"count":27,"log(count)":3.295836866004329},{"latitude":44.513065,"longitude":-68.4795,"count":20,"log(count)":2.995732273553991},{"latitude":44.400911111111135,"longitude":-69.73650138888891,"count":144,"log(count)":4.969813299576001},{"latitude":44.10417307692308,"longitude":-69.16731923076922,"count":26,"log(count)":3.258096538021482},{"latitude":44.02567659574468,"longitude":-69.56708936170212,"count":47,"log(count)":3.8501476017100584},{"latitude":44.336264,"longitude":-70.620904,"count":25,"log(count)":3.2188758248682006},{"latitude":44.9687,"longitude":-68.75740000000002,"count":72,"log(count)":4.276666119016055},{"latitude":45.26769999999999,"longitude":-69.4042857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":43.94493529411765,"longitude":-69.8375588235294,"count":17,"log(count)":2.833213344056216},{"latitude":44.808130898876406,"longitude":-69.71847471910115,"count":178,"log(count)":5.181783550292085},{"latitude":44.5139076923077,"longitude":-69.13584615384616,"count":13,"log(count)":2.5649493574615367},{"latitude":44.94547142857143,"longitude":-67.48621428571428,"count":7,"log(count)":1.9459101490553132},{"latitude":43.433159459459475,"longitude":-70.67231351351356,"count":111,"log(count)":4.709530201312334},{"latitude":38.77976666666667,"longitude":-76.0733,"count":3,"log(count)":1.0986122886681098},{"latitude":39.226299999999995,"longitude":-76.11565,"count":2,"log(count)":0.6931471805599453},{"latitude":38.870819999999995,"longitude":-75.84724,"count":5,"log(count)":1.6094379124341003},{"latitude":39.007711111111114,"longitude":-76.18466666666666,"count":9,"log(count)":2.1972245773362196},{"latitude":39.62036923076924,"longitude":-75.93057692307693,"count":26,"log(count)":3.258096538021482},{"latitude":38.58502307692308,"longitude":-75.98088461538462,"count":13,"log(count)":2.5649493574615367},{"latitude":38.14492142857143,"longitude":-75.72671428571428,"count":14,"log(count)":2.6390573296152584},{"latitude":41.66224079999999,"longitude":-70.37508559999998,"count":125,"log(count)":4.8283137373023015},{"latitude":42.47123804347826,"longitude":-73.23762500000001,"count":184,"log(count)":5.214935757608986},{"latitude":41.710747239263775,"longitude":-71.0382034764826,"count":489,"log(count)":6.192362489474872},{"latitude":42.55832111801245,"longitude":-70.99928322981368,"count":483,"log(count)":6.180016653652572},{"latitude":42.58811034482758,"longitude":-72.57610000000001,"count":29,"log(count)":3.367295829986474},{"latitude":42.12299173228347,"longitude":-72.57399025590557,"count":1016,"log(count)":6.923628628138427},{"latitude":42.31232727272728,"longitude":-72.53745454545455,"count":33,"log(count)":3.4965075614664802},{"latitude":42.50725646437993,"longitude":-71.31027124010554,"count":379,"log(count)":5.937536205082426},{"latitude":42.19664062500001,"longitude":-71.07673687499997,"count":160,"log(count)":5.075173815233827},{"latitude":42.05715530726257,"longitude":-70.96684078212292,"count":537,"log(count)":6.285998094508865},{"latitude":42.319727262693284,"longitude":-71.07652621412802,"count":1812,"log(count)":7.502186486602924},{"latitude":42.30465779816516,"longitude":-71.80391449541287,"count":545,"log(count)":6.300785794663244},{"latitude":45.1567768115942,"longitude":-93.27496956521739,"count":69,"log(count)":4.23410650459726},{"latitude":46.84294666666666,"longitude":-95.86974666666667,"count":15,"log(count)":2.70805020110221},{"latitude":47.550476785714295,"longitude":-94.89746428571434,"count":56,"log(count)":4.02535169073515},{"latitude":45.60962857142857,"longitude":-94.11155714285714,"count":14,"log(count)":2.6390573296152584},{"latitude":44.15068666666666,"longitude":-93.99225333333334,"count":15,"log(count)":2.70805020110221},{"latitude":44.2789,"longitude":-94.70689999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":46.654999999999994,"longitude":-92.55801,"count":10,"log(count)":2.302585092994046},{"latitude":44.83278461538461,"longitude":-93.75648461538461,"count":13,"log(count)":2.5649493574615367},{"latitude":47.152411111111114,"longitude":-94.54252222222223,"count":9,"log(count)":2.1972245773362196},{"latitude":45.0086,"longitude":-95.8004,"count":1,"log(count)":0},{"latitude":45.491563636363644,"longitude":-92.89283636363636,"count":11,"log(count)":2.3978952727983707},{"latitude":46.85904375000001,"longitude":-96.68755625000001,"count":32,"log(count)":3.4657359027997265},{"latitude":47.59155,"longitude":-95.48775,"count":2,"log(count)":0.6931471805599453},{"latitude":47.760633333333324,"longitude":-90.3159,"count":3,"log(count)":1.0986122886681098},{"latitude":43.9245,"longitude":-95.13550000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":46.43206222222222,"longitude":-94.19980444444445,"count":45,"log(count)":3.8066624897703196},{"latitude":44.78814411764705,"longitude":-93.11135147058825,"count":68,"log(count)":4.219507705176107},{"latitude":43.97556666666666,"longitude":-92.88263333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":45.89095833333332,"longitude":-95.39305833333333,"count":12,"log(count)":2.4849066497880004},{"latitude":43.67296,"longitude":-92.15583999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":43.65079206349207,"longitude":-93.34008571428572,"count":63,"log(count)":4.143134726391533},{"latitude":44.52847777777778,"longitude":-92.5572,"count":9,"log(count)":2.1972245773362196},{"latitude":44.98082383419681,"longitude":-93.2917566062176,"count":772,"log(count)":6.648984550024776},{"latitude":43.8059,"longitude":-91.30625,"count":2,"log(count)":0.6931471805599453},{"latitude":47.0706,"longitude":-94.90375,"count":2,"log(count)":0.6931471805599453},{"latitude":45.55836000000001,"longitude":-93.2345,"count":5,"log(count)":1.6094379124341003},{"latitude":47.296975,"longitude":-93.64813749999999,"count":8,"log(count)":2.0794415416798357},{"latitude":43.6208,"longitude":-94.9886,"count":1,"log(count)":0},{"latitude":45.8722,"longitude":-93.2957,"count":1,"log(count)":0},{"latitude":45.16452857142857,"longitude":-94.98932857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":44.9775,"longitude":-96.1058,"count":2,"log(count)":0.6931471805599453},{"latitude":47.4294,"longitude":-91.2445,"count":1,"log(count)":0},{"latitude":44.387,"longitude":-93.729,"count":1,"log(count)":0},{"latitude":44.435199999999995,"longitude":-95.877475,"count":4,"log(count)":1.3862943611198906},{"latitude":47.298,"longitude":-95.872,"count":4,"log(count)":1.3862943611198906},{"latitude":43.710899999999995,"longitude":-94.582,"count":2,"log(count)":0.6931471805599453},{"latitude":44.8911,"longitude":-94.3756,"count":1,"log(count)":0},{"latitude":45.125025,"longitude":-94.49242500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":45.840806666666666,"longitude":-93.66561999999999,"count":15,"log(count)":2.70805020110221},{"latitude":45.9829,"longitude":-94.41608333333335,"count":6,"log(count)":1.791759469228055},{"latitude":43.6597163265306,"longitude":-92.94217346938778,"count":49,"log(count)":3.8918202981106265},{"latitude":43.664100000000005,"longitude":-95.53354999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":47.332049999999995,"longitude":-96.699875,"count":4,"log(count)":1.3862943611198906},{"latitude":44.01938342541435,"longitude":-92.46787458563537,"count":181,"log(count)":5.198497031265826},{"latitude":46.37234210526316,"longitude":-95.81414736842106,"count":19,"log(count)":2.9444389791664403},{"latitude":48.1435,"longitude":-96.04589999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":46.075325,"longitude":-92.86193750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":47.74559230769231,"longitude":-96.4405923076923,"count":13,"log(count)":2.5649493574615367},{"latitude":45.4585,"longitude":-95.31200000000001,"count":1,"log(count)":0},{"latitude":44.96855133819947,"longitude":-93.09508150851585,"count":411,"log(count)":6.018593214496234},{"latitude":47.89626666666667,"longitude":-96.30156666666669,"count":3,"log(count)":1.0986122886681098},{"latitude":44.5401,"longitude":-95.1225,"count":1,"log(count)":0},{"latitude":44.5291,"longitude":-94.9182,"count":1,"log(count)":0},{"latitude":44.386144444444454,"longitude":-93.3084888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":43.6581,"longitude":-96.2113,"count":1,"log(count)":0},{"latitude":48.835366666666665,"longitude":-95.69663333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":44.709546153846155,"longitude":-93.50476923076923,"count":13,"log(count)":2.5649493574615367},{"latitude":45.490919999999996,"longitude":-93.91177,"count":10,"log(count)":2.302585092994046},{"latitude":45.562735714285715,"longitude":-94.22606964285714,"count":56,"log(count)":4.02535169073515},{"latitude":44.043040000000005,"longitude":-93.20270000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":45.264849999999996,"longitude":-95.80595000000001,"count":4,"log(count)":1.3862943611198906},{"latitude":45.9651,"longitude":-94.8619,"count":1,"log(count)":0},{"latitude":44.32284,"longitude":-92.31516000000002,"count":5,"log(count)":1.6094379124341003},{"latitude":46.693799999999996,"longitude":-95.0689,"count":2,"log(count)":0.6931471805599453},{"latitude":44.0781,"longitude":-93.5047,"count":1,"log(count)":0},{"latitude":44.96869090909091,"longitude":-92.92035151515151,"count":33,"log(count)":3.4965075614664802},{"latitude":43.99186666666666,"longitude":-94.56313333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":46.409083333333335,"longitude":-96.44729999999998,"count":6,"log(count)":1.791759469228055},{"latitude":44.02807307692307,"longitude":-91.65620000000003,"count":26,"log(count)":3.258096538021482},{"latitude":45.196828571428576,"longitude":-93.83385714285714,"count":7,"log(count)":1.9459101490553132},{"latitude":44.760600000000004,"longitude":-95.58243333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":47.00074725274727,"longitude":-92.24629670329672,"count":91,"log(count)":4.51085950651685},{"latitude":46.56752,"longitude":-93.5853,"count":5,"log(count)":1.6094379124341003},{"latitude":31.557900000000004,"longitude":-91.36709264705887,"count":68,"log(count)":4.219507705176107},{"latitude":31.1935,"longitude":-90.7993,"count":5,"log(count)":1.6094379124341003},{"latitude":33.06497727272727,"longitude":-89.57823181818179,"count":22,"log(count)":3.091042453358316},{"latitude":34.783500000000004,"longitude":-89.198275,"count":4,"log(count)":1.3862943611198906},{"latitude":33.75565000000001,"longitude":-90.73438636363636,"count":22,"log(count)":3.091042453358316},{"latitude":33.909683333333334,"longitude":-89.30969166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":33.55233333333333,"longitude":-89.92573333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":33.9132888888889,"longitude":-88.9127,"count":18,"log(count)":2.8903717578961645},{"latitude":33.1578,"longitude":-89.2306,"count":1,"log(count)":0},{"latitude":31.94626923076923,"longitude":-90.92896153846155,"count":13,"log(count)":2.5649493574615367},{"latitude":32.0508,"longitude":-88.77973749999998,"count":8,"log(count)":2.0794415416798357},{"latitude":33.61592777777778,"longitude":-88.68746666666668,"count":18,"log(count)":2.8903717578961645},{"latitude":34.201545833333334,"longitude":-90.56710416666668,"count":24,"log(count)":3.1780538303479458},{"latitude":31.891579999999998,"longitude":-90.399928,"count":25,"log(count)":3.2188758248682006},{"latitude":31.696061538461546,"longitude":-89.60828461538459,"count":13,"log(count)":2.5649493574615367},{"latitude":34.94790350877194,"longitude":-89.97543157894741,"count":57,"log(count)":4.04305126783455},{"latitude":31.314962162162157,"longitude":-89.30191959459461,"count":148,"log(count)":4.997212273764115},{"latitude":31.5802,"longitude":-91.0711,"count":1,"log(count)":0},{"latitude":30.859806666666667,"longitude":-88.61751999999998,"count":15,"log(count)":2.70805020110221},{"latitude":33.772215,"longitude":-89.79804500000002,"count":40,"log(count)":3.6888794541139363},{"latitude":30.41270212014135,"longitude":-89.05728763250885,"count":283,"log(count)":5.645446897643238},{"latitude":32.31289799764428,"longitude":-90.22038504122489,"count":849,"log(count)":6.744059186311348},{"latitude":33.127372413793104,"longitude":-90.06698620689657,"count":29,"log(count)":3.367295829986474},{"latitude":34.29517142857143,"longitude":-88.40461428571429,"count":7,"log(count)":1.9459101490553132},{"latitude":30.42201287878789,"longitude":-88.62540606060611,"count":132,"log(count)":4.882801922586371},{"latitude":31.927074999999995,"longitude":-89.196875,"count":8,"log(count)":2.0794415416798357},{"latitude":31.754375,"longitude":-91.053825,"count":4,"log(count)":1.3862943611198906},{"latitude":31.614721428571432,"longitude":-89.80618571428569,"count":14,"log(count)":2.6390573296152584},{"latitude":31.676121739130448,"longitude":-89.15458985507243,"count":69,"log(count)":4.23410650459726},{"latitude":32.78095833333333,"longitude":-88.68784999999998,"count":12,"log(count)":2.4849066497880004},{"latitude":34.356552941176474,"longitude":-89.52198529411764,"count":34,"log(count)":3.5263605246161616},{"latitude":31.255877419354835,"longitude":-89.40817419354838,"count":31,"log(count)":3.4339872044851463},{"latitude":32.37407170868349,"longitude":-88.69623585434164,"count":357,"log(count)":5.877735781779639},{"latitude":31.554609090909093,"longitude":-90.1233,"count":11,"log(count)":2.3978952727983707},{"latitude":32.7338375,"longitude":-89.5088125,"count":8,"log(count)":2.0794415416798357},{"latitude":34.241960194174766,"longitude":-88.71042912621361,"count":103,"log(count)":4.634728988229636},{"latitude":33.507143902439026,"longitude":-90.18580000000003,"count":41,"log(count)":3.713572066704308},{"latitude":31.562125806451608,"longitude":-90.45430322580648,"count":31,"log(count)":3.4339872044851463},{"latitude":33.490926213592225,"longitude":-88.41424466019417,"count":103,"log(count)":4.634728988229636},{"latitude":32.53335185185184,"longitude":-90.08511666666666,"count":54,"log(count)":3.9889840465642745},{"latitude":31.239807142857142,"longitude":-89.850375,"count":28,"log(count)":3.332204510175204},{"latitude":34.78762903225805,"longitude":-89.51707741935485,"count":31,"log(count)":3.4339872044851463},{"latitude":33.8810037037037,"longitude":-88.51577962962963,"count":54,"log(count)":3.9889840465642745},{"latitude":32.77942432432433,"longitude":-89.14280270270271,"count":37,"log(count)":3.6109179126442243},{"latitude":32.37537692307692,"longitude":-89.13134615384615,"count":13,"log(count)":2.5649493574615367},{"latitude":33.16339285714286,"longitude":-88.55912857142857,"count":14,"log(count)":2.6390573296152584},{"latitude":33.46182580645161,"longitude":-88.81583548387096,"count":31,"log(count)":3.4339872044851463},{"latitude":34.35648823529412,"longitude":-89.9074794117647,"count":34,"log(count)":3.5263605246161616},{"latitude":30.582614999999997,"longitude":-89.68431,"count":20,"log(count)":2.995732273553991},{"latitude":31.08898333333333,"longitude":-88.92398333333334,"count":6,"log(count)":1.791759469228055},{"latitude":34.64053333333334,"longitude":-88.55908888888888,"count":18,"log(count)":2.8903717578961645},{"latitude":34.307050000000004,"longitude":-90.29145,"count":2,"log(count)":0.6931471805599453},{"latitude":32.29845844155844,"longitude":-90.04262077922077,"count":77,"log(count)":4.343805421853684},{"latitude":32.42506428571429,"longitude":-89.49452857142856,"count":14,"log(count)":2.6390573296152584},{"latitude":32.904833333333336,"longitude":-90.8748,"count":3,"log(count)":1.0986122886681098},{"latitude":31.88322727272728,"longitude":-89.81824545454545,"count":11,"log(count)":2.3978952727983707},{"latitude":31.966066666666666,"longitude":-89.44063333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":30.836622222222218,"longitude":-89.18293333333334,"count":9,"log(count)":2.1972245773362196},{"latitude":33.53295,"longitude":-90.61435,"count":4,"log(count)":1.3862943611198906},{"latitude":34.0099,"longitude":-90.4018,"count":1,"log(count)":0},{"latitude":34.60495,"longitude":-90.056,"count":2,"log(count)":0.6931471805599453},{"latitude":34.80227499999999,"longitude":-88.92601666666665,"count":12,"log(count)":2.4849066497880004},{"latitude":34.754200000000004,"longitude":-88.21564210526317,"count":19,"log(count)":2.9444389791664403},{"latitude":34.7302,"longitude":-90.34091538461539,"count":13,"log(count)":2.5649493574615367},{"latitude":34.50821428571429,"longitude":-89.04591428571429,"count":7,"log(count)":1.9459101490553132},{"latitude":31.133349999999997,"longitude":-90.1158,"count":8,"log(count)":2.0794415416798357},{"latitude":32.33312533333333,"longitude":-90.86763733333336,"count":75,"log(count)":4.31748811353631},{"latitude":33.39851632653062,"longitude":-91.03429387755101,"count":49,"log(count)":3.8918202981106265},{"latitude":31.640990476190474,"longitude":-88.6269,"count":21,"log(count)":3.044522437723423},{"latitude":33.548249999999996,"longitude":-89.240625,"count":4,"log(count)":1.3862943611198906},{"latitude":31.093933333333336,"longitude":-91.17946666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":33.125060000000005,"longitude":-89.04611,"count":10,"log(count)":2.302585092994046},{"latitude":34.10152,"longitude":-89.6899,"count":5,"log(count)":1.6094379124341003},{"latitude":32.838792000000005,"longitude":-90.40582799999999,"count":25,"log(count)":3.2188758248682006},{"latitude":34.26617,"longitude":-89.03153,"count":10,"log(count)":2.302585092994046},{"latitude":34.92448205128204,"longitude":-88.53019230769229,"count":39,"log(count)":3.6635616461296463},{"latitude":30.340515789473688,"longitude":-89.39457368421051,"count":38,"log(count)":3.6375861597263857},{"latitude":33.499399999999994,"longitude":-89.68832,"count":5,"log(count)":1.6094379124341003},{"latitude":31.203563636363636,"longitude":-90.42769318181816,"count":44,"log(count)":3.784189633918261},{"latitude":39.91480000000001,"longitude":-94.91066666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":40.4385,"longitude":-95.389,"count":1,"log(count)":0},{"latitude":39.18499565217392,"longitude":-91.86725217391303,"count":23,"log(count)":3.1354942159291497},{"latitude":36.789875,"longitude":-93.8726,"count":8,"log(count)":2.0794415416798357},{"latitude":37.5038,"longitude":-94.2697,"count":1,"log(count)":0},{"latitude":38.257,"longitude":-94.3354,"count":1,"log(count)":0},{"latitude":38.28762,"longitude":-93.303,"count":5,"log(count)":1.6094379124341003},{"latitude":37.2732625,"longitude":-89.96375,"count":8,"log(count)":2.0794415416798357},{"latitude":38.966013671874975,"longitude":-92.31683925781253,"count":512,"log(count)":6.238324625039508},{"latitude":39.75457777777777,"longitude":-94.83408055555556,"count":72,"log(count)":4.276666119016055},{"latitude":36.75891935483871,"longitude":-90.41574838709678,"count":31,"log(count)":3.4339872044851463},{"latitude":38.799423913043476,"longitude":-91.96571086956521,"count":46,"log(count)":3.828641396489095},{"latitude":38.09455454545454,"longitude":-92.73546363636363,"count":11,"log(count)":2.3978952727983707},{"latitude":37.31837354838709,"longitude":-89.55593354838703,"count":155,"log(count)":5.043425116919247},{"latitude":39.48255,"longitude":-93.4208,"count":2,"log(count)":0.6931471805599453},{"latitude":36.9074,"longitude":-90.9438,"count":1,"log(count)":0},{"latitude":38.73110454545454,"longitude":-94.44135454545454,"count":22,"log(count)":3.091042453358316},{"latitude":37.789699999999996,"longitude":-93.91130000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":37.03638333333333,"longitude":-93.21074999999998,"count":18,"log(count)":2.8903717578961645},{"latitude":40.3772,"longitude":-91.7539,"count":1,"log(count)":0},{"latitude":39.212592452830194,"longitude":-94.52191415094339,"count":106,"log(count)":4.663439094112067},{"latitude":39.6521,"longitude":-94.34163333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":38.55871089108911,"longitude":-92.20258019801982,"count":101,"log(count)":4.61512051684126},{"latitude":38.89385833333333,"longitude":-92.75804166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":38.1171,"longitude":-91.24094000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":37.4424,"longitude":-93.92135,"count":2,"log(count)":0.6931471805599453},{"latitude":37.605716666666666,"longitude":-93.08553333333333,"count":6,"log(count)":1.791759469228055},{"latitude":40.1023,"longitude":-94.1086,"count":1,"log(count)":0},{"latitude":39.7578,"longitude":-94.5777,"count":1,"log(count)":0},{"latitude":37.7796,"longitude":-91.7207,"count":1,"log(count)":0},{"latitude":36.9462,"longitude":-92.5868,"count":5,"log(count)":1.6094379124341003},{"latitude":36.321005,"longitude":-90.053995,"count":20,"log(count)":2.995732273553991},{"latitude":38.416375510204084,"longitude":-90.98403265306125,"count":49,"log(count)":3.8918202981106265},{"latitude":38.44748333333333,"longitude":-91.49385000000001,"count":6,"log(count)":1.791759469228055},{"latitude":40.1407,"longitude":-94.48,"count":1,"log(count)":0},{"latitude":37.20715540166205,"longitude":-93.29351218836564,"count":361,"log(count)":5.8888779583328805},{"latitude":40.0716,"longitude":-93.6176,"count":1,"log(count)":0},{"latitude":40.2596,"longitude":-94.0127,"count":1,"log(count)":0},{"latitude":38.404019999999996,"longitude":-93.72546,"count":5,"log(count)":1.6094379124341003},{"latitude":39.1783,"longitude":-92.75399999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":36.797242857142855,"longitude":-91.85991428571427,"count":7,"log(count)":1.9459101490553132},{"latitude":37.48625,"longitude":-90.66045,"count":2,"log(count)":0.6931471805599453},{"latitude":39.03990679785333,"longitude":-94.52571359570685,"count":1118,"log(count)":7.0192966537150445},{"latitude":37.1066561983471,"longitude":-94.46616198347105,"count":121,"log(count)":4.795790545596741},{"latitude":38.35705384615384,"longitude":-90.45896307692307,"count":65,"log(count)":4.174387269895637},{"latitude":38.756789999999995,"longitude":-93.67274,"count":10,"log(count)":2.302585092994046},{"latitude":40.0747,"longitude":-92.06875,"count":2,"log(count)":0.6931471805599453},{"latitude":37.68735454545455,"longitude":-92.64533636363637,"count":11,"log(count)":2.3978952727983707},{"latitude":39.07006,"longitude":-93.80186,"count":5,"log(count)":1.6094379124341003},{"latitude":37.042588888888886,"longitude":-93.85957222222223,"count":18,"log(count)":2.8903717578961645},{"latitude":40.136700000000005,"longitude":-91.5462,"count":2,"log(count)":0.6931471805599453},{"latitude":38.98598333333332,"longitude":-90.96899166666668,"count":24,"log(count)":3.1780538303479458},{"latitude":39.7926,"longitude":-93.0731,"count":1,"log(count)":0},{"latitude":39.814,"longitude":-93.5337,"count":3,"log(count)":1.0986122886681098},{"latitude":39.74893333333333,"longitude":-92.56546666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":37.5577,"longitude":-90.2912,"count":1,"log(count)":0},{"latitude":38.136716666666665,"longitude":-91.81473333333332,"count":6,"log(count)":1.791759469228055},{"latitude":39.72836470588235,"longitude":-91.43836470588236,"count":17,"log(count)":2.833213344056216},{"latitude":36.61234,"longitude":-94.34828,"count":10,"log(count)":2.302585092994046},{"latitude":38.25456666666667,"longitude":-92.48673333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":36.90969545454545,"longitude":-89.34401363636367,"count":22,"log(count)":3.091042453358316},{"latitude":38.650371428571425,"longitude":-92.60577142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":39.567275,"longitude":-91.7997,"count":4,"log(count)":1.3862943611198906},{"latitude":38.9555,"longitude":-91.510025,"count":4,"log(count)":1.3862943611198906},{"latitude":38.3391,"longitude":-92.83136666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":36.74117,"longitude":-89.64952000000001,"count":10,"log(count)":2.302585092994046},{"latitude":36.96145862068965,"longitude":-94.42914827586208,"count":29,"log(count)":3.367295829986474},{"latitude":40.5185,"longitude":-95.1151,"count":1,"log(count)":0},{"latitude":36.578900000000004,"longitude":-91.50943333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":38.4163,"longitude":-91.8875,"count":3,"log(count)":1.0986122886681098},{"latitude":36.5712,"longitude":-92.46506666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":36.199691666666666,"longitude":-89.76855833333333,"count":12,"log(count)":2.4849066497880004},{"latitude":37.67907142857143,"longitude":-89.8660142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":38.69884285714285,"longitude":-93.24772142857144,"count":14,"log(count)":2.6390573296152584},{"latitude":37.94277692307692,"longitude":-91.76752307692307,"count":13,"log(count)":2.5649493574615367},{"latitude":39.3240125,"longitude":-91.178025,"count":8,"log(count)":2.0794415416798357},{"latitude":39.28567777777775,"longitude":-94.69999494949494,"count":99,"log(count)":4.59511985013459},{"latitude":37.58178,"longitude":-93.43825999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":37.849338461538466,"longitude":-92.16831538461537,"count":13,"log(count)":2.5649493574615367},{"latitude":39.42886666666667,"longitude":-92.44680000000001,"count":15,"log(count)":2.70805020110221},{"latitude":39.4197,"longitude":-93.9853,"count":1,"log(count)":0},{"latitude":37.336349999999996,"longitude":-90.94215,"count":2,"log(count)":0.6931471805599453},{"latitude":36.6198,"longitude":-90.80542,"count":5,"log(count)":1.6094379124341003},{"latitude":38.78860394736841,"longitude":-90.64752763157897,"count":76,"log(count)":4.330733340286331},{"latitude":38.14,"longitude":-93.7269,"count":1,"log(count)":0},{"latitude":37.81749285714286,"longitude":-90.53168571428571,"count":14,"log(count)":2.6390573296152584},{"latitude":38.70582493540049,"longitude":-90.31587118863045,"count":774,"log(count)":6.651571873589727},{"latitude":39.12436666666667,"longitude":-93.18425,"count":6,"log(count)":1.791759469228055},{"latitude":36.90698139534883,"longitude":-89.58968604651163,"count":43,"log(count)":3.7612001156935624},{"latitude":36.9999,"longitude":-91.40684999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":39.7374,"longitude":-92.2579,"count":1,"log(count)":0},{"latitude":36.9606,"longitude":-89.87166666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":36.711099999999995,"longitude":-93.45298333333335,"count":6,"log(count)":1.791759469228055},{"latitude":40.2579,"longitude":-92.9537,"count":1,"log(count)":0},{"latitude":36.643011111111115,"longitude":-93.19685,"count":18,"log(count)":2.8903717578961645},{"latitude":37.34076,"longitude":-91.97917,"count":10,"log(count)":2.302585092994046},{"latitude":37.83976875,"longitude":-94.329525,"count":16,"log(count)":2.772588722239781},{"latitude":38.769283333333334,"longitude":-91.14659999999999,"count":6,"log(count)":1.791759469228055},{"latitude":38.0181,"longitude":-90.84142222222222,"count":9,"log(count)":2.1972245773362196},{"latitude":37.07825,"longitude":-90.48745,"count":4,"log(count)":1.3862943611198906},{"latitude":37.23865,"longitude":-92.94735000000001,"count":6,"log(count)":1.791759469228055},{"latitude":37.2955,"longitude":-92.2692,"count":1,"log(count)":0},{"latitude":40.189980000000006,"longitude":-92.58805,"count":10,"log(count)":2.302585092994046},{"latitude":37.9781,"longitude":-90.0488,"count":1,"log(count)":0},{"latitude":38.64697553444172,"longitude":-90.23855748218514,"count":2105,"log(count)":7.652070746116482},{"latitude":46.66825396825397,"longitude":-112.05677777777777,"count":63,"log(count)":4.143134726391533},{"latitude":40.5968375,"longitude":-98.403625,"count":8,"log(count)":2.0794415416798357},{"latitude":42.060900000000004,"longitude":-98.07365,"count":2,"log(count)":0.6931471805599453},{"latitude":42.881,"longitude":-98.6933,"count":1,"log(count)":0},{"latitude":40.70508124999999,"longitude":-99.0732875,"count":16,"log(count)":2.772588722239781},{"latitude":41.859700000000004,"longitude":-96.34665,"count":2,"log(count)":0.6931471805599453},{"latitude":41.2531,"longitude":-97.1249,"count":1,"log(count)":0},{"latitude":40.94392500000001,"longitude":-96.1674625,"count":8,"log(count)":2.0794415416798357},{"latitude":40.4771,"longitude":-101.5265,"count":2,"log(count)":0.6931471805599453},{"latitude":41.1313,"longitude":-102.986,"count":2,"log(count)":0.6931471805599453},{"latitude":41.451366666666665,"longitude":-97.06,"count":3,"log(count)":1.0986122886681098},{"latitude":42.0029,"longitude":-96.5885,"count":1,"log(count)":0},{"latitude":41.3475,"longitude":-99.7535,"count":1,"log(count)":0},{"latitude":42.445,"longitude":-96.47555,"count":8,"log(count)":2.0794415416798357},{"latitude":42.834900000000005,"longitude":-103.005,"count":2,"log(count)":0.6931471805599453},{"latitude":40.83953333333333,"longitude":-99.88626666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":41.0635,"longitude":-102.079,"count":1,"log(count)":0},{"latitude":42.268,"longitude":-96.8673,"count":1,"log(count)":0},{"latitude":41.50565,"longitude":-96.53466,"count":10,"log(count)":2.302585092994046},{"latitude":41.27609347345126,"longitude":-95.98631261061925,"count":904,"log(count)":6.806829360392176},{"latitude":40.2773,"longitude":-99.7664,"count":2,"log(count)":0.6931471805599453},{"latitude":40.2679875,"longitude":-96.68152500000001,"count":8,"log(count)":2.0794415416798357},{"latitude":41.7845,"longitude":-99.1323,"count":1,"log(count)":0},{"latitude":40.6042,"longitude":-99.8625,"count":1,"log(count)":0},{"latitude":40.920346666666674,"longitude":-98.36090666666665,"count":15,"log(count)":2.70805020110221},{"latitude":40.8663,"longitude":-98.0192,"count":1,"log(count)":0},{"latitude":40.1186,"longitude":-99.3553,"count":1,"log(count)":0},{"latitude":40.202,"longitude":-100.926,"count":2,"log(count)":0.6931471805599453},{"latitude":42.7683,"longitude":-98.3536,"count":1,"log(count)":0},{"latitude":40.2095,"longitude":-97.0081,"count":1,"log(count)":0},{"latitude":41.199099999999994,"longitude":-101.72266666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":42.6054,"longitude":-98.0888,"count":1,"log(count)":0},{"latitude":40.815722875817016,"longitude":-96.68874553376898,"count":459,"log(count)":6.129050210060545},{"latitude":41.1213,"longitude":-100.78773684210528,"count":19,"log(count)":2.9444389791664403},{"latitude":42.02804444444444,"longitude":-97.41508888888887,"count":9,"log(count)":2.1972245773362196},{"latitude":41.0456,"longitude":-98.12559999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":41.6661,"longitude":-103.102,"count":1,"log(count)":0},{"latitude":41.4535,"longitude":-97.7456,"count":1,"log(count)":0},{"latitude":40.4075,"longitude":-95.8143,"count":1,"log(count)":0},{"latitude":40.7128,"longitude":-96.1368,"count":2,"log(count)":0.6931471805599453},{"latitude":40.442,"longitude":-99.3849,"count":1,"log(count)":0},{"latitude":42.1924,"longitude":-97.3681,"count":1,"log(count)":0},{"latitude":41.43488000000001,"longitude":-97.35548000000001,"count":15,"log(count)":2.70805020110221},{"latitude":41.1626,"longitude":-97.8097,"count":1,"log(count)":0},{"latitude":40.222449999999995,"longitude":-100.467,"count":2,"log(count)":0.6931471805599453},{"latitude":40.113,"longitude":-95.77055,"count":2,"log(count)":0.6931471805599453},{"latitude":41.15802758620689,"longitude":-96.00229310344827,"count":29,"log(count)":3.367295829986474},{"latitude":41.22416666666666,"longitude":-96.49470000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":41.87385833333333,"longitude":-103.66816666666669,"count":12,"log(count)":2.4849066497880004},{"latitude":40.85906666666667,"longitude":-97.12006666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":41.2771,"longitude":-98.9602,"count":1,"log(count)":0},{"latitude":41.9445,"longitude":-97.2237,"count":1,"log(count)":0},{"latitude":41.50213333333333,"longitude":-96.14268888888888,"count":9,"log(count)":2.1972245773362196},{"latitude":40.85605714285714,"longitude":-97.6464,"count":7,"log(count)":1.9459101490553132},{"latitude":40.847270967741935,"longitude":-115.5578387096774,"count":31,"log(count)":3.4339872044851463},{"latitude":39.533013975155264,"longitude":-119.79187577639743,"count":322,"log(count)":5.7745515455444085},{"latitude":39.2508,"longitude":-114.876,"count":2,"log(count)":0.6931471805599453},{"latitude":39.4875,"longitude":-118.7765,"count":2,"log(count)":0.6931471805599453},{"latitude":39.388200000000005,"longitude":-119.61240000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":38.92346250000001,"longitude":-119.74125000000001,"count":8,"log(count)":2.0794415416798357},{"latitude":38.952,"longitude":-118.82,"count":1,"log(count)":0},{"latitude":39.41471904761905,"longitude":-119.26533333333332,"count":21,"log(count)":3.044522437723423},{"latitude":40.2351,"longitude":-118.426,"count":1,"log(count)":0},{"latitude":39.17565925925927,"longitude":-119.74918518518518,"count":27,"log(count)":3.295836866004329},{"latitude":41.28043333333333,"longitude":-117.65933333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":40.6298,"longitude":-116.928,"count":1,"log(count)":0},{"latitude":36.29333749999999,"longitude":-116.00662500000003,"count":24,"log(count)":3.1780538303479458},{"latitude":36.14529894957983,"longitude":-115.15056442577034,"count":1428,"log(count)":7.2640301428995295},{"latitude":38.573,"longitude":-114.90299999999999,"count":1,"log(count)":0},{"latitude":43.50960204081632,"longitude":-71.45925510204083,"count":49,"log(count)":3.8918202981106265},{"latitude":43.86036,"longitude":-71.12294666666666,"count":15,"log(count)":2.70805020110221},{"latitude":42.90386382978725,"longitude":-72.28018723404256,"count":47,"log(count)":3.8501476017100584},{"latitude":44.58649166666667,"longitude":-71.3814,"count":12,"log(count)":2.4849066497880004},{"latitude":43.78189285714285,"longitude":-72.04342500000001,"count":28,"log(count)":3.332204510175204},{"latitude":42.92678360655741,"longitude":-71.47551967213114,"count":366,"log(count)":5.902633333401366},{"latitude":43.21367808219179,"longitude":-71.55194520547947,"count":73,"log(count)":4.290459441148391},{"latitude":42.97109375000003,"longitude":-71.00803020833332,"count":192,"log(count)":5.2574953720277815},{"latitude":43.2729184397163,"longitude":-70.95764042553189,"count":141,"log(count)":4.948759890378168},{"latitude":43.39567499999999,"longitude":-72.26109166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":40.59405384615385,"longitude":-74.86729230769231,"count":13,"log(count)":2.5649493574615367},{"latitude":40.22476015625006,"longitude":-74.75611718750007,"count":768,"log(count)":6.643789733147672},{"latitude":40.48621946902656,"longitude":-74.41008584070798,"count":113,"log(count)":4.727387818712341},{"latitude":40.87007083333335,"longitude":-74.52823958333336,"count":48,"log(count)":3.871201010907891},{"latitude":40.91882426710096,"longitude":-74.16428045602618,"count":614,"log(count)":6.419994928147142},{"latitude":39.62993200000001,"longitude":-75.47177199999999,"count":50,"log(count)":3.912023005428146},{"latitude":40.552889830508484,"longitude":-74.52362203389832,"count":59,"log(count)":4.07753744390572},{"latitude":40.65007948717946,"longitude":-74.26942564102562,"count":234,"log(count)":5.455321115357702},{"latitude":41.12109999999999,"longitude":-74.64809166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":40.76954444444445,"longitude":-75.0659888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":39.38769792746114,"longitude":-74.48939248704662,"count":386,"log(count)":5.955837369464831},{"latitude":40.90115666666667,"longitude":-74.04907400000003,"count":150,"log(count)":5.0106352940962555},{"latitude":40.02242173913043,"longitude":-74.84272608695653,"count":207,"log(count)":5.332718793265369},{"latitude":39.89541763085397,"longitude":-75.07379917355378,"count":363,"log(count)":5.8944028342648505},{"latitude":39.06376129032258,"longitude":-74.85213870967742,"count":31,"log(count)":3.4339872044851463},{"latitude":39.427658400000006,"longitude":-75.11415080000002,"count":250,"log(count)":5.521460917862246},{"latitude":40.74114882418823,"longitude":-74.19985632698766,"count":893,"log(count)":6.794586580876499},{"latitude":39.74081562499999,"longitude":-75.13231770833333,"count":96,"log(count)":4.564348191467836},{"latitude":40.7184776811595,"longitude":-74.0742960869566,"count":690,"log(count)":6.536691597591305},{"latitude":39.97246818181819,"longitude":-74.23098068181818,"count":88,"log(count)":4.477336814478207},{"latitude":40.258424999999995,"longitude":-74.0828057142857,"count":140,"log(count)":4.941642422609304},{"latitude":32.78732,"longitude":-108.22299999999998,"count":15,"log(count)":2.70805020110221},{"latitude":32.89436666666667,"longitude":-105.95546666666668,"count":15,"log(count)":2.70805020110221},{"latitude":32.19125,"longitude":-108.69800000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":35.45944166666667,"longitude":-108.57066666666667,"count":12,"log(count)":2.4849066497880004},{"latitude":32.289315596330276,"longitude":-106.75123853211007,"count":109,"log(count)":4.6913478822291435},{"latitude":35.183749999999996,"longitude":-103.66975,"count":4,"log(count)":1.3862943611198906},{"latitude":34.9386,"longitude":-104.689,"count":1,"log(count)":0},{"latitude":34.865025,"longitude":-106.20150000000001,"count":8,"log(count)":2.0794415416798357},{"latitude":35.32617714285715,"longitude":-106.64142857142853,"count":35,"log(count)":3.5553480614894135},{"latitude":35.534445454545455,"longitude":-105.37672727272728,"count":11,"log(count)":2.3978952727983707},{"latitude":33.43871,"longitude":-105.61880000000001,"count":10,"log(count)":2.302585092994046},{"latitude":36.89396,"longitude":-104.43619999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":35.1353888888889,"longitude":-107.77455555555555,"count":9,"log(count)":2.1972245773362196},{"latitude":34.740671428571424,"longitude":-106.72728571428569,"count":28,"log(count)":3.332204510175204},{"latitude":34.406882857142854,"longitude":-103.20654285714286,"count":35,"log(count)":3.5553480614894135},{"latitude":34.475,"longitude":-104.25,"count":1,"log(count)":0},{"latitude":36.40595714285714,"longitude":-105.5813877551021,"count":49,"log(count)":3.8918202981106265},{"latitude":32.25992,"longitude":-107.77000000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":35.64706855345914,"longitude":-106.00587421383644,"count":159,"log(count)":5.0689042022202315},{"latitude":32.63918571428573,"longitude":-104.32937362637358,"count":91,"log(count)":4.51085950651685},{"latitude":36.72386507936508,"longitude":-108.17239682539683,"count":63,"log(count)":4.143134726391533},{"latitude":42.664068273092354,"longitude":-73.77583895582326,"count":249,"log(count)":5.517452896464707},{"latitude":42.1902923076923,"longitude":-77.9337,"count":13,"log(count)":2.5649493574615367},{"latitude":40.84264367396593,"longitude":-73.890446107056,"count":822,"log(count)":6.71174039505618},{"latitude":42.110326530612255,"longitude":-75.90964591836735,"count":98,"log(count)":4.584967478670572},{"latitude":42.25780370370371,"longitude":-78.56248518518515,"count":27,"log(count)":3.295836866004329},{"latitude":42.92798,"longitude":-76.563168,"count":25,"log(count)":3.2188758248682006},{"latitude":42.2112964285714,"longitude":-79.28746071428576,"count":112,"log(count)":4.718498871295094},{"latitude":42.10289729729729,"longitude":-76.8112364864865,"count":74,"log(count)":4.30406509320417},{"latitude":42.51345,"longitude":-75.53608333333334,"count":12,"log(count)":2.4849066497880004},{"latitude":44.72133124999999,"longitude":-73.57184375,"count":16,"log(count)":2.772588722239781},{"latitude":42.219100000000005,"longitude":-73.71951304347826,"count":23,"log(count)":3.1354942159291497},{"latitude":42.588153846153844,"longitude":-76.1322,"count":13,"log(count)":2.5649493574615367},{"latitude":42.16516666666666,"longitude":-74.92906666666666,"count":9,"log(count)":2.1972245773362196},{"latitude":41.675609042553205,"longitude":-73.88990159574467,"count":188,"log(count)":5.236441962829949},{"latitude":42.90931988416981,"longitude":-78.83495434362933,"count":1036,"log(count)":6.943122422819428},{"latitude":44.139522222222226,"longitude":-73.76787777777777,"count":9,"log(count)":2.1972245773362196},{"latitude":44.73095714285714,"longitude":-74.2778,"count":7,"log(count)":1.9459101490553132},{"latitude":43.06989166666667,"longitude":-74.36194166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":43.00208846153846,"longitude":-78.17975384615383,"count":26,"log(count)":3.258096538021482},{"latitude":42.250378571428584,"longitude":-73.91305,"count":14,"log(count)":2.6390573296152584},{"latitude":43.7436,"longitude":-74.2486,"count":1,"log(count)":0},{"latitude":43.05893333333333,"longitude":-75.02101666666667,"count":6,"log(count)":1.791759469228055},{"latitude":44.02440263157896,"longitude":-75.88778421052632,"count":38,"log(count)":3.6375861597263857},{"latitude":40.66495904139441,"longitude":-73.94172040668107,"count":1377,"log(count)":7.227662498728654},{"latitude":43.71867777777778,"longitude":-75.42162222222221,"count":9,"log(count)":2.1972245773362196},{"latitude":42.766105,"longitude":-77.790725,"count":20,"log(count)":2.995732273553991},{"latitude":42.984081818181814,"longitude":-75.68923636363637,"count":11,"log(count)":2.3978952727983707},{"latitude":43.168456041131115,"longitude":-77.6264254498715,"count":778,"log(count)":6.656726524178391},{"latitude":42.9442,"longitude":-74.234025,"count":12,"log(count)":2.4849066497880004},{"latitude":40.69998086642598,"longitude":-73.60890324909751,"count":277,"log(count)":5.6240175061873385},{"latitude":40.78264065040651,"longitude":-73.96248028455281,"count":492,"log(count)":6.198478716492308},{"latitude":43.11609423076924,"longitude":-78.9503580769231,"count":260,"log(count)":5.560681631015528},{"latitude":43.105280184331775,"longitude":-75.268296313364,"count":217,"log(count)":5.37989735354046},{"latitude":43.04293219076005,"longitude":-76.15339701937408,"count":671,"log(count)":6.508769136971682},{"latitude":42.86808484848484,"longitude":-77.20187272727271,"count":33,"log(count)":3.4965075614664802},{"latitude":41.46661213592234,"longitude":-74.16088203883496,"count":206,"log(count)":5.327876168789581},{"latitude":43.2537,"longitude":-78.26154,"count":15,"log(count)":2.70805020110221},{"latitude":43.372676190476184,"longitude":-76.29137142857147,"count":21,"log(count)":3.044522437723423},{"latitude":42.54620952380952,"longitude":-75.02602380952382,"count":21,"log(count)":3.044522437723423},{"latitude":41.405927777777784,"longitude":-73.70225555555557,"count":18,"log(count)":2.8903717578961645},{"latitude":40.702490439770564,"longitude":-73.82379311663482,"count":523,"log(count)":6.259581464064923},{"latitude":42.73515221238939,"longitude":-73.66211946902654,"count":113,"log(count)":4.727387818712341},{"latitude":40.61715563725491,"longitude":-74.12095637254907,"count":408,"log(count)":6.0112671744041615},{"latitude":41.132743478260856,"longitude":-74.02206521739132,"count":46,"log(count)":3.828641396489095},{"latitude":43.03005789473685,"longitude":-73.75334210526319,"count":38,"log(count)":3.6375861597263857},{"latitude":42.80765000000001,"longitude":-73.93847711864406,"count":118,"log(count)":4.770684624465665},{"latitude":42.67435714285714,"longitude":-74.38515714285714,"count":7,"log(count)":1.9459101490553132},{"latitude":42.36505,"longitude":-76.84275,"count":4,"log(count)":1.3862943611198906},{"latitude":42.85723333333332,"longitude":-76.83756,"count":15,"log(count)":2.70805020110221},{"latitude":42.24295652173913,"longitude":-77.30830869565217,"count":23,"log(count)":3.1354942159291497},{"latitude":40.81277918918922,"longitude":-73.09884189189188,"count":370,"log(count)":5.91350300563827},{"latitude":41.65977200000001,"longitude":-74.70838399999998,"count":50,"log(count)":3.912023005428146},{"latitude":42.096075,"longitude":-76.40313750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":42.45024222222221,"longitude":-76.49734222222223,"count":45,"log(count)":3.8066624897703196},{"latitude":41.87811900826447,"longitude":-74.05476363636365,"count":121,"log(count)":4.795790545596741},{"latitude":43.46205000000001,"longitude":-73.71345789473686,"count":38,"log(count)":3.6375861597263857},{"latitude":43.30403636363638,"longitude":-73.40824545454547,"count":22,"log(count)":3.091042453358316},{"latitude":43.166805555555555,"longitude":-77.03476111111111,"count":18,"log(count)":2.8903717578961645},{"latitude":40.986460115606945,"longitude":-73.83556242774564,"count":173,"log(count)":5.153291594497779},{"latitude":42.694716666666665,"longitude":-78.21522222222224,"count":18,"log(count)":2.8903717578961645},{"latitude":42.62088571428571,"longitude":-77.13925714285713,"count":7,"log(count)":1.9459101490553132},{"latitude":44.67047872340426,"longitude":-75.14363829787233,"count":47,"log(count)":3.8501476017100584},{"latitude":36.093525961538475,"longitude":-79.4311346153846,"count":208,"log(count)":5.337538079701318},{"latitude":35.89963846153846,"longitude":-81.21155384615385,"count":13,"log(count)":2.5649493574615367},{"latitude":36.5064,"longitude":-81.11715000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":34.9572375,"longitude":-80.09810625,"count":16,"log(count)":2.772588722239781},{"latitude":36.41556,"longitude":-81.44651999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":36.06973333333334,"longitude":-81.94193333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":35.574958115183215,"longitude":-82.55434031413616,"count":191,"log(count)":5.25227342804663},{"latitude":35.72680857142858,"longitude":-81.67953714285716,"count":35,"log(count)":3.5553480614894135},{"latitude":35.41447142857141,"longitude":-80.60931298701298,"count":77,"log(count)":4.343805421853684},{"latitude":35.871874999999996,"longitude":-81.49405833333336,"count":24,"log(count)":3.1780538303479458},{"latitude":36.38333,"longitude":-79.37502,"count":10,"log(count)":2.302585092994046},{"latitude":35.70655609756097,"longitude":-81.26688536585367,"count":82,"log(count)":4.406719247264253},{"latitude":35.711600000000004,"longitude":-79.2742142857143,"count":14,"log(count)":2.6390573296152584},{"latitude":35.08605,"longitude":-84.072925,"count":4,"log(count)":1.3862943611198906},{"latitude":34.9899,"longitude":-83.8782,"count":1,"log(count)":0},{"latitude":35.28594444444444,"longitude":-81.51616190476192,"count":63,"log(count)":4.143134726391533},{"latitude":35.83334313725491,"longitude":-80.19822647058818,"count":102,"log(count)":4.624972813284271},{"latitude":35.93195,"longitude":-80.490875,"count":4,"log(count)":1.3862943611198906},{"latitude":35.99092594059407,"longitude":-78.89623643564356,"count":505,"log(count)":6.22455842927536},{"latitude":35.92373333333335,"longitude":-77.70428024691358,"count":81,"log(count)":4.394449154672439},{"latitude":36.10828066465259,"longitude":-80.24014169184288,"count":331,"log(count)":5.802118375377063},{"latitude":36.06630714285715,"longitude":-78.36604999999999,"count":14,"log(count)":2.6390573296152584},{"latitude":35.27071944444444,"longitude":-81.17007916666665,"count":144,"log(count)":4.969813299576001},{"latitude":35.3117,"longitude":-83.7833,"count":1,"log(count)":0},{"latitude":36.27136428571428,"longitude":-78.6689142857143,"count":14,"log(count)":2.6390573296152584},{"latitude":35.46772,"longitude":-77.60059000000001,"count":10,"log(count)":2.302585092994046},{"latitude":36.04719086614175,"longitude":-79.8356696062992,"count":635,"log(count)":6.453624998892692},{"latitude":36.36534891304348,"longitude":-77.64535652173913,"count":92,"log(count)":4.5217885770490405},{"latitude":35.34028518518518,"longitude":-78.89136666666663,"count":54,"log(count)":3.9889840465642745},{"latitude":35.53378695652174,"longitude":-82.9415652173913,"count":23,"log(count)":3.1354942159291497},{"latitude":35.343262745098045,"longitude":-82.45909607843136,"count":51,"log(count)":3.9318256327243257},{"latitude":34.9790875,"longitude":-79.19054687500001,"count":32,"log(count)":3.4657359027997265},{"latitude":35.4226,"longitude":-76.3182,"count":1,"log(count)":0},{"latitude":35.750509,"longitude":-80.86838500000002,"count":100,"log(count)":4.605170185988092},{"latitude":35.30383333333334,"longitude":-83.18808333333334,"count":6,"log(count)":1.791759469228055},{"latitude":35.484266037735836,"longitude":-79.18487358490567,"count":53,"log(count)":3.970291913552122},{"latitude":35.26917925531915,"longitude":-77.58490585106382,"count":188,"log(count)":5.236441962829949},{"latitude":35.47871666666667,"longitude":-81.18826333333331,"count":30,"log(count)":3.4011973816621555},{"latitude":35.23576870642911,"longitude":-80.83423323005428,"count":1291,"log(count)":7.1631723908466425},{"latitude":35.99365,"longitude":-82.09485,"count":2,"log(count)":0.6931471805599453},{"latitude":35.321357142857146,"longitude":-79.89355714285715,"count":7,"log(count)":1.9459101490553132},{"latitude":35.27320869565218,"longitude":-79.45494782608695,"count":46,"log(count)":3.828641396489095},{"latitude":35.95440645161292,"longitude":-77.83677634408599,"count":93,"log(count)":4.532599493153256},{"latitude":36.428225,"longitude":-77.40271,"count":20,"log(count)":2.995732273553991},{"latitude":36.00152222222223,"longitude":-79.08584444444448,"count":45,"log(count)":3.8066624897703196},{"latitude":36.35956,"longitude":-78.96388,"count":10,"log(count)":2.302585092994046},{"latitude":35.58521846590914,"longitude":-77.38968693181818,"count":352,"log(count)":5.863631175598097},{"latitude":35.25733333333333,"longitude":-82.15235,"count":6,"log(count)":1.791759469228055},{"latitude":35.747156756756766,"longitude":-79.82181216216217,"count":74,"log(count)":4.30406509320417},{"latitude":34.95664,"longitude":-79.76352,"count":10,"log(count)":2.302585092994046},{"latitude":36.400150632911405,"longitude":-79.7253088607595,"count":79,"log(count)":4.3694478524670215},{"latitude":35.652869026548686,"longitude":-80.48969778761061,"count":226,"log(count)":5.420534999272286},{"latitude":35.34754230769231,"longitude":-81.89545769230769,"count":26,"log(count)":3.258096538021482},{"latitude":34.78010227272728,"longitude":-79.45946818181818,"count":44,"log(count)":3.784189633918261},{"latitude":36.35364166666666,"longitude":-80.27746666666668,"count":12,"log(count)":2.4849066497880004},{"latitude":36.40709259259259,"longitude":-80.68329999999999,"count":27,"log(count)":3.295836866004329},{"latitude":35.478825,"longitude":-83.384625,"count":4,"log(count)":1.3862943611198906},{"latitude":35.207237500000005,"longitude":-82.7376375,"count":8,"log(count)":2.0794415416798357},{"latitude":35.000968085106365,"longitude":-80.57710851063828,"count":47,"log(count)":3.8501476017100584},{"latitude":36.32830250000001,"longitude":-78.3971325,"count":40,"log(count)":3.6888794541139363},{"latitude":35.80853965141613,"longitude":-78.64741633986934,"count":459,"log(count)":6.129050210060545},{"latitude":36.36757142857143,"longitude":-78.15715714285714,"count":7,"log(count)":1.9459101490553132},{"latitude":36.224210526315794,"longitude":-81.70174736842107,"count":19,"log(count)":2.9444389791664403},{"latitude":36.206579999999995,"longitude":-81.10969,"count":10,"log(count)":2.302585092994046},{"latitude":35.72299615384616,"longitude":-77.92728461538461,"count":26,"log(count)":3.258096538021482},{"latitude":36.14960000000001,"longitude":-80.65501666666667,"count":6,"log(count)":1.791759469228055},{"latitude":35.93886,"longitude":-82.31834,"count":5,"log(count)":1.6094379124341003},{"latitude":35.08354117647059,"longitude":-76.8122411764706,"count":17,"log(count)":2.833213344056216},{"latitude":36.07043333333334,"longitude":-76.6041888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":35.140049999999995,"longitude":-83.37855,"count":14,"log(count)":2.6390573296152584},{"latitude":35.85737999999999,"longitude":-82.66702000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":35.66815714285714,"longitude":-81.99247500000003,"count":56,"log(count)":4.02535169073515},{"latitude":36.188966666666666,"longitude":-76.46766666666666,"count":6,"log(count)":1.791759469228055},{"latitude":35.32831818181819,"longitude":-80.21716363636367,"count":33,"log(count)":3.4965075614664802},{"latitude":35.10181944444445,"longitude":-77.05407314814813,"count":108,"log(count)":4.68213122712422},{"latitude":35.06031651162793,"longitude":-78.93177023255808,"count":430,"log(count)":6.063785208687608},{"latitude":36.3888,"longitude":-76.0714,"count":3,"log(count)":1.0986122886681098},{"latitude":36.4565,"longitude":-76.6035,"count":1,"log(count)":0},{"latitude":36.32405555555555,"longitude":-76.98812222222222,"count":9,"log(count)":2.1972245773362196},{"latitude":35.368941697417,"longitude":-77.9861140221402,"count":271,"log(count)":5.602118820879701},{"latitude":34.52036315789474,"longitude":-77.8567894736842,"count":19,"log(count)":2.9444389791664403},{"latitude":34.66086417112298,"longitude":-79.07199946524065,"count":187,"log(count)":5.231108616854587},{"latitude":34.98547666666665,"longitude":-78.36858666666666,"count":30,"log(count)":3.4011973816621555},{"latitude":34.898004166666674,"longitude":-77.93319583333333,"count":24,"log(count)":3.1780538303479458},{"latitude":35.869711111111116,"longitude":-75.63362222222223,"count":9,"log(count)":2.1972245773362196},{"latitude":35.542325,"longitude":-78.39224545454546,"count":44,"log(count)":3.784189633918261},{"latitude":35.851576470588235,"longitude":-77.09811764705883,"count":17,"log(count)":2.833213344056216},{"latitude":34.228667483296206,"longitude":-77.91587037861916,"count":449,"log(count)":6.1070228877422545},{"latitude":36.290249122807005,"longitude":-76.23141052631577,"count":57,"log(count)":4.04305126783455},{"latitude":35.86516666666667,"longitude":-76.73665333333335,"count":15,"log(count)":2.70805020110221},{"latitude":35.8721,"longitude":-76.22321666666666,"count":6,"log(count)":1.791759469228055},{"latitude":35.527879999999996,"longitude":-76.96279333333334,"count":30,"log(count)":3.4011973816621555},{"latitude":36.04745833333333,"longitude":-76.98196666666668,"count":12,"log(count)":2.4849066497880004},{"latitude":36.3217,"longitude":-76.15974000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":34.598010204081625,"longitude":-78.63492040816328,"count":49,"log(count)":3.8918202981106265},{"latitude":34.755605263157896,"longitude":-76.74187894736842,"count":19,"log(count)":2.9444389791664403},{"latitude":34.9374,"longitude":-77.25319999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":34.28187636363636,"longitude":-78.70427181818184,"count":110,"log(count)":4.700480365792417},{"latitude":34.05790985915494,"longitude":-78.22998873239433,"count":71,"log(count)":4.2626798770413155},{"latitude":34.75225652173914,"longitude":-77.42343565217388,"count":115,"log(count)":4.74493212836325},{"latitude":47.5217,"longitude":-99.5752,"count":1,"log(count)":0},{"latitude":46.82469374999999,"longitude":-100.89921874999999,"count":32,"log(count)":3.4657359027997265},{"latitude":46.1188,"longitude":-100.65700000000001,"count":1,"log(count)":0},{"latitude":46.3782,"longitude":-102.32700000000001,"count":1,"log(count)":0},{"latitude":48.918350000000004,"longitude":-97.39885000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":48.4202,"longitude":-97.4157,"count":1,"log(count)":0},{"latitude":48.10588571428571,"longitude":-98.86121428571428,"count":7,"log(count)":1.9459101490553132},{"latitude":48.13675,"longitude":-99.21195,"count":2,"log(count)":0.6931471805599453},{"latitude":47.90637222222222,"longitude":-97.07825555555559,"count":36,"log(count)":3.58351893845611},{"latitude":47.5106,"longitude":-97.8374,"count":1,"log(count)":0},{"latitude":47.6801,"longitude":-99.1378,"count":1,"log(count)":0},{"latitude":46.87241250000001,"longitude":-98.78613750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":46.9244625,"longitude":-98.0318,"count":8,"log(count)":2.0794415416798357},{"latitude":46.874650467289726,"longitude":-96.8563196261682,"count":107,"log(count)":4.672828834461906},{"latitude":48.836,"longitude":-101.1595,"count":2,"log(count)":0.6931471805599453},{"latitude":48.82505,"longitude":-99.84866666666666,"count":6,"log(count)":1.791759469228055},{"latitude":48.23358404255318,"longitude":-101.31707446808511,"count":94,"log(count)":4.543294782270004},{"latitude":47.6278,"longitude":-101.29500000000002,"count":4,"log(count)":1.3862943611198906},{"latitude":47.29535,"longitude":-101.922,"count":2,"log(count)":0.6931471805599453},{"latitude":48.90275,"longitude":-103.1565,"count":2,"log(count)":0.6931471805599453},{"latitude":48.5909,"longitude":-102.67200000000001,"count":1,"log(count)":0},{"latitude":47.786750000000005,"longitude":-103.33018750000001,"count":16,"log(count)":2.772588722239781},{"latitude":46.6254,"longitude":-97.60385,"count":2,"log(count)":0.6931471805599453},{"latitude":46.24127142857143,"longitude":-96.74858571428571,"count":7,"log(count)":1.9459101490553132},{"latitude":46.038399999999996,"longitude":-97.3712,"count":2,"log(count)":0.6931471805599453},{"latitude":48.17035272727273,"longitude":-103.63847272727274,"count":55,"log(count)":4.007333185232471},{"latitude":48.04992,"longitude":-102.3186,"count":5,"log(count)":1.6094379124341003},{"latitude":46.81349247311827,"longitude":-100.77322580645163,"count":93,"log(count)":4.532599493153256},{"latitude":46.9737,"longitude":-103.574,"count":1,"log(count)":0},{"latitude":46.9437,"longitude":-103.98299999999999,"count":1,"log(count)":0},{"latitude":46.88293469387754,"longitude":-102.79489795918366,"count":49,"log(count)":3.8918202981106265},{"latitude":46.1227,"longitude":-103.146,"count":1,"log(count)":0},{"latitude":46.3765,"longitude":-98.7138,"count":1,"log(count)":0},{"latitude":47.3745,"longitude":-102.79700000000001,"count":1,"log(count)":0},{"latitude":40.05227000000001,"longitude":-80.86972499999999,"count":20,"log(count)":2.995732273553991},{"latitude":40.811195999999995,"longitude":-81.3807276363636,"count":275,"log(count)":5.616771097666572},{"latitude":38.87805,"longitude":-83.41695,"count":2,"log(count)":0.6931471805599453},{"latitude":40.73998387096774,"longitude":-84.11656129032257,"count":31,"log(count)":3.4339872044851463},{"latitude":40.825300000000006,"longitude":-82.26612857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":41.84161142857141,"longitude":-80.75402714285713,"count":70,"log(count)":4.248495242049359},{"latitude":39.37344999999999,"longitude":-82.13618333333334,"count":12,"log(count)":2.4849066497880004},{"latitude":40.59265,"longitude":-84.2874,"count":4,"log(count)":1.3862943611198906},{"latitude":38.95573636363636,"longitude":-83.92195454545455,"count":11,"log(count)":2.3978952727983707},{"latitude":39.44093772727272,"longitude":-84.47471818181819,"count":220,"log(count)":5.393627546352362},{"latitude":40.560050000000004,"longitude":-81.00985,"count":2,"log(count)":0.6931471805599453},{"latitude":40.11637999999999,"longitude":-83.75055,"count":10,"log(count)":2.302585092994046},{"latitude":39.91630662983425,"longitude":-83.8144817679558,"count":181,"log(count)":5.198497031265826},{"latitude":39.113776190476194,"longitude":-84.23410952380952,"count":21,"log(count)":3.044522437723423},{"latitude":39.45975,"longitude":-83.807,"count":2,"log(count)":0.6931471805599453},{"latitude":40.782712499999995,"longitude":-80.73809374999998,"count":16,"log(count)":2.772588722239781},{"latitude":40.277575000000006,"longitude":-81.884575,"count":8,"log(count)":2.0794415416798357},{"latitude":40.875249999999994,"longitude":-82.75434999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":41.48349985199802,"longitude":-81.64641948692643,"count":2027,"log(count)":7.614312146452},{"latitude":40.15954358974357,"longitude":-84.72045641025646,"count":39,"log(count)":3.6635616461296463},{"latitude":41.30615,"longitude":-84.4907875,"count":8,"log(count)":2.0794415416798357},{"latitude":40.24265333333334,"longitude":-83.01216666666666,"count":15,"log(count)":2.70805020110221},{"latitude":41.435332394366185,"longitude":-82.69290845070421,"count":71,"log(count)":4.2626798770413155},{"latitude":39.76262714285713,"longitude":-82.62507000000001,"count":70,"log(count)":4.248495242049359},{"latitude":39.605799999999995,"longitude":-83.5474,"count":3,"log(count)":1.0986122886681098},{"latitude":39.97664853932581,"longitude":-82.97064232209738,"count":1335,"log(count)":7.19668657083435},{"latitude":41.62175555555556,"longitude":-84.09244444444444,"count":9,"log(count)":2.1972245773362196},{"latitude":38.79997,"longitude":-82.218,"count":10,"log(count)":2.302585092994046},{"latitude":41.548474999999996,"longitude":-81.25002500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":39.7400536231884,"longitude":-83.99631304347822,"count":69,"log(count)":4.23410650459726},{"latitude":40.02851666666667,"longitude":-81.54230000000001,"count":24,"log(count)":3.1780538303479458},{"latitude":39.15645483162518,"longitude":-84.52107342606136,"count":1366,"log(count)":7.2196420401307355},{"latitude":41.043960000000006,"longitude":-83.65690666666666,"count":15,"log(count)":2.70805020110221},{"latitude":40.6507,"longitude":-83.5948,"count":1,"log(count)":0},{"latitude":40.327650000000006,"longitude":-81.1346,"count":2,"log(count)":0.6931471805599453},{"latitude":41.4426,"longitude":-84.1536,"count":1,"log(count)":0},{"latitude":39.216224999999994,"longitude":-83.538425,"count":4,"log(count)":1.3862943611198906},{"latitude":39.500157142857134,"longitude":-82.42041428571429,"count":7,"log(count)":1.9459101490553132},{"latitude":40.525,"longitude":-81.9889,"count":1,"log(count)":0},{"latitude":41.137483333333336,"longitude":-82.52085,"count":6,"log(count)":1.791759469228055},{"latitude":38.99548333333334,"longitude":-82.61833333333333,"count":6,"log(count)":1.791759469228055},{"latitude":40.371024999999996,"longitude":-80.65103749999999,"count":24,"log(count)":3.1780538303479458},{"latitude":40.392314285714285,"longitude":-82.47334285714285,"count":7,"log(count)":1.9459101490553132},{"latitude":41.677262222222225,"longitude":-81.33907111111111,"count":45,"log(count)":3.8066624897703196},{"latitude":38.50094615384615,"longitude":-82.54141538461538,"count":13,"log(count)":2.5649493574615367},{"latitude":40.06877999999999,"longitude":-82.47793600000001,"count":50,"log(count)":3.912023005428146},{"latitude":40.3823,"longitude":-83.71772,"count":5,"log(count)":1.6094379124341003},{"latitude":41.40608421052631,"longitude":-82.13230040485823,"count":247,"log(count)":5.5093883366279774},{"latitude":41.65732946979039,"longitude":-83.57014500616518,"count":811,"log(count)":6.698268054115413},{"latitude":39.855920000000005,"longitude":-83.36456000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":41.083506349206324,"longitude":-80.65493904761911,"count":315,"log(count)":5.752572638825633},{"latitude":40.57826896551723,"longitude":-83.1343724137931,"count":29,"log(count)":3.367295829986474},{"latitude":41.13121666666667,"longitude":-81.85013333333335,"count":24,"log(count)":3.1780538303479458},{"latitude":39.02647,"longitude":-82.08946999999998,"count":10,"log(count)":2.302585092994046},{"latitude":40.535666666666664,"longitude":-84.5849,"count":12,"log(count)":2.4849066497880004},{"latitude":40.06327441860465,"longitude":-84.2370627906977,"count":43,"log(count)":3.7612001156935624},{"latitude":39.6198,"longitude":-81.2337,"count":1,"log(count)":0},{"latitude":39.76819412258604,"longitude":-84.21868555835421,"count":1191,"log(count)":7.0825485693553},{"latitude":39.60086666666667,"longitude":-81.85383333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":40.40736666666667,"longitude":-82.79146666666668,"count":3,"log(count)":1.0986122886681098},{"latitude":39.947626666666665,"longitude":-82.01836333333334,"count":30,"log(count)":3.4011973816621555},{"latitude":41.531475,"longitude":-82.97897499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":41.113099999999996,"longitude":-84.60243750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":39.7619,"longitude":-82.2813,"count":6,"log(count)":1.791759469228055},{"latitude":39.68919090909091,"longitude":-82.98404545454544,"count":11,"log(count)":2.3978952727983707},{"latitude":39.13395,"longitude":-83.23316666666666,"count":6,"log(count)":1.791759469228055},{"latitude":41.157939024390245,"longitude":-81.2899731707317,"count":41,"log(count)":3.713572066704308},{"latitude":39.765594444444446,"longitude":-84.67169444444443,"count":18,"log(count)":2.8903717578961645},{"latitude":41.0035,"longitude":-83.99615,"count":2,"log(count)":0.6931471805599453},{"latitude":40.749428947368436,"longitude":-82.52180789473682,"count":38,"log(count)":3.6375861597263857},{"latitude":39.32264857142857,"longitude":-83.00972571428571,"count":35,"log(count)":3.5553480614894135},{"latitude":41.35075,"longitude":-83.13423666666667,"count":30,"log(count)":3.4011973816621555},{"latitude":38.78613333333334,"longitude":-82.91531428571429,"count":21,"log(count)":3.044522437723423},{"latitude":41.115120000000005,"longitude":-83.28767333333333,"count":15,"log(count)":2.70805020110221},{"latitude":40.302814285714284,"longitude":-84.17277857142858,"count":14,"log(count)":2.6390573296152584},{"latitude":41.07091513761469,"longitude":-81.52066903669719,"count":436,"log(count)":6.077642243349034},{"latitude":41.22447962962961,"longitude":-80.79773209876544,"count":162,"log(count)":5.087596335232384},{"latitude":40.410946153846155,"longitude":-81.5181923076923,"count":13,"log(count)":2.5649493574615367},{"latitude":40.23702,"longitude":-83.32358,"count":5,"log(count)":1.6094379124341003},{"latitude":40.871700000000004,"longitude":-84.5359,"count":3,"log(count)":1.0986122886681098},{"latitude":39.2104,"longitude":-82.4421,"count":3,"log(count)":1.0986122886681098},{"latitude":39.4571387755102,"longitude":-84.24795102040815,"count":49,"log(count)":3.8918202981106265},{"latitude":39.46432,"longitude":-81.37924,"count":5,"log(count)":1.6094379124341003},{"latitude":40.869525,"longitude":-81.84124375,"count":16,"log(count)":2.772588722239781},{"latitude":41.60965,"longitude":-84.645475,"count":4,"log(count)":1.3862943611198906},{"latitude":41.437940000000005,"longitude":-83.57068000000001,"count":25,"log(count)":3.2188758248682006},{"latitude":40.8992,"longitude":-83.2581,"count":3,"log(count)":1.0986122886681098},{"latitude":35.87648571428572,"longitude":-94.63404285714286,"count":7,"log(count)":1.9459101490553132},{"latitude":34.32326666666667,"longitude":-96.09137777777777,"count":9,"log(count)":2.1972245773362196},{"latitude":35.31265714285714,"longitude":-99.61120000000001,"count":7,"log(count)":1.9459101490553132},{"latitude":35.95269999999999,"longitude":-98.48045,"count":2,"log(count)":0.6931471805599453},{"latitude":33.968192307692306,"longitude":-96.41533846153847,"count":13,"log(count)":2.5649493574615367},{"latitude":35.142199999999995,"longitude":-98.30878124999998,"count":16,"log(count)":2.772588722239781},{"latitude":35.46888620689656,"longitude":-97.7745,"count":29,"log(count)":3.367295829986474},{"latitude":34.19237555555554,"longitude":-97.18182666666667,"count":45,"log(count)":3.8066624897703196},{"latitude":35.905209090909096,"longitude":-95.00571363636364,"count":22,"log(count)":3.091042453358316},{"latitude":33.999225,"longitude":-95.5245375,"count":8,"log(count)":2.0794415416798357},{"latitude":35.27551700000001,"longitude":-97.44742000000004,"count":100,"log(count)":4.605170185988092},{"latitude":34.53823333333333,"longitude":-96.335,"count":3,"log(count)":1.0986122886681098},{"latitude":34.617861904761895,"longitude":-98.42725158730158,"count":126,"log(count)":4.836281906951478},{"latitude":34.258833333333335,"longitude":-98.40740000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":36.62385,"longitude":-95.12780000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":35.96280689655173,"longitude":-96.20648275862068,"count":29,"log(count)":3.367295829986474},{"latitude":35.53419,"longitude":-98.87127999999998,"count":10,"log(count)":2.302585092994046},{"latitude":36.4848625,"longitude":-94.81713125000002,"count":16,"log(count)":2.772588722239781},{"latitude":36.042,"longitude":-98.9626,"count":1,"log(count)":0},{"latitude":36.2724,"longitude":-99.8758,"count":1,"log(count)":0},{"latitude":36.39290499999999,"longitude":-97.8704166666667,"count":60,"log(count)":4.0943445622221},{"latitude":34.7064,"longitude":-97.2426,"count":8,"log(count)":2.0794415416798357},{"latitude":35.05542307692306,"longitude":-97.91750769230772,"count":39,"log(count)":3.6635616461296463},{"latitude":36.76495,"longitude":-97.76485,"count":2,"log(count)":0.6931471805599453},{"latitude":34.6813,"longitude":-99.7517,"count":2,"log(count)":0.6931471805599453},{"latitude":35.2208,"longitude":-95.1211,"count":2,"log(count)":0.6931471805599453},{"latitude":35.084425,"longitude":-96.33195,"count":4,"log(count)":1.3862943611198906},{"latitude":34.64104210526315,"longitude":-99.3319447368421,"count":38,"log(count)":3.6375861597263857},{"latitude":34.1698,"longitude":-97.86346666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":34.250240000000005,"longitude":-96.66799999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":36.723749999999995,"longitude":-97.13841666666667,"count":6,"log(count)":1.791759469228055},{"latitude":35.91366666666667,"longitude":-97.89636666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":34.918733333333336,"longitude":-99.1098,"count":3,"log(count)":1.0986122886681098},{"latitude":35.03275,"longitude":-94.68717857142857,"count":14,"log(count)":2.6390573296152584},{"latitude":35.69106666666667,"longitude":-96.87237777777779,"count":9,"log(count)":2.1972245773362196},{"latitude":35.8582625,"longitude":-97.40791666666667,"count":24,"log(count)":3.1780538303479458},{"latitude":33.94431666666666,"longitude":-97.18910000000001,"count":6,"log(count)":1.791759469228055},{"latitude":36.2715,"longitude":-98.478,"count":1,"log(count)":0},{"latitude":34.0603125,"longitude":-96.75869999999999,"count":8,"log(count)":2.0794415416798357},{"latitude":36.26704285714286,"longitude":-95.2465857142857,"count":14,"log(count)":2.6390573296152584},{"latitude":35.05253529411765,"longitude":-97.42555882352943,"count":17,"log(count)":2.833213344056216},{"latitude":34.01491666666667,"longitude":-94.89875833333332,"count":12,"log(count)":2.4849066497880004},{"latitude":35.36132,"longitude":-95.58536000000001,"count":10,"log(count)":2.302585092994046},{"latitude":34.48504444444444,"longitude":-97.08155555555557,"count":9,"log(count)":2.1972245773362196},{"latitude":35.74046615384613,"longitude":-95.37156153846153,"count":65,"log(count)":4.174387269895637},{"latitude":36.4382,"longitude":-97.17723333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":36.780680000000004,"longitude":-95.62414,"count":5,"log(count)":1.6094379124341003},{"latitude":35.48218671963679,"longitude":-97.52499035187313,"count":881,"log(count)":6.78105762593618},{"latitude":35.65076399999999,"longitude":-95.97429200000002,"count":25,"log(count)":3.2188758248682006},{"latitude":36.32862432432432,"longitude":-96.10034594594593,"count":37,"log(count)":3.6109179126442243},{"latitude":36.865171428571436,"longitude":-94.8341642857143,"count":14,"log(count)":2.6390573296152584},{"latitude":36.25305,"longitude":-96.58745,"count":2,"log(count)":0.6931471805599453},{"latitude":36.08825714285714,"longitude":-96.98313571428572,"count":28,"log(count)":3.332204510175204},{"latitude":34.928332352941176,"longitude":-95.70367647058823,"count":34,"log(count)":3.5263605246161616},{"latitude":34.785250000000005,"longitude":-96.68373000000001,"count":20,"log(count)":2.995732273553991},{"latitude":35.322888461538454,"longitude":-96.96613076923077,"count":26,"log(count)":3.258096538021482},{"latitude":34.21563333333333,"longitude":-95.52643333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":36.31429411764705,"longitude":-95.62728823529413,"count":51,"log(count)":3.9318256327243257},{"latitude":35.19754285714286,"longitude":-96.6172857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":35.454255555555555,"longitude":-94.73810555555558,"count":18,"log(count)":2.8903717578961645},{"latitude":34.50155,"longitude":-97.890175,"count":12,"log(count)":2.4849066497880004},{"latitude":36.73096666666667,"longitude":-101.38766666666668,"count":3,"log(count)":1.0986122886681098},{"latitude":34.3926,"longitude":-99.01050000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":36.144361575179,"longitude":-95.92937215592667,"count":1257,"log(count)":7.136483208590247},{"latitude":35.984300000000005,"longitude":-95.54790294117646,"count":34,"log(count)":3.5263605246161616},{"latitude":36.72588437499999,"longitude":-95.95436250000002,"count":32,"log(count)":3.4657359027997265},{"latitude":35.280719999999995,"longitude":-99.06433999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":36.4313,"longitude":-99.39703999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":44.75702,"longitude":-117.83870000000002,"count":10,"log(count)":2.302585092994046},{"latitude":45.99898571428571,"longitude":-123.85442857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":45.91063333333334,"longitude":-122.96433333333334,"count":18,"log(count)":2.8903717578961645},{"latitude":43.299910526315784,"longitude":-124.2191052631579,"count":19,"log(count)":2.9444389791664403},{"latitude":43.19484117647058,"longitude":-123.35888235294115,"count":34,"log(count)":3.5263605246161616},{"latitude":44.38755714285714,"longitude":-118.91957142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":43.419700000000006,"longitude":-118.89925,"count":4,"log(count)":1.3862943611198906},{"latitude":42.357497209302316,"longitude":-122.86565581395348,"count":215,"log(count)":5.3706380281276624},{"latitude":42.1925,"longitude":-120.352,"count":1,"log(count)":0},{"latitude":44.050957823129245,"longitude":-123.10004761904756,"count":147,"log(count)":4.990432586778736},{"latitude":44.73621818181818,"longitude":-124.00754545454544,"count":11,"log(count)":2.3978952727983707},{"latitude":44.55313727272729,"longitude":-122.96365454545453,"count":110,"log(count)":4.700480365792417},{"latitude":44.029958823529405,"longitude":-116.99770588235296,"count":17,"log(count)":2.833213344056216},{"latitude":44.96231975308642,"longitude":-122.95128395061722,"count":162,"log(count)":5.087596335232384},{"latitude":45.83056666666667,"longitude":-119.70733333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":45.53533853606026,"longitude":-122.59654251883747,"count":929,"log(count)":6.834108738813838},{"latitude":44.930025,"longitude":-123.24850000000002,"count":12,"log(count)":2.4849066497880004},{"latitude":45.40495,"longitude":-120.714,"count":2,"log(count)":0.6931471805599453},{"latitude":45.57376666666667,"longitude":-123.83133333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":44.5914,"longitude":-120.26700000000001,"count":1,"log(count)":0},{"latitude":45.212875000000004,"longitude":-123.18799999999999,"count":20,"log(count)":2.995732273553991},{"latitude":44.554541379310336,"longitude":-123.28551724137932,"count":29,"log(count)":3.367295829986474},{"latitude":45.36526864406778,"longitude":-122.52920338983051,"count":118,"log(count)":4.770684624465665},{"latitude":44.2713625,"longitude":-120.789375,"count":8,"log(count)":2.0794415416798357},{"latitude":42.220645454545455,"longitude":-124.32699999999998,"count":11,"log(count)":2.3978952727983707},{"latitude":44.118830769230755,"longitude":-121.26489743589744,"count":39,"log(count)":3.6635616461296463},{"latitude":45.641225,"longitude":-121.57600000000001,"count":8,"log(count)":2.0794415416798357},{"latitude":44.59513333333334,"longitude":-121.21744444444442,"count":9,"log(count)":2.1972245773362196},{"latitude":42.36981492537313,"longitude":-123.45289552238805,"count":67,"log(count)":4.204692619390966},{"latitude":42.271699999999996,"longitude":-121.73592105263158,"count":38,"log(count)":3.6375861597263857},{"latitude":45.55845,"longitude":-121.20899999999999,"count":6,"log(count)":1.791759469228055},{"latitude":45.48967416666666,"longitude":-122.89144999999999,"count":120,"log(count)":4.787491742782046},{"latitude":45.71916071428571,"longitude":-118.89475000000002,"count":28,"log(count)":3.332204510175204},{"latitude":45.3271,"longitude":-118.087,"count":2,"log(count)":0.6931471805599453},{"latitude":40.0181,"longitude":-78.48074166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":40.35893333333333,"longitude":-75.9025770833333,"count":96,"log(count)":4.564348191467836},{"latitude":40.17263048780488,"longitude":-74.94358536585365,"count":82,"log(count)":4.406719247264253},{"latitude":40.012441666666675,"longitude":-75.71148333333333,"count":48,"log(count)":3.871201010907891},{"latitude":40.95947692307691,"longitude":-78.37178461538461,"count":13,"log(count)":2.5649493574615367},{"latitude":40.20373529411762,"longitude":-77.13228991596642,"count":119,"log(count)":4.77912349311153},{"latitude":39.87968590604026,"longitude":-75.34767348993287,"count":298,"log(count)":5.697093486505405},{"latitude":42.11042962962964,"longitude":-80.07097195767196,"count":189,"log(count)":5.241747015059643},{"latitude":39.923360465116275,"longitude":-79.72619418604648,"count":86,"log(count)":4.454347296253507},{"latitude":40.599599999999995,"longitude":-77.28694999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":40.04798207792209,"longitude":-76.29917012987015,"count":385,"log(count)":5.953243334287785},{"latitude":40.60561120331949,"longitude":-75.48267344398339,"count":241,"log(count)":5.484796933490655},{"latitude":41.14817203166224,"longitude":-75.92694881266482,"count":379,"log(count)":5.937536205082426},{"latitude":41.032709183673454,"longitude":-75.30055204081634,"count":98,"log(count)":4.584967478670572},{"latitude":40.678433132530095,"longitude":-75.29249939759036,"count":166,"log(count)":5.111987788356544},{"latitude":40.850312499999994,"longitude":-76.676603125,"count":32,"log(count)":3.4657359027997265},{"latitude":39.993532279592664,"longitude":-75.15575317878468,"count":2847,"log(count)":7.954021087278037},{"latitude":40.087143749999996,"longitude":-79.00121250000002,"count":16,"log(count)":2.772588722239781},{"latitude":41.84448,"longitude":-77.1999,"count":5,"log(count)":1.6094379124341003},{"latitude":40.184799999999996,"longitude":-80.15750520833332,"count":96,"log(count)":4.564348191467836},{"latitude":40.350168749999995,"longitude":-79.6529888888889,"count":144,"log(count)":4.969813299576001},{"latitude":41.49188,"longitude":-75.91742,"count":5,"log(count)":1.6094379124341003},{"latitude":39.955555421686746,"longitude":-76.74019126506025,"count":332,"log(count)":5.805134968916488},{"latitude":41.370400000000004,"longitude":-79.2986,"count":2,"log(count)":0.6931471805599453},{"latitude":41.83815833333333,"longitude":-78.51606666666666,"count":12,"log(count)":2.4849066497880004},{"latitude":39.845415384615386,"longitude":-77.17044615384613,"count":26,"log(count)":3.258096538021482},{"latitude":40.43619602063375,"longitude":-79.94524605747971,"count":1357,"log(count)":7.213031659834869},{"latitude":40.70765333333333,"longitude":-79.52926666666669,"count":15,"log(count)":2.70805020110221},{"latitude":40.51504634146342,"longitude":-78.38180975609755,"count":41,"log(count)":3.713572066704308},{"latitude":41.813415,"longitude":-76.53896,"count":20,"log(count)":2.995732273553991},{"latitude":40.873315625000004,"longitude":-79.924896875,"count":32,"log(count)":3.4657359027997265},{"latitude":40.33481643835617,"longitude":-78.88442465753425,"count":73,"log(count)":4.290459441148391},{"latitude":41.51,"longitude":-78.2376,"count":1,"log(count)":0},{"latitude":40.85005,"longitude":-75.84543571428571,"count":14,"log(count)":2.6390573296152584},{"latitude":41.048028571428574,"longitude":-76.34282380952381,"count":21,"log(count)":3.044522437723423},{"latitude":41.637600000000006,"longitude":-80.20743999999999,"count":15,"log(count)":2.70805020110221},{"latitude":40.27535839080459,"longitude":-76.85390873563219,"count":435,"log(count)":6.075346031088684},{"latitude":41.35935714285714,"longitude":-78.69167142857142,"count":7,"log(count)":1.9459101490553132},{"latitude":41.47773333333333,"longitude":-79.42283333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":39.90338153846153,"longitude":-77.65445999999999,"count":65,"log(count)":4.174387269895637},{"latitude":39.986925,"longitude":-78.043575,"count":4,"log(count)":1.3862943611198906},{"latitude":40.38213125,"longitude":-78.00118124999999,"count":16,"log(count)":2.772588722239781},{"latitude":40.65298857142858,"longitude":-79.09130857142858,"count":35,"log(count)":3.5553480614894135},{"latitude":41.05752,"longitude":-79.13886,"count":5,"log(count)":1.6094379124341003},{"latitude":41.43111153846154,"longitude":-75.63723461538466,"count":78,"log(count)":4.356708826689592},{"latitude":40.982424137931034,"longitude":-80.34745862068964,"count":58,"log(count)":4.060443010546419},{"latitude":41.248082000000004,"longitude":-77.01107400000002,"count":50,"log(count)":3.912023005428146},{"latitude":41.24900714285714,"longitude":-80.41639642857142,"count":28,"log(count)":3.332204510175204},{"latitude":40.642759999999996,"longitude":-77.53817999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":40.16653083333334,"longitude":-75.36140416666667,"count":120,"log(count)":4.787491742782046},{"latitude":40.9634,"longitude":-76.6127,"count":1,"log(count)":0},{"latitude":40.39938421052632,"longitude":-77.12877368421053,"count":19,"log(count)":2.9444389791664403},{"latitude":41.30458125,"longitude":-74.97383124999999,"count":16,"log(count)":2.772588722239781},{"latitude":41.62413333333334,"longitude":-77.8169,"count":3,"log(count)":1.0986122886681098},{"latitude":40.73932264150942,"longitude":-76.16834716981134,"count":53,"log(count)":3.970291913552122},{"latitude":40.78503333333334,"longitude":-76.86906666666665,"count":6,"log(count)":1.791759469228055},{"latitude":41.52445,"longitude":-76.47534999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":41.827799999999996,"longitude":-75.7442375,"count":8,"log(count)":2.0794415416798357},{"latitude":40.988366666666664,"longitude":-76.8985,"count":3,"log(count)":1.0986122886681098},{"latitude":41.44367999999999,"longitude":-79.75200000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":41.852722222222226,"longitude":-79.23778888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":41.46801428571428,"longitude":-75.32617142857144,"count":7,"log(count)":1.9459101490553132},{"latitude":39.86963125,"longitude":-80.1554,"count":16,"log(count)":2.772588722239781},{"latitude":40.344549473684204,"longitude":-76.43559473684208,"count":95,"log(count)":4.553876891600541},{"latitude":40.673320833333335,"longitude":-80.29705416666668,"count":48,"log(count)":3.871201010907891},{"latitude":40.87947666666666,"longitude":-77.87230666666666,"count":30,"log(count)":3.4011973816621555},{"latitude":41.114775,"longitude":-77.409325,"count":4,"log(count)":1.3862943611198906},{"latitude":41.726733333333335,"longitude":-71.29861666666667,"count":6,"log(count)":1.791759469228055},{"latitude":41.69760212765957,"longitude":-71.50214893617023,"count":47,"log(count)":3.8501476017100584},{"latitude":41.55908125,"longitude":-71.275575,"count":16,"log(count)":2.772588722239781},{"latitude":41.833222036082496,"longitude":-71.42756907216494,"count":776,"log(count)":6.654152520183219},{"latitude":41.471153571428566,"longitude":-71.624625,"count":28,"log(count)":3.332204510175204},{"latitude":33.94029431818182,"longitude":-81.16420340909089,"count":176,"log(count)":5.170483995038151},{"latitude":33.92649032258064,"longitude":-80.37493978494625,"count":93,"log(count)":4.532599493153256},{"latitude":34.711825,"longitude":-83.01835249999999,"count":40,"log(count)":3.6888794541139363},{"latitude":34.832943544303795,"longitude":-82.37553164556962,"count":395,"log(count)":5.978885764901122},{"latitude":34.18792222222223,"longitude":-80.22393333333333,"count":9,"log(count)":2.1972245773362196},{"latitude":34.200856249999994,"longitude":-82.45009375,"count":16,"log(count)":2.772588722239781},{"latitude":33.53911364653245,"longitude":-81.76108836689036,"count":447,"log(count)":6.102558594613569},{"latitude":32.996619230769234,"longitude":-81.29679615384617,"count":26,"log(count)":3.258096538021482},{"latitude":34.53081639344264,"longitude":-82.65173278688522,"count":244,"log(count)":5.497168225293202},{"latitude":33.27791904761905,"longitude":-81.06056666666669,"count":21,"log(count)":3.044522437723423},{"latitude":33.29926428571428,"longitude":-81.35727857142857,"count":14,"log(count)":2.6390573296152584},{"latitude":32.36552817204304,"longitude":-80.73032967741936,"count":465,"log(count)":6.142037405587356},{"latitude":33.06667621951218,"longitude":-80.05560975609755,"count":164,"log(count)":5.099866427824199},{"latitude":33.67249523809524,"longitude":-80.8069238095238,"count":21,"log(count)":3.044522437723423},{"latitude":35.06884705882352,"longitude":-81.63784117647057,"count":51,"log(count)":3.9318256327243257},{"latitude":34.70911333333333,"longitude":-81.17375111111113,"count":45,"log(count)":3.8066624897703196},{"latitude":34.702396428571426,"longitude":-80.10979642857144,"count":28,"log(count)":3.332204510175204},{"latitude":33.6946125,"longitude":-80.219975,"count":8,"log(count)":2.0794415416798357},{"latitude":32.912291358024675,"longitude":-80.65953703703703,"count":81,"log(count)":4.394449154672439},{"latitude":34.3173885496183,"longitude":-79.97978473282441,"count":131,"log(count)":4.875197323201151},{"latitude":34.39957142857143,"longitude":-79.37677500000004,"count":56,"log(count)":4.02535169073515},{"latitude":33.01506982248522,"longitude":-80.22678520710063,"count":169,"log(count)":5.1298987149230735},{"latitude":33.68297272727272,"longitude":-81.9741090909091,"count":11,"log(count)":2.3978952727983707},{"latitude":34.368663636363635,"longitude":-81.07818181818182,"count":11,"log(count)":2.3978952727983707},{"latitude":34.10694136125654,"longitude":-79.77404502617799,"count":191,"log(count)":5.25227342804663},{"latitude":33.42719999999999,"longitude":-79.33333620689655,"count":58,"log(count)":4.060443010546419},{"latitude":34.197560869565216,"longitude":-82.15186521739129,"count":46,"log(count)":3.828641396489095},{"latitude":32.771644444444455,"longitude":-81.13427407407407,"count":27,"log(count)":3.295836866004329},{"latitude":33.785943072289136,"longitude":-78.9175956325301,"count":664,"log(count)":6.498282149476434},{"latitude":32.4152962962963,"longitude":-81.0029419753086,"count":81,"log(count)":4.394449154672439},{"latitude":34.24470232558139,"longitude":-80.66435348837209,"count":43,"log(count)":3.7612001156935624},{"latitude":34.74101263157896,"longitude":-80.76189052631578,"count":95,"log(count)":4.553876891600541},{"latitude":34.48960833333334,"longitude":-82.00471666666667,"count":48,"log(count)":3.871201010907891},{"latitude":34.174688679245286,"longitude":-79.33727358490566,"count":53,"log(count)":3.970291913552122},{"latitude":34.62701372549018,"longitude":-79.6624431372549,"count":51,"log(count)":3.9318256327243257},{"latitude":33.9011,"longitude":-82.342125,"count":4,"log(count)":1.3862943611198906},{"latitude":34.25754347826087,"longitude":-81.53303043478262,"count":23,"log(count)":3.1354942159291497},{"latitude":33.472188620689636,"longitude":-80.77643758620691,"count":290,"log(count)":5.66988092298052},{"latitude":34.82637636363637,"longitude":-82.64899818181819,"count":55,"log(count)":4.007333185232471},{"latitude":33.9246,"longitude":-81.71127999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":34.72418235294116,"longitude":-81.61524509803922,"count":51,"log(count)":3.9318256327243257},{"latitude":33.65787241379309,"longitude":-79.69837931034482,"count":29,"log(count)":3.367295829986474},{"latitude":34.95524209354124,"longitude":-81.05423207126952,"count":449,"log(count)":6.1070228877422545},{"latitude":34.948380501392734,"longitude":-81.9966774373259,"count":359,"log(count)":5.883322388488279},{"latitude":34.03974454685102,"longitude":-80.9945906298003,"count":651,"log(count)":6.478509642208569},{"latitude":32.844363832658594,"longitude":-80.00804385964909,"count":741,"log(count)":6.608000625296087},{"latitude":45.6186,"longitude":-97.7919,"count":1,"log(count)":0},{"latitude":42.721399999999996,"longitude":-96.60133333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":43.11533333333333,"longitude":-99.07733333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":44.5797,"longitude":-97.2123,"count":1,"log(count)":0},{"latitude":43.7997,"longitude":-98.9929,"count":1,"log(count)":0},{"latitude":43.46556842105264,"longitude":-96.77005789473684,"count":19,"log(count)":2.9444389791664403},{"latitude":43.1839,"longitude":-97.6378,"count":1,"log(count)":0},{"latitude":43.544651200000004,"longitude":-96.73168120000008,"count":250,"log(count)":5.521460917862246},{"latitude":43.7259,"longitude":-97.3875,"count":1,"log(count)":0},{"latitude":44.396480000000004,"longitude":-100.24734,"count":5,"log(count)":1.6094379124341003},{"latitude":43.92005,"longitude":-97.09885,"count":2,"log(count)":0.6931471805599453},{"latitude":44.0167,"longitude":-97.5405,"count":1,"log(count)":0},{"latitude":44.3138875,"longitude":-96.82768750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":43.3456,"longitude":-99.8966,"count":2,"log(count)":0.6931471805599453},{"latitude":45.50605517241378,"longitude":-98.46955172413792,"count":29,"log(count)":3.367295829986474},{"latitude":45.79083333333333,"longitude":-97.028,"count":3,"log(count)":1.0986122886681098},{"latitude":43.4311,"longitude":-103.48899999999999,"count":1,"log(count)":0},{"latitude":43.78183333333334,"longitude":-103.51633333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":44.0704,"longitude":-99.58229999999999,"count":3,"log(count)":1.0986122886681098},{"latitude":45.45245,"longitude":-97.695,"count":2,"log(count)":0.6931471805599453},{"latitude":44.90068333333334,"longitude":-97.12698333333333,"count":6,"log(count)":1.791759469228055},{"latitude":44.66785,"longitude":-103.848,"count":2,"log(count)":0.6931471805599453},{"latitude":43.1751,"longitude":-101.73700000000001,"count":1,"log(count)":0},{"latitude":45.4167,"longitude":-99.3194,"count":1,"log(count)":0},{"latitude":45.5404,"longitude":-100.434,"count":1,"log(count)":0},{"latitude":42.88522222222222,"longitude":-97.38853333333333,"count":9,"log(count)":2.1972245773362196},{"latitude":43.1224125,"longitude":-98.38708749999998,"count":8,"log(count)":2.0794415416798357},{"latitude":43.99,"longitude":-98.14436666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":43.70874166666666,"longitude":-98.04322499999999,"count":12,"log(count)":2.4849066497880004},{"latitude":44.36213333333333,"longitude":-98.2146,"count":3,"log(count)":1.0986122886681098},{"latitude":44.8571,"longitude":-98.32710000000002,"count":3,"log(count)":1.0986122886681098},{"latitude":43.29895555555555,"longitude":-100.68755555555556,"count":9,"log(count)":2.1972245773362196},{"latitude":45.9408,"longitude":-102.15899999999999,"count":1,"log(count)":0},{"latitude":44.34607,"longitude":-103.2125,"count":10,"log(count)":2.302585092994046},{"latitude":43.3162923076923,"longitude":-102.46776923076924,"count":13,"log(count)":2.5649493574615367},{"latitude":45.0475,"longitude":-101.602,"count":1,"log(count)":0},{"latitude":44.99795,"longitude":-101.23533333333334,"count":6,"log(count)":1.791759469228055},{"latitude":44.07620000000001,"longitude":-103.2124883720931,"count":86,"log(count)":4.454347296253507},{"latitude":44.42686,"longitude":-103.843,"count":5,"log(count)":1.6094379124341003},{"latitude":42.895849999999996,"longitude":-98.04055,"count":2,"log(count)":0.6931471805599453},{"latitude":43.574,"longitude":-100.762,"count":1,"log(count)":0},{"latitude":31.758966666666666,"longitude":-95.64070740740739,"count":27,"log(count)":3.295836866004329},{"latitude":32.322019999999995,"longitude":-102.5406,"count":5,"log(count)":1.6094379124341003},{"latitude":31.331575949367096,"longitude":-94.70807721518985,"count":79,"log(count)":4.3694478524670215},{"latitude":28.01216,"longitude":-97.07363999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":34.8962,"longitude":-101.23,"count":1,"log(count)":0},{"latitude":29.08108333333333,"longitude":-98.63000555555556,"count":18,"log(count)":2.8903717578961645},{"latitude":29.8244,"longitude":-96.16893333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":34.2225,"longitude":-102.72399999999999,"count":1,"log(count)":0},{"latitude":29.662433333333336,"longitude":-98.96611666666666,"count":6,"log(count)":1.791759469228055},{"latitude":30.127595238095235,"longitude":-97.37313809523808,"count":21,"log(count)":3.044522437723423},{"latitude":28.381671428571426,"longitude":-97.7414142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":31.09896878306877,"longitude":-97.66036507936502,"count":378,"log(count)":5.934894195619588},{"latitude":29.45007034956298,"longitude":-98.49845018726585,"count":1602,"log(count)":7.379008127628304},{"latitude":30.045,"longitude":-98.3401,"count":1,"log(count)":0},{"latitude":32.0207,"longitude":-97.4947,"count":1,"log(count)":0},{"latitude":33.431593650793644,"longitude":-94.12969841269843,"count":63,"log(count)":4.143134726391533},{"latitude":29.369963636363632,"longitude":-95.31794285714287,"count":77,"log(count)":4.343805421853684},{"latitude":30.633776086956527,"longitude":-96.34046739130436,"count":138,"log(count)":4.927253685157205},{"latitude":30.143459999999997,"longitude":-103.57959999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":27.2327,"longitude":-98.1475,"count":1,"log(count)":0},{"latitude":31.758435714285714,"longitude":-99.00005714285713,"count":14,"log(count)":2.6390573296152584},{"latitude":30.432666666666666,"longitude":-96.65793333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":30.692952631578947,"longitude":-98.25108947368422,"count":19,"log(count)":2.9444389791664403},{"latitude":29.937866666666665,"longitude":-97.58081666666665,"count":6,"log(count)":1.791759469228055},{"latitude":32.29178,"longitude":-99.34232,"count":5,"log(count)":1.6094379124341003},{"latitude":26.01308928571429,"longitude":-97.53652857142858,"count":56,"log(count)":4.02535169073515},{"latitude":32.9933,"longitude":-94.96756,"count":5,"log(count)":1.6094379124341003},{"latitude":35.261250000000004,"longitude":-101.2815,"count":2,"log(count)":0.6931471805599453},{"latitude":33.11033,"longitude":-94.38424,"count":10,"log(count)":2.302585092994046},{"latitude":34.5527,"longitude":-102.313,"count":2,"log(count)":0.6931471805599453},{"latitude":29.77242222222222,"longitude":-94.6431777777778,"count":9,"log(count)":2.1972245773362196},{"latitude":31.930186666666664,"longitude":-95.22769999999997,"count":15,"log(count)":2.70805020110221},{"latitude":34.423725,"longitude":-100.1995,"count":4,"log(count)":1.3862943611198906},{"latitude":33.75423333333333,"longitude":-98.25313333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":33.7216,"longitude":-102.758,"count":1,"log(count)":0},{"latitude":31.8272,"longitude":-99.427,"count":1,"log(count)":0},{"latitude":33.09560597014925,"longitude":-96.70765671641794,"count":67,"log(count)":4.204692619390966},{"latitude":29.729997058823525,"longitude":-98.19923235294115,"count":34,"log(count)":3.5263605246161616},{"latitude":31.2078,"longitude":-99.8678,"count":1,"log(count)":0},{"latitude":33.63198,"longitude":-97.13015999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":31.152988679245276,"longitude":-97.88335094339624,"count":53,"log(count)":3.970291913552122},{"latitude":34.001,"longitude":-100.305,"count":1,"log(count)":0},{"latitude":33.636966666666666,"longitude":-101.34033333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":31.0433,"longitude":-104.82700000000001,"count":1,"log(count)":0},{"latitude":36.0683,"longitude":-102.516,"count":1,"log(count)":0},{"latitude":32.78631787755101,"longitude":-96.79668171428553,"count":1225,"log(count)":7.110696122978827},{"latitude":32.77666,"longitude":-101.9656,"count":5,"log(count)":1.6094379124341003},{"latitude":29.184266666666662,"longitude":-97.23483333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":34.97233333333333,"longitude":-102.49333333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":33.114280898876416,"longitude":-97.04211123595506,"count":89,"log(count)":4.48863636973214},{"latitude":28.52763333333333,"longitude":-99.8599,"count":3,"log(count)":1.0986122886681098},{"latitude":27.683433333333337,"longitude":-98.41373333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":32.41846666666667,"longitude":-98.86416666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":31.85538437499999,"longitude":-102.38978125,"count":96,"log(count)":4.564348191467836},{"latitude":30.01665,"longitude":-100.208,"count":2,"log(count)":0.6931471805599453},{"latitude":31.7945869955157,"longitude":-106.40291928251125,"count":223,"log(count)":5.407171771460119},{"latitude":32.39935238095238,"longitude":-96.7967380952381,"count":21,"log(count)":3.044522437723423},{"latitude":32.19553333333334,"longitude":-98.18498333333332,"count":6,"log(count)":1.791759469228055},{"latitude":31.29076,"longitude":-96.99796,"count":5,"log(count)":1.6094379124341003},{"latitude":33.602675000000005,"longitude":-96.1533375,"count":8,"log(count)":2.0794415416798357},{"latitude":29.935549999999996,"longitude":-96.87161666666667,"count":6,"log(count)":1.791759469228055},{"latitude":33.9574,"longitude":-99.7015,"count":1,"log(count)":0},{"latitude":29.618571612903242,"longitude":-95.63107999999997,"count":155,"log(count)":5.043425116919247},{"latitude":33.135425,"longitude":-95.21665,"count":4,"log(count)":1.3862943611198906},{"latitude":31.66402,"longitude":-96.25825999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":28.747866666666667,"longitude":-99.1512,"count":3,"log(count)":1.0986122886681098},{"latitude":32.8138,"longitude":-102.60228571428571,"count":7,"log(count)":1.9459101490553132},{"latitude":29.396817391304353,"longitude":-94.94936739130434,"count":138,"log(count)":4.927253685157205},{"latitude":33.191050000000004,"longitude":-101.31400000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":30.2846,"longitude":-98.8876,"count":1,"log(count)":0},{"latitude":28.566499999999998,"longitude":-97.36185,"count":2,"log(count)":0.6931471805599453},{"latitude":29.4578,"longitude":-97.2435,"count":1,"log(count)":0},{"latitude":35.53655384615384,"longitude":-100.9673076923077,"count":13,"log(count)":2.5649493574615367},{"latitude":33.6730105263158,"longitude":-96.61671578947369,"count":19,"log(count)":2.9444389791664403},{"latitude":32.482815909090924,"longitude":-94.76413295454545,"count":176,"log(count)":5.170483995038151},{"latitude":30.51278333333333,"longitude":-95.96668333333332,"count":12,"log(count)":2.4849066497880004},{"latitude":29.586656521739137,"longitude":-98.03265652173911,"count":23,"log(count)":3.1354942159291497},{"latitude":34.1615,"longitude":-101.78599999999999,"count":7,"log(count)":1.9459101490553132},{"latitude":31.7056,"longitude":-98.1226,"count":2,"log(count)":0.6931471805599453},{"latitude":34.3037,"longitude":-99.7733,"count":1,"log(count)":0},{"latitude":30.31453,"longitude":-94.32206,"count":10,"log(count)":2.302585092994046},{"latitude":29.801853583389235,"longitude":-95.39653546550564,"count":2986,"log(count)":8.001689978099135},{"latitude":32.53042033898305,"longitude":-94.3673254237288,"count":59,"log(count)":4.07753744390572},{"latitude":36.050700000000006,"longitude":-102.5005,"count":2,"log(count)":0.6931471805599453},{"latitude":33.1505,"longitude":-99.7241,"count":1,"log(count)":0},{"latitude":29.971012244897963,"longitude":-97.94572857142853,"count":49,"log(count)":3.8918202981106265},{"latitude":32.22837,"longitude":-95.81924666666663,"count":30,"log(count)":3.4011973816621555},{"latitude":26.221593999999993,"longitude":-98.198672,"count":100,"log(count)":4.605170185988092},{"latitude":32.00360833333333,"longitude":-97.18409166666665,"count":12,"log(count)":2.4849066497880004},{"latitude":33.573,"longitude":-102.331,"count":11,"log(count)":2.3978952727983707},{"latitude":32.377375,"longitude":-97.72455,"count":4,"log(count)":1.3862943611198906},{"latitude":33.10683636363637,"longitude":-95.65273636363636,"count":11,"log(count)":2.3978952727983707},{"latitude":31.320041666666665,"longitude":-95.46369166666665,"count":12,"log(count)":2.4849066497880004},{"latitude":32.25401176470588,"longitude":-101.45511764705883,"count":17,"log(count)":2.833213344056216},{"latitude":31.699299999999997,"longitude":-105.75266666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":33.160880000000006,"longitude":-96.07084000000002,"count":15,"log(count)":2.70805020110221},{"latitude":35.66438333333333,"longitude":-101.41650000000003,"count":12,"log(count)":2.4849066497880004},{"latitude":33.256,"longitude":-98.2213,"count":1,"log(count)":0},{"latitude":28.8985,"longitude":-96.6305,"count":2,"log(count)":0.6931471805599453},{"latitude":30.765255555555555,"longitude":-94.01294444444444,"count":9,"log(count)":2.1972245773362196},{"latitude":30.018246073298418,"longitude":-94.0685717277487,"count":191,"log(count)":5.25227342804663},{"latitude":27.301166666666663,"longitude":-98.68213333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":27.73732222222222,"longitude":-98.08183888888891,"count":18,"log(count)":2.8903717578961645},{"latitude":32.47146086956521,"longitude":-97.29384782608699,"count":23,"log(count)":3.1354942159291497},{"latitude":32.741485714285716,"longitude":-99.89844285714285,"count":7,"log(count)":1.9459101490553132},{"latitude":29.0299,"longitude":-97.7448,"count":1,"log(count)":0},{"latitude":32.682143749999994,"longitude":-96.31688125000001,"count":32,"log(count)":3.4657359027997265},{"latitude":29.883960000000002,"longitude":-98.77941999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":26.8264,"longitude":-97.7509,"count":1,"log(count)":0},{"latitude":30.037183333333335,"longitude":-99.14141666666667,"count":6,"log(count)":1.791759469228055},{"latitude":30.4885,"longitude":-99.7752,"count":1,"log(count)":0},{"latitude":27.481933333333334,"longitude":-97.68026666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":28.4352,"longitude":-99.2359,"count":1,"log(count)":0},{"latitude":33.664530232558135,"longitude":-95.55467209302324,"count":86,"log(count)":4.454347296253507},{"latitude":34.0256,"longitude":-102.334,"count":4,"log(count)":1.3862943611198906},{"latitude":31.092657142857142,"longitude":-98.14137142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":29.2907,"longitude":-97.1491,"count":1,"log(count)":0},{"latitude":30.338466666666665,"longitude":-96.8741,"count":3,"log(count)":1.0986122886681098},{"latitude":31.226775000000004,"longitude":-96.0083,"count":4,"log(count)":1.3862943611198906},{"latitude":30.146037037037036,"longitude":-94.90988148148148,"count":27,"log(count)":3.295836866004329},{"latitude":31.641,"longitude":-96.45570000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":36.4207,"longitude":-100.16,"count":1,"log(count)":0},{"latitude":28.271599999999996,"longitude":-98.14086666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":30.7390125,"longitude":-98.5772375,"count":8,"log(count)":2.0794415416798357},{"latitude":33.570900647249196,"longitude":-101.86430744336569,"count":309,"log(count)":5.733341276897746},{"latitude":33.161525,"longitude":-101.74099999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":30.951019999999993,"longitude":-95.97301999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":32.78445555555555,"longitude":-94.35711111111112,"count":9,"log(count)":2.1972245773362196},{"latitude":32.12338,"longitude":-101.795,"count":5,"log(count)":1.6094379124341003},{"latitude":28.958271428571432,"longitude":-95.94695714285714,"count":7,"log(count)":1.9459101490553132},{"latitude":28.6103,"longitude":-100.399,"count":2,"log(count)":0.6931471805599453},{"latitude":31.1313,"longitude":-99.3375,"count":1,"log(count)":0},{"latitude":31.54660530973452,"longitude":-97.15212920353986,"count":113,"log(count)":4.727387818712341},{"latitude":29.280327272727273,"longitude":-98.92015454545454,"count":11,"log(count)":2.3978952727983707},{"latitude":31.972512244897963,"longitude":-102.14091836734696,"count":49,"log(count)":3.8918202981106265},{"latitude":30.799325000000003,"longitude":-96.98100000000001,"count":8,"log(count)":2.0794415416798357},{"latitude":33.646825,"longitude":-97.77415,"count":4,"log(count)":1.3862943611198906},{"latitude":30.239111363636365,"longitude":-95.45936136363638,"count":132,"log(count)":4.882801922586371},{"latitude":35.9615,"longitude":-101.988,"count":2,"log(count)":0.6931471805599453},{"latitude":33.14463333333333,"longitude":-94.69426666666665,"count":3,"log(count)":1.0986122886681098},{"latitude":31.620396666666668,"longitude":-94.62409333333333,"count":30,"log(count)":3.4011973816621555},{"latitude":32.071325,"longitude":-96.42977499999999,"count":8,"log(count)":2.0794415416798357},{"latitude":30.85895,"longitude":-93.769175,"count":4,"log(count)":1.3862943611198906},{"latitude":32.467999999999996,"longitude":-100.41233333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":27.749432593856646,"longitude":-97.41506774744035,"count":586,"log(count)":6.373319789577012},{"latitude":36.3912,"longitude":-100.81,"count":1,"log(count)":0},{"latitude":35.2506,"longitude":-102.46,"count":1,"log(count)":0},{"latitude":30.135612500000004,"longitude":-93.89236666666666,"count":24,"log(count)":3.1780538303479458},{"latitude":32.7455,"longitude":-98.19537500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":32.1964,"longitude":-94.32156363636363,"count":11,"log(count)":2.3978952727983707},{"latitude":32.8084,"longitude":-97.71615000000001,"count":24,"log(count)":3.1780538303479458},{"latitude":34.5018,"longitude":-102.8575,"count":2,"log(count)":0.6931471805599453},{"latitude":30.886166666666668,"longitude":-102.88366666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":30.727566666666664,"longitude":-94.97865,"count":6,"log(count)":1.791759469228055},{"latitude":35.2151917647059,"longitude":-101.83397647058824,"count":255,"log(count)":5.541263545158426},{"latitude":29.5606,"longitude":-104.367,"count":1,"log(count)":0},{"latitude":32.86576666666667,"longitude":-95.78366666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":35.14363650793652,"longitude":-101.8813492063492,"count":63,"log(count)":4.143134726391533},{"latitude":29.6702,"longitude":-100.01100000000001,"count":1,"log(count)":0},{"latitude":33.6155,"longitude":-95.0458,"count":1,"log(count)":0},{"latitude":28.3202,"longitude":-96.8986,"count":1,"log(count)":0},{"latitude":31.016550000000002,"longitude":-96.62022500000002,"count":8,"log(count)":2.0794415416798357},{"latitude":32.91678,"longitude":-96.40620999999999,"count":10,"log(count)":2.302585092994046},{"latitude":31.82315,"longitude":-100.0846,"count":2,"log(count)":0.6931471805599453},{"latitude":32.25106470588236,"longitude":-94.73562352941177,"count":17,"log(count)":2.833213344056216},{"latitude":30.555650000000004,"longitude":-95.051325,"count":8,"log(count)":2.0794415416798357},{"latitude":27.92755806451613,"longitude":-97.2621290322581,"count":31,"log(count)":3.4339872044851463},{"latitude":30.9739,"longitude":-98.71600000000001,"count":1,"log(count)":0},{"latitude":30.8602,"longitude":-100.601,"count":1,"log(count)":0},{"latitude":32.719049999999996,"longitude":-100.905,"count":2,"log(count)":0.6931471805599453},{"latitude":31.7759,"longitude":-94.14062857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":36.3325,"longitude":-102.073,"count":1,"log(count)":0},{"latitude":32.34179664429527,"longitude":-95.29952953020133,"count":149,"log(count)":5.003946305945459},{"latitude":32.2346,"longitude":-97.7553,"count":1,"log(count)":0},{"latitude":26.382333333333325,"longitude":-98.80667499999998,"count":12,"log(count)":2.4849066497880004},{"latitude":32.7561,"longitude":-98.6806,"count":1,"log(count)":0},{"latitude":30.5885,"longitude":-100.647,"count":1,"log(count)":0},{"latitude":34.4581,"longitude":-101.76299999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":32.75961402061851,"longitude":-97.19932927835065,"count":970,"log(count)":6.877296071497429},{"latitude":32.451493181818165,"longitude":-99.7504636363636,"count":132,"log(count)":4.882801922586371},{"latitude":30.1432,"longitude":-102.3965,"count":2,"log(count)":0.6931471805599453},{"latitude":33.180099999999996,"longitude":-102.274,"count":2,"log(count)":0.6931471805599453},{"latitude":33.22110000000001,"longitude":-94.98689,"count":10,"log(count)":2.302585092994046},{"latitude":31.470543835616443,"longitude":-100.46202739726026,"count":73,"log(count)":4.290459441148391},{"latitude":30.27642705223886,"longitude":-97.70833152985074,"count":536,"log(count)":6.284134161070802},{"latitude":30.974957142857143,"longitude":-95.29814285714285,"count":7,"log(count)":1.9459101490553132},{"latitude":30.82294,"longitude":-94.35026,"count":5,"log(count)":1.6094379124341003},{"latitude":32.658738461538455,"longitude":-94.94163076923077,"count":13,"log(count)":2.5649493574615367},{"latitude":29.309066666666666,"longitude":-99.7473,"count":3,"log(count)":1.0986122886681098},{"latitude":29.38741199999999,"longitude":-100.91055999999998,"count":25,"log(count)":3.2188758248682006},{"latitude":32.56550625,"longitude":-95.799375,"count":16,"log(count)":2.772588722239781},{"latitude":28.79733,"longitude":-96.98789,"count":10,"log(count)":2.302585092994046},{"latitude":30.724702857142855,"longitude":-95.51912,"count":35,"log(count)":3.5553480614894135},{"latitude":30.039800000000003,"longitude":-95.94744,"count":5,"log(count)":1.6094379124341003},{"latitude":30.19854,"longitude":-96.3786,"count":5,"log(count)":1.6094379124341003},{"latitude":27.51758848484846,"longitude":-99.47409393939401,"count":165,"log(count)":5.10594547390058},{"latitude":29.1299,"longitude":-96.3932,"count":1,"log(count)":0},{"latitude":35.5297,"longitude":-100.446,"count":1,"log(count)":0},{"latitude":33.90342771084337,"longitude":-98.51789759036147,"count":83,"log(count)":4.418840607796598},{"latitude":34.1549,"longitude":-99.29464999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":26.4634,"longitude":-97.9526,"count":1,"log(count)":0},{"latitude":30.55144791666667,"longitude":-97.67847812499998,"count":96,"log(count)":4.564348191467836},{"latitude":29.205769999999994,"longitude":-98.16683,"count":10,"log(count)":2.302585092994046},{"latitude":31.8533,"longitude":-103.09466666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":33.157799999999995,"longitude":-97.634425,"count":8,"log(count)":2.0794415416798357},{"latitude":32.70443,"longitude":-95.39852,"count":10,"log(count)":2.302585092994046},{"latitude":33.107866666666666,"longitude":-98.5767,"count":3,"log(count)":1.0986122886681098},{"latitude":26.6389,"longitude":-99.0931,"count":1,"log(count)":0},{"latitude":61.2055727083333,"longitude":-149.8149604166666,"count":480,"log(count)":6.173786103901937},{"latitude":53.8714,"longitude":-166.541,"count":1,"log(count)":0},{"latitude":60.9379105263158,"longitude":-160.98710526315784,"count":38,"log(count)":3.6375861597263857},{"latitude":58.7332,"longitude":-156.858,"count":1,"log(count)":0},{"latitude":59.088244444444435,"longitude":-158.85255555555554,"count":18,"log(count)":2.8903717578961645},{"latitude":64.82918230452668,"longitude":-147.67500000000024,"count":243,"log(count)":5.493061443340548},{"latitude":59.024075,"longitude":-135.4495,"count":4,"log(count)":1.3862943611198906},{"latitude":58.34929032258064,"longitude":-134.5219139784946,"count":93,"log(count)":4.532599493153256},{"latitude":60.344051282051275,"longitude":-150.9332820512821,"count":78,"log(count)":4.356708826689592},{"latitude":55.37009375000001,"longitude":-131.6774375,"count":16,"log(count)":2.772588722239781},{"latitude":57.8318294117647,"longitude":-152.41641176470588,"count":17,"log(count)":2.833213344056216},{"latitude":57.87631428571428,"longitude":-157.17857142857142,"count":7,"log(count)":1.9459101490553132},{"latitude":61.627413173652656,"longitude":-149.488508982036,"count":167,"log(count)":5.117993812416755},{"latitude":64.4049909090909,"longitude":-163.25663636363635,"count":11,"log(count)":2.3978952727983707},{"latitude":71.10974444444444,"longitude":-155.646,"count":9,"log(count)":2.1972245773362196},{"latitude":66.7163,"longitude":-159.3712857142857,"count":14,"log(count)":2.6390573296152584},{"latitude":55.83395,"longitude":-133.05431250000004,"count":16,"log(count)":2.772588722239781},{"latitude":57.072466666666664,"longitude":-135.36766666666668,"count":3,"log(count)":1.0986122886681098},{"latitude":63.587720000000004,"longitude":-143.66999999999996,"count":20,"log(count)":2.995732273553991},{"latitude":62.113422222222226,"longitude":-144.94444444444446,"count":9,"log(count)":2.1972245773362196},{"latitude":62.29506086956521,"longitude":-164.22199999999998,"count":23,"log(count)":3.1354942159291497},{"latitude":65.80738461538462,"longitude":-149.7326923076923,"count":13,"log(count)":2.5649493574615367},{"latitude":63.91898571428571,"longitude":-148.9184285714286,"count":7,"log(count)":1.9459101490553132},{"latitude":38.306933333333326,"longitude":-112.795,"count":3,"log(count)":1.0986122886681098},{"latitude":41.72307428571428,"longitude":-111.82582857142859,"count":35,"log(count)":3.5553480614894135},{"latitude":39.59242,"longitude":-110.8412,"count":5,"log(count)":1.6094379124341003},{"latitude":40.99726470588235,"longitude":-111.95205882352943,"count":34,"log(count)":3.5263605246161616},{"latitude":40.27265555555555,"longitude":-110.26355555555557,"count":9,"log(count)":2.1972245773362196},{"latitude":39.20503333333334,"longitude":-110.765,"count":3,"log(count)":1.0986122886681098},{"latitude":37.5625,"longitude":-111.995,"count":1,"log(count)":0},{"latitude":38.5689,"longitude":-109.54375,"count":4,"log(count)":1.3862943611198906},{"latitude":37.714380000000006,"longitude":-113.05593333333334,"count":15,"log(count)":2.70805020110221},{"latitude":37.0414,"longitude":-112.49399999999999,"count":3,"log(count)":1.0986122886681098},{"latitude":38.9428,"longitude":-112.658,"count":3,"log(count)":1.0986122886681098},{"latitude":41.053399999999996,"longitude":-111.6995,"count":2,"log(count)":0.6931471805599453},{"latitude":41.7847,"longitude":-111.2985,"count":2,"log(count)":0.6931471805599453},{"latitude":40.708831230283955,"longitude":-111.9356324921136,"count":634,"log(count)":6.452048954437226},{"latitude":37.39046666666667,"longitude":-109.53333333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":39.61125,"longitude":-111.46324999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":38.81844444444444,"longitude":-111.97166666666665,"count":9,"log(count)":2.1972245773362196},{"latitude":40.71591666666667,"longitude":-111.46616666666665,"count":6,"log(count)":1.791759469228055},{"latitude":40.57345384615384,"longitude":-112.39615384615385,"count":13,"log(count)":2.5649493574615367},{"latitude":40.38380909090909,"longitude":-109.72145454545456,"count":22,"log(count)":3.091042453358316},{"latitude":40.237145652173915,"longitude":-111.73278260869563,"count":92,"log(count)":4.5217885770490405},{"latitude":40.4933,"longitude":-111.41149999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":37.14731111111111,"longitude":-113.48108333333336,"count":36,"log(count)":3.58351893845611},{"latitude":38.4019,"longitude":-111.649,"count":1,"log(count)":0},{"latitude":41.223626923076914,"longitude":-111.97893589743592,"count":78,"log(count)":4.356708826689592},{"latitude":41.7518,"longitude":-112.69166666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":44.05963461538462,"longitude":-73.15831923076925,"count":52,"log(count)":3.9512437185814275},{"latitude":42.9547484848485,"longitude":-73.1825606060606,"count":33,"log(count)":3.4965075614664802},{"latitude":44.386799999999994,"longitude":-72.06421875000001,"count":16,"log(count)":2.772588722239781},{"latitude":44.49210105263157,"longitude":-73.17227684210526,"count":95,"log(count)":4.553876891600541},{"latitude":44.4304,"longitude":-71.8802,"count":1,"log(count)":0},{"latitude":44.82064666666667,"longitude":-73.04166666666669,"count":30,"log(count)":3.4011973816621555},{"latitude":44.82769999999999,"longitude":-73.3022,"count":4,"log(count)":1.3862943611198906},{"latitude":44.608737500000004,"longitude":-72.64352500000001,"count":8,"log(count)":2.0794415416798357},{"latitude":44.07218750000001,"longitude":-72.31361250000002,"count":16,"log(count)":2.772588722239781},{"latitude":44.89245882352941,"longitude":-72.18290588235294,"count":17,"log(count)":2.833213344056216},{"latitude":43.59166603773583,"longitude":-73.0383037735849,"count":53,"log(count)":3.970291913552122},{"latitude":44.228234848484846,"longitude":-72.53544090909092,"count":66,"log(count)":4.189654742026425},{"latitude":42.946722499999986,"longitude":-72.58510499999998,"count":40,"log(count)":3.6888794541139363},{"latitude":43.5822576923077,"longitude":-72.48279615384614,"count":26,"log(count)":3.258096538021482},{"latitude":37.79796190476189,"longitude":-75.62333333333333,"count":21,"log(count)":3.044522437723423},{"latitude":37.472116666666665,"longitude":-79.11581666666666,"count":18,"log(count)":2.8903717578961645},{"latitude":38.859911594202934,"longitude":-77.07593333333337,"count":69,"log(count)":4.23410650459726},{"latitude":38.13735416666667,"longitude":-78.98440833333335,"count":24,"log(count)":3.1780538303479458},{"latitude":37.9605,"longitude":-77.42103571428572,"count":14,"log(count)":2.6390573296152584},{"latitude":36.67858571428571,"longitude":-80.76655000000001,"count":14,"log(count)":2.6390573296152584},{"latitude":37.41382083333331,"longitude":-77.51498385416666,"count":192,"log(count)":5.2574953720277815},{"latitude":37.904,"longitude":-76.8655,"count":1,"log(count)":0},{"latitude":38.832349180327874,"longitude":-77.2175942622951,"count":122,"log(count)":4.804021044733257},{"latitude":38.701991666666665,"longitude":-77.79985,"count":12,"log(count)":2.4849066497880004},{"latitude":39.21157777777777,"longitude":-78.17802222222221,"count":9,"log(count)":2.1972245773362196},{"latitude":37.339025,"longitude":-76.508875,"count":12,"log(count)":2.4849066497880004},{"latitude":38.24766,"longitude":-78.40894,"count":5,"log(count)":1.6094379124341003},{"latitude":37.72549473684211,"longitude":-77.47305789473684,"count":19,"log(count)":2.9444389791664403},{"latitude":37.57161466165416,"longitude":-77.4328003759398,"count":266,"log(count)":5.583496308781699},{"latitude":37.31642307692308,"longitude":-76.75866923076924,"count":13,"log(count)":2.5649493574615367},{"latitude":37.8818,"longitude":-77.1014,"count":1,"log(count)":0},{"latitude":38.298166666666674,"longitude":-77.11957777777778,"count":9,"log(count)":2.1972245773362196},{"latitude":37.76885,"longitude":-77.1968,"count":2,"log(count)":0.6931471805599453},{"latitude":39.00463835616439,"longitude":-77.47556438356166,"count":73,"log(count)":4.290459441148391},{"latitude":37.421866666666666,"longitude":-76.3224,"count":3,"log(count)":1.0986122886681098},{"latitude":37.6975,"longitude":-76.6431,"count":4,"log(count)":1.3862943611198906},{"latitude":37.48213333333334,"longitude":-76.9935,"count":3,"log(count)":1.0986122886681098},{"latitude":37.47226666666667,"longitude":-75.85651666666666,"count":6,"log(count)":1.791759469228055},{"latitude":36.69514482758621,"longitude":-79.4308655172414,"count":29,"log(count)":3.367295829986474},{"latitude":37.213079166666674,"longitude":-77.30937916666666,"count":24,"log(count)":3.1780538303479458},{"latitude":38.66316506024098,"longitude":-77.36489578313251,"count":166,"log(count)":5.111987788356544},{"latitude":37.8494,"longitude":-76.7181,"count":1,"log(count)":0},{"latitude":37.275009090909094,"longitude":-79.99099090909091,"count":22,"log(count)":3.091042453358316},{"latitude":37.78686666666667,"longitude":-79.42796666666668,"count":3,"log(count)":1.0986122886681098},{"latitude":36.6814,"longitude":-77.3748,"count":1,"log(count)":0},{"latitude":38.23485357142858,"longitude":-77.54951071428569,"count":28,"log(count)":3.332204510175204},{"latitude":38.4254283018868,"longitude":-77.43788301886792,"count":53,"log(count)":3.970291913552122},{"latitude":37.09792,"longitude":-76.81706,"count":5,"log(count)":1.6094379124341003},{"latitude":38.2606,"longitude":-76.9735,"count":2,"log(count)":0.6931471805599453},{"latitude":37.20055833333333,"longitude":-76.54074166666666,"count":36,"log(count)":3.58351893845611},{"latitude":38.39446666666666,"longitude":-78.81501666666668,"count":6,"log(count)":1.791759469228055},{"latitude":36.995866666666664,"longitude":-78.25186666666667,"count":6,"log(count)":1.791759469228055},{"latitude":37.256879999999995,"longitude":-78.41322,"count":5,"log(count)":1.6094379124341003},{"latitude":37.0475,"longitude":-78.8455,"count":1,"log(count)":0},{"latitude":37.144400000000005,"longitude":-78.07442,"count":5,"log(count)":1.6094379124341003},{"latitude":36.8119,"longitude":-77.7709,"count":1,"log(count)":0},{"latitude":37.895675,"longitude":-78.347675,"count":4,"log(count)":1.3862943611198906},{"latitude":37.414649999999995,"longitude":-78.34045,"count":2,"log(count)":0.6931471805599453},{"latitude":36.9709,"longitude":-80.26755,"count":2,"log(count)":0.6931471805599453},{"latitude":37.0159238095238,"longitude":-79.83456666666669,"count":21,"log(count)":3.044522437723423},{"latitude":37.31822857142857,"longitude":-80.70082857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":38.3823,"longitude":-78.24285,"count":2,"log(count)":0.6931471805599453},{"latitude":38.00922666666667,"longitude":-77.98177333333334,"count":15,"log(count)":2.70805020110221},{"latitude":38.28026666666667,"longitude":-77.86875555555555,"count":9,"log(count)":2.1972245773362196},{"latitude":36.67975,"longitude":-83.12025,"count":4,"log(count)":1.3862943611198906},{"latitude":36.94361875,"longitude":-82.66058750000002,"count":16,"log(count)":2.772588722239781},{"latitude":36.73957333333335,"longitude":-78.93036666666666,"count":15,"log(count)":2.70805020110221},{"latitude":37.359642857142866,"longitude":-78.81552857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":37.19585,"longitude":-82.3171,"count":4,"log(count)":1.3862943611198906},{"latitude":37.23684615384615,"longitude":-82.08648461538463,"count":13,"log(count)":2.5649493574615367},{"latitude":36.94685714285714,"longitude":-82.1089857142857,"count":14,"log(count)":2.6390573296152584},{"latitude":37.171769999999995,"longitude":-81.51855,"count":10,"log(count)":2.302585092994046},{"latitude":37.342499999999994,"longitude":-77.94081666666666,"count":6,"log(count)":1.791759469228055},{"latitude":38.48735333333334,"longitude":-78.02146666666667,"count":15,"log(count)":2.70805020110221},{"latitude":36.6324,"longitude":-80.13426666666668,"count":3,"log(count)":1.0986122886681098},{"latitude":36.676766666666666,"longitude":-82.59859999999999,"count":6,"log(count)":1.791759469228055},{"latitude":36.72097586206897,"longitude":-81.93240344827585,"count":29,"log(count)":3.367295829986474},{"latitude":38.81577954545455,"longitude":-77.06677045454546,"count":44,"log(count)":3.784189633918261},{"latitude":36.61471,"longitude":-82.15975,"count":10,"log(count)":2.302585092994046},{"latitude":37.7437,"longitude":-79.3793,"count":1,"log(count)":0},{"latitude":37.25894285714287,"longitude":-77.40874285714287,"count":14,"log(count)":2.6390573296152584},{"latitude":36.59041925925924,"longitude":-79.39979925925925,"count":135,"log(count)":4.90527477843843},{"latitude":36.696749999999994,"longitude":-77.53630000000001,"count":4,"log(count)":1.3862943611198906},{"latitude":38.881425,"longitude":-77.169225,"count":4,"log(count)":1.3862943611198906},{"latitude":36.66883333333333,"longitude":-76.9288,"count":15,"log(count)":2.70805020110221},{"latitude":38.295506666666675,"longitude":-77.47696,"count":30,"log(count)":3.4011973816621555},{"latitude":36.6496,"longitude":-80.916,"count":1,"log(count)":0},{"latitude":37.287912765957444,"longitude":-77.29868510638296,"count":47,"log(count)":3.8501476017100584},{"latitude":37.39843333333333,"longitude":-79.16594111111112,"count":90,"log(count)":4.499809670330265},{"latitude":38.753299999999996,"longitude":-77.47701176470588,"count":17,"log(count)":2.833213344056216},{"latitude":38.769949999999994,"longitude":-77.44364999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":36.9321,"longitude":-82.63893333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":37.2175581632653,"longitude":-77.40221122448983,"count":98,"log(count)":4.584967478670572},{"latitude":37.132512500000004,"longitude":-80.55583750000001,"count":8,"log(count)":2.0794415416798357},{"latitude":37.285316587677734,"longitude":-79.961583886256,"count":211,"log(count)":5.351858133476067},{"latitude":38.07258,"longitude":-78.89053999999999,"count":25,"log(count)":3.2188758248682006},{"latitude":37.03157448071219,"longitude":-76.37533442136498,"count":337,"log(count)":5.820082930352362},{"latitude":37.05195381604698,"longitude":-76.46368277886502,"count":511,"log(count)":6.236369590203704},{"latitude":36.823754406130256,"longitude":-76.33937586206902,"count":261,"log(count)":5.564520407322694},{"latitude":36.874961669505986,"longitude":-76.26327563884155,"count":587,"log(count)":6.375024819828097},{"latitude":36.78954060150376,"longitude":-76.2837,"count":133,"log(count)":4.890349128221754},{"latitude":36.82824799999997,"longitude":-76.10182181818189,"count":275,"log(count)":5.616771097666572},{"latitude":36.746711688311684,"longitude":-76.57581428571426,"count":77,"log(count)":4.343805421853684},{"latitude":38.442099999999996,"longitude":-78.86813076923076,"count":13,"log(count)":2.5649493574615367},{"latitude":38.59824999999999,"longitude":-78.53135,"count":2,"log(count)":0.6931471805599453},{"latitude":36.828250000000004,"longitude":-81.56912,"count":10,"log(count)":2.302585092994046},{"latitude":36.7244,"longitude":-78.1301,"count":1,"log(count)":0},{"latitude":37.8061125,"longitude":-78.82885,"count":8,"log(count)":2.0794415416798357},{"latitude":36.654500000000006,"longitude":-77.52192500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":36.647980000000004,"longitude":-81.10366,"count":5,"log(count)":1.6094379124341003},{"latitude":36.92978333333334,"longitude":-81.08653333333332,"count":12,"log(count)":2.4849066497880004},{"latitude":37.06089999999999,"longitude":-80.74813,"count":10,"log(count)":2.302585092994046},{"latitude":37.59635,"longitude":-78.49917500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":36.684781081081084,"longitude":-79.87519189189187,"count":37,"log(count)":3.6109179126442243},{"latitude":48.2378,"longitude":-122.58275,"count":8,"log(count)":2.0794415416798357},{"latitude":46.3776,"longitude":-124.042,"count":1,"log(count)":0},{"latitude":46.21881084337349,"longitude":-119.27831325301206,"count":83,"log(count)":4.418840607796598},{"latitude":47.7337,"longitude":-118.181,"count":1,"log(count)":0},{"latitude":46.13186458333333,"longitude":-122.88349999999998,"count":48,"log(count)":3.871201010907891},{"latitude":48.25195,"longitude":-117.33,"count":2,"log(count)":0.6931471805599453},{"latitude":47.177320142180015,"longitude":-122.41397867298576,"count":422,"log(count)":6.045005314036012},{"latitude":45.865750000000006,"longitude":-120.64125,"count":4,"log(count)":1.3862943611198906},{"latitude":45.6704,"longitude":-121.922,"count":2,"log(count)":0.6931471805599453},{"latitude":47.300557142857144,"longitude":-123.00619047619048,"count":21,"log(count)":3.044522437723423},{"latitude":47.959292468619275,"longitude":-122.19196234309622,"count":239,"log(count)":5.476463551931511},{"latitude":47.60042857142857,"longitude":-122.63799999999996,"count":42,"log(count)":3.7376696182833684},{"latitude":48.798218518518496,"longitude":-122.45653703703701,"count":54,"log(count)":3.9889840465642745},{"latitude":47.67236967592591,"longitude":-117.41480092592617,"count":432,"log(count)":6.068425588244111},{"latitude":47.00439545454546,"longitude":-122.86801515151517,"count":66,"log(count)":4.189654742026425},{"latitude":48.07817142857142,"longitude":-123.56009523809523,"count":21,"log(count)":3.044522437723423},{"latitude":48.46167200000001,"longitude":-122.22328000000002,"count":25,"log(count)":3.2188758248682006},{"latitude":46.892100000000006,"longitude":-118.76299999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":47.52923333333334,"longitude":-120.21633333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":46.077338461538474,"longitude":-118.37292307692307,"count":13,"log(count)":2.5649493574615367},{"latitude":45.663136199095035,"longitude":-122.58776923076927,"count":221,"log(count)":5.3981627015177525},{"latitude":48.918,"longitude":-118.661,"count":1,"log(count)":0},{"latitude":46.279,"longitude":-119.10744897959182,"count":49,"log(count)":3.8918202981106265},{"latitude":46.9857,"longitude":-123.77666666666664,"count":12,"log(count)":2.4849066497880004},{"latitude":47.134878260869584,"longitude":-119.42653623188407,"count":69,"log(count)":4.23410650459726},{"latitude":47.09122857142857,"longitude":-120.64942857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":46.62414848484848,"longitude":-122.8133333333333,"count":33,"log(count)":3.4965075614664802},{"latitude":48.34100909090909,"longitude":-119.53090909090912,"count":11,"log(count)":2.3978952727983707},{"latitude":46.5277005524862,"longitude":-120.44295580110487,"count":181,"log(count)":5.198497031265826},{"latitude":48.18918333333334,"longitude":-117.85616666666665,"count":12,"log(count)":2.4849066497880004},{"latitude":48.537580000000005,"longitude":-122.95339999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":47.613645454545455,"longitude":-120.29581818181818,"count":11,"log(count)":2.3978952727983707},{"latitude":47.531239026473074,"longitude":-122.29236891545675,"count":1171,"log(count)":7.065613363597717},{"latitude":47.94285,"longitude":-122.82233333333333,"count":6,"log(count)":1.791759469228055},{"latitude":46.79833157894737,"longitude":-117.24057894736842,"count":19,"log(count)":2.9444389791664403},{"latitude":46.40218,"longitude":-117.0684,"count":5,"log(count)":1.6094379124341003},{"latitude":39.44099354838708,"longitude":-77.99632580645161,"count":31,"log(count)":3.4339872044851463},{"latitude":38.031125,"longitude":-81.74225833333334,"count":12,"log(count)":2.4849066497880004},{"latitude":38.68364,"longitude":-80.7457,"count":5,"log(count)":1.6094379124341003},{"latitude":38.41621523809522,"longitude":-82.40330857142861,"count":210,"log(count)":5.3471075307174685},{"latitude":38.463175,"longitude":-81.12614166666667,"count":12,"log(count)":2.4849066497880004},{"latitude":39.29488888888889,"longitude":-77.87176666666667,"count":9,"log(count)":2.1972245773362196},{"latitude":38.362534718826396,"longitude":-81.64977677261616,"count":409,"log(count)":6.013715156042802},{"latitude":39.0235,"longitude":-80.51490000000001,"count":6,"log(count)":1.791759469228055},{"latitude":38.253988888888884,"longitude":-81.96507777777778,"count":9,"log(count)":2.1972245773362196},{"latitude":37.88901111111112,"longitude":-82.0082185185185,"count":27,"log(count)":3.295836866004329},{"latitude":37.71689090909091,"longitude":-82.18045454545455,"count":11,"log(count)":2.3978952727983707},{"latitude":39.63647910447762,"longitude":-79.95716417910448,"count":67,"log(count)":4.204692619390966},{"latitude":38.262144444444445,"longitude":-80.83061111111111,"count":9,"log(count)":2.1972245773362196},{"latitude":38.6588,"longitude":-79.3526,"count":3,"log(count)":1.0986122886681098},{"latitude":38.180800000000005,"longitude":-80.1566,"count":3,"log(count)":1.0986122886681098},{"latitude":38.46482083333334,"longitude":-81.92242083333333,"count":24,"log(count)":3.1780538303479458},{"latitude":37.77086146788991,"longitude":-81.20498990825688,"count":109,"log(count)":4.6913478822291435},{"latitude":38.84493928571428,"longitude":-79.87892142857143,"count":28,"log(count)":3.332204510175204},{"latitude":38.7548875,"longitude":-81.41697500000001,"count":8,"log(count)":2.0794415416798357},{"latitude":38.2789619047619,"longitude":-82.5139619047619,"count":21,"log(count)":3.044522437723423},{"latitude":38.46401999999999,"longitude":-80.44582,"count":5,"log(count)":1.6094379124341003},{"latitude":37.600625,"longitude":-81.582325,"count":12,"log(count)":2.4849066497880004},{"latitude":37.84090454545454,"longitude":-80.4191409090909,"count":22,"log(count)":3.091042453358316},{"latitude":37.321101176470606,"longitude":-81.17710941176469,"count":85,"log(count)":4.442651256490317},{"latitude":37.567433333333334,"longitude":-80.5243,"count":3,"log(count)":1.0986122886681098},{"latitude":37.69525,"longitude":-80.8329875,"count":8,"log(count)":2.0794415416798357},{"latitude":39.5797,"longitude":-78.3766,"count":1,"log(count)":0},{"latitude":40.28282,"longitude":-80.5877,"count":5,"log(count)":1.6094379124341003},{"latitude":39.51678125000001,"longitude":-79.68939999999998,"count":16,"log(count)":2.772588722239781},{"latitude":38.86148333333333,"longitude":-81.73891666666665,"count":6,"log(count)":1.791759469228055},{"latitude":38.038682692307695,"longitude":-81.16673653846155,"count":52,"log(count)":3.9512437185814275},{"latitude":38.68485384615384,"longitude":-82.07906923076922,"count":13,"log(count)":2.5649493574615367},{"latitude":39.25612499999999,"longitude":-81.527090625,"count":32,"log(count)":3.4657359027997265},{"latitude":40.462833333333336,"longitude":-80.57011111111112,"count":9,"log(count)":2.1972245773362196},{"latitude":44.09325,"longitude":-89.788425,"count":4,"log(count)":1.3862943611198906},{"latitude":46.589749999999995,"longitude":-90.8211,"count":4,"log(count)":1.3862943611198906},{"latitude":45.42703684210526,"longitude":-91.76285263157897,"count":19,"log(count)":2.9444389791664403},{"latitude":46.56,"longitude":-90.94695,"count":2,"log(count)":0.6931471805599453},{"latitude":44.50573076923078,"longitude":-88.01035128205127,"count":78,"log(count)":4.356708826689592},{"latitude":44.45473333333334,"longitude":-91.73266666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":45.95585,"longitude":-92.34417499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":44.0779,"longitude":-88.237,"count":4,"log(count)":1.3862943611198906},{"latitude":45.0198125,"longitude":-91.31771875,"count":16,"log(count)":2.772588722239781},{"latitude":44.766149999999996,"longitude":-90.449475,"count":4,"log(count)":1.3862943611198906},{"latitude":43.47009411764706,"longitude":-89.4526588235294,"count":17,"log(count)":2.833213344056216},{"latitude":43.10576666666666,"longitude":-91.00869999999999,"count":6,"log(count)":1.791759469228055},{"latitude":43.072810349854244,"longitude":-89.39562288629732,"count":686,"log(count)":6.530877627725885},{"latitude":43.458103846153854,"longitude":-88.75763076923076,"count":26,"log(count)":3.258096538021482},{"latitude":44.959050000000005,"longitude":-87.3027,"count":4,"log(count)":1.3862943611198906},{"latitude":46.68082352941176,"longitude":-92.03190000000002,"count":17,"log(count)":2.833213344056216},{"latitude":44.935106250000004,"longitude":-91.9135875,"count":16,"log(count)":2.772588722239781},{"latitude":44.80273720930233,"longitude":-91.47540000000004,"count":43,"log(count)":3.7612001156935624},{"latitude":45.8724,"longitude":-88.2242,"count":1,"log(count)":0},{"latitude":43.76769310344827,"longitude":-88.51605517241379,"count":29,"log(count)":3.367295829986474},{"latitude":45.561825,"longitude":-88.9102,"count":4,"log(count)":1.3862943611198906},{"latitude":42.808511111111116,"longitude":-90.71954444444444,"count":9,"log(count)":2.1972245773362196},{"latitude":42.601866666666666,"longitude":-89.65838333333333,"count":12,"log(count)":2.4849066497880004},{"latitude":43.8996,"longitude":-89.01292857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":42.99835,"longitude":-89.99115,"count":2,"log(count)":0.6931471805599453},{"latitude":46.1719,"longitude":-90.0733,"count":1,"log(count)":0},{"latitude":44.28765,"longitude":-90.79491250000001,"count":8,"log(count)":2.0794415416798357},{"latitude":43.06547272727273,"longitude":-88.83123636363638,"count":11,"log(count)":2.3978952727983707},{"latitude":43.87376666666666,"longitude":-90.06883333333333,"count":6,"log(count)":1.791759469228055},{"latitude":42.582334375000016,"longitude":-87.87642343750004,"count":64,"log(count)":4.1588830833596715},{"latitude":44.4116,"longitude":-87.5851,"count":2,"log(count)":0.6931471805599453},{"latitude":43.83722,"longitude":-91.24091636363634,"count":55,"log(count)":4.007333185232471},{"latitude":42.713,"longitude":-89.9932,"count":2,"log(count)":0.6931471805599453},{"latitude":45.13665,"longitude":-89.16614999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":45.3557875,"longitude":-89.69995,"count":8,"log(count)":2.0794415416798357},{"latitude":44.07397058823529,"longitude":-87.70153529411766,"count":17,"log(count)":2.833213344056216},{"latitude":44.9190253968254,"longitude":-89.66765238095236,"count":63,"log(count)":4.143134726391533},{"latitude":45.239569230769234,"longitude":-87.89423076923077,"count":13,"log(count)":2.5649493574615367},{"latitude":43.84896666666666,"longitude":-89.41253333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":44.93826000000001,"longitude":-88.70255999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":43.06703581796781,"longitude":-87.9536694782268,"count":2549,"log(count)":7.8434564043761155},{"latitude":43.91507272727273,"longitude":-90.7413090909091,"count":11,"log(count)":2.3978952727983707},{"latitude":44.883075000000005,"longitude":-88.068925,"count":4,"log(count)":1.3862943611198906},{"latitude":45.67375714285714,"longitude":-89.48204285714284,"count":7,"log(count)":1.9459101490553132},{"latitude":44.29525405405404,"longitude":-88.43560000000001,"count":37,"log(count)":3.6109179126442243},{"latitude":43.37027142857143,"longitude":-87.95498571428571,"count":7,"log(count)":1.9459101490553132},{"latitude":44.55,"longitude":-92.0861,"count":1,"log(count)":0},{"latitude":44.73084444444444,"longitude":-92.45750000000002,"count":9,"log(count)":2.1972245773362196},{"latitude":45.455075,"longitude":-92.47195,"count":4,"log(count)":1.3862943611198906},{"latitude":44.48534117647059,"longitude":-89.53536470588237,"count":17,"log(count)":2.833213344056216},{"latitude":45.6915,"longitude":-90.4039,"count":1,"log(count)":0},{"latitude":42.72951150442477,"longitude":-87.83444115044246,"count":226,"log(count)":5.420534999272286},{"latitude":43.331059999999994,"longitude":-90.37482,"count":5,"log(count)":1.6094379124341003},{"latitude":42.57681258741258,"longitude":-89.02894335664334,"count":143,"log(count)":4.962844630259907},{"latitude":45.53746666666667,"longitude":-91.0818,"count":3,"log(count)":1.0986122886681098},{"latitude":43.45705833333333,"longitude":-89.82635833333335,"count":24,"log(count)":3.1780538303479458},{"latitude":45.94668461538462,"longitude":-91.32359230769231,"count":13,"log(count)":2.5649493574615367},{"latitude":44.803423999999985,"longitude":-88.792372,"count":25,"log(count)":3.2188758248682006},{"latitude":43.73451071428571,"longitude":-87.76288571428572,"count":28,"log(count)":3.332204510175204},{"latitude":45.13892499999999,"longitude":-90.33055000000002,"count":4,"log(count)":1.3862943611198906},{"latitude":44.30035,"longitude":-91.39506666666666,"count":6,"log(count)":1.791759469228055},{"latitude":43.646640000000005,"longitude":-90.94292,"count":5,"log(count)":1.6094379124341003},{"latitude":45.922349999999994,"longitude":-89.24795,"count":2,"log(count)":0.6931471805599453},{"latitude":42.69050000000001,"longitude":-88.53576666666667,"count":15,"log(count)":2.70805020110221},{"latitude":45.973699999999994,"longitude":-91.79662499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":43.350132142857134,"longitude":-88.19654285714283,"count":28,"log(count)":3.332204510175204},{"latitude":43.04622711864407,"longitude":-88.19011186440679,"count":59,"log(count)":4.07753744390572},{"latitude":44.454480000000004,"longitude":-88.85846000000001,"count":10,"log(count)":2.302585092994046},{"latitude":44.13588,"longitude":-89.3072,"count":5,"log(count)":1.6094379124341003},{"latitude":44.10055000000001,"longitude":-88.5188258064516,"count":62,"log(count)":4.127134385045092},{"latitude":44.40505967741936,"longitude":-89.86972096774193,"count":62,"log(count)":4.127134385045092},{"latitude":44.966625,"longitude":-92.48269375,"count":16,"log(count)":2.772588722239781},{"latitude":41.47106,"longitude":-105.86100000000002,"count":5,"log(count)":1.6094379124341003},{"latitude":44.597899999999996,"longitude":-108.224,"count":2,"log(count)":0.6931471805599453},{"latitude":44.25454615384616,"longitude":-105.51938461538461,"count":13,"log(count)":2.5649493574615367},{"latitude":41.780924999999996,"longitude":-107.12174999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":42.7925875,"longitude":-105.61912500000003,"count":8,"log(count)":2.0794415416798357},{"latitude":44.3695,"longitude":-104.36399999999999,"count":1,"log(count)":0},{"latitude":43.02624666666667,"longitude":-108.61059999999999,"count":15,"log(count)":2.70805020110221},{"latitude":42.0931,"longitude":-104.2625,"count":2,"log(count)":0.6931471805599453},{"latitude":41.14025441176472,"longitude":-104.78982352941182,"count":68,"log(count)":4.219507705176107},{"latitude":42.84720993788818,"longitude":-106.35856211180128,"count":322,"log(count)":5.7745515455444085},{"latitude":43.3788,"longitude":-104.223,"count":1,"log(count)":0},{"latitude":44.569366666666674,"longitude":-109.09293333333335,"count":15,"log(count)":2.70805020110221},{"latitude":44.8187,"longitude":-106.99442857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":42.9231,"longitude":-109.949,"count":1,"log(count)":0},{"latitude":43.56727058823529,"longitude":-110.71747058823529,"count":17,"log(count)":2.833213344056216},{"latitude":41.298700000000004,"longitude":-110.72433333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":43.95433333333333,"longitude":-107.87399999999998,"count":3,"log(count)":1.0986122886681098},{"latitude":41.60756666666666,"longitude":-109.24300000000001,"count":3,"log(count)":1.0986122886681098},{"latitude":44.6583,"longitude":-83.3406,"count":1,"log(count)":0},{"latitude":46.4113,"longitude":-86.6539,"count":1,"log(count)":0},{"latitude":42.60191904761905,"longitude":-85.92509999999999,"count":21,"log(count)":3.044522437723423},{"latitude":45.07323333333334,"longitude":-83.5425,"count":3,"log(count)":1.0986122886681098},{"latitude":45.038399999999996,"longitude":-85.15471666666667,"count":6,"log(count)":1.791759469228055},{"latitude":44.062650000000005,"longitude":-83.81545,"count":2,"log(count)":0.6931471805599453},{"latitude":46.6549,"longitude":-88.4903,"count":1,"log(count)":0},{"latitude":42.611200000000004,"longitude":-85.39491111111113,"count":9,"log(count)":2.1972245773362196},{"latitude":43.62084626865672,"longitude":-83.90729701492536,"count":67,"log(count)":4.204692619390966},{"latitude":44.62065,"longitude":-86.09450000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":42.05627702702702,"longitude":-86.41500270270267,"count":74,"log(count)":4.30406509320417},{"latitude":41.8918625,"longitude":-85.053125,"count":8,"log(count)":2.0794415416798357},{"latitude":42.311314871794885,"longitude":-85.15556461538459,"count":195,"log(count)":5.272999558563747},{"latitude":41.92605789473685,"longitude":-86.07753157894736,"count":19,"log(count)":2.9444389791664403},{"latitude":45.24256,"longitude":-85.03698,"count":5,"log(count)":1.6094379124341003},{"latitude":45.6095,"longitude":-84.4712,"count":1,"log(count)":0},{"latitude":46.26001428571429,"longitude":-84.09818571428572,"count":7,"log(count)":1.9459101490553132},{"latitude":43.99054666666667,"longitude":-84.83806666666666,"count":15,"log(count)":2.70805020110221},{"latitude":42.81287499999999,"longitude":-84.51986666666667,"count":12,"log(count)":2.4849066497880004},{"latitude":44.6742,"longitude":-84.6612,"count":1,"log(count)":0},{"latitude":45.72913333333333,"longitude":-87.0791,"count":3,"log(count)":1.0986122886681098},{"latitude":45.816559999999996,"longitude":-88.03644,"count":5,"log(count)":1.6094379124341003},{"latitude":42.6446375,"longitude":-84.69995416666669,"count":24,"log(count)":3.1780538303479458},{"latitude":45.3599,"longitude":-84.9706,"count":1,"log(count)":0},{"latitude":43.03105758017499,"longitude":-83.69634941690985,"count":686,"log(count)":6.530877627725885},{"latitude":43.947579999999995,"longitude":-84.42137999999998,"count":5,"log(count)":1.6094379124341003},{"latitude":46.4669,"longitude":-90.03315,"count":2,"log(count)":0.6931471805599453},{"latitude":44.69427692307691,"longitude":-85.60111923076926,"count":26,"log(count)":3.258096538021482},{"latitude":43.356625,"longitude":-84.64394999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":41.87034,"longitude":-84.6643,"count":10,"log(count)":2.302585092994046},{"latitude":47.169275,"longitude":-88.49947499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":43.91636666666667,"longitude":-82.92228333333334,"count":6,"log(count)":1.791759469228055},{"latitude":42.71337182320444,"longitude":-84.54160883977907,"count":181,"log(count)":5.198497031265826},{"latitude":42.98269166666666,"longitude":-85.06743333333334,"count":12,"log(count)":2.4849066497880004},{"latitude":44.34255,"longitude":-83.68295,"count":2,"log(count)":0.6931471805599453},{"latitude":46.099700000000006,"longitude":-88.43836666666665,"count":3,"log(count)":1.0986122886681098},{"latitude":43.601827272727284,"longitude":-84.76495909090909,"count":22,"log(count)":3.091042453358316},{"latitude":42.247783941605846,"longitude":-84.41669270072988,"count":137,"log(count)":4.919980925828125},{"latitude":42.280535978835964,"longitude":-85.58564814814818,"count":189,"log(count)":5.241747015059643},{"latitude":44.649333333333324,"longitude":-85.16283333333332,"count":3,"log(count)":1.0986122886681098},{"latitude":42.94374296296292,"longitude":-85.65268123456786,"count":405,"log(count)":6.003887067106539},{"latitude":43.8986,"longitude":-85.8735,"count":1,"log(count)":0},{"latitude":43.093725000000006,"longitude":-83.25285833333334,"count":12,"log(count)":2.4849066497880004},{"latitude":44.89547777777778,"longitude":-85.70562222222222,"count":9,"log(count)":2.1972245773362196},{"latitude":41.904555,"longitude":-84.03585999999999,"count":20,"log(count)":2.995732273553991},{"latitude":42.53971666666667,"longitude":-83.85491666666667,"count":6,"log(count)":1.791759469228055},{"latitude":46.0205,"longitude":-84.5377,"count":2,"log(count)":0.6931471805599453},{"latitude":42.5644881081081,"longitude":-82.93988756756754,"count":185,"log(count)":5.220355825078324},{"latitude":44.24863333333333,"longitude":-86.21334444444443,"count":9,"log(count)":2.1972245773362196},{"latitude":46.49500833333334,"longitude":-87.49959166666666,"count":12,"log(count)":2.4849066497880004},{"latitude":43.98175,"longitude":-86.40129999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":43.67465,"longitude":-85.42303999999999,"count":10,"log(count)":2.302585092994046},{"latitude":45.2191,"longitude":-87.596,"count":2,"log(count)":0.6931471805599453},{"latitude":43.638774999999995,"longitude":-84.2855375,"count":8,"log(count)":2.0794415416798357},{"latitude":44.2646,"longitude":-84.8868,"count":1,"log(count)":0},{"latitude":41.87167352941176,"longitude":-83.49263823529411,"count":34,"log(count)":3.5263605246161616},{"latitude":43.251875,"longitude":-85.17867500000001,"count":8,"log(count)":2.0794415416798357},{"latitude":45.048,"longitude":-83.9179,"count":2,"log(count)":0.6931471805599453},{"latitude":43.22326312056743,"longitude":-86.23469574468078,"count":141,"log(count)":4.948759890378168},{"latitude":43.5158375,"longitude":-85.786175,"count":8,"log(count)":2.0794415416798357},{"latitude":42.618151821862284,"longitude":-83.29098056680157,"count":494,"log(count)":6.202535517187923},{"latitude":43.6639,"longitude":-86.3004,"count":4,"log(count)":1.3862943611198906},{"latitude":44.29126666666667,"longitude":-84.15223333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":46.76579999999999,"longitude":-89.27569999999999,"count":3,"log(count)":1.0986122886681098},{"latitude":44.00902,"longitude":-85.32552000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":45.010450000000006,"longitude":-84.6691,"count":2,"log(count)":0.6931471805599453},{"latitude":42.86187727272726,"longitude":-86.03886818181819,"count":44,"log(count)":3.784189633918261},{"latitude":45.2912,"longitude":-83.7195,"count":1,"log(count)":0},{"latitude":44.22658,"longitude":-84.60893999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":43.41771336032388,"longitude":-83.94451133603238,"count":247,"log(count)":5.5093883366279774},{"latitude":43.375978571428575,"longitude":-82.72647142857143,"count":14,"log(count)":2.6390573296152584},{"latitude":46.1793,"longitude":-86.0479,"count":1,"log(count)":0},{"latitude":42.92761111111111,"longitude":-84.19353333333333,"count":9,"log(count)":2.1972245773362196},{"latitude":43.33016666666666,"longitude":-83.41375,"count":6,"log(count)":1.791759469228055},{"latitude":42.26549583333333,"longitude":-86.07609583333335,"count":24,"log(count)":3.1780538303479458},{"latitude":42.244573877550984,"longitude":-83.64602938775509,"count":245,"log(count)":5.501258210544727},{"latitude":42.36936096065408,"longitude":-83.13523868165571,"count":1957,"log(count)":7.579167967396076},{"latitude":44.262600000000006,"longitude":-85.48294000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":42.98236,"longitude":-82.57366400000001,"count":25,"log(count)":3.2188758248682006},{"latitude":41.91844117647059,"longitude":-85.51832352941177,"count":17,"log(count)":2.833213344056216},{"latitude":29.963279999999994,"longitude":-90.38349600000001,"count":25,"log(count)":3.2188758248682006},{"latitude":30.86995,"longitude":-90.67954999999999,"count":6,"log(count)":1.791759469228055},{"latitude":30.035479999999996,"longitude":-90.80802,"count":5,"log(count)":1.6094379124341003},{"latitude":30.068717021276598,"longitude":-90.51736170212762,"count":94,"log(count)":4.543294782270004},{"latitude":30.52549083333332,"longitude":-92.1168158333334,"count":120,"log(count)":4.787491742782046},{"latitude":30.209369565217393,"longitude":-91.83393913043481,"count":46,"log(count)":3.828641396489095},{"latitude":29.75332000000001,"longitude":-91.34866250000002,"count":40,"log(count)":3.6888794541139363},{"latitude":30.349379104477617,"longitude":-89.9055671641791,"count":134,"log(count)":4.897839799950911},{"latitude":29.93899142857143,"longitude":-89.94931714285714,"count":35,"log(count)":3.5553480614894135},{"latitude":36.064479166666665,"longitude":-84.20384166666668,"count":48,"log(count)":3.871201010907891},{"latitude":35.479744444444435,"longitude":-86.44198888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":36.047200000000004,"longitude":-88.09195,"count":6,"log(count)":1.791759469228055},{"latitude":35.59625,"longitude":-85.22194999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":35.77582777777778,"longitude":-83.97188333333335,"count":54,"log(count)":3.9889840465642745},{"latitude":35.161861224489805,"longitude":-84.87118367346937,"count":49,"log(count)":3.8918202981106265},{"latitude":36.40416470588235,"longitude":-84.11814705882351,"count":17,"log(count)":2.833213344056216},{"latitude":36.062000000000005,"longitude":-88.48913333333333,"count":9,"log(count)":2.1972245773362196},{"latitude":36.32785333333334,"longitude":-82.18474666666667,"count":30,"log(count)":3.4011973816621555},{"latitude":36.29537,"longitude":-87.00744,"count":10,"log(count)":2.302585092994046},{"latitude":35.44972222222222,"longitude":-88.58239999999999,"count":9,"log(count)":2.1972245773362196},{"latitude":36.499050000000004,"longitude":-83.729,"count":6,"log(count)":1.791759469228055},{"latitude":35.905258333333336,"longitude":-83.2012,"count":12,"log(count)":2.4849066497880004},{"latitude":35.41369999999999,"longitude":-86.13494666666665,"count":15,"log(count)":2.70805020110221},{"latitude":35.93882857142857,"longitude":-85.01147142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":36.160227150537665,"longitude":-86.74610786290334,"count":1488,"log(count)":7.305188215393037},{"latitude":35.961,"longitude":-85.7939,"count":1,"log(count)":0},{"latitude":35.7119,"longitude":-88.1031,"count":2,"log(count)":0.6931471805599453},{"latitude":36.12467857142857,"longitude":-87.37195714285714,"count":14,"log(count)":2.6390573296152584},{"latitude":36.04083695652174,"longitude":-89.38627173913046,"count":46,"log(count)":3.828641396489095},{"latitude":35.19401111111111,"longitude":-89.4533888888889,"count":9,"log(count)":2.1972245773362196},{"latitude":36.2418,"longitude":-85.005,"count":1,"log(count)":0},{"latitude":35.18241428571428,"longitude":-86.09715714285714,"count":14,"log(count)":2.6390573296152584},{"latitude":35.889343076923076,"longitude":-88.88337999999997,"count":65,"log(count)":4.174387269895637},{"latitude":35.15173333333333,"longitude":-87.09660000000001,"count":6,"log(count)":1.791759469228055},{"latitude":36.17746790123457,"longitude":-82.83035802469136,"count":81,"log(count)":4.394449154672439},{"latitude":35.373549999999994,"longitude":-85.732025,"count":8,"log(count)":2.0794415416798357},{"latitude":35.049519482288865,"longitude":-85.24890844686634,"count":734,"log(count)":6.598509028614515},{"latitude":35.236895238095244,"longitude":-89.03019999999998,"count":21,"log(count)":3.044522437723423},{"latitude":35.20395,"longitude":-88.23055,"count":8,"log(count)":2.0794415416798357},{"latitude":36.441618181818164,"longitude":-82.91573030303032,"count":33,"log(count)":3.4965075614664802},{"latitude":35.589682222222216,"longitude":-89.2649888888889,"count":45,"log(count)":3.8066624897703196},{"latitude":35.64202857142856,"longitude":-88.3854357142857,"count":14,"log(count)":2.6390573296152584},{"latitude":36.34324347826087,"longitude":-88.27504782608696,"count":23,"log(count)":3.1354942159291497},{"latitude":35.858392307692306,"longitude":-87.40191538461539,"count":13,"log(count)":2.5649493574615367},{"latitude":36.06303333333333,"longitude":-87.834,"count":6,"log(count)":1.791759469228055},{"latitude":36.038,"longitude":-83.3797,"count":6,"log(count)":1.791759469228055},{"latitude":36.4317,"longitude":-81.84176666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":35.97701432098768,"longitude":-83.9327012345679,"count":405,"log(count)":6.003887067106539},{"latitude":35.7443,"longitude":-89.53668,"count":5,"log(count)":1.6094379124341003},{"latitude":35.224318181818184,"longitude":-87.37137272727271,"count":11,"log(count)":2.3978952727983707},{"latitude":35.54215,"longitude":-87.54826666666668,"count":6,"log(count)":1.791759469228055},{"latitude":35.18071428571429,"longitude":-86.62664285714285,"count":7,"log(count)":1.9459101490553132},{"latitude":35.80658181818182,"longitude":-84.29640909090908,"count":11,"log(count)":2.3978952727983707},{"latitude":36.503025,"longitude":-86.062325,"count":4,"log(count)":1.3862943611198906},{"latitude":35.637277906976735,"longitude":-88.8218901162791,"count":344,"log(count)":5.840641657373398},{"latitude":35.074992307692305,"longitude":-85.59904615384616,"count":13,"log(count)":2.5649493574615367},{"latitude":35.449157142857146,"longitude":-86.7869857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":35.624817499999985,"longitude":-87.0413,"count":40,"log(count)":3.6888794541139363},{"latitude":35.43972857142858,"longitude":-84.6182755102041,"count":49,"log(count)":3.8918202981106265},{"latitude":35.137116666666664,"longitude":-88.5699,"count":6,"log(count)":1.791759469228055},{"latitude":35.485425,"longitude":-84.82037500000001,"count":4,"log(count)":1.3862943611198906},{"latitude":35.52935714285714,"longitude":-84.37942857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":36.560152542372876,"longitude":-87.36536553672316,"count":177,"log(count)":5.176149732573829},{"latitude":36.099783333333335,"longitude":-84.58740000000002,"count":12,"log(count)":2.4849066497880004},{"latitude":36.433172727272726,"longitude":-89.02813636363636,"count":11,"log(count)":2.3978952727983707},{"latitude":36.2976,"longitude":-85.3272,"count":1,"log(count)":0},{"latitude":35.64616,"longitude":-87.93405999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":35.09792,"longitude":-84.44275999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":36.14550869565217,"longitude":-85.5270695652174,"count":23,"log(count)":3.1354942159291497},{"latitude":35.57876666666667,"longitude":-84.96305,"count":6,"log(count)":1.791759469228055},{"latitude":35.912755555555556,"longitude":-84.54697222222222,"count":18,"log(count)":2.8903717578961645},{"latitude":36.505424999999995,"longitude":-86.86705576923079,"count":52,"log(count)":3.9512437185814275},{"latitude":35.875126991150466,"longitude":-86.42089911504422,"count":226,"log(count)":5.420534999272286},{"latitude":36.472319999999996,"longitude":-84.49100000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":35.863791666666664,"longitude":-83.5927625,"count":24,"log(count)":3.1780538303479458},{"latitude":35.11206240230363,"longitude":-89.95488856437692,"count":2431,"log(count)":7.796057974316123},{"latitude":36.21093333333334,"longitude":-85.93996666666668,"count":3,"log(count)":1.0986122886681098},{"latitude":36.520966666666666,"longitude":-87.82726666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":36.538289719626185,"longitude":-82.43808504672899,"count":107,"log(count)":4.672828834461906},{"latitude":36.38647272727272,"longitude":-86.53628636363638,"count":66,"log(count)":4.189654742026425},{"latitude":35.4829625,"longitude":-89.74689166666666,"count":24,"log(count)":3.1780538303479458},{"latitude":35.6269,"longitude":-85.74744000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":36.32834910714285,"longitude":-82.39494642857143,"count":112,"log(count)":4.718498871295094},{"latitude":35.31956,"longitude":-87.80652,"count":5,"log(count)":1.6094379124341003},{"latitude":36.32716470588235,"longitude":-88.8174117647059,"count":17,"log(count)":2.833213344056216},{"latitude":35.94735,"longitude":-85.44933333333334,"count":6,"log(count)":1.791759469228055},{"latitude":35.920550000000006,"longitude":-86.86720000000003,"count":34,"log(count)":3.5263605246161616},{"latitude":36.204741791044775,"longitude":-86.39598656716421,"count":67,"log(count)":4.204692619390966},{"latitude":35.803375,"longitude":-86.065575,"count":4,"log(count)":1.3862943611198906},{"latitude":36.52936666666667,"longitude":-85.52916666666665,"count":3,"log(count)":1.0986122886681098},{"latitude":35.79568333333333,"longitude":-89.14545,"count":12,"log(count)":2.4849066497880004},{"latitude":36.267900000000004,"longitude":-83.4414,"count":6,"log(count)":1.791759469228055},{"latitude":36.206594736842106,"longitude":-83.29374210526316,"count":19,"log(count)":2.9444389791664403},{"latitude":36.56376666666667,"longitude":-83.05273333333334,"count":3,"log(count)":1.0986122886681098},{"latitude":36.3043,"longitude":-87.6782,"count":1,"log(count)":0},{"latitude":35.2721,"longitude":-86.3371,"count":1,"log(count)":0},{"latitude":36.5541,"longitude":-85.1479,"count":1,"log(count)":0},{"latitude":36.146125,"longitude":-82.3934625,"count":8,"log(count)":2.0794415416798357},{"latitude":36.24528333333333,"longitude":-83.822,"count":6,"log(count)":1.791759469228055},{"latitude":35.356314285714284,"longitude":-85.39185714285715,"count":7,"log(count)":1.9459101490553132},{"latitude":38.42995546218488,"longitude":-122.73183193277309,"count":119,"log(count)":4.77912349311153},{"latitude":38.37628771929824,"longitude":-75.57439473684212,"count":57,"log(count)":4.04305126783455},{"latitude":38.26306470588235,"longitude":-75.27005294117647,"count":17,"log(count)":2.833213344056216},{"latitude":48.1905,"longitude":-104.4995,"count":2,"log(count)":0.6931471805599453},{"latitude":30.792042857142857,"longitude":-81.6204857142857,"count":7,"log(count)":1.9459101490553132},{"latitude":31.18992380952382,"longitude":-81.49489523809524,"count":84,"log(count)":4.430816798843313},{"latitude":32.595158490566035,"longitude":-83.64507641509434,"count":106,"log(count)":4.663439094112067},{"latitude":33.477643181818195,"longitude":-84.20098863636362,"count":44,"log(count)":3.784189633918261},{"latitude":32.82448340080973,"longitude":-83.665789068826,"count":494,"log(count)":6.202535517187923},{"latitude":33.611933414043456,"longitude":-84.41340677966127,"count":413,"log(count)":6.023447592961033},{"latitude":33.96031657754015,"longitude":-83.37226363636356,"count":374,"log(count)":5.924255797414532},{"latitude":34.46682,"longitude":-84.45454,"count":5,"log(count)":1.6094379124341003},{"latitude":33.021691739130425,"longitude":-85.0361730434783,"count":230,"log(count)":5.438079308923196},{"latitude":34.211357500000005,"longitude":-84.13639999999998,"count":40,"log(count)":3.6888794541139363},{"latitude":33.59111612903226,"longitude":-83.87824354838708,"count":62,"log(count)":4.127134385045092},{"latitude":38.0126,"longitude":-79.8103,"count":1,"log(count)":0},{"latitude":37.9519,"longitude":-79.9564,"count":1,"log(count)":0},{"latitude":38.3789,"longitude":-79.4687,"count":1,"log(count)":0},{"latitude":38.731175,"longitude":-78.6331,"count":4,"log(count)":1.3862943611198906},{"latitude":38.8522,"longitude":-78.1469,"count":1,"log(count)":0},{"latitude":37.539775,"longitude":-77.88185,"count":4,"log(count)":1.3862943611198906},{"latitude":37.71524,"longitude":-77.89122,"count":5,"log(count)":1.6094379124341003},{"latitude":37.468275000000006,"longitude":-79.81291250000001,"count":8,"log(count)":2.0794415416798357},{"latitude":37.17355555555556,"longitude":-80.40608333333334,"count":18,"log(count)":2.8903717578961645},{"latitude":37.30126071428572,"longitude":-79.53473571428573,"count":28,"log(count)":3.332204510175204},{"latitude":37.268421052631595,"longitude":-79.1572210526316,"count":19,"log(count)":2.9444389791664403},{"latitude":38.029989655172415,"longitude":-78.50423103448279,"count":29,"log(count)":3.367295829986474},{"latitude":37.76817388143177,"longitude":-122.199538590604,"count":1788,"log(count)":7.488852955733459},{"latitude":38.32716666666666,"longitude":-120.832,"count":3,"log(count)":1.0986122886681098},{"latitude":39.66553170731706,"longitude":-121.72202926829263,"count":205,"log(count)":5.3230099791384085},{"latitude":38.180723529411765,"longitude":-120.69076470588234,"count":17,"log(count)":2.833213344056216},{"latitude":39.192814285714284,"longitude":-122.04342857142856,"count":7,"log(count)":1.9459101490553132},{"latitude":37.967413996316765,"longitude":-122.06716942909763,"count":543,"log(count)":6.297109319933935},{"latitude":38.513686666666665,"longitude":-76.52752000000001,"count":15,"log(count)":2.70805020110221},{"latitude":38.59446785714285,"longitude":-76.93900357142857,"count":56,"log(count)":4.02535169073515},{"latitude":48.64565,"longitude":-104.5495,"count":2,"log(count)":0.6931471805599453},{"latitude":39.3778,"longitude":-81.187,"count":1,"log(count)":0},{"latitude":39.5232,"longitude":-80.9407,"count":2,"log(count)":0.6931471805599453},{"latitude":38.9479,"longitude":-81.2704,"count":1,"log(count)":0},{"latitude":48.231849999999994,"longitude":-106.29499999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":40.735265714285674,"longitude":-124.05654571428578,"count":350,"log(count)":5.857933154483459},{"latitude":41.69115555555556,"longitude":-124.1337777777778,"count":9,"log(count)":2.1972245773362196},{"latitude":40.568123376623376,"longitude":-122.33151948051947,"count":77,"log(count)":4.343805421853684},{"latitude":39.251641666666664,"longitude":-120.90837500000002,"count":24,"log(count)":3.1780538303479458},{"latitude":34.18762195121951,"longitude":-84.47499512195122,"count":41,"log(count)":3.713572066704308},{"latitude":33.90885658536585,"longitude":-84.5604843902439,"count":205,"log(count)":5.3230099791384085},{"latitude":33.74631714285714,"longitude":-84.7023,"count":35,"log(count)":3.5553480614894135},{"latitude":34.277902777777776,"longitude":-83.82592083333333,"count":72,"log(count)":4.276666119016055},{"latitude":33.76496971962615,"longitude":-84.2412254205607,"count":535,"log(count)":6.282266746896006},{"latitude":33.451279166666666,"longitude":-84.50948749999999,"count":24,"log(count)":3.1780538303479458},{"latitude":34.391725,"longitude":-82.978,"count":4,"log(count)":1.3862943611198906},{"latitude":31.8475,"longitude":-82.60210000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":33.797124999999994,"longitude":-82.419375,"count":4,"log(count)":1.3862943611198906},{"latitude":34.11142343749999,"longitude":-83.2386546875,"count":64,"log(count)":4.1588830833596715},{"latitude":34.79496666666666,"longitude":-84.79666666666667,"count":3,"log(count)":1.0986122886681098},{"latitude":33.94079953271028,"longitude":-84.08731355140185,"count":214,"log(count)":5.365976015021851},{"latitude":45.5677,"longitude":-104.208,"count":1,"log(count)":0},{"latitude":39.2095,"longitude":-81.0513,"count":1,"log(count)":0},{"latitude":37.40348888888889,"longitude":-81.68171111111111,"count":18,"log(count)":2.8903717578961645},{"latitude":39.0379,"longitude":-79.75399999999999,"count":1,"log(count)":0},{"latitude":39.28405,"longitude":-80.7932,"count":2,"log(count)":0.6931471805599453},{"latitude":38.8826,"longitude":-80.84576,"count":5,"log(count)":1.6094379124341003},{"latitude":39.33491818181819,"longitude":-80.03201818181817,"count":11,"log(count)":2.3978952727983707},{"latitude":36.882774999999995,"longitude":-77.30122499999999,"count":4,"log(count)":1.3862943611198906},{"latitude":37.09111764705882,"longitude":-77.54823529411766,"count":17,"log(count)":2.833213344056216},{"latitude":40.13286979166666,"longitude":-122.23443750000011,"count":192,"log(count)":5.2574953720277815},{"latitude":40.393550000000005,"longitude":-120.714,"count":2,"log(count)":0.6931471805599453},{"latitude":32.048579237844955,"longitude":-81.10652851511165,"count":761,"log(count)":6.634633357861686},{"latitude":33.75380082508245,"longitude":-84.4245478547854,"count":1212,"log(count)":7.10002716662926},{"latitude":39.33862225705327,"longitude":-76.62137460815046,"count":319,"log(count)":5.765191102784844},{"latitude":39.51888888888889,"longitude":-77.03317222222222,"count":18,"log(count)":2.8903717578961645},{"latitude":38.99146666666667,"longitude":-80.2316,"count":3,"log(count)":1.0986122886681098},{"latitude":38.7991,"longitude":-81.107175,"count":4,"log(count)":1.3862943611198906},{"latitude":39.11736666666667,"longitude":-80.01996666666666,"count":6,"log(count)":1.791759469228055},{"latitude":38.9985,"longitude":-79.1229,"count":1,"log(count)":0},{"latitude":38.299092,"longitude":-76.570812,"count":25,"log(count)":3.2188758248682006},{"latitude":39.49347887323945,"longitude":-76.27849154929578,"count":71,"log(count)":4.2626798770413155},{"latitude":35.0899283801875,"longitude":-106.62239223560911,"count":747,"log(count)":6.616065185132817},{"latitude":33.38592934782609,"longitude":-104.52380434782611,"count":92,"log(count)":4.5217885770490405},{"latitude":32.68586785714285,"longitude":-103.17375000000003,"count":28,"log(count)":3.332204510175204},{"latitude":35.870999999999995,"longitude":-106.27539999999999,"count":5,"log(count)":1.6094379124341003},{"latitude":35.9734,"longitude":-105.544,"count":1,"log(count)":0},{"latitude":36.24763846153846,"longitude":-106.21284615384614,"count":13,"log(count)":2.5649493574615367},{"latitude":34.06771764705883,"longitude":-103.27908823529414,"count":34,"log(count)":3.5263605246161616},{"latitude":33.13802,"longitude":-107.2492,"count":5,"log(count)":1.6094379124341003},{"latitude":34.0492,"longitude":-106.89099999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":36.9823909090909,"longitude":-76.6607,"count":11,"log(count)":2.3978952727983707},{"latitude":47.45575833333334,"longitude":-115.94766666666668,"count":12,"log(count)":2.4849066497880004},{"latitude":39.30519274515018,"longitude":-76.62640324209413,"count":3763,"log(count)":8.232971790593437},{"latitude":38.88939456134674,"longitude":-76.98928637099388,"count":3089,"log(count)":8.035602692918582},{"latitude":39.19988979591837,"longitude":-76.84094897959189,"count":49,"log(count)":3.8918202981106265},{"latitude":39.06914454545455,"longitude":-76.59911909090908,"count":440,"log(count)":6.0867747269123065},{"latitude":39.5744,"longitude":-79.2586,"count":4,"log(count)":1.3862943611198906},{"latitude":39.42112962962964,"longitude":-77.40024074074074,"count":81,"log(count)":4.394449154672439},{"latitude":39.08349081632654,"longitude":-77.09687448979591,"count":98,"log(count)":4.584967478670572},{"latitude":39.62321851851852,"longitude":-78.8081777777778,"count":27,"log(count)":3.295836866004329},{"latitude":39.6276743902439,"longitude":-77.73435365853656,"count":82,"log(count)":4.406719247264253},{"latitude":38.88658392857139,"longitude":-76.89775558035707,"count":448,"log(count)":6.104793232414985},{"latitude":47.72116666666667,"longitude":-104.18233333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":47.0826,"longitude":-104.846,"count":1,"log(count)":0},{"latitude":47.9215,"longitude":-106.12700000000001,"count":1,"log(count)":0},{"latitude":45.52771666666667,"longitude":-107.66233333333332,"count":6,"log(count)":1.791759469228055},{"latitude":45.60215,"longitude":-106.5995,"count":2,"log(count)":0.6931471805599453},{"latitude":40.065184210526326,"longitude":-80.70362105263155,"count":38,"log(count)":3.6375861597263857},{"latitude":39.869933333333336,"longitude":-80.70561666666667,"count":6,"log(count)":1.791759469228055},{"latitude":39.636675000000004,"longitude":-80.896225,"count":4,"log(count)":1.3862943611198906},{"latitude":39.43558,"longitude":-78.98856,"count":5,"log(count)":1.6094379124341003},{"latitude":39.48217906976744,"longitude":-80.16911162790699,"count":43,"log(count)":3.7612001156935624},{"latitude":39.29610350877192,"longitude":-80.32839824561404,"count":57,"log(count)":4.04305126783455},{"latitude":39.04405,"longitude":-78.9767,"count":2,"log(count)":0.6931471805599453},{"latitude":39.31885,"longitude":-78.69800000000001,"count":2,"log(count)":0.6931471805599453},{"latitude":45.78104931506849,"longitude":-108.5366369863013,"count":146,"log(count)":4.983606621708336},{"latitude":46.2914,"longitude":-107.09700000000001,"count":1,"log(count)":0},{"latitude":48.5067,"longitude":-111.85600000000001,"count":1,"log(count)":0},{"latitude":45.8491,"longitude":-109.57700000000001,"count":1,"log(count)":0},{"latitude":45.638999999999996,"longitude":-109.258,"count":1,"log(count)":0},{"latitude":45.99570000000002,"longitude":-112.53441095890409,"count":73,"log(count)":4.290459441148391},{"latitude":47.71146666666667,"longitude":-115.18766666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":46.346648,"longitude":-114.13327999999997,"count":25,"log(count)":3.2188758248682006},{"latitude":46.413225,"longitude":-108.52699999999999,"count":4,"log(count)":1.3862943611198906},{"latitude":46.87537857142859,"longitude":-114.01519999999996,"count":70,"log(count)":4.248495242049359},{"latitude":46.5481,"longitude":-110.90299999999999,"count":1,"log(count)":0},{"latitude":48.61500000000001,"longitude":-112.73199999999999,"count":3,"log(count)":1.0986122886681098},{"latitude":48.27107413793104,"longitude":-114.23815517241385,"count":58,"log(count)":4.060443010546419},{"latitude":47.0618,"longitude":-109.41799999999999,"count":1,"log(count)":0},{"latitude":46.1277,"longitude":-112.95325,"count":4,"log(count)":1.3862943611198906},{"latitude":47.488261224489804,"longitude":-111.32893877551021,"count":49,"log(count)":3.8918202981106265},{"latitude":46.15088,"longitude":-111.5382,"count":5,"log(count)":1.6094379124341003},{"latitude":45.18276,"longitude":-112.7618,"count":5,"log(count)":1.6094379124341003},{"latitude":46.395266666666664,"longitude":-112.731,"count":3,"log(count)":1.0986122886681098},{"latitude":48.3627,"longitude":-107.87799999999999,"count":1,"log(count)":0},{"latitude":45.59233999999999,"longitude":-110.5978,"count":5,"log(count)":1.6094379124341003},{"latitude":47.16683333333333,"longitude":-114.85833333333333,"count":3,"log(count)":1.0986122886681098},{"latitude":45.3993,"longitude":-111.798,"count":4,"log(count)":1.3862943611198906},{"latitude":48.6388,"longitude":-110.97200000000001,"count":1,"log(count)":0},{"latitude":48.48658888888888,"longitude":-115.42622222222222,"count":9,"log(count)":2.1972245773362196},{"latitude":46.16415,"longitude":-112.0655,"count":4,"log(count)":1.3862943611198906},{"latitude":48.5485,"longitude":-109.689,"count":2,"log(count)":0.6931471805599453},{"latitude":45.73026486486486,"longitude":-111.10591891891889,"count":37,"log(count)":3.6109179126442243},{"latitude":46.251149999999996,"longitude":-105.96799999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":45.0878,"longitude":-109.208,"count":2,"log(count)":0.6931471805599453},{"latitude":48.5937,"longitude":-109.215,"count":1,"log(count)":0},{"latitude":40.47730000000001,"longitude":-90.61603333333335,"count":3,"log(count)":1.0986122886681098},{"latitude":37.16136666666667,"longitude":-88.69051666666667,"count":12,"log(count)":2.4849066497880004},{"latitude":41.2096,"longitude":-90.9953,"count":1,"log(count)":0},{"latitude":41.8218483295076,"longitude":-87.67759518830213,"count":11763,"log(count)":9.372714290960442},{"latitude":42.36246164383561,"longitude":-87.92690136986302,"count":146,"log(count)":4.983606621708336},{"latitude":42.287821428571434,"longitude":-88.36847380952382,"count":42,"log(count)":3.7376696182833684},{"latitude":40.4847737704918,"longitude":-88.98702295081969,"count":61,"log(count)":4.110873864173311},{"latitude":38.329100000000004,"longitude":-90.13850000000001,"count":5,"log(count)":1.6094379124341003},{"latitude":39.241150000000005,"longitude":-89.538325,"count":4,"log(count)":1.3862943611198906},{"latitude":42.05732857142857,"longitude":-89.28547142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":40.701086718750055,"longitude":-89.60935691964285,"count":896,"log(count)":6.79794041297493},{"latitude":38.041050000000006,"longitude":-89.288,"count":6,"log(count)":1.791759469228055},{"latitude":37.107499999999995,"longitude":-89.1773,"count":4,"log(count)":1.3862943611198906},{"latitude":38.08575,"longitude":-89.762225,"count":4,"log(count)":1.3862943611198906},{"latitude":38.58734431818178,"longitude":-90.07329375000002,"count":352,"log(count)":5.863631175598097},{"latitude":39.78889285714286,"longitude":-89.6369724025974,"count":308,"log(count)":5.730099782973574},{"latitude":40.1845,"longitude":-90.6394,"count":1,"log(count)":0},{"latitude":39.2504,"longitude":-88.8576,"count":1,"log(count)":0},{"latitude":42.296584210526305,"longitude":-89.6207315789474,"count":57,"log(count)":4.04305126783455},{"latitude":40.60077894736842,"longitude":-89.59532368421048,"count":38,"log(count)":3.6375861597263857},{"latitude":37.471399999999996,"longitude":-89.30336666666666,"count":3,"log(count)":1.0986122886681098},{"latitude":40.14414056603772,"longitude":-87.62044245283016,"count":106,"log(count)":4.663439094112067},{"latitude":40.880874999999996,"longitude":-90.5627,"count":4,"log(count)":1.3862943611198906},{"latitude":38.28875,"longitude":-89.38034999999999,"count":2,"log(count)":0.6931471805599453},{"latitude":41.779090476190476,"longitude":-89.79748095238095,"count":21,"log(count)":3.044522437723423},{"latitude":41.537526351351374,"longitude":-88.07078479729735,"count":296,"log(count)":5.69035945432406},{"latitude":37.74620851063829,"longitude":-88.97422340425531,"count":47,"log(count)":3.8501476017100584},{"latitude":42.2748882282996,"longitude":-89.08553365041621,"count":841,"log(count)":6.734591659972948},{"latitude":40.800650000000005,"longitude":-89.365,"count":2,"log(count)":0.6931471805599453},{"latitude":38.02997894736843,"longitude":-78.48578947368425,"count":57,"log(count)":4.04305126783455},{"latitude":37.7899,"longitude":-79.99147142857143,"count":7,"log(count)":1.9459101490553132},{"latitude":38.8538,"longitude":-77.3262,"count":1,"log(count)":0},{"latitude":37.7817,"longitude":-79.4443,"count":1,"log(count)":0},{"latitude":36.691035714285704,"longitude":-79.86871428571429,"count":14,"log(count)":2.6390573296152584},{"latitude":37.531792579505286,"longitude":-77.45068775029445,"count":849,"log(count)":6.744059186311348},{"latitude":37.28566,"longitude":-80.06606000000002,"count":5,"log(count)":1.6094379124341003},{"latitude":38.15301000000001,"longitude":-79.07761,"count":10,"log(count)":2.302585092994046},{"latitude":37.27781818181818,"longitude":-76.70393636363636,"count":11,"log(count)":2.3978952727983707},{"latitude":39.1778875,"longitude":-78.1654375,"count":8,"log(count)":2.0794415416798357},{"latitude":47.490353846153845,"longitude":-114.12830769230769,"count":13,"log(count)":2.5649493574615367},{"latitude":37.4175,"longitude":-118.542,"count":1,"log(count)":0},{"latitude":39.9292,"longitude":-105.06371428571431,"count":7,"log(count)":1.9459101490553132},{"latitude":35.36578443579766,"longitude":-118.96375226977952,"count":771,"log(count)":6.647688373563329},{"latitude":58.147099999999995,"longitude":-135.8795,"count":2,"log(count)":0.6931471805599453},{"latitude":56.8063,"longitude":-132.97,"count":1,"log(count)":0}]}'),OR1={config:CR1,data:kR1,mark:TR1,encoding:$R1,height:MR1,width:NR1,$schema:RR1,datasets:DR1};function FR1(){const t="count-dist";return F.useEffect(()=>{mp("#"+t,OR1)},[]),$.jsx(uJ,{title:"What Does 'Unusually Violent' Mean?",content:rn.county_distribution.content,id:t,caption:rn.county_distribution.caption})}function zR1(){return $.jsx(md,{title:"Abstract",content:rn.abstract})}function LR1(t){let{title:e,beforeContent:n,id:i,caption:o,afterContent:u}=t;return $.jsx(N1,{fluid:!0,className:"report-article",children:$.jsxs(N1,{children:[$.jsx("h2",{children:e}),$.jsxs("div",{className:"mt-4",children:[$.jsx("div",{children:n.map((l,a)=>$.jsx("p",{className:"text-left",children:l},a))}),$.jsxs("div",{className:"text-center",children:[$.jsx("div",{id:i}),$.jsx("figcaption",{className:"text-muted mb-4",children:o})]}),$.jsx("div",{children:u.map((l,a)=>$.jsx("p",{className:"text-left",children:l},a))})]})]})})}const jR1={view:{continuousWidth:400,continuousHeight:300}},PR1=[{data:{url:"https://vega.github.io/vega-datasets/data/us-10m.json",format:{feature:"counties",type:"topojson"}},mark:{type:"geoshape",fill:"lightgray",stroke:"white",strokeWidth:.1},height:450,projection:{type:"albersUsa"},width:675},{data:{name:"data-707b2ed243e8e86b82d40294c375f9f9"},mark:"circle",encoding:{color:{value:"steelblue"},latitude:{field:"latitude",type:"quantitative"},longitude:{field:"longitude",type:"quantitative"},size:{type:"quantitative",field:"count",title:"Number of Incidents, 2014-2018"}}}],IR1="https://vega.github.io/schema/vega-lite/v4.8.1.json",BR1=JSON.parse('{"data-707b2ed243e8e86b82d40294c375f9f9":[{"latitude":32.67293333333333,"longitude":-114.6346274509804,"count":51},{"latitude":35.2590375,"longitude":-109.357125,"count":8},{"latitude":31.61888723404255,"longitude":-110.09391489361701,"count":47},{"latitude":35.24382325581396,"longitude":-111.67000000000002,"count":43},{"latitude":32.86505999999999,"longitude":-109.71809999999998,"count":10},{"latitude":35.08569156626506,"longitude":-114.2140843373494,"count":83},{"latitude":32.19118870056498,"longitude":-110.96103672316391,"count":354},{"latitude":33.052049253731326,"longitude":-111.61695522388058,"count":67},{"latitude":33.47660473061766,"longitude":-112.07727135348195,"count":1522},{"latitude":33.811550000000004,"longitude":-111.022875,"count":8},{"latitude":31.43598,"longitude":-110.97520000000002,"count":5},{"latitude":33.0519,"longitude":-109.32600000000001,"count":1},{"latitude":34.75562352941176,"longitude":-110.27358823529411,"count":17},{"latitude":34.61960476190477,"longitude":-112.24185714285717,"count":42},{"latitude":33.815825,"longitude":-114.17549999999999,"count":8},{"latitude":34.3913,"longitude":-91.4594,"count":8},{"latitude":33.15395,"longitude":-91.89021666666667,"count":6},{"latitude":33.5174,"longitude":-92.075925,"count":4},{"latitude":33.652,"longitude":-92.4743,"count":2},{"latitude":36.37175,"longitude":-90.52611666666667,"count":6},{"latitude":33.213975,"longitude":-93.30857499999999,"count":4},{"latitude":34.09215999999999,"longitude":-93.0889,"count":5},{"latitude":35.1521,"longitude":-92.7301,"count":1},{"latitude":35.83372481203006,"longitude":-90.68728082706774,"count":266},{"latitude":35.24632666666667,"longitude":-90.75041999999999,"count":15},{"latitude":33.8168,"longitude":-92.4188,"count":1},{"latitude":33.8384,"longitude":-91.47103999999999,"count":5},{"latitude":33.608222222222224,"longitude":-91.73774444444446,"count":18},{"latitude":35.08516730769231,"longitude":-92.41744615384619,"count":52},{"latitude":35.438633333333335,"longitude":-93.89746666666666,"count":3},{"latitude":34.50304537037037,"longitude":-93.06571203703709,"count":108},{"latitude":34.307759999999995,"longitude":-92.33198000000002,"count":5},{"latitude":36.08179523809524,"longitude":-90.51699523809525,"count":21},{"latitude":33.67877142857142,"longitude":-93.58625714285714,"count":14},{"latitude":34.374025,"longitude":-92.90375,"count":4},{"latitude":36.10803333333333,"longitude":-91.95306666666666,"count":3},{"latitude":35.64736428571428,"longitude":-91.22578571428572,"count":14},{"latitude":34.22091513157894,"longitude":-92.0187335526316,"count":152},{"latitude":35.455470000000005,"longitude":-93.42788,"count":10},{"latitude":33.40065,"longitude":-93.518,"count":2},{"latitude":36.07042,"longitude":-91.04526000000001,"count":10},{"latitude":34.7663,"longitude":-90.76596666666667,"count":3},{"latitude":33.9318,"longitude":-93.8471,"count":1},{"latitude":33.95865,"longitude":-91.801625,"count":4},{"latitude":33.685042857142854,"longitude":-94.16565714285716,"count":7},{"latitude":36.36266666666667,"longitude":-93.61416666666666,"count":6},{"latitude":35.433908333333335,"longitude":-92.127425,"count":12},{"latitude":34.57429848484849,"longitude":-92.53720606060611,"count":66},{"latitude":33.1239,"longitude":-91.2595,"count":2},{"latitude":35.51182272727272,"longitude":-94.25834545454545,"count":22},{"latitude":35.1684238095238,"longitude":-90.18734285714287,"count":21},{"latitude":35.757866666666665,"longitude":-91.59660000000001,"count":15},{"latitude":34.81389166666667,"longitude":-91.95823333333333,"count":24},{"latitude":36.1105,"longitude":-93.70973999999998,"count":5},{"latitude":33.42185111111112,"longitude":-93.98947333333332,"count":45},{"latitude":34.724125,"longitude":-91.215925,"count":8},{"latitude":34.470150000000004,"longitude":-93.54625,"count":2},{"latitude":33.7956,"longitude":-93.38225,"count":2},{"latitude":33.60232,"longitude":-92.81682,"count":5},{"latitude":34.981814285714286,"longitude":-92.70737142857142,"count":7},{"latitude":34.540571739130435,"longitude":-90.62920217391299,"count":46},{"latitude":34.3347,"longitude":-93.5427,"count":1},{"latitude":35.606831818181824,"longitude":-90.49243181818184,"count":22},{"latitude":34.48473333333334,"longitude":-94.25456666666666,"count":3},{"latitude":34.7848,"longitude":-91.4585,"count":1},{"latitude":34.734054662973186,"longitude":-92.31293351800556,"count":1083},{"latitude":36.3662,"longitude":-90.95949999999999,"count":4},{"latitude":34.7946,"longitude":-94.2071,"count":1},{"latitude":35.89693333333333,"longitude":-92.6137,"count":3},{"latitude":35.351221153846154,"longitude":-94.38329999999999,"count":104},{"latitude":34.005475000000004,"longitude":-94.30122499999999,"count":4},{"latitude":36.19501875,"longitude":-91.50755625,"count":16},{"latitude":36.33027368421052,"longitude":-92.36025789473683,"count":38},{"latitude":36.3134125,"longitude":-94.24593888888887,"count":72},{"latitude":36.25231818181819,"longitude":-93.07687272727274,"count":11},{"latitude":36.3044,"longitude":-92.65804285714285,"count":7},{"latitude":35.91303153153154,"longitude":-89.92318558558553,"count":111},{"latitude":36.0082,"longitude":-93.18700000000001,"count":1},{"latitude":35.32938846153846,"longitude":-93.08018846153846,"count":26},{"latitude":35.88665,"longitude":-92.0946,"count":2},{"latitude":33.20175,"longitude":-92.65032727272728,"count":22},{"latitude":35.5909,"longitude":-92.4807,"count":1},{"latitude":36.10890416666667,"longitude":-94.16226979166665,"count":96},{"latitude":35.26139393939394,"longitude":-91.74519696969696,"count":33},{"latitude":34.9983,"longitude":-91.2524,"count":1},{"latitude":35.096283333333325,"longitude":-93.30375,"count":6},{"latitude":35.26312,"longitude":-93.68854999999999,"count":10},{"latitude":35.01348333333332,"longitude":-90.76375555555555,"count":36},{"latitude":32.475337499999995,"longitude":-86.50378999999998,"count":40},{"latitude":30.57534302325582,"longitude":-87.75507790697675,"count":86},{"latitude":31.874304761904757,"longitude":-85.23385238095237,"count":21},{"latitude":32.992025,"longitude":-87.1540125,"count":8},{"latitude":33.998400000000004,"longitude":-86.57107142857141,"count":21},{"latitude":32.13495555555556,"longitude":-85.71204444444446,"count":18},{"latitude":31.798983999999997,"longitude":-86.635268,"count":25},{"latitude":33.684663541666666,"longitude":-85.82779479166669,"count":96},{"latitude":32.841249999999995,"longitude":-85.2604590909091,"count":22},{"latitude":34.18816428571429,"longitude":-85.64573571428569,"count":14},{"latitude":32.872,"longitude":-86.64472380952382,"count":21},{"latitude":32.11143,"longitude":-88.24618999999998,"count":10},{"latitude":31.60635,"longitude":-87.83725,"count":2},{"latitude":33.1236,"longitude":-85.8348,"count":1},{"latitude":33.6497375,"longitude":-85.5378625,"count":8},{"latitude":31.344178787878786,"longitude":-85.8738424242424,"count":33},{"latitude":34.734145,"longitude":-87.68745749999998,"count":40},{"latitude":31.435125,"longitude":-86.9027,"count":4},{"latitude":32.99225,"longitude":-86.12938749999999,"count":8},{"latitude":31.261542105263164,"longitude":-86.39512631578947,"count":19},{"latitude":31.737612499999997,"longitude":-86.2640875,"count":8},{"latitude":34.16857187499999,"longitude":-86.79469062500003,"count":32},{"latitude":31.422860606060603,"longitude":-85.62291212121211,"count":33},{"latitude":32.40242676056338,"longitude":-87.02944788732398,"count":142},{"latitude":34.46781500000001,"longitude":-85.80094500000001,"count":40},{"latitude":32.52742499999999,"longitude":-86.24942500000002,"count":44},{"latitude":31.071814285714282,"longitude":-87.35728571428571,"count":28},{"latitude":34.01704605263157,"longitude":-86.00670921052631,"count":76},{"latitude":33.7619,"longitude":-87.7469,"count":1},{"latitude":34.48665,"longitude":-87.78023636363636,"count":22},{"latitude":31.107009090909095,"longitude":-85.76758181818182,"count":11},{"latitude":32.8699625,"longitude":-87.90333749999999,"count":8},{"latitude":32.820233333333334,"longitude":-87.61255555555555,"count":9},{"latitude":31.465825000000002,"longitude":-85.23562500000001,"count":4},{"latitude":31.21295666666668,"longitude":-85.38645333333332,"count":90},{"latitude":34.77052173913044,"longitude":-85.8839739130435,"count":23},{"latitude":33.518736306620255,"longitude":-86.82791742160275,"count":1435},{"latitude":33.7543,"longitude":-88.1053,"count":2},{"latitude":34.84017222222222,"longitude":-87.65081296296296,"count":54},{"latitude":34.483472727272726,"longitude":-87.23966363636363,"count":11},{"latitude":32.616356488549606,"longitude":-85.3930801526717,"count":131},{"latitude":34.79911084337348,"longitude":-86.95637710843378,"count":83},{"latitude":32.188775,"longitude":-86.64219999999999,"count":8},{"latitude":32.42731111111111,"longitude":-85.7121851851852,"count":27},{"latitude":34.74102111486485,"longitude":-86.61517128378378,"count":592},{"latitude":32.45377692307692,"longitude":-87.82207692307692,"count":13},{"latitude":34.107400000000005,"longitude":-87.98726666666666,"count":6},{"latitude":34.324882352941174,"longitude":-86.31934313725492,"count":51},{"latitude":30.68537240398291,"longitude":-88.12627240398304,"count":703},{"latitude":31.494600000000002,"longitude":-87.32273333333335,"count":3},{"latitude":32.35177423935094,"longitude":-86.27925314401622,"count":493},{"latitude":34.555967741935476,"longitude":-86.96121935483876,"count":124},{"latitude":32.58431111111111,"longitude":-87.38743333333335,"count":9},{"latitude":33.242016666666665,"longitude":-88.12901666666669,"count":6},{"latitude":31.799141666666667,"longitude":-85.94946944444445,"count":36},{"latitude":33.31132,"longitude":-85.54636,"count":5},{"latitude":32.43346181818182,"longitude":-85.03600545454542,"count":55},{"latitude":33.275865454545446,"longitude":-86.71248727272726,"count":55},{"latitude":32.53788333333333,"longitude":-88.30182500000001,"count":12},{"latitude":33.39805384615385,"longitude":-86.1542846153846,"count":39},{"latitude":32.8789575,"longitude":-85.87660000000001,"count":40},{"latitude":33.194180399999986,"longitude":-87.53662560000008,"count":250},{"latitude":33.815264,"longitude":-87.22265200000001,"count":25},{"latitude":31.323,"longitude":-88.13884,"count":5},{"latitude":31.993863636363642,"longitude":-87.41232727272727,"count":11},{"latitude":34.18825,"longitude":-87.5041,"count":2},{"latitude":33.67342,"longitude":-86.35101499999999,"count":20},{"latitude":39.849433014354084,"longitude":-104.93194736842108,"count":209},{"latitude":37.5579,"longitude":-105.875,"count":3},{"latitude":39.672254545454514,"longitude":-104.86010454545455,"count":220},{"latitude":37.24993333333333,"longitude":-107.11566666666666,"count":3},{"latitude":40.07498437499999,"longitude":-105.19493750000001,"count":64},{"latitude":38.6881,"longitude":-106.0775,"count":2},{"latitude":39.709966666666666,"longitude":-105.56200000000001,"count":3},{"latitude":37.279250000000005,"longitude":-106.05850000000001,"count":2},{"latitude":37.2008,"longitude":-105.42399999999999,"count":1},{"latitude":38.1394,"longitude":-105.42200000000001,"count":1},{"latitude":38.78771666666666,"longitude":-108.008,"count":6},{"latitude":39.76690431893684,"longitude":-104.88571594684396,"count":602},{"latitude":39.44532619047619,"longitude":-104.87,"count":42},{"latitude":39.60672352941177,"longitude":-106.7269411764706,"count":17},{"latitude":38.84338974042035,"longitude":-104.77208776267005,"count":809},{"latitude":39.38636666666667,"longitude":-104.19449999999999,"count":6},{"latitude":38.42923888888889,"longitude":-105.20811111111112,"count":36},{"latitude":39.539738888888884,"longitude":-107.56416666666665,"count":18},{"latitude":39.817299999999996,"longitude":-105.47666666666667,"count":3},{"latitude":40.06225,"longitude":-105.878,"count":2},{"latitude":38.549375,"longitude":-106.86575,"count":4},{"latitude":37.628,"longitude":-104.85275,"count":4},{"latitude":39.73346403508771,"longitude":-105.11525438596492,"count":114},{"latitude":39.2906,"longitude":-102.875,"count":1},{"latitude":37.20308571428571,"longitude":-107.75321428571426,"count":14},{"latitude":39.2505,"longitude":-106.292,"count":1},{"latitude":40.50581041666667,"longitude":-105.10074999999993,"count":96},{"latitude":37.18384,"longitude":-104.64760000000001,"count":5},{"latitude":39.15545,"longitude":-103.529,"count":2},{"latitude":39.08065043103447,"longitude":-108.52692672413788,"count":232},{"latitude":40.4557,"longitude":-107.8315,"count":4},{"latitude":37.38986,"longitude":-108.6202,"count":5},{"latitude":38.49782941176471,"longitude":-107.90288235294119,"count":17},{"latitude":40.2499,"longitude":-103.8,"count":1},{"latitude":38.0427,"longitude":-103.69200000000001,"count":3},{"latitude":39.36267142857143,"longitude":-105.62142857142855,"count":7},{"latitude":39.183057142857145,"longitude":-106.87657142857144,"count":7},{"latitude":38.0857,"longitude":-102.62100000000001,"count":1},{"latitude":38.26579750692521,"longitude":-104.62023268698061,"count":361},{"latitude":40.0945,"longitude":-108.729,"count":1},{"latitude":37.61228,"longitude":-106.13579999999999,"count":5},{"latitude":40.48566666666667,"longitude":-106.88816666666666,"count":6},{"latitude":37.951924999999996,"longitude":-106.23724999999999,"count":4},{"latitude":37.9385,"longitude":-107.838,"count":1},{"latitude":39.59575,"longitude":-106.06625,"count":4},{"latitude":38.841762499999994,"longitude":-105.18962500000002,"count":8},{"latitude":40.368506796116485,"longitude":-104.73414563106797,"count":103},{"latitude":40.1185,"longitude":-102.72200000000001,"count":1},{"latitude":41.7618289408867,"longitude":-72.69934384236457,"count":812},{"latitude":41.85323421052631,"longitude":-72.38001842105264,"count":38},{"latitude":41.16355173410407,"longitude":-73.28820067437367,"count":1038},{"latitude":41.72187368421053,"longitude":-73.21366578947367,"count":38},{"latitude":41.503953191489366,"longitude":-72.5965553191489,"count":47},{"latitude":41.35531868811879,"longitude":-72.94568539603958,"count":808},{"latitude":41.41650955414013,"longitude":-72.08394267515926,"count":157},{"latitude":41.75979565217392,"longitude":-72.07728695652173,"count":46},{"latitude":38.68827380952379,"longitude":-75.40364603174605,"count":126},{"latitude":39.72223066322135,"longitude":-75.5766731266151,"count":1161},{"latitude":39.136100568181824,"longitude":-75.52859176136364,"count":352},{"latitude":38.784428125000005,"longitude":-120.6200625,"count":32},{"latitude":36.74696591889561,"longitude":-119.77996117342525,"count":1159},{"latitude":39.66225714285714,"longitude":-122.18564285714285,"count":14},{"latitude":32.8484975,"longitude":-115.56105000000002,"count":40},{"latitude":36.22899818181818,"longitude":-119.73736363636363,"count":55},{"latitude":38.990655,"longitude":-122.721,"count":20},{"latitude":34.03012401466549,"longitude":-118.22162603116426,"count":3273},{"latitude":37.024868627450985,"longitude":-119.99825490196075,"count":51},{"latitude":37.997425714285704,"longitude":-122.56928571428573,"count":35},{"latitude":37.5569,"longitude":-120.10657142857143,"count":7},{"latitude":39.36980322580646,"longitude":-123.41154838709677,"count":31},{"latitude":37.295126819923325,"longitude":-120.56860919540235,"count":261},{"latitude":41.470150000000004,"longitude":-120.58699999999999,"count":2},{"latitude":36.61330910931178,"longitude":-121.58628137651827,"count":494},{"latitude":38.322908000000005,"longitude":-122.31396000000002,"count":25},{"latitude":33.749120809248595,"longitude":-117.89328131021199,"count":519},{"latitude":38.86933559322035,"longitude":-121.10330508474574,"count":59},{"latitude":40.037816666666664,"longitude":-121.23033333333335,"count":6},{"latitude":33.816097331639114,"longitude":-116.86295044472672,"count":787},{"latitude":38.576711287758336,"longitude":-121.4320015898252,"count":629},{"latitude":36.859833333333334,"longitude":-121.43,"count":9},{"latitude":34.20902673656615,"longitude":-117.27181651376146,"count":763},{"latitude":32.840744992526155,"longitude":-117.11138266068757,"count":669},{"latitude":37.75738368983962,"longitude":-122.4169491978609,"count":374},{"latitude":37.97618283828384,"longitude":-121.29073102310237,"count":606},{"latitude":35.289565384615386,"longitude":-120.6261153846154,"count":26},{"latitude":37.570991406250016,"longitude":-122.33598437500002,"count":128},{"latitude":34.81529099999999,"longitude":-120.31060000000001,"count":100},{"latitude":37.324588269794724,"longitude":-121.89056011730197,"count":341},{"latitude":36.95589548872181,"longitude":-121.8901503759399,"count":133},{"latitude":41.55466153846154,"longitude":-122.48492307692308,"count":13},{"latitude":38.20030638297872,"longitude":-122.1186861702128,"count":188},{"latitude":37.6160945525292,"longitude":-120.96879766536952,"count":257},{"latitude":39.15116666666667,"longitude":-121.63933333333333,"count":21},{"latitude":40.701933333333336,"longitude":-123.21779999999998,"count":15},{"latitude":36.25594791666667,"longitude":-119.24357500000002,"count":240},{"latitude":37.984175,"longitude":-120.30124999999998,"count":12},{"latitude":34.21920156249999,"longitude":-119.14795572916661,"count":384},{"latitude":38.60407812500001,"longitude":-121.68937500000003,"count":32},{"latitude":39.14089696969697,"longitude":-121.52736363636362,"count":33},{"latitude":30.33122507685559,"longitude":-81.67054852876598,"count":2277},{"latitude":27.196175,"longitude":-81.8535,"count":4},{"latitude":29.348386666666666,"longitude":-82.63656666666667,"count":15},{"latitude":29.6185,"longitude":-83.05013333333333,"count":6},{"latitude":30.08930303030303,"longitude":-81.79497575757574,"count":66},{"latitude":30.655642857142862,"longitude":-86.18357619047617,"count":42},{"latitude":30.098245454545452,"longitude":-83.59210000000002,"count":11},{"latitude":30.27452857142857,"longitude":-82.98348571428572,"count":7},{"latitude":30.611050000000002,"longitude":-81.59959736842103,"count":38},{"latitude":30.467959090909087,"longitude":-83.43052727272728,"count":22},{"latitude":29.9205,"longitude":-82.9734,"count":2},{"latitude":30.556866666666664,"longitude":-83.82496666666667,"count":3},{"latitude":30.789926760563358,"longitude":-85.2220478873239,"count":71},{"latitude":30.851346153846155,"longitude":-85.79120769230768,"count":13},{"latitude":30.415799999999997,"longitude":-82.8734,"count":2},{"latitude":30.487626771653566,"longitude":-87.25734763779532,"count":254},{"latitude":30.202771212121224,"longitude":-85.67241212121219,"count":198},{"latitude":28.28896076923076,"longitude":-82.50676846153843,"count":130},{"latitude":28.834413513513514,"longitude":-82.05612972972972,"count":37},{"latitude":27.2657585365854,"longitude":-82.46159695121949,"count":164},{"latitude":26.946808620689662,"longitude":-82.08490689655169,"count":58},{"latitude":27.1357,"longitude":-80.8877,"count":1},{"latitude":27.480246801346787,"longitude":-82.5493198653199,"count":297},{"latitude":27.85358749999999,"longitude":-82.71094895833333,"count":384},{"latitude":28.02330900900902,"longitude":-81.80965765765767,"count":222},{"latitude":28.265592783505166,"longitude":-81.38853092783506,"count":97},{"latitude":28.25108773584905,"longitude":-80.69598333333326,"count":318},{"latitude":28.531155293276107,"longitude":-81.39076845493553,"count":1398},{"latitude":28.50885851063829,"longitude":-82.47070638297872,"count":94},{"latitude":28.851489655172415,"longitude":-82.45679655172417,"count":29},{"latitude":26.11297525641027,"longitude":-80.18755858974347,"count":780},{"latitude":26.19731226993865,"longitude":-81.68362208588948,"count":163},{"latitude":25.803079736649632,"longitude":-80.2576604242868,"count":1367},{"latitude":27.482035135135135,"longitude":-81.4486135135135,"count":37},{"latitude":27.972384503311268,"longitude":-82.40551801324507,"count":755},{"latitude":26.601992329956563,"longitude":-81.83079768451519,"count":691},{"latitude":24.77015116279069,"longitude":-81.191076744186,"count":86},{"latitude":27.278890243902442,"longitude":-80.83441219512196,"count":41},{"latitude":26.653444938650313,"longitude":-80.12634210122683,"count":1304},{"latitude":30.635880769230766,"longitude":-85.6272846153846,"count":26},{"latitude":29.702525,"longitude":-82.79934999999999,"count":4},{"latitude":29.92858571428571,"longitude":-82.13591428571429,"count":7},{"latitude":28.725617948717968,"longitude":-81.30374564102561,"count":195},{"latitude":30.16089642857143,"longitude":-82.6484232142857,"count":56},{"latitude":29.627572500000014,"longitude":-81.68730874999997,"count":80},{"latitude":29.796850000000003,"longitude":-84.89488333333334,"count":12},{"latitude":30.159369999999996,"longitude":-84.36763,"count":10},{"latitude":30.009933333333336,"longitude":-82.3687,"count":3},{"latitude":30.612928787878797,"longitude":-87.01405606060608,"count":66},{"latitude":30.545212500000016,"longitude":-86.58007850000001,"count":200},{"latitude":30.439783268482465,"longitude":-84.30427821011672,"count":257},{"latitude":29.966887500000002,"longitude":-85.25525,"count":8},{"latitude":30.61175384615385,"longitude":-84.60231538461538,"count":13},{"latitude":30.457400000000003,"longitude":-85.08696666666667,"count":6},{"latitude":30.29666153846154,"longitude":-82.16223076923077,"count":13},{"latitude":29.096242332613386,"longitude":-81.12026393088549,"count":463},{"latitude":29.159239152119714,"longitude":-82.11575735660843,"count":401},{"latitude":27.686290909090918,"longitude":-80.45054876033058,"count":121},{"latitude":26.738158333333335,"longitude":-81.09898333333332,"count":12},{"latitude":29.916765420560736,"longitude":-81.40526915887855,"count":107},{"latitude":27.3957247813411,"longitude":-80.3533623906706,"count":343},{"latitude":29.51381071428572,"longitude":-81.24072232142859,"count":112},{"latitude":29.65783608695652,"longitude":-82.36102869565215,"count":230},{"latitude":30.4303,"longitude":-84.96187499999999,"count":4},{"latitude":27.160699999999995,"longitude":-80.25067662337662,"count":77},{"latitude":28.752509174311946,"longitude":-81.77944908256877,"count":218},{"latitude":31.25375,"longitude":-83.24475,"count":6},{"latitude":33.61801666666667,"longitude":-85.04447916666668,"count":24},{"latitude":33.37457407407407,"longitude":-84.76406666666665,"count":54},{"latitude":32.8211,"longitude":-84.94482500000001,"count":4},{"latitude":33.054575,"longitude":-84.167575,"count":4},{"latitude":31.78013333333334,"longitude":-81.7648,"count":6},{"latitude":30.84455304878047,"longitude":-83.28045548780491,"count":164},{"latitude":32.6345,"longitude":-84.53649999999999,"count":2},{"latitude":34.58873333333334,"longitude":-83.73711666666668,"count":6},{"latitude":31.24565,"longitude":-84.43090000000001,"count":2},{"latitude":32.39941666666667,"longitude":-82.07091666666666,"count":6},{"latitude":32.68574166666667,"longitude":-83.91848333333334,"count":12},{"latitude":32.775725,"longitude":-81.943175,"count":4},{"latitude":33.00666666666667,"longitude":-83.88231666666667,"count":12},{"latitude":32.57147666666666,"longitude":-83.86753333333333,"count":30},{"latitude":31.697560000000003,"longitude":-83.64708,"count":5},{"latitude":31.555090909090907,"longitude":-83.85013636363637,"count":11},{"latitude":31.704250000000002,"longitude":-84.15334285714287,"count":14},{"latitude":32.06094814814814,"longitude":-84.2216851851852,"count":27},{"latitude":34.017399999999995,"longitude":-85.2137888888889,"count":9},{"latitude":31.213536363636365,"longitude":-84.17269999999999,"count":11},{"latitude":30.853315909090917,"longitude":-83.96918863636364,"count":44},{"latitude":31.155408333333337,"longitude":-83.43275833333334,"count":12},{"latitude":31.17960359712231,"longitude":-83.77703956834533,"count":139},{"latitude":31.170366666666666,"longitude":-84.72343333333333,"count":3},{"latitude":31.445935416666668,"longitude":-83.51003125000001,"count":48},{"latitude":32.3201,"longitude":-84.5199,"count":1},{"latitude":31.54318571428571,"longitude":-82.4623,"count":7},{"latitude":31.6712,"longitude":-85.06944999999999,"count":2},{"latitude":31.381220000000003,"longitude":-84.89496,"count":5},{"latitude":32.157335714285715,"longitude":-82.37169285714286,"count":14},{"latitude":33.07728208955224,"longitude":-83.23525223880597,"count":67},{"latitude":32.9851375,"longitude":-83.57987499999999,"count":8},{"latitude":32.63282857142857,"longitude":-83.35117142857143,"count":7},{"latitude":32.040600000000005,"longitude":-83.458825,"count":4},{"latitude":30.870525,"longitude":-83.562375,"count":4},{"latitude":33.0849,"longitude":-82.37336666666666,"count":3},{"latitude":31.35095,"longitude":-82.93795,"count":2},{"latitude":32.1683,"longitude":-81.9096,"count":1},{"latitude":33.5852,"longitude":-83.513025,"count":4},{"latitude":33.31986666666666,"longitude":-83.71356666666667,"count":3},{"latitude":33.1791,"longitude":-84.3814,"count":1},{"latitude":32.53860666666667,"longitude":-82.90617999999999,"count":15},{"latitude":32.727475,"longitude":-82.72455,"count":4},{"latitude":32.891125,"longitude":-84.3326,"count":4},{"latitude":32.848800000000004,"longitude":-83.24306666666666,"count":3},{"latitude":33.05743333333333,"longitude":-84.71444166666667,"count":12},{"latitude":32.282624999999996,"longitude":-84.05725000000001,"count":4},{"latitude":33.2266,"longitude":-85.0446,"count":1},{"latitude":33.296975,"longitude":-83.263575,"count":4},{"latitude":32.02525,"longitude":-84.7972,"count":2},{"latitude":31.999200000000002,"longitude":-82.0218,"count":2},{"latitude":32.3661,"longitude":-83.32740000000001,"count":2},{"latitude":31.506670270270263,"longitude":-82.85644054054055,"count":37},{"latitude":34.8701,"longitude":-85.4785,"count":3},{"latitude":32.58588181818181,"longitude":-82.30991818181818,"count":11},{"latitude":32.26446,"longitude":-83.46928,"count":5},{"latitude":33.553250000000006,"longitude":-82.89375000000001,"count":2},{"latitude":33.40542857142857,"longitude":-82.65734285714287,"count":7},{"latitude":34.1282,"longitude":-82.90215,"count":6},{"latitude":33.107840624999994,"longitude":-81.97799374999998,"count":32},{"latitude":31.021425,"longitude":-83.071675,"count":4},{"latitude":32.15575,"longitude":-83.18953750000001,"count":8},{"latitude":33.2789,"longitude":-82.9699,"count":2},{"latitude":32.97752857142857,"longitude":-82.81912857142856,"count":7},{"latitude":33.5224,"longitude":-83.1928,"count":1},{"latitude":33.471289473684216,"longitude":-82.4838947368421,"count":19},{"latitude":33.50985471698113,"longitude":-82.19120000000001,"count":53},{"latitude":31.2997,"longitude":-82.2477,"count":1},{"latitude":31.7793,"longitude":-82.3495,"count":2},{"latitude":34.342,"longitude":-83.4427,"count":2},{"latitude":34.4109,"longitude":-83.22915,"count":4},{"latitude":34.13068571428572,"longitude":-83.55931818181821,"count":77},{"latitude":33.9127411764706,"longitude":-84.8165176470588,"count":34},{"latitude":34.572878571428575,"longitude":-83.29090714285714,"count":14},{"latitude":32.71525,"longitude":-81.611075,"count":4},{"latitude":32.302549382716045,"longitude":-81.31367037037036,"count":81},{"latitude":32.423985641025624,"longitude":-81.76617641025639,"count":195},{"latitude":32.04693333333333,"longitude":-81.41994666666666,"count":15},{"latitude":31.8461,"longitude":-85.0863,"count":1},{"latitude":31.606375,"longitude":-81.9539,"count":4},{"latitude":33.75586666666666,"longitude":-85.14543333333334,"count":3},{"latitude":32.343199999999996,"longitude":-84.84885,"count":2},{"latitude":34.8651,"longitude":-84.3398,"count":1},{"latitude":34.945075,"longitude":-83.7948,"count":4},{"latitude":31.573838862559263,"longitude":-84.1529876777252,"count":211},{"latitude":34.676,"longitude":-84.46284999999999,"count":4},{"latitude":30.947340000000004,"longitude":-84.21852999999999,"count":10},{"latitude":33.89383333333333,"longitude":-83.11098333333334,"count":6},{"latitude":33.76393,"longitude":-83.78320999999998,"count":20},{"latitude":33.721000000000004,"longitude":-82.7611,"count":3},{"latitude":31.036925,"longitude":-82.7516,"count":4},{"latitude":34.39405714285714,"longitude":-84.07884285714285,"count":7},{"latitude":34.57666666666667,"longitude":-83.52111666666667,"count":12},{"latitude":34.88276666666666,"longitude":-83.42013333333334,"count":3},{"latitude":34.20531875,"longitude":-84.82279791666666,"count":48},{"latitude":31.72412857142857,"longitude":-83.22005714285714,"count":7},{"latitude":31.958986111111113,"longitude":-83.77681388888887,"count":36},{"latitude":32.14918,"longitude":-83.7444,"count":5},{"latitude":34.49528333333333,"longitude":-85.3283,"count":6},{"latitude":30.90082727272728,"longitude":-84.58388636363637,"count":22},{"latitude":31.777444444444452,"longitude":-84.42198888888889,"count":9},{"latitude":31.7672,"longitude":-84.7769,"count":1},{"latitude":32.0978,"longitude":-82.54325,"count":2},{"latitude":32.0422,"longitude":-84.5392,"count":1},{"latitude":33.28777142857143,"longitude":-83.9722,"count":7},{"latitude":31.5920625,"longitude":-83.22945,"count":8},{"latitude":33.26736666666667,"longitude":-84.2819875,"count":24},{"latitude":34.8817,"longitude":-84.0768,"count":1},{"latitude":34.934617647058815,"longitude":-85.19574117647056,"count":17},{"latitude":34.79147391304349,"longitude":-84.95457826086958,"count":23},{"latitude":34.25307350746267,"longitude":-85.17985373134326,"count":268},{"latitude":34.8898,"longitude":-85.29946363636364,"count":22},{"latitude":34.515523529411766,"longitude":-84.93202941176469,"count":17},{"latitude":33.872686000000016,"longitude":-83.47038600000002,"count":50},{"latitude":31.52025,"longitude":-81.39865,"count":2},{"latitude":31.947366666666664,"longitude":-82.97533333333332,"count":3},{"latitude":33.987563013698626,"longitude":-83.72640136986304,"count":73},{"latitude":31.81770967741935,"longitude":-81.58641612903227,"count":31},{"latitude":34.525949999999995,"longitude":-83.98214999999999,"count":2},{"latitude":32.47103212951435,"longitude":-84.94299078455784,"count":803},{"latitude":33.65147575757575,"longitude":-84.01481212121212,"count":33},{"latitude":31.222099999999998,"longitude":-82.35995555555556,"count":9},{"latitude":30.83455,"longitude":-82.0038,"count":2},{"latitude":33.435509999999994,"longitude":-82.02806815789467,"count":380},{"latitude":19.655126446280992,"longitude":-155.31057024793387,"count":121},{"latitude":21.36032249999999,"longitude":-157.91859999999994,"count":120},{"latitude":22.023984615384613,"longitude":-159.38546153846153,"count":13},{"latitude":20.887872727272722,"longitude":-156.47595454545456,"count":22},{"latitude":43.82266,"longitude":-111.7909,"count":10},{"latitude":42.65858333333333,"longitude":-113.63716666666666,"count":6},{"latitude":44.039225,"longitude":-116.89225,"count":4},{"latitude":42.86325,"longitude":-112.72425,"count":4},{"latitude":43.60010748299318,"longitude":-116.26528571428567,"count":147},{"latitude":44.8124,"longitude":-116.40700000000001,"count":1},{"latitude":42.88208222222223,"longitude":-112.44504444444442,"count":45},{"latitude":43.8314,"longitude":-115.834,"count":1},{"latitude":48.33006818181816,"longitude":-116.58231818181821,"count":22},{"latitude":48.70525,"longitude":-116.231,"count":2},{"latitude":47.26800000000001,"longitude":-116.7464,"count":5},{"latitude":42.67585,"longitude":-111.58,"count":4},{"latitude":43.49886666666667,"longitude":-112.00201587301588,"count":63},{"latitude":42.86214285714285,"longitude":-114.73671428571427,"count":7},{"latitude":43.90894,"longitude":-116.46,"count":5},{"latitude":42.1015,"longitude":-111.88649999999998,"count":2},{"latitude":46.719757894736844,"longitude":-116.90978947368421,"count":19},{"latitude":42.97735,"longitude":-114.4525,"count":2},{"latitude":47.71116774193549,"longitude":-116.83801612903225,"count":62},{"latitude":42.71496666666667,"longitude":-114.4755,"count":6},{"latitude":43.52565,"longitude":-114.30799999999999,"count":2},{"latitude":46.495324999999994,"longitude":-116.27350000000001,"count":4},{"latitude":42.48465,"longitude":-113.63875,"count":4},{"latitude":46.123,"longitude":-116.05024999999999,"count":4},{"latitude":43.715925,"longitude":-111.12575,"count":4},{"latitude":42.55705185185185,"longitude":-114.50025925925924,"count":27},{"latitude":46.421178947368425,"longitude":-116.8758947368421,"count":19},{"latitude":43.62078043478262,"longitude":-116.63394565217392,"count":92},{"latitude":43.66955,"longitude":-111.9313,"count":10},{"latitude":45.16965,"longitude":-113.896,"count":2},{"latitude":44.2607,"longitude":-112.301,"count":1},{"latitude":44.904399999999995,"longitude":-116.098,"count":2},{"latitude":44.199,"longitude":-116.92200000000001,"count":1},{"latitude":44.5184,"longitude":-114.22399999999999,"count":1},{"latitude":42.1853,"longitude":-112.26599999999999,"count":2},{"latitude":43.24323333333333,"longitude":-116.42366666666665,"count":3},{"latitude":43.1447875,"longitude":-115.703375,"count":8},{"latitude":43.16682777777778,"longitude":-112.42455555555556,"count":18},{"latitude":41.89567000000001,"longitude":-88.73967999999999,"count":20},{"latitude":41.82122608695654,"longitude":-88.0831239130435,"count":92},{"latitude":41.24471666666667,"longitude":-88.94831666666668,"count":6},{"latitude":39.92417846153846,"longitude":-91.37816000000002,"count":65},{"latitude":37.069133333333326,"longitude":-89.24571111111112,"count":9},{"latitude":38.8941,"longitude":-89.4113,"count":1},{"latitude":42.296087500000006,"longitude":-88.86329375,"count":16},{"latitude":41.35272499999999,"longitude":-89.267425,"count":4},{"latitude":39.1346,"longitude":-90.62455,"count":2},{"latitude":42.0386,"longitude":-89.9627,"count":1},{"latitude":40.13793246376813,"longitude":-88.23162057971021,"count":345},{"latitude":39.462174999999995,"longitude":-89.2776375,"count":8},{"latitude":39.3914,"longitude":-87.6936,"count":1},{"latitude":38.55328333333333,"longitude":-89.30466666666666,"count":6},{"latitude":39.47918888888889,"longitude":-88.2950814814815,"count":27},{"latitude":39.2813,"longitude":-88.3107,"count":2},{"latitude":39.6922,"longitude":-88.304,"count":1},{"latitude":39.6113,"longitude":-87.6956,"count":1},{"latitude":39.1031375,"longitude":-88.5109,"count":8},{"latitude":39.04983333333333,"longitude":-89.02196666666667,"count":3},{"latitude":40.61666666666667,"longitude":-88.13195,"count":6},{"latitude":37.927483333333335,"longitude":-88.94978888888888,"count":18},{"latitude":40.64565,"longitude":-89.9462,"count":2},{"latitude":37.8902,"longitude":-88.3401,"count":1},{"latitude":39.4618,"longitude":-90.4728,"count":1},{"latitude":41.341075000000004,"longitude":-88.35042499999999,"count":8},{"latitude":38.0941,"longitude":-88.53540000000001,"count":2},{"latitude":40.47696666666667,"longitude":-91.2185,"count":6},{"latitude":37.48515,"longitude":-88.26445,"count":2},{"latitude":40.85123333333333,"longitude":-90.97171666666667,"count":6},{"latitude":41.36419,"longitude":-90.12475,"count":10},{"latitude":40.83367142857143,"longitude":-87.8229857142857,"count":7},{"latitude":37.735693684210524,"longitude":-89.23989473684209,"count":95},{"latitude":38.9784,"longitude":-88.1738,"count":1},{"latitude":38.31417948717948,"longitude":-88.90583076923077,"count":39},{"latitude":39.06515,"longitude":-90.3341,"count":2},{"latitude":42.36866,"longitude":-90.16772,"count":5},{"latitude":37.5425,"longitude":-88.7628,"count":1},{"latitude":41.83902879377434,"longitude":-88.31370350194548,"count":257},{"latitude":41.1205155,"longitude":-87.84911149999999,"count":200},{"latitude":41.688047368421046,"longitude":-88.36482631578947,"count":19},{"latitude":40.93445882352941,"longitude":-90.33231764705884,"count":17},{"latitude":41.84228,"longitude":-89.48324,"count":5},{"latitude":40.989525,"longitude":-88.632525,"count":4},{"latitude":40.14403333333333,"longitude":-89.36586666666666,"count":3},{"latitude":39.85139393939397,"longitude":-88.94818560606062,"count":132},{"latitude":39.257149999999996,"longitude":-89.95308333333332,"count":6},{"latitude":38.80628918918918,"longitude":-90.0846810810811,"count":185},{"latitude":38.55970930232558,"longitude":-89.06532558139537,"count":43},{"latitude":40.9823,"longitude":-89.2354,"count":1},{"latitude":39.979733333333336,"longitude":-89.76436666666666,"count":3},{"latitude":39.747930000000004,"longitude":-90.25746000000001,"count":10},{"latitude":40.05518,"longitude":-88.52672,"count":5},{"latitude":37.4911,"longitude":-88.5661,"count":1},{"latitude":41.49776406250001,"longitude":-90.51271406250001,"count":64},{"latitude":37.738422222222226,"longitude":-88.52862222222224,"count":18},{"latitude":39.6263,"longitude":-90.4545,"count":1},{"latitude":41.093999999999994,"longitude":-89.8648,"count":1},{"latitude":38.3844,"longitude":-87.9117,"count":1},{"latitude":38.3868,"longitude":-88.36935,"count":2},{"latitude":38.17075,"longitude":-88.0832,"count":2},{"latitude":40.14765,"longitude":-88.9581,"count":2},{"latitude":41.01175,"longitude":-86.69720000000001,"count":2},{"latitude":40.14807272727273,"longitude":-85.01876363636364,"count":11},{"latitude":39.682925,"longitude":-85.51505,"count":4},{"latitude":37.99998333333333,"longitude":-87.35791666666667,"count":12},{"latitude":39.835090322580655,"longitude":-84.90277311827955,"count":93},{"latitude":40.766749999999995,"longitude":-85.16636249999999,"count":8},{"latitude":40.7775,"longitude":-86.81237777777775,"count":9},{"latitude":40.74148333333333,"longitude":-86.33635833333335,"count":12},{"latitude":38.36163968253969,"longitude":-85.72419365079367,"count":63},{"latitude":39.4606,"longitude":-87.12061999999999,"count":10},{"latitude":40.30497499999999,"longitude":-86.509225,"count":8},{"latitude":38.67108,"longitude":-87.13985,"count":10},{"latitude":39.12595833333334,"longitude":-84.90753333333333,"count":12},{"latitude":39.36458999999999,"longitude":-85.49142,"count":10},{"latitude":41.39162727272728,"longitude":-85.07150909090909,"count":11},{"latitude":40.192728888888894,"longitude":-85.37898111111107,"count":90},{"latitude":41.66396779661017,"longitude":-85.95208135593225,"count":118},{"latitude":39.64925,"longitude":-85.139825,"count":4},{"latitude":38.308962962962966,"longitude":-85.84536296296298,"count":27},{"latitude":39.415975,"longitude":-85.1140125,"count":8},{"latitude":41.08688333333333,"longitude":-86.2297,"count":6},{"latitude":38.3106625,"longitude":-87.54376249999999,"count":8},{"latitude":40.5390875,"longitude":-85.67583125,"count":16},{"latitude":39.996884848484854,"longitude":-86.04111515151517,"count":33},{"latitude":39.815676470588244,"longitude":-85.85032941176473,"count":17},{"latitude":39.790836666666664,"longitude":-86.40034,"count":30},{"latitude":39.912000000000006,"longitude":-85.41094736842105,"count":19},{"latitude":40.481910638297876,"longitude":-86.12922127659577,"count":47},{"latitude":40.83585,"longitude":-85.4791,"count":4},{"latitude":40.450050000000005,"longitude":-84.92165,"count":2},{"latitude":38.753640000000004,"longitude":-85.41409999999999,"count":5},{"latitude":38.9780625,"longitude":-85.63677500000001,"count":8},{"latitude":39.537065789473694,"longitude":-86.09482894736843,"count":76},{"latitude":38.6952,"longitude":-87.4467,"count":3},{"latitude":41.27868387096773,"longitude":-85.82473225806454,"count":31},{"latitude":41.629555555555555,"longitude":-85.39911111111111,"count":9},{"latitude":41.16323333333333,"longitude":-85.51716666666665,"count":3},{"latitude":40.11438431372549,"longitude":-85.69073529411763,"count":51},{"latitude":39.79680239616621,"longitude":-86.13662236421735,"count":1878},{"latitude":41.32467142857143,"longitude":-86.28612857142858,"count":7},{"latitude":40.750963636363636,"longitude":-86.09847272727274,"count":11},{"latitude":40.036770000000004,"longitude":-86.89268999999999,"count":10},{"latitude":39.5324375,"longitude":-86.390875,"count":8},{"latitude":41.037,"longitude":-87.434,"count":2},{"latitude":41.430600000000005,"longitude":-85.37694545454546,"count":11},{"latitude":38.9634,"longitude":-84.9276,"count":2},{"latitude":39.3297,"longitude":-86.856575,"count":4},{"latitude":39.733200000000004,"longitude":-87.26003333333334,"count":3},{"latitude":38.4638,"longitude":-87.26089999999999,"count":2},{"latitude":41.53309027777778,"longitude":-87.12239166666672,"count":72},{"latitude":38.032199999999996,"longitude":-87.85385714285712,"count":7},{"latitude":39.628077777777776,"longitude":-86.8666,"count":9},{"latitude":39.105975,"longitude":-85.220325,"count":8},{"latitude":38.6889875,"longitude":-85.72846249999999,"count":8},{"latitude":39.53091538461538,"longitude":-85.77756153846151,"count":13},{"latitude":38.1016,"longitude":-87.00143333333334,"count":3},{"latitude":41.28716666666667,"longitude":-86.67325000000001,"count":6},{"latitude":41.64469166666666,"longitude":-85.00304166666666,"count":12},{"latitude":39.080299999999994,"longitude":-87.3804,"count":8},{"latitude":38.6933,"longitude":-85.1874,"count":1},{"latitude":40.41062974683544,"longitude":-86.87740126582281,"count":158},{"latitude":40.3782,"longitude":-86.1041,"count":1},{"latitude":39.6644,"longitude":-85.0047,"count":1},{"latitude":37.9733570121951,"longitude":-87.54847774390248,"count":328},{"latitude":39.9437,"longitude":-87.4234,"count":2},{"latitude":39.46606999999999,"longitude":-87.3945257142857,"count":70},{"latitude":40.89015,"longitude":-85.803025,"count":4},{"latitude":40.4695,"longitude":-87.3546,"count":1},{"latitude":40.805425,"longitude":-84.94435,"count":4},{"latitude":41.07111258503399,"longitude":-85.12888605442177,"count":588},{"latitude":40.5931,"longitude":-87.31170000000002,"count":3},{"latitude":40.4495,"longitude":-85.3662,"count":1},{"latitude":39.99245000000001,"longitude":-86.35697500000002,"count":12},{"latitude":40.600750000000005,"longitude":-86.61359999999999,"count":2},{"latitude":41.049800000000005,"longitude":-87.20645,"count":2},{"latitude":41.57692005012532,"longitude":-87.38720463659142,"count":798},{"latitude":41.67961355932202,"longitude":-86.8097728813559,"count":59},{"latitude":38.61162999999999,"longitude":-86.13577000000001,"count":10},{"latitude":38.340825,"longitude":-86.453225,"count":4},{"latitude":38.349488888888885,"longitude":-86.92595,"count":18},{"latitude":39.05181428571428,"longitude":-87.03335714285713,"count":7},{"latitude":38.203950000000006,"longitude":-86.13877500000001,"count":4},{"latitude":38.916977777777774,"longitude":-85.92340740740738,"count":27},{"latitude":38.6847,"longitude":-86.776025,"count":4},{"latitude":39.15171333333334,"longitude":-86.52954222222222,"count":45},{"latitude":38.54092857142857,"longitude":-86.43432857142857,"count":7},{"latitude":38.035360000000004,"longitude":-86.67839999999998,"count":5},{"latitude":39.20191627906977,"longitude":-85.91378139534885,"count":43},{"latitude":39.238814285714284,"longitude":-86.22102857142856,"count":7},{"latitude":38.84417333333333,"longitude":-86.47145333333334,"count":15},{"latitude":41.672506868131855,"longitude":-86.25647472527474,"count":364},{"latitude":40.937,"longitude":-94.8936,"count":1},{"latitude":43.2767,"longitude":-91.45643333333334,"count":3},{"latitude":40.73725,"longitude":-92.88544999999999,"count":2},{"latitude":42.0877,"longitude":-92.06365,"count":2},{"latitude":42.50007054108215,"longitude":-92.3420957915832,"count":499},{"latitude":42.084542857142864,"longitude":-93.8896,"count":7},{"latitude":42.7387,"longitude":-92.39178,"count":5},{"latitude":42.49719999999999,"longitude":-91.87728333333332,"count":6},{"latitude":42.649770000000004,"longitude":-95.22032999999999,"count":10},{"latitude":42.7492,"longitude":-92.8047,"count":1},{"latitude":42.5501,"longitude":-94.6829,"count":1},{"latitude":42.0688,"longitude":-94.8676,"count":1},{"latitude":41.4036,"longitude":-95.0139,"count":1},{"latitude":41.74875,"longitude":-91.038375,"count":4},{"latitude":43.137030434782616,"longitude":-93.22705652173913,"count":23},{"latitude":42.7879,"longitude":-95.63105,"count":2},{"latitude":42.963625,"longitude":-92.370475,"count":4},{"latitude":41.0178,"longitude":-93.7841,"count":1},{"latitude":42.8574,"longitude":-91.2834,"count":2},{"latitude":41.84881500000001,"longitude":-90.23749000000001,"count":20},{"latitude":42.08773333333333,"longitude":-95.36113333333334,"count":3},{"latitude":41.604350000000004,"longitude":-93.84904999999999,"count":6},{"latitude":40.6165,"longitude":-93.92299999999999,"count":1},{"latitude":42.517775,"longitude":-91.39869999999999,"count":4},{"latitude":40.82225000000001,"longitude":-91.12650606060608,"count":66},{"latitude":43.38508,"longitude":-95.1234,"count":5},{"latitude":42.50144166666667,"longitude":-90.6902916666667,"count":60},{"latitude":43.384899999999995,"longitude":-94.77923333333332,"count":3},{"latitude":42.83327058823528,"longitude":-91.8294411764706,"count":17},{"latitude":43.067788888888884,"longitude":-92.67363333333333,"count":9},{"latitude":42.754999999999995,"longitude":-93.2047,"count":3},{"latitude":40.773250000000004,"longitude":-95.7787,"count":2},{"latitude":42.0185,"longitude":-94.292,"count":2},{"latitude":42.345699999999994,"longitude":-92.8616,"count":2},{"latitude":41.70943333333333,"longitude":-94.35583333333334,"count":3},{"latitude":43.008700000000005,"longitude":-93.70075,"count":2},{"latitude":42.500479999999996,"longitude":-93.27123999999999,"count":5},{"latitude":41.691199999999995,"longitude":-95.75,"count":2},{"latitude":40.99636666666667,"longitude":-91.57740000000001,"count":6},{"latitude":43.41205,"longitude":-92.22425000000001,"count":2},{"latitude":42.716366666666666,"longitude":-94.21563333333334,"count":3},{"latitude":42.4024,"longitude":-95.5709,"count":2},{"latitude":41.57946666666667,"longitude":-92.15323333333333,"count":3},{"latitude":42.0717,"longitude":-90.70670000000001,"count":4},{"latitude":41.67788181818182,"longitude":-93.08846363636363,"count":11},{"latitude":41.04963333333333,"longitude":-92.00483333333334,"count":3},{"latitude":41.663498863636356,"longitude":-91.54917954545458,"count":88},{"latitude":42.07955,"longitude":-91.19115,"count":2},{"latitude":41.3397,"longitude":-92.2237,"count":1},{"latitude":43.0709,"longitude":-94.42,"count":1},{"latitude":40.55370714285714,"longitude":-91.35887142857143,"count":14},{"latitude":41.982726377952794,"longitude":-91.66416141732276,"count":254},{"latitude":41.1803,"longitude":-91.1934,"count":1},{"latitude":41.0147,"longitude":-93.3227,"count":1},{"latitude":43.42695,"longitude":-95.99701666666668,"count":6},{"latitude":41.3614,"longitude":-93.97081428571428,"count":7},{"latitude":41.28578,"longitude":-92.62197999999998,"count":5},{"latitude":41.317071428571424,"longitude":-93.09828571428571,"count":7},{"latitude":42.00575,"longitude":-92.95853333333332,"count":12},{"latitude":41.053875,"longitude":-95.742625,"count":4},{"latitude":43.312200000000004,"longitude":-92.74154999999999,"count":2},{"latitude":42.031575000000004,"longitude":-95.987275,"count":4},{"latitude":41.01897777777778,"longitude":-95.19352222222221,"count":9},{"latitude":41.43361551724136,"longitude":-90.98007068965514,"count":58},{"latitude":43.418350000000004,"longitude":-95.6549,"count":2},{"latitude":40.75325,"longitude":-95.19875,"count":2},{"latitude":43.1207,"longitude":-94.7908,"count":2},{"latitude":42.755325000000006,"longitude":-96.221575,"count":8},{"latitude":41.59701791590496,"longitude":-93.62505868372936,"count":547},{"latitude":41.2623259259259,"longitude":-95.85343703703705,"count":81},{"latitude":41.5845,"longitude":-92.5334,"count":1},{"latitude":40.61,"longitude":-94.2805,"count":1},{"latitude":42.33412857142857,"longitude":-95.07245714285715,"count":7},{"latitude":41.541205172413775,"longitude":-90.58000827586206,"count":290},{"latitude":43.14762,"longitude":-96.16718,"count":5},{"latitude":42.01089523809524,"longitude":-93.62887142857143,"count":21},{"latitude":42.15705,"longitude":-92.50255,"count":4},{"latitude":40.7663,"longitude":-94.83236666666666,"count":3},{"latitude":41.0636,"longitude":-94.3697,"count":1},{"latitude":41.008925,"longitude":-92.39797499999999,"count":12},{"latitude":41.499966666666666,"longitude":-93.71533333333332,"count":3},{"latitude":41.32868571428571,"longitude":-91.73552857142855,"count":7},{"latitude":42.49241951219512,"longitude":-94.17487073170733,"count":41},{"latitude":43.3245,"longitude":-93.67484999999999,"count":6},{"latitude":43.168899999999994,"longitude":-91.85489999999999,"count":2},{"latitude":42.48736705882351,"longitude":-96.38535294117648,"count":85},{"latitude":42.61855,"longitude":-93.86325,"count":2},{"latitude":43.069250000000004,"longitude":-95.172975,"count":8},{"latitude":39.3698,"longitude":-99.9707,"count":1},{"latitude":37.3296,"longitude":-97.5556,"count":1},{"latitude":39.4964,"longitude":-95.29755,"count":2},{"latitude":37.1547,"longitude":-98.53205,"count":2},{"latitude":38.374345,"longitude":-98.76857,"count":20},{"latitude":37.82915,"longitude":-94.69239999999999,"count":2},{"latitude":39.8581,"longitude":-95.5401,"count":3},{"latitude":37.799475,"longitude":-96.88414166666666,"count":12},{"latitude":37.10935,"longitude":-94.731075,"count":8},{"latitude":39.7727,"longitude":-101.806,"count":2},{"latitude":39.3479,"longitude":-97.179,"count":1},{"latitude":37.2593,"longitude":-99.3175,"count":1},{"latitude":37.17164375000001,"longitude":-96.98919374999998,"count":16},{"latitude":37.428,"longitude":-94.72757500000002,"count":24},{"latitude":39.822725,"longitude":-100.4275,"count":4},{"latitude":38.89494444444444,"longitude":-97.1339111111111,"count":9},{"latitude":38.94982096774193,"longitude":-95.25652741935482,"count":62},{"latitude":38.90593333333334,"longitude":-99.39476666666667,"count":3},{"latitude":38.70956666666667,"longitude":-98.34070000000001,"count":3},{"latitude":37.75508333333334,"longitude":-100.02176666666666,"count":6},{"latitude":38.60232,"longitude":-95.24658000000001,"count":5},{"latitude":39.044951851851856,"longitude":-96.83872592592591,"count":27},{"latitude":39.1191,"longitude":-100.74700000000001,"count":1},{"latitude":37.8229,"longitude":-96.2938,"count":1},{"latitude":37.1884,"longitude":-98.039,"count":1},{"latitude":38.06448181818182,"longitude":-97.37471818181817,"count":11},{"latitude":39.3884,"longitude":-95.77111428571429,"count":7},{"latitude":39.1944,"longitude":-95.38788333333333,"count":6},{"latitude":38.943331932773106,"longitude":-94.73638151260505,"count":119},{"latitude":37.4636,"longitude":-98.416,"count":1},{"latitude":37.297976000000006,"longitude":-95.264232,"count":25},{"latitude":39.291416981132066,"longitude":-94.93499999999999,"count":53},{"latitude":38.43465714285714,"longitude":-96.1531857142857,"count":7},{"latitude":38.390837499999996,"longitude":-97.58678749999999,"count":8},{"latitude":38.36473333333333,"longitude":-97.08789999999999,"count":3},{"latitude":39.7892,"longitude":-96.54845,"count":2},{"latitude":38.71205,"longitude":-94.7354,"count":2},{"latitude":37.133379999999995,"longitude":-95.65314,"count":15},{"latitude":38.6617,"longitude":-96.4783,"count":1},{"latitude":39.8991,"longitude":-95.8094,"count":1},{"latitude":37.6055,"longitude":-95.40885,"count":4},{"latitude":38.4457,"longitude":-99.9076,"count":1},{"latitude":39.8329,"longitude":-99.8947,"count":1},{"latitude":38.6268,"longitude":-95.5643,"count":1},{"latitude":38.9897,"longitude":-97.8186,"count":1},{"latitude":38.076,"longitude":-99.2426,"count":1},{"latitude":39.23674285714286,"longitude":-96.33661428571429,"count":7},{"latitude":37.62408571428572,"longitude":-98.73174285714286,"count":7},{"latitude":38.02201250000001,"longitude":-97.91927083333336,"count":24},{"latitude":39.18984255319149,"longitude":-96.5949893617021,"count":47},{"latitude":39.2347,"longitude":-99.2982,"count":1},{"latitude":38.82208461538462,"longitude":-97.61007362637365,"count":91},{"latitude":37.6837705144291,"longitude":-97.32599046424095,"count":797},{"latitude":37.04485,"longitude":-100.92474999999999,"count":4},{"latitude":39.03681368715076,"longitude":-95.68319106145248,"count":358},{"latitude":39.5414,"longitude":-100.569,"count":1},{"latitude":39.3299,"longitude":-101.62049999999999,"count":2},{"latitude":37.9945,"longitude":-98.68435,"count":2},{"latitude":37.1869,"longitude":-101.25200000000001,"count":1},{"latitude":39.3979,"longitude":-101.041,"count":1},{"latitude":39.0142,"longitude":-99.8886,"count":1},{"latitude":39.0211,"longitude":-96.2893,"count":1},{"latitude":37.5405,"longitude":-95.8337,"count":1},{"latitude":39.112573660714254,"longitude":-94.66808928571427,"count":224},{"latitude":37.97727777777777,"longitude":-100.87488888888889,"count":9},{"latitude":37.957,"longitude":-101.781,"count":1},{"latitude":37.122566666666664,"longitude":-85.28415,"count":6},{"latitude":36.75,"longitude":-86.2202090909091,"count":11},{"latitude":38.01486666666666,"longitude":-84.95314000000002,"count":15},{"latitude":37.02104,"longitude":-89.00296,"count":5},{"latitude":37.01647435897438,"longitude":-85.94181282051284,"count":39},{"latitude":38.185919999999996,"longitude":-83.77304,"count":5},{"latitude":36.73263,"longitude":-83.66997499999998,"count":20},{"latitude":39.008141463414646,"longitude":-84.65667560975606,"count":41},{"latitude":38.21219,"longitude":-84.22038,"count":10},{"latitude":38.45260555555556,"longitude":-82.65268333333331,"count":18},{"latitude":37.640043750000004,"longitude":-84.78243124999999,"count":16},{"latitude":38.5997,"longitude":-84.12,"count":1},{"latitude":37.55404444444444,"longitude":-83.38592222222223,"count":9},{"latitude":37.669466666666665,"longitude":-86.31073333333335,"count":3},{"latitude":38.016528571428566,"longitude":-85.68332499999998,"count":28},{"latitude":37.191100000000006,"longitude":-86.824,"count":3},{"latitude":37.13654285714286,"longitude":-87.90252857142858,"count":7},{"latitude":36.61460952380952,"longitude":-88.32507142857142,"count":21},{"latitude":39.04239583333334,"longitude":-84.44472499999999,"count":24},{"latitude":36.85433333333334,"longitude":-88.95776666666666,"count":3},{"latitude":38.6734,"longitude":-85.1047,"count":1},{"latitude":38.291044444444445,"longitude":-83.08114444444445,"count":9},{"latitude":37.33468333333334,"longitude":-84.90968333333333,"count":6},{"latitude":36.85089781021895,"longitude":-87.4763781021898,"count":137},{"latitude":37.99569333333333,"longitude":-84.20045333333334,"count":15},{"latitude":37.14754210526316,"longitude":-83.73383684210526,"count":19},{"latitude":36.723600000000005,"longitude":-85.1502,"count":2},{"latitude":37.3293,"longitude":-88.0888,"count":1},{"latitude":36.7733,"longitude":-85.37799999999999,"count":1},{"latitude":37.75808591549296,"longitude":-87.11897605633804,"count":71},{"latitude":37.170874999999995,"longitude":-86.250525,"count":4},{"latitude":38.121,"longitude":-83.12323333333335,"count":3},{"latitude":37.70574444444445,"longitude":-83.98076666666665,"count":9},{"latitude":38.03893009592325,"longitude":-84.4893812949639,"count":834},{"latitude":38.3129,"longitude":-83.7701,"count":1},{"latitude":37.5489,"longitude":-82.735805,"count":20},{"latitude":38.19782500000001,"longitude":-84.86997115384614,"count":52},{"latitude":36.545820000000006,"longitude":-89.0654,"count":5},{"latitude":38.80345,"longitude":-84.75295,"count":2},{"latitude":37.625933333333336,"longitude":-84.52886666666667,"count":3},{"latitude":38.709700000000005,"longitude":-84.60485714285713,"count":7},{"latitude":36.74302105263157,"longitude":-88.66266578947368,"count":38},{"latitude":37.4937,"longitude":-86.321225,"count":8},{"latitude":37.3182,"longitude":-85.4468,"count":1},{"latitude":38.52984444444444,"longitude":-82.80199999999999,"count":9},{"latitude":37.86233333333333,"longitude":-86.8145,"count":3},{"latitude":37.73058684210526,"longitude":-85.91587368421055,"count":38},{"latitude":36.86685384615385,"longitude":-83.25907692307693,"count":26},{"latitude":38.4043,"longitude":-84.34407999999999,"count":10},{"latitude":37.25431,"longitude":-85.87169000000002,"count":10},{"latitude":37.83273285714286,"longitude":-87.56702285714286,"count":70},{"latitude":38.445142857142855,"longitude":-85.20732857142856,"count":7},{"latitude":37.30250249999999,"longitude":-87.51136,"count":40},{"latitude":37.45612,"longitude":-84.05733,"count":10},{"latitude":38.21744011931407,"longitude":-85.75977882177474,"count":1341},{"latitude":37.88036400000001,"longitude":-84.58518400000001,"count":25},{"latitude":37.801114285714284,"longitude":-82.81874285714287,"count":7},{"latitude":39.03935483870966,"longitude":-84.52919838709676,"count":62},{"latitude":37.337399999999995,"longitude":-82.8913888888889,"count":9},{"latitude":36.90042352941176,"longitude":-83.85114705882351,"count":17},{"latitude":37.4397,"longitude":-85.6679,"count":1},{"latitude":37.09475925925925,"longitude":-84.1000351851852,"count":54},{"latitude":38.04942857142857,"longitude":-82.68267142857144,"count":7},{"latitude":37.607659999999996,"longitude":-83.68892,"count":5},{"latitude":37.1332,"longitude":-83.35186000000002,"count":5},{"latitude":37.1361,"longitude":-82.82951,"count":10},{"latitude":38.600300000000004,"longitude":-83.308,"count":4},{"latitude":37.48855833333334,"longitude":-84.67708333333333,"count":12},{"latitude":37.211,"longitude":-88.31825,"count":2},{"latitude":36.84930666666666,"longitude":-86.89187333333332,"count":15},{"latitude":37.0575375,"longitude":-88.0413375,"count":8},{"latitude":37.712517307692316,"longitude":-84.29260769230766,"count":52},{"latitude":37.5473,"longitude":-82.9257,"count":1},{"latitude":37.57152,"longitude":-85.30978,"count":5},{"latitude":36.928358333333335,"longitude":-88.35413333333334,"count":12},{"latitude":37.83955,"longitude":-82.5184,"count":4},{"latitude":38.64365,"longitude":-83.76150000000001,"count":2},{"latitude":37.06023608247424,"longitude":-88.63900103092782,"count":97},{"latitude":36.75450000000001,"longitude":-84.52295000000001,"count":4},{"latitude":37.46006666666667,"longitude":-87.20890000000001,"count":3},{"latitude":37.99713333333333,"longitude":-86.17576666666666,"count":3},{"latitude":37.76658888888888,"longitude":-84.84085555555555,"count":9},{"latitude":36.9592,"longitude":-85.661375,"count":4},{"latitude":36.7254,"longitude":-85.70859999999999,"count":2},{"latitude":38.06075,"longitude":-83.930575,"count":4},{"latitude":37.975025,"longitude":-83.278775,"count":4},{"latitude":37.20712352941177,"longitude":-87.15122352941177,"count":17},{"latitude":37.81335862068965,"longitude":-85.4512275862069,"count":29},{"latitude":38.2725,"longitude":-83.9318,"count":1},{"latitude":37.45561176470588,"longitude":-86.82534117647062,"count":17},{"latitude":38.392466666666664,"longitude":-85.40323333333333,"count":12},{"latitude":38.4295,"longitude":-84.7136,"count":1},{"latitude":37.4654,"longitude":-83.65101999999999,"count":5},{"latitude":38.717600000000004,"longitude":-84.4354,"count":2},{"latitude":37.291181249999994,"longitude":-83.206275,"count":16},{"latitude":37.478527586206894,"longitude":-82.39876206896552,"count":29},{"latitude":37.82468,"longitude":-83.8198,"count":5},{"latitude":37.09021463414634,"longitude":-84.60666097560974,"count":41},{"latitude":38.49385,"longitude":-84.06135,"count":2},{"latitude":37.38084444444444,"longitude":-84.34279999999998,"count":9},{"latitude":38.20052999999999,"longitude":-83.43841,"count":10},{"latitude":37.04643333333333,"longitude":-85.06533333333334,"count":6},{"latitude":38.22692068965517,"longitude":-84.56438275862068,"count":29},{"latitude":38.21138181818182,"longitude":-85.24724545454545,"count":11},{"latitude":36.7294,"longitude":-86.58544000000002,"count":10},{"latitude":38.06445,"longitude":-85.30931666666667,"count":6},{"latitude":37.35823529411765,"longitude":-85.34674117647059,"count":17},{"latitude":36.84175,"longitude":-87.18406666666668,"count":6},{"latitude":36.83590833333334,"longitude":-87.845175,"count":12},{"latitude":38.6338,"longitude":-85.32385,"count":2},{"latitude":37.705200000000005,"longitude":-87.89604444444443,"count":9},{"latitude":36.98016373626375,"longitude":-86.43495604395603,"count":91},{"latitude":37.72385,"longitude":-85.18576666666667,"count":6},{"latitude":36.82163333333333,"longitude":-84.83264444444444,"count":9},{"latitude":37.495174999999996,"longitude":-87.752275,"count":4},{"latitude":36.84321785714286,"longitude":-84.13506785714289,"count":28},{"latitude":37.73849230769231,"longitude":-83.49093076923077,"count":13},{"latitude":38.06825555555556,"longitude":-84.73043333333334,"count":9},{"latitude":29.93278284789647,"longitude":-90.14922766990284,"count":618},{"latitude":30.220824137931036,"longitude":-92.7423724137931,"count":29},{"latitude":31.7789,"longitude":-92.233,"count":2},{"latitude":30.227026937269386,"longitude":-92.02785793357926,"count":271},{"latitude":29.7231225,"longitude":-90.69317249999999,"count":80},{"latitude":32.53803181818183,"longitude":-92.65806818181818,"count":22},{"latitude":30.481526415094347,"longitude":-90.83789811320754,"count":53},{"latitude":32.40929166666666,"longitude":-91.18604166666665,"count":12},{"latitude":32.78121333333334,"longitude":-91.90745333333334,"count":15},{"latitude":31.758296610169474,"longitude":-93.09438644067795,"count":59},{"latitude":29.975327327127687,"longitude":-90.0497193816487,"count":3008},{"latitude":32.50186065573771,"longitude":-92.10578032786886,"count":183},{"latitude":29.566785714285714,"longitude":-89.77114285714285,"count":14},{"latitude":30.251778125000005,"longitude":-92.3355828125,"count":64},{"latitude":30.61293333333333,"longitude":-92.79566666666666,"count":6},{"latitude":30.215126785714283,"longitude":-90.95115178571426,"count":56},{"latitude":29.930045945945942,"longitude":-91.04292972972975,"count":37},{"latitude":31.0962,"longitude":-92.0850375,"count":8},{"latitude":30.689890000000002,"longitude":-93.26365000000001,"count":10},{"latitude":32.35753333333333,"longitude":-93.16106666666667,"count":6},{"latitude":32.5527245283019,"longitude":-93.70057075471694,"count":106},{"latitude":32.49167934782613,"longitude":-93.79580676328527,"count":828},{"latitude":30.22238380281691,"longitude":-93.23827746478875,"count":142},{"latitude":32.080033333333326,"longitude":-92.0862,"count":3},{"latitude":29.8434,"longitude":-93.178,"count":1},{"latitude":31.670033333333336,"longitude":-91.84943333333335,"count":3},{"latitude":32.7778,"longitude":-93.0257,"count":2},{"latitude":31.588960000000004,"longitude":-91.51182,"count":10},{"latitude":32.086253846153845,"longitude":-93.73875384615386,"count":13},{"latitude":30.469013236929833,"longitude":-91.13713837597342,"count":899},{"latitude":32.7639,"longitude":-91.1892,"count":1},{"latitude":30.81865,"longitude":-91.05754999999999,"count":8},{"latitude":30.741940000000003,"longitude":-92.32236000000003,"count":15},{"latitude":32.08148,"longitude":-91.6801,"count":5},{"latitude":31.5148,"longitude":-92.44669999999999,"count":2},{"latitude":29.993842391304348,"longitude":-91.80713260869562,"count":92},{"latitude":30.283129166666672,"longitude":-91.25301666666667,"count":24},{"latitude":32.27,"longitude":-92.59006666666666,"count":3},{"latitude":30.69091176470588,"longitude":-91.48957647058825,"count":17},{"latitude":31.28811578947367,"longitude":-92.45759824561404,"count":114},{"latitude":32.02290000000001,"longitude":-93.35325,"count":4},{"latitude":32.402614285714286,"longitude":-91.77765714285714,"count":7},{"latitude":31.563875,"longitude":-93.58376666666665,"count":12},{"latitude":30.572182407407404,"longitude":-90.47192592592593,"count":108},{"latitude":29.604923333333318,"longitude":-90.73448416666663,"count":120},{"latitude":32.77701875,"longitude":-92.39675624999998,"count":16},{"latitude":29.97313529411766,"longitude":-92.15749411764705,"count":34},{"latitude":31.11472857142857,"longitude":-93.3002142857143,"count":14},{"latitude":30.828049999999998,"longitude":-89.97968421052632,"count":38},{"latitude":32.67811176470588,"longitude":-93.33056470588237,"count":17},{"latitude":30.461035294117643,"longitude":-91.26231176470588,"count":17},{"latitude":32.656400000000005,"longitude":-91.4865,"count":2},{"latitude":30.7881,"longitude":-91.3784,"count":1},{"latitude":31.9229,"longitude":-92.65299999999998,"count":3},{"latitude":44.1043530612245,"longitude":-70.20416326530611,"count":49},{"latitude":46.65431071428571,"longitude":-68.15388571428572,"count":28},{"latitude":43.73559250000001,"longitude":-70.30133250000004,"count":120},{"latitude":44.68706296296297,"longitude":-70.21364814814815,"count":27},{"latitude":44.513065,"longitude":-68.4795,"count":20},{"latitude":44.400911111111135,"longitude":-69.73650138888891,"count":144},{"latitude":44.10417307692308,"longitude":-69.16731923076922,"count":26},{"latitude":44.02567659574468,"longitude":-69.56708936170212,"count":47},{"latitude":44.336264,"longitude":-70.620904,"count":25},{"latitude":44.9687,"longitude":-68.75740000000002,"count":72},{"latitude":45.26769999999999,"longitude":-69.4042857142857,"count":7},{"latitude":43.94493529411765,"longitude":-69.8375588235294,"count":17},{"latitude":44.808130898876406,"longitude":-69.71847471910115,"count":178},{"latitude":44.5139076923077,"longitude":-69.13584615384616,"count":13},{"latitude":44.94547142857143,"longitude":-67.48621428571428,"count":7},{"latitude":43.433159459459475,"longitude":-70.67231351351356,"count":111},{"latitude":38.77976666666667,"longitude":-76.0733,"count":3},{"latitude":39.226299999999995,"longitude":-76.11565,"count":2},{"latitude":38.870819999999995,"longitude":-75.84724,"count":5},{"latitude":39.007711111111114,"longitude":-76.18466666666666,"count":9},{"latitude":39.62036923076924,"longitude":-75.93057692307693,"count":26},{"latitude":38.58502307692308,"longitude":-75.98088461538462,"count":13},{"latitude":38.14492142857143,"longitude":-75.72671428571428,"count":14},{"latitude":41.66224079999999,"longitude":-70.37508559999998,"count":125},{"latitude":42.47123804347826,"longitude":-73.23762500000001,"count":184},{"latitude":41.710747239263775,"longitude":-71.0382034764826,"count":489},{"latitude":42.55832111801245,"longitude":-70.99928322981368,"count":483},{"latitude":42.58811034482758,"longitude":-72.57610000000001,"count":29},{"latitude":42.12299173228347,"longitude":-72.57399025590557,"count":1016},{"latitude":42.31232727272728,"longitude":-72.53745454545455,"count":33},{"latitude":42.50725646437993,"longitude":-71.31027124010554,"count":379},{"latitude":42.19664062500001,"longitude":-71.07673687499997,"count":160},{"latitude":42.05715530726257,"longitude":-70.96684078212292,"count":537},{"latitude":42.319727262693284,"longitude":-71.07652621412802,"count":1812},{"latitude":42.30465779816516,"longitude":-71.80391449541287,"count":545},{"latitude":45.1567768115942,"longitude":-93.27496956521739,"count":69},{"latitude":46.84294666666666,"longitude":-95.86974666666667,"count":15},{"latitude":47.550476785714295,"longitude":-94.89746428571434,"count":56},{"latitude":45.60962857142857,"longitude":-94.11155714285714,"count":14},{"latitude":44.15068666666666,"longitude":-93.99225333333334,"count":15},{"latitude":44.2789,"longitude":-94.70689999999999,"count":2},{"latitude":46.654999999999994,"longitude":-92.55801,"count":10},{"latitude":44.83278461538461,"longitude":-93.75648461538461,"count":13},{"latitude":47.152411111111114,"longitude":-94.54252222222223,"count":9},{"latitude":45.0086,"longitude":-95.8004,"count":1},{"latitude":45.491563636363644,"longitude":-92.89283636363636,"count":11},{"latitude":46.85904375000001,"longitude":-96.68755625000001,"count":32},{"latitude":47.59155,"longitude":-95.48775,"count":2},{"latitude":47.760633333333324,"longitude":-90.3159,"count":3},{"latitude":43.9245,"longitude":-95.13550000000001,"count":2},{"latitude":46.43206222222222,"longitude":-94.19980444444445,"count":45},{"latitude":44.78814411764705,"longitude":-93.11135147058825,"count":68},{"latitude":43.97556666666666,"longitude":-92.88263333333333,"count":3},{"latitude":45.89095833333332,"longitude":-95.39305833333333,"count":12},{"latitude":43.67296,"longitude":-92.15583999999998,"count":5},{"latitude":43.65079206349207,"longitude":-93.34008571428572,"count":63},{"latitude":44.52847777777778,"longitude":-92.5572,"count":9},{"latitude":44.98082383419681,"longitude":-93.2917566062176,"count":772},{"latitude":43.8059,"longitude":-91.30625,"count":2},{"latitude":47.0706,"longitude":-94.90375,"count":2},{"latitude":45.55836000000001,"longitude":-93.2345,"count":5},{"latitude":47.296975,"longitude":-93.64813749999999,"count":8},{"latitude":43.6208,"longitude":-94.9886,"count":1},{"latitude":45.8722,"longitude":-93.2957,"count":1},{"latitude":45.16452857142857,"longitude":-94.98932857142856,"count":7},{"latitude":44.9775,"longitude":-96.1058,"count":2},{"latitude":47.4294,"longitude":-91.2445,"count":1},{"latitude":44.387,"longitude":-93.729,"count":1},{"latitude":44.435199999999995,"longitude":-95.877475,"count":4},{"latitude":47.298,"longitude":-95.872,"count":4},{"latitude":43.710899999999995,"longitude":-94.582,"count":2},{"latitude":44.8911,"longitude":-94.3756,"count":1},{"latitude":45.125025,"longitude":-94.49242500000001,"count":4},{"latitude":45.840806666666666,"longitude":-93.66561999999999,"count":15},{"latitude":45.9829,"longitude":-94.41608333333335,"count":6},{"latitude":43.6597163265306,"longitude":-92.94217346938778,"count":49},{"latitude":43.664100000000005,"longitude":-95.53354999999999,"count":2},{"latitude":47.332049999999995,"longitude":-96.699875,"count":4},{"latitude":44.01938342541435,"longitude":-92.46787458563537,"count":181},{"latitude":46.37234210526316,"longitude":-95.81414736842106,"count":19},{"latitude":48.1435,"longitude":-96.04589999999999,"count":2},{"latitude":46.075325,"longitude":-92.86193750000001,"count":8},{"latitude":47.74559230769231,"longitude":-96.4405923076923,"count":13},{"latitude":45.4585,"longitude":-95.31200000000001,"count":1},{"latitude":44.96855133819947,"longitude":-93.09508150851585,"count":411},{"latitude":47.89626666666667,"longitude":-96.30156666666669,"count":3},{"latitude":44.5401,"longitude":-95.1225,"count":1},{"latitude":44.5291,"longitude":-94.9182,"count":1},{"latitude":44.386144444444454,"longitude":-93.3084888888889,"count":9},{"latitude":43.6581,"longitude":-96.2113,"count":1},{"latitude":48.835366666666665,"longitude":-95.69663333333334,"count":3},{"latitude":44.709546153846155,"longitude":-93.50476923076923,"count":13},{"latitude":45.490919999999996,"longitude":-93.91177,"count":10},{"latitude":45.562735714285715,"longitude":-94.22606964285714,"count":56},{"latitude":44.043040000000005,"longitude":-93.20270000000001,"count":5},{"latitude":45.264849999999996,"longitude":-95.80595000000001,"count":4},{"latitude":45.9651,"longitude":-94.8619,"count":1},{"latitude":44.32284,"longitude":-92.31516000000002,"count":5},{"latitude":46.693799999999996,"longitude":-95.0689,"count":2},{"latitude":44.0781,"longitude":-93.5047,"count":1},{"latitude":44.96869090909091,"longitude":-92.92035151515151,"count":33},{"latitude":43.99186666666666,"longitude":-94.56313333333333,"count":3},{"latitude":46.409083333333335,"longitude":-96.44729999999998,"count":6},{"latitude":44.02807307692307,"longitude":-91.65620000000003,"count":26},{"latitude":45.196828571428576,"longitude":-93.83385714285714,"count":7},{"latitude":44.760600000000004,"longitude":-95.58243333333333,"count":3},{"latitude":47.00074725274727,"longitude":-92.24629670329672,"count":91},{"latitude":46.56752,"longitude":-93.5853,"count":5},{"latitude":31.557900000000004,"longitude":-91.36709264705887,"count":68},{"latitude":31.1935,"longitude":-90.7993,"count":5},{"latitude":33.06497727272727,"longitude":-89.57823181818179,"count":22},{"latitude":34.783500000000004,"longitude":-89.198275,"count":4},{"latitude":33.75565000000001,"longitude":-90.73438636363636,"count":22},{"latitude":33.909683333333334,"longitude":-89.30969166666667,"count":12},{"latitude":33.55233333333333,"longitude":-89.92573333333333,"count":3},{"latitude":33.9132888888889,"longitude":-88.9127,"count":18},{"latitude":33.1578,"longitude":-89.2306,"count":1},{"latitude":31.94626923076923,"longitude":-90.92896153846155,"count":13},{"latitude":32.0508,"longitude":-88.77973749999998,"count":8},{"latitude":33.61592777777778,"longitude":-88.68746666666668,"count":18},{"latitude":34.201545833333334,"longitude":-90.56710416666668,"count":24},{"latitude":31.891579999999998,"longitude":-90.399928,"count":25},{"latitude":31.696061538461546,"longitude":-89.60828461538459,"count":13},{"latitude":34.94790350877194,"longitude":-89.97543157894741,"count":57},{"latitude":31.314962162162157,"longitude":-89.30191959459461,"count":148},{"latitude":31.5802,"longitude":-91.0711,"count":1},{"latitude":30.859806666666667,"longitude":-88.61751999999998,"count":15},{"latitude":33.772215,"longitude":-89.79804500000002,"count":40},{"latitude":30.41270212014135,"longitude":-89.05728763250885,"count":283},{"latitude":32.31289799764428,"longitude":-90.22038504122489,"count":849},{"latitude":33.127372413793104,"longitude":-90.06698620689657,"count":29},{"latitude":34.29517142857143,"longitude":-88.40461428571429,"count":7},{"latitude":30.42201287878789,"longitude":-88.62540606060611,"count":132},{"latitude":31.927074999999995,"longitude":-89.196875,"count":8},{"latitude":31.754375,"longitude":-91.053825,"count":4},{"latitude":31.614721428571432,"longitude":-89.80618571428569,"count":14},{"latitude":31.676121739130448,"longitude":-89.15458985507243,"count":69},{"latitude":32.78095833333333,"longitude":-88.68784999999998,"count":12},{"latitude":34.356552941176474,"longitude":-89.52198529411764,"count":34},{"latitude":31.255877419354835,"longitude":-89.40817419354838,"count":31},{"latitude":32.37407170868349,"longitude":-88.69623585434164,"count":357},{"latitude":31.554609090909093,"longitude":-90.1233,"count":11},{"latitude":32.7338375,"longitude":-89.5088125,"count":8},{"latitude":34.241960194174766,"longitude":-88.71042912621361,"count":103},{"latitude":33.507143902439026,"longitude":-90.18580000000003,"count":41},{"latitude":31.562125806451608,"longitude":-90.45430322580648,"count":31},{"latitude":33.490926213592225,"longitude":-88.41424466019417,"count":103},{"latitude":32.53335185185184,"longitude":-90.08511666666666,"count":54},{"latitude":31.239807142857142,"longitude":-89.850375,"count":28},{"latitude":34.78762903225805,"longitude":-89.51707741935485,"count":31},{"latitude":33.8810037037037,"longitude":-88.51577962962963,"count":54},{"latitude":32.77942432432433,"longitude":-89.14280270270271,"count":37},{"latitude":32.37537692307692,"longitude":-89.13134615384615,"count":13},{"latitude":33.16339285714286,"longitude":-88.55912857142857,"count":14},{"latitude":33.46182580645161,"longitude":-88.81583548387096,"count":31},{"latitude":34.35648823529412,"longitude":-89.9074794117647,"count":34},{"latitude":30.582614999999997,"longitude":-89.68431,"count":20},{"latitude":31.08898333333333,"longitude":-88.92398333333334,"count":6},{"latitude":34.64053333333334,"longitude":-88.55908888888888,"count":18},{"latitude":34.307050000000004,"longitude":-90.29145,"count":2},{"latitude":32.29845844155844,"longitude":-90.04262077922077,"count":77},{"latitude":32.42506428571429,"longitude":-89.49452857142856,"count":14},{"latitude":32.904833333333336,"longitude":-90.8748,"count":3},{"latitude":31.88322727272728,"longitude":-89.81824545454545,"count":11},{"latitude":31.966066666666666,"longitude":-89.44063333333334,"count":3},{"latitude":30.836622222222218,"longitude":-89.18293333333334,"count":9},{"latitude":33.53295,"longitude":-90.61435,"count":4},{"latitude":34.0099,"longitude":-90.4018,"count":1},{"latitude":34.60495,"longitude":-90.056,"count":2},{"latitude":34.80227499999999,"longitude":-88.92601666666665,"count":12},{"latitude":34.754200000000004,"longitude":-88.21564210526317,"count":19},{"latitude":34.7302,"longitude":-90.34091538461539,"count":13},{"latitude":34.50821428571429,"longitude":-89.04591428571429,"count":7},{"latitude":31.133349999999997,"longitude":-90.1158,"count":8},{"latitude":32.33312533333333,"longitude":-90.86763733333336,"count":75},{"latitude":33.39851632653062,"longitude":-91.03429387755101,"count":49},{"latitude":31.640990476190474,"longitude":-88.6269,"count":21},{"latitude":33.548249999999996,"longitude":-89.240625,"count":4},{"latitude":31.093933333333336,"longitude":-91.17946666666667,"count":3},{"latitude":33.125060000000005,"longitude":-89.04611,"count":10},{"latitude":34.10152,"longitude":-89.6899,"count":5},{"latitude":32.838792000000005,"longitude":-90.40582799999999,"count":25},{"latitude":34.26617,"longitude":-89.03153,"count":10},{"latitude":34.92448205128204,"longitude":-88.53019230769229,"count":39},{"latitude":30.340515789473688,"longitude":-89.39457368421051,"count":38},{"latitude":33.499399999999994,"longitude":-89.68832,"count":5},{"latitude":31.203563636363636,"longitude":-90.42769318181816,"count":44},{"latitude":39.91480000000001,"longitude":-94.91066666666667,"count":3},{"latitude":40.4385,"longitude":-95.389,"count":1},{"latitude":39.18499565217392,"longitude":-91.86725217391303,"count":23},{"latitude":36.789875,"longitude":-93.8726,"count":8},{"latitude":37.5038,"longitude":-94.2697,"count":1},{"latitude":38.257,"longitude":-94.3354,"count":1},{"latitude":38.28762,"longitude":-93.303,"count":5},{"latitude":37.2732625,"longitude":-89.96375,"count":8},{"latitude":38.966013671874975,"longitude":-92.31683925781253,"count":512},{"latitude":39.75457777777777,"longitude":-94.83408055555556,"count":72},{"latitude":36.75891935483871,"longitude":-90.41574838709678,"count":31},{"latitude":38.799423913043476,"longitude":-91.96571086956521,"count":46},{"latitude":38.09455454545454,"longitude":-92.73546363636363,"count":11},{"latitude":37.31837354838709,"longitude":-89.55593354838703,"count":155},{"latitude":39.48255,"longitude":-93.4208,"count":2},{"latitude":36.9074,"longitude":-90.9438,"count":1},{"latitude":38.73110454545454,"longitude":-94.44135454545454,"count":22},{"latitude":37.789699999999996,"longitude":-93.91130000000001,"count":2},{"latitude":37.03638333333333,"longitude":-93.21074999999998,"count":18},{"latitude":40.3772,"longitude":-91.7539,"count":1},{"latitude":39.212592452830194,"longitude":-94.52191415094339,"count":106},{"latitude":39.6521,"longitude":-94.34163333333333,"count":3},{"latitude":38.55871089108911,"longitude":-92.20258019801982,"count":101},{"latitude":38.89385833333333,"longitude":-92.75804166666667,"count":12},{"latitude":38.1171,"longitude":-91.24094000000001,"count":5},{"latitude":37.4424,"longitude":-93.92135,"count":2},{"latitude":37.605716666666666,"longitude":-93.08553333333333,"count":6},{"latitude":40.1023,"longitude":-94.1086,"count":1},{"latitude":39.7578,"longitude":-94.5777,"count":1},{"latitude":37.7796,"longitude":-91.7207,"count":1},{"latitude":36.9462,"longitude":-92.5868,"count":5},{"latitude":36.321005,"longitude":-90.053995,"count":20},{"latitude":38.416375510204084,"longitude":-90.98403265306125,"count":49},{"latitude":38.44748333333333,"longitude":-91.49385000000001,"count":6},{"latitude":40.1407,"longitude":-94.48,"count":1},{"latitude":37.20715540166205,"longitude":-93.29351218836564,"count":361},{"latitude":40.0716,"longitude":-93.6176,"count":1},{"latitude":40.2596,"longitude":-94.0127,"count":1},{"latitude":38.404019999999996,"longitude":-93.72546,"count":5},{"latitude":39.1783,"longitude":-92.75399999999999,"count":2},{"latitude":36.797242857142855,"longitude":-91.85991428571427,"count":7},{"latitude":37.48625,"longitude":-90.66045,"count":2},{"latitude":39.03990679785333,"longitude":-94.52571359570685,"count":1118},{"latitude":37.1066561983471,"longitude":-94.46616198347105,"count":121},{"latitude":38.35705384615384,"longitude":-90.45896307692307,"count":65},{"latitude":38.756789999999995,"longitude":-93.67274,"count":10},{"latitude":40.0747,"longitude":-92.06875,"count":2},{"latitude":37.68735454545455,"longitude":-92.64533636363637,"count":11},{"latitude":39.07006,"longitude":-93.80186,"count":5},{"latitude":37.042588888888886,"longitude":-93.85957222222223,"count":18},{"latitude":40.136700000000005,"longitude":-91.5462,"count":2},{"latitude":38.98598333333332,"longitude":-90.96899166666668,"count":24},{"latitude":39.7926,"longitude":-93.0731,"count":1},{"latitude":39.814,"longitude":-93.5337,"count":3},{"latitude":39.74893333333333,"longitude":-92.56546666666667,"count":3},{"latitude":37.5577,"longitude":-90.2912,"count":1},{"latitude":38.136716666666665,"longitude":-91.81473333333332,"count":6},{"latitude":39.72836470588235,"longitude":-91.43836470588236,"count":17},{"latitude":36.61234,"longitude":-94.34828,"count":10},{"latitude":38.25456666666667,"longitude":-92.48673333333333,"count":3},{"latitude":36.90969545454545,"longitude":-89.34401363636367,"count":22},{"latitude":38.650371428571425,"longitude":-92.60577142857143,"count":7},{"latitude":39.567275,"longitude":-91.7997,"count":4},{"latitude":38.9555,"longitude":-91.510025,"count":4},{"latitude":38.3391,"longitude":-92.83136666666667,"count":3},{"latitude":36.74117,"longitude":-89.64952000000001,"count":10},{"latitude":36.96145862068965,"longitude":-94.42914827586208,"count":29},{"latitude":40.5185,"longitude":-95.1151,"count":1},{"latitude":36.578900000000004,"longitude":-91.50943333333333,"count":3},{"latitude":38.4163,"longitude":-91.8875,"count":3},{"latitude":36.5712,"longitude":-92.46506666666666,"count":3},{"latitude":36.199691666666666,"longitude":-89.76855833333333,"count":12},{"latitude":37.67907142857143,"longitude":-89.8660142857143,"count":7},{"latitude":38.69884285714285,"longitude":-93.24772142857144,"count":14},{"latitude":37.94277692307692,"longitude":-91.76752307692307,"count":13},{"latitude":39.3240125,"longitude":-91.178025,"count":8},{"latitude":39.28567777777775,"longitude":-94.69999494949494,"count":99},{"latitude":37.58178,"longitude":-93.43825999999999,"count":5},{"latitude":37.849338461538466,"longitude":-92.16831538461537,"count":13},{"latitude":39.42886666666667,"longitude":-92.44680000000001,"count":15},{"latitude":39.4197,"longitude":-93.9853,"count":1},{"latitude":37.336349999999996,"longitude":-90.94215,"count":2},{"latitude":36.6198,"longitude":-90.80542,"count":5},{"latitude":38.78860394736841,"longitude":-90.64752763157897,"count":76},{"latitude":38.14,"longitude":-93.7269,"count":1},{"latitude":37.81749285714286,"longitude":-90.53168571428571,"count":14},{"latitude":38.70582493540049,"longitude":-90.31587118863045,"count":774},{"latitude":39.12436666666667,"longitude":-93.18425,"count":6},{"latitude":36.90698139534883,"longitude":-89.58968604651163,"count":43},{"latitude":36.9999,"longitude":-91.40684999999999,"count":2},{"latitude":39.7374,"longitude":-92.2579,"count":1},{"latitude":36.9606,"longitude":-89.87166666666667,"count":3},{"latitude":36.711099999999995,"longitude":-93.45298333333335,"count":6},{"latitude":40.2579,"longitude":-92.9537,"count":1},{"latitude":36.643011111111115,"longitude":-93.19685,"count":18},{"latitude":37.34076,"longitude":-91.97917,"count":10},{"latitude":37.83976875,"longitude":-94.329525,"count":16},{"latitude":38.769283333333334,"longitude":-91.14659999999999,"count":6},{"latitude":38.0181,"longitude":-90.84142222222222,"count":9},{"latitude":37.07825,"longitude":-90.48745,"count":4},{"latitude":37.23865,"longitude":-92.94735000000001,"count":6},{"latitude":37.2955,"longitude":-92.2692,"count":1},{"latitude":40.189980000000006,"longitude":-92.58805,"count":10},{"latitude":37.9781,"longitude":-90.0488,"count":1},{"latitude":38.64697553444172,"longitude":-90.23855748218514,"count":2105},{"latitude":46.66825396825397,"longitude":-112.05677777777777,"count":63},{"latitude":40.5968375,"longitude":-98.403625,"count":8},{"latitude":42.060900000000004,"longitude":-98.07365,"count":2},{"latitude":42.881,"longitude":-98.6933,"count":1},{"latitude":40.70508124999999,"longitude":-99.0732875,"count":16},{"latitude":41.859700000000004,"longitude":-96.34665,"count":2},{"latitude":41.2531,"longitude":-97.1249,"count":1},{"latitude":40.94392500000001,"longitude":-96.1674625,"count":8},{"latitude":40.4771,"longitude":-101.5265,"count":2},{"latitude":41.1313,"longitude":-102.986,"count":2},{"latitude":41.451366666666665,"longitude":-97.06,"count":3},{"latitude":42.0029,"longitude":-96.5885,"count":1},{"latitude":41.3475,"longitude":-99.7535,"count":1},{"latitude":42.445,"longitude":-96.47555,"count":8},{"latitude":42.834900000000005,"longitude":-103.005,"count":2},{"latitude":40.83953333333333,"longitude":-99.88626666666666,"count":3},{"latitude":41.0635,"longitude":-102.079,"count":1},{"latitude":42.268,"longitude":-96.8673,"count":1},{"latitude":41.50565,"longitude":-96.53466,"count":10},{"latitude":41.27609347345126,"longitude":-95.98631261061925,"count":904},{"latitude":40.2773,"longitude":-99.7664,"count":2},{"latitude":40.2679875,"longitude":-96.68152500000001,"count":8},{"latitude":41.7845,"longitude":-99.1323,"count":1},{"latitude":40.6042,"longitude":-99.8625,"count":1},{"latitude":40.920346666666674,"longitude":-98.36090666666665,"count":15},{"latitude":40.8663,"longitude":-98.0192,"count":1},{"latitude":40.1186,"longitude":-99.3553,"count":1},{"latitude":40.202,"longitude":-100.926,"count":2},{"latitude":42.7683,"longitude":-98.3536,"count":1},{"latitude":40.2095,"longitude":-97.0081,"count":1},{"latitude":41.199099999999994,"longitude":-101.72266666666667,"count":3},{"latitude":42.6054,"longitude":-98.0888,"count":1},{"latitude":40.815722875817016,"longitude":-96.68874553376898,"count":459},{"latitude":41.1213,"longitude":-100.78773684210528,"count":19},{"latitude":42.02804444444444,"longitude":-97.41508888888887,"count":9},{"latitude":41.0456,"longitude":-98.12559999999999,"count":2},{"latitude":41.6661,"longitude":-103.102,"count":1},{"latitude":41.4535,"longitude":-97.7456,"count":1},{"latitude":40.4075,"longitude":-95.8143,"count":1},{"latitude":40.7128,"longitude":-96.1368,"count":2},{"latitude":40.442,"longitude":-99.3849,"count":1},{"latitude":42.1924,"longitude":-97.3681,"count":1},{"latitude":41.43488000000001,"longitude":-97.35548000000001,"count":15},{"latitude":41.1626,"longitude":-97.8097,"count":1},{"latitude":40.222449999999995,"longitude":-100.467,"count":2},{"latitude":40.113,"longitude":-95.77055,"count":2},{"latitude":41.15802758620689,"longitude":-96.00229310344827,"count":29},{"latitude":41.22416666666666,"longitude":-96.49470000000001,"count":3},{"latitude":41.87385833333333,"longitude":-103.66816666666669,"count":12},{"latitude":40.85906666666667,"longitude":-97.12006666666667,"count":3},{"latitude":41.2771,"longitude":-98.9602,"count":1},{"latitude":41.9445,"longitude":-97.2237,"count":1},{"latitude":41.50213333333333,"longitude":-96.14268888888888,"count":9},{"latitude":40.85605714285714,"longitude":-97.6464,"count":7},{"latitude":40.847270967741935,"longitude":-115.5578387096774,"count":31},{"latitude":39.533013975155264,"longitude":-119.79187577639743,"count":322},{"latitude":39.2508,"longitude":-114.876,"count":2},{"latitude":39.4875,"longitude":-118.7765,"count":2},{"latitude":39.388200000000005,"longitude":-119.61240000000001,"count":5},{"latitude":38.92346250000001,"longitude":-119.74125000000001,"count":8},{"latitude":38.952,"longitude":-118.82,"count":1},{"latitude":39.41471904761905,"longitude":-119.26533333333332,"count":21},{"latitude":40.2351,"longitude":-118.426,"count":1},{"latitude":39.17565925925927,"longitude":-119.74918518518518,"count":27},{"latitude":41.28043333333333,"longitude":-117.65933333333334,"count":3},{"latitude":40.6298,"longitude":-116.928,"count":1},{"latitude":36.29333749999999,"longitude":-116.00662500000003,"count":24},{"latitude":36.14529894957983,"longitude":-115.15056442577034,"count":1428},{"latitude":38.573,"longitude":-114.90299999999999,"count":1},{"latitude":43.50960204081632,"longitude":-71.45925510204083,"count":49},{"latitude":43.86036,"longitude":-71.12294666666666,"count":15},{"latitude":42.90386382978725,"longitude":-72.28018723404256,"count":47},{"latitude":44.58649166666667,"longitude":-71.3814,"count":12},{"latitude":43.78189285714285,"longitude":-72.04342500000001,"count":28},{"latitude":42.92678360655741,"longitude":-71.47551967213114,"count":366},{"latitude":43.21367808219179,"longitude":-71.55194520547947,"count":73},{"latitude":42.97109375000003,"longitude":-71.00803020833332,"count":192},{"latitude":43.2729184397163,"longitude":-70.95764042553189,"count":141},{"latitude":43.39567499999999,"longitude":-72.26109166666667,"count":12},{"latitude":40.59405384615385,"longitude":-74.86729230769231,"count":13},{"latitude":40.22476015625006,"longitude":-74.75611718750007,"count":768},{"latitude":40.48621946902656,"longitude":-74.41008584070798,"count":113},{"latitude":40.87007083333335,"longitude":-74.52823958333336,"count":48},{"latitude":40.91882426710096,"longitude":-74.16428045602618,"count":614},{"latitude":39.62993200000001,"longitude":-75.47177199999999,"count":50},{"latitude":40.552889830508484,"longitude":-74.52362203389832,"count":59},{"latitude":40.65007948717946,"longitude":-74.26942564102562,"count":234},{"latitude":41.12109999999999,"longitude":-74.64809166666667,"count":12},{"latitude":40.76954444444445,"longitude":-75.0659888888889,"count":9},{"latitude":39.38769792746114,"longitude":-74.48939248704662,"count":386},{"latitude":40.90115666666667,"longitude":-74.04907400000003,"count":150},{"latitude":40.02242173913043,"longitude":-74.84272608695653,"count":207},{"latitude":39.89541763085397,"longitude":-75.07379917355378,"count":363},{"latitude":39.06376129032258,"longitude":-74.85213870967742,"count":31},{"latitude":39.427658400000006,"longitude":-75.11415080000002,"count":250},{"latitude":40.74114882418823,"longitude":-74.19985632698766,"count":893},{"latitude":39.74081562499999,"longitude":-75.13231770833333,"count":96},{"latitude":40.7184776811595,"longitude":-74.0742960869566,"count":690},{"latitude":39.97246818181819,"longitude":-74.23098068181818,"count":88},{"latitude":40.258424999999995,"longitude":-74.0828057142857,"count":140},{"latitude":32.78732,"longitude":-108.22299999999998,"count":15},{"latitude":32.89436666666667,"longitude":-105.95546666666668,"count":15},{"latitude":32.19125,"longitude":-108.69800000000001,"count":2},{"latitude":35.45944166666667,"longitude":-108.57066666666667,"count":12},{"latitude":32.289315596330276,"longitude":-106.75123853211007,"count":109},{"latitude":35.183749999999996,"longitude":-103.66975,"count":4},{"latitude":34.9386,"longitude":-104.689,"count":1},{"latitude":34.865025,"longitude":-106.20150000000001,"count":8},{"latitude":35.32617714285715,"longitude":-106.64142857142853,"count":35},{"latitude":35.534445454545455,"longitude":-105.37672727272728,"count":11},{"latitude":33.43871,"longitude":-105.61880000000001,"count":10},{"latitude":36.89396,"longitude":-104.43619999999999,"count":5},{"latitude":35.1353888888889,"longitude":-107.77455555555555,"count":9},{"latitude":34.740671428571424,"longitude":-106.72728571428569,"count":28},{"latitude":34.406882857142854,"longitude":-103.20654285714286,"count":35},{"latitude":34.475,"longitude":-104.25,"count":1},{"latitude":36.40595714285714,"longitude":-105.5813877551021,"count":49},{"latitude":32.25992,"longitude":-107.77000000000001,"count":5},{"latitude":35.64706855345914,"longitude":-106.00587421383644,"count":159},{"latitude":32.63918571428573,"longitude":-104.32937362637358,"count":91},{"latitude":36.72386507936508,"longitude":-108.17239682539683,"count":63},{"latitude":42.664068273092354,"longitude":-73.77583895582326,"count":249},{"latitude":42.1902923076923,"longitude":-77.9337,"count":13},{"latitude":40.84264367396593,"longitude":-73.890446107056,"count":822},{"latitude":42.110326530612255,"longitude":-75.90964591836735,"count":98},{"latitude":42.25780370370371,"longitude":-78.56248518518515,"count":27},{"latitude":42.92798,"longitude":-76.563168,"count":25},{"latitude":42.2112964285714,"longitude":-79.28746071428576,"count":112},{"latitude":42.10289729729729,"longitude":-76.8112364864865,"count":74},{"latitude":42.51345,"longitude":-75.53608333333334,"count":12},{"latitude":44.72133124999999,"longitude":-73.57184375,"count":16},{"latitude":42.219100000000005,"longitude":-73.71951304347826,"count":23},{"latitude":42.588153846153844,"longitude":-76.1322,"count":13},{"latitude":42.16516666666666,"longitude":-74.92906666666666,"count":9},{"latitude":41.675609042553205,"longitude":-73.88990159574467,"count":188},{"latitude":42.90931988416981,"longitude":-78.83495434362933,"count":1036},{"latitude":44.139522222222226,"longitude":-73.76787777777777,"count":9},{"latitude":44.73095714285714,"longitude":-74.2778,"count":7},{"latitude":43.06989166666667,"longitude":-74.36194166666667,"count":12},{"latitude":43.00208846153846,"longitude":-78.17975384615383,"count":26},{"latitude":42.250378571428584,"longitude":-73.91305,"count":14},{"latitude":43.7436,"longitude":-74.2486,"count":1},{"latitude":43.05893333333333,"longitude":-75.02101666666667,"count":6},{"latitude":44.02440263157896,"longitude":-75.88778421052632,"count":38},{"latitude":40.66495904139441,"longitude":-73.94172040668107,"count":1377},{"latitude":43.71867777777778,"longitude":-75.42162222222221,"count":9},{"latitude":42.766105,"longitude":-77.790725,"count":20},{"latitude":42.984081818181814,"longitude":-75.68923636363637,"count":11},{"latitude":43.168456041131115,"longitude":-77.6264254498715,"count":778},{"latitude":42.9442,"longitude":-74.234025,"count":12},{"latitude":40.69998086642598,"longitude":-73.60890324909751,"count":277},{"latitude":40.78264065040651,"longitude":-73.96248028455281,"count":492},{"latitude":43.11609423076924,"longitude":-78.9503580769231,"count":260},{"latitude":43.105280184331775,"longitude":-75.268296313364,"count":217},{"latitude":43.04293219076005,"longitude":-76.15339701937408,"count":671},{"latitude":42.86808484848484,"longitude":-77.20187272727271,"count":33},{"latitude":41.46661213592234,"longitude":-74.16088203883496,"count":206},{"latitude":43.2537,"longitude":-78.26154,"count":15},{"latitude":43.372676190476184,"longitude":-76.29137142857147,"count":21},{"latitude":42.54620952380952,"longitude":-75.02602380952382,"count":21},{"latitude":41.405927777777784,"longitude":-73.70225555555557,"count":18},{"latitude":40.702490439770564,"longitude":-73.82379311663482,"count":523},{"latitude":42.73515221238939,"longitude":-73.66211946902654,"count":113},{"latitude":40.61715563725491,"longitude":-74.12095637254907,"count":408},{"latitude":41.132743478260856,"longitude":-74.02206521739132,"count":46},{"latitude":43.03005789473685,"longitude":-73.75334210526319,"count":38},{"latitude":42.80765000000001,"longitude":-73.93847711864406,"count":118},{"latitude":42.67435714285714,"longitude":-74.38515714285714,"count":7},{"latitude":42.36505,"longitude":-76.84275,"count":4},{"latitude":42.85723333333332,"longitude":-76.83756,"count":15},{"latitude":42.24295652173913,"longitude":-77.30830869565217,"count":23},{"latitude":40.81277918918922,"longitude":-73.09884189189188,"count":370},{"latitude":41.65977200000001,"longitude":-74.70838399999998,"count":50},{"latitude":42.096075,"longitude":-76.40313750000001,"count":8},{"latitude":42.45024222222221,"longitude":-76.49734222222223,"count":45},{"latitude":41.87811900826447,"longitude":-74.05476363636365,"count":121},{"latitude":43.46205000000001,"longitude":-73.71345789473686,"count":38},{"latitude":43.30403636363638,"longitude":-73.40824545454547,"count":22},{"latitude":43.166805555555555,"longitude":-77.03476111111111,"count":18},{"latitude":40.986460115606945,"longitude":-73.83556242774564,"count":173},{"latitude":42.694716666666665,"longitude":-78.21522222222224,"count":18},{"latitude":42.62088571428571,"longitude":-77.13925714285713,"count":7},{"latitude":44.67047872340426,"longitude":-75.14363829787233,"count":47},{"latitude":36.093525961538475,"longitude":-79.4311346153846,"count":208},{"latitude":35.89963846153846,"longitude":-81.21155384615385,"count":13},{"latitude":36.5064,"longitude":-81.11715000000001,"count":2},{"latitude":34.9572375,"longitude":-80.09810625,"count":16},{"latitude":36.41556,"longitude":-81.44651999999999,"count":5},{"latitude":36.06973333333334,"longitude":-81.94193333333332,"count":3},{"latitude":35.574958115183215,"longitude":-82.55434031413616,"count":191},{"latitude":35.72680857142858,"longitude":-81.67953714285716,"count":35},{"latitude":35.41447142857141,"longitude":-80.60931298701298,"count":77},{"latitude":35.871874999999996,"longitude":-81.49405833333336,"count":24},{"latitude":36.38333,"longitude":-79.37502,"count":10},{"latitude":35.70655609756097,"longitude":-81.26688536585367,"count":82},{"latitude":35.711600000000004,"longitude":-79.2742142857143,"count":14},{"latitude":35.08605,"longitude":-84.072925,"count":4},{"latitude":34.9899,"longitude":-83.8782,"count":1},{"latitude":35.28594444444444,"longitude":-81.51616190476192,"count":63},{"latitude":35.83334313725491,"longitude":-80.19822647058818,"count":102},{"latitude":35.93195,"longitude":-80.490875,"count":4},{"latitude":35.99092594059407,"longitude":-78.89623643564356,"count":505},{"latitude":35.92373333333335,"longitude":-77.70428024691358,"count":81},{"latitude":36.10828066465259,"longitude":-80.24014169184288,"count":331},{"latitude":36.06630714285715,"longitude":-78.36604999999999,"count":14},{"latitude":35.27071944444444,"longitude":-81.17007916666665,"count":144},{"latitude":35.3117,"longitude":-83.7833,"count":1},{"latitude":36.27136428571428,"longitude":-78.6689142857143,"count":14},{"latitude":35.46772,"longitude":-77.60059000000001,"count":10},{"latitude":36.04719086614175,"longitude":-79.8356696062992,"count":635},{"latitude":36.36534891304348,"longitude":-77.64535652173913,"count":92},{"latitude":35.34028518518518,"longitude":-78.89136666666663,"count":54},{"latitude":35.53378695652174,"longitude":-82.9415652173913,"count":23},{"latitude":35.343262745098045,"longitude":-82.45909607843136,"count":51},{"latitude":34.9790875,"longitude":-79.19054687500001,"count":32},{"latitude":35.4226,"longitude":-76.3182,"count":1},{"latitude":35.750509,"longitude":-80.86838500000002,"count":100},{"latitude":35.30383333333334,"longitude":-83.18808333333334,"count":6},{"latitude":35.484266037735836,"longitude":-79.18487358490567,"count":53},{"latitude":35.26917925531915,"longitude":-77.58490585106382,"count":188},{"latitude":35.47871666666667,"longitude":-81.18826333333331,"count":30},{"latitude":35.23576870642911,"longitude":-80.83423323005428,"count":1291},{"latitude":35.99365,"longitude":-82.09485,"count":2},{"latitude":35.321357142857146,"longitude":-79.89355714285715,"count":7},{"latitude":35.27320869565218,"longitude":-79.45494782608695,"count":46},{"latitude":35.95440645161292,"longitude":-77.83677634408599,"count":93},{"latitude":36.428225,"longitude":-77.40271,"count":20},{"latitude":36.00152222222223,"longitude":-79.08584444444448,"count":45},{"latitude":36.35956,"longitude":-78.96388,"count":10},{"latitude":35.58521846590914,"longitude":-77.38968693181818,"count":352},{"latitude":35.25733333333333,"longitude":-82.15235,"count":6},{"latitude":35.747156756756766,"longitude":-79.82181216216217,"count":74},{"latitude":34.95664,"longitude":-79.76352,"count":10},{"latitude":36.400150632911405,"longitude":-79.7253088607595,"count":79},{"latitude":35.652869026548686,"longitude":-80.48969778761061,"count":226},{"latitude":35.34754230769231,"longitude":-81.89545769230769,"count":26},{"latitude":34.78010227272728,"longitude":-79.45946818181818,"count":44},{"latitude":36.35364166666666,"longitude":-80.27746666666668,"count":12},{"latitude":36.40709259259259,"longitude":-80.68329999999999,"count":27},{"latitude":35.478825,"longitude":-83.384625,"count":4},{"latitude":35.207237500000005,"longitude":-82.7376375,"count":8},{"latitude":35.000968085106365,"longitude":-80.57710851063828,"count":47},{"latitude":36.32830250000001,"longitude":-78.3971325,"count":40},{"latitude":35.80853965141613,"longitude":-78.64741633986934,"count":459},{"latitude":36.36757142857143,"longitude":-78.15715714285714,"count":7},{"latitude":36.224210526315794,"longitude":-81.70174736842107,"count":19},{"latitude":36.206579999999995,"longitude":-81.10969,"count":10},{"latitude":35.72299615384616,"longitude":-77.92728461538461,"count":26},{"latitude":36.14960000000001,"longitude":-80.65501666666667,"count":6},{"latitude":35.93886,"longitude":-82.31834,"count":5},{"latitude":35.08354117647059,"longitude":-76.8122411764706,"count":17},{"latitude":36.07043333333334,"longitude":-76.6041888888889,"count":9},{"latitude":35.140049999999995,"longitude":-83.37855,"count":14},{"latitude":35.85737999999999,"longitude":-82.66702000000001,"count":5},{"latitude":35.66815714285714,"longitude":-81.99247500000003,"count":56},{"latitude":36.188966666666666,"longitude":-76.46766666666666,"count":6},{"latitude":35.32831818181819,"longitude":-80.21716363636367,"count":33},{"latitude":35.10181944444445,"longitude":-77.05407314814813,"count":108},{"latitude":35.06031651162793,"longitude":-78.93177023255808,"count":430},{"latitude":36.3888,"longitude":-76.0714,"count":3},{"latitude":36.4565,"longitude":-76.6035,"count":1},{"latitude":36.32405555555555,"longitude":-76.98812222222222,"count":9},{"latitude":35.368941697417,"longitude":-77.9861140221402,"count":271},{"latitude":34.52036315789474,"longitude":-77.8567894736842,"count":19},{"latitude":34.66086417112298,"longitude":-79.07199946524065,"count":187},{"latitude":34.98547666666665,"longitude":-78.36858666666666,"count":30},{"latitude":34.898004166666674,"longitude":-77.93319583333333,"count":24},{"latitude":35.869711111111116,"longitude":-75.63362222222223,"count":9},{"latitude":35.542325,"longitude":-78.39224545454546,"count":44},{"latitude":35.851576470588235,"longitude":-77.09811764705883,"count":17},{"latitude":34.228667483296206,"longitude":-77.91587037861916,"count":449},{"latitude":36.290249122807005,"longitude":-76.23141052631577,"count":57},{"latitude":35.86516666666667,"longitude":-76.73665333333335,"count":15},{"latitude":35.8721,"longitude":-76.22321666666666,"count":6},{"latitude":35.527879999999996,"longitude":-76.96279333333334,"count":30},{"latitude":36.04745833333333,"longitude":-76.98196666666668,"count":12},{"latitude":36.3217,"longitude":-76.15974000000001,"count":5},{"latitude":34.598010204081625,"longitude":-78.63492040816328,"count":49},{"latitude":34.755605263157896,"longitude":-76.74187894736842,"count":19},{"latitude":34.9374,"longitude":-77.25319999999999,"count":2},{"latitude":34.28187636363636,"longitude":-78.70427181818184,"count":110},{"latitude":34.05790985915494,"longitude":-78.22998873239433,"count":71},{"latitude":34.75225652173914,"longitude":-77.42343565217388,"count":115},{"latitude":47.5217,"longitude":-99.5752,"count":1},{"latitude":46.82469374999999,"longitude":-100.89921874999999,"count":32},{"latitude":46.1188,"longitude":-100.65700000000001,"count":1},{"latitude":46.3782,"longitude":-102.32700000000001,"count":1},{"latitude":48.918350000000004,"longitude":-97.39885000000001,"count":2},{"latitude":48.4202,"longitude":-97.4157,"count":1},{"latitude":48.10588571428571,"longitude":-98.86121428571428,"count":7},{"latitude":48.13675,"longitude":-99.21195,"count":2},{"latitude":47.90637222222222,"longitude":-97.07825555555559,"count":36},{"latitude":47.5106,"longitude":-97.8374,"count":1},{"latitude":47.6801,"longitude":-99.1378,"count":1},{"latitude":46.87241250000001,"longitude":-98.78613750000001,"count":8},{"latitude":46.9244625,"longitude":-98.0318,"count":8},{"latitude":46.874650467289726,"longitude":-96.8563196261682,"count":107},{"latitude":48.836,"longitude":-101.1595,"count":2},{"latitude":48.82505,"longitude":-99.84866666666666,"count":6},{"latitude":48.23358404255318,"longitude":-101.31707446808511,"count":94},{"latitude":47.6278,"longitude":-101.29500000000002,"count":4},{"latitude":47.29535,"longitude":-101.922,"count":2},{"latitude":48.90275,"longitude":-103.1565,"count":2},{"latitude":48.5909,"longitude":-102.67200000000001,"count":1},{"latitude":47.786750000000005,"longitude":-103.33018750000001,"count":16},{"latitude":46.6254,"longitude":-97.60385,"count":2},{"latitude":46.24127142857143,"longitude":-96.74858571428571,"count":7},{"latitude":46.038399999999996,"longitude":-97.3712,"count":2},{"latitude":48.17035272727273,"longitude":-103.63847272727274,"count":55},{"latitude":48.04992,"longitude":-102.3186,"count":5},{"latitude":46.81349247311827,"longitude":-100.77322580645163,"count":93},{"latitude":46.9737,"longitude":-103.574,"count":1},{"latitude":46.9437,"longitude":-103.98299999999999,"count":1},{"latitude":46.88293469387754,"longitude":-102.79489795918366,"count":49},{"latitude":46.1227,"longitude":-103.146,"count":1},{"latitude":46.3765,"longitude":-98.7138,"count":1},{"latitude":47.3745,"longitude":-102.79700000000001,"count":1},{"latitude":40.05227000000001,"longitude":-80.86972499999999,"count":20},{"latitude":40.811195999999995,"longitude":-81.3807276363636,"count":275},{"latitude":38.87805,"longitude":-83.41695,"count":2},{"latitude":40.73998387096774,"longitude":-84.11656129032257,"count":31},{"latitude":40.825300000000006,"longitude":-82.26612857142857,"count":7},{"latitude":41.84161142857141,"longitude":-80.75402714285713,"count":70},{"latitude":39.37344999999999,"longitude":-82.13618333333334,"count":12},{"latitude":40.59265,"longitude":-84.2874,"count":4},{"latitude":38.95573636363636,"longitude":-83.92195454545455,"count":11},{"latitude":39.44093772727272,"longitude":-84.47471818181819,"count":220},{"latitude":40.560050000000004,"longitude":-81.00985,"count":2},{"latitude":40.11637999999999,"longitude":-83.75055,"count":10},{"latitude":39.91630662983425,"longitude":-83.8144817679558,"count":181},{"latitude":39.113776190476194,"longitude":-84.23410952380952,"count":21},{"latitude":39.45975,"longitude":-83.807,"count":2},{"latitude":40.782712499999995,"longitude":-80.73809374999998,"count":16},{"latitude":40.277575000000006,"longitude":-81.884575,"count":8},{"latitude":40.875249999999994,"longitude":-82.75434999999999,"count":2},{"latitude":41.48349985199802,"longitude":-81.64641948692643,"count":2027},{"latitude":40.15954358974357,"longitude":-84.72045641025646,"count":39},{"latitude":41.30615,"longitude":-84.4907875,"count":8},{"latitude":40.24265333333334,"longitude":-83.01216666666666,"count":15},{"latitude":41.435332394366185,"longitude":-82.69290845070421,"count":71},{"latitude":39.76262714285713,"longitude":-82.62507000000001,"count":70},{"latitude":39.605799999999995,"longitude":-83.5474,"count":3},{"latitude":39.97664853932581,"longitude":-82.97064232209738,"count":1335},{"latitude":41.62175555555556,"longitude":-84.09244444444444,"count":9},{"latitude":38.79997,"longitude":-82.218,"count":10},{"latitude":41.548474999999996,"longitude":-81.25002500000001,"count":4},{"latitude":39.7400536231884,"longitude":-83.99631304347822,"count":69},{"latitude":40.02851666666667,"longitude":-81.54230000000001,"count":24},{"latitude":39.15645483162518,"longitude":-84.52107342606136,"count":1366},{"latitude":41.043960000000006,"longitude":-83.65690666666666,"count":15},{"latitude":40.6507,"longitude":-83.5948,"count":1},{"latitude":40.327650000000006,"longitude":-81.1346,"count":2},{"latitude":41.4426,"longitude":-84.1536,"count":1},{"latitude":39.216224999999994,"longitude":-83.538425,"count":4},{"latitude":39.500157142857134,"longitude":-82.42041428571429,"count":7},{"latitude":40.525,"longitude":-81.9889,"count":1},{"latitude":41.137483333333336,"longitude":-82.52085,"count":6},{"latitude":38.99548333333334,"longitude":-82.61833333333333,"count":6},{"latitude":40.371024999999996,"longitude":-80.65103749999999,"count":24},{"latitude":40.392314285714285,"longitude":-82.47334285714285,"count":7},{"latitude":41.677262222222225,"longitude":-81.33907111111111,"count":45},{"latitude":38.50094615384615,"longitude":-82.54141538461538,"count":13},{"latitude":40.06877999999999,"longitude":-82.47793600000001,"count":50},{"latitude":40.3823,"longitude":-83.71772,"count":5},{"latitude":41.40608421052631,"longitude":-82.13230040485823,"count":247},{"latitude":41.65732946979039,"longitude":-83.57014500616518,"count":811},{"latitude":39.855920000000005,"longitude":-83.36456000000001,"count":5},{"latitude":41.083506349206324,"longitude":-80.65493904761911,"count":315},{"latitude":40.57826896551723,"longitude":-83.1343724137931,"count":29},{"latitude":41.13121666666667,"longitude":-81.85013333333335,"count":24},{"latitude":39.02647,"longitude":-82.08946999999998,"count":10},{"latitude":40.535666666666664,"longitude":-84.5849,"count":12},{"latitude":40.06327441860465,"longitude":-84.2370627906977,"count":43},{"latitude":39.6198,"longitude":-81.2337,"count":1},{"latitude":39.76819412258604,"longitude":-84.21868555835421,"count":1191},{"latitude":39.60086666666667,"longitude":-81.85383333333334,"count":3},{"latitude":40.40736666666667,"longitude":-82.79146666666668,"count":3},{"latitude":39.947626666666665,"longitude":-82.01836333333334,"count":30},{"latitude":41.531475,"longitude":-82.97897499999999,"count":4},{"latitude":41.113099999999996,"longitude":-84.60243750000001,"count":8},{"latitude":39.7619,"longitude":-82.2813,"count":6},{"latitude":39.68919090909091,"longitude":-82.98404545454544,"count":11},{"latitude":39.13395,"longitude":-83.23316666666666,"count":6},{"latitude":41.157939024390245,"longitude":-81.2899731707317,"count":41},{"latitude":39.765594444444446,"longitude":-84.67169444444443,"count":18},{"latitude":41.0035,"longitude":-83.99615,"count":2},{"latitude":40.749428947368436,"longitude":-82.52180789473682,"count":38},{"latitude":39.32264857142857,"longitude":-83.00972571428571,"count":35},{"latitude":41.35075,"longitude":-83.13423666666667,"count":30},{"latitude":38.78613333333334,"longitude":-82.91531428571429,"count":21},{"latitude":41.115120000000005,"longitude":-83.28767333333333,"count":15},{"latitude":40.302814285714284,"longitude":-84.17277857142858,"count":14},{"latitude":41.07091513761469,"longitude":-81.52066903669719,"count":436},{"latitude":41.22447962962961,"longitude":-80.79773209876544,"count":162},{"latitude":40.410946153846155,"longitude":-81.5181923076923,"count":13},{"latitude":40.23702,"longitude":-83.32358,"count":5},{"latitude":40.871700000000004,"longitude":-84.5359,"count":3},{"latitude":39.2104,"longitude":-82.4421,"count":3},{"latitude":39.4571387755102,"longitude":-84.24795102040815,"count":49},{"latitude":39.46432,"longitude":-81.37924,"count":5},{"latitude":40.869525,"longitude":-81.84124375,"count":16},{"latitude":41.60965,"longitude":-84.645475,"count":4},{"latitude":41.437940000000005,"longitude":-83.57068000000001,"count":25},{"latitude":40.8992,"longitude":-83.2581,"count":3},{"latitude":35.87648571428572,"longitude":-94.63404285714286,"count":7},{"latitude":34.32326666666667,"longitude":-96.09137777777777,"count":9},{"latitude":35.31265714285714,"longitude":-99.61120000000001,"count":7},{"latitude":35.95269999999999,"longitude":-98.48045,"count":2},{"latitude":33.968192307692306,"longitude":-96.41533846153847,"count":13},{"latitude":35.142199999999995,"longitude":-98.30878124999998,"count":16},{"latitude":35.46888620689656,"longitude":-97.7745,"count":29},{"latitude":34.19237555555554,"longitude":-97.18182666666667,"count":45},{"latitude":35.905209090909096,"longitude":-95.00571363636364,"count":22},{"latitude":33.999225,"longitude":-95.5245375,"count":8},{"latitude":35.27551700000001,"longitude":-97.44742000000004,"count":100},{"latitude":34.53823333333333,"longitude":-96.335,"count":3},{"latitude":34.617861904761895,"longitude":-98.42725158730158,"count":126},{"latitude":34.258833333333335,"longitude":-98.40740000000001,"count":3},{"latitude":36.62385,"longitude":-95.12780000000001,"count":2},{"latitude":35.96280689655173,"longitude":-96.20648275862068,"count":29},{"latitude":35.53419,"longitude":-98.87127999999998,"count":10},{"latitude":36.4848625,"longitude":-94.81713125000002,"count":16},{"latitude":36.042,"longitude":-98.9626,"count":1},{"latitude":36.2724,"longitude":-99.8758,"count":1},{"latitude":36.39290499999999,"longitude":-97.8704166666667,"count":60},{"latitude":34.7064,"longitude":-97.2426,"count":8},{"latitude":35.05542307692306,"longitude":-97.91750769230772,"count":39},{"latitude":36.76495,"longitude":-97.76485,"count":2},{"latitude":34.6813,"longitude":-99.7517,"count":2},{"latitude":35.2208,"longitude":-95.1211,"count":2},{"latitude":35.084425,"longitude":-96.33195,"count":4},{"latitude":34.64104210526315,"longitude":-99.3319447368421,"count":38},{"latitude":34.1698,"longitude":-97.86346666666667,"count":3},{"latitude":34.250240000000005,"longitude":-96.66799999999999,"count":5},{"latitude":36.723749999999995,"longitude":-97.13841666666667,"count":6},{"latitude":35.91366666666667,"longitude":-97.89636666666667,"count":3},{"latitude":34.918733333333336,"longitude":-99.1098,"count":3},{"latitude":35.03275,"longitude":-94.68717857142857,"count":14},{"latitude":35.69106666666667,"longitude":-96.87237777777779,"count":9},{"latitude":35.8582625,"longitude":-97.40791666666667,"count":24},{"latitude":33.94431666666666,"longitude":-97.18910000000001,"count":6},{"latitude":36.2715,"longitude":-98.478,"count":1},{"latitude":34.0603125,"longitude":-96.75869999999999,"count":8},{"latitude":36.26704285714286,"longitude":-95.2465857142857,"count":14},{"latitude":35.05253529411765,"longitude":-97.42555882352943,"count":17},{"latitude":34.01491666666667,"longitude":-94.89875833333332,"count":12},{"latitude":35.36132,"longitude":-95.58536000000001,"count":10},{"latitude":34.48504444444444,"longitude":-97.08155555555557,"count":9},{"latitude":35.74046615384613,"longitude":-95.37156153846153,"count":65},{"latitude":36.4382,"longitude":-97.17723333333333,"count":3},{"latitude":36.780680000000004,"longitude":-95.62414,"count":5},{"latitude":35.48218671963679,"longitude":-97.52499035187313,"count":881},{"latitude":35.65076399999999,"longitude":-95.97429200000002,"count":25},{"latitude":36.32862432432432,"longitude":-96.10034594594593,"count":37},{"latitude":36.865171428571436,"longitude":-94.8341642857143,"count":14},{"latitude":36.25305,"longitude":-96.58745,"count":2},{"latitude":36.08825714285714,"longitude":-96.98313571428572,"count":28},{"latitude":34.928332352941176,"longitude":-95.70367647058823,"count":34},{"latitude":34.785250000000005,"longitude":-96.68373000000001,"count":20},{"latitude":35.322888461538454,"longitude":-96.96613076923077,"count":26},{"latitude":34.21563333333333,"longitude":-95.52643333333333,"count":3},{"latitude":36.31429411764705,"longitude":-95.62728823529413,"count":51},{"latitude":35.19754285714286,"longitude":-96.6172857142857,"count":7},{"latitude":35.454255555555555,"longitude":-94.73810555555558,"count":18},{"latitude":34.50155,"longitude":-97.890175,"count":12},{"latitude":36.73096666666667,"longitude":-101.38766666666668,"count":3},{"latitude":34.3926,"longitude":-99.01050000000001,"count":2},{"latitude":36.144361575179,"longitude":-95.92937215592667,"count":1257},{"latitude":35.984300000000005,"longitude":-95.54790294117646,"count":34},{"latitude":36.72588437499999,"longitude":-95.95436250000002,"count":32},{"latitude":35.280719999999995,"longitude":-99.06433999999999,"count":5},{"latitude":36.4313,"longitude":-99.39703999999999,"count":5},{"latitude":44.75702,"longitude":-117.83870000000002,"count":10},{"latitude":45.99898571428571,"longitude":-123.85442857142856,"count":7},{"latitude":45.91063333333334,"longitude":-122.96433333333334,"count":18},{"latitude":43.299910526315784,"longitude":-124.2191052631579,"count":19},{"latitude":43.19484117647058,"longitude":-123.35888235294115,"count":34},{"latitude":44.38755714285714,"longitude":-118.91957142857143,"count":7},{"latitude":43.419700000000006,"longitude":-118.89925,"count":4},{"latitude":42.357497209302316,"longitude":-122.86565581395348,"count":215},{"latitude":42.1925,"longitude":-120.352,"count":1},{"latitude":44.050957823129245,"longitude":-123.10004761904756,"count":147},{"latitude":44.73621818181818,"longitude":-124.00754545454544,"count":11},{"latitude":44.55313727272729,"longitude":-122.96365454545453,"count":110},{"latitude":44.029958823529405,"longitude":-116.99770588235296,"count":17},{"latitude":44.96231975308642,"longitude":-122.95128395061722,"count":162},{"latitude":45.83056666666667,"longitude":-119.70733333333332,"count":3},{"latitude":45.53533853606026,"longitude":-122.59654251883747,"count":929},{"latitude":44.930025,"longitude":-123.24850000000002,"count":12},{"latitude":45.40495,"longitude":-120.714,"count":2},{"latitude":45.57376666666667,"longitude":-123.83133333333332,"count":3},{"latitude":44.5914,"longitude":-120.26700000000001,"count":1},{"latitude":45.212875000000004,"longitude":-123.18799999999999,"count":20},{"latitude":44.554541379310336,"longitude":-123.28551724137932,"count":29},{"latitude":45.36526864406778,"longitude":-122.52920338983051,"count":118},{"latitude":44.2713625,"longitude":-120.789375,"count":8},{"latitude":42.220645454545455,"longitude":-124.32699999999998,"count":11},{"latitude":44.118830769230755,"longitude":-121.26489743589744,"count":39},{"latitude":45.641225,"longitude":-121.57600000000001,"count":8},{"latitude":44.59513333333334,"longitude":-121.21744444444442,"count":9},{"latitude":42.36981492537313,"longitude":-123.45289552238805,"count":67},{"latitude":42.271699999999996,"longitude":-121.73592105263158,"count":38},{"latitude":45.55845,"longitude":-121.20899999999999,"count":6},{"latitude":45.48967416666666,"longitude":-122.89144999999999,"count":120},{"latitude":45.71916071428571,"longitude":-118.89475000000002,"count":28},{"latitude":45.3271,"longitude":-118.087,"count":2},{"latitude":40.0181,"longitude":-78.48074166666667,"count":12},{"latitude":40.35893333333333,"longitude":-75.9025770833333,"count":96},{"latitude":40.17263048780488,"longitude":-74.94358536585365,"count":82},{"latitude":40.012441666666675,"longitude":-75.71148333333333,"count":48},{"latitude":40.95947692307691,"longitude":-78.37178461538461,"count":13},{"latitude":40.20373529411762,"longitude":-77.13228991596642,"count":119},{"latitude":39.87968590604026,"longitude":-75.34767348993287,"count":298},{"latitude":42.11042962962964,"longitude":-80.07097195767196,"count":189},{"latitude":39.923360465116275,"longitude":-79.72619418604648,"count":86},{"latitude":40.599599999999995,"longitude":-77.28694999999999,"count":2},{"latitude":40.04798207792209,"longitude":-76.29917012987015,"count":385},{"latitude":40.60561120331949,"longitude":-75.48267344398339,"count":241},{"latitude":41.14817203166224,"longitude":-75.92694881266482,"count":379},{"latitude":41.032709183673454,"longitude":-75.30055204081634,"count":98},{"latitude":40.678433132530095,"longitude":-75.29249939759036,"count":166},{"latitude":40.850312499999994,"longitude":-76.676603125,"count":32},{"latitude":39.993532279592664,"longitude":-75.15575317878468,"count":2847},{"latitude":40.087143749999996,"longitude":-79.00121250000002,"count":16},{"latitude":41.84448,"longitude":-77.1999,"count":5},{"latitude":40.184799999999996,"longitude":-80.15750520833332,"count":96},{"latitude":40.350168749999995,"longitude":-79.6529888888889,"count":144},{"latitude":41.49188,"longitude":-75.91742,"count":5},{"latitude":39.955555421686746,"longitude":-76.74019126506025,"count":332},{"latitude":41.370400000000004,"longitude":-79.2986,"count":2},{"latitude":41.83815833333333,"longitude":-78.51606666666666,"count":12},{"latitude":39.845415384615386,"longitude":-77.17044615384613,"count":26},{"latitude":40.43619602063375,"longitude":-79.94524605747971,"count":1357},{"latitude":40.70765333333333,"longitude":-79.52926666666669,"count":15},{"latitude":40.51504634146342,"longitude":-78.38180975609755,"count":41},{"latitude":41.813415,"longitude":-76.53896,"count":20},{"latitude":40.873315625000004,"longitude":-79.924896875,"count":32},{"latitude":40.33481643835617,"longitude":-78.88442465753425,"count":73},{"latitude":41.51,"longitude":-78.2376,"count":1},{"latitude":40.85005,"longitude":-75.84543571428571,"count":14},{"latitude":41.048028571428574,"longitude":-76.34282380952381,"count":21},{"latitude":41.637600000000006,"longitude":-80.20743999999999,"count":15},{"latitude":40.27535839080459,"longitude":-76.85390873563219,"count":435},{"latitude":41.35935714285714,"longitude":-78.69167142857142,"count":7},{"latitude":41.47773333333333,"longitude":-79.42283333333334,"count":3},{"latitude":39.90338153846153,"longitude":-77.65445999999999,"count":65},{"latitude":39.986925,"longitude":-78.043575,"count":4},{"latitude":40.38213125,"longitude":-78.00118124999999,"count":16},{"latitude":40.65298857142858,"longitude":-79.09130857142858,"count":35},{"latitude":41.05752,"longitude":-79.13886,"count":5},{"latitude":41.43111153846154,"longitude":-75.63723461538466,"count":78},{"latitude":40.982424137931034,"longitude":-80.34745862068964,"count":58},{"latitude":41.248082000000004,"longitude":-77.01107400000002,"count":50},{"latitude":41.24900714285714,"longitude":-80.41639642857142,"count":28},{"latitude":40.642759999999996,"longitude":-77.53817999999998,"count":5},{"latitude":40.16653083333334,"longitude":-75.36140416666667,"count":120},{"latitude":40.9634,"longitude":-76.6127,"count":1},{"latitude":40.39938421052632,"longitude":-77.12877368421053,"count":19},{"latitude":41.30458125,"longitude":-74.97383124999999,"count":16},{"latitude":41.62413333333334,"longitude":-77.8169,"count":3},{"latitude":40.73932264150942,"longitude":-76.16834716981134,"count":53},{"latitude":40.78503333333334,"longitude":-76.86906666666665,"count":6},{"latitude":41.52445,"longitude":-76.47534999999999,"count":2},{"latitude":41.827799999999996,"longitude":-75.7442375,"count":8},{"latitude":40.988366666666664,"longitude":-76.8985,"count":3},{"latitude":41.44367999999999,"longitude":-79.75200000000001,"count":5},{"latitude":41.852722222222226,"longitude":-79.23778888888889,"count":9},{"latitude":41.46801428571428,"longitude":-75.32617142857144,"count":7},{"latitude":39.86963125,"longitude":-80.1554,"count":16},{"latitude":40.344549473684204,"longitude":-76.43559473684208,"count":95},{"latitude":40.673320833333335,"longitude":-80.29705416666668,"count":48},{"latitude":40.87947666666666,"longitude":-77.87230666666666,"count":30},{"latitude":41.114775,"longitude":-77.409325,"count":4},{"latitude":41.726733333333335,"longitude":-71.29861666666667,"count":6},{"latitude":41.69760212765957,"longitude":-71.50214893617023,"count":47},{"latitude":41.55908125,"longitude":-71.275575,"count":16},{"latitude":41.833222036082496,"longitude":-71.42756907216494,"count":776},{"latitude":41.471153571428566,"longitude":-71.624625,"count":28},{"latitude":33.94029431818182,"longitude":-81.16420340909089,"count":176},{"latitude":33.92649032258064,"longitude":-80.37493978494625,"count":93},{"latitude":34.711825,"longitude":-83.01835249999999,"count":40},{"latitude":34.832943544303795,"longitude":-82.37553164556962,"count":395},{"latitude":34.18792222222223,"longitude":-80.22393333333333,"count":9},{"latitude":34.200856249999994,"longitude":-82.45009375,"count":16},{"latitude":33.53911364653245,"longitude":-81.76108836689036,"count":447},{"latitude":32.996619230769234,"longitude":-81.29679615384617,"count":26},{"latitude":34.53081639344264,"longitude":-82.65173278688522,"count":244},{"latitude":33.27791904761905,"longitude":-81.06056666666669,"count":21},{"latitude":33.29926428571428,"longitude":-81.35727857142857,"count":14},{"latitude":32.36552817204304,"longitude":-80.73032967741936,"count":465},{"latitude":33.06667621951218,"longitude":-80.05560975609755,"count":164},{"latitude":33.67249523809524,"longitude":-80.8069238095238,"count":21},{"latitude":35.06884705882352,"longitude":-81.63784117647057,"count":51},{"latitude":34.70911333333333,"longitude":-81.17375111111113,"count":45},{"latitude":34.702396428571426,"longitude":-80.10979642857144,"count":28},{"latitude":33.6946125,"longitude":-80.219975,"count":8},{"latitude":32.912291358024675,"longitude":-80.65953703703703,"count":81},{"latitude":34.3173885496183,"longitude":-79.97978473282441,"count":131},{"latitude":34.39957142857143,"longitude":-79.37677500000004,"count":56},{"latitude":33.01506982248522,"longitude":-80.22678520710063,"count":169},{"latitude":33.68297272727272,"longitude":-81.9741090909091,"count":11},{"latitude":34.368663636363635,"longitude":-81.07818181818182,"count":11},{"latitude":34.10694136125654,"longitude":-79.77404502617799,"count":191},{"latitude":33.42719999999999,"longitude":-79.33333620689655,"count":58},{"latitude":34.197560869565216,"longitude":-82.15186521739129,"count":46},{"latitude":32.771644444444455,"longitude":-81.13427407407407,"count":27},{"latitude":33.785943072289136,"longitude":-78.9175956325301,"count":664},{"latitude":32.4152962962963,"longitude":-81.0029419753086,"count":81},{"latitude":34.24470232558139,"longitude":-80.66435348837209,"count":43},{"latitude":34.74101263157896,"longitude":-80.76189052631578,"count":95},{"latitude":34.48960833333334,"longitude":-82.00471666666667,"count":48},{"latitude":34.174688679245286,"longitude":-79.33727358490566,"count":53},{"latitude":34.62701372549018,"longitude":-79.6624431372549,"count":51},{"latitude":33.9011,"longitude":-82.342125,"count":4},{"latitude":34.25754347826087,"longitude":-81.53303043478262,"count":23},{"latitude":33.472188620689636,"longitude":-80.77643758620691,"count":290},{"latitude":34.82637636363637,"longitude":-82.64899818181819,"count":55},{"latitude":33.9246,"longitude":-81.71127999999999,"count":5},{"latitude":34.72418235294116,"longitude":-81.61524509803922,"count":51},{"latitude":33.65787241379309,"longitude":-79.69837931034482,"count":29},{"latitude":34.95524209354124,"longitude":-81.05423207126952,"count":449},{"latitude":34.948380501392734,"longitude":-81.9966774373259,"count":359},{"latitude":34.03974454685102,"longitude":-80.9945906298003,"count":651},{"latitude":32.844363832658594,"longitude":-80.00804385964909,"count":741},{"latitude":45.6186,"longitude":-97.7919,"count":1},{"latitude":42.721399999999996,"longitude":-96.60133333333333,"count":3},{"latitude":43.11533333333333,"longitude":-99.07733333333333,"count":3},{"latitude":44.5797,"longitude":-97.2123,"count":1},{"latitude":43.7997,"longitude":-98.9929,"count":1},{"latitude":43.46556842105264,"longitude":-96.77005789473684,"count":19},{"latitude":43.1839,"longitude":-97.6378,"count":1},{"latitude":43.544651200000004,"longitude":-96.73168120000008,"count":250},{"latitude":43.7259,"longitude":-97.3875,"count":1},{"latitude":44.396480000000004,"longitude":-100.24734,"count":5},{"latitude":43.92005,"longitude":-97.09885,"count":2},{"latitude":44.0167,"longitude":-97.5405,"count":1},{"latitude":44.3138875,"longitude":-96.82768750000001,"count":8},{"latitude":43.3456,"longitude":-99.8966,"count":2},{"latitude":45.50605517241378,"longitude":-98.46955172413792,"count":29},{"latitude":45.79083333333333,"longitude":-97.028,"count":3},{"latitude":43.4311,"longitude":-103.48899999999999,"count":1},{"latitude":43.78183333333334,"longitude":-103.51633333333332,"count":3},{"latitude":44.0704,"longitude":-99.58229999999999,"count":3},{"latitude":45.45245,"longitude":-97.695,"count":2},{"latitude":44.90068333333334,"longitude":-97.12698333333333,"count":6},{"latitude":44.66785,"longitude":-103.848,"count":2},{"latitude":43.1751,"longitude":-101.73700000000001,"count":1},{"latitude":45.4167,"longitude":-99.3194,"count":1},{"latitude":45.5404,"longitude":-100.434,"count":1},{"latitude":42.88522222222222,"longitude":-97.38853333333333,"count":9},{"latitude":43.1224125,"longitude":-98.38708749999998,"count":8},{"latitude":43.99,"longitude":-98.14436666666666,"count":3},{"latitude":43.70874166666666,"longitude":-98.04322499999999,"count":12},{"latitude":44.36213333333333,"longitude":-98.2146,"count":3},{"latitude":44.8571,"longitude":-98.32710000000002,"count":3},{"latitude":43.29895555555555,"longitude":-100.68755555555556,"count":9},{"latitude":45.9408,"longitude":-102.15899999999999,"count":1},{"latitude":44.34607,"longitude":-103.2125,"count":10},{"latitude":43.3162923076923,"longitude":-102.46776923076924,"count":13},{"latitude":45.0475,"longitude":-101.602,"count":1},{"latitude":44.99795,"longitude":-101.23533333333334,"count":6},{"latitude":44.07620000000001,"longitude":-103.2124883720931,"count":86},{"latitude":44.42686,"longitude":-103.843,"count":5},{"latitude":42.895849999999996,"longitude":-98.04055,"count":2},{"latitude":43.574,"longitude":-100.762,"count":1},{"latitude":31.758966666666666,"longitude":-95.64070740740739,"count":27},{"latitude":32.322019999999995,"longitude":-102.5406,"count":5},{"latitude":31.331575949367096,"longitude":-94.70807721518985,"count":79},{"latitude":28.01216,"longitude":-97.07363999999998,"count":5},{"latitude":34.8962,"longitude":-101.23,"count":1},{"latitude":29.08108333333333,"longitude":-98.63000555555556,"count":18},{"latitude":29.8244,"longitude":-96.16893333333333,"count":3},{"latitude":34.2225,"longitude":-102.72399999999999,"count":1},{"latitude":29.662433333333336,"longitude":-98.96611666666666,"count":6},{"latitude":30.127595238095235,"longitude":-97.37313809523808,"count":21},{"latitude":28.381671428571426,"longitude":-97.7414142857143,"count":7},{"latitude":31.09896878306877,"longitude":-97.66036507936502,"count":378},{"latitude":29.45007034956298,"longitude":-98.49845018726585,"count":1602},{"latitude":30.045,"longitude":-98.3401,"count":1},{"latitude":32.0207,"longitude":-97.4947,"count":1},{"latitude":33.431593650793644,"longitude":-94.12969841269843,"count":63},{"latitude":29.369963636363632,"longitude":-95.31794285714287,"count":77},{"latitude":30.633776086956527,"longitude":-96.34046739130436,"count":138},{"latitude":30.143459999999997,"longitude":-103.57959999999999,"count":5},{"latitude":27.2327,"longitude":-98.1475,"count":1},{"latitude":31.758435714285714,"longitude":-99.00005714285713,"count":14},{"latitude":30.432666666666666,"longitude":-96.65793333333333,"count":3},{"latitude":30.692952631578947,"longitude":-98.25108947368422,"count":19},{"latitude":29.937866666666665,"longitude":-97.58081666666665,"count":6},{"latitude":32.29178,"longitude":-99.34232,"count":5},{"latitude":26.01308928571429,"longitude":-97.53652857142858,"count":56},{"latitude":32.9933,"longitude":-94.96756,"count":5},{"latitude":35.261250000000004,"longitude":-101.2815,"count":2},{"latitude":33.11033,"longitude":-94.38424,"count":10},{"latitude":34.5527,"longitude":-102.313,"count":2},{"latitude":29.77242222222222,"longitude":-94.6431777777778,"count":9},{"latitude":31.930186666666664,"longitude":-95.22769999999997,"count":15},{"latitude":34.423725,"longitude":-100.1995,"count":4},{"latitude":33.75423333333333,"longitude":-98.25313333333332,"count":3},{"latitude":33.7216,"longitude":-102.758,"count":1},{"latitude":31.8272,"longitude":-99.427,"count":1},{"latitude":33.09560597014925,"longitude":-96.70765671641794,"count":67},{"latitude":29.729997058823525,"longitude":-98.19923235294115,"count":34},{"latitude":31.2078,"longitude":-99.8678,"count":1},{"latitude":33.63198,"longitude":-97.13015999999999,"count":5},{"latitude":31.152988679245276,"longitude":-97.88335094339624,"count":53},{"latitude":34.001,"longitude":-100.305,"count":1},{"latitude":33.636966666666666,"longitude":-101.34033333333333,"count":3},{"latitude":31.0433,"longitude":-104.82700000000001,"count":1},{"latitude":36.0683,"longitude":-102.516,"count":1},{"latitude":32.78631787755101,"longitude":-96.79668171428553,"count":1225},{"latitude":32.77666,"longitude":-101.9656,"count":5},{"latitude":29.184266666666662,"longitude":-97.23483333333333,"count":3},{"latitude":34.97233333333333,"longitude":-102.49333333333334,"count":3},{"latitude":33.114280898876416,"longitude":-97.04211123595506,"count":89},{"latitude":28.52763333333333,"longitude":-99.8599,"count":3},{"latitude":27.683433333333337,"longitude":-98.41373333333335,"count":3},{"latitude":32.41846666666667,"longitude":-98.86416666666666,"count":3},{"latitude":31.85538437499999,"longitude":-102.38978125,"count":96},{"latitude":30.01665,"longitude":-100.208,"count":2},{"latitude":31.7945869955157,"longitude":-106.40291928251125,"count":223},{"latitude":32.39935238095238,"longitude":-96.7967380952381,"count":21},{"latitude":32.19553333333334,"longitude":-98.18498333333332,"count":6},{"latitude":31.29076,"longitude":-96.99796,"count":5},{"latitude":33.602675000000005,"longitude":-96.1533375,"count":8},{"latitude":29.935549999999996,"longitude":-96.87161666666667,"count":6},{"latitude":33.9574,"longitude":-99.7015,"count":1},{"latitude":29.618571612903242,"longitude":-95.63107999999997,"count":155},{"latitude":33.135425,"longitude":-95.21665,"count":4},{"latitude":31.66402,"longitude":-96.25825999999999,"count":5},{"latitude":28.747866666666667,"longitude":-99.1512,"count":3},{"latitude":32.8138,"longitude":-102.60228571428571,"count":7},{"latitude":29.396817391304353,"longitude":-94.94936739130434,"count":138},{"latitude":33.191050000000004,"longitude":-101.31400000000001,"count":2},{"latitude":30.2846,"longitude":-98.8876,"count":1},{"latitude":28.566499999999998,"longitude":-97.36185,"count":2},{"latitude":29.4578,"longitude":-97.2435,"count":1},{"latitude":35.53655384615384,"longitude":-100.9673076923077,"count":13},{"latitude":33.6730105263158,"longitude":-96.61671578947369,"count":19},{"latitude":32.482815909090924,"longitude":-94.76413295454545,"count":176},{"latitude":30.51278333333333,"longitude":-95.96668333333332,"count":12},{"latitude":29.586656521739137,"longitude":-98.03265652173911,"count":23},{"latitude":34.1615,"longitude":-101.78599999999999,"count":7},{"latitude":31.7056,"longitude":-98.1226,"count":2},{"latitude":34.3037,"longitude":-99.7733,"count":1},{"latitude":30.31453,"longitude":-94.32206,"count":10},{"latitude":29.801853583389235,"longitude":-95.39653546550564,"count":2986},{"latitude":32.53042033898305,"longitude":-94.3673254237288,"count":59},{"latitude":36.050700000000006,"longitude":-102.5005,"count":2},{"latitude":33.1505,"longitude":-99.7241,"count":1},{"latitude":29.971012244897963,"longitude":-97.94572857142853,"count":49},{"latitude":32.22837,"longitude":-95.81924666666663,"count":30},{"latitude":26.221593999999993,"longitude":-98.198672,"count":100},{"latitude":32.00360833333333,"longitude":-97.18409166666665,"count":12},{"latitude":33.573,"longitude":-102.331,"count":11},{"latitude":32.377375,"longitude":-97.72455,"count":4},{"latitude":33.10683636363637,"longitude":-95.65273636363636,"count":11},{"latitude":31.320041666666665,"longitude":-95.46369166666665,"count":12},{"latitude":32.25401176470588,"longitude":-101.45511764705883,"count":17},{"latitude":31.699299999999997,"longitude":-105.75266666666666,"count":3},{"latitude":33.160880000000006,"longitude":-96.07084000000002,"count":15},{"latitude":35.66438333333333,"longitude":-101.41650000000003,"count":12},{"latitude":33.256,"longitude":-98.2213,"count":1},{"latitude":28.8985,"longitude":-96.6305,"count":2},{"latitude":30.765255555555555,"longitude":-94.01294444444444,"count":9},{"latitude":30.018246073298418,"longitude":-94.0685717277487,"count":191},{"latitude":27.301166666666663,"longitude":-98.68213333333334,"count":3},{"latitude":27.73732222222222,"longitude":-98.08183888888891,"count":18},{"latitude":32.47146086956521,"longitude":-97.29384782608699,"count":23},{"latitude":32.741485714285716,"longitude":-99.89844285714285,"count":7},{"latitude":29.0299,"longitude":-97.7448,"count":1},{"latitude":32.682143749999994,"longitude":-96.31688125000001,"count":32},{"latitude":29.883960000000002,"longitude":-98.77941999999999,"count":5},{"latitude":26.8264,"longitude":-97.7509,"count":1},{"latitude":30.037183333333335,"longitude":-99.14141666666667,"count":6},{"latitude":30.4885,"longitude":-99.7752,"count":1},{"latitude":27.481933333333334,"longitude":-97.68026666666667,"count":3},{"latitude":28.4352,"longitude":-99.2359,"count":1},{"latitude":33.664530232558135,"longitude":-95.55467209302324,"count":86},{"latitude":34.0256,"longitude":-102.334,"count":4},{"latitude":31.092657142857142,"longitude":-98.14137142857143,"count":7},{"latitude":29.2907,"longitude":-97.1491,"count":1},{"latitude":30.338466666666665,"longitude":-96.8741,"count":3},{"latitude":31.226775000000004,"longitude":-96.0083,"count":4},{"latitude":30.146037037037036,"longitude":-94.90988148148148,"count":27},{"latitude":31.641,"longitude":-96.45570000000001,"count":2},{"latitude":36.4207,"longitude":-100.16,"count":1},{"latitude":28.271599999999996,"longitude":-98.14086666666667,"count":3},{"latitude":30.7390125,"longitude":-98.5772375,"count":8},{"latitude":33.570900647249196,"longitude":-101.86430744336569,"count":309},{"latitude":33.161525,"longitude":-101.74099999999999,"count":4},{"latitude":30.951019999999993,"longitude":-95.97301999999999,"count":5},{"latitude":32.78445555555555,"longitude":-94.35711111111112,"count":9},{"latitude":32.12338,"longitude":-101.795,"count":5},{"latitude":28.958271428571432,"longitude":-95.94695714285714,"count":7},{"latitude":28.6103,"longitude":-100.399,"count":2},{"latitude":31.1313,"longitude":-99.3375,"count":1},{"latitude":31.54660530973452,"longitude":-97.15212920353986,"count":113},{"latitude":29.280327272727273,"longitude":-98.92015454545454,"count":11},{"latitude":31.972512244897963,"longitude":-102.14091836734696,"count":49},{"latitude":30.799325000000003,"longitude":-96.98100000000001,"count":8},{"latitude":33.646825,"longitude":-97.77415,"count":4},{"latitude":30.239111363636365,"longitude":-95.45936136363638,"count":132},{"latitude":35.9615,"longitude":-101.988,"count":2},{"latitude":33.14463333333333,"longitude":-94.69426666666665,"count":3},{"latitude":31.620396666666668,"longitude":-94.62409333333333,"count":30},{"latitude":32.071325,"longitude":-96.42977499999999,"count":8},{"latitude":30.85895,"longitude":-93.769175,"count":4},{"latitude":32.467999999999996,"longitude":-100.41233333333332,"count":3},{"latitude":27.749432593856646,"longitude":-97.41506774744035,"count":586},{"latitude":36.3912,"longitude":-100.81,"count":1},{"latitude":35.2506,"longitude":-102.46,"count":1},{"latitude":30.135612500000004,"longitude":-93.89236666666666,"count":24},{"latitude":32.7455,"longitude":-98.19537500000001,"count":4},{"latitude":32.1964,"longitude":-94.32156363636363,"count":11},{"latitude":32.8084,"longitude":-97.71615000000001,"count":24},{"latitude":34.5018,"longitude":-102.8575,"count":2},{"latitude":30.886166666666668,"longitude":-102.88366666666667,"count":3},{"latitude":30.727566666666664,"longitude":-94.97865,"count":6},{"latitude":35.2151917647059,"longitude":-101.83397647058824,"count":255},{"latitude":29.5606,"longitude":-104.367,"count":1},{"latitude":32.86576666666667,"longitude":-95.78366666666666,"count":3},{"latitude":35.14363650793652,"longitude":-101.8813492063492,"count":63},{"latitude":29.6702,"longitude":-100.01100000000001,"count":1},{"latitude":33.6155,"longitude":-95.0458,"count":1},{"latitude":28.3202,"longitude":-96.8986,"count":1},{"latitude":31.016550000000002,"longitude":-96.62022500000002,"count":8},{"latitude":32.91678,"longitude":-96.40620999999999,"count":10},{"latitude":31.82315,"longitude":-100.0846,"count":2},{"latitude":32.25106470588236,"longitude":-94.73562352941177,"count":17},{"latitude":30.555650000000004,"longitude":-95.051325,"count":8},{"latitude":27.92755806451613,"longitude":-97.2621290322581,"count":31},{"latitude":30.9739,"longitude":-98.71600000000001,"count":1},{"latitude":30.8602,"longitude":-100.601,"count":1},{"latitude":32.719049999999996,"longitude":-100.905,"count":2},{"latitude":31.7759,"longitude":-94.14062857142856,"count":7},{"latitude":36.3325,"longitude":-102.073,"count":1},{"latitude":32.34179664429527,"longitude":-95.29952953020133,"count":149},{"latitude":32.2346,"longitude":-97.7553,"count":1},{"latitude":26.382333333333325,"longitude":-98.80667499999998,"count":12},{"latitude":32.7561,"longitude":-98.6806,"count":1},{"latitude":30.5885,"longitude":-100.647,"count":1},{"latitude":34.4581,"longitude":-101.76299999999999,"count":2},{"latitude":32.75961402061851,"longitude":-97.19932927835065,"count":970},{"latitude":32.451493181818165,"longitude":-99.7504636363636,"count":132},{"latitude":30.1432,"longitude":-102.3965,"count":2},{"latitude":33.180099999999996,"longitude":-102.274,"count":2},{"latitude":33.22110000000001,"longitude":-94.98689,"count":10},{"latitude":31.470543835616443,"longitude":-100.46202739726026,"count":73},{"latitude":30.27642705223886,"longitude":-97.70833152985074,"count":536},{"latitude":30.974957142857143,"longitude":-95.29814285714285,"count":7},{"latitude":30.82294,"longitude":-94.35026,"count":5},{"latitude":32.658738461538455,"longitude":-94.94163076923077,"count":13},{"latitude":29.309066666666666,"longitude":-99.7473,"count":3},{"latitude":29.38741199999999,"longitude":-100.91055999999998,"count":25},{"latitude":32.56550625,"longitude":-95.799375,"count":16},{"latitude":28.79733,"longitude":-96.98789,"count":10},{"latitude":30.724702857142855,"longitude":-95.51912,"count":35},{"latitude":30.039800000000003,"longitude":-95.94744,"count":5},{"latitude":30.19854,"longitude":-96.3786,"count":5},{"latitude":27.51758848484846,"longitude":-99.47409393939401,"count":165},{"latitude":29.1299,"longitude":-96.3932,"count":1},{"latitude":35.5297,"longitude":-100.446,"count":1},{"latitude":33.90342771084337,"longitude":-98.51789759036147,"count":83},{"latitude":34.1549,"longitude":-99.29464999999999,"count":2},{"latitude":26.4634,"longitude":-97.9526,"count":1},{"latitude":30.55144791666667,"longitude":-97.67847812499998,"count":96},{"latitude":29.205769999999994,"longitude":-98.16683,"count":10},{"latitude":31.8533,"longitude":-103.09466666666667,"count":3},{"latitude":33.157799999999995,"longitude":-97.634425,"count":8},{"latitude":32.70443,"longitude":-95.39852,"count":10},{"latitude":33.107866666666666,"longitude":-98.5767,"count":3},{"latitude":26.6389,"longitude":-99.0931,"count":1},{"latitude":61.2055727083333,"longitude":-149.8149604166666,"count":480},{"latitude":53.8714,"longitude":-166.541,"count":1},{"latitude":60.9379105263158,"longitude":-160.98710526315784,"count":38},{"latitude":58.7332,"longitude":-156.858,"count":1},{"latitude":59.088244444444435,"longitude":-158.85255555555554,"count":18},{"latitude":64.82918230452668,"longitude":-147.67500000000024,"count":243},{"latitude":59.024075,"longitude":-135.4495,"count":4},{"latitude":58.34929032258064,"longitude":-134.5219139784946,"count":93},{"latitude":60.344051282051275,"longitude":-150.9332820512821,"count":78},{"latitude":55.37009375000001,"longitude":-131.6774375,"count":16},{"latitude":57.8318294117647,"longitude":-152.41641176470588,"count":17},{"latitude":57.87631428571428,"longitude":-157.17857142857142,"count":7},{"latitude":61.627413173652656,"longitude":-149.488508982036,"count":167},{"latitude":64.4049909090909,"longitude":-163.25663636363635,"count":11},{"latitude":71.10974444444444,"longitude":-155.646,"count":9},{"latitude":66.7163,"longitude":-159.3712857142857,"count":14},{"latitude":55.83395,"longitude":-133.05431250000004,"count":16},{"latitude":57.072466666666664,"longitude":-135.36766666666668,"count":3},{"latitude":63.587720000000004,"longitude":-143.66999999999996,"count":20},{"latitude":62.113422222222226,"longitude":-144.94444444444446,"count":9},{"latitude":62.29506086956521,"longitude":-164.22199999999998,"count":23},{"latitude":65.80738461538462,"longitude":-149.7326923076923,"count":13},{"latitude":63.91898571428571,"longitude":-148.9184285714286,"count":7},{"latitude":38.306933333333326,"longitude":-112.795,"count":3},{"latitude":41.72307428571428,"longitude":-111.82582857142859,"count":35},{"latitude":39.59242,"longitude":-110.8412,"count":5},{"latitude":40.99726470588235,"longitude":-111.95205882352943,"count":34},{"latitude":40.27265555555555,"longitude":-110.26355555555557,"count":9},{"latitude":39.20503333333334,"longitude":-110.765,"count":3},{"latitude":37.5625,"longitude":-111.995,"count":1},{"latitude":38.5689,"longitude":-109.54375,"count":4},{"latitude":37.714380000000006,"longitude":-113.05593333333334,"count":15},{"latitude":37.0414,"longitude":-112.49399999999999,"count":3},{"latitude":38.9428,"longitude":-112.658,"count":3},{"latitude":41.053399999999996,"longitude":-111.6995,"count":2},{"latitude":41.7847,"longitude":-111.2985,"count":2},{"latitude":40.708831230283955,"longitude":-111.9356324921136,"count":634},{"latitude":37.39046666666667,"longitude":-109.53333333333335,"count":3},{"latitude":39.61125,"longitude":-111.46324999999999,"count":4},{"latitude":38.81844444444444,"longitude":-111.97166666666665,"count":9},{"latitude":40.71591666666667,"longitude":-111.46616666666665,"count":6},{"latitude":40.57345384615384,"longitude":-112.39615384615385,"count":13},{"latitude":40.38380909090909,"longitude":-109.72145454545456,"count":22},{"latitude":40.237145652173915,"longitude":-111.73278260869563,"count":92},{"latitude":40.4933,"longitude":-111.41149999999999,"count":4},{"latitude":37.14731111111111,"longitude":-113.48108333333336,"count":36},{"latitude":38.4019,"longitude":-111.649,"count":1},{"latitude":41.223626923076914,"longitude":-111.97893589743592,"count":78},{"latitude":41.7518,"longitude":-112.69166666666666,"count":3},{"latitude":44.05963461538462,"longitude":-73.15831923076925,"count":52},{"latitude":42.9547484848485,"longitude":-73.1825606060606,"count":33},{"latitude":44.386799999999994,"longitude":-72.06421875000001,"count":16},{"latitude":44.49210105263157,"longitude":-73.17227684210526,"count":95},{"latitude":44.4304,"longitude":-71.8802,"count":1},{"latitude":44.82064666666667,"longitude":-73.04166666666669,"count":30},{"latitude":44.82769999999999,"longitude":-73.3022,"count":4},{"latitude":44.608737500000004,"longitude":-72.64352500000001,"count":8},{"latitude":44.07218750000001,"longitude":-72.31361250000002,"count":16},{"latitude":44.89245882352941,"longitude":-72.18290588235294,"count":17},{"latitude":43.59166603773583,"longitude":-73.0383037735849,"count":53},{"latitude":44.228234848484846,"longitude":-72.53544090909092,"count":66},{"latitude":42.946722499999986,"longitude":-72.58510499999998,"count":40},{"latitude":43.5822576923077,"longitude":-72.48279615384614,"count":26},{"latitude":37.79796190476189,"longitude":-75.62333333333333,"count":21},{"latitude":37.472116666666665,"longitude":-79.11581666666666,"count":18},{"latitude":38.859911594202934,"longitude":-77.07593333333337,"count":69},{"latitude":38.13735416666667,"longitude":-78.98440833333335,"count":24},{"latitude":37.9605,"longitude":-77.42103571428572,"count":14},{"latitude":36.67858571428571,"longitude":-80.76655000000001,"count":14},{"latitude":37.41382083333331,"longitude":-77.51498385416666,"count":192},{"latitude":37.904,"longitude":-76.8655,"count":1},{"latitude":38.832349180327874,"longitude":-77.2175942622951,"count":122},{"latitude":38.701991666666665,"longitude":-77.79985,"count":12},{"latitude":39.21157777777777,"longitude":-78.17802222222221,"count":9},{"latitude":37.339025,"longitude":-76.508875,"count":12},{"latitude":38.24766,"longitude":-78.40894,"count":5},{"latitude":37.72549473684211,"longitude":-77.47305789473684,"count":19},{"latitude":37.57161466165416,"longitude":-77.4328003759398,"count":266},{"latitude":37.31642307692308,"longitude":-76.75866923076924,"count":13},{"latitude":37.8818,"longitude":-77.1014,"count":1},{"latitude":38.298166666666674,"longitude":-77.11957777777778,"count":9},{"latitude":37.76885,"longitude":-77.1968,"count":2},{"latitude":39.00463835616439,"longitude":-77.47556438356166,"count":73},{"latitude":37.421866666666666,"longitude":-76.3224,"count":3},{"latitude":37.6975,"longitude":-76.6431,"count":4},{"latitude":37.48213333333334,"longitude":-76.9935,"count":3},{"latitude":37.47226666666667,"longitude":-75.85651666666666,"count":6},{"latitude":36.69514482758621,"longitude":-79.4308655172414,"count":29},{"latitude":37.213079166666674,"longitude":-77.30937916666666,"count":24},{"latitude":38.66316506024098,"longitude":-77.36489578313251,"count":166},{"latitude":37.8494,"longitude":-76.7181,"count":1},{"latitude":37.275009090909094,"longitude":-79.99099090909091,"count":22},{"latitude":37.78686666666667,"longitude":-79.42796666666668,"count":3},{"latitude":36.6814,"longitude":-77.3748,"count":1},{"latitude":38.23485357142858,"longitude":-77.54951071428569,"count":28},{"latitude":38.4254283018868,"longitude":-77.43788301886792,"count":53},{"latitude":37.09792,"longitude":-76.81706,"count":5},{"latitude":38.2606,"longitude":-76.9735,"count":2},{"latitude":37.20055833333333,"longitude":-76.54074166666666,"count":36},{"latitude":38.39446666666666,"longitude":-78.81501666666668,"count":6},{"latitude":36.995866666666664,"longitude":-78.25186666666667,"count":6},{"latitude":37.256879999999995,"longitude":-78.41322,"count":5},{"latitude":37.0475,"longitude":-78.8455,"count":1},{"latitude":37.144400000000005,"longitude":-78.07442,"count":5},{"latitude":36.8119,"longitude":-77.7709,"count":1},{"latitude":37.895675,"longitude":-78.347675,"count":4},{"latitude":37.414649999999995,"longitude":-78.34045,"count":2},{"latitude":36.9709,"longitude":-80.26755,"count":2},{"latitude":37.0159238095238,"longitude":-79.83456666666669,"count":21},{"latitude":37.31822857142857,"longitude":-80.70082857142857,"count":7},{"latitude":38.3823,"longitude":-78.24285,"count":2},{"latitude":38.00922666666667,"longitude":-77.98177333333334,"count":15},{"latitude":38.28026666666667,"longitude":-77.86875555555555,"count":9},{"latitude":36.67975,"longitude":-83.12025,"count":4},{"latitude":36.94361875,"longitude":-82.66058750000002,"count":16},{"latitude":36.73957333333335,"longitude":-78.93036666666666,"count":15},{"latitude":37.359642857142866,"longitude":-78.81552857142857,"count":7},{"latitude":37.19585,"longitude":-82.3171,"count":4},{"latitude":37.23684615384615,"longitude":-82.08648461538463,"count":13},{"latitude":36.94685714285714,"longitude":-82.1089857142857,"count":14},{"latitude":37.171769999999995,"longitude":-81.51855,"count":10},{"latitude":37.342499999999994,"longitude":-77.94081666666666,"count":6},{"latitude":38.48735333333334,"longitude":-78.02146666666667,"count":15},{"latitude":36.6324,"longitude":-80.13426666666668,"count":3},{"latitude":36.676766666666666,"longitude":-82.59859999999999,"count":6},{"latitude":36.72097586206897,"longitude":-81.93240344827585,"count":29},{"latitude":38.81577954545455,"longitude":-77.06677045454546,"count":44},{"latitude":36.61471,"longitude":-82.15975,"count":10},{"latitude":37.7437,"longitude":-79.3793,"count":1},{"latitude":37.25894285714287,"longitude":-77.40874285714287,"count":14},{"latitude":36.59041925925924,"longitude":-79.39979925925925,"count":135},{"latitude":36.696749999999994,"longitude":-77.53630000000001,"count":4},{"latitude":38.881425,"longitude":-77.169225,"count":4},{"latitude":36.66883333333333,"longitude":-76.9288,"count":15},{"latitude":38.295506666666675,"longitude":-77.47696,"count":30},{"latitude":36.6496,"longitude":-80.916,"count":1},{"latitude":37.287912765957444,"longitude":-77.29868510638296,"count":47},{"latitude":37.39843333333333,"longitude":-79.16594111111112,"count":90},{"latitude":38.753299999999996,"longitude":-77.47701176470588,"count":17},{"latitude":38.769949999999994,"longitude":-77.44364999999999,"count":2},{"latitude":36.9321,"longitude":-82.63893333333334,"count":3},{"latitude":37.2175581632653,"longitude":-77.40221122448983,"count":98},{"latitude":37.132512500000004,"longitude":-80.55583750000001,"count":8},{"latitude":37.285316587677734,"longitude":-79.961583886256,"count":211},{"latitude":38.07258,"longitude":-78.89053999999999,"count":25},{"latitude":37.03157448071219,"longitude":-76.37533442136498,"count":337},{"latitude":37.05195381604698,"longitude":-76.46368277886502,"count":511},{"latitude":36.823754406130256,"longitude":-76.33937586206902,"count":261},{"latitude":36.874961669505986,"longitude":-76.26327563884155,"count":587},{"latitude":36.78954060150376,"longitude":-76.2837,"count":133},{"latitude":36.82824799999997,"longitude":-76.10182181818189,"count":275},{"latitude":36.746711688311684,"longitude":-76.57581428571426,"count":77},{"latitude":38.442099999999996,"longitude":-78.86813076923076,"count":13},{"latitude":38.59824999999999,"longitude":-78.53135,"count":2},{"latitude":36.828250000000004,"longitude":-81.56912,"count":10},{"latitude":36.7244,"longitude":-78.1301,"count":1},{"latitude":37.8061125,"longitude":-78.82885,"count":8},{"latitude":36.654500000000006,"longitude":-77.52192500000001,"count":4},{"latitude":36.647980000000004,"longitude":-81.10366,"count":5},{"latitude":36.92978333333334,"longitude":-81.08653333333332,"count":12},{"latitude":37.06089999999999,"longitude":-80.74813,"count":10},{"latitude":37.59635,"longitude":-78.49917500000001,"count":4},{"latitude":36.684781081081084,"longitude":-79.87519189189187,"count":37},{"latitude":48.2378,"longitude":-122.58275,"count":8},{"latitude":46.3776,"longitude":-124.042,"count":1},{"latitude":46.21881084337349,"longitude":-119.27831325301206,"count":83},{"latitude":47.7337,"longitude":-118.181,"count":1},{"latitude":46.13186458333333,"longitude":-122.88349999999998,"count":48},{"latitude":48.25195,"longitude":-117.33,"count":2},{"latitude":47.177320142180015,"longitude":-122.41397867298576,"count":422},{"latitude":45.865750000000006,"longitude":-120.64125,"count":4},{"latitude":45.6704,"longitude":-121.922,"count":2},{"latitude":47.300557142857144,"longitude":-123.00619047619048,"count":21},{"latitude":47.959292468619275,"longitude":-122.19196234309622,"count":239},{"latitude":47.60042857142857,"longitude":-122.63799999999996,"count":42},{"latitude":48.798218518518496,"longitude":-122.45653703703701,"count":54},{"latitude":47.67236967592591,"longitude":-117.41480092592617,"count":432},{"latitude":47.00439545454546,"longitude":-122.86801515151517,"count":66},{"latitude":48.07817142857142,"longitude":-123.56009523809523,"count":21},{"latitude":48.46167200000001,"longitude":-122.22328000000002,"count":25},{"latitude":46.892100000000006,"longitude":-118.76299999999999,"count":5},{"latitude":47.52923333333334,"longitude":-120.21633333333334,"count":3},{"latitude":46.077338461538474,"longitude":-118.37292307692307,"count":13},{"latitude":45.663136199095035,"longitude":-122.58776923076927,"count":221},{"latitude":48.918,"longitude":-118.661,"count":1},{"latitude":46.279,"longitude":-119.10744897959182,"count":49},{"latitude":46.9857,"longitude":-123.77666666666664,"count":12},{"latitude":47.134878260869584,"longitude":-119.42653623188407,"count":69},{"latitude":47.09122857142857,"longitude":-120.64942857142856,"count":7},{"latitude":46.62414848484848,"longitude":-122.8133333333333,"count":33},{"latitude":48.34100909090909,"longitude":-119.53090909090912,"count":11},{"latitude":46.5277005524862,"longitude":-120.44295580110487,"count":181},{"latitude":48.18918333333334,"longitude":-117.85616666666665,"count":12},{"latitude":48.537580000000005,"longitude":-122.95339999999999,"count":5},{"latitude":47.613645454545455,"longitude":-120.29581818181818,"count":11},{"latitude":47.531239026473074,"longitude":-122.29236891545675,"count":1171},{"latitude":47.94285,"longitude":-122.82233333333333,"count":6},{"latitude":46.79833157894737,"longitude":-117.24057894736842,"count":19},{"latitude":46.40218,"longitude":-117.0684,"count":5},{"latitude":39.44099354838708,"longitude":-77.99632580645161,"count":31},{"latitude":38.031125,"longitude":-81.74225833333334,"count":12},{"latitude":38.68364,"longitude":-80.7457,"count":5},{"latitude":38.41621523809522,"longitude":-82.40330857142861,"count":210},{"latitude":38.463175,"longitude":-81.12614166666667,"count":12},{"latitude":39.29488888888889,"longitude":-77.87176666666667,"count":9},{"latitude":38.362534718826396,"longitude":-81.64977677261616,"count":409},{"latitude":39.0235,"longitude":-80.51490000000001,"count":6},{"latitude":38.253988888888884,"longitude":-81.96507777777778,"count":9},{"latitude":37.88901111111112,"longitude":-82.0082185185185,"count":27},{"latitude":37.71689090909091,"longitude":-82.18045454545455,"count":11},{"latitude":39.63647910447762,"longitude":-79.95716417910448,"count":67},{"latitude":38.262144444444445,"longitude":-80.83061111111111,"count":9},{"latitude":38.6588,"longitude":-79.3526,"count":3},{"latitude":38.180800000000005,"longitude":-80.1566,"count":3},{"latitude":38.46482083333334,"longitude":-81.92242083333333,"count":24},{"latitude":37.77086146788991,"longitude":-81.20498990825688,"count":109},{"latitude":38.84493928571428,"longitude":-79.87892142857143,"count":28},{"latitude":38.7548875,"longitude":-81.41697500000001,"count":8},{"latitude":38.2789619047619,"longitude":-82.5139619047619,"count":21},{"latitude":38.46401999999999,"longitude":-80.44582,"count":5},{"latitude":37.600625,"longitude":-81.582325,"count":12},{"latitude":37.84090454545454,"longitude":-80.4191409090909,"count":22},{"latitude":37.321101176470606,"longitude":-81.17710941176469,"count":85},{"latitude":37.567433333333334,"longitude":-80.5243,"count":3},{"latitude":37.69525,"longitude":-80.8329875,"count":8},{"latitude":39.5797,"longitude":-78.3766,"count":1},{"latitude":40.28282,"longitude":-80.5877,"count":5},{"latitude":39.51678125000001,"longitude":-79.68939999999998,"count":16},{"latitude":38.86148333333333,"longitude":-81.73891666666665,"count":6},{"latitude":38.038682692307695,"longitude":-81.16673653846155,"count":52},{"latitude":38.68485384615384,"longitude":-82.07906923076922,"count":13},{"latitude":39.25612499999999,"longitude":-81.527090625,"count":32},{"latitude":40.462833333333336,"longitude":-80.57011111111112,"count":9},{"latitude":44.09325,"longitude":-89.788425,"count":4},{"latitude":46.589749999999995,"longitude":-90.8211,"count":4},{"latitude":45.42703684210526,"longitude":-91.76285263157897,"count":19},{"latitude":46.56,"longitude":-90.94695,"count":2},{"latitude":44.50573076923078,"longitude":-88.01035128205127,"count":78},{"latitude":44.45473333333334,"longitude":-91.73266666666666,"count":3},{"latitude":45.95585,"longitude":-92.34417499999999,"count":4},{"latitude":44.0779,"longitude":-88.237,"count":4},{"latitude":45.0198125,"longitude":-91.31771875,"count":16},{"latitude":44.766149999999996,"longitude":-90.449475,"count":4},{"latitude":43.47009411764706,"longitude":-89.4526588235294,"count":17},{"latitude":43.10576666666666,"longitude":-91.00869999999999,"count":6},{"latitude":43.072810349854244,"longitude":-89.39562288629732,"count":686},{"latitude":43.458103846153854,"longitude":-88.75763076923076,"count":26},{"latitude":44.959050000000005,"longitude":-87.3027,"count":4},{"latitude":46.68082352941176,"longitude":-92.03190000000002,"count":17},{"latitude":44.935106250000004,"longitude":-91.9135875,"count":16},{"latitude":44.80273720930233,"longitude":-91.47540000000004,"count":43},{"latitude":45.8724,"longitude":-88.2242,"count":1},{"latitude":43.76769310344827,"longitude":-88.51605517241379,"count":29},{"latitude":45.561825,"longitude":-88.9102,"count":4},{"latitude":42.808511111111116,"longitude":-90.71954444444444,"count":9},{"latitude":42.601866666666666,"longitude":-89.65838333333333,"count":12},{"latitude":43.8996,"longitude":-89.01292857142857,"count":7},{"latitude":42.99835,"longitude":-89.99115,"count":2},{"latitude":46.1719,"longitude":-90.0733,"count":1},{"latitude":44.28765,"longitude":-90.79491250000001,"count":8},{"latitude":43.06547272727273,"longitude":-88.83123636363638,"count":11},{"latitude":43.87376666666666,"longitude":-90.06883333333333,"count":6},{"latitude":42.582334375000016,"longitude":-87.87642343750004,"count":64},{"latitude":44.4116,"longitude":-87.5851,"count":2},{"latitude":43.83722,"longitude":-91.24091636363634,"count":55},{"latitude":42.713,"longitude":-89.9932,"count":2},{"latitude":45.13665,"longitude":-89.16614999999999,"count":2},{"latitude":45.3557875,"longitude":-89.69995,"count":8},{"latitude":44.07397058823529,"longitude":-87.70153529411766,"count":17},{"latitude":44.9190253968254,"longitude":-89.66765238095236,"count":63},{"latitude":45.239569230769234,"longitude":-87.89423076923077,"count":13},{"latitude":43.84896666666666,"longitude":-89.41253333333333,"count":3},{"latitude":44.93826000000001,"longitude":-88.70255999999999,"count":5},{"latitude":43.06703581796781,"longitude":-87.9536694782268,"count":2549},{"latitude":43.91507272727273,"longitude":-90.7413090909091,"count":11},{"latitude":44.883075000000005,"longitude":-88.068925,"count":4},{"latitude":45.67375714285714,"longitude":-89.48204285714284,"count":7},{"latitude":44.29525405405404,"longitude":-88.43560000000001,"count":37},{"latitude":43.37027142857143,"longitude":-87.95498571428571,"count":7},{"latitude":44.55,"longitude":-92.0861,"count":1},{"latitude":44.73084444444444,"longitude":-92.45750000000002,"count":9},{"latitude":45.455075,"longitude":-92.47195,"count":4},{"latitude":44.48534117647059,"longitude":-89.53536470588237,"count":17},{"latitude":45.6915,"longitude":-90.4039,"count":1},{"latitude":42.72951150442477,"longitude":-87.83444115044246,"count":226},{"latitude":43.331059999999994,"longitude":-90.37482,"count":5},{"latitude":42.57681258741258,"longitude":-89.02894335664334,"count":143},{"latitude":45.53746666666667,"longitude":-91.0818,"count":3},{"latitude":43.45705833333333,"longitude":-89.82635833333335,"count":24},{"latitude":45.94668461538462,"longitude":-91.32359230769231,"count":13},{"latitude":44.803423999999985,"longitude":-88.792372,"count":25},{"latitude":43.73451071428571,"longitude":-87.76288571428572,"count":28},{"latitude":45.13892499999999,"longitude":-90.33055000000002,"count":4},{"latitude":44.30035,"longitude":-91.39506666666666,"count":6},{"latitude":43.646640000000005,"longitude":-90.94292,"count":5},{"latitude":45.922349999999994,"longitude":-89.24795,"count":2},{"latitude":42.69050000000001,"longitude":-88.53576666666667,"count":15},{"latitude":45.973699999999994,"longitude":-91.79662499999999,"count":4},{"latitude":43.350132142857134,"longitude":-88.19654285714283,"count":28},{"latitude":43.04622711864407,"longitude":-88.19011186440679,"count":59},{"latitude":44.454480000000004,"longitude":-88.85846000000001,"count":10},{"latitude":44.13588,"longitude":-89.3072,"count":5},{"latitude":44.10055000000001,"longitude":-88.5188258064516,"count":62},{"latitude":44.40505967741936,"longitude":-89.86972096774193,"count":62},{"latitude":44.966625,"longitude":-92.48269375,"count":16},{"latitude":41.47106,"longitude":-105.86100000000002,"count":5},{"latitude":44.597899999999996,"longitude":-108.224,"count":2},{"latitude":44.25454615384616,"longitude":-105.51938461538461,"count":13},{"latitude":41.780924999999996,"longitude":-107.12174999999999,"count":4},{"latitude":42.7925875,"longitude":-105.61912500000003,"count":8},{"latitude":44.3695,"longitude":-104.36399999999999,"count":1},{"latitude":43.02624666666667,"longitude":-108.61059999999999,"count":15},{"latitude":42.0931,"longitude":-104.2625,"count":2},{"latitude":41.14025441176472,"longitude":-104.78982352941182,"count":68},{"latitude":42.84720993788818,"longitude":-106.35856211180128,"count":322},{"latitude":43.3788,"longitude":-104.223,"count":1},{"latitude":44.569366666666674,"longitude":-109.09293333333335,"count":15},{"latitude":44.8187,"longitude":-106.99442857142857,"count":7},{"latitude":42.9231,"longitude":-109.949,"count":1},{"latitude":43.56727058823529,"longitude":-110.71747058823529,"count":17},{"latitude":41.298700000000004,"longitude":-110.72433333333333,"count":3},{"latitude":43.95433333333333,"longitude":-107.87399999999998,"count":3},{"latitude":41.60756666666666,"longitude":-109.24300000000001,"count":3},{"latitude":44.6583,"longitude":-83.3406,"count":1},{"latitude":46.4113,"longitude":-86.6539,"count":1},{"latitude":42.60191904761905,"longitude":-85.92509999999999,"count":21},{"latitude":45.07323333333334,"longitude":-83.5425,"count":3},{"latitude":45.038399999999996,"longitude":-85.15471666666667,"count":6},{"latitude":44.062650000000005,"longitude":-83.81545,"count":2},{"latitude":46.6549,"longitude":-88.4903,"count":1},{"latitude":42.611200000000004,"longitude":-85.39491111111113,"count":9},{"latitude":43.62084626865672,"longitude":-83.90729701492536,"count":67},{"latitude":44.62065,"longitude":-86.09450000000001,"count":2},{"latitude":42.05627702702702,"longitude":-86.41500270270267,"count":74},{"latitude":41.8918625,"longitude":-85.053125,"count":8},{"latitude":42.311314871794885,"longitude":-85.15556461538459,"count":195},{"latitude":41.92605789473685,"longitude":-86.07753157894736,"count":19},{"latitude":45.24256,"longitude":-85.03698,"count":5},{"latitude":45.6095,"longitude":-84.4712,"count":1},{"latitude":46.26001428571429,"longitude":-84.09818571428572,"count":7},{"latitude":43.99054666666667,"longitude":-84.83806666666666,"count":15},{"latitude":42.81287499999999,"longitude":-84.51986666666667,"count":12},{"latitude":44.6742,"longitude":-84.6612,"count":1},{"latitude":45.72913333333333,"longitude":-87.0791,"count":3},{"latitude":45.816559999999996,"longitude":-88.03644,"count":5},{"latitude":42.6446375,"longitude":-84.69995416666669,"count":24},{"latitude":45.3599,"longitude":-84.9706,"count":1},{"latitude":43.03105758017499,"longitude":-83.69634941690985,"count":686},{"latitude":43.947579999999995,"longitude":-84.42137999999998,"count":5},{"latitude":46.4669,"longitude":-90.03315,"count":2},{"latitude":44.69427692307691,"longitude":-85.60111923076926,"count":26},{"latitude":43.356625,"longitude":-84.64394999999999,"count":4},{"latitude":41.87034,"longitude":-84.6643,"count":10},{"latitude":47.169275,"longitude":-88.49947499999999,"count":4},{"latitude":43.91636666666667,"longitude":-82.92228333333334,"count":6},{"latitude":42.71337182320444,"longitude":-84.54160883977907,"count":181},{"latitude":42.98269166666666,"longitude":-85.06743333333334,"count":12},{"latitude":44.34255,"longitude":-83.68295,"count":2},{"latitude":46.099700000000006,"longitude":-88.43836666666665,"count":3},{"latitude":43.601827272727284,"longitude":-84.76495909090909,"count":22},{"latitude":42.247783941605846,"longitude":-84.41669270072988,"count":137},{"latitude":42.280535978835964,"longitude":-85.58564814814818,"count":189},{"latitude":44.649333333333324,"longitude":-85.16283333333332,"count":3},{"latitude":42.94374296296292,"longitude":-85.65268123456786,"count":405},{"latitude":43.8986,"longitude":-85.8735,"count":1},{"latitude":43.093725000000006,"longitude":-83.25285833333334,"count":12},{"latitude":44.89547777777778,"longitude":-85.70562222222222,"count":9},{"latitude":41.904555,"longitude":-84.03585999999999,"count":20},{"latitude":42.53971666666667,"longitude":-83.85491666666667,"count":6},{"latitude":46.0205,"longitude":-84.5377,"count":2},{"latitude":42.5644881081081,"longitude":-82.93988756756754,"count":185},{"latitude":44.24863333333333,"longitude":-86.21334444444443,"count":9},{"latitude":46.49500833333334,"longitude":-87.49959166666666,"count":12},{"latitude":43.98175,"longitude":-86.40129999999999,"count":4},{"latitude":43.67465,"longitude":-85.42303999999999,"count":10},{"latitude":45.2191,"longitude":-87.596,"count":2},{"latitude":43.638774999999995,"longitude":-84.2855375,"count":8},{"latitude":44.2646,"longitude":-84.8868,"count":1},{"latitude":41.87167352941176,"longitude":-83.49263823529411,"count":34},{"latitude":43.251875,"longitude":-85.17867500000001,"count":8},{"latitude":45.048,"longitude":-83.9179,"count":2},{"latitude":43.22326312056743,"longitude":-86.23469574468078,"count":141},{"latitude":43.5158375,"longitude":-85.786175,"count":8},{"latitude":42.618151821862284,"longitude":-83.29098056680157,"count":494},{"latitude":43.6639,"longitude":-86.3004,"count":4},{"latitude":44.29126666666667,"longitude":-84.15223333333334,"count":3},{"latitude":46.76579999999999,"longitude":-89.27569999999999,"count":3},{"latitude":44.00902,"longitude":-85.32552000000001,"count":5},{"latitude":45.010450000000006,"longitude":-84.6691,"count":2},{"latitude":42.86187727272726,"longitude":-86.03886818181819,"count":44},{"latitude":45.2912,"longitude":-83.7195,"count":1},{"latitude":44.22658,"longitude":-84.60893999999999,"count":5},{"latitude":43.41771336032388,"longitude":-83.94451133603238,"count":247},{"latitude":43.375978571428575,"longitude":-82.72647142857143,"count":14},{"latitude":46.1793,"longitude":-86.0479,"count":1},{"latitude":42.92761111111111,"longitude":-84.19353333333333,"count":9},{"latitude":43.33016666666666,"longitude":-83.41375,"count":6},{"latitude":42.26549583333333,"longitude":-86.07609583333335,"count":24},{"latitude":42.244573877550984,"longitude":-83.64602938775509,"count":245},{"latitude":42.36936096065408,"longitude":-83.13523868165571,"count":1957},{"latitude":44.262600000000006,"longitude":-85.48294000000001,"count":5},{"latitude":42.98236,"longitude":-82.57366400000001,"count":25},{"latitude":41.91844117647059,"longitude":-85.51832352941177,"count":17},{"latitude":29.963279999999994,"longitude":-90.38349600000001,"count":25},{"latitude":30.86995,"longitude":-90.67954999999999,"count":6},{"latitude":30.035479999999996,"longitude":-90.80802,"count":5},{"latitude":30.068717021276598,"longitude":-90.51736170212762,"count":94},{"latitude":30.52549083333332,"longitude":-92.1168158333334,"count":120},{"latitude":30.209369565217393,"longitude":-91.83393913043481,"count":46},{"latitude":29.75332000000001,"longitude":-91.34866250000002,"count":40},{"latitude":30.349379104477617,"longitude":-89.9055671641791,"count":134},{"latitude":29.93899142857143,"longitude":-89.94931714285714,"count":35},{"latitude":36.064479166666665,"longitude":-84.20384166666668,"count":48},{"latitude":35.479744444444435,"longitude":-86.44198888888889,"count":9},{"latitude":36.047200000000004,"longitude":-88.09195,"count":6},{"latitude":35.59625,"longitude":-85.22194999999999,"count":2},{"latitude":35.77582777777778,"longitude":-83.97188333333335,"count":54},{"latitude":35.161861224489805,"longitude":-84.87118367346937,"count":49},{"latitude":36.40416470588235,"longitude":-84.11814705882351,"count":17},{"latitude":36.062000000000005,"longitude":-88.48913333333333,"count":9},{"latitude":36.32785333333334,"longitude":-82.18474666666667,"count":30},{"latitude":36.29537,"longitude":-87.00744,"count":10},{"latitude":35.44972222222222,"longitude":-88.58239999999999,"count":9},{"latitude":36.499050000000004,"longitude":-83.729,"count":6},{"latitude":35.905258333333336,"longitude":-83.2012,"count":12},{"latitude":35.41369999999999,"longitude":-86.13494666666665,"count":15},{"latitude":35.93882857142857,"longitude":-85.01147142857143,"count":7},{"latitude":36.160227150537665,"longitude":-86.74610786290334,"count":1488},{"latitude":35.961,"longitude":-85.7939,"count":1},{"latitude":35.7119,"longitude":-88.1031,"count":2},{"latitude":36.12467857142857,"longitude":-87.37195714285714,"count":14},{"latitude":36.04083695652174,"longitude":-89.38627173913046,"count":46},{"latitude":35.19401111111111,"longitude":-89.4533888888889,"count":9},{"latitude":36.2418,"longitude":-85.005,"count":1},{"latitude":35.18241428571428,"longitude":-86.09715714285714,"count":14},{"latitude":35.889343076923076,"longitude":-88.88337999999997,"count":65},{"latitude":35.15173333333333,"longitude":-87.09660000000001,"count":6},{"latitude":36.17746790123457,"longitude":-82.83035802469136,"count":81},{"latitude":35.373549999999994,"longitude":-85.732025,"count":8},{"latitude":35.049519482288865,"longitude":-85.24890844686634,"count":734},{"latitude":35.236895238095244,"longitude":-89.03019999999998,"count":21},{"latitude":35.20395,"longitude":-88.23055,"count":8},{"latitude":36.441618181818164,"longitude":-82.91573030303032,"count":33},{"latitude":35.589682222222216,"longitude":-89.2649888888889,"count":45},{"latitude":35.64202857142856,"longitude":-88.3854357142857,"count":14},{"latitude":36.34324347826087,"longitude":-88.27504782608696,"count":23},{"latitude":35.858392307692306,"longitude":-87.40191538461539,"count":13},{"latitude":36.06303333333333,"longitude":-87.834,"count":6},{"latitude":36.038,"longitude":-83.3797,"count":6},{"latitude":36.4317,"longitude":-81.84176666666667,"count":3},{"latitude":35.97701432098768,"longitude":-83.9327012345679,"count":405},{"latitude":35.7443,"longitude":-89.53668,"count":5},{"latitude":35.224318181818184,"longitude":-87.37137272727271,"count":11},{"latitude":35.54215,"longitude":-87.54826666666668,"count":6},{"latitude":35.18071428571429,"longitude":-86.62664285714285,"count":7},{"latitude":35.80658181818182,"longitude":-84.29640909090908,"count":11},{"latitude":36.503025,"longitude":-86.062325,"count":4},{"latitude":35.637277906976735,"longitude":-88.8218901162791,"count":344},{"latitude":35.074992307692305,"longitude":-85.59904615384616,"count":13},{"latitude":35.449157142857146,"longitude":-86.7869857142857,"count":7},{"latitude":35.624817499999985,"longitude":-87.0413,"count":40},{"latitude":35.43972857142858,"longitude":-84.6182755102041,"count":49},{"latitude":35.137116666666664,"longitude":-88.5699,"count":6},{"latitude":35.485425,"longitude":-84.82037500000001,"count":4},{"latitude":35.52935714285714,"longitude":-84.37942857142856,"count":7},{"latitude":36.560152542372876,"longitude":-87.36536553672316,"count":177},{"latitude":36.099783333333335,"longitude":-84.58740000000002,"count":12},{"latitude":36.433172727272726,"longitude":-89.02813636363636,"count":11},{"latitude":36.2976,"longitude":-85.3272,"count":1},{"latitude":35.64616,"longitude":-87.93405999999999,"count":5},{"latitude":35.09792,"longitude":-84.44275999999999,"count":5},{"latitude":36.14550869565217,"longitude":-85.5270695652174,"count":23},{"latitude":35.57876666666667,"longitude":-84.96305,"count":6},{"latitude":35.912755555555556,"longitude":-84.54697222222222,"count":18},{"latitude":36.505424999999995,"longitude":-86.86705576923079,"count":52},{"latitude":35.875126991150466,"longitude":-86.42089911504422,"count":226},{"latitude":36.472319999999996,"longitude":-84.49100000000001,"count":5},{"latitude":35.863791666666664,"longitude":-83.5927625,"count":24},{"latitude":35.11206240230363,"longitude":-89.95488856437692,"count":2431},{"latitude":36.21093333333334,"longitude":-85.93996666666668,"count":3},{"latitude":36.520966666666666,"longitude":-87.82726666666667,"count":3},{"latitude":36.538289719626185,"longitude":-82.43808504672899,"count":107},{"latitude":36.38647272727272,"longitude":-86.53628636363638,"count":66},{"latitude":35.4829625,"longitude":-89.74689166666666,"count":24},{"latitude":35.6269,"longitude":-85.74744000000001,"count":5},{"latitude":36.32834910714285,"longitude":-82.39494642857143,"count":112},{"latitude":35.31956,"longitude":-87.80652,"count":5},{"latitude":36.32716470588235,"longitude":-88.8174117647059,"count":17},{"latitude":35.94735,"longitude":-85.44933333333334,"count":6},{"latitude":35.920550000000006,"longitude":-86.86720000000003,"count":34},{"latitude":36.204741791044775,"longitude":-86.39598656716421,"count":67},{"latitude":35.803375,"longitude":-86.065575,"count":4},{"latitude":36.52936666666667,"longitude":-85.52916666666665,"count":3},{"latitude":35.79568333333333,"longitude":-89.14545,"count":12},{"latitude":36.267900000000004,"longitude":-83.4414,"count":6},{"latitude":36.206594736842106,"longitude":-83.29374210526316,"count":19},{"latitude":36.56376666666667,"longitude":-83.05273333333334,"count":3},{"latitude":36.3043,"longitude":-87.6782,"count":1},{"latitude":35.2721,"longitude":-86.3371,"count":1},{"latitude":36.5541,"longitude":-85.1479,"count":1},{"latitude":36.146125,"longitude":-82.3934625,"count":8},{"latitude":36.24528333333333,"longitude":-83.822,"count":6},{"latitude":35.356314285714284,"longitude":-85.39185714285715,"count":7},{"latitude":38.42995546218488,"longitude":-122.73183193277309,"count":119},{"latitude":38.37628771929824,"longitude":-75.57439473684212,"count":57},{"latitude":38.26306470588235,"longitude":-75.27005294117647,"count":17},{"latitude":48.1905,"longitude":-104.4995,"count":2},{"latitude":30.792042857142857,"longitude":-81.6204857142857,"count":7},{"latitude":31.18992380952382,"longitude":-81.49489523809524,"count":84},{"latitude":32.595158490566035,"longitude":-83.64507641509434,"count":106},{"latitude":33.477643181818195,"longitude":-84.20098863636362,"count":44},{"latitude":32.82448340080973,"longitude":-83.665789068826,"count":494},{"latitude":33.611933414043456,"longitude":-84.41340677966127,"count":413},{"latitude":33.96031657754015,"longitude":-83.37226363636356,"count":374},{"latitude":34.46682,"longitude":-84.45454,"count":5},{"latitude":33.021691739130425,"longitude":-85.0361730434783,"count":230},{"latitude":34.211357500000005,"longitude":-84.13639999999998,"count":40},{"latitude":33.59111612903226,"longitude":-83.87824354838708,"count":62},{"latitude":38.0126,"longitude":-79.8103,"count":1},{"latitude":37.9519,"longitude":-79.9564,"count":1},{"latitude":38.3789,"longitude":-79.4687,"count":1},{"latitude":38.731175,"longitude":-78.6331,"count":4},{"latitude":38.8522,"longitude":-78.1469,"count":1},{"latitude":37.539775,"longitude":-77.88185,"count":4},{"latitude":37.71524,"longitude":-77.89122,"count":5},{"latitude":37.468275000000006,"longitude":-79.81291250000001,"count":8},{"latitude":37.17355555555556,"longitude":-80.40608333333334,"count":18},{"latitude":37.30126071428572,"longitude":-79.53473571428573,"count":28},{"latitude":37.268421052631595,"longitude":-79.1572210526316,"count":19},{"latitude":38.029989655172415,"longitude":-78.50423103448279,"count":29},{"latitude":37.76817388143177,"longitude":-122.199538590604,"count":1788},{"latitude":38.32716666666666,"longitude":-120.832,"count":3},{"latitude":39.66553170731706,"longitude":-121.72202926829263,"count":205},{"latitude":38.180723529411765,"longitude":-120.69076470588234,"count":17},{"latitude":39.192814285714284,"longitude":-122.04342857142856,"count":7},{"latitude":37.967413996316765,"longitude":-122.06716942909763,"count":543},{"latitude":38.513686666666665,"longitude":-76.52752000000001,"count":15},{"latitude":38.59446785714285,"longitude":-76.93900357142857,"count":56},{"latitude":48.64565,"longitude":-104.5495,"count":2},{"latitude":39.3778,"longitude":-81.187,"count":1},{"latitude":39.5232,"longitude":-80.9407,"count":2},{"latitude":38.9479,"longitude":-81.2704,"count":1},{"latitude":48.231849999999994,"longitude":-106.29499999999999,"count":2},{"latitude":40.735265714285674,"longitude":-124.05654571428578,"count":350},{"latitude":41.69115555555556,"longitude":-124.1337777777778,"count":9},{"latitude":40.568123376623376,"longitude":-122.33151948051947,"count":77},{"latitude":39.251641666666664,"longitude":-120.90837500000002,"count":24},{"latitude":34.18762195121951,"longitude":-84.47499512195122,"count":41},{"latitude":33.90885658536585,"longitude":-84.5604843902439,"count":205},{"latitude":33.74631714285714,"longitude":-84.7023,"count":35},{"latitude":34.277902777777776,"longitude":-83.82592083333333,"count":72},{"latitude":33.76496971962615,"longitude":-84.2412254205607,"count":535},{"latitude":33.451279166666666,"longitude":-84.50948749999999,"count":24},{"latitude":34.391725,"longitude":-82.978,"count":4},{"latitude":31.8475,"longitude":-82.60210000000001,"count":2},{"latitude":33.797124999999994,"longitude":-82.419375,"count":4},{"latitude":34.11142343749999,"longitude":-83.2386546875,"count":64},{"latitude":34.79496666666666,"longitude":-84.79666666666667,"count":3},{"latitude":33.94079953271028,"longitude":-84.08731355140185,"count":214},{"latitude":45.5677,"longitude":-104.208,"count":1},{"latitude":39.2095,"longitude":-81.0513,"count":1},{"latitude":37.40348888888889,"longitude":-81.68171111111111,"count":18},{"latitude":39.0379,"longitude":-79.75399999999999,"count":1},{"latitude":39.28405,"longitude":-80.7932,"count":2},{"latitude":38.8826,"longitude":-80.84576,"count":5},{"latitude":39.33491818181819,"longitude":-80.03201818181817,"count":11},{"latitude":36.882774999999995,"longitude":-77.30122499999999,"count":4},{"latitude":37.09111764705882,"longitude":-77.54823529411766,"count":17},{"latitude":40.13286979166666,"longitude":-122.23443750000011,"count":192},{"latitude":40.393550000000005,"longitude":-120.714,"count":2},{"latitude":32.048579237844955,"longitude":-81.10652851511165,"count":761},{"latitude":33.75380082508245,"longitude":-84.4245478547854,"count":1212},{"latitude":39.33862225705327,"longitude":-76.62137460815046,"count":319},{"latitude":39.51888888888889,"longitude":-77.03317222222222,"count":18},{"latitude":38.99146666666667,"longitude":-80.2316,"count":3},{"latitude":38.7991,"longitude":-81.107175,"count":4},{"latitude":39.11736666666667,"longitude":-80.01996666666666,"count":6},{"latitude":38.9985,"longitude":-79.1229,"count":1},{"latitude":38.299092,"longitude":-76.570812,"count":25},{"latitude":39.49347887323945,"longitude":-76.27849154929578,"count":71},{"latitude":35.0899283801875,"longitude":-106.62239223560911,"count":747},{"latitude":33.38592934782609,"longitude":-104.52380434782611,"count":92},{"latitude":32.68586785714285,"longitude":-103.17375000000003,"count":28},{"latitude":35.870999999999995,"longitude":-106.27539999999999,"count":5},{"latitude":35.9734,"longitude":-105.544,"count":1},{"latitude":36.24763846153846,"longitude":-106.21284615384614,"count":13},{"latitude":34.06771764705883,"longitude":-103.27908823529414,"count":34},{"latitude":33.13802,"longitude":-107.2492,"count":5},{"latitude":34.0492,"longitude":-106.89099999999999,"count":4},{"latitude":36.9823909090909,"longitude":-76.6607,"count":11},{"latitude":47.45575833333334,"longitude":-115.94766666666668,"count":12},{"latitude":39.30519274515018,"longitude":-76.62640324209413,"count":3763},{"latitude":38.88939456134674,"longitude":-76.98928637099388,"count":3089},{"latitude":39.19988979591837,"longitude":-76.84094897959189,"count":49},{"latitude":39.06914454545455,"longitude":-76.59911909090908,"count":440},{"latitude":39.5744,"longitude":-79.2586,"count":4},{"latitude":39.42112962962964,"longitude":-77.40024074074074,"count":81},{"latitude":39.08349081632654,"longitude":-77.09687448979591,"count":98},{"latitude":39.62321851851852,"longitude":-78.8081777777778,"count":27},{"latitude":39.6276743902439,"longitude":-77.73435365853656,"count":82},{"latitude":38.88658392857139,"longitude":-76.89775558035707,"count":448},{"latitude":47.72116666666667,"longitude":-104.18233333333335,"count":3},{"latitude":47.0826,"longitude":-104.846,"count":1},{"latitude":47.9215,"longitude":-106.12700000000001,"count":1},{"latitude":45.52771666666667,"longitude":-107.66233333333332,"count":6},{"latitude":45.60215,"longitude":-106.5995,"count":2},{"latitude":40.065184210526326,"longitude":-80.70362105263155,"count":38},{"latitude":39.869933333333336,"longitude":-80.70561666666667,"count":6},{"latitude":39.636675000000004,"longitude":-80.896225,"count":4},{"latitude":39.43558,"longitude":-78.98856,"count":5},{"latitude":39.48217906976744,"longitude":-80.16911162790699,"count":43},{"latitude":39.29610350877192,"longitude":-80.32839824561404,"count":57},{"latitude":39.04405,"longitude":-78.9767,"count":2},{"latitude":39.31885,"longitude":-78.69800000000001,"count":2},{"latitude":45.78104931506849,"longitude":-108.5366369863013,"count":146},{"latitude":46.2914,"longitude":-107.09700000000001,"count":1},{"latitude":48.5067,"longitude":-111.85600000000001,"count":1},{"latitude":45.8491,"longitude":-109.57700000000001,"count":1},{"latitude":45.638999999999996,"longitude":-109.258,"count":1},{"latitude":45.99570000000002,"longitude":-112.53441095890409,"count":73},{"latitude":47.71146666666667,"longitude":-115.18766666666666,"count":3},{"latitude":46.346648,"longitude":-114.13327999999997,"count":25},{"latitude":46.413225,"longitude":-108.52699999999999,"count":4},{"latitude":46.87537857142859,"longitude":-114.01519999999996,"count":70},{"latitude":46.5481,"longitude":-110.90299999999999,"count":1},{"latitude":48.61500000000001,"longitude":-112.73199999999999,"count":3},{"latitude":48.27107413793104,"longitude":-114.23815517241385,"count":58},{"latitude":47.0618,"longitude":-109.41799999999999,"count":1},{"latitude":46.1277,"longitude":-112.95325,"count":4},{"latitude":47.488261224489804,"longitude":-111.32893877551021,"count":49},{"latitude":46.15088,"longitude":-111.5382,"count":5},{"latitude":45.18276,"longitude":-112.7618,"count":5},{"latitude":46.395266666666664,"longitude":-112.731,"count":3},{"latitude":48.3627,"longitude":-107.87799999999999,"count":1},{"latitude":45.59233999999999,"longitude":-110.5978,"count":5},{"latitude":47.16683333333333,"longitude":-114.85833333333333,"count":3},{"latitude":45.3993,"longitude":-111.798,"count":4},{"latitude":48.6388,"longitude":-110.97200000000001,"count":1},{"latitude":48.48658888888888,"longitude":-115.42622222222222,"count":9},{"latitude":46.16415,"longitude":-112.0655,"count":4},{"latitude":48.5485,"longitude":-109.689,"count":2},{"latitude":45.73026486486486,"longitude":-111.10591891891889,"count":37},{"latitude":46.251149999999996,"longitude":-105.96799999999999,"count":2},{"latitude":45.0878,"longitude":-109.208,"count":2},{"latitude":48.5937,"longitude":-109.215,"count":1},{"latitude":40.47730000000001,"longitude":-90.61603333333335,"count":3},{"latitude":37.16136666666667,"longitude":-88.69051666666667,"count":12},{"latitude":41.2096,"longitude":-90.9953,"count":1},{"latitude":41.8218483295076,"longitude":-87.67759518830213,"count":11763},{"latitude":42.36246164383561,"longitude":-87.92690136986302,"count":146},{"latitude":42.287821428571434,"longitude":-88.36847380952382,"count":42},{"latitude":40.4847737704918,"longitude":-88.98702295081969,"count":61},{"latitude":38.329100000000004,"longitude":-90.13850000000001,"count":5},{"latitude":39.241150000000005,"longitude":-89.538325,"count":4},{"latitude":42.05732857142857,"longitude":-89.28547142857143,"count":7},{"latitude":40.701086718750055,"longitude":-89.60935691964285,"count":896},{"latitude":38.041050000000006,"longitude":-89.288,"count":6},{"latitude":37.107499999999995,"longitude":-89.1773,"count":4},{"latitude":38.08575,"longitude":-89.762225,"count":4},{"latitude":38.58734431818178,"longitude":-90.07329375000002,"count":352},{"latitude":39.78889285714286,"longitude":-89.6369724025974,"count":308},{"latitude":40.1845,"longitude":-90.6394,"count":1},{"latitude":39.2504,"longitude":-88.8576,"count":1},{"latitude":42.296584210526305,"longitude":-89.6207315789474,"count":57},{"latitude":40.60077894736842,"longitude":-89.59532368421048,"count":38},{"latitude":37.471399999999996,"longitude":-89.30336666666666,"count":3},{"latitude":40.14414056603772,"longitude":-87.62044245283016,"count":106},{"latitude":40.880874999999996,"longitude":-90.5627,"count":4},{"latitude":38.28875,"longitude":-89.38034999999999,"count":2},{"latitude":41.779090476190476,"longitude":-89.79748095238095,"count":21},{"latitude":41.537526351351374,"longitude":-88.07078479729735,"count":296},{"latitude":37.74620851063829,"longitude":-88.97422340425531,"count":47},{"latitude":42.2748882282996,"longitude":-89.08553365041621,"count":841},{"latitude":40.800650000000005,"longitude":-89.365,"count":2},{"latitude":38.02997894736843,"longitude":-78.48578947368425,"count":57},{"latitude":37.7899,"longitude":-79.99147142857143,"count":7},{"latitude":38.8538,"longitude":-77.3262,"count":1},{"latitude":37.7817,"longitude":-79.4443,"count":1},{"latitude":36.691035714285704,"longitude":-79.86871428571429,"count":14},{"latitude":37.531792579505286,"longitude":-77.45068775029445,"count":849},{"latitude":37.28566,"longitude":-80.06606000000002,"count":5},{"latitude":38.15301000000001,"longitude":-79.07761,"count":10},{"latitude":37.27781818181818,"longitude":-76.70393636363636,"count":11},{"latitude":39.1778875,"longitude":-78.1654375,"count":8},{"latitude":47.490353846153845,"longitude":-114.12830769230769,"count":13},{"latitude":37.4175,"longitude":-118.542,"count":1},{"latitude":39.9292,"longitude":-105.06371428571431,"count":7},{"latitude":35.36578443579766,"longitude":-118.96375226977952,"count":771},{"latitude":58.147099999999995,"longitude":-135.8795,"count":2},{"latitude":56.8063,"longitude":-132.97,"count":1}]}'),UR1={config:jR1,layer:PR1,$schema:IR1,datasets:BR1};function qR1(){const t="violence-map";return F.useEffect(()=>{mp("#"+t,UR1)}),$.jsx(LR1,{title:"Where Does the Most Gun Violence Occur?",beforeContent:rn.county_map.before,id:t,caption:"Figure 4.1 - Number of Gun-related Crimes by County, 2014-2018",afterContent:rn.county_map.after})}const HR1={view:{continuousWidth:400,continuousHeight:300}},GR1={name:"data-ce14483ba311faebb5fc22ec931c06ce"},WR1="line",YR1={x:{type:"temporal",axis:{format:"%b %Y",labelAngle:-45,title:"Month"},field:"date"},y:{type:"quantitative",axis:{title:"Number of People Injured"},field:"n_injured"}},VR1=260,XR1="Number of People Injured per Month",KR1=350,QR1="https://vega.github.io/schema/vega-lite/v4.8.1.json",ZR1={"data-ce14483ba311faebb5fc22ec931c06ce":[{date:"2014-01-31T00:00:00",n_injured:1875,n_killed:1070},{date:"2014-02-28T00:00:00",n_injured:1223,n_killed:845},{date:"2014-03-31T00:00:00",n_injured:1551,n_killed:1007},{date:"2014-04-30T00:00:00",n_injured:1782,n_killed:979},{date:"2014-05-31T00:00:00",n_injured:2100,n_killed:1099},{date:"2014-06-30T00:00:00",n_injured:2069,n_killed:1127},{date:"2014-07-31T00:00:00",n_injured:2423,n_killed:1162},{date:"2014-08-31T00:00:00",n_injured:2298,n_killed:1140},{date:"2014-09-30T00:00:00",n_injured:2059,n_killed:1013},{date:"2014-10-31T00:00:00",n_injured:1884,n_killed:1012},{date:"2014-11-30T00:00:00",n_injured:1832,n_killed:1017},{date:"2014-12-31T00:00:00",n_injured:1906,n_killed:1086},{date:"2015-01-31T00:00:00",n_injured:1808,n_killed:1123},{date:"2015-02-28T00:00:00",n_injured:1378,n_killed:870},{date:"2015-03-31T00:00:00",n_injured:2093,n_killed:1090},{date:"2015-04-30T00:00:00",n_injured:2149,n_killed:995},{date:"2015-05-31T00:00:00",n_injured:2677,n_killed:1164},{date:"2015-06-30T00:00:00",n_injured:2414,n_killed:1092},{date:"2015-07-31T00:00:00",n_injured:2669,n_killed:1293},{date:"2015-08-31T00:00:00",n_injured:2664,n_killed:1199},{date:"2015-09-30T00:00:00",n_injured:2426,n_killed:1247},{date:"2015-10-31T00:00:00",n_injured:2257,n_killed:1092},{date:"2015-11-30T00:00:00",n_injured:2148,n_killed:1133},{date:"2015-12-31T00:00:00",n_injured:2284,n_killed:1186},{date:"2016-01-31T00:00:00",n_injured:2250,n_killed:1139},{date:"2016-02-29T00:00:00",n_injured:1864,n_killed:984},{date:"2016-03-31T00:00:00",n_injured:2430,n_killed:1181},{date:"2016-04-30T00:00:00",n_injured:2276,n_killed:1152},{date:"2016-05-31T00:00:00",n_injured:2634,n_killed:1158},{date:"2016-06-30T00:00:00",n_injured:2504,n_killed:1276},{date:"2016-07-31T00:00:00",n_injured:3038,n_killed:1399},{date:"2016-08-31T00:00:00",n_injured:3032,n_killed:1429},{date:"2016-09-30T00:00:00",n_injured:2598,n_killed:1286},{date:"2016-10-31T00:00:00",n_injured:2792,n_killed:1356},{date:"2016-11-30T00:00:00",n_injured:2642,n_killed:1368},{date:"2016-12-31T00:00:00",n_injured:2520,n_killed:1338},{date:"2017-01-31T00:00:00",n_injured:2604,n_killed:1356},{date:"2017-02-28T00:00:00",n_injured:2197,n_killed:1141},{date:"2017-03-31T00:00:00",n_injured:2233,n_killed:1220},{date:"2017-04-30T00:00:00",n_injured:2648,n_killed:1231},{date:"2017-05-31T00:00:00",n_injured:2732,n_killed:1389},{date:"2017-06-30T00:00:00",n_injured:2679,n_killed:1366},{date:"2017-07-31T00:00:00",n_injured:3018,n_killed:1391},{date:"2017-08-31T00:00:00",n_injured:2731,n_killed:1324},{date:"2017-09-30T00:00:00",n_injured:2573,n_killed:1196},{date:"2017-10-31T00:00:00",n_injured:2742,n_killed:1305},{date:"2017-11-30T00:00:00",n_injured:2377,n_killed:1304},{date:"2017-12-31T00:00:00",n_injured:2169,n_killed:1288},{date:"2018-01-31T00:00:00",n_injured:2365,n_killed:1324},{date:"2018-02-28T00:00:00",n_injured:1713,n_killed:1091},{date:"2018-03-31T00:00:00",n_injured:2093,n_killed:1118}]},JR1={config:HR1,data:GR1,mark:WR1,encoding:YR1,height:VR1,title:XR1,width:KR1,$schema:QR1,datasets:ZR1};function tD1(){F.useEffect(()=>{mp("#"+t,JR1)});const t="change-over-time";return $.jsx(uJ,{title:"Change Over Time",content:rn.change_over_time.content,id:t,caption:rn.change_over_time.caption})}function eD1(){return $.jsxs(N1,{fluid:!0,className:"report-article",children:[$.jsx("h1",{className:"text-center",children:"Gun Violence Research, Winter 2020"}),$.jsx(zR1,{}),$.jsx(tD1,{}),$.jsx(FR1,{}),$.jsx(qR1,{}),$.jsx(SR1,{}),$.jsx(AR1,{})]})}function nD1({setData:t}){let e=["Hour","Day","Week","Month"],n=["Magnitude","Time"];function i(a){a.preventDefault(),document.getElementById("query-submit-btn").classList.add("hidden"),document.getElementById("loading-spinner").hidden=!1;let s=document.querySelector("#time-select option:checked").value,c=n.indexOf(document.querySelector("#sort-select option:checked").value),f=document.querySelector("#min-select").value,g=document.querySelector("#max-select").value;c=c===0,fetch("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/1.0_month.geojson").then(u).then(m=>m.json()).then(m=>l(m,f,g,o(s),c)).then(m=>{t(m),document.getElementById("query-submit-btn").classList.remove("hidden"),document.getElementById("loading-spinner").hidden=!0}).catch(console.log)}function o(a){let s=new Date;return a==="Hour"?s.getTime()-3600*1e3:a==="Day"?s.setDate(s.getDate()-1):a==="Week"?s.setDate(s.getDate()-7):s.setMonth(s.getMonth()-1)}function u(a){if(a.ok)return a;throw Error(a)}function l(a,s,c,f,g){a=a.features;let p=[];for(let m of a){let v=m.properties.time,b=m.geometry.coordinates[0],x=m.geometry.coordinates[1],w=m.properties.mag,S=m.id;w>=s&w<=c&v>=f&&p.push({id:S,time:v,longitude:b,latitude:x,magnitude:w})}return g?p=p.sort((m,v)=>v.magnitude-m.magnitude):p=p.sort((m,v)=>v.time-m.time),p}return $.jsx(N1,{className:"mt-3 mb-1",children:$.jsxs(B2,{onSubmit:i,children:[$.jsx("p",{children:"Earthquake Query: Find Recent Earthquakes!"}),$.jsxs(B2.Group,{as:Z2,children:[$.jsx(B2.Label,{column:!0,children:"Earthquake Search Period"}),$.jsx(ue,{children:$.jsx(B2.Control,{as:"select",custome:!0,id:"time-select",children:e.map((a,s)=>$.jsx("option",{value:a,children:"Last "+a.charAt(0).toUpperCase()+a.slice(1)},s))})})]}),$.jsxs(B2.Group,{as:Z2,children:[$.jsx(B2.Label,{column:!0,children:"Min and Max Magnitude for Query"}),$.jsx(ue,{children:$.jsx(B2.Control,{id:"min-select",type:"number",step:"0.1",min:"1",max:"10",placeholder:"Min",required:!0})}),$.jsx(ue,{xs:"auto",children:$.jsx(B2.Label,{className:"pt-2",children:"To"})}),$.jsx(ue,{xs:"auto",children:$.jsx(B2.Control,{id:"max-select",type:"number",step:"0.1",min:"1",max:"10",placeholder:"Max",required:!0})})]}),$.jsxs(B2.Group,{as:Z2,children:[$.jsx(B2.Label,{column:!0,className:"pt-2",children:"Sort Query Table By"}),$.jsx(ue,{xs:"auto",children:$.jsx(B2.Control,{as:"select",custom:!0,id:"sort-select",children:n.map((a,s)=>$.jsx("option",{value:a,children:a.charAt(0).toUpperCase()+a.slice(1)},s))})})]}),$.jsx(Uw,{id:"query-submit-btn",type:"submit",children:"Submit"}),$.jsx(aB,{id:"loading-spinner",animation:"border",variant:"primary",hidden:!0})]})})}function iD1(t){return t}var Wb=1,Yb=2,_w=3,wr=4,uP=1e-6;function oD1(t){return"translate("+t+",0)"}function uD1(t){return"translate(0,"+t+")"}function lD1(t){return e=>+t(e)}function aD1(t,e){return e=Math.max(0,t.bandwidth()-e*2)/2,t.round()&&(e=Math.round(e)),n=>+t(n)+e}function rD1(){return!this.__axis}function lJ(t,e){var n=[],i=null,o=null,u=6,l=6,a=3,s=typeof window<"u"&&window.devicePixelRatio>1?0:.5,c=t===Wb||t===wr?-1:1,f=t===wr||t===Yb?"x":"y",g=t===Wb||t===_w?oD1:uD1;function p(m){var v=i??(e.ticks?e.ticks.apply(e,n):e.domain()),b=o??(e.tickFormat?e.tickFormat.apply(e,n):iD1),x=Math.max(u,0)+a,w=e.range(),S=+w[0]+s,A=+w[w.length-1]+s,C=(e.bandwidth?aD1:lD1)(e.copy(),s),k=m.selection?m.selection():m,M=k.selectAll(".domain").data([null]),T=k.selectAll(".tick").data(v,e).order(),D=T.exit(),I=T.enter().append("g").attr("class","tick"),U=T.select("line"),B=T.select("text");M=M.merge(M.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),T=T.merge(I),U=U.merge(I.append("line").attr("stroke","currentColor").attr(f+"2",c*u)),B=B.merge(I.append("text").attr("fill","currentColor").attr(f,c*x).attr("dy",t===Wb?"0em":t===_w?"0.71em":"0.32em")),m!==k&&(M=M.transition(m),T=T.transition(m),U=U.transition(m),B=B.transition(m),D=D.transition(m).attr("opacity",uP).attr("transform",function(V){return isFinite(V=C(V))?g(V+s):this.getAttribute("transform")}),I.attr("opacity",uP).attr("transform",function(V){var W=this.parentNode.__axis;return g((W&&isFinite(W=W(V))?W:C(V))+s)})),D.remove(),M.attr("d",t===wr||t===Yb?l?"M"+c*l+","+S+"H"+s+"V"+A+"H"+c*l:"M"+s+","+S+"V"+A:l?"M"+S+","+c*l+"V"+s+"H"+A+"V"+c*l:"M"+S+","+s+"H"+A),T.attr("opacity",1).attr("transform",function(V){return g(C(V)+s)}),U.attr(f+"2",c*u),B.attr(f,c*x).text(b),k.filter(rD1).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===Yb?"start":t===wr?"end":"middle"),k.each(function(){this.__axis=C})}return p.scale=function(m){return arguments.length?(e=m,p):e},p.ticks=function(){return n=Array.from(arguments),p},p.tickArguments=function(m){return arguments.length?(n=m==null?[]:Array.from(m),p):n.slice()},p.tickValues=function(m){return arguments.length?(i=m==null?null:Array.from(m),p):i&&i.slice()},p.tickFormat=function(m){return arguments.length?(o=m,p):o},p.tickSize=function(m){return arguments.length?(u=l=+m,p):u},p.tickSizeInner=function(m){return arguments.length?(u=+m,p):u},p.tickSizeOuter=function(m){return arguments.length?(l=+m,p):l},p.tickPadding=function(m){return arguments.length?(a=+m,p):a},p.offset=function(m){return arguments.length?(s=+m,p):s},p}function sD1(t){return lJ(_w,t)}function cD1(t){return lJ(wr,t)}var ww="http://www.w3.org/1999/xhtml";const lP={svg:"http://www.w3.org/2000/svg",xhtml:ww,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function yp(t){var e=t+="",n=e.indexOf(":");return n>=0&&(e=t.slice(0,n))!=="xmlns"&&(t=t.slice(n+1)),lP.hasOwnProperty(e)?{space:lP[e],local:t}:t}function dD1(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===ww&&e.documentElement.namespaceURI===ww?e.createElement(t):e.createElementNS(n,t)}}function fD1(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function aJ(t){var e=yp(t);return(e.local?fD1:dD1)(e)}function gD1(){}function zT(t){return t==null?gD1:function(){return this.querySelector(t)}}function hD1(t){typeof t!="function"&&(t=zT(t));for(var e=this._groups,n=e.length,i=new Array(n),o=0;o<n;++o)for(var u=e[o],l=u.length,a=i[o]=new Array(l),s,c,f=0;f<l;++f)(s=u[f])&&(c=t.call(s,s.__data__,f,u))&&("__data__"in s&&(c.__data__=s.__data__),a[f]=c);return new N2(i,this._parents)}function pD1(t){return t==null?[]:Array.isArray(t)?t:Array.from(t)}function mD1(){return[]}function rJ(t){return t==null?mD1:function(){return this.querySelectorAll(t)}}function yD1(t){return function(){return pD1(t.apply(this,arguments))}}function vD1(t){typeof t=="function"?t=yD1(t):t=rJ(t);for(var e=this._groups,n=e.length,i=[],o=[],u=0;u<n;++u)for(var l=e[u],a=l.length,s,c=0;c<a;++c)(s=l[c])&&(i.push(t.call(s,s.__data__,c,l)),o.push(s));return new N2(i,o)}function sJ(t){return function(){return this.matches(t)}}function cJ(t){return function(e){return e.matches(t)}}var bD1=Array.prototype.find;function xD1(t){return function(){return bD1.call(this.children,t)}}function _D1(){return this.firstElementChild}function wD1(t){return this.select(t==null?_D1:xD1(typeof t=="function"?t:cJ(t)))}var ED1=Array.prototype.filter;function SD1(){return Array.from(this.children)}function AD1(t){return function(){return ED1.call(this.children,t)}}function CD1(t){return this.selectAll(t==null?SD1:AD1(typeof t=="function"?t:cJ(t)))}function kD1(t){typeof t!="function"&&(t=sJ(t));for(var e=this._groups,n=e.length,i=new Array(n),o=0;o<n;++o)for(var u=e[o],l=u.length,a=i[o]=[],s,c=0;c<l;++c)(s=u[c])&&t.call(s,s.__data__,c,u)&&a.push(s);return new N2(i,this._parents)}function dJ(t){return new Array(t.length)}function TD1(){return new N2(this._enter||this._groups.map(dJ),this._parents)}function Qf(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}Qf.prototype={constructor:Qf,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function $D1(t){return function(){return t}}function MD1(t,e,n,i,o,u){for(var l=0,a,s=e.length,c=u.length;l<c;++l)(a=e[l])?(a.__data__=u[l],i[l]=a):n[l]=new Qf(t,u[l]);for(;l<s;++l)(a=e[l])&&(o[l]=a)}function ND1(t,e,n,i,o,u,l){var a,s,c=new Map,f=e.length,g=u.length,p=new Array(f),m;for(a=0;a<f;++a)(s=e[a])&&(p[a]=m=l.call(s,s.__data__,a,e)+"",c.has(m)?o[a]=s:c.set(m,s));for(a=0;a<g;++a)m=l.call(t,u[a],a,u)+"",(s=c.get(m))?(i[a]=s,s.__data__=u[a],c.delete(m)):n[a]=new Qf(t,u[a]);for(a=0;a<f;++a)(s=e[a])&&c.get(p[a])===s&&(o[a]=s)}function RD1(t){return t.__data__}function DD1(t,e){if(!arguments.length)return Array.from(this,RD1);var n=e?ND1:MD1,i=this._parents,o=this._groups;typeof t!="function"&&(t=$D1(t));for(var u=o.length,l=new Array(u),a=new Array(u),s=new Array(u),c=0;c<u;++c){var f=i[c],g=o[c],p=g.length,m=OD1(t.call(f,f&&f.__data__,c,i)),v=m.length,b=a[c]=new Array(v),x=l[c]=new Array(v),w=s[c]=new Array(p);n(f,g,b,x,w,m,e);for(var S=0,A=0,C,k;S<v;++S)if(C=b[S]){for(S>=A&&(A=S+1);!(k=x[A])&&++A<v;);C._next=k||null}}return l=new N2(l,i),l._enter=a,l._exit=s,l}function OD1(t){return typeof t=="object"&&"length"in t?t:Array.from(t)}function FD1(){return new N2(this._exit||this._groups.map(dJ),this._parents)}function zD1(t,e,n){var i=this.enter(),o=this,u=this.exit();return typeof t=="function"?(i=t(i),i&&(i=i.selection())):i=i.append(t+""),e!=null&&(o=e(o),o&&(o=o.selection())),n==null?u.remove():n(u),i&&o?i.merge(o).order():o}function LD1(t){for(var e=t.selection?t.selection():t,n=this._groups,i=e._groups,o=n.length,u=i.length,l=Math.min(o,u),a=new Array(o),s=0;s<l;++s)for(var c=n[s],f=i[s],g=c.length,p=a[s]=new Array(g),m,v=0;v<g;++v)(m=c[v]||f[v])&&(p[v]=m);for(;s<o;++s)a[s]=n[s];return new N2(a,this._parents)}function jD1(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var i=t[e],o=i.length-1,u=i[o],l;--o>=0;)(l=i[o])&&(u&&l.compareDocumentPosition(u)^4&&u.parentNode.insertBefore(l,u),u=l);return this}function PD1(t){t||(t=ID1);function e(g,p){return g&&p?t(g.__data__,p.__data__):!g-!p}for(var n=this._groups,i=n.length,o=new Array(i),u=0;u<i;++u){for(var l=n[u],a=l.length,s=o[u]=new Array(a),c,f=0;f<a;++f)(c=l[f])&&(s[f]=c);s.sort(e)}return new N2(o,this._parents).order()}function ID1(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function BD1(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}function UD1(){return Array.from(this)}function qD1(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var i=t[e],o=0,u=i.length;o<u;++o){var l=i[o];if(l)return l}return null}function HD1(){let t=0;for(const e of this)++t;return t}function GD1(){return!this.node()}function WD1(t){for(var e=this._groups,n=0,i=e.length;n<i;++n)for(var o=e[n],u=0,l=o.length,a;u<l;++u)(a=o[u])&&t.call(a,a.__data__,u,o);return this}function YD1(t){return function(){this.removeAttribute(t)}}function VD1(t){return function(){this.removeAttributeNS(t.space,t.local)}}function XD1(t,e){return function(){this.setAttribute(t,e)}}function KD1(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}function QD1(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttribute(t):this.setAttribute(t,n)}}function ZD1(t,e){return function(){var n=e.apply(this,arguments);n==null?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}function JD1(t,e){var n=yp(t);if(arguments.length<2){var i=this.node();return n.local?i.getAttributeNS(n.space,n.local):i.getAttribute(n)}return this.each((e==null?n.local?VD1:YD1:typeof e=="function"?n.local?ZD1:QD1:n.local?KD1:XD1)(n,e))}function fJ(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}function tO1(t){return function(){this.style.removeProperty(t)}}function eO1(t,e,n){return function(){this.style.setProperty(t,e,n)}}function nO1(t,e,n){return function(){var i=e.apply(this,arguments);i==null?this.style.removeProperty(t):this.style.setProperty(t,i,n)}}function iO1(t,e,n){return arguments.length>1?this.each((e==null?tO1:typeof e=="function"?nO1:eO1)(t,e,n??"")):Gl(this.node(),t)}function Gl(t,e){return t.style.getPropertyValue(e)||fJ(t).getComputedStyle(t,null).getPropertyValue(e)}function oO1(t){return function(){delete this[t]}}function uO1(t,e){return function(){this[t]=e}}function lO1(t,e){return function(){var n=e.apply(this,arguments);n==null?delete this[t]:this[t]=n}}function aO1(t,e){return arguments.length>1?this.each((e==null?oO1:typeof e=="function"?lO1:uO1)(t,e)):this.node()[t]}function gJ(t){return t.trim().split(/^|\s+/)}function LT(t){return t.classList||new hJ(t)}function hJ(t){this._node=t,this._names=gJ(t.getAttribute("class")||"")}hJ.prototype={add:function(t){var e=this._names.indexOf(t);e<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function pJ(t,e){for(var n=LT(t),i=-1,o=e.length;++i<o;)n.add(e[i])}function mJ(t,e){for(var n=LT(t),i=-1,o=e.length;++i<o;)n.remove(e[i])}function rO1(t){return function(){pJ(this,t)}}function sO1(t){return function(){mJ(this,t)}}function cO1(t,e){return function(){(e.apply(this,arguments)?pJ:mJ)(this,t)}}function dO1(t,e){var n=gJ(t+"");if(arguments.length<2){for(var i=LT(this.node()),o=-1,u=n.length;++o<u;)if(!i.contains(n[o]))return!1;return!0}return this.each((typeof e=="function"?cO1:e?rO1:sO1)(n,e))}function fO1(){this.textContent=""}function gO1(t){return function(){this.textContent=t}}function hO1(t){return function(){var e=t.apply(this,arguments);this.textContent=e??""}}function pO1(t){return arguments.length?this.each(t==null?fO1:(typeof t=="function"?hO1:gO1)(t)):this.node().textContent}function mO1(){this.innerHTML=""}function yO1(t){return function(){this.innerHTML=t}}function vO1(t){return function(){var e=t.apply(this,arguments);this.innerHTML=e??""}}function bO1(t){return arguments.length?this.each(t==null?mO1:(typeof t=="function"?vO1:yO1)(t)):this.node().innerHTML}function xO1(){this.nextSibling&&this.parentNode.appendChild(this)}function _O1(){return this.each(xO1)}function wO1(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function EO1(){return this.each(wO1)}function SO1(t){var e=typeof t=="function"?t:aJ(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}function AO1(){return null}function CO1(t,e){var n=typeof t=="function"?t:aJ(t),i=e==null?AO1:typeof e=="function"?e:zT(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),i.apply(this,arguments)||null)})}function kO1(){var t=this.parentNode;t&&t.removeChild(this)}function TO1(){return this.each(kO1)}function $O1(){var t=this.cloneNode(!1),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function MO1(){var t=this.cloneNode(!0),e=this.parentNode;return e?e.insertBefore(t,this.nextSibling):t}function NO1(t){return this.select(t?MO1:$O1)}function RO1(t){return arguments.length?this.property("__data__",t):this.node().__data__}function DO1(t){return function(e){t.call(this,e,this.__data__)}}function OO1(t){return t.trim().split(/^|\s+/).map(function(e){var n="",i=e.indexOf(".");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{type:e,name:n}})}function FO1(t){return function(){var e=this.__on;if(e){for(var n=0,i=-1,o=e.length,u;n<o;++n)u=e[n],(!t.type||u.type===t.type)&&u.name===t.name?this.removeEventListener(u.type,u.listener,u.options):e[++i]=u;++i?e.length=i:delete this.__on}}}function zO1(t,e,n){return function(){var i=this.__on,o,u=DO1(e);if(i){for(var l=0,a=i.length;l<a;++l)if((o=i[l]).type===t.type&&o.name===t.name){this.removeEventListener(o.type,o.listener,o.options),this.addEventListener(o.type,o.listener=u,o.options=n),o.value=e;return}}this.addEventListener(t.type,u,n),o={type:t.type,name:t.name,value:e,listener:u,options:n},i?i.push(o):this.__on=[o]}}function LO1(t,e,n){var i=OO1(t+""),o,u=i.length,l;if(arguments.length<2){var a=this.node().__on;if(a){for(var s=0,c=a.length,f;s<c;++s)for(o=0,f=a[s];o<u;++o)if((l=i[o]).type===f.type&&l.name===f.name)return f.value}return}for(a=e?zO1:FO1,o=0;o<u;++o)this.each(a(i[o],e,n));return this}function yJ(t,e,n){var i=fJ(t),o=i.CustomEvent;typeof o=="function"?o=new o(e,n):(o=i.document.createEvent("Event"),n?(o.initEvent(e,n.bubbles,n.cancelable),o.detail=n.detail):o.initEvent(e,!1,!1)),t.dispatchEvent(o)}function jO1(t,e){return function(){return yJ(this,t,e)}}function PO1(t,e){return function(){return yJ(this,t,e.apply(this,arguments))}}function IO1(t,e){return this.each((typeof e=="function"?PO1:jO1)(t,e))}function*BO1(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var i=t[e],o=0,u=i.length,l;o<u;++o)(l=i[o])&&(yield l)}var vJ=[null];function N2(t,e){this._groups=t,this._parents=e}function C7(){return new N2([[document.documentElement]],vJ)}function UO1(){return this}N2.prototype=C7.prototype={constructor:N2,select:hD1,selectAll:vD1,selectChild:wD1,selectChildren:CD1,filter:kD1,data:DD1,enter:TD1,exit:FD1,join:zD1,merge:LD1,selection:UO1,order:jD1,sort:PD1,call:BD1,nodes:UD1,node:qD1,size:HD1,empty:GD1,each:WD1,attr:JD1,style:iO1,property:aO1,classed:dO1,text:pO1,html:bO1,raise:_O1,lower:EO1,append:SO1,insert:CO1,remove:TO1,clone:NO1,datum:RO1,on:LO1,dispatch:IO1,[Symbol.iterator]:BO1};function Te(t){return typeof t=="string"?new N2([[document.querySelector(t)]],[document.documentElement]):new N2([[t]],vJ)}function qO1(t){let e;for(;e=t.sourceEvent;)t=e;return t}function _o(t,e){if(t=qO1(t),e===void 0&&(e=t.currentTarget),e){var n=e.ownerSVGElement||e;if(n.createSVGPoint){var i=n.createSVGPoint();return i.x=t.clientX,i.y=t.clientY,i=i.matrixTransform(e.getScreenCTM().inverse()),[i.x,i.y]}if(e.getBoundingClientRect){var o=e.getBoundingClientRect();return[t.clientX-o.left-e.clientLeft,t.clientY-o.top-e.clientTop]}}return[t.pageX,t.pageY]}const Ew={capture:!0,passive:!1};function Sw(t){t.preventDefault(),t.stopImmediatePropagation()}function bJ(t){var e=t.document.documentElement,n=Te(t).on("dragstart.drag",Sw,Ew);"onselectstart"in e?n.on("selectstart.drag",Sw,Ew):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")}function xJ(t,e){var n=t.document.documentElement,i=Te(t).on("dragstart.drag",null);e&&(i.on("click.drag",Sw,Ew),setTimeout(function(){i.on("click.drag",null)},0)),"onselectstart"in n?i.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}var HO1=n7("start","end","cancel","interrupt"),GO1=[],_J=0,aP=1,Aw=2,rd=3,rP=4,Cw=5,sd=6;function vp(t,e,n,i,o,u){var l=t.__transition;if(!l)t.__transition={};else if(n in l)return;WO1(t,n,{name:e,index:i,group:o,on:HO1,tween:GO1,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:_J})}function jT(t,e){var n=V3(t,e);if(n.state>_J)throw new Error("too late; already scheduled");return n}function Hi(t,e){var n=V3(t,e);if(n.state>rd)throw new Error("too late; already running");return n}function V3(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}function WO1(t,e,n){var i=t.__transition,o;i[e]=n,n.timer=aC(u,0,n.time);function u(c){n.state=aP,n.timer.restart(l,n.delay,n.time),n.delay<=c&&l(c-n.delay)}function l(c){var f,g,p,m;if(n.state!==aP)return s();for(f in i)if(m=i[f],m.name===n.name){if(m.state===rd)return KF(l);m.state===rP?(m.state=sd,m.timer.stop(),m.on.call("interrupt",t,t.__data__,m.index,m.group),delete i[f]):+f<e&&(m.state=sd,m.timer.stop(),m.on.call("cancel",t,t.__data__,m.index,m.group),delete i[f])}if(KF(function(){n.state===rd&&(n.state=rP,n.timer.restart(a,n.delay,n.time),a(c))}),n.state=Aw,n.on.call("start",t,t.__data__,n.index,n.group),n.state===Aw){for(n.state=rd,o=new Array(p=n.tween.length),f=0,g=-1;f<p;++f)(m=n.tween[f].value.call(t,t.__data__,n.index,n.group))&&(o[++g]=m);o.length=g+1}}function a(c){for(var f=c<n.duration?n.ease.call(null,c/n.duration):(n.timer.restart(s),n.state=Cw,1),g=-1,p=o.length;++g<p;)o[g].call(t,f);n.state===Cw&&(n.on.call("end",t,t.__data__,n.index,n.group),s())}function s(){n.state=sd,n.timer.stop(),delete i[e];for(var c in i)return;delete t.__transition}}function ul(t,e){var n=t.__transition,i,o,u=!0,l;if(n){e=e==null?null:e+"";for(l in n){if((i=n[l]).name!==e){u=!1;continue}o=i.state>Aw&&i.state<Cw,i.state=sd,i.timer.stop(),i.on.call(o?"interrupt":"cancel",t,t.__data__,i.index,i.group),delete n[l]}u&&delete t.__transition}}function YO1(t){return this.each(function(){ul(this,t)})}function VO1(t,e){var n,i;return function(){var o=Hi(this,t),u=o.tween;if(u!==n){i=n=u;for(var l=0,a=i.length;l<a;++l)if(i[l].name===e){i=i.slice(),i.splice(l,1);break}}o.tween=i}}function XO1(t,e,n){var i,o;if(typeof n!="function")throw new Error;return function(){var u=Hi(this,t),l=u.tween;if(l!==i){o=(i=l).slice();for(var a={name:e,value:n},s=0,c=o.length;s<c;++s)if(o[s].name===e){o[s]=a;break}s===c&&o.push(a)}u.tween=o}}function KO1(t,e){var n=this._id;if(t+="",arguments.length<2){for(var i=V3(this.node(),n).tween,o=0,u=i.length,l;o<u;++o)if((l=i[o]).name===t)return l.value;return null}return this.each((e==null?VO1:XO1)(n,t,e))}function PT(t,e,n){var i=t._id;return t.each(function(){var o=Hi(this,i);(o.value||(o.value={}))[e]=n.apply(this,arguments)}),function(o){return V3(o,i).value[e]}}function wJ(t,e){var n;return(typeof e=="number"?G2:e instanceof Y0?Zr:(n=Y0(e))?(e=n,Zr):FS)(t,e)}function QO1(t){return function(){this.removeAttribute(t)}}function ZO1(t){return function(){this.removeAttributeNS(t.space,t.local)}}function JO1(t,e,n){var i,o=n+"",u;return function(){var l=this.getAttribute(t);return l===o?null:l===i?u:u=e(i=l,n)}}function tF1(t,e,n){var i,o=n+"",u;return function(){var l=this.getAttributeNS(t.space,t.local);return l===o?null:l===i?u:u=e(i=l,n)}}function eF1(t,e,n){var i,o,u;return function(){var l,a=n(this),s;return a==null?void this.removeAttribute(t):(l=this.getAttribute(t),s=a+"",l===s?null:l===i&&s===o?u:(o=s,u=e(i=l,a)))}}function nF1(t,e,n){var i,o,u;return function(){var l,a=n(this),s;return a==null?void this.removeAttributeNS(t.space,t.local):(l=this.getAttributeNS(t.space,t.local),s=a+"",l===s?null:l===i&&s===o?u:(o=s,u=e(i=l,a)))}}function iF1(t,e){var n=yp(t),i=n==="transform"?xH:wJ;return this.attrTween(t,typeof e=="function"?(n.local?nF1:eF1)(n,i,PT(this,"attr."+t,e)):e==null?(n.local?ZO1:QO1)(n):(n.local?tF1:JO1)(n,i,e))}function oF1(t,e){return function(n){this.setAttribute(t,e.call(this,n))}}function uF1(t,e){return function(n){this.setAttributeNS(t.space,t.local,e.call(this,n))}}function lF1(t,e){var n,i;function o(){var u=e.apply(this,arguments);return u!==i&&(n=(i=u)&&uF1(t,u)),n}return o._value=e,o}function aF1(t,e){var n,i;function o(){var u=e.apply(this,arguments);return u!==i&&(n=(i=u)&&oF1(t,u)),n}return o._value=e,o}function rF1(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(e==null)return this.tween(n,null);if(typeof e!="function")throw new Error;var i=yp(t);return this.tween(n,(i.local?lF1:aF1)(i,e))}function sF1(t,e){return function(){jT(this,t).delay=+e.apply(this,arguments)}}function cF1(t,e){return e=+e,function(){jT(this,t).delay=e}}function dF1(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?sF1:cF1)(e,t)):V3(this.node(),e).delay}function fF1(t,e){return function(){Hi(this,t).duration=+e.apply(this,arguments)}}function gF1(t,e){return e=+e,function(){Hi(this,t).duration=e}}function hF1(t){var e=this._id;return arguments.length?this.each((typeof t=="function"?fF1:gF1)(e,t)):V3(this.node(),e).duration}function pF1(t,e){if(typeof e!="function")throw new Error;return function(){Hi(this,t).ease=e}}function mF1(t){var e=this._id;return arguments.length?this.each(pF1(e,t)):V3(this.node(),e).ease}function yF1(t,e){return function(){var n=e.apply(this,arguments);if(typeof n!="function")throw new Error;Hi(this,t).ease=n}}function vF1(t){if(typeof t!="function")throw new Error;return this.each(yF1(this._id,t))}function bF1(t){typeof t!="function"&&(t=sJ(t));for(var e=this._groups,n=e.length,i=new Array(n),o=0;o<n;++o)for(var u=e[o],l=u.length,a=i[o]=[],s,c=0;c<l;++c)(s=u[c])&&t.call(s,s.__data__,c,u)&&a.push(s);return new n4(i,this._parents,this._name,this._id)}function xF1(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,i=e.length,o=n.length,u=Math.min(i,o),l=new Array(i),a=0;a<u;++a)for(var s=e[a],c=n[a],f=s.length,g=l[a]=new Array(f),p,m=0;m<f;++m)(p=s[m]||c[m])&&(g[m]=p);for(;a<i;++a)l[a]=e[a];return new n4(l,this._parents,this._name,this._id)}function _F1(t){return(t+"").trim().split(/^|\s+/).every(function(e){var n=e.indexOf(".");return n>=0&&(e=e.slice(0,n)),!e||e==="start"})}function wF1(t,e,n){var i,o,u=_F1(e)?jT:Hi;return function(){var l=u(this,t),a=l.on;a!==i&&(o=(i=a).copy()).on(e,n),l.on=o}}function EF1(t,e){var n=this._id;return arguments.length<2?V3(this.node(),n).on.on(t):this.each(wF1(n,t,e))}function SF1(t){return function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}}function AF1(){return this.on("end.remove",SF1(this._id))}function CF1(t){var e=this._name,n=this._id;typeof t!="function"&&(t=zT(t));for(var i=this._groups,o=i.length,u=new Array(o),l=0;l<o;++l)for(var a=i[l],s=a.length,c=u[l]=new Array(s),f,g,p=0;p<s;++p)(f=a[p])&&(g=t.call(f,f.__data__,p,a))&&("__data__"in f&&(g.__data__=f.__data__),c[p]=g,vp(c[p],e,n,p,c,V3(f,n)));return new n4(u,this._parents,e,n)}function kF1(t){var e=this._name,n=this._id;typeof t!="function"&&(t=rJ(t));for(var i=this._groups,o=i.length,u=[],l=[],a=0;a<o;++a)for(var s=i[a],c=s.length,f,g=0;g<c;++g)if(f=s[g]){for(var p=t.call(f,f.__data__,g,s),m,v=V3(f,n),b=0,x=p.length;b<x;++b)(m=p[b])&&vp(m,e,n,b,p,v);u.push(p),l.push(f)}return new n4(u,l,e,n)}var TF1=C7.prototype.constructor;function $F1(){return new TF1(this._groups,this._parents)}function MF1(t,e){var n,i,o;return function(){var u=Gl(this,t),l=(this.style.removeProperty(t),Gl(this,t));return u===l?null:u===n&&l===i?o:o=e(n=u,i=l)}}function EJ(t){return function(){this.style.removeProperty(t)}}function NF1(t,e,n){var i,o=n+"",u;return function(){var l=Gl(this,t);return l===o?null:l===i?u:u=e(i=l,n)}}function RF1(t,e,n){var i,o,u;return function(){var l=Gl(this,t),a=n(this),s=a+"";return a==null&&(s=a=(this.style.removeProperty(t),Gl(this,t))),l===s?null:l===i&&s===o?u:(o=s,u=e(i=l,a))}}function DF1(t,e){var n,i,o,u="style."+e,l="end."+u,a;return function(){var s=Hi(this,t),c=s.on,f=s.value[u]==null?a||(a=EJ(e)):void 0;(c!==n||o!==f)&&(i=(n=c).copy()).on(l,o=f),s.on=i}}function OF1(t,e,n){var i=(t+="")=="transform"?bH:wJ;return e==null?this.styleTween(t,MF1(t,i)).on("end.style."+t,EJ(t)):typeof e=="function"?this.styleTween(t,RF1(t,i,PT(this,"style."+t,e))).each(DF1(this._id,t)):this.styleTween(t,NF1(t,i,e),n).on("end.style."+t,null)}function FF1(t,e,n){return function(i){this.style.setProperty(t,e.call(this,i),n)}}function zF1(t,e,n){var i,o;function u(){var l=e.apply(this,arguments);return l!==o&&(i=(o=l)&&FF1(t,l,n)),i}return u._value=e,u}function LF1(t,e,n){var i="style."+(t+="");if(arguments.length<2)return(i=this.tween(i))&&i._value;if(e==null)return this.tween(i,null);if(typeof e!="function")throw new Error;return this.tween(i,zF1(t,e,n??""))}function jF1(t){return function(){this.textContent=t}}function PF1(t){return function(){var e=t(this);this.textContent=e??""}}function IF1(t){return this.tween("text",typeof t=="function"?PF1(PT(this,"text",t)):jF1(t==null?"":t+""))}function BF1(t){return function(e){this.textContent=t.call(this,e)}}function UF1(t){var e,n;function i(){var o=t.apply(this,arguments);return o!==n&&(e=(n=o)&&BF1(o)),e}return i._value=t,i}function qF1(t){var e="text";if(arguments.length<1)return(e=this.tween(e))&&e._value;if(t==null)return this.tween(e,null);if(typeof t!="function")throw new Error;return this.tween(e,UF1(t))}function HF1(){for(var t=this._name,e=this._id,n=SJ(),i=this._groups,o=i.length,u=0;u<o;++u)for(var l=i[u],a=l.length,s,c=0;c<a;++c)if(s=l[c]){var f=V3(s,e);vp(s,t,n,c,l,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new n4(i,this._parents,t,n)}function GF1(){var t,e,n=this,i=n._id,o=n.size();return new Promise(function(u,l){var a={value:l},s={value:function(){--o===0&&u()}};n.each(function(){var c=Hi(this,i),f=c.on;f!==t&&(e=(t=f).copy(),e._.cancel.push(a),e._.interrupt.push(a),e._.end.push(s)),c.on=e}),o===0&&u()})}var WF1=0;function n4(t,e,n,i){this._groups=t,this._parents=e,this._name=n,this._id=i}function SJ(){return++WF1}var vo=C7.prototype;n4.prototype={constructor:n4,select:CF1,selectAll:kF1,selectChild:vo.selectChild,selectChildren:vo.selectChildren,filter:bF1,merge:xF1,selection:$F1,transition:HF1,call:vo.call,nodes:vo.nodes,node:vo.node,size:vo.size,empty:vo.empty,each:vo.each,on:EF1,attr:iF1,attrTween:rF1,style:OF1,styleTween:LF1,text:IF1,textTween:qF1,remove:AF1,tween:KO1,delay:dF1,duration:hF1,ease:mF1,easeVarying:vF1,end:GF1,[Symbol.iterator]:vo[Symbol.iterator]};function YF1(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}var VF1={time:null,delay:0,duration:250,ease:YF1};function XF1(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))throw new Error(`transition ${e} not found`);return n}function KF1(t){var e,n;t instanceof n4?(e=t._id,t=t._name):(e=SJ(),(n=VF1).time=lh(),t=t==null?null:t+"");for(var i=this._groups,o=i.length,u=0;u<o;++u)for(var l=i[u],a=l.length,s,c=0;c<a;++c)(s=l[c])&&vp(s,t,e,c,l,n||XF1(s,e));return new n4(i,this._parents,t,e)}C7.prototype.interrupt=YO1;C7.prototype.transition=KF1;const Vb=t=>()=>t;function QF1(t,{sourceEvent:e,target:n,selection:i,mode:o,dispatch:u}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},selection:{value:i,enumerable:!0,configurable:!0},mode:{value:o,enumerable:!0,configurable:!0},_:{value:u}})}function ZF1(t){t.stopImmediatePropagation()}function Xb(t){t.preventDefault(),t.stopImmediatePropagation()}var sP={name:"drag"},Kb={name:"space"},z5={name:"handle"},L5={name:"center"};const{abs:cP,max:nn,min:on}=Math;function dP(t){return[+t[0],+t[1]]}function fP(t){return[dP(t[0]),dP(t[1])]}var cd={name:"x",handles:["w","e"].map(kw),input:function(t,e){return t==null?null:[[+t[0],e[0][1]],[+t[1],e[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Qb={},bo={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},gP={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},hP={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},JF1={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},tz1={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function kw(t){return{type:t}}function ez1(t){return!t.ctrlKey&&!t.button}function nz1(){var t=this.ownerSVGElement||this;return t.hasAttribute("viewBox")?(t=t.viewBox.baseVal,[[t.x,t.y],[t.x+t.width,t.y+t.height]]):[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function iz1(){return navigator.maxTouchPoints||"ontouchstart"in this}function Zb(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function oz1(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function uz1(){return lz1(cd)}function lz1(t){var e=nz1,n=ez1,i=iz1,o=!0,u=n7("start","brush","end"),l=6,a;function s(x){var w=x.property("__brush",b).selectAll(".overlay").data([kw("overlay")]);w.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",bo.overlay).merge(w).each(function(){var A=Zb(this).extent;Te(this).attr("x",A[0][0]).attr("y",A[0][1]).attr("width",A[1][0]-A[0][0]).attr("height",A[1][1]-A[0][1])}),x.selectAll(".selection").data([kw("selection")]).enter().append("rect").attr("class","selection").attr("cursor",bo.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var S=x.selectAll(".handle").data(t.handles,function(A){return A.type});S.exit().remove(),S.enter().append("rect").attr("class",function(A){return"handle handle--"+A.type}).attr("cursor",function(A){return bo[A.type]}),x.each(c).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",p).filter(i).on("touchstart.brush",p).on("touchmove.brush",m).on("touchend.brush touchcancel.brush",v).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}s.move=function(x,w,S){x.tween?x.on("start.brush",function(A){f(this,arguments).beforestart().start(A)}).on("interrupt.brush end.brush",function(A){f(this,arguments).end(A)}).tween("brush",function(){var A=this,C=A.__brush,k=f(A,arguments),M=C.selection,T=t.input(typeof w=="function"?w.apply(this,arguments):w,C.extent),D=u4(M,T);function I(U){C.selection=U===1&&T===null?null:D(U),c.call(A),k.brush()}return M!==null&&T!==null?I:I(1)}):x.each(function(){var A=this,C=arguments,k=A.__brush,M=t.input(typeof w=="function"?w.apply(A,C):w,k.extent),T=f(A,C).beforestart();ul(A),k.selection=M===null?null:M,c.call(A),T.start(S).brush(S).end(S)})},s.clear=function(x,w){s.move(x,null,w)};function c(){var x=Te(this),w=Zb(this).selection;w?(x.selectAll(".selection").style("display",null).attr("x",w[0][0]).attr("y",w[0][1]).attr("width",w[1][0]-w[0][0]).attr("height",w[1][1]-w[0][1]),x.selectAll(".handle").style("display",null).attr("x",function(S){return S.type[S.type.length-1]==="e"?w[1][0]-l/2:w[0][0]-l/2}).attr("y",function(S){return S.type[0]==="s"?w[1][1]-l/2:w[0][1]-l/2}).attr("width",function(S){return S.type==="n"||S.type==="s"?w[1][0]-w[0][0]+l:l}).attr("height",function(S){return S.type==="e"||S.type==="w"?w[1][1]-w[0][1]+l:l})):x.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function f(x,w,S){var A=x.__brush.emitter;return A&&(!S||!A.clean)?A:new g(x,w,S)}function g(x,w,S){this.that=x,this.args=w,this.state=x.__brush,this.active=0,this.clean=S}g.prototype={beforestart:function(){return++this.active===1&&(this.state.emitter=this,this.starting=!0),this},start:function(x,w){return this.starting?(this.starting=!1,this.emit("start",x,w)):this.emit("brush",x),this},brush:function(x,w){return this.emit("brush",x,w),this},end:function(x,w){return--this.active===0&&(delete this.state.emitter,this.emit("end",x,w)),this},emit:function(x,w,S){var A=Te(this.that).datum();u.call(x,this.that,new QF1(x,{sourceEvent:w,target:s,selection:t.output(this.state.selection),mode:S,dispatch:u}),A)}};function p(x){if(a&&!x.touches||!n.apply(this,arguments))return;var w=this,S=x.target.__data__.type,A=(o&&x.metaKey?S="overlay":S)==="selection"?sP:o&&x.altKey?L5:z5,C=t===Qb?null:JF1[S],k=t===cd?null:tz1[S],M=Zb(w),T=M.extent,D=M.selection,I=T[0][0],U,B,V=T[0][1],W,O,j=T[1][0],R,P,q=T[1][1],Y,z,G=0,Q=0,n1,l1=C&&k&&o&&x.shiftKey,d1,x1,j1=Array.from(x.touches||[x],C1=>{const zt=C1.identifier;return C1=_o(C1,w),C1.point0=C1.slice(),C1.identifier=zt,C1});ul(w);var M1=f(w,arguments,!0).beforestart();if(S==="overlay"){D&&(n1=!0);const C1=[j1[0],j1[1]||j1[0]];M.selection=D=[[U=t===Qb?I:on(C1[0][0],C1[1][0]),W=t===cd?V:on(C1[0][1],C1[1][1])],[R=t===Qb?j:nn(C1[0][0],C1[1][0]),Y=t===cd?q:nn(C1[0][1],C1[1][1])]],j1.length>1&&lt(x)}else U=D[0][0],W=D[0][1],R=D[1][0],Y=D[1][1];B=U,O=W,P=R,z=Y;var v1=Te(w).attr("pointer-events","none"),D1=v1.selectAll(".overlay").attr("cursor",bo[S]);if(x.touches)M1.moved=f1,M1.ended=X1;else{var B1=Te(x.view).on("mousemove.brush",f1,!0).on("mouseup.brush",X1,!0);o&&B1.on("keydown.brush",Y1,!0).on("keyup.brush",Ft,!0),bJ(x.view)}c.call(w),M1.start(x,A.name);function f1(C1){for(const zt of C1.changedTouches||[C1])for(const X3 of j1)X3.identifier===zt.identifier&&(X3.cur=_o(zt,w));if(l1&&!d1&&!x1&&j1.length===1){const zt=j1[0];cP(zt.cur[0]-zt[0])>cP(zt.cur[1]-zt[1])?x1=!0:d1=!0}for(const zt of j1)zt.cur&&(zt[0]=zt.cur[0],zt[1]=zt.cur[1]);n1=!0,Xb(C1),lt(C1)}function lt(C1){const zt=j1[0],X3=zt.point0;var ge;switch(G=zt[0]-X3[0],Q=zt[1]-X3[1],A){case Kb:case sP:{C&&(G=nn(I-U,on(j-R,G)),B=U+G,P=R+G),k&&(Q=nn(V-W,on(q-Y,Q)),O=W+Q,z=Y+Q);break}case z5:{j1[1]?(C&&(B=nn(I,on(j,j1[0][0])),P=nn(I,on(j,j1[1][0])),C=1),k&&(O=nn(V,on(q,j1[0][1])),z=nn(V,on(q,j1[1][1])),k=1)):(C<0?(G=nn(I-U,on(j-U,G)),B=U+G,P=R):C>0&&(G=nn(I-R,on(j-R,G)),B=U,P=R+G),k<0?(Q=nn(V-W,on(q-W,Q)),O=W+Q,z=Y):k>0&&(Q=nn(V-Y,on(q-Y,Q)),O=W,z=Y+Q));break}case L5:{C&&(B=nn(I,on(j,U-G*C)),P=nn(I,on(j,R+G*C))),k&&(O=nn(V,on(q,W-Q*k)),z=nn(V,on(q,Y+Q*k)));break}}P<B&&(C*=-1,ge=U,U=R,R=ge,ge=B,B=P,P=ge,S in gP&&D1.attr("cursor",bo[S=gP[S]])),z<O&&(k*=-1,ge=W,W=Y,Y=ge,ge=O,O=z,z=ge,S in hP&&D1.attr("cursor",bo[S=hP[S]])),M.selection&&(D=M.selection),d1&&(B=D[0][0],P=D[1][0]),x1&&(O=D[0][1],z=D[1][1]),(D[0][0]!==B||D[0][1]!==O||D[1][0]!==P||D[1][1]!==z)&&(M.selection=[[B,O],[P,z]],c.call(w),M1.brush(C1,A.name))}function X1(C1){if(ZF1(C1),C1.touches){if(C1.touches.length)return;a&&clearTimeout(a),a=setTimeout(function(){a=null},500)}else xJ(C1.view,n1),B1.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);v1.attr("pointer-events","all"),D1.attr("cursor",bo.overlay),M.selection&&(D=M.selection),oz1(D)&&(M.selection=null,c.call(w)),M1.end(C1,A.name)}function Y1(C1){switch(C1.keyCode){case 16:{l1=C&&k;break}case 18:{A===z5&&(C&&(R=P-G*C,U=B+G*C),k&&(Y=z-Q*k,W=O+Q*k),A=L5,lt(C1));break}case 32:{(A===z5||A===L5)&&(C<0?R=P-G:C>0&&(U=B-G),k<0?Y=z-Q:k>0&&(W=O-Q),A=Kb,D1.attr("cursor",bo.selection),lt(C1));break}default:return}Xb(C1)}function Ft(C1){switch(C1.keyCode){case 16:{l1&&(d1=x1=l1=!1,lt(C1));break}case 18:{A===L5&&(C<0?R=P:C>0&&(U=B),k<0?Y=z:k>0&&(W=O),A=z5,lt(C1));break}case 32:{A===Kb&&(C1.altKey?(C&&(R=P-G*C,U=B+G*C),k&&(Y=z-Q*k,W=O+Q*k),A=L5):(C<0?R=P:C>0&&(U=B),k<0?Y=z:k>0&&(W=O),A=z5),D1.attr("cursor",bo[S]),lt(C1));break}default:return}Xb(C1)}}function m(x){f(this,arguments).moved(x)}function v(x){f(this,arguments).ended(x)}function b(){var x=this.__brush||{selection:null};return x.extent=fP(e.apply(this,arguments)),x.dim=t,x}return s.extent=function(x){return arguments.length?(e=typeof x=="function"?x:Vb(fP(x)),s):e},s.filter=function(x){return arguments.length?(n=typeof x=="function"?x:Vb(!!x),s):n},s.touchable=function(x){return arguments.length?(i=typeof x=="function"?x:Vb(!!x),s):i},s.handleSize=function(x){return arguments.length?(l=+x,s):l},s.keyModifiers=function(x){return arguments.length?(o=!!x,s):o},s.on=function(){var x=u.on.apply(u,arguments);return x===u?s:x},s}const Nc=t=>()=>t;function az1(t,{sourceEvent:e,target:n,transform:i,dispatch:o}){Object.defineProperties(this,{type:{value:t,enumerable:!0,configurable:!0},sourceEvent:{value:e,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},transform:{value:i,enumerable:!0,configurable:!0},_:{value:o}})}function Oo(t,e,n){this.k=t,this.x=e,this.y=n}Oo.prototype={constructor:Oo,scale:function(t){return t===1?this:new Oo(this.k*t,this.x,this.y)},translate:function(t,e){return t===0&e===0?this:new Oo(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var bp=new Oo(1,0,0);AJ.prototype=Oo.prototype;function AJ(t){for(;!t.__zoom;)if(!(t=t.parentNode))return bp;return t.__zoom}function Jb(t){t.stopImmediatePropagation()}function Q9(t){t.preventDefault(),t.stopImmediatePropagation()}function rz1(t){return(!t.ctrlKey||t.type==="wheel")&&!t.button}function sz1(){var t=this;return t instanceof SVGElement?(t=t.ownerSVGElement||t,t.hasAttribute("viewBox")?(t=t.viewBox.baseVal,[[t.x,t.y],[t.x+t.width,t.y+t.height]]):[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]):[[0,0],[t.clientWidth,t.clientHeight]]}function pP(){return this.__zoom||bp}function cz1(t){return-t.deltaY*(t.deltaMode===1?.05:t.deltaMode?1:.002)*(t.ctrlKey?10:1)}function dz1(){return navigator.maxTouchPoints||"ontouchstart"in this}function fz1(t,e,n){var i=t.invertX(e[0][0])-n[0][0],o=t.invertX(e[1][0])-n[1][0],u=t.invertY(e[0][1])-n[0][1],l=t.invertY(e[1][1])-n[1][1];return t.translate(o>i?(i+o)/2:Math.min(0,i)||Math.max(0,o),l>u?(u+l)/2:Math.min(0,u)||Math.max(0,l))}function gz1(){var t=rz1,e=sz1,n=fz1,i=cz1,o=dz1,u=[0,1/0],l=[[-1/0,-1/0],[1/0,1/0]],a=250,s=_H,c=n7("start","zoom","end"),f,g,p,m=500,v=150,b=0,x=10;function w(O){O.property("__zoom",pP).on("wheel.zoom",D,{passive:!1}).on("mousedown.zoom",I).on("dblclick.zoom",U).filter(o).on("touchstart.zoom",B).on("touchmove.zoom",V).on("touchend.zoom touchcancel.zoom",W).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}w.transform=function(O,j,R,P){var q=O.selection?O.selection():O;q.property("__zoom",pP),O!==q?k(O,j,R,P):q.interrupt().each(function(){M(this,arguments).event(P).start().zoom(null,typeof j=="function"?j.apply(this,arguments):j).end()})},w.scaleBy=function(O,j,R,P){w.scaleTo(O,function(){var q=this.__zoom.k,Y=typeof j=="function"?j.apply(this,arguments):j;return q*Y},R,P)},w.scaleTo=function(O,j,R,P){w.transform(O,function(){var q=e.apply(this,arguments),Y=this.__zoom,z=R==null?C(q):typeof R=="function"?R.apply(this,arguments):R,G=Y.invert(z),Q=typeof j=="function"?j.apply(this,arguments):j;return n(A(S(Y,Q),z,G),q,l)},R,P)},w.translateBy=function(O,j,R,P){w.transform(O,function(){return n(this.__zoom.translate(typeof j=="function"?j.apply(this,arguments):j,typeof R=="function"?R.apply(this,arguments):R),e.apply(this,arguments),l)},null,P)},w.translateTo=function(O,j,R,P,q){w.transform(O,function(){var Y=e.apply(this,arguments),z=this.__zoom,G=P==null?C(Y):typeof P=="function"?P.apply(this,arguments):P;return n(bp.translate(G[0],G[1]).scale(z.k).translate(typeof j=="function"?-j.apply(this,arguments):-j,typeof R=="function"?-R.apply(this,arguments):-R),Y,l)},P,q)};function S(O,j){return j=Math.max(u[0],Math.min(u[1],j)),j===O.k?O:new Oo(j,O.x,O.y)}function A(O,j,R){var P=j[0]-R[0]*O.k,q=j[1]-R[1]*O.k;return P===O.x&&q===O.y?O:new Oo(O.k,P,q)}function C(O){return[(+O[0][0]+ +O[1][0])/2,(+O[0][1]+ +O[1][1])/2]}function k(O,j,R,P){O.on("start.zoom",function(){M(this,arguments).event(P).start()}).on("interrupt.zoom end.zoom",function(){M(this,arguments).event(P).end()}).tween("zoom",function(){var q=this,Y=arguments,z=M(q,Y).event(P),G=e.apply(q,Y),Q=R==null?C(G):typeof R=="function"?R.apply(q,Y):R,n1=Math.max(G[1][0]-G[0][0],G[1][1]-G[0][1]),l1=q.__zoom,d1=typeof j=="function"?j.apply(q,Y):j,x1=s(l1.invert(Q).concat(n1/l1.k),d1.invert(Q).concat(n1/d1.k));return function(j1){if(j1===1)j1=d1;else{var M1=x1(j1),v1=n1/M1[2];j1=new Oo(v1,Q[0]-M1[0]*v1,Q[1]-M1[1]*v1)}z.zoom(null,j1)}})}function M(O,j,R){return!R&&O.__zooming||new T(O,j)}function T(O,j){this.that=O,this.args=j,this.active=0,this.sourceEvent=null,this.extent=e.apply(O,j),this.taps=0}T.prototype={event:function(O){return O&&(this.sourceEvent=O),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(O,j){return this.mouse&&O!=="mouse"&&(this.mouse[1]=j.invert(this.mouse[0])),this.touch0&&O!=="touch"&&(this.touch0[1]=j.invert(this.touch0[0])),this.touch1&&O!=="touch"&&(this.touch1[1]=j.invert(this.touch1[0])),this.that.__zoom=j,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(O){var j=Te(this.that).datum();c.call(O,this.that,new az1(O,{sourceEvent:this.sourceEvent,target:w,transform:this.that.__zoom,dispatch:c}),j)}};function D(O,...j){if(!t.apply(this,arguments))return;var R=M(this,j).event(O),P=this.__zoom,q=Math.max(u[0],Math.min(u[1],P.k*Math.pow(2,i.apply(this,arguments)))),Y=_o(O);if(R.wheel)(R.mouse[0][0]!==Y[0]||R.mouse[0][1]!==Y[1])&&(R.mouse[1]=P.invert(R.mouse[0]=Y)),clearTimeout(R.wheel);else{if(P.k===q)return;R.mouse=[Y,P.invert(Y)],ul(this),R.start()}Q9(O),R.wheel=setTimeout(z,v),R.zoom("mouse",n(A(S(P,q),R.mouse[0],R.mouse[1]),R.extent,l));function z(){R.wheel=null,R.end()}}function I(O,...j){if(p||!t.apply(this,arguments))return;var R=O.currentTarget,P=M(this,j,!0).event(O),q=Te(O.view).on("mousemove.zoom",Q,!0).on("mouseup.zoom",n1,!0),Y=_o(O,R),z=O.clientX,G=O.clientY;bJ(O.view),Jb(O),P.mouse=[Y,this.__zoom.invert(Y)],ul(this),P.start();function Q(l1){if(Q9(l1),!P.moved){var d1=l1.clientX-z,x1=l1.clientY-G;P.moved=d1*d1+x1*x1>b}P.event(l1).zoom("mouse",n(A(P.that.__zoom,P.mouse[0]=_o(l1,R),P.mouse[1]),P.extent,l))}function n1(l1){q.on("mousemove.zoom mouseup.zoom",null),xJ(l1.view,P.moved),Q9(l1),P.event(l1).end()}}function U(O,...j){if(t.apply(this,arguments)){var R=this.__zoom,P=_o(O.changedTouches?O.changedTouches[0]:O,this),q=R.invert(P),Y=R.k*(O.shiftKey?.5:2),z=n(A(S(R,Y),P,q),e.apply(this,j),l);Q9(O),a>0?Te(this).transition().duration(a).call(k,z,P,O):Te(this).call(w.transform,z,P,O)}}function B(O,...j){if(t.apply(this,arguments)){var R=O.touches,P=R.length,q=M(this,j,O.changedTouches.length===P).event(O),Y,z,G,Q;for(Jb(O),z=0;z<P;++z)G=R[z],Q=_o(G,this),Q=[Q,this.__zoom.invert(Q),G.identifier],q.touch0?!q.touch1&&q.touch0[2]!==Q[2]&&(q.touch1=Q,q.taps=0):(q.touch0=Q,Y=!0,q.taps=1+!!f);f&&(f=clearTimeout(f)),Y&&(q.taps<2&&(g=Q[0],f=setTimeout(function(){f=null},m)),ul(this),q.start())}}function V(O,...j){if(this.__zooming){var R=M(this,j).event(O),P=O.changedTouches,q=P.length,Y,z,G,Q;for(Q9(O),Y=0;Y<q;++Y)z=P[Y],G=_o(z,this),R.touch0&&R.touch0[2]===z.identifier?R.touch0[0]=G:R.touch1&&R.touch1[2]===z.identifier&&(R.touch1[0]=G);if(z=R.that.__zoom,R.touch1){var n1=R.touch0[0],l1=R.touch0[1],d1=R.touch1[0],x1=R.touch1[1],j1=(j1=d1[0]-n1[0])*j1+(j1=d1[1]-n1[1])*j1,M1=(M1=x1[0]-l1[0])*M1+(M1=x1[1]-l1[1])*M1;z=S(z,Math.sqrt(j1/M1)),G=[(n1[0]+d1[0])/2,(n1[1]+d1[1])/2],Q=[(l1[0]+x1[0])/2,(l1[1]+x1[1])/2]}else if(R.touch0)G=R.touch0[0],Q=R.touch0[1];else return;R.zoom("touch",n(A(z,G,Q),R.extent,l))}}function W(O,...j){if(this.__zooming){var R=M(this,j).event(O),P=O.changedTouches,q=P.length,Y,z;for(Jb(O),p&&clearTimeout(p),p=setTimeout(function(){p=null},m),Y=0;Y<q;++Y)z=P[Y],R.touch0&&R.touch0[2]===z.identifier?delete R.touch0:R.touch1&&R.touch1[2]===z.identifier&&delete R.touch1;if(R.touch1&&!R.touch0&&(R.touch0=R.touch1,delete R.touch1),R.touch0)R.touch0[1]=this.__zoom.invert(R.touch0[0]);else if(R.end(),R.taps===2&&(z=_o(z,this),Math.hypot(g[0]-z[0],g[1]-z[1])<x)){var G=Te(this).on("dblclick.zoom");G&&G.apply(this,arguments)}}}return w.wheelDelta=function(O){return arguments.length?(i=typeof O=="function"?O:Nc(+O),w):i},w.filter=function(O){return arguments.length?(t=typeof O=="function"?O:Nc(!!O),w):t},w.touchable=function(O){return arguments.length?(o=typeof O=="function"?O:Nc(!!O),w):o},w.extent=function(O){return arguments.length?(e=typeof O=="function"?O:Nc([[+O[0][0],+O[0][1]],[+O[1][0],+O[1][1]]]),w):e},w.scaleExtent=function(O){return arguments.length?(u[0]=+O[0],u[1]=+O[1],w):[u[0],u[1]]},w.translateExtent=function(O){return arguments.length?(l[0][0]=+O[0][0],l[1][0]=+O[1][0],l[0][1]=+O[0][1],l[1][1]=+O[1][1],w):[[l[0][0],l[0][1]],[l[1][0],l[1][1]]]},w.constrain=function(O){return arguments.length?(n=O,w):n},w.duration=function(O){return arguments.length?(a=+O,w):a},w.interpolate=function(O){return arguments.length?(s=O,w):s},w.on=function(){var O=c.on.apply(c,arguments);return O===c?w:O},w.clickDistance=function(O){return arguments.length?(b=(O=+O)*O,w):Math.sqrt(b)},w.tapDistance=function(O){return arguments.length?(x=+O,w):x},w}const hz1="Topology",pz1=JSON.parse(`{"countries":{"type":"GeometryCollection","geometries":[{"type":"Polygon","arcs":[[0,1,2,3]],"id":"716","properties":{"name":"Zimbabwe"}},{"type":"Polygon","arcs":[[-3,4,5,6,7,8,9]],"id":"894","properties":{"name":"Zambia"}},{"type":"MultiPolygon","arcs":[[[10,11,12]],[[13]],[[14]],[[15]],[[16]]],"id":"887","properties":{"name":"Yemen"}},{"type":"MultiPolygon","arcs":[[[17]],[[18,19,20,21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]]],"id":"704","properties":{"name":"Vietnam"}},{"type":"MultiPolygon","arcs":[[[28]],[[29]],[[30]],[[31]],[[32,33,34,35]]],"id":"862","properties":{"name":"Venezuela"}},{"type":"Polygon","arcs":[[36]],"id":"336","properties":{"name":"Vatican"}},{"type":"MultiPolygon","arcs":[[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]]],"id":"548","properties":{"name":"Vanuatu"}},{"type":"MultiPolygon","arcs":[[[51,52,53,54,55],[56]],[[57]],[[58]]],"id":"860","properties":{"name":"Uzbekistan"}},{"type":"Polygon","arcs":[[59,60,61]],"id":"858","properties":{"name":"Uruguay"}},{"type":"MultiPolygon","arcs":[[[62]],[[63]],[[64]],[[65]],[[66]]],"id":"583","properties":{"name":"Micronesia"}},{"type":"MultiPolygon","arcs":[[[67]],[[68]],[[69]],[[70]],[[71]]],"id":"584","properties":{"name":"Marshall Is."}},{"type":"MultiPolygon","arcs":[[[72]],[[73]],[[74]],[[75]],[[76]],[[77]]],"id":"580","properties":{"name":"N. Mariana Is."}},{"type":"MultiPolygon","arcs":[[[78]],[[79]],[[80]]],"id":"850","properties":{"name":"U.S. Virgin Is."}},{"type":"Polygon","arcs":[[81]],"id":"316","properties":{"name":"Guam"}},{"type":"Polygon","arcs":[[82]],"id":"016","properties":{"name":"American Samoa"}},{"type":"MultiPolygon","arcs":[[[83]],[[84]],[[85]]],"id":"630","properties":{"name":"Puerto Rico"}},{"type":"MultiPolygon","arcs":[[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[102,103,104,105]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138]],[[139]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[164,165,166,167,168]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]],[[206]],[[207]],[[208]],[[209]],[[210]],[[211]],[[212]],[[213]],[[214]],[[215]],[[216]],[[217]],[[218]],[[219]]],"id":"840","properties":{"name":"United States of America"}},{"type":"MultiPolygon","arcs":[[[220]],[[221]]],"id":"239","properties":{"name":"S. Geo. and the Is."}},{"type":"Polygon","arcs":[[222]],"id":"086","properties":{"name":"Br. Indian Ocean Ter."}},{"type":"MultiPolygon","arcs":[[[223]],[[224]]],"id":"654","properties":{"name":"Saint Helena"}},{"type":"Polygon","arcs":[[225]],"id":"612","properties":{"name":"Pitcairn Is."}},{"type":"Polygon","arcs":[[226]],"id":"660","properties":{"name":"Anguilla"}},{"type":"MultiPolygon","arcs":[[[227]],[[228]],[[229]],[[230]],[[231]],[[232]]],"id":"238","properties":{"name":"Falkland Is."}},{"type":"MultiPolygon","arcs":[[[233]],[[234]],[[235]]],"id":"136","properties":{"name":"Cayman Is."}},{"type":"Polygon","arcs":[[236]],"id":"060","properties":{"name":"Bermuda"}},{"type":"MultiPolygon","arcs":[[[237]],[[238]],[[239]]],"id":"092","properties":{"name":"British Virgin Is."}},{"type":"MultiPolygon","arcs":[[[240]],[[241]],[[242]]],"id":"796","properties":{"name":"Turks and Caicos Is."}},{"type":"Polygon","arcs":[[243]],"id":"500","properties":{"name":"Montserrat"}},{"type":"Polygon","arcs":[[244]],"id":"832","properties":{"name":"Jersey"}},{"type":"Polygon","arcs":[[245]],"id":"831","properties":{"name":"Guernsey"}},{"type":"Polygon","arcs":[[246]],"id":"833","properties":{"name":"Isle of Man"}},{"type":"MultiPolygon","arcs":[[[247]],[[248]],[[249]],[[250]],[[251]],[[252]],[[253]],[[254]],[[255]],[[256]],[[257]],[[258]],[[259]],[[260]],[[261]],[[262]],[[263]],[[264]],[[265]],[[266]],[[267]],[[268,269]],[[270]]],"id":"826","properties":{"name":"United Kingdom"}},{"type":"MultiPolygon","arcs":[[[271,272,273,274,275],[276]],[[277]],[[278]],[[279]],[[280]]],"id":"784","properties":{"name":"United Arab Emirates"}},{"type":"MultiPolygon","arcs":[[[281,282,283,284,285,286,287,288,289,290,291]],[[292]]],"id":"804","properties":{"name":"Ukraine"}},{"type":"Polygon","arcs":[[293,294,295,296,297]],"id":"800","properties":{"name":"Uganda"}},{"type":"MultiPolygon","arcs":[[[298]],[[-55,299,300,301,302]]],"id":"795","properties":{"name":"Turkmenistan"}},{"type":"MultiPolygon","arcs":[[[303]],[[304,305,306,307,308,309,310]],[[311,312,313]]],"id":"792","properties":{"name":"Turkey"}},{"type":"MultiPolygon","arcs":[[[314,315,316]],[[317]],[[318]]],"id":"788","properties":{"name":"Tunisia"}},{"type":"MultiPolygon","arcs":[[[319]],[[320]]],"id":"780","properties":{"name":"Trinidad and Tobago"}},{"type":"MultiPolygon","arcs":[[[321]],[[322]],[[323]]],"id":"776","properties":{"name":"Tonga"}},{"type":"Polygon","arcs":[[324,325,326,327]],"id":"768","properties":{"name":"Togo"}},{"type":"MultiPolygon","arcs":[[[328]],[[329,330]],[[331,332]]],"id":"626","properties":{"name":"Timor-Leste"}},{"type":"MultiPolygon","arcs":[[[333]],[[334]],[[335]],[[336,337,338,339,340,341]],[[342]],[[343]],[[344]],[[345]],[[346]],[[347]]],"id":"764","properties":{"name":"Thailand"}},{"type":"MultiPolygon","arcs":[[[348]],[[349]],[[-8,350,351,352,-294,353,354,355,356]],[[357]]],"id":"834","properties":{"name":"Tanzania"}},{"type":"MultiPolygon","arcs":[[[-53,358,359,360]],[[-57]],[[361]]],"id":"762","properties":{"name":"Tajikistan"}},{"type":"MultiPolygon","arcs":[[[362]],[[363]]],"id":"158","properties":{"name":"Taiwan"}},{"type":"Polygon","arcs":[[-310,364,365,366,367,368]],"id":"760","properties":{"name":"Syria"}},{"type":"Polygon","arcs":[[369,370,371,372,373,374]],"id":"756","properties":{"name":"Switzerland"}},{"type":"MultiPolygon","arcs":[[[375]],[[376]],[[377,378,379]],[[380]],[[381]],[[382]]],"id":"752","properties":{"name":"Sweden"}},{"type":"Polygon","arcs":[[383,384]],"id":"748","properties":{"name":"eSwatini"}},{"type":"Polygon","arcs":[[385,386,387,388]],"id":"740","properties":{"name":"Suriname"}},{"type":"Polygon","arcs":[[-297,389,390,391,392,393]],"id":"728","properties":{"name":"S. Sudan"}},{"type":"Polygon","arcs":[[-392,394,395,396,397,398,399,400]],"id":"729","properties":{"name":"Sudan"}},{"type":"MultiPolygon","arcs":[[[401]],[[402]],[[403]]],"id":"144","properties":{"name":"Sri Lanka"}},{"type":"MultiPolygon","arcs":[[[404]],[[405]],[[406]],[[407]],[[408,409,410,411,412,413]],[[414]],[[415]],[[416]],[[417]],[[418]],[[419]],[[420]]],"id":"724","properties":{"name":"Spain"}},{"type":"MultiPolygon","arcs":[[[421,422]],[[423]],[[424]],[[425]],[[426]],[[427]],[[428]],[[429]],[[430]],[[431]],[[432]]],"id":"410","properties":{"name":"South Korea"}},{"type":"MultiPolygon","arcs":[[[-1,433,-385,434,435,436,437],[438]],[[439]]],"id":"710","properties":{"name":"South Africa"}},{"type":"Polygon","arcs":[[440,441,442,443]],"id":"706","properties":{"name":"Somalia"}},{"type":"Polygon","arcs":[[-443,444,445,446]],"properties":{"name":"Somaliland"}},{"type":"MultiPolygon","arcs":[[[447]],[[448]],[[449]],[[450]],[[451]],[[452]],[[453]],[[454]],[[455]],[[456]],[[457]],[[458]],[[459]],[[460]],[[461]],[[462]],[[463]],[[464]],[[465]],[[466]],[[467]]],"id":"090","properties":{"name":"Solomon Is."}},{"type":"Polygon","arcs":[[-289,468,469,470,471]],"id":"703","properties":{"name":"Slovakia"}},{"type":"Polygon","arcs":[[472,473,474,475,476]],"id":"705","properties":{"name":"Slovenia"}},{"type":"Polygon","arcs":[[477]],"id":"702","properties":{"name":"Singapore"}},{"type":"MultiPolygon","arcs":[[[478,479,480]],[[481]]],"id":"694","properties":{"name":"Sierra Leone"}},{"type":"Polygon","arcs":[[482]],"id":"690","properties":{"name":"Seychelles"}},{"type":"Polygon","arcs":[[483,484,485,486,487,488,489,490]],"id":"688","properties":{"name":"Serbia"}},{"type":"Polygon","arcs":[[491,492,493,494,495,496,497]],"id":"686","properties":{"name":"Senegal"}},{"type":"MultiPolygon","arcs":[[[498]],[[499]],[[-12,500,501,502,503,504,505,506,-274,507]],[[508]]],"id":"682","properties":{"name":"Saudi Arabia"}},{"type":"MultiPolygon","arcs":[[[509]],[[510]]],"id":"678","properties":{"name":"São Tomé and Principe"}},{"type":"Polygon","arcs":[[511]],"id":"674","properties":{"name":"San Marino"}},{"type":"MultiPolygon","arcs":[[[512]],[[513]]],"id":"882","properties":{"name":"Samoa"}},{"type":"MultiPolygon","arcs":[[[514]],[[515]],[[516]]],"id":"670","properties":{"name":"St. Vin. and Gren."}},{"type":"Polygon","arcs":[[517]],"id":"662","properties":{"name":"Saint Lucia"}},{"type":"MultiPolygon","arcs":[[[518]],[[519]]],"id":"659","properties":{"name":"St. Kitts and Nevis"}},{"type":"Polygon","arcs":[[-295,-353,520,521]],"id":"646","properties":{"name":"Rwanda"}},{"type":"MultiPolygon","arcs":[[[522]],[[523]],[[524]],[[525]],[[526]],[[527]],[[528]],[[529]],[[530]],[[531]],[[532]],[[533]],[[534]],[[535]],[[536]],[[537]],[[538]],[[539,540,541,542,543,544,545,546,547,-292,548,549,550,551,552,553,554]],[[555]],[[556]],[[557]],[[558]],[[559]],[[560]],[[561]],[[562]],[[563]],[[564]],[[565]],[[566]],[[567]],[[568]],[[569]],[[570]],[[571]],[[572]],[[573]],[[574]],[[575]],[[576]],[[577]],[[578]],[[579]],[[580]],[[581]],[[582]],[[583]],[[584]],[[585]],[[586]],[[587]],[[588]],[[589]],[[590]],[[591]],[[592]],[[593]],[[594]],[[595]],[[596]],[[597]],[[598]],[[599]],[[600]],[[601]],[[602]],[[603]],[[604]],[[605]],[[606]],[[607]],[[608]],[[609]],[[610]],[[611]],[[612]],[[613]],[[614]],[[615]],[[616]],[[617]],[[618]],[[619]],[[620]],[[621]],[[622]],[[623]],[[624]],[[625]],[[626]],[[627]],[[628]],[[629]],[[630]],[[631]],[[632]],[[633]],[[634,635,636,637,638]],[[-283,639]]],"id":"643","properties":{"name":"Russia"}},{"type":"Polygon","arcs":[[-285,640,641,-491,642,-287,643]],"id":"642","properties":{"name":"Romania"}},{"type":"Polygon","arcs":[[-506,644]],"id":"634","properties":{"name":"Qatar"}},{"type":"MultiPolygon","arcs":[[[645]],[[-413,646]],[[647]],[[648]],[[649]],[[650]],[[651]],[[652]],[[653]]],"id":"620","properties":{"name":"Portugal"}},{"type":"Polygon","arcs":[[-290,-472,654,655,656,657,658,-637,659,660]],"id":"616","properties":{"name":"Poland"}},{"type":"MultiPolygon","arcs":[[[661]],[[662]],[[663]],[[664]],[[665]],[[666]],[[667]],[[668]],[[669]],[[670]],[[671]],[[672]],[[673]],[[674]],[[675]],[[676]],[[677]],[[678]],[[679]],[[680]],[[681]],[[682]],[[683]],[[684]],[[685]],[[686]],[[687]],[[688]],[[689]],[[690]],[[691]],[[692]],[[693]],[[694]],[[695]],[[696]],[[697]],[[698]],[[699]],[[700]],[[701]],[[702]],[[703]],[[704]],[[705]],[[706]],[[707]],[[708]]],"id":"608","properties":{"name":"Philippines"}},{"type":"Polygon","arcs":[[709,710,711,712,713,714]],"id":"604","properties":{"name":"Peru"}},{"type":"Polygon","arcs":[[715,716,717]],"id":"600","properties":{"name":"Paraguay"}},{"type":"MultiPolygon","arcs":[[[718]],[[719]],[[720,721]],[[722]],[[723]],[[724]],[[725]],[[726]],[[727]],[[728]],[[729]],[[730]],[[731]],[[732]],[[733]],[[734]],[[735]],[[736]],[[737]],[[738]],[[739]],[[740]],[[741]],[[742]],[[743]],[[744]]],"id":"598","properties":{"name":"Papua New Guinea"}},{"type":"MultiPolygon","arcs":[[[745,746,747,748]],[[749]],[[750]],[[751]],[[752]]],"id":"591","properties":{"name":"Panama"}},{"type":"MultiPolygon","arcs":[[[753]],[[754]]],"id":"585","properties":{"name":"Palau"}},{"type":"Polygon","arcs":[[755,756,757,758,759,760]],"id":"586","properties":{"name":"Pakistan"}},{"type":"MultiPolygon","arcs":[[[761]],[[-13,-508,-273,762]],[[-276,763]],[[-277]]],"id":"512","properties":{"name":"Oman"}},{"type":"MultiPolygon","arcs":[[[-378,764,-554,765]],[[766]],[[767]],[[768]],[[769]],[[770]],[[771]],[[772]],[[773]],[[774]],[[775]],[[776]],[[777]],[[778]],[[779]],[[780]],[[781]],[[782]],[[783]],[[784]],[[785]],[[786]],[[787]],[[788]],[[789]],[[790]],[[791]],[[792]],[[793]],[[794]],[[795]],[[796]]],"id":"578","properties":{"name":"Norway"}},{"type":"MultiPolygon","arcs":[[[-422,797,798,-540,799]],[[800]]],"id":"408","properties":{"name":"North Korea"}},{"type":"MultiPolygon","arcs":[[[801]],[[802,803,804,805,806]]],"id":"566","properties":{"name":"Nigeria"}},{"type":"Polygon","arcs":[[-807,807,808,809,810,811,812]],"id":"562","properties":{"name":"Niger"}},{"type":"Polygon","arcs":[[813,814,815,816]],"id":"558","properties":{"name":"Nicaragua"}},{"type":"MultiPolygon","arcs":[[[817]],[[818]],[[819]],[[820]],[[821]],[[822]],[[823]],[[824]],[[825]],[[826]],[[827]],[[828]],[[829]]],"id":"554","properties":{"name":"New Zealand"}},{"type":"Polygon","arcs":[[830]],"id":"570","properties":{"name":"Niue"}},{"type":"Polygon","arcs":[[831]],"id":"184","properties":{"name":"Cook Is."}},{"type":"MultiPolygon","arcs":[[[832,833,834]],[[835,836]],[[837]],[[838]],[[839]],[[840]],[[841]],[[842]],[[843]],[[844]],[[845]],[[846]]],"id":"528","properties":{"name":"Netherlands"}},{"type":"Polygon","arcs":[[847]],"id":"533","properties":{"name":"Aruba"}},{"type":"Polygon","arcs":[[848]],"id":"531","properties":{"name":"Curaçao"}},{"type":"Polygon","arcs":[[849,850]],"id":"524","properties":{"name":"Nepal"}},{"type":"Polygon","arcs":[[851]],"id":"520","properties":{"name":"Nauru"}},{"type":"Polygon","arcs":[[-5,852,-437,853,854]],"id":"516","properties":{"name":"Namibia"}},{"type":"Polygon","arcs":[[-4,-10,855,-356,856,-435,-384,-434],[857],[858]],"id":"508","properties":{"name":"Mozambique"}},{"type":"Polygon","arcs":[[859,860,861]],"id":"504","properties":{"name":"Morocco"}},{"type":"Polygon","arcs":[[862,863,864,-861]],"id":"732","properties":{"name":"W. Sahara"}},{"type":"Polygon","arcs":[[-487,865,866,867,868,869]],"id":"499","properties":{"name":"Montenegro"}},{"type":"Polygon","arcs":[[-542,870]],"id":"496","properties":{"name":"Mongolia"}},{"type":"Polygon","arcs":[[-286,-644]],"id":"498","properties":{"name":"Moldova"}},{"type":"Polygon","arcs":[[871,872]],"id":"492","properties":{"name":"Monaco"}},{"type":"MultiPolygon","arcs":[[[-167,873,874,875,876]],[[877]],[[878]],[[879]],[[880]],[[881]],[[882]],[[883]],[[884]],[[885]],[[886]],[[887]],[[888]],[[889]],[[890]],[[891]]],"id":"484","properties":{"name":"Mexico"}},{"type":"Polygon","arcs":[[892]],"id":"480","properties":{"name":"Mauritius"}},{"type":"MultiPolygon","arcs":[[[893]],[[-498,894,-864,895,896]]],"id":"478","properties":{"name":"Mauritania"}},{"type":"MultiPolygon","arcs":[[[897]],[[898]]],"id":"470","properties":{"name":"Malta"}},{"type":"Polygon","arcs":[[-492,-897,899,-810,900,901,902]],"id":"466","properties":{"name":"Mali"}},{"type":"MultiPolygon","arcs":[[[903]],[[904]]],"id":"462","properties":{"name":"Maldives"}},{"type":"MultiPolygon","arcs":[[[-340,905]],[[906,907,908,909,910]],[[911]],[[912]],[[913]],[[914]],[[915]],[[916]],[[917,918]]],"id":"458","properties":{"name":"Malaysia"}},{"type":"MultiPolygon","arcs":[[[-859]],[[-858]],[[-9,-357,-856]]],"id":"454","properties":{"name":"Malawi"}},{"type":"MultiPolygon","arcs":[[[919]],[[920]],[[921]]],"id":"450","properties":{"name":"Madagascar"}},{"type":"Polygon","arcs":[[-485,922,923,924,925]],"id":"807","properties":{"name":"Macedonia"}},{"type":"Polygon","arcs":[[926,927,928]],"id":"442","properties":{"name":"Luxembourg"}},{"type":"MultiPolygon","arcs":[[[-639,929]],[[-636,930,931,932,-660]]],"id":"440","properties":{"name":"Lithuania"}},{"type":"Polygon","arcs":[[-371,933]],"id":"438","properties":{"name":"Liechtenstein"}},{"type":"Polygon","arcs":[[-315,934,935,-397,936,-812,937]],"id":"434","properties":{"name":"Libya"}},{"type":"Polygon","arcs":[[-479,938,939,940]],"id":"430","properties":{"name":"Liberia"}},{"type":"Polygon","arcs":[[-439]],"id":"426","properties":{"name":"Lesotho"}},{"type":"Polygon","arcs":[[-368,941,942]],"id":"422","properties":{"name":"Lebanon"}},{"type":"Polygon","arcs":[[-932,943,944,-550,945]],"id":"428","properties":{"name":"Latvia"}},{"type":"Polygon","arcs":[[-21,946,-337,947,948]],"id":"418","properties":{"name":"Laos"}},{"type":"Polygon","arcs":[[-52,949,950,-359],[-58],[-59],[-362]],"id":"417","properties":{"name":"Kyrgyzstan"}},{"type":"MultiPolygon","arcs":[[[951]],[[-504,952,953]]],"id":"414","properties":{"name":"Kuwait"}},{"type":"Polygon","arcs":[[-486,-926,954,-866]],"properties":{"name":"Kosovo"}},{"type":"MultiPolygon","arcs":[[[955]],[[956]],[[957]],[[958]],[[959]],[[960]],[[961]],[[962]],[[963]],[[964]],[[965]],[[966]],[[967]],[[968]],[[969]],[[970]],[[971]],[[972]],[[973]]],"id":"296","properties":{"name":"Kiribati"}},{"type":"MultiPolygon","arcs":[[[974]],[[-298,-394,975,-441,976,-354]]],"id":"404","properties":{"name":"Kenya"}},{"type":"MultiPolygon","arcs":[[[977]],[[978]],[[979]],[[-56,-303,980,-544,981,-950]]],"id":"398","properties":{"name":"Kazakhstan"}},{"type":"Polygon","arcs":[[-366,982,-502,983,984,985,986]],"id":"400","properties":{"name":"Jordan"}},{"type":"MultiPolygon","arcs":[[[987]],[[988]],[[989]],[[990]],[[991]],[[992]],[[993]],[[994]],[[995]],[[996]],[[997]],[[998]],[[999]],[[1000]],[[1001]],[[1002]],[[1003]],[[1004]],[[1005]],[[1006]],[[1007]],[[1008]],[[1009]],[[1010]],[[1011]],[[1012]],[[1013]],[[1014]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]]],"id":"392","properties":{"name":"Japan"}},{"type":"Polygon","arcs":[[1021]],"id":"388","properties":{"name":"Jamaica"}},{"type":"MultiPolygon","arcs":[[[-373,1022,-475,1023,1024],[-37],[-512]],[[1025]],[[1026]],[[1027]],[[1028]],[[1029]],[[1030]],[[1031]]],"id":"380","properties":{"name":"Italy"}},{"type":"Polygon","arcs":[[-367,-987,1032,-985,1033,1034,1035,1036,-942]],"id":"376","properties":{"name":"Israel"}},{"type":"MultiPolygon","arcs":[[[-1036,1037,1038]],[[-986,-1033]]],"id":"275","properties":{"name":"Palestine"}},{"type":"MultiPolygon","arcs":[[[1039]],[[-269,1040]]],"id":"372","properties":{"name":"Ireland"}},{"type":"Polygon","arcs":[[-309,1041,1042,-953,-503,-983,-365]],"id":"368","properties":{"name":"Iraq"}},{"type":"MultiPolygon","arcs":[[[1043]],[[-301,1044,-759,1045,-1042,-308,1046,1047,1048,1049]]],"id":"364","properties":{"name":"Iran"}},{"type":"MultiPolygon","arcs":[[[1050]],[[1051]],[[1052]],[[1053]],[[1054]],[[1055]],[[1056]],[[1057]],[[1058]],[[1059]],[[1060]],[[1061]],[[1062]],[[1063]],[[1064]],[[1065]],[[1066]],[[1067]],[[1068]],[[1069]],[[1070]],[[1071]],[[1072]],[[1073]],[[1074]],[[1075]],[[1076]],[[-907,1077]],[[1078]],[[1079]],[[1080]],[[-330,1081,-333,1082]],[[1083]],[[1084]],[[1085]],[[-721,1086]],[[1087]],[[1088]],[[1089]],[[1090]],[[1091]],[[1092]],[[1093]],[[1094]],[[1095]],[[1096]],[[1097]],[[1098]],[[1099]],[[1100]],[[1101]],[[1102]],[[1103]],[[1104]],[[1105]],[[1106]],[[1107]],[[1108]],[[1109]],[[1110]],[[1111]],[[1112]],[[1113]],[[1114]],[[1115]],[[1116]],[[1117]],[[1118]],[[1119]],[[1120]],[[1121]],[[1122]],[[1123]],[[1124]],[[1125]],[[1126]],[[1127]],[[1128]],[[1129]],[[1130]],[[1131]],[[1132]],[[1133]],[[1134]],[[1135]],[[1136]],[[1137]],[[1138]],[[1139]],[[1140]],[[1141]],[[1142]],[[1143]],[[1144]],[[1145]],[[1146]],[[1147]],[[1148]],[[1149]],[[1150]],[[1151]],[[1152]],[[-918,1153]],[[1154]],[[1155]],[[1156]],[[1157]],[[1158]],[[1159]],[[1160]],[[1161]],[[1162]],[[1163]],[[1164]],[[1165]],[[1166]],[[1167]],[[1168]],[[1169]],[[1170]],[[1171]],[[1172]],[[1173]],[[1174]],[[1175]],[[1176]],[[1177]],[[1178]],[[1179]],[[1180]],[[1181]],[[1182]],[[1183]]],"id":"360","properties":{"name":"Indonesia"}},{"type":"MultiPolygon","arcs":[[[-757,1184,1185,-850,1186,1187,1188,1189,1190,1191]],[[1192]],[[1193]],[[1194]],[[1195]],[[1196]],[[1197]],[[1198]],[[1199]],[[1200]],[[1201]],[[1202]],[[1203]],[[1204]]],"id":"356","properties":{"name":"India"}},{"type":"Polygon","arcs":[[1205]],"id":"352","properties":{"name":"Iceland"}},{"type":"Polygon","arcs":[[-288,-643,-490,1206,-477,1207,-469]],"id":"348","properties":{"name":"Hungary"}},{"type":"MultiPolygon","arcs":[[[-817,1208,1209,1210,1211]],[[1212]],[[1213]]],"id":"340","properties":{"name":"Honduras"}},{"type":"MultiPolygon","arcs":[[[1214,1215]],[[1216]],[[1217]]],"id":"332","properties":{"name":"Haiti"}},{"type":"Polygon","arcs":[[-33,1218,-388,1219]],"id":"328","properties":{"name":"Guyana"}},{"type":"MultiPolygon","arcs":[[[-494,1220,1221]],[[1222]],[[1223]],[[1224]],[[1225]],[[1226]],[[1227]]],"id":"624","properties":{"name":"Guinea-Bissau"}},{"type":"Polygon","arcs":[[-481,1228,-1221,-493,-903,1229,-939]],"id":"324","properties":{"name":"Guinea"}},{"type":"Polygon","arcs":[[-876,1230,1231,-1211,1232,1233]],"id":"320","properties":{"name":"Guatemala"}},{"type":"Polygon","arcs":[[1234]],"id":"308","properties":{"name":"Grenada"}},{"type":"MultiPolygon","arcs":[[[1235]],[[1236]],[[1237]],[[1238]],[[1239]],[[1240]],[[1241]],[[1242]],[[1243]],[[1244]],[[1245]],[[1246]],[[1247]],[[1248]],[[1249]],[[1250]],[[1251]],[[1252]],[[1253]],[[1254]],[[1255]],[[1256]],[[1257]],[[1258]],[[1259]],[[1260]],[[1261]],[[1262]],[[1263]],[[1264]],[[1265]],[[1266]],[[1267]],[[1268]],[[1269]],[[1270]],[[1271]],[[1272]],[[1273]],[[-313,1274,1275,-924,1276]]],"id":"300","properties":{"name":"Greece"}},{"type":"Polygon","arcs":[[-327,1277,1278,1279,1280,1281]],"id":"288","properties":{"name":"Ghana"}},{"type":"MultiPolygon","arcs":[[[-375,1282,-927,1283,-835,1284,1285,1286,-656,1287,1288]],[[1289]],[[-658,1290]],[[1291]],[[1292]],[[1293]]],"id":"276","properties":{"name":"Germany"}},{"type":"Polygon","arcs":[[-305,1294,-547,1295,1296]],"id":"268","properties":{"name":"Georgia"}},{"type":"Polygon","arcs":[[-496,1297]],"id":"270","properties":{"name":"Gambia"}},{"type":"Polygon","arcs":[[1298,1299,1300,1301]],"id":"266","properties":{"name":"Gabon"}},{"type":"MultiPolygon","arcs":[[[1302]],[[-374,-1025,1303,-873,1304,-411,1305,-409,1306,1307,-928,-1283]],[[1308]],[[1309]],[[1310]],[[1311]],[[1312]],[[1313]],[[1314]],[[-386,1315,1316]]],"id":"250","properties":{"name":"France"}},{"type":"MultiPolygon","arcs":[[[1317]],[[1318]]],"id":"666","properties":{"name":"St. Pierre and Miquelon"}},{"type":"MultiPolygon","arcs":[[[1319]],[[1320]]],"id":"876","properties":{"name":"Wallis and Futuna Is."}},{"type":"Polygon","arcs":[[1321,1322]],"id":"663","properties":{"name":"St-Martin"}},{"type":"Polygon","arcs":[[1323]],"id":"652","properties":{"name":"St-Barthélemy"}},{"type":"MultiPolygon","arcs":[[[1324]],[[1325]],[[1326]],[[1327]],[[1328]],[[1329]],[[1330]],[[1331]],[[1332]],[[1333]],[[1334]],[[1335]],[[1336]],[[1337]],[[1338]],[[1339]],[[1340]],[[1341]],[[1342]],[[1343]],[[1344]]],"id":"258","properties":{"name":"Fr. Polynesia"}},{"type":"MultiPolygon","arcs":[[[1345]],[[1346]],[[1347]],[[1348]],[[1349]],[[1350]]],"id":"540","properties":{"name":"New Caledonia"}},{"type":"MultiPolygon","arcs":[[[1351]],[[1352]],[[1353]]],"id":"260","properties":{"name":"Fr. S. Antarctic Lands"}},{"type":"MultiPolygon","arcs":[[[1354]],[[1355]],[[1356]]],"id":"248","properties":{"name":"Åland"}},{"type":"MultiPolygon","arcs":[[[-379,-766,-553,1357]],[[1358]],[[1359]],[[1360]],[[1361]],[[1362]],[[1363]],[[1364]]],"id":"246","properties":{"name":"Finland"}},{"type":"MultiPolygon","arcs":[[[1365]],[[1366]],[[1367]],[[1368]],[[1369]],[[1370]],[[1371]],[[1372]],[[1373]],[[1374]],[[1375]],[[1376]],[[1377]],[[1378]],[[1379]],[[1380]],[[1381]],[[1382]],[[1383]],[[1384]]],"id":"242","properties":{"name":"Fiji"}},{"type":"Polygon","arcs":[[-393,-401,1385,1386,-445,-442,-976]],"id":"231","properties":{"name":"Ethiopia"}},{"type":"MultiPolygon","arcs":[[[-945,1387,-551]],[[1388]],[[1389]],[[1390]]],"id":"233","properties":{"name":"Estonia"}},{"type":"MultiPolygon","arcs":[[[-400,1391,1392,-1386]],[[1393]],[[1394]]],"id":"232","properties":{"name":"Eritrea"}},{"type":"MultiPolygon","arcs":[[[1395]],[[-1301,1396,1397]]],"id":"226","properties":{"name":"Eq. Guinea"}},{"type":"Polygon","arcs":[[-1210,1398,-1233]],"id":"222","properties":{"name":"El Salvador"}},{"type":"Polygon","arcs":[[-398,-936,1399,-1038,-1035,1400]],"id":"818","properties":{"name":"Egypt"}},{"type":"MultiPolygon","arcs":[[[-714,1401,1402]],[[1403]],[[1404]],[[1405]],[[1406]],[[1407]],[[1408]],[[1409]],[[1410]]],"id":"218","properties":{"name":"Ecuador"}},{"type":"Polygon","arcs":[[-1215,1411]],"id":"214","properties":{"name":"Dominican Rep."}},{"type":"Polygon","arcs":[[1412]],"id":"212","properties":{"name":"Dominica"}},{"type":"Polygon","arcs":[[-446,-1387,-1393,1413]],"id":"262","properties":{"name":"Djibouti"}},{"type":"MultiPolygon","arcs":[[[1414]],[[1415]],[[1416]],[[1417]],[[1418]],[[1419]],[[1420]],[[1421]],[[1422]],[[1423]],[[1424]],[[1425]],[[1426]],[[1427]],[[1428]],[[1429]],[[1430]]],"id":"304","properties":{"name":"Greenland"}},{"type":"MultiPolygon","arcs":[[[1431]],[[1432]],[[1433]],[[1434]],[[1435]]],"id":"234","properties":{"name":"Faeroe Is."}},{"type":"MultiPolygon","arcs":[[[1436]],[[-1286,1437]],[[1438]],[[1439]],[[1440]],[[1441]],[[1442]],[[1443]],[[1444]],[[1445]],[[1446]],[[1447]]],"id":"208","properties":{"name":"Denmark"}},{"type":"Polygon","arcs":[[-471,1448,-1288,-655]],"id":"203","properties":{"name":"Czechia"}},{"type":"Polygon","arcs":[[1449,1450]],"properties":{"name":"N. Cyprus"}},{"type":"Polygon","arcs":[[-1450,1451]],"id":"196","properties":{"name":"Cyprus"}},{"type":"MultiPolygon","arcs":[[[1452]],[[1453]],[[1454]],[[1455]],[[1456]],[[1457]],[[1458]]],"id":"192","properties":{"name":"Cuba"}},{"type":"MultiPolygon","arcs":[[[-473,-1207,-489,1459,1460]],[[1461]],[[1462]],[[1463]],[[1464]],[[1465]],[[1466]],[[1467]],[[1468]],[[1469]],[[1470]],[[1471]],[[-869,1472,1473]]],"id":"191","properties":{"name":"Croatia"}},{"type":"MultiPolygon","arcs":[[[-1279,1474]],[[-902,1475,-1281,1476,-940,-1230]]],"id":"384","properties":{"name":"Côte d'Ivoire"}},{"type":"Polygon","arcs":[[-748,1477,-815,1478]],"id":"188","properties":{"name":"Costa Rica"}},{"type":"Polygon","arcs":[[-7,1479,1480,1481,1482,1483,-390,-296,-522,1484,-351]],"id":"180","properties":{"name":"Dem. Rep. Congo"}},{"type":"Polygon","arcs":[[-1299,1485,1486,-1483,1487,1488]],"id":"178","properties":{"name":"Congo"}},{"type":"MultiPolygon","arcs":[[[1489]],[[1490]],[[1491]]],"id":"174","properties":{"name":"Comoros"}},{"type":"MultiPolygon","arcs":[[[-35,1492,-715,-1403,1493,-746,1494]],[[1495]]],"id":"170","properties":{"name":"Colombia"}},{"type":"MultiPolygon","arcs":[[[1496]],[[1497]],[[1498]],[[1499]],[[1500]],[[1501]],[[1502]],[[1503]],[[1504]],[[1505]],[[1506]],[[-22,-949,1507,-1189,1508,-1187,-851,-1186,1509,-761,1510,-360,-951,-982,-543,-871,-541,-799,1511,1512,1513,1514,1515]],[[1516]]],"id":"156","properties":{"name":"China"}},{"type":"Polygon","arcs":[[-1515,1517]],"id":"446","properties":{"name":"Macao"}},{"type":"MultiPolygon","arcs":[[[-1513,1518]],[[1519]],[[1520]]],"id":"344","properties":{"name":"Hong Kong"}},{"type":"MultiPolygon","arcs":[[[1521]],[[1522]],[[-712,1523,1524,1525]],[[1526,1527]],[[1528]],[[1529]],[[1530]],[[1531]],[[1532]],[[1533]],[[1534]],[[1535]],[[1536]],[[1537]],[[1538]],[[1539]],[[1540]],[[1541]],[[1542]],[[1543]],[[1544]],[[1545]],[[1546]],[[1547]],[[1548]],[[1549]],[[1550]],[[1551]],[[1552]],[[1553]],[[1554]]],"id":"152","properties":{"name":"Chile"}},{"type":"Polygon","arcs":[[-396,1555,1556,-803,-813,-937]],"id":"148","properties":{"name":"Chad"}},{"type":"Polygon","arcs":[[-391,-1484,-1487,1557,-1556,-395]],"id":"140","properties":{"name":"Central African Rep."}},{"type":"MultiPolygon","arcs":[[[1558]],[[1559]],[[1560]],[[1561]],[[1562]],[[1563]],[[1564]],[[1565]]],"id":"132","properties":{"name":"Cabo Verde"}},{"type":"MultiPolygon","arcs":[[[1566]],[[1567]],[[1568]],[[-106,1569,-169,1570]],[[1571]],[[1572]],[[1573]],[[1574]],[[1575]],[[1576]],[[1577]],[[1578]],[[1579]],[[1580]],[[1581]],[[1582]],[[1583]],[[1584]],[[1585]],[[1586]],[[1587]],[[1588]],[[1589]],[[-165,1590]],[[1591]],[[1592]],[[1593]],[[1594]],[[1595]],[[1596]],[[1597]],[[1598]],[[1599]],[[1600]],[[1601]],[[1602]],[[1603]],[[1604]],[[1605]],[[1606]],[[1607]],[[1608]],[[1609]],[[1610]],[[1611]],[[1612]],[[1613]],[[1614]],[[-104,1615]],[[1616]],[[1617]],[[1618]],[[1619]],[[1620]],[[1621]],[[1622]],[[1623]],[[1624]],[[1625]],[[1626]],[[1627]],[[1628]],[[1629]],[[1630]],[[1631]],[[1632]],[[1633]],[[1634]],[[1635]],[[1636]],[[1637]],[[1638]],[[1639]],[[1640]],[[1641]],[[1642]],[[1643]],[[1644]],[[1645]],[[1646]],[[1647]],[[1648]],[[1649]],[[1650]],[[1651]],[[1652]],[[1653]],[[1654]],[[1655]],[[1656]],[[1657]],[[1658]],[[1659]],[[1660]],[[1661]],[[1662]],[[1663]],[[1664]],[[1665]],[[1666]],[[1667]],[[1668]],[[1669]],[[1670]],[[1671]],[[1672]],[[1673]],[[1674]],[[1675]],[[1676]],[[1677]],[[1678]],[[1679]],[[1680]],[[1681]],[[1682]],[[1683]],[[1684]],[[1685]],[[1686]],[[1687]],[[1688]],[[1689]],[[1690]],[[1691]],[[1692]],[[1693]],[[1694]],[[1695]],[[1696]],[[1697]],[[1698]],[[1699]],[[1700]],[[1701]],[[1702]],[[1703]],[[1704]],[[1705]],[[1706]],[[1707]]],"id":"124","properties":{"name":"Canada"}},{"type":"Polygon","arcs":[[-804,-1557,-1558,-1486,-1302,-1398,1708]],"id":"120","properties":{"name":"Cameroon"}},{"type":"MultiPolygon","arcs":[[[1709]],[[1710]],[[-20,1711,-338,-947]]],"id":"116","properties":{"name":"Cambodia"}},{"type":"MultiPolygon","arcs":[[[-342,1712,1713,-1190,-1508,-948]],[[1714]],[[1715]],[[1716]],[[1717]],[[1718]],[[1719]],[[1720]],[[1721]],[[1722]],[[1723]],[[1724]],[[1725]],[[1726]],[[1727]],[[1728]],[[1729]],[[1730]],[[1731]]],"id":"104","properties":{"name":"Myanmar"}},{"type":"Polygon","arcs":[[-352,-1485,-521]],"id":"108","properties":{"name":"Burundi"}},{"type":"Polygon","arcs":[[-328,-1282,-1476,-901,-809,1732]],"id":"854","properties":{"name":"Burkina Faso"}},{"type":"Polygon","arcs":[[-314,-1277,-923,-484,-642,1733]],"id":"100","properties":{"name":"Bulgaria"}},{"type":"MultiPolygon","arcs":[[[-910,1734]],[[-909,1735]]],"id":"096","properties":{"name":"Brunei"}},{"type":"MultiPolygon","arcs":[[[-34,-1220,-387,-1317,1736,-62,1737,-716,1738,-710,-1493]],[[1739]],[[1740]],[[1741]],[[1742]],[[1743]],[[1744]],[[1745]],[[1746]],[[1747]],[[1748]],[[1749]],[[1750]],[[1751]],[[1752]],[[1753]],[[1754]]],"id":"076","properties":{"name":"Brazil"}},{"type":"Polygon","arcs":[[-2,-438,-853]],"id":"072","properties":{"name":"Botswana"}},{"type":"Polygon","arcs":[[-870,-1474,1755,-1460,-488]],"id":"070","properties":{"name":"Bosnia and Herz."}},{"type":"Polygon","arcs":[[-711,-1739,-718,1756,-1524]],"id":"068","properties":{"name":"Bolivia"}},{"type":"Polygon","arcs":[[-1188,-1509]],"id":"064","properties":{"name":"Bhutan"}},{"type":"Polygon","arcs":[[-325,-1733,-808,-806,1757]],"id":"204","properties":{"name":"Benin"}},{"type":"MultiPolygon","arcs":[[[-875,1758,-1231]],[[1759]],[[1760]]],"id":"084","properties":{"name":"Belize"}},{"type":"Polygon","arcs":[[-833,-1284,-929,-1308,1761,-836]],"id":"056","properties":{"name":"Belgium"}},{"type":"Polygon","arcs":[[-291,-661,-933,-946,-549]],"id":"112","properties":{"name":"Belarus"}},{"type":"Polygon","arcs":[[1762]],"id":"052","properties":{"name":"Barbados"}},{"type":"MultiPolygon","arcs":[[[-1191,-1714,1763]],[[1764]],[[1765]],[[1766]],[[1767]],[[1768]],[[1769]]],"id":"050","properties":{"name":"Bangladesh"}},{"type":"Polygon","arcs":[[1770]],"id":"048","properties":{"name":"Bahrain"}},{"type":"MultiPolygon","arcs":[[[1771]],[[1772]],[[1773]],[[1774]],[[1775]],[[1776]],[[1777]],[[1778]],[[1779]],[[1780]],[[1781]],[[1782]],[[1783]],[[1784]],[[1785]]],"id":"044","properties":{"name":"Bahamas"}},{"type":"MultiPolygon","arcs":[[[-307,1786,-1047]],[[-1049,1787,-1296,-546,1788],[1789]],[[1790]]],"id":"031","properties":{"name":"Azerbaijan"}},{"type":"Polygon","arcs":[[-370,-1289,-1449,-470,-1208,-476,-1023,-372,-934]],"id":"040","properties":{"name":"Austria"}},{"type":"MultiPolygon","arcs":[[[1791]],[[1792]],[[1793]],[[1794]],[[1795]],[[1796]],[[1797]],[[1798]],[[1799]],[[1800]],[[1801]],[[1802]],[[1803]],[[1804]],[[1805]],[[1806]],[[1807]],[[1808]],[[1809]],[[1810]],[[1811]],[[1812]],[[1813]],[[1814]],[[1815]],[[1816]],[[1817]],[[1818]],[[1819]],[[1820]],[[1821]],[[1822]],[[1823]],[[1824]],[[1825]],[[1826]],[[1827]],[[1828]],[[1829]],[[1830]],[[1831]],[[1832]]],"id":"036","properties":{"name":"Australia"}},{"type":"MultiPolygon","arcs":[[[1833]],[[1834]],[[1835]]],"properties":{"name":"Indian Ocean Ter."}},{"type":"Polygon","arcs":[[1836]],"id":"334","properties":{"name":"Heard I. and McDonald Is."}},{"type":"Polygon","arcs":[[1837]],"id":"574","properties":{"name":"Norfolk Island"}},{"type":"Polygon","arcs":[[1838]],"id":"036","properties":{"name":"Ashmore and Cartier Is."}},{"type":"MultiPolygon","arcs":[[[-306,-1297,-1788,-1048,-1787],[-1791]],[[-1790]]],"id":"051","properties":{"name":"Armenia"}},{"type":"MultiPolygon","arcs":[[[-61,1839,-1525,-1757,-717,-1738]],[[-1527,1840]],[[1841]],[[1842]]],"id":"032","properties":{"name":"Argentina"}},{"type":"MultiPolygon","arcs":[[[1843]],[[1844]]],"id":"028","properties":{"name":"Antigua and Barb."}},{"type":"MultiPolygon","arcs":[[[-1482,1845,-1488]],[[-6,-855,1846,-1480]]],"id":"024","properties":{"name":"Angola"}},{"type":"Polygon","arcs":[[-410,-1306]],"id":"020","properties":{"name":"Andorra"}},{"type":"Polygon","arcs":[[-316,-938,-811,-900,-896,-863,-860,1847]],"id":"012","properties":{"name":"Algeria"}},{"type":"Polygon","arcs":[[-867,-955,-925,-1276,1848]],"id":"008","properties":{"name":"Albania"}},{"type":"Polygon","arcs":[[-54,-361,-1511,-760,-1045,-300]],"id":"004","properties":{"name":"Afghanistan"}},{"type":"Polygon","arcs":[[-756,-1510,-1185]],"properties":{"name":"Siachen Glacier"}},{"type":"MultiPolygon","arcs":[[[1849]],[[1850]],[[1851],[1852]],[[1853]],[[1854]],[[1855]],[[1856]],[[1857]],[[1858]],[[1859]],[[1860]],[[1861]],[[1862]],[[1863]],[[1864]],[[1865]],[[1866]],[[1867]],[[1868]],[[1869]],[[1870]],[[1871]],[[1872]],[[1873]],[[1874]],[[1875]],[[1876]],[[1877]],[[1878]],[[1879]],[[1880]],[[1881]],[[1882]],[[1883]],[[1884]],[[1885]],[[1886]],[[1887]],[[1888]],[[1889]],[[1890]],[[1891]],[[1892]],[[1893]],[[1894]],[[1895]],[[1896]],[[1897]],[[1898]],[[1899]],[[1900]],[[1901]],[[1902]],[[1903]],[[1904]],[[1905]],[[1906]],[[1907]],[[1908]],[[1909]],[[1910]],[[1911]],[[1912]],[[1913]],[[1914]],[[1915]],[[1916]],[[1917]],[[1918]],[[1919]],[[1920]],[[1921]],[[1922]],[[1923]],[[1924]],[[1925]],[[1926]],[[1927]],[[1928]],[[1929]],[[1930]],[[1931]],[[1932]],[[1933]],[[1934]],[[1935]],[[1936]],[[1937]],[[1938]],[[1939]],[[1940]],[[1941]],[[1942]],[[1943]],[[1944]],[[1945]],[[1946]],[[1947]],[[1948]],[[1949]],[[1950]],[[1951]],[[1952]],[[1953]],[[1954]],[[1955]],[[1956]],[[1957]]],"id":"010","properties":{"name":"Antarctica"}},{"type":"Polygon","arcs":[[-1322,1958]],"id":"534","properties":{"name":"Sint Maarten"}}]},"land":{"type":"GeometryCollection","geometries":[{"type":"MultiPolygon","arcs":[[[853,1846,1480,1845,1488,1299,1396,1708,804,1757,325,1277,1474,1279,1476,940,479,1228,1221,494,1297,496,894,864,861,1847,316,934,1399,1038,1036,942,368,310,1294,547,281,639,283,640,1733,311,1274,1848,867,1472,1755,1460,473,1023,1303,871,1304,411,646,413,1306,1761,836,833,1284,1437,1286,656,1290,658,637,929,634,930,943,1387,551,1357,379,764,554,799,422,797,1511,1518,1513,1517,1515,18,1711,338,905,340,1712,1763,1191,757,1045,1042,953,504,644,506,274,763,271,762,10,500,983,1033,1400,398,1391,1413,446,443,976,354,856,435],[980,544,1788,1049,301]],[[13]],[[14]],[[15]],[[16]],[[17]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[388,1315,1736,59,1839,1525,712,1401,1493,746,1477,815,1208,1398,1233,876,167,1570,102,1615,104,1569,1590,165,873,1758,1231,1211,813,1478,748,1494,35,1218]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[62]],[[63]],[[64]],[[65]],[[66]],[[67]],[[68]],[[69]],[[70]],[[71]],[[72]],[[73]],[[74]],[[75]],[[76]],[[77]],[[78]],[[79]],[[80]],[[81]],[[82]],[[83]],[[84]],[[85]],[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138]],[[139]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]],[[206]],[[207]],[[208]],[[209]],[[210]],[[211]],[[212]],[[213]],[[214]],[[215]],[[216]],[[217]],[[218]],[[219]],[[220]],[[221]],[[222]],[[223]],[[224]],[[225]],[[226]],[[227]],[[228]],[[229]],[[230]],[[231]],[[232]],[[233]],[[234]],[[235]],[[236]],[[237]],[[238]],[[239]],[[240]],[[241]],[[242]],[[243]],[[244]],[[245]],[[246]],[[247]],[[248]],[[249]],[[250]],[[251]],[[252]],[[253]],[[254]],[[255]],[[256]],[[257]],[[258]],[[259]],[[260]],[[261]],[[262]],[[263]],[[264]],[[265]],[[266]],[[267]],[[269,1040]],[[270]],[[277]],[[278]],[[279]],[[280]],[[292]],[[298]],[[303]],[[317]],[[318]],[[319]],[[320]],[[321]],[[322]],[[323]],[[328]],[[1082,330,1081,331]],[[333]],[[334]],[[335]],[[342]],[[343]],[[344]],[[345]],[[346]],[[347]],[[348]],[[349]],[[357]],[[362]],[[363]],[[375]],[[376]],[[380]],[[381]],[[382]],[[401]],[[402]],[[403]],[[404]],[[405]],[[406]],[[407]],[[414]],[[415]],[[416]],[[417]],[[418]],[[419]],[[420]],[[423]],[[424]],[[425]],[[426]],[[427]],[[428]],[[429]],[[430]],[[431]],[[432]],[[439]],[[447]],[[448]],[[449]],[[450]],[[451]],[[452]],[[453]],[[454]],[[455]],[[456]],[[457]],[[458]],[[459]],[[460]],[[461]],[[462]],[[463]],[[464]],[[465]],[[466]],[[467]],[[477]],[[481]],[[482]],[[498]],[[499]],[[508]],[[509]],[[510]],[[512]],[[513]],[[514]],[[515]],[[516]],[[517]],[[518]],[[519]],[[522]],[[523]],[[524]],[[525]],[[526]],[[527]],[[528]],[[529]],[[530]],[[531]],[[532]],[[533]],[[534]],[[535]],[[536]],[[537]],[[538]],[[555]],[[556]],[[557]],[[558]],[[559]],[[560]],[[561]],[[562]],[[563]],[[564]],[[565]],[[566]],[[567]],[[568]],[[569]],[[570]],[[571]],[[572]],[[573]],[[574]],[[575]],[[576]],[[577]],[[578]],[[579]],[[580]],[[581]],[[582]],[[583]],[[584]],[[585]],[[586]],[[587]],[[588]],[[589]],[[590]],[[591]],[[592]],[[593]],[[594]],[[595]],[[596]],[[597]],[[598]],[[599]],[[600]],[[601]],[[602]],[[603]],[[604]],[[605]],[[606]],[[607]],[[608]],[[609]],[[610]],[[611]],[[612]],[[613]],[[614]],[[615]],[[616]],[[617]],[[618]],[[619]],[[620]],[[621]],[[622]],[[623]],[[624]],[[625]],[[626]],[[627]],[[628]],[[629]],[[630]],[[631]],[[632]],[[633]],[[645]],[[647]],[[648]],[[649]],[[650]],[[651]],[[652]],[[653]],[[661]],[[662]],[[663]],[[664]],[[665]],[[666]],[[667]],[[668]],[[669]],[[670]],[[671]],[[672]],[[673]],[[674]],[[675]],[[676]],[[677]],[[678]],[[679]],[[680]],[[681]],[[682]],[[683]],[[684]],[[685]],[[686]],[[687]],[[688]],[[689]],[[690]],[[691]],[[692]],[[693]],[[694]],[[695]],[[696]],[[697]],[[698]],[[699]],[[700]],[[701]],[[702]],[[703]],[[704]],[[705]],[[706]],[[707]],[[708]],[[718]],[[719]],[[721,1086]],[[722]],[[723]],[[724]],[[725]],[[726]],[[727]],[[728]],[[729]],[[730]],[[731]],[[732]],[[733]],[[734]],[[735]],[[736]],[[737]],[[738]],[[739]],[[740]],[[741]],[[742]],[[743]],[[744]],[[749]],[[750]],[[751]],[[752]],[[753]],[[754]],[[761]],[[766]],[[767]],[[768]],[[769]],[[770]],[[771]],[[772]],[[773]],[[774]],[[775]],[[776]],[[777]],[[778]],[[779]],[[780]],[[781]],[[782]],[[783]],[[784]],[[785]],[[786]],[[787]],[[788]],[[789]],[[790]],[[791]],[[792]],[[793]],[[794]],[[795]],[[796]],[[800]],[[801]],[[817]],[[818]],[[819]],[[820]],[[821]],[[822]],[[823]],[[824]],[[825]],[[826]],[[827]],[[828]],[[829]],[[830]],[[831]],[[837]],[[838]],[[839]],[[840]],[[841]],[[842]],[[843]],[[844]],[[845]],[[846]],[[847]],[[848]],[[851]],[[877]],[[878]],[[879]],[[880]],[[881]],[[882]],[[883]],[[884]],[[885]],[[886]],[[887]],[[888]],[[889]],[[890]],[[891]],[[892]],[[893]],[[897]],[[898]],[[903]],[[904]],[[907,1735,1734,910,1077]],[[911]],[[912]],[[913]],[[914]],[[915]],[[916]],[[918,1153]],[[919]],[[920]],[[921]],[[951]],[[955]],[[956]],[[957]],[[958]],[[959]],[[960]],[[961]],[[962]],[[963]],[[964]],[[965]],[[966]],[[967]],[[968]],[[969]],[[970]],[[971]],[[972]],[[973]],[[974]],[[977]],[[978]],[[979]],[[987]],[[988]],[[989]],[[990]],[[991]],[[992]],[[993]],[[994]],[[995]],[[996]],[[997]],[[998]],[[999]],[[1000]],[[1001]],[[1002]],[[1003]],[[1004]],[[1005]],[[1006]],[[1007]],[[1008]],[[1009]],[[1010]],[[1011]],[[1012]],[[1013]],[[1014]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]],[[1021]],[[1025]],[[1026]],[[1027]],[[1028]],[[1029]],[[1030]],[[1031]],[[1039]],[[1043]],[[1050]],[[1051]],[[1052]],[[1053]],[[1054]],[[1055]],[[1056]],[[1057]],[[1058]],[[1059]],[[1060]],[[1061]],[[1062]],[[1063]],[[1064]],[[1065]],[[1066]],[[1067]],[[1068]],[[1069]],[[1070]],[[1071]],[[1072]],[[1073]],[[1074]],[[1075]],[[1076]],[[1078]],[[1079]],[[1080]],[[1083]],[[1084]],[[1085]],[[1087]],[[1088]],[[1089]],[[1090]],[[1091]],[[1092]],[[1093]],[[1094]],[[1095]],[[1096]],[[1097]],[[1098]],[[1099]],[[1100]],[[1101]],[[1102]],[[1103]],[[1104]],[[1105]],[[1106]],[[1107]],[[1108]],[[1109]],[[1110]],[[1111]],[[1112]],[[1113]],[[1114]],[[1115]],[[1116]],[[1117]],[[1118]],[[1119]],[[1120]],[[1121]],[[1122]],[[1123]],[[1124]],[[1125]],[[1126]],[[1127]],[[1128]],[[1129]],[[1130]],[[1131]],[[1132]],[[1133]],[[1134]],[[1135]],[[1136]],[[1137]],[[1138]],[[1139]],[[1140]],[[1141]],[[1142]],[[1143]],[[1144]],[[1145]],[[1146]],[[1147]],[[1148]],[[1149]],[[1150]],[[1151]],[[1152]],[[1154]],[[1155]],[[1156]],[[1157]],[[1158]],[[1159]],[[1160]],[[1161]],[[1162]],[[1163]],[[1164]],[[1165]],[[1166]],[[1167]],[[1168]],[[1169]],[[1170]],[[1171]],[[1172]],[[1173]],[[1174]],[[1175]],[[1176]],[[1177]],[[1178]],[[1179]],[[1180]],[[1181]],[[1182]],[[1183]],[[1192]],[[1193]],[[1194]],[[1195]],[[1196]],[[1197]],[[1198]],[[1199]],[[1200]],[[1201]],[[1202]],[[1203]],[[1204]],[[1205]],[[1212]],[[1213]],[[1215,1411]],[[1216]],[[1217]],[[1222]],[[1223]],[[1224]],[[1225]],[[1226]],[[1227]],[[1234]],[[1235]],[[1236]],[[1237]],[[1238]],[[1239]],[[1240]],[[1241]],[[1242]],[[1243]],[[1244]],[[1245]],[[1246]],[[1247]],[[1248]],[[1249]],[[1250]],[[1251]],[[1252]],[[1253]],[[1254]],[[1255]],[[1256]],[[1257]],[[1258]],[[1259]],[[1260]],[[1261]],[[1262]],[[1263]],[[1264]],[[1265]],[[1266]],[[1267]],[[1268]],[[1269]],[[1270]],[[1271]],[[1272]],[[1273]],[[1289]],[[1291]],[[1292]],[[1293]],[[1302]],[[1308]],[[1309]],[[1310]],[[1311]],[[1312]],[[1313]],[[1314]],[[1317]],[[1318]],[[1319]],[[1320]],[[1322,1958]],[[1323]],[[1324]],[[1325]],[[1326]],[[1327]],[[1328]],[[1329]],[[1330]],[[1331]],[[1332]],[[1333]],[[1334]],[[1335]],[[1336]],[[1337]],[[1338]],[[1339]],[[1340]],[[1341]],[[1342]],[[1343]],[[1344]],[[1345]],[[1346]],[[1347]],[[1348]],[[1349]],[[1350]],[[1351]],[[1352]],[[1353]],[[1354]],[[1355]],[[1356]],[[1358]],[[1359]],[[1360]],[[1361]],[[1362]],[[1363]],[[1364]],[[1365]],[[1366]],[[1367]],[[1368]],[[1369]],[[1370]],[[1371]],[[1372]],[[1373]],[[1374]],[[1375]],[[1376]],[[1377]],[[1378]],[[1379]],[[1380]],[[1381]],[[1382]],[[1383]],[[1384]],[[1388]],[[1389]],[[1390]],[[1393]],[[1394]],[[1395]],[[1403]],[[1404]],[[1405]],[[1406]],[[1407]],[[1408]],[[1409]],[[1410]],[[1412]],[[1414]],[[1415]],[[1416]],[[1417]],[[1418]],[[1419]],[[1420]],[[1421]],[[1422]],[[1423]],[[1424]],[[1425]],[[1426]],[[1427]],[[1428]],[[1429]],[[1430]],[[1431]],[[1432]],[[1433]],[[1434]],[[1435]],[[1436]],[[1438]],[[1439]],[[1440]],[[1441]],[[1442]],[[1443]],[[1444]],[[1445]],[[1446]],[[1447]],[[1450,1451]],[[1452]],[[1453]],[[1454]],[[1455]],[[1456]],[[1457]],[[1458]],[[1461]],[[1462]],[[1463]],[[1464]],[[1465]],[[1466]],[[1467]],[[1468]],[[1469]],[[1470]],[[1471]],[[1489]],[[1490]],[[1491]],[[1495]],[[1496]],[[1497]],[[1498]],[[1499]],[[1500]],[[1501]],[[1502]],[[1503]],[[1504]],[[1505]],[[1506]],[[1516]],[[1519]],[[1520]],[[1521]],[[1522]],[[1527,1840]],[[1528]],[[1529]],[[1530]],[[1531]],[[1532]],[[1533]],[[1534]],[[1535]],[[1536]],[[1537]],[[1538]],[[1539]],[[1540]],[[1541]],[[1542]],[[1543]],[[1544]],[[1545]],[[1546]],[[1547]],[[1548]],[[1549]],[[1550]],[[1551]],[[1552]],[[1553]],[[1554]],[[1558]],[[1559]],[[1560]],[[1561]],[[1562]],[[1563]],[[1564]],[[1565]],[[1566]],[[1567]],[[1568]],[[1571]],[[1572]],[[1573]],[[1574]],[[1575]],[[1576]],[[1577]],[[1578]],[[1579]],[[1580]],[[1581]],[[1582]],[[1583]],[[1584]],[[1585]],[[1586]],[[1587]],[[1588]],[[1589]],[[1591]],[[1592]],[[1593]],[[1594]],[[1595]],[[1596]],[[1597]],[[1598]],[[1599]],[[1600]],[[1601]],[[1602]],[[1603]],[[1604]],[[1605]],[[1606]],[[1607]],[[1608]],[[1609]],[[1610]],[[1611]],[[1612]],[[1613]],[[1614]],[[1616]],[[1617]],[[1618]],[[1619]],[[1620]],[[1621]],[[1622]],[[1623]],[[1624]],[[1625]],[[1626]],[[1627]],[[1628]],[[1629]],[[1630]],[[1631]],[[1632]],[[1633]],[[1634]],[[1635]],[[1636]],[[1637]],[[1638]],[[1639]],[[1640]],[[1641]],[[1642]],[[1643]],[[1644]],[[1645]],[[1646]],[[1647]],[[1648]],[[1649]],[[1650]],[[1651]],[[1652]],[[1653]],[[1654]],[[1655]],[[1656]],[[1657]],[[1658]],[[1659]],[[1660]],[[1661]],[[1662]],[[1663]],[[1664]],[[1665]],[[1666]],[[1667]],[[1668]],[[1669]],[[1670]],[[1671]],[[1672]],[[1673]],[[1674]],[[1675]],[[1676]],[[1677]],[[1678]],[[1679]],[[1680]],[[1681]],[[1682]],[[1683]],[[1684]],[[1685]],[[1686]],[[1687]],[[1688]],[[1689]],[[1690]],[[1691]],[[1692]],[[1693]],[[1694]],[[1695]],[[1696]],[[1697]],[[1698]],[[1699]],[[1700]],[[1701]],[[1702]],[[1703]],[[1704]],[[1705]],[[1706]],[[1707]],[[1709]],[[1710]],[[1714]],[[1715]],[[1716]],[[1717]],[[1718]],[[1719]],[[1720]],[[1721]],[[1722]],[[1723]],[[1724]],[[1725]],[[1726]],[[1727]],[[1728]],[[1729]],[[1730]],[[1731]],[[1739]],[[1740]],[[1741]],[[1742]],[[1743]],[[1744]],[[1745]],[[1746]],[[1747]],[[1748]],[[1749]],[[1750]],[[1751]],[[1752]],[[1753]],[[1754]],[[1759]],[[1760]],[[1762]],[[1764]],[[1765]],[[1766]],[[1767]],[[1768]],[[1769]],[[1770]],[[1771]],[[1772]],[[1773]],[[1774]],[[1775]],[[1776]],[[1777]],[[1778]],[[1779]],[[1780]],[[1781]],[[1782]],[[1783]],[[1784]],[[1785]],[[1791]],[[1792]],[[1793]],[[1794]],[[1795]],[[1796]],[[1797]],[[1798]],[[1799]],[[1800]],[[1801]],[[1802]],[[1803]],[[1804]],[[1805]],[[1806]],[[1807]],[[1808]],[[1809]],[[1810]],[[1811]],[[1812]],[[1813]],[[1814]],[[1815]],[[1816]],[[1817]],[[1818]],[[1819]],[[1820]],[[1821]],[[1822]],[[1823]],[[1824]],[[1825]],[[1826]],[[1827]],[[1828]],[[1829]],[[1830]],[[1831]],[[1832]],[[1833]],[[1834]],[[1835]],[[1836]],[[1837]],[[1838]],[[1841]],[[1842]],[[1843]],[[1844]],[[1849]],[[1850]],[[1852],[1851]],[[1853]],[[1854]],[[1855]],[[1856]],[[1857]],[[1858]],[[1859]],[[1860]],[[1861]],[[1862]],[[1863]],[[1864]],[[1865]],[[1866]],[[1867]],[[1868]],[[1869]],[[1870]],[[1871]],[[1872]],[[1873]],[[1874]],[[1875]],[[1876]],[[1877]],[[1878]],[[1879]],[[1880]],[[1881]],[[1882]],[[1883]],[[1884]],[[1885]],[[1886]],[[1887]],[[1888]],[[1889]],[[1890]],[[1891]],[[1892]],[[1893]],[[1894]],[[1895]],[[1896]],[[1897]],[[1898]],[[1899]],[[1900]],[[1901]],[[1902]],[[1903]],[[1904]],[[1905]],[[1906]],[[1907]],[[1908]],[[1909]],[[1910]],[[1911]],[[1912]],[[1913]],[[1914]],[[1915]],[[1916]],[[1917]],[[1918]],[[1919]],[[1920]],[[1921]],[[1922]],[[1923]],[[1924]],[[1925]],[[1926]],[[1927]],[[1928]],[[1929]],[[1930]],[[1931]],[[1932]],[[1933]],[[1934]],[[1935]],[[1936]],[[1937]],[[1938]],[[1939]],[[1940]],[[1941]],[[1942]],[[1943]],[[1944]],[[1945]],[[1946]],[[1947]],[[1948]],[[1949]],[[1950]],[[1951]],[[1952]],[[1953]],[[1954]],[[1955]],[[1956]],[[1957]]]}]}}`),mz1=JSON.parse("[[[58690,38938],[-25,33],[-34,22],[-44,9],[-57,-4],[-69,-18],[-75,22],[-80,62],[-67,22],[-79,-27],[-4,-1]],[[58156,39058],[-13,21],[-22,45],[-36,8],[-10,11],[-8,16],[-6,22],[-2,23],[6,75],[-3,8],[-10,9],[-19,9],[-48,33],[-60,33],[-97,35],[-38,10],[-9,11],[-11,27],[-19,85],[-17,56],[-42,87],[-7,27],[2,69],[4,55],[4,47],[-2,45],[-1,54],[2,37],[-6,16],[-15,11],[-43,5],[-53,-2],[-1,56],[-5,86],[-10,50],[-12,26],[-24,27],[-49,37],[-66,56],[-57,83],[-64,103],[-21,18],[-24,97],[-36,166],[2,55],[-5,27],[-36,82],[-7,42],[-7,43],[-56,120],[-19,52],[-15,67],[-14,53],[-13,22],[-16,36],[-11,42],[-5,31],[4,41],[6,29]],[[57016,41593],[53,-30],[30,-2],[23,14],[28,-19],[34,-54],[37,-11],[39,34],[54,-10],[68,-54],[56,-11],[67,48],[60,132],[56,125],[55,144],[34,116],[48,95],[65,73],[65,61],[100,76],[21,62],[6,68],[0,94],[5,61],[11,28],[16,22],[22,28],[66,72],[55,46],[68,30],[73,0],[71,0],[41,1]],[[58443,42832],[0,-91],[3,-102],[8,-10],[54,-2],[86,-8],[82,-7],[53,-74],[18,-15],[55,-20],[70,-124],[84,-11],[58,-39],[51,-42],[29,-51],[19,-12],[26,-4],[13,-4],[-3,-37],[-17,-62],[2,-89],[24,-123],[3,-107],[-8,-189],[1,-183],[2,-65],[4,-43],[5,-24],[-1,-27],[-14,-77],[-11,-81],[-1,-32],[-4,-23],[-8,-20],[-37,-37],[-6,-23],[0,-42],[4,-35],[14,-13],[17,-20],[6,-26],[0,-28],[-5,-51],[-15,-85],[15,-98],[17,-63],[22,-73],[10,-45],[-1,-33],[-3,-31],[-34,-134],[-25,-83],[-30,-89],[-40,-56],[-10,-27],[-4,-31],[1,-67],[-1,-69],[-34,-108],[21,-92],[-5,-9],[-12,-13],[-49,-104],[-49,-105],[-36,-77],[-42,-88],[-46,-98],[-39,-83],[-40,-60]],[[57016,41593],[-47,92],[-25,38],[-19,14],[-55,15],[-128,21],[-13,-5],[-53,-18],[-66,-23],[-56,-22],[-60,-24]],[[56494,41681],[-55,96],[-63,108],[-65,122],[-49,95],[-24,55],[-43,72],[-31,35],[-12,18],[-30,193],[-17,177],[0,133],[0,185],[0,185],[0,185],[0,184],[0,185],[0,185],[0,185],[0,185],[0,90],[64,0],[72,0],[76,0],[83,0],[82,0],[83,0],[58,0],[15,1],[18,6],[1,18],[-24,91],[2,32],[6,62],[10,53],[13,70],[1,41],[-10,134],[1,75],[3,78],[3,74],[-4,51],[4,28],[8,40],[4,45],[5,20],[-1,18],[-5,33],[-4,76],[-6,105],[-6,75]],[[56657,45580],[10,-4],[21,-7],[10,-37],[6,-41],[14,-2],[37,-24],[13,-34],[8,-72],[-5,-37],[-12,-30],[12,-26],[25,-18],[14,6],[42,49],[16,9],[22,9],[20,13],[55,22],[30,10],[17,18],[12,0],[9,-14],[-8,-51],[-3,-46],[11,-86],[8,-40],[18,-29],[13,-15],[14,-31],[30,6],[65,-44],[20,-20],[28,-21],[19,-7],[68,-15],[25,-11],[46,-14],[37,-2],[27,6],[18,13],[11,14],[5,11],[8,43],[14,93],[5,27],[14,13],[18,9],[10,-15],[12,-103],[51,-93],[18,-78],[13,-66],[11,-19],[19,-22],[32,-9],[28,-2],[58,-48],[47,-38],[34,-27],[15,-21],[11,-34],[6,-27],[10,-68],[11,-54],[18,-11],[16,-4],[16,-37],[12,-32],[24,-80],[17,-54],[6,-54],[20,-35],[27,-15],[25,-2],[14,16],[36,27],[28,32],[20,11],[12,-7],[9,-22],[5,-43],[1,-24],[20,-22],[14,9],[6,26],[0,13],[0,117],[0,101],[0,95],[0,116],[0,101],[0,83],[0,87],[-13,-5],[-16,-20],[-37,-2],[-14,-15],[-4,-23],[2,-29],[1,-39],[-5,-19],[-16,-7],[-24,15],[-42,20],[-35,12],[-25,53],[-35,79],[-22,40],[-54,82],[-9,17],[-17,38],[-14,66],[-7,43],[-6,33],[-8,48],[13,74],[19,141],[13,102],[7,75],[27,77],[2,68],[-11,88],[3,49],[1,123],[2,104],[0,50],[-7,88],[-18,98],[-39,135],[0,29],[24,32],[36,56],[18,33],[22,47],[10,24],[21,61],[13,49],[5,63],[-10,61],[20,12],[68,21],[74,23],[79,25],[79,25],[77,25],[69,22],[48,15]],[[58541,47123],[8,-42],[14,-69],[18,-51],[21,-44],[18,-27],[12,-8],[76,3],[27,-27],[24,-35],[6,-53],[16,-33],[17,-26],[7,-3],[12,6],[21,1],[19,-12],[9,-11],[1,-45],[5,-20],[26,-7],[26,-4],[26,-30],[27,-5],[32,-13],[15,-32],[33,-34],[41,-29],[30,-34],[16,-15]],[[59144,46424],[1,-16],[7,-29],[8,-20],[1,-31],[4,-28],[12,-7],[9,-2],[9,20],[12,0],[13,-13],[5,-33],[11,-44],[16,-30],[12,-29],[-4,-53],[-7,-49],[22,-47],[30,-46],[8,-20],[2,-67],[5,-23],[20,-56],[10,-37],[-1,-22],[-54,-111],[-17,-11],[-16,-6],[-15,-23],[-8,-23],[3,-13],[6,-38],[12,-60],[12,-42],[-10,-52],[-21,-89],[-10,-8],[-2,-68],[7,-24],[10,-20],[4,-46],[1,-63],[-1,-50],[-14,-130],[25,-112],[8,-13],[34,0],[5,-10],[-8,-32],[-14,-33],[-9,-17],[-43,-38],[-62,-43],[-13,-41],[-8,-59],[7,-35],[8,-20],[-3,-52],[-5,-54],[2,-43],[-3,-38],[-8,-19],[-11,-57],[-13,-58],[-11,-26],[-15,-28],[-24,-23],[0,-11],[28,-27],[7,-18],[2,-13],[-6,-12],[-5,-17],[13,-18],[15,-15],[15,-38],[13,-54],[4,-18],[3,-8],[5,-1],[9,8],[17,30],[12,10],[15,-42]],[[59222,43770],[-60,-41],[-31,-21],[-89,-62],[-78,-54],[-20,-10],[-41,-27],[-20,-16],[-70,-47],[-29,-23],[-24,-23],[-58,-35],[-55,-33],[-60,-34],[-67,-38],[-38,-27],[-25,-24],[-60,-47],[-3,-12],[1,-32],[8,-67],[15,-61],[12,-35],[8,-90],[5,-79]],[[64745,61433],[-140,-103],[-37,-45],[-33,-57],[-25,-70],[-18,-124],[13,-113],[-1,-60],[-36,-40],[-34,-29],[-37,-44],[-23,-11],[-19,-35],[-21,-25],[-78,-63],[-86,-50],[-135,-59],[-53,-64],[-47,-44],[-73,-13],[-99,-61],[-55,-48],[-69,-80],[-15,-25],[-12,-58],[-21,-51],[-42,-83],[-31,-42],[-20,-2],[-41,-23],[-47,-5],[-80,29],[-21,-20],[-17,-33],[-61,-56],[-63,-114],[-46,-30],[-74,-36],[-52,-47],[-35,-19],[-44,-10],[-83,5],[-79,-17],[-73,-32],[-34,-60],[-39,-96],[-64,-40],[-15,-34],[-20,-71],[-41,-18],[-38,-12],[-38,31],[-72,-85],[-27,-15],[-41,-3],[-30,-18],[-21,5],[-26,34],[-56,40],[-41,-26],[-3,80],[-68,247],[14,215],[0,30],[-13,96],[-40,87],[1,111],[-14,80],[-10,81],[3,22],[1,20],[-21,125],[-7,26],[-2,26],[6,20],[0,24],[-11,38],[-11,74],[-55,57],[11,54],[11,-19],[14,-16],[3,35],[0,26],[-23,163],[34,218],[-11,195]],[[61888,61273],[52,79],[13,24],[8,21],[12,45],[17,14],[6,47],[-1,24],[-11,20],[-8,55],[3,69],[3,29],[5,53],[18,20],[5,16],[-14,33],[1,20],[31,56],[12,17],[20,18],[16,-1],[18,-9],[16,-16],[15,-29],[17,-32],[25,-13],[17,4],[15,-15],[11,8],[14,17],[21,-1],[20,19],[55,9],[53,-6],[56,16],[56,-1],[55,-2],[13,-2],[12,-10],[47,-50],[36,-10],[72,-13],[77,-15],[66,-13],[57,12],[47,10],[12,-2],[14,-31],[29,-76],[26,-73],[47,-3],[30,27],[33,38],[20,30],[23,117],[15,77],[34,85],[29,72],[39,95],[21,52],[42,104],[39,40],[77,78],[76,77],[49,49],[42,23],[70,20],[83,23],[82,23],[88,24],[98,28],[67,18],[86,24],[71,20],[63,18],[66,18]],[[64438,62785],[12,-57],[12,-58],[12,-58],[13,-57],[12,-58],[12,-57],[13,-58],[12,-57],[12,-58],[13,-57],[12,-58],[12,-57],[12,-58],[13,-57],[12,-58],[12,-58],[12,-56],[20,-18],[12,-54],[17,-75],[17,-76],[17,-76],[16,-76]],[[61830,60658],[-9,-13],[-2,23],[5,50],[9,14],[7,-37],[-4,-20],[-6,-17]],[[61876,59737],[-18,-18],[12,46],[13,9],[4,-2],[-11,-35]],[[61885,59891],[-4,-13],[-5,3],[-17,31],[19,34],[10,-32],[-3,-23]],[[64934,59122],[17,-7],[26,20],[74,3],[90,-65],[-17,-16],[-10,-24],[-39,-21],[-40,-49],[-114,-24],[-33,13],[-28,48],[-51,62],[20,40],[5,18],[7,17],[29,30],[29,-4],[35,-41]],[[78906,57828],[5,-29],[-2,-66],[-11,-66],[4,-29],[-9,-18],[-18,123],[-24,53],[-5,21],[14,-2],[24,34],[12,1],[10,-22]],[[79992,64232],[-13,-5],[-33,-1],[-28,-53],[-20,-22],[-30,-18],[-33,-30],[-9,-52],[-1,-38],[-5,-42],[-53,-61],[-15,6],[-10,23],[-15,-5],[-11,-11],[-12,1],[-14,-13],[-18,4],[-17,19],[-10,5],[-12,1],[-2,-23],[17,-89],[5,-41],[-56,-120],[6,-78],[-15,-59],[-34,-48],[-64,-123],[-29,-3],[-22,-28],[-47,-202],[-1,-70],[-7,-50],[2,-49],[-21,-96],[-22,-41],[-4,-52],[30,-108],[4,-19],[17,-58],[9,-41],[14,-41],[49,-107],[22,-33],[26,-23],[48,-96],[24,-62],[-11,-41],[6,-89],[-35,26],[5,-11],[40,-48],[61,-170],[53,-84],[54,-96],[17,-91],[48,-60],[54,-87],[-2,-19],[14,-24],[37,-46],[22,-49],[8,-46],[13,-7],[16,11],[15,4],[10,-3],[17,-51],[22,-46],[11,-41],[9,5],[7,-6],[2,-35],[4,-23],[30,-67],[14,-63],[37,-103],[26,-58],[20,-33],[21,-28],[22,-114],[11,-103],[23,-114],[18,-50],[0,-95],[14,-97],[15,-65],[5,-67],[4,-33],[6,-25],[16,-114],[-4,-52],[-11,51],[1,-152],[10,-80],[-5,-99],[11,-35],[19,-111],[13,-40],[-1,-137],[7,-69],[-18,41],[-13,47],[-17,-25],[-15,-36],[24,-147],[-28,14],[3,-197],[11,-46],[1,-22],[-3,-27],[-8,29],[-1,30],[-5,-6],[1,-16],[-10,-35],[-2,-43],[9,-36],[2,-28],[-7,-35],[-11,-37],[-26,-5],[-6,-71],[-9,-76],[-46,-12],[-33,-67],[-42,-25],[-37,-67],[-40,-61],[-27,-8],[-22,-13],[-26,-102],[-44,-12],[-78,-83],[-26,-40],[-24,-16],[-34,-35],[-7,13],[-12,30],[-29,15],[-15,33],[-4,43],[-4,17],[-6,-24],[-5,-102],[-5,-23],[-13,-10],[-25,29],[-23,59],[-34,-41],[10,-5],[16,3],[12,-10],[10,-39],[-1,-22],[-5,-25],[-32,-4],[-42,9],[-7,-3],[38,-39],[35,-22],[16,-24],[0,-20],[-20,-32],[-15,-40],[-1,-25],[0,-27],[-17,-24],[-11,5],[-30,41],[-86,163],[13,-46],[90,-185],[15,-61],[3,-43],[-10,-21],[-15,-26],[-29,-2],[-49,69],[-77,165],[-26,22],[78,-188],[13,-46],[13,-53],[-4,-31],[-7,-30],[-185,-174],[-28,-76],[-22,-93],[-36,-51],[-21,-48],[-62,-26],[-34,8],[35,86],[-22,32],[-1,221],[9,242],[16,121],[23,30],[30,19],[0,25],[-3,30],[-15,41],[-18,19],[-25,8],[-20,51],[-15,-2],[-24,-17],[-14,22],[-5,34],[-22,42],[-24,41]],[[79007,57840],[11,6],[13,24],[14,30],[35,4],[35,-1],[9,8],[14,32],[23,41],[18,23],[4,19],[-7,43],[-4,45],[7,14],[31,-8],[35,-21],[8,-9],[20,55],[6,6],[13,0],[34,10],[34,15],[16,-3],[15,-37],[12,-36],[6,-2],[17,15],[15,-19],[30,-32],[18,-1],[-9,73],[10,52],[-2,14],[-17,24],[-57,96],[-10,29],[1,45],[-2,66],[-5,41],[1,24],[3,20],[11,8],[10,2],[8,17],[14,44],[27,-4],[38,-25],[28,-15],[17,3],[3,6],[0,23],[2,100],[-1,21],[23,10],[37,2],[19,6],[18,42],[46,15],[34,56],[30,59],[14,15],[19,10],[14,-1],[18,-34],[14,20],[17,40],[9,39],[5,62],[-4,96],[-8,74],[-9,57],[-2,56],[20,112],[17,122],[-4,49],[-18,76],[-18,93],[-20,102],[-8,15],[-5,29],[-4,33],[9,104],[1,36],[23,47],[12,55],[12,60],[-4,31]],[[79866,60313],[-2,65],[3,31],[-5,26],[-7,37],[4,24],[17,20],[9,35],[12,42],[6,37],[-9,32],[-16,47],[-29,43],[-33,54],[-17,34],[-13,34],[-12,40],[-6,31],[6,21],[48,48],[8,17],[5,27],[-3,26],[-13,14],[-15,10],[-22,30],[-41,82],[-19,19],[-20,24],[-10,25],[-12,68],[-5,6],[-11,-20],[-15,-22],[-12,4],[-11,19],[-5,26],[-12,36],[-14,29],[-3,98],[-2,32],[-7,45],[-10,16],[-11,12],[-26,81],[-17,42],[-74,114],[-9,19],[-19,47],[-35,66],[-24,54],[-18,56],[-8,48],[-3,38],[-19,54],[-17,44],[-16,15],[-18,6],[-17,26],[-31,59],[-13,39],[-8,26],[0,26],[7,44],[9,26],[1,19],[-9,16],[-34,29],[-77,43],[-29,33],[-26,42],[-20,29],[-94,122],[-28,20],[-25,22],[-7,21],[1,20],[10,15],[27,32],[10,35],[-4,47],[-10,48],[5,16],[9,2],[17,2],[37,2],[80,-43],[11,5],[44,78],[16,47],[4,39],[8,25],[23,41],[0,37],[-11,50],[-11,19],[-10,8],[-32,-6],[-6,11],[-4,37],[-2,23],[-10,26],[-34,23],[-29,6],[-7,10],[11,25],[20,25],[15,15],[12,26],[2,27],[-15,24],[-19,26],[-31,50],[-43,54],[-26,18],[-13,-2],[-48,-46],[-25,-30],[-21,-54],[-22,-11],[-23,23],[-25,25],[-70,35],[-30,29],[-61,179],[-9,37],[6,41],[4,59],[6,38],[11,37],[3,32],[-3,32],[-9,18],[-11,5],[-9,8],[-8,41],[-5,-5],[-7,-51],[-9,-18],[-12,-9],[-10,8],[-5,20],[-3,35],[-6,46],[-8,30],[-26,31],[-12,40],[-40,87],[-33,61],[-15,55]],[[78368,64734],[13,20],[17,30],[19,46],[20,58],[8,35],[6,15],[12,10],[13,-6],[23,-23],[34,-30],[30,-35],[12,-36],[17,-34],[13,-10],[7,2],[19,26],[17,26],[1,29],[15,26],[20,43],[10,30],[7,3],[8,-9],[32,-90],[6,-6],[9,14],[13,70],[14,28],[4,-7],[77,-134],[8,2],[8,6],[6,20],[6,46],[11,50],[25,27],[19,6],[7,-24],[17,-32],[20,-5],[43,58],[15,9],[15,-1],[15,2],[15,22],[15,29],[5,58],[4,51],[10,21],[13,14],[24,19],[53,50],[14,24],[10,13],[21,-21],[25,-42],[15,-31],[10,-34],[5,-29],[40,-24],[25,-35],[17,-27],[17,1],[16,7],[11,22],[19,0],[22,-3],[10,-8],[18,-50],[8,-7],[17,4],[31,17],[25,9],[23,-20],[43,-55],[-12,-39],[-9,-42],[-19,-30],[-15,-7],[-8,-42],[-4,-61],[4,-31],[11,-10],[12,-20],[5,-27],[2,-61],[-1,-68],[2,-23],[9,4],[9,9],[18,-11],[23,-18],[14,-18],[12,3],[10,-18],[4,-34],[12,-23],[32,-45],[26,-3],[22,-59],[23,19],[10,-25],[47,9],[33,24],[12,-6],[30,-49],[18,-30]],[[79615,56844],[-8,-1],[-6,12],[26,37],[-3,-25],[1,-12],[-10,-11]],[[79768,57832],[-23,-35],[-2,29],[20,19],[7,15],[6,0],[-8,-28]],[[79684,63833],[-3,-11],[-14,27],[-10,12],[8,37],[16,-40],[3,-25]],[[79889,64064],[-40,-72],[-15,1],[13,82],[7,19],[24,-28],[11,-2]],[[79866,63897],[-15,-15],[-19,2],[22,28],[12,35],[9,12],[-1,-30],[-8,-32]],[[79730,63794],[-11,-3],[-22,47],[11,25],[26,-18],[5,-11],[0,-10],[-6,-22],[-3,-8]],[[33105,57107],[-33,-19],[0,15],[9,27],[17,7],[7,10],[11,6],[6,-1],[7,-8],[-16,-15],[-8,-22]],[[32264,58254],[9,-75],[-3,-14],[-25,-51],[-21,-3],[-17,1],[-13,10],[-17,33],[-16,-10],[-40,12],[-11,11],[15,41],[28,16],[10,4],[8,-25],[20,-22],[23,-2],[6,38],[32,57],[12,-21]],[[31885,58125],[-15,-13],[-27,13],[-14,18],[9,21],[22,0],[21,-25],[4,-14]],[[33056,56951],[-17,-12],[-3,58],[5,15],[30,47],[8,8],[6,-9],[-2,-13],[14,-21],[-3,-26],[-16,-29],[-22,-18]],[[33328,56767],[52,-140],[1,-15],[-6,-18],[-32,-33],[-7,-17],[-12,-62],[-40,-35],[-28,-42],[-19,-38],[-10,-15],[-37,-9],[-12,-23],[-14,-72],[-11,-29],[-20,-35],[0,-22],[27,-78],[5,-24],[-9,-37],[1,-27],[14,-31],[17,-7],[16,13],[20,-1],[13,-9],[6,-9],[1,-24],[-9,-51],[-12,-34],[-53,-50],[-23,-30],[-13,-22],[-29,12],[-15,-1],[-11,-17],[-7,-14],[-19,-4],[-27,-8],[-11,-10],[-9,-25],[-7,-36],[6,-43],[8,-39],[0,-35],[6,-99],[-8,-23],[-18,-26],[-22,-46],[-24,-63],[4,-19],[58,-134],[59,-136],[59,-136]],[[33127,54839],[8,-6],[11,-16],[11,-47],[8,-50],[0,-26],[-6,-33],[-15,-38],[-17,-30],[-25,-26],[-21,-25],[-16,-64],[-11,-23],[-9,-9],[-18,-9],[-30,2],[-20,6],[-24,-49],[-31,-18],[-21,-65],[-74,-53],[-72,-40],[-20,-17],[-72,34],[-17,-10],[-20,-32],[-18,-24],[-15,-1],[-13,-13],[-8,-45],[-7,-154],[-26,-45],[-31,0],[-21,53],[-25,40],[-44,96],[-12,12],[-12,0],[-41,-28],[-19,12],[-16,15],[-26,-5],[-46,-1],[-30,-1],[-14,26],[-14,53],[-9,19],[-11,16],[-17,8],[-75,-1],[-14,0],[-11,11],[-14,45],[-16,22],[-18,1],[-8,-25],[32,-83],[9,-44],[28,-65],[81,-137],[15,-43],[-1,-55],[-1,-85],[3,-80],[21,-115],[29,-118],[8,-74],[-5,-55],[-6,-30],[1,-13],[6,-12],[28,-17],[59,-10],[35,0],[55,-13],[4,-41],[-6,-68],[-10,-39],[-9,-11],[-30,-9],[-31,-42],[-45,-41],[-26,-5],[-10,-8],[-9,-13],[-8,-15],[-9,-77],[-13,-88],[-25,-51],[-28,-43],[-28,-5],[-22,3],[-11,-12],[-16,-35],[-23,-44],[-18,-23],[-24,2],[-26,-22],[-32,-35],[-22,-29],[-18,-50],[-26,-52],[-27,-36],[-13,-45],[-18,-57],[-23,-2],[-2,34],[11,55],[-12,48],[-22,26],[-10,7],[-10,-3],[-26,-23],[-32,-43],[-20,-31],[-17,-14],[-37,-13],[-30,-6],[-13,9],[-23,31],[-53,98],[-71,133]],[[31423,52547],[-5,39],[3,39],[-13,58],[-8,61],[-6,21],[-2,45],[-16,83],[-12,67],[-12,35],[5,29],[-5,29],[-9,24],[-14,76],[5,33],[-4,33],[-12,23],[-16,24],[-22,51],[-27,48],[-13,20],[-9,7],[-8,46],[-6,14],[-14,4],[-27,19],[-26,-23],[-1,35],[8,22],[89,170],[44,78],[5,11],[4,18],[3,24],[-10,28],[-42,131],[-15,24],[-14,21],[-16,55],[-20,128],[-14,64],[-4,49],[1,56],[-6,43],[-11,30],[0,91],[11,153],[3,116],[-6,80],[11,60],[26,42],[14,64],[3,86],[16,72],[28,56],[10,55],[-9,54],[-3,35],[-24,35],[-44,25],[-37,3],[-22,-28],[-57,-25],[-91,-24],[-74,0],[-56,24],[-42,-8],[-29,-40],[-20,-9],[-12,22],[-13,6],[-20,-14],[-3,7],[-43,107],[-40,100],[-46,118],[-53,137],[-10,9],[-16,-1],[-22,-2],[-33,14],[-23,20],[-19,19],[-33,25],[-23,4],[-20,-7],[-56,-48],[-32,-5],[-25,-1],[-67,24],[-45,4],[-53,-16],[-22,-9],[-32,25],[-22,37],[-20,88],[-14,69],[-25,14],[-27,12],[-13,23],[-8,40],[-2,51],[2,84],[3,29],[4,90],[15,47],[9,23],[-1,38],[-8,77],[-7,55],[-30,62],[-39,79],[-17,128],[-20,150],[-15,15],[-15,-8],[-15,8],[-14,60],[-13,11],[-22,-21],[-16,-16],[-40,-15],[-8,15],[3,19],[17,54],[20,70],[23,64],[21,66],[16,70],[11,138],[7,96],[20,170],[36,136],[14,62],[33,82],[15,44],[20,35],[55,47],[65,234],[15,37],[67,35],[51,27],[37,28],[13,16],[10,7]],[[30189,58676],[-9,-28],[-18,-34],[-20,-21],[-106,-53],[-11,-11],[-13,-22],[0,-50],[2,-39],[32,-129],[12,-32],[41,-70],[-9,-10],[-16,-1],[12,-92],[25,-63],[1,-39],[-19,-123],[-36,-74],[-25,-86],[-20,-34],[-44,-168],[34,-101],[4,-50],[29,-73],[19,-23],[12,-30],[-6,-49],[12,-67],[15,-35],[18,-14],[23,0],[67,44],[15,20],[10,36],[34,73],[2,93],[7,113],[-8,73],[-35,104],[-15,75],[-35,69],[-21,118],[-9,37],[-6,51],[-8,91],[23,32],[-2,74],[57,21],[123,120],[77,31],[87,64],[20,32],[17,52],[14,7],[45,-50],[22,17],[9,39],[-12,75],[-26,0],[-78,-27],[-8,32],[0,29],[-18,89],[11,68],[12,55],[22,22],[33,24],[25,-37],[15,-35],[8,-33],[6,-92],[13,-93],[14,-64],[23,-49],[17,4],[12,8],[81,11],[50,-33],[63,-17],[59,-71],[60,-85],[15,-63],[6,-59],[14,-40],[-14,-41],[7,-69],[18,-69],[26,-44],[74,-12],[81,30],[125,27],[40,23],[206,12],[39,-33],[4,-33],[0,-26],[67,-124],[54,-16],[46,-40],[48,-22],[52,-30],[30,4],[22,11],[26,2],[184,207],[98,-6],[15,14],[13,18],[-36,32],[-82,12],[-25,-21],[-14,53],[27,-2],[91,18],[105,-11],[85,38],[43,6],[24,-8],[68,25],[128,-29],[101,24],[-12,-34],[-33,-21],[-53,-7],[-41,-50],[-87,9],[-61,-18],[19,-14],[0,-51],[9,-11],[8,0],[21,-38],[6,-25],[7,-53],[-10,-56],[-12,-26],[25,9],[14,26],[-2,27],[2,31],[14,-10],[9,-14],[32,-148],[22,-78],[6,3],[5,3],[7,15],[10,36],[9,-23],[5,-9],[5,-3],[-5,34],[6,42],[-2,15],[10,3],[12,-5],[17,-12],[30,-49],[20,-51],[1,-28],[8,-16],[12,-16],[7,-26],[1,41],[-8,30],[-2,34],[40,1],[10,45],[21,-27],[56,-123],[21,-21],[62,-24],[38,-59],[23,-53],[-14,-56],[-36,-28],[-14,-35],[-9,-34],[0,-35],[-11,-40],[-1,-14],[-7,-56],[-15,-68],[-19,-72],[-104,-2],[26,-29],[23,-22],[39,-57],[30,45],[44,3],[48,49],[18,8],[88,-26],[22,36],[17,11],[48,-7],[42,-39]],[[53455,75978],[-3,-1],[0,2],[0,3],[3,0],[0,-4]],[[96317,43302],[18,-191],[21,1],[11,10],[12,45],[5,70],[11,10],[14,-8],[-6,-22],[4,-56],[10,-31],[7,-6],[14,-146],[6,-31],[-1,-25],[-29,-54],[-44,1],[-30,-33],[-19,3],[0,37],[-17,29],[-19,63],[5,112],[-33,208],[-1,52],[12,68],[11,3],[15,-56],[23,-53]],[[96503,42571],[12,-13],[7,0],[4,-28],[40,-56],[11,2],[9,-31],[17,-15],[5,-31],[12,-32],[-21,-38],[-41,10],[-24,-44],[-21,11],[-4,23],[3,8],[-13,58],[-5,90],[-9,52],[-9,23],[-20,-20],[-8,-3],[-18,43],[9,87],[4,25],[15,5],[23,-23],[22,-103]],[[96790,42177],[8,-8],[-4,-24],[-39,27],[-30,-10],[-9,1],[-9,22],[-7,44],[3,30],[13,22],[5,3],[10,-26],[8,-18],[9,-8],[19,-43],[23,-12]],[[96748,42432],[-32,-6],[-44,18],[-18,25],[-8,25],[15,19],[23,9],[27,57],[10,-22],[10,-64],[11,-20],[6,-19],[0,-22]],[[96790,41738],[27,-82],[11,-7],[-17,-59],[-34,-5],[-41,15],[15,20],[-8,23],[-13,5],[-14,-11],[-6,4],[9,38],[23,53],[6,4],[6,1],[6,-5],[30,6]],[[96641,42951],[-19,-26],[-34,2],[-13,15],[42,80],[49,17],[-25,-88]],[[96725,42643],[-5,-1],[-4,27],[-16,141],[10,126],[7,-27],[23,-221],[-3,-36],[-12,-9]],[[96718,43013],[-5,-36],[-11,41],[-7,175],[3,16],[6,1],[14,-121],[0,-76]],[[96449,42785],[-5,-15],[-30,37],[7,36],[32,-12],[-4,-46]],[[96550,43628],[-11,-29],[-32,9],[-7,8],[2,48],[8,17],[19,15],[25,-24],[-4,-44]],[[96524,43832],[-4,-6],[-7,4],[-16,70],[4,23],[21,22],[18,-38],[2,-22],[0,-18],[-3,-16],[-13,-6],[-2,-13]],[[97192,40214],[-9,-31],[-15,0],[-20,22],[4,29],[22,5],[6,-2],[12,-23]],[[97080,40587],[-15,-63],[-25,15],[-24,45],[-12,40],[8,75],[12,14],[13,-5],[6,-74],[37,-47]],[[97036,40932],[-12,-27],[-12,3],[-72,64],[3,27],[-3,67],[8,37],[20,15],[15,-8],[10,-54],[22,-22],[-16,-18],[27,-41],[10,-43]],[[69707,76179],[9,11],[16,10],[26,-20],[23,-25],[5,-12],[-1,-13],[-55,-49],[-33,-23],[-15,-4],[-4,-7],[-11,-55],[-21,-10],[-27,-18],[-19,-25],[-30,-61],[-76,-89],[-1,-18],[7,-15],[24,-10],[33,-27],[18,-21],[48,27],[12,-6],[13,-28],[13,-80],[22,-21],[28,-17],[18,-5],[23,-20],[32,-7],[21,7],[26,-17],[4,7],[3,119],[22,-20],[13,1],[11,14],[6,20],[4,39],[-5,39],[10,18],[7,4],[6,-5],[3,-10],[1,-35],[16,-15],[10,-9],[9,-30],[9,-29],[6,-67],[22,-4],[26,-13],[17,13],[14,-8],[5,-32],[-1,-29],[2,-24],[7,-7],[23,15],[19,2],[18,-14],[22,-21],[32,-57],[10,-8],[48,-4],[10,-12],[17,0],[17,11],[40,-19],[1,-10],[-7,-14],[-94,-78],[-7,-24],[-19,-31],[-21,-17],[-10,-1],[-46,31],[-5,-7],[-4,-13],[0,-14],[10,-32],[-5,-21],[-8,-15],[-29,13],[-6,9],[0,9],[-11,0],[-17,-9],[-33,-57],[-12,-29],[-4,-18],[-15,-10],[-16,-4],[-20,-27],[-22,-20],[-7,15],[-5,17],[-6,5],[-13,-4],[-17,-1],[-17,19],[-23,20],[-20,6],[-58,-9],[-29,-9],[-9,-9]],[[69710,75022],[-16,-3],[-69,-19],[-14,7],[-10,31],[-9,33],[-18,12],[-20,9],[-7,13],[-1,16],[3,16],[1,8],[46,63],[42,57],[4,4],[3,11],[7,20],[0,10],[-31,23],[-1,10],[6,11],[0,14],[-22,41],[-38,65],[-11,6],[-8,-4],[-15,-62],[-7,-16],[-43,-41],[-37,-29],[-64,-50],[-17,-15],[-12,2],[-11,10],[-37,51],[-23,17],[-16,-17],[-13,-25],[1,-51],[-15,-27],[-15,-13],[27,-137],[-2,-18],[-21,-5],[15,-52],[-13,-6],[-32,12],[-44,8],[-84,-23],[-6,-9],[-2,-11],[5,-11],[40,-1],[40,6],[11,-10],[1,-17],[-4,-11],[-13,-2],[-29,-10],[-4,-11],[-1,-10],[10,-31],[11,-19],[2,-11],[-5,-10],[-6,-4],[-9,15],[-6,-3],[-2,-13],[-3,-15],[-7,-11],[-13,6],[-13,-5],[-8,-55],[-7,-62],[-22,-42],[-12,-15],[-18,-4],[-27,5],[-16,6],[-46,9],[-47,17],[-53,16],[-49,-37],[-14,-22],[-9,-21],[-9,-10],[-21,-129],[2,-14],[12,-12],[60,-26],[9,-11],[5,-13],[2,-58],[5,-8],[21,-7],[30,0],[23,6],[24,-5],[16,-13],[8,-20],[4,-21],[-28,-127],[3,-47],[8,-66],[16,-52],[30,-51],[23,-33],[5,-15],[1,-24],[-4,-31],[-13,-48],[-16,-42],[-17,-18],[-24,-54],[-22,-66],[-41,-86],[-13,-49],[-5,-139],[-11,-42]],[[68821,73255],[-1,16],[-15,16],[-26,-3],[-17,8],[-8,18],[-21,-5],[-34,-28],[-34,14],[-35,58],[-67,21],[-85,-13]],[[68478,73357],[-4,63],[1,81],[4,108],[28,84],[0,16],[-6,15],[-9,14],[-51,23],[-15,13],[-20,26],[-25,28],[-22,19],[-34,26],[-32,14],[-19,-11],[-17,-14],[-16,0],[-16,7],[-59,64],[-90,110],[-71,76],[-45,37],[-10,12],[-25,34],[-62,93],[-41,-14],[-58,61],[-53,59],[-11,15],[-60,109],[-60,71],[-65,77],[-42,48],[-71,82],[-34,49],[-12,18],[-12,35],[-18,170],[-22,78],[-30,43],[-26,82],[-22,121],[-17,79],[-14,36],[-29,40],[-43,44],[-41,21],[-15,-1],[-7,-5],[-9,-8],[-16,-33],[-24,-3],[-17,1],[-17,12],[-52,10],[-18,11],[-31,-1],[-67,-17],[-17,3],[-70,73],[-31,29],[-6,16],[0,28],[10,40],[9,28],[-4,30],[-13,32],[0,34],[9,19],[19,-6],[7,12],[-3,18],[-10,13],[-13,29],[-40,27],[-6,11],[2,12],[7,14],[1,28],[1,37],[5,19],[2,15],[-6,12],[-14,14],[-21,34],[-27,4],[-86,-1],[-27,13],[-22,19],[-21,73],[-11,17],[-11,7],[-24,2],[-29,7],[-15,13],[-41,66],[-39,59],[-16,-56],[-15,-11],[-34,5],[-26,10],[-15,-13],[-15,-22],[2,-15],[12,-15],[24,-28],[36,-70],[16,-38],[2,-13],[-3,-10],[-5,-5],[-7,0],[-9,1],[-6,11],[-2,20],[-12,30],[-12,17],[-14,11],[-19,8],[-25,14],[-13,1],[-12,-17],[-11,-22],[-6,-49],[-19,-60],[-11,-24],[-36,-14],[-84,-5],[-26,-19],[-17,-22],[-32,-74],[-22,-24],[-19,-33],[5,-108],[10,-126],[16,-35],[10,-11],[2,-12],[-7,-11],[-8,-14],[-13,-25],[-15,1],[-29,6],[-24,7],[-82,7],[-66,6],[-73,7]],[[65549,75646],[0,132],[0,132],[0,132],[-1,133],[0,132],[0,132],[0,132],[0,133],[0,132],[0,132],[0,132],[0,132],[0,133],[0,132],[0,132],[0,132],[35,17],[44,20],[42,20],[49,24],[57,27],[48,22],[57,27],[44,21],[41,20],[53,23],[82,36],[45,19],[46,21],[44,19],[30,7],[31,-27],[39,-38],[38,-38],[38,-38],[39,-38],[38,-38],[39,-38],[38,-38],[38,-38],[39,-37],[38,-38],[38,-38],[39,-38],[38,-38],[38,-38],[39,-38],[38,-38],[36,-35],[16,-26],[9,-58],[17,-46],[31,-49],[32,-51],[39,-68],[27,-46],[28,-48],[45,-78],[29,-49],[23,-2],[46,12],[61,15],[49,13],[59,15],[56,14],[44,11],[66,-9],[65,-8],[47,-6],[46,-6],[54,-7],[30,-4],[35,-4],[15,11],[30,25],[28,22],[30,24],[26,12],[27,-38],[22,-43],[24,-46],[28,-44],[27,-27],[36,-35],[20,-61],[28,-81],[18,-53],[19,-55],[27,22],[29,23],[27,21],[-4,-68],[-3,-61],[-4,-93],[-4,-77],[-9,-91],[-1,-69],[0,-61],[-1,-48],[51,-2],[38,-2],[47,-2],[5,-61],[6,-85],[10,-77],[8,-65],[12,-84],[6,-45],[12,-53],[11,-12],[18,-9],[62,6],[52,6],[41,4],[43,4],[58,6],[19,-13],[17,9],[19,9],[16,-38],[8,-19],[11,-21],[15,-18],[-7,-40],[-9,-57],[-3,-30],[18,-32],[14,-18],[36,-38],[34,-21],[23,-6],[21,8],[8,21],[-2,30],[-10,31],[1,37],[6,27],[22,49],[21,46],[32,47],[37,47],[16,34],[6,59],[25,34],[26,20],[33,18],[9,29],[46,50],[27,25],[35,15],[48,32],[37,39],[36,72],[29,47],[24,29],[21,1],[14,-23],[12,-2],[8,11],[14,30],[14,35],[14,15],[27,8],[24,23]],[[69625,75424],[-1,14],[-8,23],[-13,13],[-6,-5],[5,-19],[15,-28],[8,2]],[[69779,74822],[-14,-5],[-26,1],[-14,6],[9,46],[0,10],[-1,1],[-7,6],[-12,19],[-3,29],[4,26],[8,11],[5,-2],[16,-40],[14,-12],[27,-6],[-14,-40],[10,-42],[-2,-8]],[[69938,74855],[-7,-24],[-13,6],[-11,16],[4,13],[15,7],[8,7],[7,1],[-3,-26]],[[35174,32406],[-13,-21],[-15,-41],[-17,-97],[-58,-133],[-12,-76],[-62,-78],[-44,-89],[-29,2],[-26,-38],[-149,-115],[-54,22],[-39,-1],[-37,51],[-84,19],[-53,-21],[-71,-56],[-21,1],[-15,3],[-39,23],[-21,50],[-108,57],[-88,129],[-104,2],[-79,-17],[-12,18],[-8,33],[-17,48],[-68,114],[-54,113],[-10,111],[7,121],[16,144],[-2,44],[19,26],[20,5],[19,37],[17,56],[3,43],[-13,78],[-10,110],[-10,55]],[[33833,33138],[21,86],[1,42],[-12,37],[-4,38],[6,39],[-1,37],[-8,36],[6,30],[20,23],[15,36],[10,49],[5,37],[0,26],[-6,24],[-12,22],[5,46],[24,67],[15,60],[7,52],[0,43],[-8,32],[3,22],[15,11],[6,34],[-2,84],[-15,70],[11,55],[33,64],[18,52],[1,39],[10,22]],[[33997,34453],[16,-42],[47,-11],[47,-2],[7,11],[19,69],[24,20],[27,5],[29,-3],[31,-46],[87,-150],[64,-104],[20,-50],[17,-36],[12,-35],[-5,-89],[1,-39],[3,-11],[14,-1],[22,6],[18,19],[15,29],[14,23],[11,13],[4,19],[7,19],[6,4],[13,-14],[30,-51],[23,-47],[6,-27],[9,-28],[9,-25],[7,-23],[23,-32],[23,-19],[15,20],[39,-65],[85,-54],[16,-33],[15,-46],[30,-71],[41,-63],[34,-27],[32,-15],[18,-14],[12,-24],[20,-27],[12,-9],[4,-24],[13,-51],[13,-65],[14,-60],[31,-57],[36,-45],[36,-26],[21,-31],[9,-33],[-25,-48],[-27,-62],[-23,-48],[-25,-33],[-8,-23],[-5,-36],[0,-190],[-2,-70],[2,-19],[3,-13],[16,-18],[18,-16],[7,-3]],[[95272,54910],[3,-27],[-18,13],[-2,10],[10,10],[7,-6]],[[88372,57315],[-21,-47],[-1,16],[6,28],[9,32],[8,19],[11,6],[8,-27],[-9,-23],[-11,-4]],[[92123,56074],[-2,-7],[-17,3],[-2,4],[1,3],[8,4],[1,10],[-4,2],[4,6],[6,1],[4,-7],[2,-9],[-1,-10]],[[92188,56124],[-4,-3],[-3,3],[1,14],[2,5],[4,1],[8,-4],[1,-4],[-9,-12]],[[93975,55768],[-16,-13],[-20,5],[-6,47],[-10,13],[2,23],[15,19],[30,-15],[11,-34],[-7,-22],[1,-23]],[[97120,55201],[-6,-17],[-6,1],[6,13],[4,18],[6,51],[14,19],[10,21],[-3,-22],[-15,-23],[-10,-61]],[[96896,56053],[-4,-9],[-27,5],[-12,11],[1,9],[22,-8],[20,-8]],[[97659,55903],[11,-13],[20,1],[19,-32],[-7,2],[-10,14],[-10,6],[-12,-2],[-6,5],[-5,19]],[[97527,55955],[35,-30],[46,14],[-7,-9],[-17,-8],[-12,-8],[-8,0],[-9,3],[-29,21],[-17,27],[4,9],[14,-19]],[[96357,58267],[-7,-4],[-5,4],[4,8],[8,1],[3,-2],[-3,-7]],[[90474,62651],[-9,-22],[-7,16],[-2,31],[13,-3],[4,-6],[1,-16]],[[90475,61255],[-6,-4],[-9,2],[-6,9],[-2,15],[18,1],[7,-12],[-2,-11]],[[90350,59998],[-13,-27],[-10,6],[-6,9],[-2,15],[22,15],[10,-5],[-1,-13]],[[90493,62257],[-14,-13],[17,57],[5,10],[8,-21],[-16,-33]],[[90486,60560],[-1,-15],[-14,4],[-4,6],[8,52],[20,24],[10,5],[-9,-25],[-2,-27],[-8,-24]],[[90461,60466],[-12,-29],[-8,45],[-1,19],[10,17],[7,-1],[4,-51]],[[31987,62401],[-21,-5],[-28,27],[22,10],[15,-6],[12,-26]],[[32039,62415],[-19,-15],[-12,2],[-5,6],[10,18],[26,-11]],[[32009,62093],[24,-26],[28,0],[-30,-25],[-56,-3],[1,41],[33,13]],[[90205,59480],[-12,-1],[-10,20],[-3,13],[-1,66],[40,57],[13,55],[10,-5],[10,-9],[8,-16],[-44,-92],[-11,-88]],[[2576,43576],[-12,-5],[-14,27],[28,21],[8,11],[34,-6],[-20,-8],[-24,-40]],[[31630,62468],[9,-12],[8,2],[-6,23],[6,0],[53,-14],[34,-24],[35,-12],[3,-80],[-27,-32],[-18,-34],[-15,-41],[-38,-47],[-45,-15],[-31,-1],[-11,1],[-11,9],[-23,-8],[-29,21],[-24,-5],[-48,5],[-18,-19],[-18,-4],[-17,4],[-14,8],[-36,-1],[-15,16],[6,91],[1,41],[-9,35],[-10,21],[-7,25],[14,17],[12,24],[4,37],[12,9],[15,4],[69,-17],[173,-10],[10,-3],[6,-14]],[[31826,62272],[-22,-3],[-14,4],[-5,17],[27,16],[30,-2],[18,-10],[2,-6],[-36,-16]],[[31146,62246],[-2,-1],[-3,1],[-1,1],[-2,6],[-8,8],[-2,8],[2,9],[3,3],[16,1],[2,-1],[3,-6],[0,-4],[-1,-4],[-3,-10],[-1,-2],[-1,-3],[-1,-5],[-1,-1]],[[13126,84403],[-3,-8],[-36,1],[-12,7],[-5,24],[3,23],[8,18],[10,34],[8,56],[52,-63],[16,-28],[8,-35],[-18,-13],[-22,-6],[-9,-10]],[[13117,84243],[-15,-2],[-16,9],[-40,47],[-1,14],[6,15],[22,29],[10,7],[54,-3],[17,-8],[4,-13],[0,-14],[-6,-13],[-1,-15],[3,-15],[-7,-15],[-30,-23]],[[12691,85385],[-2,-15],[-38,2],[-38,21],[-19,27],[4,13],[35,11],[34,-26],[24,-33]],[[9689,86599],[-9,-14],[-24,5],[-13,9],[44,37],[7,-8],[-5,-29]],[[9843,86300],[-14,-3],[20,38],[27,41],[26,27],[32,11],[-3,-20],[-43,-35],[-45,-59]],[[8883,86442],[-15,-17],[-55,10],[12,35],[42,22],[46,-34],[-30,-16]],[[7772,86613],[-13,-2],[17,28],[13,56],[17,-8],[3,-10],[-28,-57],[-9,-7]],[[5464,83719],[-4,-45],[-38,29],[-10,14],[7,11],[36,2],[9,-11]],[[5733,83509],[-9,-3],[-8,6],[-10,33],[-1,13],[20,-10],[7,-24],[1,-15]],[[5690,83612],[-1,-46],[-4,-7],[-8,12],[-15,-13],[-9,10],[4,16],[-1,12],[11,1],[3,23],[-2,9],[6,21],[8,5],[8,-43]],[[3831,82789],[-4,-1],[-7,14],[-1,13],[5,9],[13,22],[9,8],[11,4],[3,-6],[-10,-26],[-12,-17],[-7,-20]],[[1109,81688],[-24,-12],[-31,25],[3,30],[34,-25],[18,-18]],[[3858,89992],[-10,-3],[0,9],[32,23],[58,29],[-2,-6],[-31,-23],[-47,-29]],[[2371,88502],[5,-14],[29,2],[40,-6],[45,-14],[45,5],[56,43],[33,11],[34,6],[37,-10],[35,-23],[14,-13],[11,-24],[7,-28],[11,-21],[67,-25],[42,-10],[10,-14],[9,-19],[36,-14],[37,5],[20,-5],[63,-1],[77,-21],[-12,-56],[-25,-24],[-72,7],[-71,-8],[-29,-28],[-25,-37],[-3,-35],[-14,-16],[-15,-7],[-12,19],[-17,60],[-11,16],[-12,11],[-35,19],[-35,12],[-21,1],[-15,21],[-8,30],[-14,15],[-28,22],[-29,17],[-89,38],[-29,5],[-30,-4],[-32,-17],[-31,-26],[-31,-19],[-33,-4],[-32,11],[-29,25],[-15,18],[-8,30],[1,30],[4,29],[16,71],[27,14],[51,-50]],[[3851,86626],[26,-29],[13,-1],[43,8],[16,-6],[15,-12],[9,-19],[2,-33],[-7,-30],[2,-41],[-1,-18],[22,-24],[8,-32],[3,-34],[-49,-12],[-49,-2],[-43,-23],[-9,-17],[7,-26],[-11,-6],[-11,5],[-21,24],[-22,11],[-79,18],[-100,69],[-42,14],[-44,50],[-39,64],[25,10],[26,5],[116,-9],[14,46],[15,11],[36,13],[35,25],[15,0],[16,-10],[32,15],[17,3],[14,-7]],[[7528,85151],[2,-31],[12,3],[42,33],[23,10],[29,1],[23,-15],[4,-11],[-2,-14],[-18,-27],[1,-18],[19,-33],[49,-18],[6,-10],[0,-12],[-34,-55],[-12,-12],[-9,-3],[-61,9],[-55,18],[-23,3],[-8,-5],[-15,-17],[11,-5],[49,-4],[17,-25],[7,-18],[4,-20],[-10,-8],[-20,-6],[-25,0],[-31,-22],[-17,-25],[-62,-7],[-47,-34],[-17,-17],[-6,-20],[-17,-15],[-41,-14],[24,-13],[4,-11],[1,-16],[-4,-13],[-31,-59],[-60,-48],[-15,2],[-7,6],[-5,9],[-1,9],[78,98],[-3,4],[-21,4],[-34,26],[-23,-17],[-5,1],[6,23],[15,27],[-3,8],[-8,7],[-19,4],[-31,1],[-22,-6],[-15,-15],[-1,-6],[31,2],[9,-7],[8,-14],[5,-16],[2,-17],[-7,-24],[-14,-30],[-22,5],[-44,67],[-20,97],[-38,75],[-2,18],[11,46],[38,65],[42,18],[29,27],[28,9],[18,-1],[24,-12],[10,-25],[-6,-12],[2,-6],[17,-15],[18,-52],[21,-47],[14,-19],[19,-12],[-19,36],[-12,44],[-5,88],[-6,23],[11,6],[30,-3],[-1,13],[-32,29],[-19,25],[-8,19],[1,17],[17,25],[10,7],[10,3],[21,-5],[9,-8],[26,-56],[12,-17],[10,0],[10,9],[9,18],[8,12],[10,3],[29,-8],[10,3],[4,14],[0,25],[7,9],[2,18],[-16,27],[18,9],[61,-21],[25,-23],[-13,-42]],[[13882,84036],[-14,-30],[-10,-32],[-7,-35],[-3,-37],[2,-40],[5,-35],[17,-65],[6,-39],[1,-27],[-38,-92],[-13,-45],[1,-19]],[[13829,83540],[-27,-47],[-50,-64],[-23,-37]],[[13729,83392],[-11,12],[-65,10],[-24,82],[-12,64],[-19,55],[0,13],[17,37],[65,31],[1,12],[-24,8],[-6,13],[-7,60],[2,53],[-2,35],[-10,72],[-17,43],[-41,86],[-4,21],[18,27],[12,25],[-71,-43],[-96,-46],[-42,-32],[-9,-13],[-3,-11],[8,-30],[-1,-10],[-9,-18],[-10,-51],[-21,-53],[-10,-11],[-38,20],[-10,17],[-19,70],[5,19],[13,15],[19,34],[24,52],[45,133],[29,1],[52,26],[-82,13],[-12,7],[-11,18],[-9,29],[-17,33],[-31,11],[-13,12],[-21,39],[-14,18],[-7,22],[-1,26],[-6,13],[-21,5],[-12,9],[-3,67],[-42,17],[-18,15],[-28,42],[-7,21],[-3,17],[7,46],[-3,9],[-25,-5],[-153,72],[8,95],[-28,125],[-31,51],[6,19],[7,11],[13,0],[59,-37],[56,-44],[7,7],[-89,92],[-22,28],[-5,33],[-1,18],[7,10],[84,-9],[4,7],[-84,27],[-17,0],[-18,-39],[-9,-9],[-18,2],[-6,6],[-22,47],[-20,33],[-38,45],[-7,33],[-2,47],[5,45],[31,103],[13,18],[3,11],[-10,-1],[-9,-10],[-25,-48],[-27,-78],[-21,-27],[-14,6],[-20,32],[-43,39],[-50,10],[-31,40],[-46,111],[-6,55],[-6,14],[-25,18],[-16,26],[-24,135],[-31,93],[-8,50],[3,49],[-4,5],[-11,-38],[-3,-20],[-20,-5],[19,-39],[5,-19],[-10,1],[-19,-5],[33,-66],[14,-102],[21,-76],[14,-62],[7,-47],[9,-44],[25,-99],[3,-20],[-3,-16],[-8,-19],[-14,-7],[-45,13],[-17,25],[-24,44],[-34,21],[-84,-10],[-6,3],[0,37],[10,65],[-8,26],[-44,96],[1,19],[60,44],[-29,3],[-24,-17],[-9,11],[-14,62],[-9,23],[-5,4],[-2,-58],[10,-31],[1,-17],[-1,-25],[-7,-18],[-11,-11],[-11,-2],[-20,12],[-23,23],[-19,11],[-8,10],[-9,25],[-15,20],[-74,24],[-44,30],[-3,-8],[13,-31],[2,-19],[-11,-5],[-20,-30],[6,-4],[21,10],[23,-1],[39,-19],[35,-23],[12,-13],[6,-20],[4,-7],[34,-23],[2,-12],[-22,-35],[45,3],[27,-12],[34,-56],[11,-30],[2,-40],[-7,-11],[-14,-8],[-92,-13],[-34,-48],[-7,-1],[-25,13],[-46,38],[-58,36],[-131,108],[-3,5],[-3,20],[-9,11],[-17,9],[-25,27],[-32,45],[-19,36],[-8,25],[-18,29],[-59,61],[-31,23],[-28,13],[-24,3],[-6,8],[11,13],[2,8],[-53,13],[-50,28],[-127,80],[-65,50],[-39,24],[-16,13],[-7,11],[9,12],[26,12],[17,13],[27,51],[2,16],[-14,37],[-7,33],[0,19],[4,18],[4,12],[11,12],[9,6],[10,-4],[32,-46],[4,-17],[-1,-63],[9,-73],[3,5],[3,24],[2,47],[4,22],[6,22],[12,12],[36,-7],[17,4],[-71,33],[-44,62],[-8,7],[-24,3],[-26,-26],[-66,-82],[-19,-14],[-83,-46],[-57,-9],[-63,7],[-54,15],[-136,72],[-21,17],[31,44],[2,14],[-11,45],[-9,13],[-13,8],[-4,-6],[0,-13],[3,-25],[-10,-13],[-23,-14],[-39,-15],[-120,37],[-124,30],[-110,7],[-156,-25],[-83,-24],[-48,-2],[-47,4],[-4,17],[21,10],[-1,12],[-27,39],[-40,23],[-55,8],[-32,11],[-8,14],[-19,14],[-31,13],[-13,23],[10,71],[11,43],[10,30],[27,48],[-9,-3],[-39,-36],[-33,-37],[-32,-48],[-18,-22],[-24,-20],[-37,5],[-50,30],[-43,15],[-36,1],[-15,5],[25,27],[14,22],[19,34],[5,17],[-132,5],[-5,19],[0,13],[-4,11],[-19,8],[-27,-6],[-43,-22],[-19,17],[7,9],[14,7],[28,31],[-38,16],[-20,18],[-10,16],[1,55],[10,35],[87,34],[-27,13],[-56,-5],[-37,-29],[-43,-41],[-30,-16],[-15,11],[-20,3],[-25,-3],[-16,-11],[-9,-18],[-10,-12],[-11,-6],[-8,2],[-12,18],[-25,12],[-12,14],[-7,-9],[-9,-27],[-9,-13],[-42,-14],[-23,2],[-28,34],[-4,12],[10,29],[61,115],[-6,-1],[-20,-18],[-39,-46],[-18,-14],[-30,-1],[-14,5],[-17,-4],[-20,-12],[-13,-14],[-6,-15],[4,-2],[30,17],[17,4],[5,-8],[-24,-52],[-14,-50],[-13,-12],[-22,2],[-24,-5],[0,-14],[44,-39],[16,-6],[20,-14],[3,-14],[-7,-38],[-6,-15],[-9,-8],[-36,1],[-12,-4],[-24,-24],[-12,-19],[4,-2],[21,16],[31,9],[39,1],[30,9],[20,16],[19,-4],[18,-26],[6,-22],[-8,-19],[-15,-13],[-23,-9],[-15,-12],[-6,-16],[-3,-24],[-1,-32],[6,-58],[-5,-7],[-8,-5],[-13,0],[-12,-14],[-27,-76],[-9,-9],[-12,8],[-10,0],[-9,-10],[-19,-8],[-30,-5],[-25,2],[-45,16],[-18,12],[-15,19],[-40,-20],[-11,9],[-25,53],[-5,-3],[-5,-58],[-8,-20],[-25,-41],[-13,-71],[-4,-3],[-5,11],[-15,63],[-8,14],[-23,-36],[-2,-14],[6,-47],[-6,-7],[-45,25],[-11,2],[-3,-5],[15,-37],[-1,-13],[-65,-71],[-17,3],[-10,7],[-12,-1],[-41,-27],[-11,1],[-15,16],[-7,-1],[-4,-16],[-1,-32],[-15,-30],[-49,-49],[-13,-23],[-9,-31],[-8,-3],[-28,20],[-33,13],[-5,-6],[10,-19],[-2,-12],[-14,-4],[-18,2],[-22,7],[-31,-8],[-40,-25],[-33,0],[-46,41],[-12,3],[-4,12],[9,33],[13,25],[9,12],[44,32],[50,12],[31,19],[39,40],[20,30],[40,77],[-3,6],[-9,4],[-88,-73],[-13,-7],[-17,1],[-70,28],[-14,12],[-11,35],[20,80],[13,39],[35,60],[44,64],[15,41],[24,110],[-2,51],[-10,61],[-1,36],[10,12],[102,56],[49,43],[94,62],[25,0],[19,-22],[22,-17],[25,-13],[32,1],[39,16],[62,-6],[128,-41],[27,-2],[1,5],[-19,29],[-89,17],[-37,16],[-104,74],[-24,28],[10,14],[26,11],[8,10],[4,19],[15,25],[25,32],[39,31],[75,46],[-29,2],[-54,-8],[-19,-9],[-36,-33],[-14,-23],[-20,-46],[-8,-8],[-37,-7],[-101,-4],[-17,23],[-9,4],[-13,-4],[-92,-59],[-34,-30],[-23,-35],[-37,-25],[-49,-16],[-37,-20],[-39,-40],[-14,-30],[0,-14],[9,-45],[-10,-9],[-22,-3],[-36,-30],[-76,-89],[-10,-32],[0,-11],[12,-25],[-8,-17],[-22,-25],[-48,-41],[-31,-16],[-20,-1],[-20,6],[-35,26],[-28,2],[-2,-4],[39,-28],[39,-36],[24,-30],[10,-24],[0,-25],[-9,-25],[-27,-44],[-27,-13],[-70,-13],[-22,-11],[-7,-8],[48,-18],[4,-10],[-6,-37],[-13,-12],[-40,-22],[-35,-6],[-6,4],[7,29],[-2,7],[-13,6],[-19,-11],[-47,-43],[-5,-7],[17,-11],[-4,-10],[-26,-30],[-10,-21],[-17,-20],[-76,-64],[5,-15],[-19,-56],[-11,-49],[13,-20],[64,-24],[31,-6],[37,-17],[66,-45],[22,-30],[3,-14],[-2,-15],[-8,-21],[-21,-38],[-50,-58],[-22,-16],[-34,-13],[-12,-10],[-43,-54],[-12,-30],[2,-26],[-9,-18],[-56,-35],[2,-6],[20,-3],[-7,-31],[-3,-43],[-10,-8],[-36,1],[-44,-17],[-3,-5],[-1,-31],[-118,-23],[-25,-59],[-14,-18],[-45,-43],[-29,-18],[-32,-10],[-17,-15],[-1,-18],[-9,-17],[-28,-26],[-14,-34],[-10,-5],[-51,-8],[-11,-11],[-5,-46],[-9,-1],[-19,11],[-24,-9],[-53,-51],[-12,-18],[1,-10],[8,-10],[13,-31],[-1,-20],[-20,-58],[-8,-9],[-25,-14],[-10,-32],[-23,4],[-19,-6],[-12,-21],[-14,-12],[-14,-4],[-18,-16],[-22,-31],[-20,-19],[-18,-9],[-18,-2],[-18,5],[-16,-4],[-14,-11],[-13,-18],[-11,-50],[-14,-22],[-9,-4],[-17,4],[-27,10],[-28,-4],[-44,-30],[-14,-23],[28,-5],[14,-7],[-1,-7],[-14,-6],[-25,1],[-14,-6],[-19,-13],[-45,-14],[-17,-10],[-34,-58],[-4,-13],[4,-3],[19,6],[23,-10],[11,-12],[8,-15],[7,-29],[4,-4],[-43,-49],[-12,-21],[-8,-8],[-5,6],[-6,55],[-3,9],[-10,1],[-10,-17],[-22,-65],[-23,-32],[-178,-83],[-26,-19],[-5,-35],[-7,-31],[-12,-24],[-14,-16],[-3,11],[1,86],[-3,18],[-18,11],[-8,-2],[-11,-5],[-18,-18],[-10,-5],[-14,1],[-23,-18],[-55,-59],[-36,-15],[-10,-12],[-15,-32],[-10,-12],[-15,-1],[-20,10],[-16,-7],[-12,-24],[-13,-9],[-35,17],[-15,-11],[-20,-31],[-21,-20],[-22,-9],[-56,-11],[-23,7],[-5,9],[1,38],[9,28],[9,13],[11,12],[17,1],[31,-8],[-4,9],[-11,11],[-29,19],[-28,10],[-16,-6],[-23,-15],[-15,-17],[-8,-19],[-10,-63],[-6,-17],[-67,-111],[-26,-34],[-25,2],[-13,-13],[-17,-27],[-17,-13],[-14,1],[-12,5],[-8,9],[1,9],[11,8],[-4,22],[-19,37],[-13,19],[-24,3],[-4,-17],[8,-84],[-1,-19],[-15,-24],[-41,-27],[-12,2],[-37,53],[-34,11],[-2,-17],[7,-36],[-8,-32],[-25,-31],[-19,-15],[-13,1],[-1,21],[12,42],[3,35],[-6,28],[1,22],[7,15],[45,41],[20,7],[10,-11],[13,-1],[15,6],[10,14],[4,19],[20,26],[35,31],[40,57],[46,83],[53,72],[62,60],[66,48],[134,66],[10,-4],[-12,-21],[8,-14],[13,-1],[49,10],[20,14],[6,-13],[-7,-17],[-30,-17],[1,-14],[43,-67],[13,-10],[12,1],[4,9],[-3,48],[14,9],[30,2],[19,-6],[9,-15],[17,-12],[25,-10],[15,3],[6,16],[-10,19],[-48,40],[-13,18],[-3,23],[7,31],[14,45],[24,60],[21,42],[42,47],[29,23],[72,72],[140,73],[34,47],[47,52],[20,13],[0,-20],[6,-18],[32,-12],[20,-4],[10,4],[2,19],[-4,34],[-1,33],[2,30],[4,24],[21,43],[31,49],[43,57],[27,26],[25,14],[24,25],[42,58],[14,10],[30,11],[11,-5],[7,-14],[8,-10],[30,-8],[21,13],[-4,7],[-16,5],[-11,8],[-10,35],[-20,21],[-5,24],[4,37],[17,87],[3,90],[16,51],[31,19],[69,13],[-40,23],[-16,0],[-26,11],[-10,56],[0,40],[18,47],[64,80],[71,55],[-10,4],[-8,17],[32,110],[32,98],[-43,-84],[-50,-64],[-145,-74],[-99,-63],[-47,-14],[-31,15],[-24,60],[-14,22],[-18,39],[8,50],[14,35],[31,6],[34,-17],[31,-1],[-39,34],[-56,30],[-26,-9],[-19,-49],[-26,-34],[-23,12],[-14,14],[10,-41],[-18,-63],[-6,-43],[25,-115],[-5,-45],[-45,-21],[-37,37],[-76,145],[-27,41],[-60,69],[-20,-10],[-25,-34],[-24,-9],[-65,50],[-30,37],[-28,46],[-44,-25],[-38,-30],[-44,-48],[-30,0],[-81,-41],[-9,-1],[-11,-22],[-11,-10],[-10,-43],[-109,-33],[-108,19],[38,23],[42,19],[37,44],[-16,60],[-3,30],[1,38],[40,54],[-42,0],[-27,-19],[-25,40],[-12,79],[29,47],[13,36],[12,50],[1,43],[-23,72],[-63,153],[-29,115],[-50,60],[37,100],[41,91],[54,40],[-4,6],[-30,0],[-19,-5],[-18,-30],[-18,-22],[-56,-116],[-37,-56],[-23,-16],[38,-22],[6,-19],[7,-41],[-10,-51],[-10,-28],[-45,2],[-40,-41],[-95,-44],[-128,-26],[-63,3],[-65,52],[0,30],[3,26],[-94,90],[-54,89],[-38,2],[-33,23],[-39,37],[3,30],[6,21],[-24,15],[-31,-2],[-36,11],[94,114],[32,77],[27,11],[34,-12],[47,-30],[40,-14],[14,-14],[15,-27],[-16,-45],[-14,-31],[17,8],[50,49],[37,43],[17,-4],[12,-8],[20,-44],[25,-45],[56,43],[30,53],[-25,24],[-31,13],[-79,19],[20,15],[50,-2],[19,15],[-20,20],[-25,18],[-68,-60],[-124,3],[-87,35],[-87,-6],[-13,7],[-17,19],[49,45],[34,25],[2,14],[-20,2],[-38,-12],[-17,21],[3,36],[-6,-4],[-15,-19],[-21,10],[-18,16],[9,17],[19,24],[-8,3],[-17,-5],[-16,-31],[3,-25],[0,-36],[-28,-7],[-24,5],[-17,36],[-17,78],[-48,20],[-12,39],[30,51],[-13,26],[-32,8],[-37,-25],[-17,22],[-3,25],[-1,36],[10,3],[9,-7],[74,20],[7,10],[-59,30],[-16,31],[24,18],[44,2],[61,19],[-25,33],[-6,18],[-5,31],[10,51],[72,117],[71,98],[22,22],[32,12],[30,-9],[31,-21],[6,9],[-11,9],[-13,40],[43,15],[26,45],[2,13],[-28,-18],[-29,-31],[-7,31],[-7,71],[12,68],[10,30],[24,29],[69,11],[13,-6],[2,14],[-41,42],[17,34],[15,17],[84,27],[45,-9],[58,-31],[33,-39],[-5,-20],[-8,-12],[-17,-13],[-7,-10],[3,-8],[25,24],[40,28],[23,-12],[17,-23],[20,1],[63,19],[32,20],[39,53],[51,34],[73,108],[21,44],[25,7],[23,-4],[15,-37],[23,-10],[130,9],[67,16],[46,35],[48,59],[28,40],[13,52],[-17,66],[-18,56],[-23,127],[-64,83],[-46,25],[-30,-3],[22,53],[61,-6],[40,11],[33,26],[10,19],[16,40],[-5,42],[-9,23],[-22,26],[-27,37],[-18,12],[-16,-1],[-78,-74],[-46,-2],[-35,14],[-30,-42],[-85,-37],[-45,-38],[-84,-93],[-21,-43],[-26,-2],[-19,82],[-91,79],[-28,-27],[15,-25],[21,-17],[34,-8],[-15,-23],[-11,-32],[-34,30],[-61,43],[-63,22],[-164,-3],[-108,-44],[-10,9],[-10,4],[-18,-11],[-8,-17],[-11,-12],[-22,-4],[-45,7],[-85,27],[-194,41],[-50,24],[-44,59],[1,40],[19,17],[-1,58],[-38,15],[-77,82],[-28,35],[6,4],[14,-9],[26,-7],[64,11],[22,53],[48,16],[44,-8],[-10,15],[-11,11],[-114,27],[-16,-8],[-205,48],[-162,84],[-13,16],[-15,36],[22,35],[22,17],[1,-20],[3,-19],[93,45],[48,58],[92,10],[22,16],[28,31],[41,54],[58,28],[39,25],[51,15],[44,-25],[13,-3],[80,-5],[26,11],[11,8],[8,12],[-78,45],[8,25],[10,18],[91,52],[70,17],[37,-1],[108,68],[59,19],[112,13],[92,3],[25,-24],[-49,5],[-22,-4],[15,-9],[18,-17],[-5,-22],[-31,-66],[3,-53],[-20,-17],[-19,-24],[94,-76],[146,-5],[79,14],[45,-23],[38,-5],[103,12],[78,-16],[33,6],[72,113],[28,18],[31,-20],[40,-16],[25,12],[21,-29],[-10,61],[-14,23],[-118,41],[-78,-20],[-25,23],[8,47],[-84,115],[-35,24],[-42,1],[-21,40],[-18,51],[36,21],[33,10],[30,-17],[33,-67],[32,-10],[-9,-68],[39,-62],[89,-57],[70,21],[50,-1],[30,-12],[74,-52],[37,-6],[116,27],[1,51],[-9,37],[-28,23],[-78,-5],[-62,38],[-52,-10],[-96,-58],[-48,23],[-30,31],[-49,31],[-6,60],[41,69],[30,32],[-27,24],[-68,17],[-119,-18],[-5,24],[0,25],[-48,-49],[-50,10],[-66,-5],[-148,43],[-52,54],[-22,43],[-40,119],[-50,75],[-351,252],[-159,64],[-77,70],[-48,17],[-46,8],[-59,22],[40,28],[27,10],[-28,-30],[21,-7],[35,17],[18,20],[27,85],[28,129],[-7,51],[194,-10],[129,8],[43,12],[163,20],[43,14],[78,43],[92,77],[80,101],[12,27],[5,-7],[7,5],[9,38],[10,90],[39,85],[168,193],[77,77],[26,35],[27,25],[19,-24],[9,-7],[5,-11],[-16,-6],[-26,-25],[-36,-16],[-9,-9],[22,2],[63,18],[36,22],[179,41],[97,66],[3,15],[144,84],[20,-4],[23,-10],[-40,-55],[28,-14],[-25,-66],[52,-1],[12,-30],[3,26],[-1,37],[4,37],[8,25],[36,-11],[83,27],[-100,4],[-60,59],[-33,1],[111,87],[102,53],[23,-1],[11,-10],[2,-16],[-22,-10],[-21,-19],[10,-16],[15,-3],[48,14],[22,17],[105,-2],[30,13],[8,12],[134,2],[25,9],[85,46],[78,57],[36,31],[61,79],[53,51],[87,51],[21,-6],[-28,-10],[-20,-22],[27,-29],[183,-59],[46,-4],[18,-35],[-15,-34],[-47,-38],[-95,-39],[29,-15],[19,-35],[28,-4],[46,13],[35,21],[74,70],[24,39],[17,9],[62,-9],[35,-20],[40,-35],[-15,-34],[-16,-20],[52,-26],[57,-6],[55,-21],[77,44],[60,9],[57,-2],[73,24],[125,-32],[31,8],[50,-5],[53,-20],[19,-21],[-57,-44],[-9,-46],[20,-19],[36,-4],[4,-27],[23,-6],[112,2],[-9,-13],[-5,-15],[-35,-34],[200,-20],[27,19],[41,8],[88,26],[33,-12],[39,-26],[36,-6],[34,6],[78,38],[91,2],[37,-13],[39,6],[118,-44],[44,-5],[58,-57],[30,-1],[34,24],[29,-1],[29,-23],[47,-7],[22,-37],[24,-13],[178,-27],[88,13],[129,-4],[62,-17],[65,2],[107,-63],[56,-9],[11,-15],[161,-15],[56,33],[98,8],[88,28],[50,0],[59,-7],[22,3],[16,12],[142,-47],[79,-55],[35,-40],[166,-57],[48,-32],[33,-36],[19,-3],[14,10],[58,-3],[22,-5]],[[10833,91964],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[0,-169],[0,-168],[0,-168],[66,-24],[66,-23],[20,46],[71,-35],[62,-32],[40,40],[43,44],[58,3],[65,3],[43,3],[0,-37],[-16,-62],[-14,-51],[40,-52],[48,-27],[46,-26],[20,-71],[50,-55],[37,-41],[36,-40],[52,-57],[37,-40],[48,-53],[29,-32],[13,-61],[17,-74],[-10,-44],[23,-7],[44,49],[42,30],[52,38],[35,25],[65,1],[31,74],[1,103],[32,-2],[20,14],[8,31],[-20,41],[62,19],[45,14],[65,39],[63,37],[30,-29],[29,-28],[59,-67],[4,-16],[-4,-32],[-6,-31],[35,-88],[11,-10],[29,-12],[35,-29],[15,-26],[50,-40],[9,-17],[4,-27],[9,-23],[9,-17],[9,-24],[22,-28],[41,-31],[29,-22],[40,-30],[41,-62],[36,-54],[40,-54],[-6,-42],[41,-66],[43,-84],[33,-74],[24,-41],[28,-60],[34,-74],[39,-83],[30,-54],[39,-75],[20,-45],[-13,-31],[-17,-38],[51,-18],[34,-12],[-8,-42],[-12,-56],[40,-22],[26,-15],[-5,-29],[15,-33],[2,-55],[48,4],[21,2],[29,-25],[38,-32],[38,-30],[32,-25],[42,-15],[53,-22],[25,-44],[48,-20],[18,-62],[55,-23],[33,16],[11,-26],[9,-29],[3,-37],[-3,-36]],[[4590,83513],[27,-95],[12,-18],[17,-10],[24,-11],[15,-14],[12,-21],[2,-10],[-76,38],[-48,-56],[-15,-7],[-136,-3],[-27,-10],[-18,-18],[-31,-52],[-16,-19],[-16,-12],[-36,-14],[-42,2],[-22,7],[-12,24],[-11,48],[0,14],[5,23],[38,31],[12,17],[49,109],[14,15],[16,4],[41,-8],[36,32],[77,48],[17,6],[55,1],[16,-8],[11,-13],[10,-20]],[[12971,83838],[6,-16],[0,-11],[-40,-38],[-1,-8],[-9,-23],[-9,-9],[-15,-26],[-28,-27],[4,83],[-28,48],[28,24],[19,-7],[31,-3],[30,22],[12,-9]],[[13517,83571],[28,-75],[2,-27],[-28,-9],[-21,4],[-11,8],[-3,13],[7,38],[-14,22],[-16,8],[-15,-14],[0,38],[11,27],[-7,36],[0,28],[4,9],[15,-1],[30,-29],[18,-76]],[[13302,84164],[-6,-96],[-11,5],[-10,1],[-22,-14],[-22,6],[-11,11],[-4,12],[4,28],[-12,16],[-42,6],[-16,7],[-9,30],[-2,39],[7,14],[21,11],[16,47],[10,7],[35,94],[17,-7],[31,-57],[39,-83],[-13,-77]],[[13617,83806],[-10,-63],[-19,-65],[-29,-35],[-21,8],[-15,28],[-14,-1],[-15,6],[-8,23],[8,30],[-7,23],[-8,-20],[-13,-19],[-33,-24],[-23,-47],[-11,-30],[-13,33],[-9,78],[-1,33],[24,50],[31,48],[6,142],[99,71],[9,-4],[32,-53],[35,-74],[8,-34],[1,-58],[-4,-46]],[[12954,84679],[18,-18],[10,19],[19,-1],[35,-17],[20,-25],[12,-29],[1,-17],[-3,-40],[2,-40],[-1,-20],[-5,-18],[-8,-13],[-8,-2],[-27,36],[-31,65],[-24,20],[-1,-7],[7,-18],[19,-35],[3,-21],[14,-26],[6,-19],[3,-26],[0,-22],[-4,-19],[-6,-12],[-9,-6],[-47,6],[-28,-13],[-33,7],[-8,11],[-5,19],[-2,46],[-9,66],[2,50],[-21,46],[-18,27],[-26,25],[-18,24],[5,20],[27,14],[44,-3],[95,-34]],[[13094,83464],[6,-8],[7,5],[12,21],[20,-4],[14,-7],[9,-8],[-5,-30],[-4,-49],[-8,-17],[-8,-24],[-28,14],[-23,31],[-33,53],[-19,38],[-1,16],[-12,12],[-22,66],[-13,52],[-21,6],[-26,15],[-10,29],[7,25],[37,12],[55,-64],[9,-28],[20,-32],[3,-44],[10,-18],[24,-62]],[[9335,86664],[6,-16],[53,4],[16,-3],[6,-7],[-7,-11],[-21,-14],[-60,-25],[-49,-33],[-6,3],[-9,36],[-9,15],[-6,20],[0,7],[9,14],[18,20],[13,8],[46,-18]],[[8962,86297],[-31,-8],[-7,17],[16,42],[13,24],[10,6],[35,48],[39,35],[36,51],[37,72],[6,27],[17,3],[28,-18],[17,-25],[-8,-20],[-92,-103],[-8,-13],[-8,-35],[-8,-13],[-12,-5],[-9,-15],[-5,-25],[-11,-14],[-18,-1],[-12,-7],[-6,-12],[-19,-11]],[[8984,86664],[0,-15],[-9,-14],[8,-27],[-14,-46],[-6,-29],[-8,-19],[-7,-7],[-8,4],[-2,11],[5,16],[-18,-1],[-6,40],[10,13],[4,17],[1,12],[12,51],[4,3],[2,-12],[3,-3],[7,5],[9,22],[4,3],[9,-24]],[[8908,86881],[-35,-5],[-16,7],[-3,8],[7,29],[0,12],[17,5],[21,-14],[6,-14],[3,-28]],[[7498,84749],[-35,-19],[-7,1],[-21,-38],[-17,-16],[-22,30],[5,46],[20,30],[97,-10],[7,-9],[1,-7],[-8,-6],[-20,-2]],[[7643,85532],[-9,-4],[-20,18],[-13,19],[9,14],[39,30],[19,0],[8,-4],[3,-10],[-2,-13],[-8,-18],[-26,-32]],[[7433,85166],[-8,-16],[-7,4],[-16,19],[-31,28],[-15,18],[-1,8],[11,9],[38,-22],[15,-20],[14,-28]],[[6787,83998],[-11,-19],[-21,2],[-12,6],[-3,16],[32,48],[7,6],[6,-2],[3,-20],[-1,-37]],[[7032,84352],[-19,-14],[-6,5],[-1,11],[5,18],[9,18],[29,34],[29,23],[15,-2],[6,-14],[-19,-30],[-48,-49]],[[7164,84397],[-13,-1],[-21,15],[3,18],[29,22],[29,-3],[3,-12],[-2,-14],[-2,-8],[-9,-8],[-17,-9]],[[5365,83706],[4,0],[9,4],[18,33],[6,1],[0,-10],[-8,-32],[14,-43],[13,-21],[-1,-7],[-34,-15],[-25,11],[-14,-4],[-12,-15],[-9,17],[-6,79],[2,14],[14,27],[18,13],[8,-4],[7,-11],[1,-11],[-5,-26]],[[4917,83436],[-6,-2],[-20,17],[-7,14],[-5,20],[39,30],[8,0],[8,-16],[1,-14],[-11,-37],[-7,-12]],[[4846,83180],[-24,-13],[-26,13],[-22,25],[-2,28],[49,-18],[10,-9],[15,-26]],[[5591,83599],[-17,-13],[-5,-16],[-13,-7],[-11,-13],[-37,-59],[-16,-11],[18,51],[3,16],[0,10],[-5,38],[10,-1],[9,8],[18,34],[16,3],[17,40],[9,3],[4,-6],[-7,-24],[16,-22],[-4,-22],[-5,-9]],[[3933,82989],[-11,-10],[-8,-2],[-7,6],[-28,-7],[-6,4],[-13,34],[-1,18],[5,14],[13,13],[21,11],[21,-2],[35,-32],[17,-18],[3,-12],[-12,-11],[-29,-6]],[[4011,83027],[-12,-4],[-3,6],[-2,25],[-9,40],[18,15],[11,3],[4,-6],[13,-30],[13,-8],[9,-6],[-16,-9],[-26,-26]],[[5300,85585],[-20,-9],[-22,5],[-17,57],[13,1],[28,38],[60,30],[15,4],[-57,-126]],[[2016,86668],[60,-38],[39,4],[30,-31],[13,-26],[-46,19],[-66,-2],[-90,77],[-32,18],[7,43],[35,22],[17,-58],[33,-28]],[[2733,84783],[-29,-28],[-26,10],[-7,20],[-1,9],[75,22],[-12,-33]],[[2863,82285],[-4,-24],[-4,-8],[-43,12],[-29,-4],[-3,14],[3,12],[45,18],[18,1],[12,-10],[5,-11]],[[2574,82131],[-18,-18],[-5,7],[-3,23],[10,17],[30,38],[21,-7],[6,-10],[0,-14],[-8,-19],[-10,-10],[-12,0],[-11,-7]],[[2093,81953],[-21,-8],[-22,9],[10,30],[11,16],[21,20],[24,-9],[19,-25],[-42,-33]],[[2846,84466],[36,-11],[21,7],[18,-6],[3,-13],[-31,-30],[-13,2],[-37,36],[3,15]],[[1031,81677],[-17,-34],[-13,15],[-5,47],[10,12],[27,-34],[-2,-6]],[[1105,81798],[-6,-17],[-28,18],[-9,15],[-2,15],[8,25],[22,0],[12,-10],[12,-19],[4,-12],[-13,-15]],[[792,81633],[-8,-7],[-15,-6],[-42,6],[-26,-2],[-28,-4],[-22,-10],[-4,14],[1,12],[92,32],[22,16],[13,21],[12,39],[10,12],[6,-1],[13,-15],[-5,-20],[-11,-18],[-4,-17],[-4,-52]],[[99603,81748],[-17,-10],[-10,25],[-1,15],[10,15],[17,-9],[10,-15],[-9,-21]],[[99847,81435],[-49,0],[-97,94],[-50,29],[-28,33],[13,7],[60,-23],[49,-51],[27,-33],[31,-28],[34,-12],[10,-16]],[[98255,82004],[-18,-2],[-11,20],[-60,8],[6,19],[26,8],[39,30],[33,-5],[-9,-28],[-6,-50]],[[12508,84879],[24,-63],[17,-49],[15,-59],[26,-122],[12,-46],[3,-26],[3,-66],[-4,-14],[-7,-13],[-2,-19],[7,-50],[1,-77],[-7,-43],[-8,-7],[-19,14],[-15,24],[-12,24],[-28,77],[-9,36],[0,25],[4,19],[9,12],[17,31],[-3,5],[-12,-7],[-25,-4],[-22,24],[-17,13],[3,45],[-4,12],[-34,-13],[-13,12],[-3,17],[1,25],[6,21],[32,55],[-3,11],[-15,2],[-21,19],[-9,61],[-22,35],[-14,-3],[-29,-99],[-15,-22],[-42,-14],[9,28],[4,25],[-15,74],[-1,29],[10,21],[30,9],[15,13],[13,20],[3,20],[23,53],[10,10],[29,0],[60,-59],[18,-8],[26,-38]],[[12589,85346],[70,-13],[52,3],[47,-86],[29,-70],[17,-49],[10,-47],[13,-45],[-1,-7],[-28,31],[-19,62],[-10,24],[-10,11],[-10,23],[-21,59],[0,17],[-9,16],[-11,6],[-12,-3],[-4,-5],[2,-41],[9,-46],[51,-99],[34,-57],[7,-18],[5,-52],[-15,-23],[18,-48],[-1,-9],[-4,-9],[-48,-21],[-45,-89],[-48,-52],[-23,-8],[-10,9],[-11,20],[-6,26],[-1,33],[12,21],[24,109],[0,35],[-30,50],[-18,40],[-9,57],[-17,149],[-7,48],[-11,39],[-14,32],[-10,35],[-8,38],[3,15],[24,-20],[29,-55],[15,-36]],[[12297,85393],[40,-56],[0,-13],[-8,-38],[-22,-11],[6,-15],[17,-12],[11,10],[42,54],[13,11],[8,1],[51,-16],[44,-26],[13,-20],[8,-36],[-12,-79],[-37,-13],[-17,1],[-18,12],[-30,-28],[25,-20],[75,-5],[23,-44],[6,-34],[-16,-62],[-43,17],[-37,36],[-77,51],[-19,3],[-12,-9],[-4,-31],[1,-68],[-20,-34],[-61,15],[-24,51],[-22,80],[-84,96],[-23,19],[-30,57],[12,45],[4,26],[16,7],[23,20],[14,44],[21,-36],[28,-34],[1,32],[13,26],[28,-1],[13,5],[18,24],[26,12],[16,-14]],[[12898,84296],[53,-12],[48,1],[17,-24],[10,-25],[7,-24],[1,-22],[-1,-15],[-6,-17],[2,-5],[94,-55],[44,-58],[18,-30],[10,-26],[19,-64],[39,-74],[21,-23],[11,-22],[-6,0],[-28,16],[-60,50],[-5,-2],[-5,-27],[-9,-24],[-14,-17],[11,-5],[48,11],[41,-49],[15,-8],[16,-35],[0,-14],[-9,-26],[-6,-10],[2,-7],[11,-4],[45,7],[8,-12],[-7,-101],[6,-37],[0,-17],[-5,-22],[0,-19],[4,-19],[1,-18],[-12,-45],[-12,-8],[-19,0],[-15,13],[-22,39],[-21,60],[-8,9],[-27,9],[-5,7],[-17,1],[-13,25],[2,33],[-11,33],[1,15],[-12,6],[-10,-9],[6,-33],[-6,-25],[-22,11],[-36,80],[-41,65],[-17,15],[5,19],[20,10],[17,-1],[3,11],[-34,63],[1,18],[12,31],[-15,13],[-43,-9],[-15,6],[-13,26],[-7,21],[-37,4],[-14,-2],[-24,33],[-12,21],[5,11],[22,18],[13,-2],[25,-20],[10,0],[25,27],[4,24],[18,20],[-3,21],[-10,35],[-23,10],[-46,-21],[-41,-32],[-16,12],[-3,20],[43,55],[19,30],[-4,17],[-14,23],[-1,58],[9,13]],[[12781,84587],[18,-40],[26,4],[14,-30],[11,-46],[-8,-29],[-11,7],[-13,-17],[-8,-56],[4,-55],[-4,-56],[-15,-57],[-3,-38],[-6,-11],[-7,-4],[-8,10],[-12,8],[-15,-32],[-19,0],[-15,73],[13,121],[31,25],[-18,32],[-39,39],[3,21],[-29,62],[-2,14],[5,52],[27,46],[37,8],[25,-20],[14,-17],[4,-14]],[[7662,85460],[10,-4],[10,34],[8,1],[33,-29],[20,6],[13,-35],[12,-4],[10,5],[7,-3],[-2,-38],[-24,-38],[-12,-9],[-15,9],[-6,4],[-10,17],[-8,21],[-5,1],[-18,-25],[0,-13],[8,-19],[-1,-11],[-20,-6],[-20,3],[-24,-16],[-5,10],[-4,29],[-7,-4],[-12,-35],[-12,-22],[-22,-18],[-5,-9],[-17,-1],[-24,-12],[-15,2],[-90,38],[-21,14],[74,87],[39,34],[22,-2],[22,-11],[12,2],[1,39],[-21,29],[1,12],[46,19],[18,-3],[19,-10],[18,-16],[17,-23]],[[3343,82571],[-85,-61],[-28,-45],[-21,-44],[-16,-24],[-12,-4],[-14,-11],[-28,-31],[-12,-3],[-90,-71],[-6,-1],[4,18],[28,26],[18,24],[20,40],[11,14],[4,20],[1,40],[5,15],[20,30],[14,17],[18,6],[38,-5],[16,15],[4,11],[-9,11],[-2,18],[2,32],[11,28],[19,25],[27,19],[33,13],[24,1],[44,-29],[7,-13],[-11,-29],[-6,-27],[-28,-25]],[[3718,82891],[12,-27],[21,17],[15,24],[12,31],[7,12],[11,-16],[29,-22],[-25,-34],[-47,-51],[-16,-34],[-1,-15],[46,12],[13,-2],[8,-12],[-13,-13],[-25,-13],[-21,-24],[-50,-42],[-19,-35],[-23,-14],[-30,-3],[-54,-23],[-32,-21],[-8,-12],[-11,-5],[-12,1],[-13,-10],[-14,-19],[-12,-9],[-19,-2],[-11,-8],[-11,0],[-31,23],[-8,14],[28,27],[20,9],[30,4],[29,25],[61,34],[19,18],[12,63],[14,11],[8,25],[33,-1],[16,-28],[5,-4],[3,3],[2,22],[17,16],[-10,12],[-31,15],[-23,6],[-15,0],[-13,8],[-9,17],[-5,17],[1,17],[8,19],[14,21],[17,12],[36,9],[32,14],[17,2],[13,-6],[3,-55]],[[1791,81875],[54,-23],[68,2],[25,-5],[0,-7],[-43,-10],[-15,4],[-38,-13],[-26,-3],[-58,13],[-46,-9],[-12,3],[-14,11],[-16,18],[-1,12],[15,4],[40,-15],[4,8],[34,14],[29,-4]],[[1478,81817],[-149,-24],[-22,16],[22,10],[27,5],[56,27],[69,23],[54,29],[47,18],[13,30],[-41,16],[-8,12],[19,14],[16,21],[39,25],[34,-31],[8,-20],[-4,-25],[-7,-25],[-30,-13],[-4,-13],[16,-38],[-62,-33],[-93,-24]],[[946,81720],[2,-20],[32,3],[10,-10],[0,-38],[-5,-11],[-4,-2],[-12,8],[-13,-19],[-59,-48],[-18,27],[-35,-42],[24,108],[28,16],[11,12],[-3,32],[13,52],[28,-2],[13,-22],[0,-14],[-12,-30]],[[589,81595],[-6,-19],[-7,0],[-37,32],[-5,11],[22,15],[6,11],[-3,16],[-16,21],[-30,27],[-11,20],[7,12],[14,7],[45,2],[25,-34],[18,-12],[43,-8],[-22,-14],[-13,-13],[-15,-53],[-15,-21]],[[99923,81742],[-23,-14],[-26,7],[-15,23],[2,27],[34,29],[43,-37],[-15,-35]],[[99281,81729],[-24,-24],[-19,24],[-3,12],[36,42],[28,9],[11,15],[12,53],[20,2],[10,-6],[-5,-25],[-16,-38],[0,-27],[-50,-37]],[[98002,82380],[48,-19],[33,9],[41,-30],[52,-53],[-12,-10],[-13,-5],[-12,0],[-40,-8],[-22,2],[-40,-36],[-45,26],[-15,51],[-35,12],[-28,18],[51,40],[37,3]],[[6783,62794],[-12,-27],[-16,2],[-55,59],[-7,32],[4,148],[-21,120],[-23,91],[17,47],[22,37],[25,69],[-21,88],[6,53],[11,9],[59,-65],[117,-97],[31,-68],[6,-74],[21,-9],[11,-50],[30,-44],[11,-26],[-13,-40],[-56,-78],[-72,-34],[-62,-87],[-13,-56]],[[6329,64063],[59,-15],[14,6],[10,-12],[48,-8],[9,-5],[-10,-30],[-31,-27],[-45,24],[-75,8],[3,23],[7,16],[1,29],[10,-9]],[[6531,63901],[8,-11],[29,16],[22,5],[35,-38],[13,-26],[23,-27],[8,-21],[-6,-24],[-26,-40],[-36,-10],[-20,-17],[-28,4],[-8,7],[-3,51],[-9,55],[-17,-7],[-20,19],[-21,46],[-2,27],[11,44],[20,5],[15,-24],[12,-34]],[[6167,64202],[9,-3],[13,4],[4,-46],[14,-25],[5,-15],[-15,-16],[-30,-7],[-14,13],[-15,29],[-15,-8],[-3,23],[-3,6],[-11,-6],[10,-30],[-27,-2],[-9,4],[-7,34],[-28,64],[0,25],[-10,31],[42,8],[28,53],[16,5],[31,-85],[0,-24],[6,-23],[9,-9]],[[5730,64476],[-25,-32],[-14,14],[-27,5],[-10,25],[-29,22],[-11,30],[17,56],[41,48],[63,-2],[14,-38],[1,-28],[-8,-31],[-4,-45],[-8,-24]],[[5505,64424],[-5,-26],[-10,4],[-2,23],[6,31],[16,27],[18,41],[14,-6],[-8,-27],[-1,-29],[-20,-16],[-8,-22]],[[6431,63808],[-17,-16],[-18,8],[-4,39],[-17,50],[30,10],[17,-14],[9,-16],[11,-27],[-11,-34]],[[29247,77766],[13,0],[65,1],[115,0],[116,0],[115,0],[116,1],[116,0],[115,0],[116,1],[27,111],[26,51],[34,-17],[19,2],[21,26],[17,17],[11,-3],[9,-24],[8,-17],[9,5],[8,23],[0,32],[10,22],[13,4],[12,-1],[6,11],[-1,16],[-4,25],[1,30],[30,53],[36,36],[12,18],[4,37],[21,38],[10,22],[2,19],[-5,24],[1,44],[7,54],[8,58],[19,52],[32,57],[8,75],[8,80],[38,77],[43,87],[24,50],[44,91],[31,64],[16,30],[17,35],[26,-10],[27,-11],[-4,-51],[5,-37],[12,-21],[18,-15],[14,-5],[17,0],[44,29],[52,19],[29,17],[5,17],[13,6],[21,-5],[39,-41],[45,-62],[35,-49],[2,-85],[0,-89],[1,-95],[1,-68],[0,-92],[1,-74],[1,-96],[1,-52],[5,-15],[-3,-20],[-2,-10],[1,-8],[2,-10],[-1,-15],[-4,-12],[-3,-15],[0,-25],[5,-15],[8,-8],[7,0],[8,-9],[12,-16],[17,-13],[18,-5],[12,3],[15,-8],[6,-22],[-3,-20],[-9,-10],[-9,-7],[-2,-16],[5,-16],[7,-14],[7,-25],[-3,-22],[-7,-18],[-3,-19],[6,-16],[15,-22],[9,-21],[14,-11],[7,8],[5,11],[6,8],[10,-5],[12,-6],[13,-7]],[[31354,77862],[-2,-18],[8,-29],[6,-57],[-9,-26],[2,-34],[26,-10],[6,-10],[1,-13],[-57,-88],[-48,13],[-26,-24],[-27,-6],[-12,-40],[-15,-8],[-20,3],[-18,11],[-13,-6],[-19,-70],[-16,6],[-6,-26],[-8,-11],[-12,-9],[-10,31],[-7,30],[-9,6],[-13,8],[-13,0],[-9,-5],[-11,-19],[-16,-16],[-12,13],[-9,23],[-8,-36],[-12,-38],[2,-44],[-5,-26],[-11,7],[-11,23],[-31,18],[-25,-1],[5,24],[24,35],[-8,7],[-11,-5],[-5,5],[8,32],[1,35],[-10,-12],[-14,-37],[-31,-30],[1,-49],[-30,-102],[-1,-43],[-19,-34],[-25,-30],[-33,9],[-25,-26],[-13,-29],[-11,-5],[-5,38],[-5,11],[-9,-55],[-9,-4],[-4,40],[-4,26],[-13,-23],[-9,-59],[-9,5],[-2,22],[-7,7],[-2,-25],[3,-36],[-5,-19],[-8,10],[-9,17],[-15,-13],[-14,-5],[0,17],[3,22],[-27,-12],[-32,-39],[-26,-55],[9,-9],[10,-17],[-44,-84],[-44,-76],[-34,-123],[-14,-15],[-11,-22],[-13,-75],[-14,-66],[8,-30],[5,-30],[13,-30],[11,-3],[11,5],[9,-1],[5,-13],[-2,-15],[-13,-4],[-26,-26],[-22,-11],[-11,-32],[-16,-37],[-32,-58],[13,-18],[50,-20],[22,-21],[34,-109],[-8,-10],[-3,-20],[30,-28],[9,-78],[25,-27],[36,-16],[45,24],[37,32],[-1,27],[-24,61],[-5,29],[-18,19],[-6,-16],[-11,21],[-2,12],[11,5],[12,-2],[14,-11],[36,-67],[10,-89],[3,-56],[-4,-19],[-11,4],[-20,-4],[-96,-29],[-21,-25],[-49,-28],[-3,14],[3,28],[-3,59],[-10,3],[-75,-96],[-30,-6],[-24,-28],[-6,16],[-4,71],[15,61],[-8,-1],[-26,-36],[-11,22],[-5,24],[-8,14],[-9,5],[7,-53],[-17,-40],[-5,-104],[-22,-43],[-68,-27],[-45,6],[-40,-9],[-53,-20],[-29,12],[-30,-21],[-103,-6],[-21,11],[-28,-39],[-44,-24],[-111,-88],[-25,-33],[-29,-50],[-21,-27],[-16,-9],[-10,-22],[-11,-15],[10,50],[12,43],[10,82],[-3,66],[-12,28],[-12,18],[14,-66],[2,-80],[-5,-47],[-27,-91],[-12,-21],[-13,-19],[-10,-8],[-10,-15],[-11,-23],[-10,-45],[6,-42],[53,-15],[15,13],[7,-30],[4,-42],[-4,-45],[-9,-45],[-7,-57],[-5,-86],[-9,-78],[-1,24],[5,94],[-9,-10],[-6,-22],[-16,-121],[-22,-65],[-21,-45],[-21,7],[5,-36],[-6,-18],[-5,-39],[-13,-26],[-12,3],[-17,-18],[-6,-13],[-1,-26],[-11,-23],[-42,-119],[-35,-35],[-9,5],[10,56],[6,57],[-22,24],[-21,13],[-23,-1],[-27,44],[-34,32],[-47,86],[1,24],[-1,41],[14,63],[14,45],[19,23],[56,23],[14,36],[8,30],[-28,-52],[-41,-17],[-22,-19],[-18,-29],[-10,-37],[-24,-44],[2,-29],[4,-21],[-2,-44],[15,-43],[30,-70],[5,-109],[23,-72],[35,-85],[27,-24],[1,-32],[-12,-52],[-17,-24],[22,5],[10,-12],[10,-43],[0,-44],[-4,-25],[-6,-10],[0,25],[-5,9],[-7,-11],[-5,-13],[-2,-49],[-5,-25],[-18,-7],[-19,-66],[-17,-37],[-67,-249],[2,-42],[-12,-14],[-19,-11],[-19,-25],[-12,-27],[-12,-74],[-22,-84],[-14,35],[-4,30],[7,77],[24,128],[26,79],[21,37],[16,76],[-21,12],[-32,-1],[6,35],[9,31],[-16,31],[-10,4],[-10,12],[12,26],[5,27],[-3,34],[5,25],[-9,-4],[-13,-27],[-8,-10],[-5,23],[-6,-5],[-4,-16],[-9,-9],[-18,22],[-26,25],[-15,43],[-8,34],[8,61],[18,10],[24,-9],[31,0],[-4,13],[-11,-2],[-33,49],[-11,30],[-18,8],[-8,-29],[-9,-7],[11,62],[15,3],[22,17],[-6,36],[-14,16],[-25,-20],[0,26],[5,32],[19,0],[16,-10],[14,52],[1,24],[-24,-34],[-5,73],[23,72],[22,31],[27,-1],[28,5],[-17,13],[-18,7],[13,28],[12,5],[11,24],[-27,-3],[3,46],[-13,-9],[-16,-5],[-6,-19],[1,-33],[-4,-21],[-13,-18],[-20,-13],[-2,23],[-7,11],[-3,-50],[-5,-17],[-15,47],[-5,-10],[1,-13],[-4,-23],[-13,-12],[1,-29],[-5,-16],[-42,25],[-1,-8],[24,-56],[17,-18],[2,-30],[-15,-25],[-20,21],[-4,-1],[11,-37],[7,-33],[-7,-27],[1,-33],[-1,-30],[-5,-26],[10,-121],[12,-33],[12,-32],[6,-29],[-12,-5],[-20,25],[-17,18],[-21,59],[-4,24],[-5,19],[3,-43],[7,-48],[65,-107],[12,-42],[9,-32],[-2,-31],[-17,22],[-15,28],[-38,32],[-49,19],[-28,74],[1,-31],[-7,-26],[-16,32],[-11,27],[-4,29],[-20,-2],[-22,-25],[-22,6],[-2,50],[5,27],[24,62],[23,33],[10,41],[-4,64],[-4,-65],[-13,-33],[-20,-24],[-27,-44],[-6,-41],[-8,-77],[11,-25],[11,-7],[34,17],[18,-8],[39,-91],[72,-37],[27,-23],[22,-48],[32,-27],[25,-40],[1,-27],[-9,-30],[-3,-42],[-11,-27],[-26,-3],[-15,7],[-84,147],[-10,14],[-31,77],[-36,41],[-11,-1],[52,-76],[21,-53],[37,-75],[26,-32],[20,-50],[18,-23],[50,-33],[-18,-24],[28,-20],[4,-37],[-3,-42],[-38,16],[-1,-31],[3,-18],[-16,-15],[-24,20],[-61,113],[1,-15],[5,-18],[35,-72],[31,-44],[27,-20],[21,-36],[7,-22],[5,-34],[-15,-22],[-18,-13],[-17,23],[-12,24],[-27,40],[-8,46],[-20,-3],[-84,58],[-68,7],[7,-12],[8,-8],[54,-14],[22,-26],[44,-24],[26,-6],[11,-73],[35,-49],[5,-37],[25,-4],[43,36],[28,-13],[40,-10],[9,-30],[7,-55],[14,-63],[37,-246],[55,-202],[7,-34],[-13,30],[-41,134],[-23,96],[-23,170],[-7,38],[-8,16],[-5,-13],[-2,-21],[4,-17],[-9,-56],[4,-26],[14,-26],[17,-67],[13,-89],[-18,36],[-19,19],[-29,15],[-25,26],[1,-37],[-2,-40],[-20,12],[-14,13],[12,-42],[-26,13],[-17,-3],[-11,-38],[-15,-23],[-23,-7],[-33,34],[-11,42],[-4,47],[-2,-55],[6,-58],[-2,-43],[32,-9],[30,8],[40,-2],[26,8],[16,14],[38,-12],[3,-53],[-4,-52],[-3,-56],[11,0],[12,18],[6,100],[35,37],[12,-3],[11,-32],[4,-32],[4,-45],[-9,-68],[-53,-80],[-38,-74],[-20,-15],[-28,8],[-32,19],[-15,4],[-12,-6],[-8,22],[-4,42],[-13,14],[-9,-2],[-7,-44],[-29,-13],[-41,19],[-42,37],[18,-40],[105,-74],[12,-14],[11,-20],[-15,-32],[-11,-36],[-2,-28],[-4,-18],[-42,-48],[-23,9],[-58,86],[27,-75],[21,-31],[43,-17],[80,28],[26,-31],[-22,-54],[-21,-37],[-28,-5],[-25,-10],[-7,-26],[-18,-2],[-27,-1],[-43,-2],[-23,6],[-33,-54],[-12,-7],[-18,10],[-7,43],[-8,21],[0,-80],[3,-22],[6,-16],[-38,-43],[-37,-54],[-13,-15],[-15,-27],[-30,-78],[-8,-57],[-11,-64],[-1,29],[2,48],[-8,55],[-5,-101],[-12,-47],[-109,3],[-47,-25],[-74,-86],[-22,-38],[-60,-145],[-16,-94],[-12,40],[3,29],[0,24],[-15,-51],[15,-76],[-13,-28],[-40,-54],[-22,-8],[-25,-16],[-8,-52],[-33,-49],[-19,-22],[-36,13],[11,-46],[-13,-36],[-23,-27],[-28,-18],[-16,2],[-13,-9],[-11,-23],[-26,-21],[-28,12],[-30,7],[-18,-12],[29,-21],[16,-31],[-3,-41],[-8,-15],[-18,-22],[-8,3],[-5,20],[-6,40],[-9,-9],[-1,-18],[-8,-7],[-25,64],[1,-49],[9,-37],[9,-19],[8,-12],[3,-17],[-18,-42],[-9,-10],[-16,-7],[-10,-26],[3,-22],[-14,-49],[-34,-30],[-10,1],[-9,-9],[5,-22],[9,-16],[-1,-14],[-9,-20],[-17,-6],[-10,-23],[3,-21],[6,-12],[-1,-21],[-21,-20],[-4,-21],[10,-6],[7,6],[6,-4],[-12,-34],[-11,-21],[-10,-37],[-24,-11],[1,-12],[13,-11],[12,-28],[-22,-53],[-13,4],[-8,12],[-5,-42],[2,-22],[-5,-46],[-8,-55],[-6,-22],[1,-42],[4,-41],[13,-52],[20,-214],[13,-74],[24,-200],[41,-194],[57,-235],[93,-284],[11,-40],[-12,-35],[-4,-35],[-1,-54],[3,-52],[11,-64],[22,-98],[-12,20],[-31,140],[-4,82],[5,117],[-7,-3],[-6,-38],[-3,-44],[-8,-18],[-11,68],[1,31],[11,36],[-3,13],[-18,18],[-4,29],[2,29],[-10,15],[-8,-1],[5,-70],[9,-43],[11,-104],[17,-63],[10,-52],[118,-561],[28,-72],[10,-51],[11,-107],[2,-138],[-19,-252],[-5,-171],[-2,5],[-2,18],[-5,2],[-16,-78],[-23,-71],[-8,-110],[-10,-56],[-33,-58],[-20,1],[-50,-43],[-35,11],[-42,-25],[-27,3],[-16,52],[3,23],[6,24],[11,5],[36,-54],[7,23],[-11,27],[-21,15],[-16,17],[-31,125],[-33,85],[-6,57],[-56,35],[-41,53],[-27,94],[-15,166],[-18,19],[-8,13],[18,62],[19,51],[-15,-13],[-11,-19],[-14,-45],[-10,-7],[-9,7],[-11,87],[3,108],[15,40],[-23,2],[-23,-16],[3,-36],[-3,-20],[-18,6],[-13,12],[-17,38],[-25,71],[-49,197],[-10,27],[-17,29],[8,9],[14,6],[32,88],[25,54],[9,37],[-2,16],[-11,23],[-14,-20],[-7,5],[-16,47],[-16,13],[-11,-10],[12,-38],[10,-14],[-4,-56],[-4,-18],[-10,-16],[-15,9],[-7,-14],[-9,15],[-9,24],[-10,40],[26,225],[24,144],[3,163],[2,24],[-2,44],[-33,94],[-145,231],[-112,273],[-97,103],[-74,-23],[-12,-21],[-6,-26],[5,-31],[-7,-13],[-20,2],[-26,-7],[-70,-72],[-25,3],[-22,-19],[-17,-14],[-43,-8],[-37,-15],[-16,8],[-10,42],[0,43],[8,-33],[13,-26],[6,10],[2,23],[-13,45],[-41,58],[-48,84],[14,-3],[4,18],[-15,24],[7,27],[10,29],[-20,-4],[-18,-21],[-1,-24],[-3,-20],[-10,3],[-18,24],[-89,68],[-77,39],[59,17],[32,-14],[-3,21],[-8,13],[-26,17],[-32,-7],[-21,8],[-21,-16],[-22,-25],[-21,-12],[-80,-18],[-65,-19],[11,20],[11,13],[38,20],[6,41],[-9,39],[-10,-9],[-11,-31],[-13,22],[-14,0],[-4,-49],[-19,-33],[-8,-33],[-54,-26],[-7,9],[16,31],[-1,18],[-19,-15],[-30,-60],[-106,-19],[5,13],[23,3],[32,19],[-7,32],[-12,34],[-11,4],[-8,21],[1,64],[-7,38],[-18,39],[-6,-8],[-12,-66],[-11,-87],[-5,-28],[-32,-2],[-28,6],[-95,-11],[-35,30],[-15,6],[-9,-1],[-41,-27],[-48,-21],[-11,7],[-16,1],[-34,-71],[-40,-33],[-102,60],[-25,47],[-22,10],[-28,6],[-29,-58],[-23,-79],[36,-44],[30,-21],[50,18],[28,38],[23,-1],[11,8],[10,20],[19,-16],[1,-16],[-14,-22],[-17,-19],[-11,-22],[20,-45],[31,-15],[12,7],[7,50],[19,32],[26,-7],[-3,-20],[3,-19],[12,-33],[-1,-47],[2,-11],[-28,-20],[-21,-8],[-17,-27],[9,-15],[-17,-14],[-11,6],[-6,-6],[-2,-16],[-9,-16],[13,-46],[26,-30],[19,-38],[74,-50],[18,1],[18,-50],[14,-18],[14,-8],[-1,-35],[-25,-25],[-7,-31],[-6,-17],[-11,22],[-11,15],[-26,-47],[-13,-10],[6,51],[-10,20],[-15,52],[-21,31],[-16,11],[-12,20],[-14,8],[-13,-2],[-21,12],[-1,27],[-6,20],[-16,25],[-78,45],[-1,-19],[6,-14],[11,-9],[13,-19],[0,-54],[-6,-23],[-2,-33],[-5,-34],[-10,-26],[-21,-18],[-10,15],[-15,72],[-22,23],[-34,2],[-23,-16],[-25,-70],[-21,-11],[-70,36],[-80,55],[2,18],[13,6],[24,-7],[-1,19],[-25,61],[-4,28],[3,34],[-8,-1],[-15,-28],[-51,24],[-14,28],[-30,81],[-42,3],[-19,49],[-35,-20],[-17,-23],[-15,-35],[6,-19],[15,-29],[-7,-14],[-49,-21],[-114,24],[-34,21],[-44,46],[-62,37],[-30,6],[-29,-7],[-86,-4],[-19,-10],[-17,-16],[-11,18],[-5,31],[10,5],[11,19],[10,36],[1,22],[-7,15],[-13,1],[-29,-95],[16,-53],[-1,-19],[-58,-11],[-132,-107],[-51,-58],[2,19],[62,75],[-21,12],[-36,-19],[-13,7],[15,62],[-4,55],[-26,1],[-16,-43],[-11,1],[-14,19],[-11,-6],[8,-98],[16,-41],[13,-52],[-36,-64],[-34,-53],[-3,-51],[-34,-66],[-32,-38],[-74,-88],[-22,-19],[-33,-42],[-47,-30],[-44,-49],[-15,-8],[28,42],[34,41],[-29,-6],[-44,19],[-28,1],[0,-15],[-21,-21],[-21,31],[-9,21],[-5,18],[-9,4],[-9,-8],[32,-127],[14,-5],[15,-13],[-19,-29],[-20,-23],[-32,-15],[-27,47],[-6,-59],[-3,-58],[-9,-14],[-15,-22],[-7,16],[-4,23],[-9,-20],[-14,-15],[-22,-3],[-17,-8],[0,-24],[4,-24],[30,19],[-11,-62],[-27,-62],[-23,-14],[-34,9],[-8,-6],[-8,-13],[40,-96],[-25,-145],[-17,-52],[-11,-7],[-12,-2],[-44,47],[-24,36],[21,-98],[58,-29],[3,-37],[-1,-31],[-11,-38],[-11,-49],[8,-35],[9,-85],[8,-39],[8,-119],[10,-51],[52,-189],[18,-2],[2,-20],[-1,-40]],[[23015,66797],[-38,-11],[-16,-18],[-3,-15],[-2,-8],[-5,1],[-18,11],[-41,53],[-59,34],[-78,13],[-54,27],[-28,41],[-30,24],[-32,8],[-26,22],[-20,37],[-30,23],[-39,10],[-26,28],[-18,68],[0,1],[-16,112],[-20,71],[-39,88],[-4,11],[0,15],[4,51],[-4,36],[-12,30],[-3,32],[7,33],[0,40],[-6,46],[-25,51],[-44,54],[-37,79],[-31,104],[-31,72],[-30,40],[-21,49],[-11,58],[-4,34],[5,9],[-19,64],[-42,120],[-24,87],[-6,55],[-27,66],[-47,76],[-25,49],[-7,35],[-73,100],[-21,62],[-17,20],[-19,-2],[-10,6],[-1,14],[-6,1],[-12,-13],[-39,-3],[-66,8],[-48,17],[-29,27],[-21,-4],[-12,-34],[-25,-21],[-38,-10],[-33,-62],[-28,-116],[-12,-74],[3,-33],[-7,-24],[-18,-15],[-19,-33],[-18,-52],[-22,-25],[-25,1],[-46,40],[-67,79],[-52,48],[-38,19],[-34,36],[-29,54],[-27,36],[-24,18],[-29,60],[-33,102],[-16,78],[0,83],[-43,181],[-23,78],[-17,36],[-33,43],[-49,50],[-67,100],[-83,150],[-58,90],[-35,30],[-30,54],[-25,78],[-25,49],[-2,2],[-3,1],[-61,1],[-61,1],[-61,0],[-61,1],[-61,1],[-61,0],[-61,1],[-61,1],[0,-65],[0,-65],[-1,-65],[0,-64],[-98,-1],[-98,0],[-98,-1],[-98,0],[-99,0],[-98,-1],[-98,0],[-98,0],[-132,85],[-132,85],[-131,85],[-132,86],[-132,85],[-132,85],[-131,85],[-132,86],[13,32],[18,87],[-32,-6],[-79,-13],[-80,-12],[-79,-12],[-80,-13],[-79,-12],[-80,-12],[-79,-13],[-80,-12]],[[17464,70583],[0,4],[-2,63],[-13,22],[-17,-14],[-7,82],[4,39],[-2,38],[-16,92],[-41,113],[-89,140],[-46,47],[-35,59],[-23,16],[-28,5],[-9,-27],[-32,18],[5,66],[-32,92],[-25,10],[-65,-6],[-87,50],[-25,30],[-9,54],[-41,47],[-53,46],[-30,-11],[-39,7],[-55,33],[-33,4],[-63,-9],[-23,7],[-22,41],[-24,21],[5,51],[-3,47],[4,36],[-11,79],[9,73],[-8,26],[-13,21],[-42,30],[-7,37],[7,52],[-11,35],[-35,32],[-32,73],[-40,39],[-17,67],[-25,42],[-8,36],[-56,131],[-59,102],[-9,58],[-2,81],[23,49],[12,43],[-1,39],[-4,29],[-20,51],[-79,30],[-64,124],[-4,96],[-25,98],[0,63],[-4,69],[19,15],[17,-6],[-1,-27],[5,-49],[20,-37],[19,-16],[18,-36],[13,-11],[13,-3],[-7,23],[-8,15],[-9,48],[-18,61],[-20,33],[-11,61],[-9,15],[-5,22],[20,27],[27,19],[36,6],[103,-9],[21,15],[19,-5],[13,2],[-28,16],[-16,-5],[-18,3],[-37,-3],[-15,7],[-16,19],[-11,2],[-34,-33],[-15,4],[-36,36],[-15,5],[-25,-20],[-4,-90],[8,-66],[-15,-7],[-17,27],[-27,17],[-22,25],[-32,46],[-16,17],[-18,-39],[-1,18],[9,45],[-3,75],[28,-60],[-8,42],[-22,47],[-17,16],[-20,83],[-47,50],[-38,80],[-77,134],[-5,117],[-28,148],[12,85],[-1,59],[-14,91],[-15,49],[-62,135],[-60,90],[-9,69],[-4,69],[13,62],[12,64],[8,17],[3,-7],[-2,-13],[8,-5],[3,29],[6,15],[-9,2],[1,9],[5,18],[18,85],[-1,107],[19,131],[-1,44],[-12,93],[-13,56],[-23,40],[10,58],[0,55],[-40,80],[-15,104],[-3,45],[4,116],[-11,50],[-27,82],[12,72],[12,43],[30,190],[7,15],[13,0],[22,32],[-10,8],[-16,-16],[14,75],[15,64],[10,24],[5,209],[9,160],[14,53],[-5,55],[6,74],[-4,74],[31,359],[-4,43],[9,59],[-9,153],[4,171],[-8,22],[-4,24],[8,3],[14,-25],[66,0],[42,24],[16,-8],[17,-31],[23,-7],[28,6],[-9,8],[-13,2],[-29,29],[-17,28],[-51,-1],[-11,18],[-58,-18],[-17,19],[-32,-13],[8,54],[-2,68],[2,66],[8,-48],[19,-52],[10,59],[6,72],[-19,29],[-32,20],[-11,68],[75,58],[-40,12],[-15,26],[-20,4],[-1,-20],[-6,-27],[-7,35],[-2,41],[-8,70],[-31,113],[-18,147],[-23,72],[-45,69],[-12,40],[-11,103],[7,77],[-9,54],[22,-3],[56,-42],[71,-34],[21,-24],[34,-19],[189,-28],[13,3],[24,17],[11,-2],[27,-40],[14,-4],[18,2],[14,7],[23,28],[3,-11],[-1,-25],[8,-36],[17,-47],[7,-29],[-34,-82],[-7,-2],[-1,28],[-4,5],[-64,-139],[-22,-66],[-2,-29],[0,-18],[9,-4],[21,7],[30,27],[1,6],[-28,-10],[-13,0],[1,31],[4,14],[18,47],[19,27],[28,30],[16,24],[11,35],[30,43],[6,11],[-2,35],[2,7],[15,-5],[6,-60],[-4,-27],[-26,-32],[-3,-12],[5,-44],[-5,-4],[-10,5],[-3,-3],[25,-48],[8,-38],[1,-33],[-7,-65],[-7,-10],[-12,3],[-17,21],[-3,-7],[-13,-50],[-5,4],[-8,60],[-4,4],[-25,-27],[-11,-26],[-8,-41],[-11,-20],[31,-4],[28,8],[23,-19],[8,-1],[21,19],[6,14],[17,62],[9,11],[13,1],[12,9],[19,34],[0,14],[-6,77],[2,43],[-4,14],[-8,14],[1,14],[6,23],[1,21],[-6,18],[3,21],[17,45],[3,20],[22,45],[-6,18],[-15,22],[-10,19],[-10,30],[-8,10],[-2,-4],[11,-50],[-3,-3],[-27,27],[-7,16],[-3,23],[2,17],[15,17],[18,6],[-2,15],[-22,46],[-15,21],[-11,10],[-15,3],[-7,7],[-2,11],[3,15],[9,4],[23,-6],[13,11],[-1,18],[-4,10],[1,66],[-9,53],[-5,9],[-5,1],[-6,-7],[-14,-2],[-10,18],[-10,34],[-18,80]],[[15892,80064],[28,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[119,0],[118,0],[119,0],[118,0],[118,0],[119,0],[118,0],[66,0],[1,121],[1,96],[60,-11],[18,-18],[5,-8],[-1,-27],[5,-80],[10,-67],[26,-80],[0,-1],[2,-31],[8,-20],[15,-18],[58,-22],[99,-26],[57,-30],[13,-33],[27,-14],[40,7],[28,14],[23,32],[34,7],[28,-2],[29,-4],[15,-4],[45,-26],[29,-20],[41,-39],[23,-17],[11,-40],[13,-51],[18,0],[14,30],[35,5],[47,-21],[41,-60],[58,-53],[36,-27],[36,0],[47,27],[49,51],[35,9],[21,-5],[12,-40],[15,-15],[38,4],[80,-8],[63,11],[15,-23],[13,-36],[25,-11],[35,11],[63,-9],[26,-2],[51,14],[24,16],[34,26],[46,36],[79,62],[65,23],[61,-45],[48,-39],[18,-16],[49,-40],[70,-57],[79,-65],[80,-65],[69,-57],[49,-40],[19,-16],[54,-46],[54,-46],[54,-46],[53,-46],[54,-46],[54,-46],[54,-46],[54,-46],[14,-77],[13,-75],[31,-54],[29,-49],[17,2],[17,21],[11,10],[18,2],[40,18],[12,-4],[7,-9],[0,-14],[-1,-11],[-6,-23],[9,-42],[2,-47],[6,-36],[16,-46],[15,-36],[18,-7],[41,21],[26,8],[15,-3],[25,-34],[13,-20],[3,-17],[-34,-102],[54,-51],[60,-55],[73,-66],[44,-41],[58,-58],[10,-82],[8,-70],[11,-96],[11,-99],[11,-99],[11,-104],[13,-115],[11,-102],[12,-111],[17,-145],[-15,-56],[-32,-121],[-28,-110],[-3,-32],[-20,-160],[-16,-66],[-27,-38],[-28,-38],[-34,-62],[-38,-31],[-19,-18],[-10,-28],[-11,-63],[2,-96],[31,-82],[45,-46],[49,-45],[70,0],[63,60],[66,63],[59,57],[71,67],[64,61],[69,22],[96,30],[121,38],[59,43],[76,57],[87,64],[76,56],[38,31],[27,36],[7,26],[-2,15],[-7,15],[-9,11],[-9,9],[-4,12],[-1,26],[-5,14],[-5,11],[2,99],[-7,31],[-24,78],[47,35],[43,32],[35,24],[73,4],[67,-1],[94,0],[78,-1],[92,0],[53,-1],[71,1],[34,90],[31,81],[34,76],[60,91],[17,16],[10,35],[36,34],[40,31],[16,30],[7,17],[109,158],[62,73],[50,41],[39,19],[26,-2],[15,2]],[[29858,75452],[-20,-37],[18,-4],[16,11],[14,22],[34,30],[29,13],[9,3],[13,-21],[28,17],[28,9],[-121,-96],[-25,-11],[-36,-28],[-33,-21],[-24,-7],[-120,-71],[-10,-2],[-10,7],[-99,-36],[-40,-5],[-37,-12],[27,29],[1,11],[-7,9],[-14,-3],[-15,-30],[-24,-10],[-5,33],[8,26],[11,24],[24,38],[34,24],[17,21],[12,-18],[2,25],[10,14],[10,8],[24,0],[12,4],[10,8],[9,2],[27,-12],[25,4],[21,15],[22,5],[56,4],[57,11],[23,21],[47,56],[28,16],[-43,-66],[-23,-30]],[[31059,77380],[-16,-11],[-18,4],[0,-30],[-2,-11],[-19,16],[-8,10],[1,40],[17,38],[14,15],[17,-10],[13,-43],[1,-18]],[[29392,75185],[-13,-2],[13,55],[24,25],[9,-5],[0,-19],[-3,-17],[-16,-26],[-14,-11]],[[30414,75677],[-77,-28],[-12,18],[19,8],[24,43],[16,5],[25,-24],[5,-22]],[[30210,75743],[-13,-15],[-16,2],[8,22],[3,31],[8,34],[4,11],[9,9],[-3,-94]],[[30561,75613],[-21,-9],[-49,21],[40,18],[7,6],[5,27],[1,13],[15,-57],[2,-19]],[[28990,72497],[-4,-12],[-19,64],[19,-21],[4,-17],[0,-14]],[[29015,72142],[-37,-16],[-3,6],[42,32],[14,116],[2,53],[-7,95],[1,19],[6,-30],[7,-88],[-3,-67],[-12,-97],[-10,-23]],[[28949,72113],[-50,-41],[-6,3],[33,29],[23,9]],[[28749,71798],[-7,-6],[25,72],[50,91],[14,14],[-42,-78],[-40,-93]],[[27212,67081],[-10,-15],[-20,11],[-11,20],[-5,38],[17,-41],[7,-9],[22,-4]],[[27199,67138],[-1,-34],[-14,57],[-9,62],[13,-20],[11,-65]],[[27671,66325],[-55,-108],[6,27],[22,58],[7,28],[14,17],[14,31],[1,37],[20,25],[6,4],[-35,-119]],[[24502,68836],[-11,-8],[-46,50],[-3,21],[23,20],[14,-2],[22,-25],[8,-8],[3,-10],[-2,-16],[-8,-22]],[[23051,67915],[-6,-1],[14,47],[2,19],[22,59],[12,9],[5,-25],[-23,-42],[-26,-66]],[[23121,68060],[-10,-3],[12,31],[21,16],[45,60],[18,4],[10,20],[4,3],[-3,-25],[-36,-36],[-61,-70]],[[22957,67568],[-9,-33],[3,50],[22,112],[46,147],[20,25],[-53,-162],[-29,-139]],[[23600,68632],[-14,-6],[61,89],[12,29],[16,-1],[-27,-50],[-48,-61]],[[23008,66911],[-4,-26],[-23,125],[-37,282],[-2,161],[6,56],[10,-228],[41,-289],[9,-81]],[[16581,71442],[-14,-1],[-23,6],[8,13],[12,10],[4,-7],[13,-21]],[[16823,70977],[-13,-1],[-17,5],[-8,31],[13,2],[13,-4],[10,-24],[2,-9]],[[17125,70753],[-16,-6],[-18,12],[-16,56],[-17,43],[9,13],[14,-42],[35,-64],[9,-12]],[[16654,71381],[-19,-8],[-15,8],[-23,55],[50,7],[21,-24],[3,-7],[-17,-31]],[[16699,71474],[57,-30],[30,14],[6,-14],[-4,-12],[-69,-23],[-21,16],[-2,21],[-7,21],[10,7]],[[17125,71074],[14,-42],[-20,5],[-21,-3],[-6,24],[-7,32],[-4,8],[-14,3],[-1,3],[-2,15],[4,8],[45,-36],[12,-17]],[[15894,79880],[3,-13],[-11,-12],[-8,-2],[-12,20],[-6,2],[5,-30],[-2,-10],[-26,18],[-5,15],[8,16],[16,16],[6,2],[32,-22]],[[15830,79781],[7,-19],[-30,12],[-13,11],[-3,11],[-5,34],[2,12],[13,4],[25,-43],[4,-22]],[[15952,79583],[13,-76],[6,31],[38,-54],[0,-27],[-4,-9],[-8,-3],[-8,8],[-6,19],[-9,10],[-18,6],[-9,21],[-4,15],[0,42],[-5,14],[-10,2],[-9,11],[-14,29],[-2,8],[7,24],[15,41],[11,19],[7,-2],[9,-13],[10,-22],[-2,-15],[-41,-31],[-2,-7],[21,-9],[7,-7],[7,-25]],[[30176,75740],[-8,-11],[-3,28],[6,32],[5,0],[3,-17],[-3,-32]],[[29407,74700],[-32,-87],[-1,17],[41,108],[-8,-38]],[[29074,73668],[-13,-10],[43,116],[24,96],[11,34],[-10,-68],[-19,-62],[-36,-106]],[[28737,71805],[-6,-1],[-11,6],[-15,12],[-4,9],[15,-3],[21,-23]],[[27407,66042],[-9,-12],[-4,4],[0,17],[-11,39],[0,10],[27,-38],[1,-10],[-4,-10]],[[27547,66130],[-5,0],[2,9],[11,16],[4,-6],[0,-9],[-12,-10]],[[27600,66188],[-7,-3],[11,25],[3,-2],[-7,-20]],[[27487,66080],[-12,-13],[-13,10],[14,13],[43,15],[-16,-18],[-16,-7]],[[27383,69683],[-12,-140],[-5,50],[-1,48],[9,28],[9,14]],[[27342,66013],[-18,-6],[15,23],[5,34],[8,-26],[0,-17],[-10,-8]],[[27726,67556],[4,-42],[-25,98],[-32,154],[-17,120],[12,-33],[11,-66],[47,-231]],[[27282,65981],[-7,-1],[-1,9],[12,11],[9,-1],[-1,-12],[-12,-6]],[[25308,68958],[-15,-30],[1,12],[11,30],[8,11],[-5,-23]],[[25400,69248],[-3,-6],[-25,12],[-15,11],[-2,11],[41,-20],[4,-8]],[[25535,69269],[-24,-12],[-36,1],[-8,4],[15,8],[43,11],[10,-12]],[[25215,69172],[1,-27],[-13,14],[-20,1],[8,9],[7,9],[3,10],[25,33],[-7,-25],[-4,-24]],[[25325,69013],[-7,-18],[7,87],[-11,74],[12,-32],[4,-39],[-5,-72]],[[26414,68918],[-28,-21],[-30,15],[19,3],[13,-6],[35,30],[18,22],[21,9],[-48,-52]],[[15874,79034],[-3,-11],[-4,1],[-8,23],[-1,16],[7,12],[10,-34],[-1,-7]],[[16001,79144],[-1,-13],[-10,-10],[-6,2],[0,16],[-3,2],[-12,-18],[1,36],[6,39],[5,1],[7,-26],[13,-29]],[[15973,79259],[-2,-11],[-15,13],[-5,12],[1,27],[3,18],[3,4],[9,-8],[3,-4],[3,-51]],[[15883,79741],[-4,-6],[-15,8],[-9,13],[-3,16],[6,30],[7,8],[5,-2],[2,-27],[13,-28],[-2,-12]],[[30938,77301],[-11,-11],[-11,3],[0,29],[3,9],[4,5],[6,-8],[9,-27]],[[42704,18182],[1,-33],[-43,30],[-10,14],[14,19],[27,0],[7,-11],[4,-19]],[[39693,20699],[27,-28],[22,19],[22,-2],[12,-10],[12,-3],[16,-1],[27,-47],[-11,-41],[29,8],[26,-35],[12,3],[5,14],[17,16],[11,-22],[14,-41],[18,-12],[15,-44],[12,-55],[11,-8],[19,-1],[20,8],[-8,-48],[3,-42],[32,-30],[-19,-17],[-20,-24],[-41,-19],[-11,8],[-35,42],[-17,50],[-37,71],[-8,21],[-9,13],[-34,9],[-30,17],[-24,36],[-8,22],[-10,15],[-33,-1],[-21,17],[-21,23],[-94,67],[-37,-7],[-17,19],[0,33],[20,20],[-82,8],[-29,12],[20,7],[114,1],[43,6],[3,-15],[38,-29],[36,-3]],[[70136,47593],[-6,-23],[-12,-10],[-5,58],[-17,41],[7,0],[15,-21],[6,-56],[5,17],[-1,17],[3,16],[-2,18],[-9,28],[3,5],[13,-23],[2,-19],[-2,-48]],[[48418,42627],[-25,-3],[2,27],[19,29],[13,-4],[0,-33],[-9,-16]],[[46009,47249],[-9,-1],[-3,5],[-2,14],[5,22],[4,13],[7,-2],[8,-15],[8,-13],[-4,-12],[-14,-11]],[[14364,37789],[-3,-9],[-6,8],[-6,16],[-2,18],[6,10],[7,-6],[4,-18],[0,-19]],[[32499,62339],[-44,-29],[2,17],[35,40],[13,-3],[-6,-25]],[[33652,22309],[43,-33],[53,11],[22,-9],[13,-28],[-7,-26],[-17,4],[-15,-7],[3,-35],[10,-14],[56,-38],[10,-2],[-1,15],[-10,26],[-4,28],[9,24],[14,7],[64,11],[15,-11],[32,-66],[-30,-9],[-12,-28],[26,-12],[20,-19],[-11,-28],[-2,-14],[-46,-19],[-40,-13],[-19,-33],[-33,-24],[-96,-41],[11,-34],[1,-16],[-4,-44],[-133,52],[-18,-5],[36,-90],[-26,-16],[-26,10],[-24,-7],[-15,-65],[-38,42],[-32,58],[-1,33],[32,62],[-10,26],[73,83],[13,25],[23,14],[23,5],[10,11],[-1,20],[-10,35],[1,57],[58,77],[-8,49],[18,1]],[[33253,22199],[41,-11],[37,40],[25,13],[21,-9],[15,-24],[21,4],[61,25],[8,-9],[21,29],[19,-13],[14,-25],[-7,-30],[-17,-19],[-10,-26],[-13,-21],[-21,-19],[-16,-31],[-40,-73],[-57,-94],[-19,-8],[-40,-6],[-17,7],[-14,-2],[-12,-51],[-18,-38],[-9,-8],[-19,-4],[-8,-5],[-7,-14],[-50,3],[-35,24],[-41,52],[55,64],[48,-3],[39,43],[32,21],[13,22],[14,17],[0,22],[-11,10],[-14,-1],[-14,-10],[-34,-12],[-23,25],[15,10],[17,-1],[52,24],[10,10],[-16,33],[-31,21],[-26,34],[-4,13],[1,20],[-14,41],[15,2],[19,-26],[44,-36]],[[33050,22012],[20,-8],[20,3],[-11,-59],[-9,-28],[-24,2],[-23,39],[-8,20],[26,15],[9,16]],[[33767,21882],[1,-50],[-22,16],[-8,24],[12,17],[11,-1],[6,-6]],[[33302,22237],[-38,0],[-8,19],[1,47],[28,4],[29,-20],[-2,-20],[-10,-30]],[[33421,21755],[-18,-11],[-5,5],[-5,22],[-1,28],[-2,12],[12,-4],[20,-22],[-1,-30]],[[27397,62988],[9,-11],[11,7],[4,12],[42,-9],[7,-24],[-33,-1],[-14,-15],[-8,-3],[-28,4],[-4,55],[8,6],[6,-21]],[[27783,63195],[-2,-3],[-9,2],[-21,-23],[-8,1],[2,9],[4,7],[5,6],[5,2],[14,5],[7,1],[4,-6],[-1,-1]],[[27827,63197],[-13,-8],[-10,3],[22,24],[6,8],[5,4],[5,0],[7,-5],[0,-3],[-22,-23]],[[32019,70445],[-25,-20],[-7,2],[-5,7],[26,19],[21,46],[7,-3],[-17,-51]],[[32112,62479],[-7,-4],[-5,1],[-1,8],[5,23],[28,2],[-20,-30]],[[32057,62443],[-22,-2],[-6,7],[12,18],[23,2],[6,-4],[-13,-21]],[[32142,62638],[4,-19],[-3,0],[-15,13],[-13,1],[-5,4],[-2,7],[24,1],[10,-7]],[[30094,64380],[-1,-8],[-16,23],[-30,0],[-5,30],[12,5],[38,-11],[9,-26],[-7,-13]],[[30033,64424],[-5,-7],[-16,20],[-2,16],[-6,1],[-10,14],[3,19],[22,1],[9,-52],[5,-12]],[[29907,64430],[32,-32],[19,5],[2,-7],[-11,-7],[-2,-6],[-31,-9],[-9,2],[-2,22],[2,32]],[[32736,61486],[-1,-34],[-19,10],[-1,30],[9,31],[5,3],[7,-40]],[[49439,80202],[2,-29],[-12,-7],[-10,10],[-21,0],[-20,-6],[5,52],[38,-7],[18,-13]],[[49302,80353],[-10,-38],[-26,13],[-2,10],[29,22],[6,0],[3,-7]],[[48774,83055],[-56,-73],[-23,13],[-19,-6],[-6,2],[11,26],[13,61],[24,24],[29,64],[23,17],[9,-2],[5,-6],[11,-71],[-16,-26],[-5,-23]],[[49258,81579],[-20,-24],[-66,-24],[-28,-25],[-50,-56],[-9,-5],[-75,14],[-56,72],[-35,30],[-15,4],[-15,-9],[-33,-9],[-33,1],[17,34],[23,19],[-51,13],[-15,10],[-16,23],[-40,4],[-19,-6],[-33,-31],[-51,-33],[-62,46],[-12,20],[0,39],[-9,31],[-17,10],[22,40],[26,27],[58,27],[89,62],[49,27],[46,46],[19,28],[14,39],[13,47],[20,39],[-19,9],[-9,29],[3,29],[8,26],[-7,33],[-14,34],[1,26],[3,29],[-35,-2],[-36,-9],[-32,-20],[-31,-27],[-27,-5],[0,22],[12,27],[31,38],[34,32],[12,25],[9,28],[17,23],[44,43],[83,48],[13,3],[33,-6],[32,7],[28,18],[29,4],[63,-51],[-19,78],[28,18],[41,-70],[15,-7],[32,10],[-13,12],[-14,1],[-19,10],[-15,23],[-27,71],[2,42],[17,44],[20,41],[-16,8],[-14,15],[-3,41],[5,35],[35,32],[10,48],[5,53],[-6,24],[-35,-4],[-17,-10],[-15,-16],[-16,1],[-43,59],[-25,44],[-44,93],[-6,56],[35,120],[55,77],[64,27],[-12,5],[-98,1],[-33,-10],[-30,-31],[-17,-10],[-17,-3],[-17,-16],[-15,-22],[-17,-14],[-33,4],[-16,-5],[-11,13],[-9,21],[-13,5],[-14,-6],[-29,-28],[-30,-17],[-36,18],[-48,33],[-9,-12],[-11,-31],[-6,-47],[-33,41],[-29,56],[-10,34],[0,39],[15,16],[17,-14],[25,93],[50,121],[18,35],[12,46],[-2,31],[-11,25],[-46,58],[0,48],[5,53],[13,32],[5,6],[62,-1],[-24,17],[-48,48],[1,17],[11,45],[-5,-5],[-10,-20],[-20,-50],[-12,-12],[-34,-12],[-6,-24],[-6,-7],[-17,-2],[-5,-23],[-4,-2],[-5,25],[0,41],[7,38],[13,29],[49,67],[-24,-21],[-55,-62],[-28,-40],[-7,-14],[-3,-12],[0,-13],[13,-72],[-4,-33],[-47,-219],[-9,-22],[-8,-11],[-8,-3],[-23,4],[-11,17],[0,18],[5,28],[19,104],[9,29],[13,27],[27,47],[0,3],[-19,-9],[-8,3],[-5,9],[3,139],[15,46],[6,67],[13,57],[15,42],[12,53],[17,24],[5,36],[19,39],[15,41],[-8,-4],[-96,-106],[-25,-20],[-33,5],[-26,12],[-20,26],[-9,48],[-24,1],[-21,9],[0,6],[27,27],[44,9],[41,42],[-37,29],[3,9],[32,24],[40,82],[9,75],[-20,35],[-7,23],[-38,26],[-7,33],[5,18],[12,18],[19,14],[30,14],[-27,14],[-10,17],[-8,24],[0,15],[14,63],[8,26],[16,33],[72,-2],[8,15],[8,1],[37,-14],[-6,15],[-60,79],[-5,15],[17,42],[1,19],[-2,21],[5,15],[19,8],[58,-1],[14,7],[-6,21],[-14,27],[-2,22],[3,20],[1,41],[2,17],[14,27],[11,8],[15,5],[32,-9],[12,-11],[14,-26],[10,3],[40,27],[12,4],[16,-32],[68,26],[91,11],[55,17],[58,6],[54,19],[57,-9],[2,-11],[-3,-15],[-14,-42],[2,-47],[-3,-15],[-7,-17],[-21,-33],[-55,-47],[-101,-108],[-60,-54],[-8,-26],[-4,-36],[35,-7],[14,-12],[-8,-18],[-53,-63],[-16,-58],[41,2],[33,11],[67,36],[62,27],[30,1],[59,-21],[13,-1],[25,10],[25,1],[170,-6],[47,12],[32,-15],[26,-37],[25,-68],[-1,-11],[-15,-31],[-28,-39],[-24,-54],[-7,-29],[-4,-32],[-8,-29],[-47,-138],[-47,-76],[-20,-55],[-26,-43],[-24,-27],[-26,-18],[-76,-20],[-21,-13],[-25,-24],[-27,-12],[31,2],[31,13],[56,5],[65,-46],[-6,-37],[-26,-30],[-59,-5],[-55,-65],[-25,-20],[-26,-10],[-33,3],[-60,17],[-26,18],[24,-29],[26,-16],[156,-37],[9,4],[49,39],[66,0],[126,-71],[36,-55],[52,-78],[28,-31],[21,-28],[12,-41],[25,-138],[27,-134],[37,-146],[16,-40],[22,-28],[110,-66],[24,-21],[43,-63],[41,-67],[38,-51],[41,-41],[-20,-22],[-14,-34],[11,-46],[16,-44],[33,-71],[30,-77],[-11,12],[-11,6],[-16,-1],[-15,3],[-28,24],[-27,30],[-53,-12],[-29,5],[-26,0],[49,-17],[53,-2],[117,-129],[40,-76],[23,-101],[-16,-46],[-25,-29],[-23,-34],[-22,-38],[65,-56],[14,2],[15,8],[13,19],[24,46],[12,16],[40,6],[34,-3],[34,-10],[30,3],[60,-20],[30,-18],[77,-80],[16,-44],[8,-57],[1,-63],[-13,-58],[-15,-52],[-9,-67],[-6,-25],[-9,-18],[-41,-54],[-27,-21],[-11,9],[-12,-1],[-1,-13],[12,-27],[1,-33],[-24,-24],[-25,-10],[-40,13],[-57,-45],[41,-23],[8,-25],[-10,-43],[-25,-20],[-29,-8],[-29,-2],[-24,-11],[-23,-20],[29,11],[20,-10],[13,-36],[11,-11],[57,-15],[34,0],[68,9],[32,-1],[12,-6],[0,-30],[-5,-75],[-9,-15],[-89,-62],[-19,-44],[-5,-26],[-52,4],[-24,-27],[-43,-19],[-32,-20],[-32,-25],[-27,-7],[-113,30],[-69,-3],[-93,-26],[-24,5],[-35,24],[-37,17],[-42,7],[-37,23],[23,-44],[-51,-42],[-23,-8],[-24,1],[-50,-12],[-46,6],[7,-30],[12,-26],[-9,-11],[-11,-3],[-87,20],[-13,-4],[-10,-18],[-32,9],[-31,31],[-33,21],[-34,10],[-28,-4],[-112,-48],[-23,-49],[-11,-69],[-16,-61],[-27,-47],[-31,-7],[-30,33],[-56,36],[-20,25],[-6,1],[-6,-9],[-22,-11],[-23,0],[-35,-10],[-62,-29],[-25,-20],[-53,-55],[-11,-15],[-19,-55],[-30,-10],[-27,35],[-31,13],[-32,-13],[-20,-18],[-9,15],[-1,31],[24,38],[64,28],[55,74],[28,45],[10,25],[14,16],[17,6],[9,28],[77,112],[7,25],[4,46],[6,44],[63,29],[30,93],[8,7],[88,17],[65,-1],[65,-18],[33,-2],[33,7],[26,25],[45,90],[25,40],[29,36],[27,41],[44,76],[-30,-26],[-36,-42]],[[48834,82558],[11,-11],[30,2],[-10,-24],[-32,-27],[-22,-26],[-26,-22],[-13,25],[-15,-1],[-22,49],[-4,72],[29,19],[41,-1],[33,-55]],[[49291,85962],[-31,-1],[16,34],[19,9],[36,-4],[-6,-15],[-34,-23]],[[49710,86701],[-7,-7],[-27,59],[20,67],[24,-2],[4,-18],[-2,-16],[-13,-2],[-1,-5],[4,-31],[0,-36],[-2,-9]],[[49636,86714],[6,-40],[14,10],[22,-39],[11,0],[18,16],[-4,-36],[-18,-101],[-6,-17],[-3,-31],[-4,-6],[-6,-61],[-12,-21],[-11,-48],[-4,-5],[-16,19],[16,74],[6,43],[-4,22],[-9,20],[-24,1],[-20,-9],[-4,12],[-1,16],[-5,5],[-27,-1],[-7,4],[-6,15],[-1,12],[25,9],[22,-4],[34,24],[-21,78],[-28,7],[-6,8],[5,13],[15,7],[24,40],[14,6],[17,-1],[-2,-41]],[[49784,86873],[0,-7],[-14,-49],[0,-18],[-23,2],[-4,5],[-4,28],[3,30],[3,8],[7,3],[7,-6],[12,15],[6,0],[7,-11]],[[49120,85710],[-16,-7],[-15,0],[-25,33],[-9,25],[2,16],[10,5],[24,-8],[12,-28],[1,-18],[3,-7],[15,-7],[-2,-4]],[[49186,85680],[-3,-2],[-10,11],[-17,38],[27,7],[12,-5],[-5,-16],[-4,-33]],[[49150,85846],[-3,-14],[21,0],[30,-12],[19,-2],[15,-15],[-8,-28],[-10,-8],[-10,-1],[-36,28],[-48,-12],[-10,4],[-6,7],[-2,10],[0,20],[-3,6],[-17,-19],[-8,2],[-4,9],[-2,19],[2,26],[10,38],[17,8],[26,-5],[29,-21],[9,-13],[0,-11],[-11,-16]],[[49241,85936],[-24,-14],[-10,12],[-2,37],[-29,16],[-14,10],[-10,18],[2,6],[19,8],[32,-34],[13,-28],[23,-8],[3,-4],[-3,-19]],[[48164,84438],[-16,-4],[-1,9],[28,39],[17,6],[6,-4],[-12,-22],[-22,-24]],[[48581,83783],[-35,0],[-12,5],[-15,14],[-17,79],[6,28],[7,13],[7,11],[19,5],[18,-15],[7,-14],[15,-54],[3,-46],[-3,-26]],[[48395,84299],[-111,-32],[-38,3],[-4,16],[8,10],[31,10],[13,77],[-47,36],[-3,10],[4,17],[5,7],[29,18],[12,4],[10,-2],[21,-21],[23,-43],[30,-7],[21,-19],[-4,-84]],[[48297,84061],[10,-74],[10,-46],[0,-16],[-9,-22],[-45,-29],[-15,0],[0,7],[10,30],[-9,33],[4,26],[-4,4],[-9,-3],[-33,-41],[-11,-4],[-1,8],[8,34],[1,22],[5,14],[9,13],[11,10],[8,1],[9,-10],[27,28],[24,15]],[[48341,83994],[-6,-6],[-14,1],[-5,10],[-3,14],[0,26],[8,19],[36,28],[-16,10],[-1,7],[10,24],[39,36],[10,7],[10,-1],[-20,-65],[-48,-110]],[[48278,85462],[-36,-100],[-13,-3],[-13,-25],[-37,-28],[33,0],[9,-10],[0,-19],[-6,-12],[-43,-46],[-29,-18],[-31,-48],[-16,0],[-16,-31],[-13,-13],[-7,0],[-9,6],[-19,30],[35,30],[4,16],[24,18],[-2,5],[-39,24],[-15,17],[2,8],[18,19],[-9,2],[-6,10],[-10,4],[-4,10],[-1,24],[2,26],[12,11],[4,12],[5,3],[17,-6],[18,-20],[20,8],[24,-4],[1,5],[-18,49],[3,10],[10,12],[55,35],[68,60],[17,9],[5,-8],[7,-31],[-1,-41]],[[48255,84656],[-8,-7],[-10,1],[-11,10],[-13,27],[30,19],[13,-11],[4,-13],[0,-14],[-5,-12]],[[48293,84968],[-1,-26],[-5,-30],[7,-32],[1,-22],[12,-8],[7,-10],[52,-12],[49,4],[9,-10],[1,-15],[-8,-16],[-27,-30],[-33,-48],[-10,-10],[-11,-1],[-7,5],[-6,86],[-35,-11],[-29,1],[-16,10],[-11,20],[-22,52],[-65,21],[-18,28],[-6,18],[3,9],[13,21],[17,-7],[11,4],[6,10],[0,8],[-9,18],[0,6],[66,23],[5,37],[15,3],[16,-12],[23,-38],[6,-46]],[[47998,85070],[31,-32],[-25,-54],[-38,0],[-54,39],[0,8],[4,12],[8,10],[9,2],[13,-7],[19,11],[15,-4],[18,15]],[[47986,84743],[-12,-3],[-15,3],[-10,9],[-9,35],[-2,22],[4,40],[-1,47],[32,2],[8,-7],[5,-142],[0,-6]],[[47939,84657],[-24,-8],[-9,4],[-2,8],[6,20],[19,7],[13,-11],[2,-10],[-5,-10]],[[48272,83000],[-23,3],[-17,-10],[-11,-9],[-10,1],[-30,-3],[-29,0],[-4,15],[5,46],[-6,12],[-27,6],[-10,11],[-16,31],[-3,15],[-2,20],[-16,26],[-20,19],[-12,1],[-23,-31],[-19,-31],[7,-15],[6,-20],[-11,-15],[-31,-34],[-5,-13],[-9,-7],[-15,10],[-37,-2],[-17,5],[-20,25],[-49,17],[-9,39],[-9,7],[-56,68],[-7,23],[7,13],[21,21],[70,34],[11,13],[2,12],[-21,14],[-18,15],[-6,10],[-1,9],[11,11],[21,1],[16,-5],[13,10],[24,10],[15,13],[14,33],[14,30],[1,16],[13,57],[6,14],[44,37]],[[47994,83578],[11,-21],[22,-5],[20,19],[23,59],[16,3],[18,-4],[35,7],[62,27],[28,1],[39,-14],[29,0],[26,-42],[14,-66],[32,-66],[43,-57],[1,-34],[-15,-19],[-32,-23],[1,-25],[20,13],[18,5],[44,-5],[15,-26],[10,-37],[6,-31],[-4,-34],[-11,11],[-12,30],[-13,14],[-16,7],[7,-41],[-3,-56],[7,-5],[21,-1],[-14,-56],[-28,-16],[-33,-6],[-8,-20],[-6,-26],[-17,-38],[-22,-22],[-28,4],[-28,18]],[[49704,81042],[-24,-20],[-7,-23],[-6,-9],[-15,-6],[-15,-1],[-58,47],[-14,-2],[13,22],[37,17],[20,23],[47,-22],[22,-26]],[[65638,66618],[18,-46],[2,-318],[5,-22]],[[65663,66232],[-10,-4],[-11,-24],[-13,-37],[-17,-19],[-14,-22],[-14,-27],[-11,-6],[-16,34],[-10,35],[2,8],[8,2],[3,18],[-5,27],[-10,9],[-13,1],[-13,-11],[-13,-24],[-8,-24],[-1,-50],[4,-57],[-1,-27],[-7,-34],[-2,-50],[5,-39],[4,-23],[1,-19],[-13,-62],[11,-11],[36,-5],[11,-41],[7,-29],[-2,-17],[-26,-13],[-31,-14],[-23,4],[-42,-18],[-22,-29],[7,-19],[7,-13],[4,-39],[-7,-54],[-11,-53],[-15,-66],[-17,-75],[-23,-114],[-19,-90],[-2,-64],[0,-42],[-2,-84]],[[65329,64921],[-19,-46],[-4,-2],[-22,6],[-7,2],[-21,5],[-33,8],[-42,11],[-51,13],[-56,14],[-59,15],[-62,16],[-62,16],[-60,15],[-56,14],[-50,13],[-43,10],[-32,9],[-21,5],[-8,2],[-23,6],[-13,31],[-15,38],[-15,37],[-15,38],[-16,38],[-15,38],[-15,37],[-16,38],[-15,38],[-15,38],[-15,37],[-16,38],[-15,38],[-15,37],[-16,38],[-15,38],[-15,38],[-10,25],[-6,28],[-1,75],[0,16]],[[64324,65832],[10,30],[5,-21],[12,-29],[19,7],[9,-5],[7,-103],[14,-37],[18,-15],[59,-8],[36,14],[73,67],[38,25],[105,-5],[84,-28],[131,-16],[26,4],[70,54],[44,48],[26,14],[17,46],[11,60],[10,39],[13,19],[12,33],[9,55],[25,54],[97,133],[57,113],[5,36],[32,55],[24,59],[117,171],[23,70],[14,79],[1,6]],[[65577,66856],[10,3],[14,-12],[2,-59],[-5,-56],[-1,-59],[-2,-32],[11,-26],[18,-11],[8,1],[6,13]],[[65633,66379],[2,25],[-3,13],[-12,2],[-5,-22],[-2,-31],[9,-2],[11,15]],[[64814,65816],[-21,-3],[-18,22],[39,29],[11,13],[11,27],[9,-23],[-10,-36],[-7,-16],[-14,-13]],[[64615,65834],[-5,-4],[-4,31],[0,9],[13,15],[7,-26],[-11,-25]],[[64979,65770],[0,-20],[-28,6],[-7,-10],[-24,5],[-22,14],[15,24],[40,28],[17,-26],[9,-21]],[[65129,65923],[-3,-12],[-8,1],[-19,11],[-7,16],[13,19],[5,1],[8,-20],[11,-16]],[[60614,78969],[-10,-6],[-97,9],[-18,-3],[-61,-10],[-56,-91],[-34,1],[-48,-24],[-32,-29],[-38,-64],[-29,28],[-36,0],[-36,-18],[-42,-42],[-24,-8],[-47,12],[-55,-24],[-118,-140],[-40,-102],[-15,-20],[-20,-25],[-21,-13],[-11,1],[56,73],[17,27],[3,20],[1,33],[-17,40],[-47,-100],[-26,-14],[-33,-30],[-2,-67],[4,-50],[14,-63],[26,-83]],[[59722,78187],[-15,-3],[-41,36],[-2,58],[-29,49],[-46,0],[-20,-6],[-27,55],[-36,23],[-27,-7],[-28,10],[-61,58],[-41,7],[-1,-42],[-17,-29]],[[59331,78396],[-26,-10],[-20,-13],[-46,40],[-17,29],[-72,-30],[-40,4],[-89,-28],[-41,27],[-82,76],[-30,15],[-27,-3],[-14,24],[18,13],[20,1],[21,9],[6,13],[-1,25],[-43,19],[-39,5],[-25,22],[-19,26],[44,0],[45,-19],[71,-7],[64,-20],[16,25],[37,42],[7,14],[-62,-29],[-63,18],[-23,26],[-20,39],[-8,43],[5,41],[-6,73],[-21,65],[-8,36],[-22,32],[22,-73],[8,-48],[13,-44],[-3,-118],[-8,-41],[-26,-11],[-34,6],[-35,13],[9,65],[-18,-22],[-27,-64],[-23,-9],[-50,7],[-95,-42],[-7,-45],[-14,-62],[-14,-36],[-4,-21],[-40,-93],[-5,-9],[-76,-128],[-10,-10],[-49,-30],[-30,-26],[-22,-12],[-38,13],[-15,-19],[-8,-23],[0,-47],[19,-34],[16,-114],[-6,-48]],[[58251,77914],[-15,31],[-23,33],[-46,28],[-50,-10],[-54,-47],[-37,-18],[-20,12],[-12,0],[-4,-14],[1,-11],[6,-9],[-1,-6],[-7,-4],[-86,34],[-38,31],[-29,60]],[[57836,78024],[15,19],[12,8],[45,5],[8,6],[1,14],[3,18],[-1,26],[-5,28],[19,40],[30,34],[17,33],[2,49],[31,24],[27,41],[7,45],[10,28],[-18,64],[-3,43],[-1,36],[8,19],[26,23],[27,17],[11,-2],[4,-11],[1,-72],[5,-2],[9,9],[14,43],[9,-12],[15,-5],[11,11],[7,-1],[9,-11],[18,-16],[17,-5],[14,10],[11,19],[13,-7],[24,-50],[11,6],[55,10],[9,14],[6,12],[-57,67],[3,49],[2,57],[-7,34],[-11,27],[-44,31],[-34,32],[-7,15],[-1,18],[-2,30],[-13,25],[-1,21],[8,33],[3,35],[-3,14],[-8,12],[-15,1],[-21,20],[-13,28],[-37,39],[-12,7],[-7,19],[-3,24],[8,29],[10,45],[7,42],[0,25],[-5,62],[-19,47],[-9,6],[-16,-13],[-17,-11],[-14,10],[-16,26],[-26,71],[-48,15],[-19,3],[-19,-34],[-6,10],[-5,22],[-10,9],[-13,-10],[-4,9],[6,30],[-16,15],[-37,-1],[-19,11],[-3,23],[-11,14],[-21,7],[-20,19],[-20,29],[-29,19],[-39,9],[-3,3],[-4,5],[-25,-20],[-15,-16],[-19,10],[-30,-36],[-61,-2],[-30,3],[-15,8],[-57,-53],[-6,-20]],[[57394,79642],[-13,-7],[-36,-10],[-38,-15],[-8,-52],[-12,-29],[-20,-41],[-71,-14],[-61,-21],[-62,-12],[-82,-51],[-27,-44],[-26,-13],[-24,-3],[-15,25],[-52,66],[-20,32],[-26,9],[-29,-5],[-28,-16],[-29,-3],[-32,23],[-4,-3],[-12,-3],[-82,27],[-7,5],[-4,1],[-11,2],[-61,-3],[-57,54],[-18,2],[-13,-22],[-10,-25],[-40,-24],[-10,-10]],[[56354,79462],[-6,7],[-2,22],[3,18],[-6,18],[-15,20],[-4,8],[-19,-1],[-5,-2],[-2,0],[-26,18],[-17,41],[-27,22],[-20,7],[-9,17],[-6,24],[-7,18],[-1,1],[-4,27],[-6,3],[-1,1],[-27,-5]],[[56147,79726],[3,94],[43,67],[10,35],[16,74],[12,34],[14,29],[11,27],[4,24]],[[56260,80110],[12,3],[33,-22],[30,-11],[9,11],[3,14],[-1,10],[-24,32],[-15,20],[-1,12],[5,28],[3,31],[-3,34],[-17,75],[-3,32],[16,39],[51,92],[17,34],[23,42],[64,100],[40,59],[27,32],[40,56],[17,29],[73,19],[8,27],[14,29],[10,13],[1,50],[-13,61],[-11,21],[-8,15],[5,14],[8,4],[10,2],[12,14],[-2,16],[-31,39],[-13,30],[-21,77],[-42,80],[-13,26],[-2,25],[6,24],[-6,31],[-15,40]],[[56556,81519],[3,4],[-2,49],[11,11],[17,7],[23,-3],[20,-7],[25,-23],[7,4],[41,42],[43,64],[12,36],[11,17],[37,9],[32,4],[20,-1],[51,6],[30,7],[25,11],[56,5],[87,-8],[57,0],[39,-6],[95,-34],[35,-6],[17,-18],[31,-7],[57,-18],[50,-9],[34,4],[19,-5],[35,-80],[8,-9],[14,-2],[29,7],[41,-3],[25,-17],[-4,-47],[7,-7],[11,2],[14,27],[11,28],[8,9],[42,-19],[19,3],[18,21],[11,4],[30,-15],[37,-11],[30,-1],[19,-11],[13,-50],[12,-10],[11,-3],[18,44],[15,18],[22,12],[14,6],[10,15],[13,16],[11,1],[10,-6],[10,-21],[16,-48],[19,-49],[13,-17],[34,15],[24,15],[42,3],[56,10],[43,14],[27,-2],[17,-16],[25,-29],[6,-43],[33,-30],[26,-5],[9,31],[15,21],[-5,30],[-3,37],[-11,35],[-8,37],[14,53],[15,47],[8,25],[25,47],[25,33],[37,54],[28,18],[24,-8],[14,-8],[36,32],[63,2],[53,-4]],[[58823,81855],[5,-1],[26,-17],[27,-14],[19,-1],[22,4],[27,18],[18,18],[22,91],[8,13],[12,7],[20,1],[39,-17],[44,-15],[26,2],[69,49],[39,7],[46,-11],[44,-1],[34,7],[24,-17],[28,-37],[26,-55],[27,-101],[79,-115],[2,-22],[-7,-15],[-39,-14],[-33,-7],[-1,-20],[9,-21],[15,-32],[2,-40],[-1,-37],[7,-32],[12,-14],[2,-16],[-15,-20],[-4,-12],[6,-7],[71,-4],[35,-20],[27,-17],[13,-2],[30,11],[34,8],[20,1],[8,-13],[7,-35],[12,-34],[11,-10],[19,1],[12,-1],[7,-13],[-8,-20],[2,-21],[9,-27],[10,-60],[10,-18],[6,-23],[0,-27],[-8,-23],[-6,-18],[6,-41],[21,-46],[16,-11],[13,-41],[23,-13],[34,34],[26,18],[33,-10],[30,-6],[20,-24],[15,-32],[17,-18],[18,9],[36,-9],[17,-26],[16,-15],[22,21],[17,27],[64,27],[40,7],[11,5],[23,20],[24,13],[23,-4],[21,-40],[23,-28],[6,-45],[28,-61],[68,-83],[27,-26],[18,5],[10,7],[4,8],[4,41],[9,15],[14,1],[53,-51],[28,-6],[27,-1],[36,-39],[39,-35],[30,-3],[25,13],[16,8],[11,-13],[9,-29],[16,-23],[18,-7],[26,-1],[46,-45],[43,-45],[26,-3],[23,14],[20,3],[14,-11],[4,-20],[-10,-26],[0,-38],[19,-36],[0,-36],[-5,-32],[-11,-29],[-26,-41],[-24,-38],[-36,-16],[-21,-16],[6,-28],[13,-26],[31,-21],[34,-15],[5,-17],[-6,-9],[-22,-7],[-31,8],[-10,-15],[-15,-25],[-9,-44],[-7,-41],[33,-11],[20,-17],[6,-34],[7,-37],[2,-34],[-11,-16],[-1,-17],[5,-9],[15,-3],[11,-8],[1,-18],[-21,-40],[-20,-76],[-11,-41],[1,-44],[-12,-25],[-21,-2],[-75,-4],[-64,2],[-28,6],[-44,4],[-22,-11],[-28,-70],[-22,-28],[-36,-25],[-40,-7],[-22,-30],[-8,-45],[-1,-41],[-3,-20],[-9,-18],[-3,-13],[2,-14],[9,-5],[11,-6],[0,-10],[-4,-13],[-13,-14],[-5,-22],[1,-23],[2,-25]],[[58892,78458],[38,-29],[-39,8],[-86,27],[-38,25],[-10,28],[-5,38],[21,-40],[15,-18],[104,-39]],[[59417,51265],[-30,0],[-50,0],[-49,0],[-49,0],[-50,0],[-49,0],[-50,0],[-49,0],[-49,0],[-50,0],[-49,0],[-50,0],[-49,0],[-49,0],[-50,0],[-49,0],[-49,0],[-30,0],[-5,2],[-4,3],[-19,-8],[-19,-25],[-21,-11],[-22,5],[-3,-3]],[[58474,51228],[-11,1],[-16,1],[-14,-6],[-11,-23],[-12,-37],[-20,-44],[-16,-38],[-13,-28],[-31,-45],[-17,-13],[-8,2],[-5,8],[-10,58],[-6,9],[-60,-29],[-9,-1]],[[58215,51043],[1,18],[-4,136],[-1,83],[8,52],[4,60],[1,52],[11,90],[-4,54],[14,189],[4,31],[5,91],[9,28],[8,11],[10,56],[20,90],[14,46],[-3,101],[2,68],[3,16],[29,25],[38,63],[15,75],[23,47],[43,31],[1,0],[129,256],[60,138],[26,70],[1,26],[5,33],[-11,26],[-12,24],[-4,21],[-11,11],[-16,0],[-10,15],[-11,31],[-12,20],[-37,-2],[-28,32],[0,43],[12,85],[21,98],[1,26],[-3,23],[-5,20],[-10,20],[-9,23],[7,70],[14,69],[11,34],[11,38],[-4,32],[-15,15]],[[58566,53853],[8,31],[17,52],[33,52],[29,35],[19,0],[38,-27],[34,-33],[19,-2],[22,14],[47,58],[11,-18],[14,-36],[15,-58],[30,-27],[14,-18],[10,-6],[6,5],[11,46],[13,25],[26,32],[55,25],[39,7],[17,6],[28,15],[44,47],[44,-61],[47,-12],[46,1],[14,18],[8,14],[48,100],[65,136]],[[59437,54274],[44,-191],[14,-11],[-2,-17],[-3,-16],[28,-46],[35,-24],[12,-23],[2,-26],[-12,-112],[2,-31],[11,-112],[21,-25],[19,-113],[37,-47],[5,-14],[9,-55],[11,-59],[9,-14],[5,-4],[11,-63],[-6,-36],[9,-108],[14,-96],[3,-116],[1,-51],[-1,-31],[-3,-44],[-7,-25],[-12,-25],[-13,-39],[-11,-41],[-7,-21],[5,-62],[-1,-16],[-3,-8],[-17,-10],[-22,-17],[-13,-16],[-18,-32],[-15,-34],[-20,-101],[-33,-78],[-5,-26],[-31,-47],[-14,-57],[-9,-71],[-12,-51],[-26,-69],[-6,-110],[1,-220],[-7,-249],[1,-99]],[[64752,74195],[-3,-27],[-15,81],[-7,89],[9,26],[11,-2],[-10,-32],[15,-135]],[[68478,73357],[-14,-2],[-34,13],[-67,27],[-58,54],[-38,35],[-6,-5],[-16,-24],[-12,-30],[-9,-57],[-15,-67],[-70,-3],[-59,-5],[-39,-26],[-37,-35],[-10,-42],[-8,-54],[-22,-124],[-20,-113],[-10,-73],[-15,-50],[-42,-66],[-49,-44],[-25,-21],[-12,-26],[-2,-25],[-9,-7],[-20,4],[-21,-4],[-46,-26],[-50,-31],[-60,-32],[-34,0],[-14,-7],[-6,-16],[6,-29],[6,-23],[5,-28],[-14,-24],[-9,-40],[-8,-70],[-21,-21],[-34,-35],[-38,-45],[-9,-9],[-22,-13],[-21,4],[-20,7],[-21,-12],[-22,-35],[-10,11],[-5,35],[-11,23],[-35,52],[-29,36],[-13,3],[-27,-10],[-33,-7],[-28,8],[-21,15],[-34,50],[-12,28],[-9,20],[-23,-5]],[[67017,72361],[-7,23],[-1,26],[7,33],[-2,61],[-13,43],[-15,20],[2,13],[7,30],[8,27],[0,53],[-11,57],[-4,82],[3,81],[-14,40],[-114,0],[-102,-3],[-6,9],[-39,102],[-33,77],[-31,45],[-73,56],[-35,23],[-29,43],[-25,46],[-6,64],[-5,21],[-7,17],[-8,8],[-9,-2],[-84,74],[-34,20],[-32,-16],[-14,-3],[-28,21],[-32,-28],[-13,-2],[-19,7],[-16,10],[-42,68],[-36,27],[-26,18],[-49,25],[-53,14],[-27,11],[-19,15],[-5,9],[0,25],[-1,32],[-7,24],[-13,28],[-19,22],[-31,-4],[-48,2],[-37,21],[-29,4],[-35,-4],[-29,0],[-20,-16],[-12,-18],[-8,-55],[-7,-9],[-12,-4],[-16,3],[-33,0],[-58,10],[-73,2],[-55,-28],[-43,-40],[-42,-45],[-49,-72],[-14,-32],[-29,-127],[-12,-18],[-17,-15],[-17,-2],[-33,-19],[-44,-31],[-30,-13],[-77,7]],[[64976,73354],[-5,40],[-14,148],[-7,148],[1,69],[8,138],[-1,69],[-3,63],[3,61],[6,69],[4,71],[-5,49],[-15,39],[-25,49],[-4,29],[-2,33],[-24,3],[-22,34],[-17,18],[-39,20],[-19,1],[-18,-14],[-13,-30],[-9,47],[0,49],[31,102],[19,-30],[24,-12],[30,-2],[29,8],[-6,35],[-13,20],[-17,15],[-6,46],[2,48],[8,45],[-9,18],[-14,11],[-32,-1],[-42,12],[-42,5],[-10,-53],[23,-70],[-19,34],[-19,46],[-26,81],[-16,96],[-3,103],[14,85],[18,80],[11,102],[15,101],[15,-45],[17,-40],[24,-38],[13,-9],[39,-15],[25,6],[27,22],[26,-7],[22,-42],[20,-46],[29,-10],[61,33],[29,8],[25,-15],[13,-3],[13,2],[-11,42],[-5,40],[15,21],[48,-23],[31,16],[8,8],[7,10],[3,35],[-1,36],[-4,33],[-9,29],[-22,42],[-86,98],[-28,39],[-24,50],[-16,72],[-12,74],[-11,55],[-30,129],[-12,15],[-14,7],[-36,4],[-36,-10],[-58,-22],[-34,7],[-15,-13],[-39,-55],[-18,-46],[-25,-106],[19,-34],[0,-22],[-15,-157],[9,-76],[-3,-6],[-7,18],[-22,78],[-38,94],[-32,145]],[[64581,75910],[56,94],[49,67],[39,40],[12,10],[54,34],[70,30],[51,22],[67,19],[22,4],[32,-1],[26,-18],[16,-14],[56,-57],[57,-59],[49,-65],[13,-26],[8,-32],[6,-31],[41,-99],[17,-45],[24,-59],[20,-29],[19,-35],[13,-29],[14,-14],[17,-6],[37,10],[44,18],[27,8],[12,-1]],[[57213,74963],[-64,-18],[-19,17],[20,35],[37,22],[12,2],[16,-34],[-2,-24]],[[61530,75758],[18,-11],[35,-15],[22,-18],[12,-5],[28,37],[43,-1],[37,-5],[19,-6],[23,-12],[29,-9],[11,18],[17,51],[6,7],[5,5],[21,4],[20,-4],[9,-9],[9,-41],[24,-15],[42,-66],[25,-26],[6,-11],[-8,-13],[3,-17],[15,-21],[20,-8],[23,3],[12,-8],[8,-12],[2,-17],[0,-11]],[[62066,75522],[4,-25],[18,-34],[20,-21],[11,-23],[18,-77],[8,-43],[-3,-42],[-13,-42],[-27,-53],[7,-22],[6,-29],[-2,-22],[19,-67],[9,-42],[-7,-10],[-5,-13],[35,-32],[41,-28],[18,-5],[48,13],[31,2],[31,-25],[44,-63],[48,-81],[10,-25]],[[62435,74713],[4,-11],[10,-19]],[[62449,74683],[-10,0],[-16,18],[-38,50],[-20,-22],[-17,-37],[-18,-141],[-15,-15],[-27,1],[-32,4],[-22,-7],[-6,-9],[3,-15],[7,-23],[4,-29],[2,-24],[11,-22],[16,-21],[1,-21],[-3,-30],[-3,-22],[-4,-13],[7,-35],[17,-41],[11,-15],[-4,-78],[6,-35],[5,-48],[-2,-79],[3,-19],[5,-7],[16,-3],[15,-7],[6,-13],[-1,-10],[-19,-36],[-2,-26],[-6,-37],[-6,-21],[-17,-41],[-11,-41],[-5,-34],[4,-16],[31,-5],[17,-24],[45,-49],[8,-20],[-12,-30],[0,-12],[6,-16],[3,-28],[-1,-31],[0,-41],[8,-7],[31,-38],[22,-39],[1,-12],[-11,-30],[3,-35],[-1,-8]],[[62434,73238],[-9,13],[-17,5],[-18,1],[-11,-10],[-20,-27],[-26,-30],[-21,-28],[-12,-19],[-10,3],[-8,17],[-4,23],[1,87],[-4,27],[-10,19],[-12,11],[-13,6],[-15,1],[-20,-26],[-29,-26],[-44,2],[-30,5],[-15,5],[-58,40],[-12,1],[-22,17],[-25,13],[-44,-25],[-19,6],[-26,21],[-9,-6],[-29,-64],[-50,-70],[-27,-11]],[[61766,73219],[-13,69],[-12,27],[-6,4],[-13,8],[-9,-5],[-30,-47],[-48,-29],[-40,-17],[-64,-22],[-48,-10],[-21,-1],[-45,9],[-40,14],[-40,-1],[-30,-6],[-71,-51],[-121,-105],[-92,-51],[-51,-21],[-40,-11],[-69,-1],[-56,8],[-39,-1],[-22,13],[-30,42],[-38,43],[-16,9],[-22,9],[-32,4],[-79,-61],[-25,-17],[-27,-13],[-54,-37],[-25,-21],[-30,2],[-39,6],[-33,-2],[-23,29],[-12,32],[-46,20],[-33,5],[-8,-14],[-9,-44],[-14,-112],[-2,-29],[29,-111],[-2,-17],[-20,-6],[-24,-2],[-16,-10],[-12,-18],[-8,-97],[-27,-18],[-14,-20],[-13,-60],[-7,-1],[-45,45],[-20,4]],[[59970,72532],[17,47],[-19,93],[-21,86],[20,56],[41,67],[44,79],[0,48],[-3,37],[-12,25],[-24,34],[-40,-36],[-29,-40],[-18,-8],[-21,-23],[-10,-41],[-24,-32],[-40,-13],[-60,35],[-65,52],[-37,42],[-30,10],[-28,-18],[-84,-104],[-77,-152],[-19,-26],[-72,-65],[-48,-22],[-22,5],[-95,-29],[-48,-4],[-37,-34],[-72,37],[-44,48],[-26,48],[-42,105],[-31,49],[-67,45],[-119,108],[-31,12],[-80,16],[-85,10],[-18,-40],[-6,-156],[-15,-43],[-6,-81],[-10,-24],[-17,-15],[-25,26],[-18,11],[-41,-33],[-82,-47],[-28,-7],[-94,59],[-35,38],[-22,42],[-8,71],[-14,40],[-2,28],[-5,31],[-19,13],[-21,-24],[-22,1],[-27,15],[-65,59],[-50,5],[-30,-73],[-24,-23],[-25,-7],[-2,21],[20,47],[-78,-9],[-41,-35],[-32,5],[-24,16],[3,20],[25,7],[21,16],[84,13],[20,13],[21,51],[40,44],[5,19],[-31,0],[-129,-13],[-89,7],[-10,-21],[-14,-4],[-3,60],[14,27],[19,-3],[46,24],[-4,49],[-33,34],[-7,19],[-24,5],[-20,23],[-4,59],[-15,65],[-23,31],[3,17],[41,22],[8,90],[-6,56],[-20,4],[-60,44],[-18,-4],[-20,48],[-35,34],[-17,-12],[-11,-16],[-16,7],[-26,30],[-27,17],[-12,20],[15,53],[20,-1],[4,42],[-16,70],[2,36],[17,9],[20,-6],[21,-42],[6,-41],[-4,-39],[13,-38],[9,-10],[6,41],[9,7],[12,-17],[25,-9],[66,24],[12,21],[-48,-2],[-17,19],[-20,44],[-11,40],[-3,19],[-6,29],[7,15],[33,23],[29,64],[-12,18],[-14,9],[-15,-6],[-14,22],[-2,30],[12,25],[1,34],[-38,83],[-10,18],[8,28],[29,45],[27,57],[-4,19],[-20,7],[-95,-24],[-37,-21],[-66,-10],[-5,31],[2,28],[15,50],[-2,125],[9,67],[37,20],[45,100],[73,117],[76,-3],[30,33],[45,2],[9,-24],[5,-22],[40,-33],[70,5],[17,13],[16,18],[-32,57],[10,17],[29,2],[32,-14],[2,-13],[-9,-18],[-10,-32],[10,-6],[90,19],[95,-15],[30,8],[75,0],[13,19],[-22,25],[-22,9],[-15,12],[-15,18],[47,55],[27,11],[126,34],[94,17],[1,13],[-14,0],[-121,28],[-29,22],[-40,52],[-9,15],[-10,25],[6,55],[7,43],[15,25],[48,4],[166,-44],[119,27],[129,-65],[123,13],[26,29],[31,93],[174,156],[61,80],[66,45],[112,49],[94,65],[27,7],[225,-31],[155,-4],[71,62],[42,-21],[-4,-22],[-8,-19],[3,-38],[24,-55],[24,-38],[73,-55],[100,46],[16,-5],[21,-13],[35,-147],[28,-52],[35,-36],[29,-7],[21,37],[17,15],[36,6],[60,-50],[21,-53],[101,-40],[93,-20],[40,-45],[131,-44],[49,7],[82,46],[159,51],[106,-71],[29,-9],[25,6],[35,-20],[38,11],[117,84],[37,48],[39,12],[34,29],[92,93],[27,54]],[[57781,76018],[-7,-65],[17,-73],[41,-100],[41,-51],[167,-126],[31,-11],[-7,-51],[-10,-46],[-11,-30],[-49,-20],[-135,56],[-34,6],[-24,-12],[-45,-40],[-49,13],[-69,-23],[-19,-77],[-48,-88],[-79,-71],[-56,-38],[-84,-136],[-39,-80],[-16,-15],[-19,-13],[6,39],[10,35],[-2,26],[0,38],[28,44],[26,31],[76,58],[20,47],[-60,-1],[-60,-11],[-38,7],[-33,-4],[-11,42],[-8,25]],[[57232,75303],[9,7],[11,6],[19,44],[18,33],[25,41],[6,24],[0,23],[-6,16],[-1,19],[-1,27],[2,55],[57,60],[18,6],[6,28],[-4,63],[-8,51],[-10,4],[-14,15],[-9,17],[-14,19],[-25,12]],[[57311,75873],[-1,16],[3,16],[9,17],[42,14],[5,12],[5,29],[9,29],[10,10],[17,-1],[34,7],[23,9],[24,21],[12,18],[50,11],[14,9],[14,-8],[19,-31],[31,-45],[17,-15],[13,6],[22,17],[22,0],[17,-3],[9,14],[13,3],[37,-10]],[[53195,70957],[0,-16],[-10,-109],[-2,-39],[-2,-67],[0,-80],[22,-68],[1,-30],[-9,-34],[-41,-39],[-52,-51],[-46,-49],[-49,-53],[-15,-34],[-25,-26],[-21,-27],[-3,-25],[-15,-48],[-19,-38],[-47,-18],[-8,-12],[-22,-57],[-10,-23],[-13,-47],[16,-123],[20,-126],[4,-52],[-1,-44],[-11,-47],[-25,-68],[-18,-49],[-35,-89],[-11,-22],[-24,-26],[-47,-35],[-33,-30]],[[52644,69256],[-17,136],[-15,116],[-12,95],[-21,169],[-17,143],[-18,143],[-16,129],[-16,130],[-7,19],[-49,62],[-45,57],[-46,64],[-51,70],[-8,88],[-26,133],[-27,74],[-10,19],[-55,48],[-32,35],[-9,20],[-6,55],[-23,107],[-26,97],[-9,66],[-1,83],[5,60],[11,26],[54,74],[25,90],[31,34],[26,25],[22,30],[19,47],[15,51],[2,54],[7,87],[9,61],[23,68],[-9,55],[-12,60],[3,103],[-3,42],[-10,37],[-10,48],[0,39],[10,104],[7,80],[12,103],[-5,29],[-8,21],[-26,23],[-1,14],[7,15],[38,50],[21,74],[17,16],[27,26],[-1,29],[-6,31]],[[52382,73120],[68,35],[66,91],[23,22],[152,84],[19,-6],[22,-12],[-6,-31],[-9,-25],[13,-44],[18,27],[-4,18],[-1,23],[31,2],[28,-3],[30,-26],[-2,-100],[40,-97],[-11,-48],[33,-29],[29,35],[15,51],[54,29],[52,74],[28,8],[6,-61],[14,-54],[-19,-18],[-25,-57],[-47,-144],[-43,-42],[-33,-56],[-10,-39],[-3,-46],[8,-82],[23,-84],[28,-51],[26,-15],[61,-80],[-1,-47],[9,-57],[3,-68],[21,-55],[-45,-119],[-25,-86],[-49,-118],[-43,-77],[-93,-115],[-23,-38],[-15,-39],[-7,-41],[3,-49],[30,-119],[41,-70],[41,-38],[72,16],[-2,-46],[5,-55],[29,3],[20,8],[16,54],[36,-37],[18,-111],[30,-35],[3,-13],[-10,-9],[-9,-13],[9,-9],[29,-14],[17,9],[29,-24]],[[53132,71862],[-43,-41],[9,36],[28,43],[7,-10],[-1,-28]],[[53043,71268],[-7,-3],[-13,-16],[-8,-1],[-20,17],[-7,0],[-10,12],[3,68],[3,19],[49,2],[27,-40],[4,-10],[1,-12],[-12,-22],[-10,-14]],[[33123,58282],[-15,-6],[2,23],[26,40],[41,26],[10,1],[-6,-35],[-58,-49]],[[33052,57680],[-45,-32],[-118,-8],[-48,12],[-37,-9],[67,70],[8,30],[29,6],[9,9],[9,155],[-4,38],[-5,20],[-12,15],[-26,20],[-5,11],[17,17],[35,9],[26,19],[55,4],[26,16],[45,5],[-22,-71],[-10,-27],[4,-65],[-5,-43],[6,-55],[13,-37],[-9,-35],[-1,-54],[-2,-20]],[[1344,39648],[4,0],[4,17],[15,7],[-1,-19],[-21,-59],[-12,23],[-37,38],[-8,29],[13,23],[-2,-18],[6,-8],[21,-4],[19,-15],[-12,-6],[11,-8]],[[1680,41106],[-11,-34],[-5,0],[-12,20],[-5,13],[19,40],[10,3],[12,-13],[0,-12],[-8,-17]],[[1413,39573],[-2,-87],[-13,40],[-2,18],[14,27],[3,2]],[[50250,58175],[-8,-62],[-14,-76],[-10,-25],[-6,-186],[4,-16],[4,-4],[46,-64],[60,-82],[43,-59],[4,-19],[0,-123],[1,-105],[9,-60],[1,-59],[11,-44],[40,-85],[9,-50],[1,-161],[1,-122],[5,-166],[0,-139],[0,-175],[0,-205],[0,-215],[-26,-2],[14,-67],[2,-60],[4,-20],[-7,-29],[6,-45],[11,-16],[29,-90],[9,-75],[-46,-26],[3,-19]],[[50450,55424],[-86,-41],[-35,-33]],[[50329,55350],[0,32],[-13,6],[-15,11],[-10,17],[-13,38],[-5,29],[-20,5],[-25,33],[-24,39],[-8,38],[2,17],[-3,18],[-9,7],[-21,86],[-13,35],[-7,28],[3,22],[-3,29],[4,23],[11,14],[4,17],[1,37],[7,74],[4,74],[-12,20],[-15,6],[-8,21],[-3,34],[0,30],[30,104],[-6,241],[4,37],[13,25],[12,29],[-1,29],[-19,72],[-37,55],[-19,45],[-10,40],[-2,21],[22,32],[10,21],[2,25],[-10,46],[2,81],[9,61],[8,79],[0,24],[-22,47],[-12,6],[-9,-3],[-23,-31],[-8,-4],[-5,10],[-3,12],[8,18],[-3,24],[7,20],[14,9],[5,10],[-20,10],[-2,13],[1,14],[6,2],[6,-1],[3,10],[3,67],[3,23],[2,47],[3,179],[5,19],[0,13],[-13,9],[-32,48],[-19,37],[-17,38],[-14,25],[-27,38],[-7,25],[-2,24],[9,49],[13,52],[6,75],[-4,20],[-18,35]],[[49980,58246],[64,-27],[90,-45],[2,-8],[0,-13],[16,0],[26,16],[72,6]],[[84901,47154],[-19,-99],[-20,21],[22,55],[10,17],[7,6]],[[84740,46363],[-9,75],[-10,33],[-8,18],[-3,23],[0,23],[5,11],[34,3],[14,38],[0,47],[-7,15],[-7,7],[-35,-35],[-10,7],[-6,12],[2,51]],[[84700,46691],[29,48],[25,88],[17,34],[40,33],[16,9],[118,48],[28,3],[74,-1],[100,10],[24,7],[32,21],[31,26],[16,21],[18,14],[25,-18],[44,-14],[11,-13],[11,-17],[-50,-92],[-56,-76],[-34,-23],[-35,-15],[-27,-29],[-23,-46],[-29,-26],[-32,-9],[-28,-14],[-26,-27],[-35,-46],[-14,-5],[-15,1],[-29,-17],[-91,-67],[-55,-73],[-40,-63]],[[84454,46462],[45,49],[68,38]],[[84567,46549],[-2,-28],[-7,-44],[-10,-20],[-16,-37],[-10,-8],[-41,8],[-5,-5],[-7,3],[-11,24],[-4,20]],[[78501,58569],[-5,-60],[-15,24],[3,31],[7,13],[10,-8]],[[78451,58749],[1,-14],[-14,10],[-5,-5],[-17,4],[-8,80],[2,19],[11,-6],[17,-40],[8,-27],[5,-21]],[[77335,56395],[-3,-43],[-11,1],[-12,-27],[-5,-4],[-10,86],[11,121],[6,18],[8,-32],[23,-15],[-10,-69],[3,-36]],[[77811,63546],[-2,-34],[7,-7],[9,15],[13,39],[13,22],[14,5],[16,-27],[16,-57],[17,-33],[7,-3],[6,-26],[1,-26],[-8,-53],[-13,-62],[-20,-76],[7,-64],[26,-53],[31,-31],[33,9],[17,15],[14,25],[14,12],[16,3],[53,-18],[16,-18],[2,-35],[-6,-92],[8,-67],[15,-70],[1,-65],[-18,-106],[-15,-101],[-17,-48],[-12,-32],[-4,-21],[1,-20],[12,-30],[12,-39],[3,-38],[-1,-46],[-9,-62],[-31,-137],[-26,-122],[14,-25],[24,-18],[17,-18],[17,12],[37,72],[32,54],[39,54],[2,5],[35,40],[15,36],[9,47],[12,18],[16,-11],[20,20],[24,51],[19,24],[13,-4],[23,-32],[33,-59],[30,-36],[26,-11],[13,-22],[-1,-33],[6,-21],[12,-9],[5,4],[-1,16],[12,23],[25,31],[25,18],[26,5],[17,25],[11,63],[16,48],[14,22],[17,11],[5,15],[-9,20],[1,19],[10,21],[22,8],[34,-3],[39,-20],[45,-38],[30,-13],[14,14],[28,-59],[41,-131],[35,-100],[29,-67],[31,-52],[32,-36],[24,-49],[21,-93],[-16,-128],[-4,-111],[2,-137],[19,-104],[36,-73],[21,-59],[6,-44],[28,-39],[51,-32],[21,-29],[-9,-26],[0,-30],[7,-35],[17,-28],[28,-23],[17,-24],[5,-25],[-1,-40],[-6,-57],[-12,-43],[-17,-30],[-2,-24],[-4,-36],[0,-74],[12,-50],[4,-63],[-7,-51],[-6,-105],[-1,-41],[-6,-34],[-15,-34],[-22,-32],[-27,-28],[-17,-12]],[[79217,60107],[-4,-6],[-12,-32],[-15,-31],[-11,0],[-8,16],[-6,20],[-4,44],[-25,22],[-28,14],[-56,-22],[-46,-12],[-51,15],[-48,-19],[-20,-3],[-23,3],[-22,0],[-22,7],[-39,27],[-15,-2],[-32,-23],[-33,-15],[-31,-11],[-47,-46],[-34,-67],[-10,-47],[-17,-48],[-23,-75],[-30,-72],[-21,-33],[6,-19],[-6,-24],[-32,-10],[-26,-4],[-5,-12],[3,-145],[9,-55],[17,-66],[11,-36],[8,-108],[2,-91],[36,-58],[21,-44],[14,-38],[-5,-25],[-8,-74],[8,-95],[51,-206],[4,-15]],[[78592,58586],[-6,-2],[-8,40],[-26,67],[-8,71],[-30,79],[-16,31],[-6,-26],[-9,-28],[-30,40],[-25,43],[-23,81],[-3,-19],[-6,-17],[-26,64],[-28,51],[-25,19],[-15,17],[-15,27],[-31,28],[-78,-40],[-98,31],[-38,-30],[-16,19],[-9,35],[9,59],[2,125],[12,88],[-6,67],[6,31],[4,43],[-15,17],[-70,34],[-15,27],[-18,-31],[-84,-17],[-31,-26],[-29,-49],[-8,-64],[17,-41],[11,-73],[-30,-158],[-5,-46],[12,-194],[-5,-106],[-16,-71],[-26,-63],[-11,-109],[-20,-50],[-28,-114],[-18,-143],[-13,-66],[-8,-122],[-56,-184],[-13,-104],[-20,-40],[7,-31],[1,-52],[-7,-139],[-2,-115],[8,-62],[27,-122],[-6,-36],[-3,-50],[22,-23],[17,-7],[91,58],[31,-15],[12,-54],[8,-47],[15,-254],[8,-48],[19,-45],[20,-47],[7,8],[1,18],[1,20],[19,-48],[14,-90],[48,-476],[14,-61],[11,-63],[-29,31],[-8,105],[-8,45],[-11,6],[-16,0],[-1,18],[12,35],[-2,41],[-17,34],[-27,-27],[1,-74],[12,-57],[46,-127],[15,-53],[18,-15],[27,8],[32,-54],[25,-50],[63,-77],[38,8],[41,19],[27,-5],[27,-20],[32,-64],[52,-161],[84,-134]],[[78361,55438],[-9,-33],[-4,-50],[-33,-68],[-5,-39],[-13,-50],[-23,-26],[-19,-5],[-12,4],[-8,10],[-13,47],[-7,14],[-6,4],[-42,-33],[-41,-35],[-7,-33],[-11,-37],[-12,-15],[-10,-3],[-9,22],[-15,28],[-12,27],[3,43],[23,64],[3,44],[-3,77],[-6,44],[-7,1],[-11,7],[-32,-7],[-16,50],[-7,54],[-10,20],[-11,12],[-24,-19],[-18,11],[-61,48],[-23,76],[-13,2],[-11,-8],[-4,-18],[-7,-88],[-5,-27]],[[77810,55553],[-69,178],[-48,73],[6,132],[-14,26],[-18,2],[-14,37],[12,79],[-19,-15],[-26,3],[-21,21],[-16,109],[-11,33],[-22,58],[-29,0],[-10,27],[2,70],[-21,43],[-28,36],[-23,20],[-24,114],[-19,28],[-16,22],[-22,-15],[-7,-41],[-15,-39],[-16,5],[-16,22],[-18,114],[-4,69],[5,129],[23,116],[13,185],[20,117],[13,39],[20,159],[39,204]],[[77417,57713],[4,43],[8,49],[6,46],[2,73],[-5,38],[0,22],[8,27],[28,46],[38,76],[46,107],[47,163],[23,95],[10,34],[10,10],[16,33],[11,36],[1,18],[-26,178],[-16,58],[-9,68],[-4,50],[-6,45],[3,43],[-9,26],[-21,34],[-22,50],[-13,82],[0,46],[-13,40],[-5,42],[8,40],[11,34],[-1,152],[-4,46],[-6,81],[-14,61],[-20,72],[-22,59],[-59,107],[-42,71],[-21,66],[-26,74],[-19,54],[-24,68],[-12,93],[-7,99],[4,33],[11,21],[15,18],[12,4],[34,45],[24,-4],[5,10],[2,21],[-3,90],[2,120],[4,98],[5,64],[63,75],[13,33],[6,35],[0,31],[-5,24],[-9,14],[-41,-65],[-8,15],[-19,106],[-8,32],[-11,39],[-13,54],[-2,94],[-9,46],[-50,99],[-23,53],[-31,77],[-37,92],[-38,86],[-18,54],[-6,12],[-2,21],[11,59],[-5,59],[-19,78],[-8,49],[2,19],[-9,7],[-21,-4],[-20,36],[-20,78],[-1,14],[6,-1],[24,-13],[9,2],[17,18],[26,19],[16,6],[5,9],[2,19],[-13,179],[2,37],[25,77],[-3,78],[7,112],[27,77],[21,35],[7,55],[9,12],[17,-5],[36,-41],[15,-2],[22,1],[23,3],[11,4],[74,40],[16,5],[16,-5],[11,2],[12,18],[8,33],[9,103],[5,19],[10,15],[16,10],[18,-1],[24,-20],[15,-1],[17,8],[15,15],[9,18],[5,22],[-4,41],[-11,53],[3,6],[20,-11],[30,-13],[22,3],[15,9],[14,25],[19,23],[17,-5],[14,-21],[33,-36]],[[77798,57428],[-3,-9],[-11,18],[-8,21],[-4,26],[17,-1],[8,-25],[1,-30]],[[77797,57365],[1,-33],[-6,-39],[-25,-23],[-9,31],[2,49],[4,12],[25,-3],[8,6]],[[77683,55599],[-5,-3],[-10,47],[13,67],[13,-82],[-11,-29]],[[77386,56413],[-3,-10],[-14,110],[20,-29],[-3,-71]],[[77307,57057],[-16,-7],[2,32],[4,20],[8,5],[3,-34],[-1,-16]],[[77521,56216],[7,-70],[-10,15],[-8,30],[0,44],[2,7],[9,-26]],[[60971,48286],[21,-123],[-3,-23],[-15,-14],[-8,-1],[-9,20],[-7,41],[-11,-10],[-19,50],[-20,2],[-17,59],[7,51],[-4,88],[21,45],[12,76],[13,-52],[3,-80],[18,-95],[15,-29],[3,-5]],[[61073,49017],[2,-30],[-5,-27],[1,-87],[-1,-58],[-16,-80],[-13,-28],[-12,8],[-9,13],[-8,22],[15,147],[-7,107],[30,-10],[23,23]],[[58541,47123],[-8,51],[-19,77],[-26,109],[-20,89],[-22,96],[-9,70],[-17,78],[-28,96],[-14,37],[-16,33],[-40,65],[-45,64],[-25,43],[-33,128],[-14,47],[-9,81],[-8,85],[3,34],[30,109],[3,31],[-4,42],[-14,87],[-11,56],[-8,49],[-15,81],[-22,111],[-5,49],[0,36],[12,96],[10,99],[0,28]],[[58167,49280],[87,-4],[15,22],[49,63],[56,128],[11,54],[22,82],[23,40],[8,29],[6,44],[7,37],[29,56],[28,42],[-2,18],[-4,12],[5,11],[15,22],[30,20],[6,43],[0,48],[-5,28],[1,31],[-5,17],[-19,5],[-29,24],[-25,10],[-17,14],[-6,11],[-2,29],[4,32],[3,9],[6,34],[-11,20],[-2,10],[5,16],[25,108],[6,15]],[[58487,50460],[11,2],[17,13],[16,6],[14,-5],[9,6],[9,14],[7,42],[6,70],[-3,57],[-13,44],[-3,68],[6,90],[-5,75],[-14,60],[-14,36],[-22,17],[-34,92],[-11,44],[2,28],[9,9]],[[59417,51265],[21,0],[20,-21],[22,-26],[60,-69],[59,-68],[59,-69],[59,-68],[59,-69],[60,-68],[59,-69],[59,-69],[59,-68],[59,-69],[60,-68],[59,-69],[59,-68],[59,-69],[60,-68],[59,-69],[28,-33],[4,-14],[5,-62],[3,-39],[-1,-35],[-16,-58],[-5,-31],[0,-21],[4,-8],[13,-3],[12,-14],[4,-11],[9,-44],[11,-22],[25,-37],[42,-64],[43,-64],[43,-63],[42,-64],[43,-64],[43,-63],[42,-64],[43,-64],[21,-31],[8,-8]],[[60894,49140],[-5,-49],[-22,-117],[-1,-49],[-9,-58],[-8,-38],[-22,-165],[-19,-62],[-25,-145],[-5,-111],[15,-78],[5,-72],[30,-72],[23,-25],[17,-33],[28,-74],[17,-75],[51,-37],[20,-83],[-7,-58],[-24,-48],[-22,-77],[-18,-102],[-1,-155],[13,23],[27,-38],[3,-114],[-28,-134],[-8,-62],[-2,-53],[21,-160],[30,-81],[-2,-26],[-8,-21],[53,-144],[-5,-125],[20,-97],[9,-84],[13,-65],[2,-44],[-16,-50],[39,-12],[22,-41],[11,-39],[28,2],[15,-26],[22,-22],[47,-65],[13,-33],[5,-19],[3,-12]],[[61239,45815],[-32,-50],[-50,-79],[-50,-77],[-47,-52],[-34,-25],[-37,-13],[-34,-33],[-33,-50],[-42,-26],[-51,0],[-53,-36],[-53,-67],[-31,-39],[-50,59],[-38,19],[-44,-2],[-27,-8],[-10,-12],[-8,-36],[-7,-59],[-29,-57],[-51,-55],[-47,-20],[-43,14],[-29,22],[-15,32],[-23,15],[-29,-3],[-28,-22],[-27,-43],[-44,-18],[-59,5],[-31,21],[-5,35],[-26,42],[-47,47],[-35,1],[-23,-45],[-20,-29],[-19,-12],[-16,-1],[-15,9],[-9,3],[-66,5],[-62,-2]],[[59710,45173],[-2,20],[-4,46],[-13,41],[-11,24],[-14,6],[-7,-1],[-6,19],[-7,41],[-11,35],[-14,29],[-8,27],[-3,25],[2,27],[13,67],[4,47],[-1,47],[-7,49],[-15,58],[2,16],[-5,40],[-1,28],[3,34],[-3,45],[-13,97],[0,25],[-13,47],[-41,111],[-2,14],[-65,112],[-25,24],[-10,-21],[-3,-19],[3,-36],[-2,-18],[-3,-8],[-15,1],[-10,4],[-24,30],[-19,8],[-47,-6],[-17,-7],[-13,7],[-25,51],[-29,11],[-27,3],[-43,58],[-10,-3],[-5,-4]],[[61030,47247],[-15,-7],[-6,7],[-9,24],[16,21],[16,39],[36,59],[12,38],[5,8],[-3,-45],[-20,-99],[-18,-7],[-14,-38]],[[69710,75022],[1,-11],[-4,-19],[-58,-32],[-26,-28],[-6,-49],[-7,-14],[-12,-11],[-11,-3],[-18,57],[-20,12],[-29,20],[-56,40],[-29,17],[-56,-26],[-66,-35],[-10,-21],[-7,-23],[1,-17],[4,-23],[-3,-18],[-12,-6],[-19,22],[-16,12],[-8,-29],[-9,-53],[-4,-38],[14,-54],[5,-82],[26,5],[20,0],[37,24],[19,0],[29,-10],[52,-2],[40,4],[10,-2],[9,16],[11,-6],[10,-18],[41,22],[30,3],[19,-6],[11,-7],[19,-53],[15,-34],[19,-11],[57,10],[17,47],[14,12],[24,3],[19,9],[16,20],[21,16],[18,4],[9,-13],[4,-16],[-3,-21],[-1,-22],[12,-15],[35,-3],[17,-14],[1,-26],[-3,-41],[15,-17],[7,-1],[52,43],[14,1],[12,-24],[17,-29],[23,-30],[6,4],[10,34],[20,36],[36,12],[21,11],[21,5],[65,-14],[21,-2],[44,3],[35,7],[28,22],[15,17],[23,10],[29,-1],[16,-5]],[[70453,74567],[1,-30],[-4,-57],[-4,-40],[23,-72],[15,-34],[14,-25],[3,-19],[-3,-16],[-18,-15],[-7,-17],[-3,-18],[6,-21],[11,-68],[13,-53],[19,-26],[28,-17],[15,4],[11,40],[18,30],[16,-2],[25,1],[66,-34],[64,-52],[18,-29],[7,-32],[-18,-75],[1,-47],[4,-51],[15,-38],[13,-65],[3,-53],[6,-16],[4,-19],[-7,-49],[-5,-50],[6,-16],[20,-25],[31,-45],[6,-38],[-11,-24],[-20,-29],[-25,-25],[-8,-11]],[[70802,73289],[-4,6],[-12,26],[-28,41],[-20,21],[-38,-7],[-22,8],[-26,13],[-25,-2],[-16,-24],[-10,-25],[-25,-8],[-35,-19],[-56,-30],[-26,5],[-8,13],[6,17],[19,22],[5,26],[-4,25],[-17,7],[-7,4],[-8,5],[-34,15],[-28,-6],[-47,-31],[-88,-81],[-38,-55],[-28,-82],[-83,-27],[-57,-47],[-59,-78],[-39,-41],[-19,-6],[-19,7],[-19,21],[-18,65],[-16,98],[-11,64],[6,84],[7,94],[7,96],[11,111],[10,40],[0,26],[-8,13],[-18,0],[-27,-15],[-20,-3],[-11,10],[1,52],[14,93],[-21,79],[-57,64],[-48,22],[-40,-20],[-33,-50],[-27,-82],[-28,-68],[-29,-52],[-21,-25],[-7,-10],[-4,-22],[16,-69],[-1,-58],[-18,-48],[-19,-22],[-21,2],[-16,11],[-13,20],[-33,5],[-54,-9],[-37,-23],[-20,-39],[-6,-50],[8,-62],[-4,-48],[-17,-34],[-14,-19],[-10,-5],[-24,29],[-36,62],[-25,34],[-14,5],[-7,-3],[-8,-7],[-5,-8],[-4,-18],[-12,-7],[-16,5],[-15,-5],[-9,-20],[-25,-23],[-44,-27],[-25,-28],[-4,-30],[-6,-14],[-14,5],[-40,-41],[-30,13],[-35,53],[-19,44],[-2,18]],[[69639,74783],[-25,-22],[-15,3],[-11,21],[-8,20],[-2,12],[4,-1],[19,-9],[27,-6],[10,-6],[1,-12]],[[83613,64873],[-17,-68],[-14,-71],[-6,-68],[1,-69],[-4,-63],[-7,-62],[-27,18],[-15,44],[-3,73],[-20,88],[-7,26],[-28,49],[-26,25],[-20,36],[3,-3],[-15,49],[-11,52],[-23,148],[-8,36],[-10,32],[-3,33],[3,36],[10,53],[6,54],[-5,74],[2,73],[8,32],[130,443],[36,94],[22,47],[18,52],[17,66],[22,60],[15,19],[75,54],[23,52],[19,16],[21,-1],[14,-25],[12,-29],[13,-16],[33,-28],[15,-28],[6,-48],[-20,-45],[-10,-41],[-2,-45],[4,-61],[0,-61],[-25,-143],[-27,-90],[-7,-44],[-9,-111],[-16,-111],[-13,-140],[-22,-145],[-13,-61],[-16,-58],[-37,-109],[-42,-90]],[[82890,65968],[12,-38],[-5,-24],[-38,13],[-2,23],[14,-4],[19,30]],[[61766,73219],[0,-8],[-3,-20],[-31,-57],[-43,-78],[-30,-49],[-52,-83],[-38,-18],[-65,-30],[-17,-29],[-17,-46],[-9,-64],[-3,-40],[-2,-75],[16,-77],[14,-75],[2,-49],[-1,-48],[-14,-52],[-16,-71],[-9,-80],[-4,-150],[0,-128],[-2,-21],[-26,-90],[-31,-106],[-15,-24],[-68,-32],[-74,-77],[-84,-87],[-75,-78],[-79,-83],[-83,-85],[-59,-61],[-78,-82]],[[60770,71066],[-72,-78],[-72,-79],[-56,-60],[-83,-95],[-49,-56],[-73,-82],[-63,-72],[-75,-85],[-94,25],[-30,15],[-25,40],[-18,22],[-44,22],[-29,77],[-17,27],[-30,12]],[[59940,70699],[4,27],[16,47],[15,50],[-8,28],[-3,23],[-1,29],[10,27],[-5,33],[-8,33],[-6,16],[0,30],[4,23],[5,36]],[[59963,71101],[13,19],[3,20],[11,20],[16,16],[3,13],[-2,7],[-15,15],[-9,25],[8,38],[5,11],[9,18],[20,28],[16,4],[14,0],[23,-2],[18,-5],[5,7],[-1,9],[-22,23],[-1,18],[5,19],[16,30],[19,23],[9,4],[22,44],[14,50],[-22,122],[-14,19],[-22,17],[-13,3],[-1,8],[17,30],[13,27],[-14,26],[-24,12],[-9,-27],[-32,-2],[-48,0]],[[59993,71790],[-22,129],[-3,55],[1,65],[15,94],[-7,43],[-1,30],[-4,40],[-38,87],[21,160],[15,39]],[[52645,79218],[8,-7],[20,-26],[-4,-43],[-23,-70]],[[52646,79072],[-12,-56],[-1,-44],[2,-20],[4,0],[22,-3]],[[52661,78949],[11,0],[34,-11],[28,-17],[6,-19],[3,-22],[33,-30],[38,-19],[13,6],[47,71],[19,-12],[11,-38],[-1,-19]],[[52903,78839],[-13,-75],[-2,-41],[11,-26],[1,-21],[-3,-19],[-19,-2],[-25,11],[-21,32],[-17,-4],[-14,-8],[-7,-31],[-6,-36],[2,-21],[10,-15],[8,-34],[5,-43],[5,-20],[-5,-8],[-13,-6],[-11,5],[-20,52],[-9,20],[-15,3],[-27,-12],[-41,-29],[-17,0],[-14,6],[-13,24],[-11,47],[-4,30],[-8,-1],[-26,9],[-12,-12],[0,-48],[-3,-61],[-13,-38],[-37,-68],[-13,-29],[-6,-21],[-1,-18],[6,-32],[7,-30],[-6,-18],[-19,-9],[-14,19],[-5,32],[-30,45],[13,37],[-2,10],[-49,19],[-21,28],[-30,50],[-6,21],[2,69],[-2,17],[-4,8],[-14,0],[-20,-24],[-19,-36],[-38,-41],[-4,-8],[13,-40],[-1,-15],[-30,-63],[-6,-21],[-39,-39],[-18,-15],[-54,29],[-15,4],[-25,-20],[-34,-18],[-55,-19],[-21,14],[-9,13]],[[51950,78298],[-5,19],[-14,33],[-16,20],[-11,22],[-14,24],[-9,19],[12,64],[-9,22],[-5,32],[3,22],[-5,5],[-50,12],[-42,-4],[-29,-21],[-25,-35],[-3,-8],[2,-6],[12,-32],[-20,-35],[-32,-26],[-22,-3],[-10,5],[0,37],[18,13],[17,24],[5,34],[2,23],[-17,29],[2,17],[11,34],[6,29],[9,25],[34,42],[35,41],[5,45],[3,54],[5,13],[47,32],[11,13],[6,18],[37,60],[37,60],[7,20],[6,12],[0,10],[-4,7],[-18,5],[-6,19],[19,34],[24,21],[23,0],[9,-9],[-1,-11],[10,-12],[18,-4],[21,4],[22,13],[13,30],[7,23],[34,26]],[[52115,79258],[23,-13],[63,-4],[47,7],[29,18],[36,0],[24,-10],[4,1],[7,3],[6,9],[23,7],[3,8],[-1,8],[-4,4],[-28,-4],[-11,6],[-2,15],[9,25],[20,20],[18,5],[12,-5],[31,-38],[7,-2],[5,7],[6,4],[11,-7],[11,-24],[2,-4],[69,9],[15,0],[47,-42],[48,-43]],[[55298,85158],[-23,-14],[-13,-40],[-19,-7],[-17,-14],[-7,-128],[33,-49],[-18,-7],[-17,-14],[-11,-22],[-12,-47],[-45,-26],[-17,-19],[-25,-44],[-13,-63],[-25,-27],[-29,-6],[17,52],[22,42],[-21,28],[-13,46],[-16,34],[13,39],[-7,63],[2,62],[19,32],[22,25],[34,59],[37,42],[51,19],[23,-17],[10,38],[17,9],[15,-9],[33,-37]],[[54591,84268],[-15,-29],[-12,2],[-9,39],[-2,99],[5,49],[61,178],[27,14],[38,109],[10,48],[17,44],[10,39],[8,15],[17,-7],[8,-7],[-18,-23],[2,-29],[-1,-13],[-48,-128],[-12,-83],[-17,-21],[-69,-296]],[[53163,85850],[23,-73],[20,-10],[28,19],[19,53],[11,81],[13,76],[-15,81],[-17,72],[-1,21],[43,60],[13,49],[14,47],[16,16],[23,4],[27,9],[34,31],[30,42],[24,38],[8,76],[0,39],[10,28],[10,55],[-9,55],[-31,83],[-36,117],[-5,63],[16,12],[32,11],[60,3],[6,7],[6,28],[13,38],[15,28],[10,39],[4,36],[-34,54],[-45,55],[-30,18],[-54,46],[-38,39],[22,148],[16,109],[3,27],[0,41],[-52,177],[2,39],[5,35],[-6,61],[-3,54],[9,16],[21,30],[-20,47],[-2,4],[-38,117],[59,115],[-11,60],[36,44],[64,99],[36,56],[7,9],[29,25],[54,29],[60,14],[27,0],[103,-20],[80,-15],[12,15],[17,32],[22,45],[1,50],[-7,73],[-12,44],[-57,29],[-62,39],[76,124],[53,86],[66,129],[21,54],[15,22],[19,198],[13,56],[11,29],[0,30],[-7,50],[-19,114],[104,14],[34,7],[32,14],[61,35],[31,31],[-17,106],[37,36],[91,125],[98,119],[46,46],[5,22],[4,35],[-21,56],[-22,35],[-43,65],[19,46],[31,9],[42,18],[32,39],[4,5],[55,154],[107,77],[43,43],[67,-32],[97,-48],[44,71],[14,26],[15,39],[-6,67],[-3,87],[5,34],[39,16],[21,4],[108,-36],[28,1],[51,-5],[57,-16],[120,-42],[50,-17],[28,-4],[24,20],[51,50],[-76,37],[50,38],[26,38],[22,46],[8,55],[-3,29],[-16,20],[-46,50],[105,7],[36,2]],[[55728,91610],[76,-33],[3,-7],[0,-17],[3,-18],[74,-45],[21,-23],[45,-37],[12,-19],[42,-23],[30,-24],[35,-20],[41,-31],[55,-25],[46,-8],[117,-42],[20,-13],[33,-30],[35,-34],[23,-69],[38,-4],[10,-24],[33,-41],[46,-36],[-2,-12],[-36,-34],[-4,-45],[3,-58],[12,-47],[-2,-14],[-9,-16],[-10,-26],[-4,-22],[1,-11],[3,-6],[20,0],[34,-5],[20,-10],[12,-55],[-4,-10],[-29,-25],[-9,-19],[-1,-29],[6,-31],[9,-36],[23,-37],[31,-40],[20,-32],[9,-23],[4,-16],[-14,-20],[-12,-40],[-3,-45],[-5,-30],[-27,-41],[-19,-14],[-5,-22],[-3,-36],[6,-44],[2,-29],[6,-22],[8,-14],[43,-25],[25,-50],[15,-41],[29,-106]],[[56709,89749],[-73,-13],[-56,26],[-27,-13],[-48,-1],[-55,-10],[-19,-21],[-14,-8],[-51,29],[-48,49],[-35,-37],[-23,-7],[-20,33],[-18,6],[-10,-12],[-8,-29],[-14,-24],[-3,-14],[-2,-60],[-4,-14],[-46,8],[2,-16],[10,-8],[5,-10],[-17,-13],[-47,2],[-4,-14],[13,-22],[-10,-19],[-10,-8],[-55,-12],[-32,3],[-9,-12],[-3,-16],[6,-16],[14,-9],[5,-10],[-1,-21],[-12,-4],[-33,38],[-10,-2],[7,-20],[19,-22],[11,-22],[10,-26],[-2,-21],[-41,-65],[-37,-41],[-27,-37],[-16,-39],[19,-20],[20,-29],[15,-55],[17,-49],[35,-46],[-7,-27],[-8,-21],[-58,-47],[-66,-70],[-71,-178],[-24,-24],[-62,-30],[-23,-30],[-46,-35],[-81,-29],[-37,-42],[-16,-43],[-19,-3],[-18,17],[-24,12],[-3,-28],[1,-21],[-39,31],[-19,-28],[-14,-47],[-56,-63],[-61,11],[-6,-11],[16,-8],[2,-10],[-11,-5],[-17,0],[-25,-12],[-17,1],[-8,-30],[-13,-37],[-34,-15],[-18,-3],[-9,-20],[53,-5],[-4,-17],[-1,-17],[-6,-19],[-60,-27],[-9,-21],[-12,-13],[-27,0],[1,13],[4,13],[-39,-1],[-12,31],[-8,-8],[4,-25],[11,-25],[11,-38],[-9,-24],[-10,-11],[7,-11],[21,-8],[9,-15],[-25,-13],[-32,-44],[-32,-1],[-20,-28],[-21,0],[-17,18],[-27,15],[-9,-27],[-2,-20],[16,-53],[29,-41],[28,-18],[-20,-12],[-15,-26],[-17,-83],[-10,-33],[-10,-57],[6,-49],[6,-24],[13,-32],[-36,4],[-39,19],[6,-39],[-24,-47],[4,-40],[5,-27],[-7,-44],[11,-14],[6,-26],[-10,-20],[5,-17],[1,-59],[8,-92],[-3,-20],[21,-80],[-5,-29],[-3,-36],[31,-34],[27,0],[27,1],[10,-9],[11,-24],[8,-29],[23,2],[36,24],[23,6],[16,-46],[42,-59],[24,-27],[42,-14],[43,-48],[-6,-58],[18,-20],[52,-22],[18,-31],[9,-27],[14,-21],[16,-66],[-6,-41],[-21,-14],[-49,-44],[-22,-32],[-17,-20],[-49,-44],[-18,-8],[-17,-22],[-16,-10],[-15,6],[-55,-41],[4,-18],[42,-7],[22,9],[17,20],[18,5],[16,-4],[18,16],[14,7],[14,-8],[16,-39],[-33,-20],[-23,-1],[-12,-64],[-14,-27],[-10,-13],[-52,-27],[-35,-35],[-40,-27],[-18,6],[-26,-29],[-59,-33],[-31,-45],[-68,-40],[-34,-32],[-95,-2],[-89,7],[-29,-16],[29,-4],[20,-16],[25,7],[57,-8],[29,-8],[38,-54],[-28,-19],[-48,-14],[18,-76],[15,-51],[-20,-31],[-1,-140],[-27,-2],[-12,-58],[9,-30],[-1,-69],[6,-42],[13,-39],[-6,-41],[-43,-95],[1,-44],[8,-27],[6,-42],[-20,-81],[-14,-69],[-16,-57],[-37,-69],[-18,-51],[-43,-160],[-21,-32],[-26,-24],[-29,22],[-27,13],[-32,-2],[-51,-18],[-77,12],[-74,-6],[-19,-16],[11,-58],[-28,-8],[-26,17],[-24,-20],[-20,-22],[-39,-51],[-13,-32],[-3,-59],[20,-54],[18,-62],[-46,-76],[-26,-2],[-76,20],[-135,-47],[-121,38],[15,40],[0,30],[6,45],[4,47],[-1,32],[-9,33],[-29,44],[-68,147],[-19,62],[-14,26],[10,1],[55,-33],[13,4],[13,13],[-16,47],[-14,22],[-10,32],[33,9],[23,-2],[17,37],[-10,58],[-25,19],[-21,7],[-40,93],[-42,48],[-75,184],[-27,127],[-26,-12],[-12,55],[-9,53],[-2,38],[-40,22],[-1,27],[-8,120],[-42,16],[-28,68],[-5,128],[-28,23],[-23,-7],[1,32],[5,30],[-13,117],[-4,108],[-11,32],[-6,38],[5,33],[8,19],[28,5],[26,-29]],[[55321,85208],[-5,-36],[-15,3],[-13,26],[27,41],[40,-2],[14,-9],[-48,-23]],[[55115,85846],[-12,-6],[-6,2],[7,27],[6,11],[19,11],[5,-2],[-19,-43]],[[55165,86100],[-7,-19],[-7,23],[3,5],[4,23],[14,12],[21,-7],[0,-6],[-20,-19],[-8,-12]],[[58874,36890],[6,-8],[25,-27],[2,-53],[-2,-60],[-5,-38],[2,-38],[8,-59],[8,-41],[2,-184]],[[58920,36382],[-9,9],[-16,7],[-8,-3],[-8,-83],[-6,-122],[4,-77],[-60,-2],[-76,8],[-54,33],[-59,73],[-35,113],[-15,71],[-21,4],[-4,12],[-2,87],[1,91],[4,25],[39,112],[25,69],[15,68],[33,79],[36,51],[13,7],[9,-2],[62,-70],[65,-66],[14,8],[7,6]],[[34956,54930],[-23,-41],[-25,-58],[-34,-100],[2,-32],[-8,-25],[-2,-45],[3,-51],[8,-33],[4,-62],[-6,-57],[2,-33],[7,-52],[6,-55],[-1,-23],[8,-18],[8,-18],[-3,-49],[27,-88],[16,-39],[23,-37],[9,-37],[13,-44],[8,-5],[4,-18],[-4,-34],[-1,-47],[-15,-55],[-35,-100],[-4,-24],[9,-83],[-5,-68],[-2,-33],[-17,-60],[-40,-145],[-23,-27],[-14,-42],[-9,0],[-10,-4],[-4,-5]],[[34828,53183],[-12,0],[-10,19],[-2,22],[-5,25],[-12,8],[-24,-9],[-7,6],[-14,27],[-11,30],[-3,28],[-8,-3],[-18,-25],[-12,-6],[-9,7],[-11,-2],[-28,-27],[-16,-7],[-11,-27],[-76,-13],[-20,-7],[-45,48],[-12,15],[-6,3],[-5,-3],[-5,-11],[-8,-60],[-6,-16],[-12,-14],[-12,-24],[-2,-23],[18,-13],[15,-45],[16,-36],[13,-33],[-2,-36],[-2,-51],[-10,-18],[-15,-8],[-58,25],[-44,22],[-19,5],[-8,5]],[[34310,52961],[-11,19],[-11,18],[-18,6],[-22,12],[-15,45],[-17,64],[-5,29],[-13,28],[-13,40],[-3,36],[-10,32],[-5,11],[-7,45],[-2,16],[-3,2],[-5,14],[-11,47],[-2,12],[-4,4],[-12,34],[-9,11],[-4,17],[1,47],[-5,23],[-2,43],[0,17],[-5,20],[-8,12],[-1,32],[-2,77],[-4,14],[-34,-1],[-3,-8],[-15,-4],[-16,-1],[-15,10],[-12,14],[-3,17],[2,54],[-20,41],[-31,50],[-9,64],[-12,40],[-34,84],[-7,57],[0,41],[13,37],[17,65],[6,60],[6,31],[8,40],[8,53],[-6,32],[-10,32],[-3,23],[10,35],[10,24],[11,4],[14,15],[12,21],[17,5],[22,2],[44,0],[22,9],[7,17],[-1,33],[12,29],[11,13],[5,9],[1,11],[-3,10],[-5,7],[-12,2],[-11,51],[7,22],[10,41],[2,23],[15,37]],[[34112,55039],[4,-12],[11,67],[2,53],[8,54],[14,63],[24,31],[140,-32],[64,-30],[82,-52],[12,-55],[0,55],[-4,56],[23,40],[50,14],[75,-19],[64,23],[87,-3],[133,-45],[59,-31],[25,-28],[4,-50],[-2,-64],[-10,-62],[-21,-82]],[[58566,53853],[-6,25],[-6,23],[-11,29],[-16,12],[-14,-6],[-17,-6],[-8,17],[-1,40],[-5,37],[-8,28],[-24,28],[-63,56],[-48,113],[-25,52],[-17,34],[-25,89],[-29,61],[-35,28],[-23,-14],[-23,-65],[-45,-61],[-20,-3],[-26,34],[-33,23],[-59,11],[-24,-29],[-32,-47],[-27,-28],[-17,-4],[-15,12],[-18,6],[-15,1],[-32,42],[-16,32],[-11,30],[-18,21],[-21,17],[-15,27],[-7,34],[-12,43],[-15,39],[-48,70],[-15,41],[-10,41]],[[57611,54786],[-19,44],[-21,60],[-7,87],[-1,70],[-4,32],[-9,33],[-11,27],[-16,31],[-40,45],[-40,52],[-20,31],[-36,11],[-23,30],[-18,65],[-8,53],[-18,41],[-8,29],[-5,34],[15,104],[-21,37],[-32,47],[-23,52],[-14,48],[-41,63],[-90,95],[-51,60],[-29,54],[-24,53],[-3,22],[16,53],[3,43],[-13,48],[-54,91],[-43,99],[-32,31],[-78,28],[-23,11],[-23,19],[-23,45],[-8,53],[11,84],[-7,26],[-13,7]],[[56707,56834],[4,18],[14,41],[24,27],[65,42],[3,16],[2,53],[5,26],[22,73],[3,29],[1,63],[3,29],[7,21],[17,37],[6,22],[3,48],[-2,94],[9,38],[41,86],[11,38],[3,34],[0,35],[2,35],[12,33],[11,11],[30,10],[20,-7],[143,59],[16,-8],[8,-35],[-1,-55],[3,-27],[7,-19],[23,-27],[15,-44],[9,-16],[23,-31],[106,-253],[30,-24],[29,9],[57,52],[29,14],[202,-15],[22,8],[1,-2],[31,-127],[15,-29],[221,-1],[-4,36],[2,40],[26,52],[13,26],[6,9],[34,38],[33,25],[64,29],[24,46],[13,42],[0,82],[9,14],[15,19],[74,74],[13,16],[131,-172],[73,-136],[5,-7],[3,-2],[4,4],[4,7],[5,4],[3,2],[32,1],[59,7],[20,16],[119,243],[31,78],[8,16],[17,55],[18,95],[4,11],[131,227],[4,18],[1,15],[-19,76],[-5,39],[0,60],[3,93],[-1,59],[0,7],[-2,9],[-1,3],[-73,168],[185,2],[0,14],[0,7],[0,7],[-4,20],[-2,26],[0,8],[0,7],[1,14],[0,7],[0,4],[0,3],[0,3],[1,3],[132,-4],[-1,-47],[-16,-112],[0,-66],[-4,-77],[-1,-6],[-3,-16],[-4,-10],[-3,-9],[-1,-3],[-2,-6],[0,-8],[28,-427],[-1,-11],[-1,-7],[-8,-27],[-1,-9],[-1,-6],[3,-5],[61,-46],[3,-3],[3,-4],[22,-55],[120,-202],[4,-10],[12,-64],[2,-10],[0,-15],[0,-12],[-3,-38],[1,-17],[2,-12],[2,-13],[0,-4],[-1,-3],[0,-6],[-18,-74],[-6,-52],[-2,-44],[1,-25],[2,-17],[1,-4],[1,-2],[1,-2],[1,-1],[51,0],[1,0]],[[59466,57293],[-1,-24],[2,-116],[2,-102],[3,-167],[0,-43],[-2,-55],[-6,-21],[-15,-31],[-18,-28],[-47,-7],[-39,1],[-27,6],[-38,3],[-36,-6],[-13,-24],[-19,-83],[-28,-122],[-14,-51],[-4,-30],[4,-18],[19,-26],[40,-36],[46,-21],[34,-9],[24,-10],[18,-12],[66,-93],[21,-43],[12,-38],[2,-41],[10,-41],[38,-81],[21,-47],[57,-61],[22,-68],[21,-33],[20,-36],[11,-53],[25,-154],[16,-81],[17,-66],[7,-108],[13,-48],[14,-58],[23,-53],[25,-41],[4,-11]],[[59796,55006],[-51,-104],[-57,-116],[-66,-135],[-73,-147],[-56,-116],[-56,-114]],[[56707,56834],[-28,15],[-35,11],[-67,13],[-27,19],[-12,29],[4,73],[-7,16],[-11,13],[-7,32],[1,38],[36,85],[7,45],[6,158],[4,55],[-3,65],[-28,119],[-25,83],[-40,123],[-16,41],[-81,169],[-9,25],[-20,72]],[[56349,58133],[10,63],[12,94],[1,43],[-5,45],[-21,33],[-18,4],[-8,17],[-16,25],[-15,19],[-14,37],[-10,52],[7,184],[-5,25],[-20,7],[-5,13],[1,36],[-12,105],[-12,87],[7,48],[-18,66],[-33,28],[-31,-9],[-33,-13],[-20,4],[-14,12],[-10,24],[-5,28],[5,43],[18,79],[23,64],[46,59],[13,31],[7,35],[1,40],[-3,42],[-5,38],[-14,51],[-13,60],[0,40],[6,29],[13,35],[24,39],[6,8],[16,21],[13,15],[34,42],[8,19],[-3,24],[-8,20],[-14,27],[-2,33],[-4,57],[-7,37],[-5,26],[9,20],[14,28],[18,17],[28,15],[11,19],[3,38],[-1,37],[10,27],[14,57],[10,27],[18,30],[19,38],[8,43],[2,43],[-10,127],[21,54],[27,44],[38,-3],[60,9],[40,19],[29,-1],[66,-24],[5,6],[2,5],[3,34],[0,85],[0,257],[0,257],[0,257],[0,257],[0,257],[0,257],[0,256],[0,257]],[[56661,63073],[0,72],[0,72],[0,72],[0,72],[68,0],[69,0],[68,0],[69,0],[1,1],[0,1],[1,1],[1,1],[0,287],[0,287],[0,287],[0,287]],[[56938,64513],[107,0],[106,0],[106,0],[106,0],[106,0],[106,0],[106,0],[106,0],[106,0],[107,0],[106,0],[106,0],[106,0],[106,0],[106,-1],[106,0],[33,0],[14,5],[27,107],[12,8],[17,-6],[7,-25],[-6,-37],[-9,-51],[52,0],[91,0],[91,0],[92,0],[91,0],[91,0],[91,0],[91,0],[91,0],[91,0],[92,0],[91,0],[91,0],[91,0],[91,0],[91,0],[91,1]],[[60241,64514],[4,-132],[12,-105],[43,-150],[36,-81],[13,-44],[1,-21],[-1,-19],[-11,22],[-19,15],[-3,-70],[5,-50],[4,-94],[15,-101],[-11,-93],[2,-158],[19,-190],[-4,-120],[32,-283],[30,-156],[17,-39],[19,-20],[36,-14],[53,-79],[43,-85],[15,-44],[20,-48],[14,9],[9,12],[13,-39],[67,-84],[10,-39]],[[60724,62214],[-24,-38],[-28,-66],[-7,-26],[-3,-16],[-3,-20],[-8,-19],[-16,-27],[-6,-12],[-4,-18],[-9,-12],[-11,-1],[-9,-8],[-14,-12],[-20,6],[-21,-12],[-8,-14],[-16,-13],[-17,-3],[-5,-4],[-16,-22],[-19,-30],[-23,-19],[-8,-6],[-10,-21],[-16,-103],[-12,-27],[-19,-3],[-26,0],[-22,-9],[-30,12],[-14,-2],[-4,-22],[-6,-89],[1,-38],[-12,-45],[-13,-56],[5,-95],[2,-94],[-24,-142],[-4,-32],[-24,-113],[-13,-41],[-31,-210],[-13,-65],[-26,-68],[6,-110],[6,-118],[6,-110],[9,-166]],[[60145,60055],[-22,-155],[1,-84],[-16,-124],[-12,-58],[-11,-34],[-10,-35],[-17,-78],[-14,-102],[-7,-105],[0,-61],[-3,-28],[-5,-17],[-33,-12],[-46,-12],[-25,-14],[-17,-22],[-21,-49],[-40,-137],[-22,-83],[-33,-115],[-39,-81],[-8,-39],[-7,-73],[-14,-116],[-13,-83],[2,-66],[-12,-115],[2,-56],[-14,-31],[-18,-30],[-13,-7],[-27,34],[-20,34],[-8,9],[-18,-21],[-21,-32],[-25,-75],[-19,-75],[11,-159],[-1,-35],[-5,-38],[-30,-119],[-7,-37],[-11,-72],[-11,-124],[0,-30]],[[72213,57390],[-17,-6],[-14,38],[-3,17],[3,11],[4,6],[5,-2],[6,-36],[16,-28]],[[72187,57056],[8,-43],[-23,29],[-15,25],[-6,20],[32,-22],[4,-9]],[[72217,57495],[26,-3],[29,2],[20,-8],[34,-89],[93,-159],[51,-162],[4,-35],[7,-30],[12,-9],[11,-14],[50,-156],[6,-31],[-1,-34],[3,-25],[14,-13],[16,-6],[11,-24],[14,-124],[0,-39],[3,-17],[64,-193],[4,-24],[-1,-18],[2,-15],[12,-34],[20,-92],[9,-21],[12,-81],[1,-154],[-4,-69],[-12,-84],[-14,-81],[-16,-59],[-21,-50],[-71,-106],[-21,-22],[-93,-66],[-68,-63],[-64,-17],[-63,34],[-48,83],[-24,122],[-17,127],[-25,141],[-18,435],[-9,122],[-15,155],[2,67],[10,64],[0,-141],[9,-17],[7,18],[7,146],[5,62],[25,161],[1,29],[-5,61],[1,30],[38,113],[9,66],[5,67],[-2,73],[-7,72],[31,-23],[17,-25],[17,-17],[14,9],[16,0],[-11,39],[-36,36],[-59,22],[-18,29],[-7,25],[3,29],[5,11]],[[50442,74119],[-6,-7],[-18,7],[-28,0],[-1,23],[4,16],[5,17],[17,-33],[27,-6],[0,-17]],[[50873,74763],[27,-19],[28,17],[15,-5],[15,-9],[3,-37],[-13,-41],[-18,-41],[-16,-45],[-13,-52],[-25,-31],[-23,-18],[-48,38],[-28,10],[-8,14],[-7,58],[-12,18],[-19,8],[-16,-14],[-21,-31],[-12,31],[-17,5],[-7,19],[0,23],[115,139],[33,31],[71,36],[11,-5],[-9,-22],[0,-9],[9,-10],[-2,-17],[-9,-14],[-4,-27]],[[51192,74793],[-5,-7],[-85,67],[-28,7],[-7,10],[1,35],[2,15],[57,7],[46,-24],[25,-67],[2,-11],[-8,-32]],[[50401,74261],[-10,-35],[-42,12],[-10,15],[9,40],[13,5],[0,28],[13,29],[60,23],[14,-20],[3,-28],[-36,-61],[-14,-8]],[[49501,76847],[1,-20],[10,-28],[12,-10],[24,-14],[18,-2],[25,-7],[17,-16],[1,-24],[-5,-28],[-10,-25],[-6,-20],[6,-11],[9,-9],[9,-2],[7,3],[5,15],[9,19],[5,2],[0,-10],[4,-13],[31,-23],[67,-41],[26,-1],[22,-5],[6,-17],[43,-64],[10,2],[19,-1],[23,5],[16,12],[11,-2],[12,-13],[14,-10],[19,-21],[16,-26],[11,-9],[67,18],[15,-16],[16,0],[18,4],[39,-8],[32,2],[3,7],[3,57],[5,21],[7,5],[19,-4],[68,-34],[28,-21],[27,-17],[24,-2],[15,-11],[22,-55]],[[50396,76379],[-3,-27],[1,-10],[3,-19],[-1,-21],[6,-14],[10,-2],[14,5],[14,8],[26,23],[7,4]],[[50473,76326],[43,-27],[19,-17],[7,-20],[9,-19],[13,-3],[18,19],[29,20],[48,-18],[54,-26],[23,-3],[1,13],[4,18],[9,8],[13,3],[19,9],[21,16],[21,6],[23,-11],[28,-10],[17,0]],[[50892,76284],[7,-36],[14,-14],[5,-31],[-24,-17],[-15,-2],[-4,-54],[6,-16],[14,-14],[4,-16],[3,-80],[-28,-48],[-40,-54],[-193,-173],[-46,-84],[-17,-19],[-143,-53],[-101,-57],[-48,-20],[-60,-98],[-28,-40],[23,-11],[26,-47],[-9,-21],[-38,-32],[-17,-10],[-9,5],[-9,-4],[-64,-170],[-58,-123],[-32,-53],[-32,-79],[-70,-206],[-1,-59],[35,-204],[19,-54],[28,-45],[53,-38],[12,-38],[-18,-36],[-52,-64],[-91,-86],[-39,-68],[-8,-66],[-27,-30],[-10,-92],[-16,-61],[-4,-20],[-17,-47],[-2,-33],[28,-47],[-14,-20],[-14,-9],[-32,-5],[-108,-6],[-87,-100],[-44,-89],[-39,-165],[-48,-98],[-21,-18],[-33,43],[-41,7],[-40,-15],[-20,-33],[-33,-19],[-32,16],[-68,9],[-31,-2],[-48,-27],[-41,18],[-69,9],[-150,-21],[-18,-11],[-19,-41],[-48,-70],[-72,-3],[-66,-45],[-16,-29],[-28,-79],[-9,-58],[-5,-1],[-7,14],[-11,-4],[-5,-45],[-25,-20],[-20,-7],[-51,36],[-42,54],[-22,3],[-36,84],[-16,54],[-11,57],[2,22],[-3,19],[-32,23],[-8,53],[24,68],[19,30],[12,8],[-29,-3],[-21,-44],[-27,71],[-109,138],[7,31],[-1,18],[-18,-37],[-13,-10],[-56,6],[-64,-17]],[[47942,73259],[-17,144],[-8,55],[-2,35],[17,82],[18,34],[24,69],[30,58],[31,13],[14,9],[11,44],[7,38],[-5,4],[-36,-8],[-66,159],[2,26],[8,38],[6,47],[1,38],[17,32],[26,32],[22,46],[11,46],[3,41],[-13,29],[-36,16],[-37,117],[-8,73],[-8,8],[-23,33],[-22,62],[-3,10],[23,11],[93,1],[20,13],[3,5],[17,49],[18,80],[4,49],[-6,20],[-31,49],[-1,15],[5,23],[18,25],[25,28],[14,25],[-3,19],[-8,20],[-1,18],[5,23],[1,79],[4,20],[-5,71],[-6,58],[-20,75],[4,17],[9,14],[29,26],[24,62],[35,51],[45,41],[31,46],[13,35],[9,10],[-3,16],[-6,24],[-18,23],[-23,13],[-26,0],[-16,4],[-4,19],[1,49],[-1,49],[-5,22],[-12,17],[-24,-5],[-20,14],[-16,3],[-9,-10],[-45,3],[-19,8],[-14,9],[-8,-5],[-5,-10],[-1,-15],[-3,-19],[-17,-18],[-37,-18],[-30,2],[-28,12],[-9,10],[-13,8],[-57,-10],[-7,7],[-19,-18],[-29,-22],[-16,-1],[-6,4],[-2,10],[-12,34],[3,18],[23,53],[-2,12],[-10,17],[-8,25],[-3,12],[-15,2],[-15,-13],[-60,-26],[-14,-9],[-26,-26],[-27,-39]],[[47561,76002],[-20,-8],[-8,12],[-2,91],[32,60],[22,37],[-10,7],[-24,-1],[1,29],[12,13],[11,31],[-13,14],[-10,20],[0,53],[3,22],[-3,23],[-49,-32],[-13,5],[0,40],[27,60],[3,18],[-32,9],[-24,30],[-14,26],[-16,38],[0,34],[16,79],[23,24],[20,14],[42,55],[57,-10],[36,11],[32,28],[19,7],[29,24],[-1,33],[-10,25],[9,23],[33,29],[37,37],[42,7],[43,34],[29,-22],[25,7],[29,-25],[38,-58],[56,-24],[45,19],[78,3],[40,-7],[70,14],[40,-5],[64,29],[51,-36],[97,-17],[58,-30],[162,-49],[59,-1],[82,28],[35,21],[32,-13],[47,24],[23,-4],[29,-35],[104,-46],[27,39],[20,9],[74,-24],[75,-49],[39,-3],[57,13],[46,32],[9,4]],[[45462,68190],[-23,-131],[-22,-52],[-13,-17],[-32,-14],[-38,82],[-19,83],[-11,26],[17,21],[25,-3],[54,17],[11,7],[55,84],[55,10],[1,-27],[-60,-86]],[[46190,68497],[-19,-38],[-21,13],[10,83],[9,25],[39,36],[32,15],[9,38],[11,15],[11,-23],[-9,-26],[-6,-84],[-22,-26],[-44,-28]],[[46056,68069],[-38,-65],[-38,15],[-6,11],[38,16],[34,50],[22,110],[35,121],[7,52],[13,20],[19,2],[8,-4],[9,-27],[0,-61],[-10,-102],[-18,-89],[-75,-49]],[[45722,68057],[-2,-45],[6,-44],[-1,-69],[-13,-36],[-35,-37],[-26,6],[-15,15],[-27,60],[-1,61],[25,41],[10,51],[64,-9],[6,9],[4,3],[5,-6]],[[45226,67984],[-11,-5],[-14,15],[-14,45],[10,34],[8,16],[13,-3],[23,-25],[8,-25],[0,-16],[-23,-36]],[[45031,67862],[-27,-94],[-34,35],[-8,12],[-7,19],[33,4],[33,47],[10,-23]],[[45046,68256],[-7,-5],[-7,46],[-33,111],[20,50],[37,1],[15,-34],[5,-36],[-7,-21],[2,-42],[-4,-27],[-21,-43]],[[85175,73606],[9,11],[0,16],[0,51],[25,36],[34,73],[17,40],[20,38],[22,25],[22,11],[35,5],[66,-4],[13,4],[46,4],[11,-7],[33,-4],[38,5],[18,11],[18,18],[15,33],[15,62],[17,48],[10,9]],[[85659,74091],[68,-258],[64,-166],[56,-121],[79,-232],[23,-124],[2,-77],[13,-106],[-11,-60],[3,-96],[-5,-49],[-9,-36],[-1,-70],[3,-37],[1,-49],[6,-19],[9,-7],[14,18],[18,7],[-3,-59],[-22,-150],[-18,-109],[-25,-95],[-32,-87],[-38,-34],[-27,-13],[-51,-4],[-43,15],[-36,-11],[-15,-18],[-11,-31],[8,-48],[-1,-36],[-16,3],[-31,21],[-34,2],[-16,11],[-16,51],[-17,-2],[-29,-31],[-44,-6],[-15,-17],[-5,-21],[6,-26],[22,-35],[-7,-36],[-23,-18],[-19,44],[-12,43],[-13,2],[-20,-12],[-4,-46],[10,-32],[15,-36],[-22,-42],[-5,-30],[-16,-21],[-42,47],[6,34],[18,33],[3,34],[-6,20],[-61,-86],[-37,-96],[-19,7],[-9,25],[-11,10],[-40,-63],[-8,-49],[-14,-2],[-7,21],[0,45],[-7,37],[-41,56],[-19,48],[10,27],[34,-15],[28,2],[-6,23],[-9,11],[19,12],[15,27],[-13,7],[-19,-15],[-16,7],[-6,63],[-20,65],[-10,63],[19,36],[10,56],[18,81],[9,27],[25,19],[9,21],[-14,11],[-22,9],[1,24],[15,12],[16,26],[32,32],[10,59],[-9,15],[-20,14],[5,30],[8,23],[-3,14],[-24,38],[-16,36],[5,40],[-4,60],[2,51],[-1,28],[-11,62],[-5,63],[-16,-10],[-12,-15],[-44,22],[-14,1],[-5,47],[15,57],[38,50],[21,6],[16,22],[26,7],[30,-34],[27,-7],[15,-59],[9,-12],[2,22],[22,25],[5,19],[-4,11],[-25,10],[-23,73],[-3,32],[-9,20],[13,59],[-26,67],[-13,21],[2,59],[-14,39],[-8,21],[-4,36],[4,16],[12,6],[3,15]],[[85761,71888],[-27,-36],[-35,48],[-8,26],[26,39],[23,44],[15,3],[6,-124]],[[85573,71892],[-3,-56],[-20,-3],[-11,36],[-13,-17],[-6,-1],[-10,45],[-2,36],[23,26],[14,-16],[20,-8],[8,-42]],[[85064,71641],[-18,-9],[-10,20],[-7,6],[4,26],[29,51],[6,17],[27,-10],[10,-27],[-13,-42],[-28,-32]],[[85144,73580],[-2,-76],[-15,4],[-10,7],[-5,15],[-10,71],[11,29],[23,-23],[8,-27]],[[85208,71626],[5,-27],[-22,5],[-12,26],[1,23],[14,3],[14,-30]],[[85499,71782],[-3,-18],[-14,27],[14,30],[3,-39]],[[85115,72864],[-4,-38],[-18,25],[-5,82],[19,-24],[8,-45]],[[85047,71849],[-4,-14],[-12,4],[-12,40],[-5,31],[-13,18],[20,27],[25,-49],[1,-57]],[[86365,73432],[-13,-18],[-15,18],[-2,18],[8,15],[18,10],[9,-14],[-5,-29]],[[85090,70981],[-13,-13],[-11,8],[-3,6],[-14,33],[-4,17],[10,32],[38,53],[99,51],[18,2],[39,-21],[9,-42],[-7,-35],[-9,-24],[-46,-40],[-35,-19],[-71,-8]],[[58690,38938],[2,-30],[2,-14],[13,-80],[20,-119],[13,-111],[18,-151],[0,-84],[4,-33],[16,-41],[20,-70],[7,-39],[7,-30],[21,-56],[16,-85],[14,-113],[12,-54],[4,-27],[5,-49],[0,-102],[0,-118],[0,-133],[1,-109],[-2,-55],[1,-157],[-18,-82],[2,-64],[6,-42]],[[58920,36382],[24,4],[42,-17],[35,2],[31,2],[52,3],[30,0]],[[59134,36376],[-10,-133],[-40,-208],[-13,-95],[-34,-341],[-44,-172],[-25,-71],[-72,-126],[-20,-25],[-18,-17],[-31,-14],[-123,-254],[-46,-123],[-41,-178],[-40,-98],[-60,-210],[-53,-161],[-51,-147],[-88,-203],[-39,-59],[-27,-26],[-70,-118],[-99,-189],[-75,-168],[-113,-190],[-65,-84],[-99,-164],[-27,-24],[-111,-152],[-79,-93],[-129,-107],[-51,-30],[-122,28],[-51,-15],[-43,-65],[-4,-93],[-18,-14],[-27,4],[-85,39],[-46,-7],[-27,-50],[-22,-63],[-64,-3],[-115,65],[-135,40],[-31,4],[-65,-48],[-23,-7],[-95,10],[-53,31],[-51,0],[-38,-26],[-47,-8],[-127,-175],[-66,0],[-56,-21],[-28,1],[-53,24],[-19,-1],[-30,-11],[-30,-31],[-68,-13],[-26,-27],[-115,-159],[-26,6],[-22,11],[-59,1],[-68,86],[-26,-6],[7,26],[2,45],[-14,32],[-10,14],[-26,-3],[-14,39],[-41,3],[-14,-9],[-20,-2],[-1,39],[1,24],[-1,38],[-5,46],[-16,15],[-12,6],[-28,-3],[-20,-5],[-10,-14],[-10,-33],[0,-103],[-15,29],[-16,62],[-5,66],[6,78],[31,29],[-3,53],[-6,45],[-35,117],[-13,54],[-29,36],[-23,87],[-23,32],[-9,61],[-22,49],[-8,77],[12,44],[20,24],[20,-38],[24,15],[35,56],[21,85],[1,135],[-5,85],[-28,219],[-13,50],[-63,157],[-72,210],[-92,330],[-44,199],[-66,401],[-59,227],[-72,212],[-9,14]],[[54568,35358],[11,26],[39,49],[17,13],[10,-6],[9,13],[9,33],[2,31],[4,44],[9,27],[9,52],[16,34],[34,22],[26,-30],[11,-29],[5,-38],[11,-18],[18,1],[13,-24],[8,-48],[-2,-35],[-10,-22],[1,-28],[14,-35],[5,-34],[9,-45],[47,-25],[23,-15],[39,-5],[38,-20],[35,-34],[58,-9],[80,18],[66,-8],[52,-34],[38,-6],[24,21],[10,31],[-3,41],[11,25],[26,11],[21,31],[16,50],[37,40],[57,32],[29,-1],[0,81],[0,256],[0,256],[0,257],[0,256],[0,256],[0,256],[0,256],[0,242]],[[55550,37570],[13,-17],[88,-128],[24,-68],[11,-43],[38,-155],[28,-140],[23,-105],[2,-48],[3,-47],[4,-23],[-3,-25],[-16,-57],[-16,-44],[-20,-60],[-2,-79],[6,-93],[12,-46],[16,-15],[36,23],[23,-7],[32,-18],[107,11],[13,-6],[40,-6],[14,7],[12,20],[14,56],[12,18],[23,9],[27,15],[22,33],[35,110],[70,98],[22,23],[14,26],[11,36],[25,123],[19,103],[6,48],[17,79],[20,50],[19,27],[10,7],[26,13],[32,13],[34,-14],[37,-31],[42,-51],[42,-64],[20,-32],[21,-15],[37,-5],[25,1],[38,-63],[19,-4],[44,-19],[53,-20],[34,2],[36,34],[26,2],[33,-3],[37,10],[27,14],[21,30],[18,33],[21,97],[12,78],[19,89],[23,122],[8,85],[8,23],[33,26],[28,18],[74,33],[15,18],[14,40],[32,68],[40,57],[21,32],[37,275],[5,34],[27,73],[17,31],[11,0],[15,20],[20,37],[24,24],[28,9],[18,25],[8,41],[14,20],[21,-1],[11,13],[3,28],[12,24],[22,19],[11,23],[1,27],[26,66],[51,103],[47,58],[45,12],[42,21],[40,32],[30,49],[19,67],[32,38],[65,11]],[[57982,34503],[45,36],[21,23],[15,18],[19,28],[7,68],[5,58],[15,28],[15,19],[13,30],[15,72],[10,70],[2,29],[-6,30],[-10,31],[-9,43],[-12,6],[-23,24],[-33,48],[-29,42],[-27,61],[-11,9],[-26,42],[-12,23],[-8,28],[-7,10],[-12,-8],[-31,-12],[-66,-49],[-41,-46],[-35,-53],[-36,-21],[-26,-18],[-21,-61],[-20,-58],[-17,-51],[-10,-24],[-9,-15],[-10,-33],[-18,-55],[-18,-37],[-24,-20],[-31,-26],[-11,-15],[-1,-22],[11,-52],[11,-49],[17,-59],[13,-42],[20,-52],[12,-31],[-1,-51],[4,-18],[6,-21],[6,-6],[6,-7],[17,-15],[4,-10],[12,-17],[11,-32],[22,-44],[24,-33],[41,-14],[32,-10],[11,6],[11,27],[9,34],[3,43],[10,23],[39,111],[21,41],[13,2],[17,8],[21,4],[16,-4],[4,2],[25,14]],[[60515,24801],[-12,-11],[-56,10],[-6,22],[17,34],[9,14],[29,-7],[24,-28],[4,-9],[-9,-25]],[[61536,50866],[2,47],[-5,24],[-26,71],[-49,132],[-38,99],[-38,102],[0,82],[0,243],[-1,485],[-1,486],[-1,485],[0,243],[-1,99],[4,16],[44,89],[57,118],[76,224],[41,122],[34,101]],[[61634,54134],[9,31],[30,61],[56,37],[36,6],[121,46],[18,19],[11,21],[10,48],[23,68],[31,47],[58,61],[56,52],[13,8],[68,33],[17,11],[28,11],[10,1],[95,-12],[74,-9],[77,-9],[8,7],[53,121],[85,192],[54,123],[84,189],[64,137],[72,151],[69,139],[83,166],[52,105],[82,162],[77,155],[69,137]],[[63327,56449],[41,130],[40,127],[44,136],[52,165],[49,154],[40,126],[0,65],[0,140],[0,96],[0,265],[0,161],[0,155],[0,159]],[[63593,58328],[35,7],[90,41],[71,63],[130,45],[99,114],[17,55],[30,70],[43,23],[111,-82],[18,-6],[-7,-50],[-3,-50],[-23,-88],[-15,-98],[11,-149],[5,-242],[-3,-35],[-7,-34],[-3,-28],[-12,-9],[-5,-16],[9,-6],[34,26],[0,29],[2,14],[28,-32],[21,-13],[5,-31],[-1,-20],[-32,9],[-17,16],[-48,-26],[-29,-29],[-9,-47],[-7,-190],[-11,-123],[-3,-162],[-38,-108],[-14,-76],[-57,-152],[-31,-130],[-9,-64],[-51,-178],[-70,-137],[-25,-174],[-25,-110],[-28,-99],[-62,-177],[-31,-122],[-40,-213],[-12,-135],[-111,-391],[-115,-312],[-72,-263],[-129,-305],[-176,-393],[-230,-467],[-62,-95],[-252,-288],[-163,-241],[-83,-164],[-88,-143],[-69,-136],[-210,-460],[-22,-43],[-20,-41],[-27,-77],[-18,-31],[-50,-131],[-31,-69],[-36,-67],[-14,-47],[-11,-55],[-12,-31],[-31,-130],[-28,-86],[-28,-67]],[[63327,56449],[-95,0],[-92,0],[-91,0],[-16,17],[-77,53],[-97,67],[-120,84],[-85,59],[-92,62],[-92,63],[-73,50],[-90,61],[-79,54],[-11,13],[-44,82],[-57,107],[-11,2],[-27,23],[-25,58],[-25,74],[-23,93],[-11,63],[-31,26],[-15,50],[-28,74],[-20,36],[-7,31],[-9,65],[-17,70],[-15,44],[-4,19],[1,12],[29,95],[13,34],[15,33],[12,33],[4,23]],[[61922,58179],[35,112],[31,99],[24,77]],[[62012,58467],[54,-88],[53,-180],[62,-144],[85,-135],[33,-45],[30,-24],[155,4],[109,122],[100,89],[33,18],[58,-24],[64,-7],[57,-27],[29,7],[114,103],[71,101],[48,42],[20,1],[66,-36],[85,15],[117,87],[37,18],[28,1],[64,-39],[9,2]],[[94357,46942],[-13,-8],[-20,21],[-9,19],[4,30],[12,12],[13,-20],[1,-21],[12,-33]],[[96368,45123],[-24,-9],[-10,2],[-16,50],[12,11],[18,-4],[5,-29],[15,-21]],[[96147,45646],[-22,-10],[-7,3],[-17,-6],[-18,-41],[-13,6],[-10,-2],[-8,34],[0,17],[13,-3],[6,33],[14,17],[32,7],[28,-10],[10,-8],[-9,-30],[1,-7]],[[94604,45047],[-20,-20],[-17,10],[-14,15],[-11,44],[-23,28],[-34,11],[-14,19],[-3,10],[-24,8],[-6,24],[2,25],[3,13],[22,-12],[103,-117],[25,-36],[11,-22]],[[94873,46298],[4,-62],[-2,-21],[-21,45],[-10,-16],[-9,22],[1,46],[1,50],[-4,38],[-11,55],[12,-9],[39,-148]],[[94218,46587],[-4,-1],[-13,7],[-16,2],[-9,20],[11,29],[15,18],[6,-4],[7,-12],[14,-5],[2,-37],[-13,-17]],[[94490,46661],[16,-8],[8,1],[18,-31],[25,-46],[-10,-23],[-20,12],[-7,-5],[-2,3],[-4,23],[-22,23],[-19,2],[-3,27],[20,22]],[[93822,47095],[18,-47],[20,-105],[-4,-36],[-14,-3],[-4,-22],[-20,51],[-26,14],[-19,31],[-6,62],[-2,39],[-15,7],[-42,-10],[-14,-34],[-19,11],[-4,30],[3,29],[26,29],[5,38],[26,64],[15,11],[31,-23],[3,-92],[11,-30],[31,-14]],[[93944,46761],[-6,-2],[-7,23],[15,62],[8,-50],[4,-19],[-14,-14]],[[93918,46840],[-27,-45],[-20,15],[-17,39],[6,47],[3,13],[8,2],[8,10],[9,21],[29,-17],[8,-11],[-18,-29],[6,-9],[4,-14],[1,-22]],[[93718,46823],[0,-8],[-15,16],[-34,78],[6,26],[31,50],[10,7],[8,-31],[-7,-46],[-10,-12],[-5,-43],[16,-37]],[[93523,47279],[-5,-8],[-9,31],[-7,10],[0,34],[-28,57],[-2,39],[16,38],[22,-22],[22,-48],[25,-16],[-5,-32],[-23,-57],[-6,-26]],[[93500,47136],[-3,-15],[-15,71],[1,36],[3,23],[5,7],[12,-79],[-3,-43]],[[93658,47172],[-6,-9],[-30,4],[-23,59],[0,44],[18,40],[22,8],[12,-16],[11,-34],[4,-43],[-3,-38],[-5,-15]],[[93288,47754],[-28,-13],[-17,18],[7,44],[10,23],[35,-41],[-7,-31]],[[93789,46797],[0,-20],[-16,6],[-36,31],[-1,14],[20,5],[15,-4],[12,-18],[6,-14]],[[94374,46501],[61,-92],[27,8],[80,-2],[47,-66],[28,-30],[16,-59],[19,-14],[12,-30],[7,-55],[-5,-9],[-24,-20],[-18,-9],[-47,20],[-44,42],[-89,5],[-41,12],[-14,17],[-13,21],[-21,51],[-17,61],[-2,35],[-2,68],[5,24],[17,25],[18,-3]],[[94410,46927],[0,-14],[-37,48],[-28,59],[-81,64],[-17,33],[-15,4],[-41,54],[-41,36],[-25,47],[-6,19],[-15,11],[-25,51],[-25,34],[-9,62],[-24,43],[-6,19],[77,-35],[36,-68],[30,-38],[11,-28],[27,-38],[25,-4],[24,-38],[23,-10],[18,-20],[114,-172],[-14,-46],[15,-33],[9,-40]],[[93745,47620],[9,-20],[-21,-35],[-29,19],[-6,19],[0,11],[-20,-7],[-40,17],[-54,82],[-58,156],[-56,86],[-11,26],[-1,45],[8,17],[34,-19],[45,-71],[74,-73],[20,-38],[12,-90],[13,-27],[40,-69],[21,-16],[11,-3],[9,-10]],[[94652,47053],[69,-171],[-3,-31],[-9,-19],[-3,-58],[8,-22],[19,-10],[32,-62],[13,-75],[1,-23],[14,-34],[0,-72],[30,-100],[3,-48],[-3,-22],[-12,13],[-37,113],[-41,49],[-5,21],[-42,66],[-28,111],[-30,198],[14,47],[-34,96],[1,25],[15,-6],[10,2],[5,11],[13,1]],[[94920,45859],[35,-34],[20,6],[30,-23],[23,13],[15,-30],[36,-118],[0,-38],[24,-27],[-20,-5],[-28,14],[-22,-10],[-22,23],[-38,12],[-33,27],[-69,87],[0,43],[-11,21],[-3,54],[-25,17],[-29,3],[-2,26],[5,45],[21,-1],[26,-19],[50,-65],[12,-12],[5,-9]],[[56147,79726],[-6,-7],[-95,-32],[-13,5],[-13,18],[-7,14],[-5,9],[-8,26],[-11,19],[-16,15],[-15,17],[-19,1],[-52,-25],[-36,-2],[-23,8],[-32,15],[-62,2],[-43,-13],[-4,-18],[-39,-115],[-57,-43],[-50,-43],[-14,-9],[-25,14],[-28,25],[-23,14],[-17,-6],[-19,-29],[-8,-30],[-56,-22],[-98,-12],[-34,-29],[-11,-36],[-1,-26],[9,-23],[-11,-27],[-4,-11],[-69,-6],[-92,-8],[-55,2],[-52,2],[-35,23],[-43,45],[-45,59],[-5,2],[-6,6],[-29,4],[-7,-3]],[[54763,79496],[-17,19],[-5,25],[-27,66],[-30,109],[0,32],[11,35],[11,28],[1,21],[2,6]],[[54709,79837],[9,45],[21,60],[20,35],[15,11],[30,-10],[52,-9],[39,8],[37,27],[20,23],[18,25],[5,16],[8,7],[31,14],[9,17],[4,31],[3,35],[6,26],[8,19],[57,45],[5,16],[9,16],[17,17],[16,25],[17,15],[22,-1],[21,3],[16,9],[7,1]],[[55231,80363],[29,-8],[5,-28],[3,-30],[51,2],[28,64],[14,8],[24,22],[15,20],[10,-13],[16,-41],[16,-33],[9,-13],[1,-10],[10,-6],[18,-4],[12,-10],[4,-31],[0,-28],[-6,-20],[-3,-18],[13,-7],[19,7],[13,10],[39,-23],[14,51],[15,27],[21,12],[18,16],[17,11],[11,0],[5,4],[15,-1],[16,-5],[23,6],[31,-13],[20,-23],[19,-8],[22,1],[15,13],[22,45],[16,0],[24,7],[35,-1],[80,-9],[21,-18],[49,-22],[22,-25],[9,-31],[5,-21],[51,-32],[75,-42],[18,-5]],[[54587,78628],[-24,14],[-30,6],[-5,-7],[-12,-8],[-6,-14],[4,-55],[-7,-9],[-34,5],[-11,-6],[-18,-38],[-19,-16],[-23,-11],[-18,-14],[-22,-12],[-19,-7],[-8,-17],[-4,-18],[1,-18],[19,-35],[3,-37],[-2,-46],[-5,-24],[-7,-16],[-48,-21],[-49,-38],[-1,-8],[22,-34],[1,-8],[-18,-19],[-2,-19],[2,-22],[10,-22],[3,-21],[-27,-14],[-36,5],[-43,28],[-16,-4],[-14,-15],[-15,7],[-17,17],[-23,36],[-12,23],[-4,23],[-7,4],[-9,-7],[-8,-29],[-22,-51],[-16,-14],[-24,3],[-34,-1],[-21,-5],[-26,19],[-6,-4],[0,-12],[-10,-19],[-15,-12],[-74,28],[-10,23]],[[53771,78062],[17,11],[23,30]],[[53811,78103],[15,-4],[19,7],[9,12],[-13,38],[-30,47],[-16,17],[-22,12],[-4,13],[12,73],[-4,11],[-25,-4],[-6,8],[-2,13],[2,17],[17,29],[19,25],[5,14],[-1,11],[-24,12],[-15,11],[-11,4],[-8,-6],[-6,7],[-6,21],[6,32],[21,30],[24,26],[21,20],[11,8],[6,33]],[[53805,78640],[12,-3],[25,-2],[27,-8],[25,-9],[22,-12],[47,-12],[42,-7],[13,-7],[10,1],[13,-10],[8,7],[5,13],[23,16],[22,21],[14,26],[9,21],[14,14],[16,5],[14,7],[60,10],[62,-8],[30,14],[24,26],[35,7],[2,0],[53,-19],[4,11],[2,5],[-1,55],[17,25],[16,11]],[[54470,78838],[53,-4],[7,-17],[2,-26],[5,-35],[9,-10],[5,-14],[-1,-24],[10,-18],[24,-49],[3,-13]],[[78880,52610],[-42,-38],[-47,34],[15,57],[32,13],[25,-18],[14,-13],[10,-16],[-7,-19]],[[47143,56730],[-1,-17],[-8,-83],[-12,-71],[-8,-17],[-36,-19],[-15,-31],[-13,-101],[-8,-79],[-12,-13],[-52,-114],[-34,-43],[-24,-38],[-22,-48],[-28,-47],[-31,-80],[-21,-82],[-15,-26]],[[46803,55821],[-11,23],[-52,82],[-54,55],[-116,91],[-39,25],[2,33],[13,59],[-22,69],[9,51],[-9,0],[-16,-31],[-36,9],[-23,44],[-19,15],[-9,22],[-12,115],[-9,52],[-17,32],[-36,8],[-15,69],[-19,54],[3,34],[16,-2],[13,-24],[20,-10],[25,58],[23,32],[5,28],[-3,15],[-14,-24],[-37,6],[-9,-21],[-17,-7],[-13,69],[1,40],[5,45],[38,7],[3,14],[-26,10],[-33,52],[-6,35]],[[46307,57055],[16,12],[16,-5],[13,-8],[15,13],[14,20],[8,25],[11,67],[35,22],[21,41],[20,64],[9,45],[8,22],[6,19],[3,22],[9,19],[10,47],[6,44],[20,20],[42,19],[38,-32],[61,27],[3,41],[56,1],[66,0],[55,1],[19,-11],[7,-30],[18,-47],[19,-33],[23,-72],[28,-84],[29,-75],[19,-41],[2,-14],[-1,-17],[-10,-38],[-8,-42],[1,-15],[6,-8],[31,-13],[2,-46],[1,-64],[14,-60],[15,-44],[-1,-16],[-35,-75],[-13,-74],[-7,-21],[-3,-17],[7,-8],[9,5],[14,-6],[13,-2],[17,27],[28,68],[10,8],[21,-6]],[[46520,56126],[-4,-15],[-18,37],[-96,56],[27,29],[66,9],[20,-17],[9,-15],[3,-27],[-7,-57]],[[65427,49139],[1,-53],[-13,18],[-4,34],[-18,26],[-9,24],[20,29],[23,-78]],[[56306,77325],[-10,-10],[-11,-15],[-7,-26],[-1,-42],[-36,-33],[-14,-7],[-6,-21],[-9,-62],[1,-47],[5,-23],[2,-20],[12,-23],[10,-37],[7,-48],[16,-37],[39,-37],[20,-21],[14,-31],[11,-27],[33,-38],[-3,-26],[-7,-26],[-7,-12],[-16,-33],[-16,-19],[-26,-59],[-41,-3],[-10,-5],[-16,-16],[-7,-29],[7,-23],[-1,-24],[-7,-46],[10,-50],[14,-23],[2,-13],[-2,-23],[-22,-47],[-6,-17],[-22,-9]],[[56206,76217],[-7,4],[-11,17],[-11,4],[-26,-19],[-26,-11],[-21,9],[-20,1],[-14,-8],[-11,-3],[-21,-21],[-33,-14],[-16,3]],[[55989,76179],[-6,19],[-6,27],[3,13],[22,21],[3,21],[31,99],[6,32],[0,11],[-8,7],[-17,0],[-76,40],[4,46],[-22,25],[-24,22],[-4,25],[-27,50],[-19,28],[-25,14],[-22,21],[-12,12],[-6,23],[0,14],[-7,14],[-10,-2],[-17,-18],[-22,-16],[-4,-12],[8,-28],[6,-17],[-3,-17],[-7,-21],[-41,-47],[-5,-16],[8,-26],[-5,-13],[-34,-17]],[[55651,76513],[1,14],[-3,23],[-19,25],[-28,19],[-63,65],[-23,9],[-22,7],[-30,32],[-16,5],[-18,22],[-38,76],[-32,41],[-22,20],[-6,21],[-2,20],[1,7]],[[55331,76919],[17,30],[13,4],[16,1],[11,-15],[15,-3],[8,19],[4,27],[-2,35],[-35,82],[-29,57],[-4,12],[7,11],[10,5],[11,-4],[29,-4],[28,5],[9,14],[0,18],[-10,18],[-32,46],[-26,41],[-29,32],[-23,12],[-6,16],[-3,18],[3,31],[1,40],[5,25],[20,47],[19,51],[12,48],[6,45],[-2,13],[-10,9],[-21,10],[-29,-9],[-25,-16],[-10,-1]],[[55279,77689],[-3,20],[4,9],[8,-1],[6,-4],[7,9],[4,27],[-10,94],[18,9],[1,13],[1,12],[19,-16],[27,0],[24,3],[4,9],[-1,14],[-5,10],[-8,9],[-6,13],[-16,5],[-50,34],[-24,36],[0,39],[7,21],[9,7],[-2,7],[-29,18],[-10,24],[9,32],[-15,64],[-15,40],[15,17],[2,24],[1,14]],[[55251,78301],[6,0],[25,16],[8,13],[6,16],[5,4],[17,-17],[17,-2],[19,11],[15,15],[17,12],[8,8],[10,14],[21,39],[23,8],[30,-10],[34,-4],[25,9],[63,-11],[13,-9],[9,-10]],[[55622,78403],[17,-34],[16,-43],[22,-20],[26,-24],[13,-17],[20,-52],[16,-25],[5,1],[5,7],[4,5],[4,-5],[0,-16],[1,-34],[-3,-38],[5,-35],[0,-11],[-3,-10],[0,-9],[6,-9],[21,-23],[20,-36],[22,-26],[22,-16],[13,-1],[22,-29],[43,-21],[14,-7],[9,-12],[7,-14],[0,-14],[-6,-7],[-10,-20],[-3,-25],[-7,-6],[-7,0],[-5,-8],[1,-10],[6,-10],[9,-9],[17,-9],[17,-14],[0,-10],[-4,-11],[-21,-5],[-16,-2],[-8,-4],[1,-21],[45,-21],[21,-20],[10,-26],[29,-17],[47,-8],[33,-27],[18,-45],[30,11],[42,67],[41,17],[40,-32],[22,-26],[4,-20],[-10,-9],[-22,4],[-19,-13],[-14,-29],[-2,-31],[10,-33],[14,-23],[19,-13],[9,-17],[2,-22],[4,-6]],[[46588,60373],[26,-93],[-5,-44],[-6,-65],[15,-47],[17,-31],[12,-28],[14,-39],[2,-77],[-2,-56],[9,-26],[7,-32],[-1,-26],[-5,-24],[-17,-31],[-3,-58],[27,-71],[17,-38],[0,-22],[5,-24],[13,-28],[8,7],[8,23],[4,15],[24,-7],[11,-7],[14,-46],[6,-30],[4,-39],[15,-48],[14,-34],[2,-21],[13,-28],[-8,-64],[1,-32],[-8,-85],[-2,-41],[0,-15],[19,-30],[-2,-43]],[[46836,58988],[-19,8],[-32,5],[-65,-23],[-23,9],[-43,-3],[-30,-12],[-39,-28],[-30,7],[-16,22],[-21,-1],[-24,11],[-26,22],[-23,10],[-26,40],[-11,7],[-9,-11],[-7,-13],[-7,-8],[-14,7],[-5,27],[5,26],[1,19],[-7,11],[-15,4],[-25,-1],[-40,9],[-9,5],[-90,6]],[[46186,59143],[-93,1],[-79,1],[-100,1],[-70,0],[-66,1],[-50,-53],[-55,-56],[-73,-31],[-85,12],[-27,-9],[-28,-25],[-21,-18],[-29,-11],[-37,9],[-16,-6]],[[45357,58959],[-9,26],[-11,42],[7,31],[23,20],[34,26],[19,-14],[10,0],[2,16],[-3,9],[-26,22],[-14,30],[-11,-17],[-10,-37],[-8,-10],[-12,-11],[-6,25],[-3,24],[5,19],[-2,104],[3,55],[-2,49]],[[45343,59368],[16,32],[16,20],[60,2],[57,1],[54,-1],[55,-1],[6,97],[17,8],[26,10],[49,12],[54,11],[12,19],[9,33],[6,28],[11,13],[15,-10],[20,-15],[21,-24],[23,-21],[16,-14],[38,-34],[65,-48],[53,-19],[65,35],[46,22],[6,42],[-7,41],[-35,37],[-47,-4],[-15,-10],[-22,-13],[-13,-4],[-22,8],[-28,33],[-18,32],[-25,15],[-29,16],[-47,66],[-25,12],[-23,4],[-45,-13],[-44,-36],[-23,-81],[-43,1],[-93,3],[-86,2],[-70,-6]],[[45399,59669],[-7,59],[-17,47],[-27,40],[-6,37],[9,33],[26,26],[6,19],[-13,-2],[-21,-18],[-14,0],[-1,51],[-23,66],[-26,112],[-30,46],[-24,91],[-26,35],[-24,16],[-20,-3],[-7,-42],[-25,60],[34,21],[73,75],[85,215],[76,253],[9,60]],[[45406,60966],[10,46],[6,103],[11,62],[10,12],[13,47],[15,83],[18,46],[19,9],[16,-4],[11,-17],[31,-10],[53,-4],[41,12],[29,29],[38,14],[47,1],[25,12],[3,24],[6,7],[10,-10],[9,4],[8,17],[9,1],[9,-14],[39,-5],[70,6],[65,-44],[60,-93],[31,-62],[1,-31],[10,-31],[18,-31],[16,-6],[15,20],[12,-3],[8,-24],[17,-5],[19,15],[14,-5],[2,-14],[3,-8],[9,-3],[13,-19],[17,-49],[14,-69],[11,-88],[14,-48],[18,-8],[10,-18],[2,-22],[5,-14],[9,-8],[15,5],[18,-30],[19,-65],[3,-29],[-3,-16],[1,-11],[12,-11],[12,-21],[10,-32],[21,-29],[32,-24],[23,-37],[15,-50],[29,-41],[6,-5]],[[60250,66464],[-7,0],[-20,39],[-11,29],[-12,19],[-53,39],[-8,25],[9,25],[5,-25],[10,-14],[44,-36],[49,-76],[9,-7],[-15,-18]],[[61663,61471],[21,-3],[-9,19],[-2,9],[10,26],[30,-55],[-1,-64],[-2,-15],[-8,14],[-6,13],[-2,15],[-8,16],[-30,-10],[-18,17],[-27,55],[-7,39],[11,8],[12,19],[7,31],[-7,32],[16,-5],[9,-33],[1,-75],[3,-16],[-5,-17],[12,-20]],[[61888,61273],[-3,46],[-16,68],[-1,49],[-8,48],[-14,37],[-26,38],[-3,53],[-19,52],[-25,42],[-15,77],[-10,103],[-67,135],[-84,124],[-26,71],[-42,143],[-21,113],[-56,130],[-2,50],[-9,61],[-13,68],[-7,54],[-57,235],[-18,37],[-16,53],[-4,40],[-5,22],[-39,39],[-38,99],[-111,157],[-55,15],[-43,56],[-32,74],[-34,126],[-60,136],[-50,194],[16,71],[-1,49],[-16,84],[-17,64],[-12,61],[10,88],[3,98],[10,52],[7,57],[-9,115],[-17,61],[2,41],[-19,20],[-16,45],[16,-1],[-29,62],[-11,34],[-11,84],[-14,64],[-45,146],[-22,89],[-49,114],[-53,85],[-33,38],[-16,35],[-28,2],[-30,50],[-21,1],[-26,8],[-31,97],[-26,90],[-44,118],[11,31],[13,50],[-6,65],[-7,44],[-19,81],[-64,202],[-17,29],[-27,34],[-16,88],[-8,78],[-44,38],[-74,282],[-44,99],[-17,66],[-50,109],[-24,109],[-51,100],[-44,173],[-67,174],[-29,30],[-69,12],[-30,13],[-27,-38],[-2,48],[19,67],[26,140],[6,123],[42,364]],[[59708,68751],[59,-18],[49,-16],[71,-23],[74,-23],[43,-14],[14,6],[60,89],[54,81],[32,98],[31,96],[14,20],[48,17],[76,29],[75,28],[5,9],[18,77],[22,97],[5,10],[5,10],[54,55],[32,33],[-46,97],[-44,92],[-49,103],[-41,80],[-63,120],[-40,79],[71,37],[77,40],[78,41],[94,49],[73,38],[110,57],[53,28],[10,7],[41,68]],[[60873,70348],[62,-19],[93,-29],[90,-27],[95,-32],[31,-27],[91,-96],[60,-63],[69,-74],[87,-91],[59,-63],[77,-81],[59,-92],[76,-117],[82,-128],[68,-100],[94,-137],[93,-135],[90,-133],[73,-106],[91,-134],[8,-5],[92,-15],[125,-21],[125,-20],[113,-19],[49,19]],[[62925,68603],[53,-12],[72,-17],[43,-11],[82,-21],[25,-88],[9,-61],[8,-60],[24,-54],[56,1],[49,1],[61,2],[49,1]],[[63456,68284],[15,-54],[7,-54],[29,-128],[41,-100],[9,-36],[7,-55],[-7,-21],[-3,-23],[30,-55],[51,-46],[19,-12],[22,-21],[-17,-31],[30,-74],[34,-74],[37,-17],[50,-113],[74,-73],[46,-96],[-4,-2],[-14,10],[-16,13],[-5,-12],[0,-40],[5,-47],[23,-41],[21,-29],[8,-56],[-17,-120],[-5,1],[-11,10],[-12,2],[-6,-7],[14,-86],[13,-66],[17,-52],[14,-77],[11,-32],[49,-82],[14,-68],[14,-127],[30,-70],[17,-55],[22,-46]],[[64112,66122],[14,-63],[20,-49],[11,-12],[15,-5],[20,0],[23,12],[25,12]],[[64240,66017],[20,-24],[20,3],[2,-23],[-13,-31],[-17,-78],[24,-13],[22,-6],[17,-13],[9,0]],[[65329,64921],[20,-65],[17,-54],[23,-75],[25,-79],[24,-75],[17,-57],[-9,-58],[-10,-64],[-10,-63],[-11,-64],[-10,-64],[-10,-64],[-10,-64],[-10,-63],[-11,-64],[-10,-64],[-10,-64],[-10,-63],[-10,-64],[-10,-64],[-11,-64],[-10,-63],[-10,-64],[-12,-77],[-30,-20],[-47,-33],[-48,-33],[-48,-33],[-48,-34],[-48,-33],[-47,-33],[-48,-33],[-48,-33],[-48,-33],[-48,-33],[-47,-33],[-48,-33],[-48,-33],[-48,-33],[-47,-33],[-48,-33],[-39,-27]],[[60165,66654],[-3,-8],[-12,21],[1,44],[10,25],[-1,-34],[5,-35],[0,-13]],[[52062,52746],[-11,-15],[-12,12],[-3,23],[16,44],[7,11],[6,-9],[4,-12],[1,-18],[-8,-36]],[[51849,51912],[-28,-42],[-10,11],[-7,29],[-8,64],[3,30],[13,35],[28,34],[17,3],[17,-46],[0,-47],[-25,-71]],[[53468,77131],[-17,-4],[-8,24],[12,27],[18,4],[3,-21],[-8,-30]],[[2130,44086],[31,-54],[12,-72],[-13,-69],[-30,17],[-42,-15],[-15,5],[-34,85],[-23,38],[-10,35],[30,-4],[44,24],[50,10]],[[2374,43751],[-76,0],[-38,26],[-13,0],[-33,55],[-5,28],[17,19],[36,10],[70,-41],[11,-37],[16,-4],[13,-16],[3,-26],[-1,-14]],[[33007,59422],[-8,-9],[-21,39],[3,45],[12,25],[12,14],[12,2],[4,-38],[-3,-52],[-11,-26]],[[32992,59328],[-4,-6],[2,0],[-2,-5],[-1,5],[-3,2],[-2,1],[-4,0],[0,5],[4,-3],[7,3],[0,4],[-2,4],[-1,3],[2,5],[8,10],[3,5],[1,-2],[0,-2],[0,-2],[1,-2],[-4,-8],[-5,-17]],[[32962,59156],[-2,-1],[-3,2],[1,2],[3,1],[1,4],[0,5],[0,6],[2,3],[2,1],[1,-2],[1,-6],[-2,-4],[-1,-3],[-1,-5],[-2,-3]],[[33084,59805],[-15,-61],[-31,38],[-3,48],[3,29],[18,54],[15,36],[10,12],[6,-47],[-3,-109]],[[32630,61705],[-14,-12],[-12,17],[3,40],[11,1],[11,-18],[1,-28]],[[32602,61773],[-7,-8],[-13,35],[-20,10],[-18,21],[0,4],[0,11],[4,12],[9,9],[22,-28],[11,-36],[10,-17],[2,-13]],[[58487,50460],[-7,3],[-13,11],[-21,36],[-38,-20],[-10,1],[-14,-18],[-12,-21],[-7,-1],[-7,3],[-33,42],[-12,-1],[-5,-120],[-5,-67],[-7,-30],[-23,-29],[-24,-16],[-13,1],[-52,-9],[-21,0],[-11,10],[-15,68],[-27,30],[-27,14],[-10,-4],[-10,-35],[-4,-32]],[[58059,50276],[-26,22],[-7,27],[-1,46],[-10,62],[6,27],[10,17],[21,33],[33,46],[7,22],[4,37],[-2,84],[-3,72],[4,26],[15,55],[19,57],[24,59],[14,6],[18,23],[19,34],[11,12]],[[90522,76877],[4,-3],[5,0],[5,1],[2,-6],[1,-11],[-3,-1],[-7,-2],[-4,-1],[-2,8],[-1,6],[-4,4],[0,4],[4,1]],[[90654,76972],[-7,-3],[-12,3],[-4,3],[2,5],[8,8],[6,-3],[5,-2],[2,-11]],[[90567,76848],[-3,-1],[-2,7],[6,8],[11,9],[4,-5],[-4,-7],[-5,-4],[-7,-7]],[[88104,83582],[-34,-100],[-24,-1],[-18,21],[-39,-8],[-14,5],[23,31],[55,48],[23,-1],[22,10],[6,-5]],[[91830,85840],[-22,-7],[-11,16],[-1,11],[34,25],[21,36],[13,-22],[4,-15],[-38,-44]],[[83405,93945],[-70,-26],[-60,0],[-42,46],[33,18],[57,7],[31,-6],[44,-29],[7,-10]],[[84594,94383],[-17,-1],[-32,15],[-8,21],[0,10],[26,8],[33,-5],[25,-19],[4,-7],[-31,-22]],[[79519,96892],[-33,-4],[-36,12],[10,26],[81,4],[30,39],[51,-2],[14,-11],[8,-13],[-1,-17],[-11,0],[-48,-2],[-9,-9],[-56,-23]],[[79837,96337],[-32,0],[-9,27],[27,33],[34,0],[29,-10],[10,-5],[10,-12],[4,-18],[-73,-15]],[[77107,95967],[-15,-9],[-29,4],[-24,22],[-9,35],[20,9],[57,-61]],[[76903,95736],[-15,-6],[-13,4],[-4,7],[1,29],[25,38],[1,12],[12,6],[31,-7],[15,-16],[2,-7],[-21,-38],[-34,-22]],[[77815,97703],[-61,-7],[7,40],[4,11],[31,6],[20,-10],[44,-7],[-45,-33]],[[71320,94150],[-26,-4],[-118,22],[-43,27],[16,18],[31,0],[140,-63]],[[72974,94522],[-27,-20],[-37,11],[-27,13],[-14,19],[14,10],[40,7],[24,-7],[21,-22],[6,-11]],[[73543,94734],[-13,-34],[-78,17],[-11,14],[42,21],[38,12],[54,2],[-32,-32]],[[74070,95035],[23,-11],[73,17],[14,-6],[20,-24],[-31,-45],[-23,-18],[-66,10],[-83,1],[-37,25],[20,26],[48,16],[28,15],[14,-6]],[[66475,98677],[-60,-7],[-105,12],[-30,14],[7,13],[68,18],[54,4],[57,-19],[26,-23],[-17,-12]],[[86301,76210],[-8,15],[-2,26],[-9,25],[-18,34],[-7,35]],[[86257,76345],[16,18],[-3,32],[-15,30],[-23,6],[-5,8],[1,16],[8,16],[11,14],[24,19],[40,14],[22,12],[19,3],[20,-6],[18,18],[17,11],[4,31],[1,47],[6,14],[8,20],[11,26],[10,67],[8,46],[5,23],[1,32],[-5,20],[-10,13],[-7,8],[-1,36],[1,48],[-3,31],[11,172],[12,39],[-36,229],[-11,73],[-7,37],[-16,54],[-10,27],[4,26],[14,25],[14,12],[40,6],[12,9],[49,28],[11,17],[26,40],[10,31],[11,40],[24,21],[15,36],[16,13],[16,-31],[19,-17],[25,-11],[31,-13],[51,-25],[51,-21],[33,-17],[16,-7],[32,-12],[14,-8],[13,-10],[21,26],[28,33],[-5,51],[5,58],[20,100],[23,29],[12,5],[12,11],[23,19],[8,26],[-5,31],[8,31],[2,30],[8,39],[11,11],[15,13],[12,20],[10,31],[7,35],[-3,41],[14,26],[23,22],[8,14],[4,35],[1,16],[6,18],[-4,36],[-6,40],[26,66],[18,57],[4,84],[2,13],[7,40],[4,16],[14,52],[19,34],[-4,38],[-7,37],[1,25],[16,29],[10,15],[8,21],[14,9],[12,5],[28,5],[16,22],[15,22],[28,58],[9,35],[6,17],[-15,50],[-13,42],[-16,58],[-7,27],[11,35],[11,22],[6,19],[3,33],[-4,25],[-28,39],[-30,19],[-34,8],[-11,2],[-24,-7],[-101,-50],[-48,-38],[-27,-43],[-29,-21],[-47,3],[-43,2],[-35,-24],[-40,-49],[-29,-22],[-18,4],[-19,-33],[-21,-70],[-24,-31],[-27,9],[-64,-7],[-101,-22],[-63,1],[-26,24],[-40,3],[-55,-18],[-33,-3],[-12,10],[-8,29],[-4,48],[-19,50],[-32,51],[-6,63],[21,73],[5,50],[-12,27],[-4,24],[-25,31],[-17,52],[-12,16],[3,45],[15,54],[-18,50],[-55,3],[-44,15],[-44,46],[-68,131],[-34,46],[-22,5],[-16,21],[-10,37],[-16,1],[-16,0],[-9,-16],[-11,-5],[-18,15],[-17,1],[-18,-11],[-15,7],[-13,26],[-23,17],[-33,9],[-13,17],[5,28],[-6,20],[-18,13],[-49,-3],[-80,-20],[-66,5],[-52,31],[-29,28],[-5,26],[-15,25],[-24,24],[-14,42],[-2,58],[5,56],[22,79],[-54,51],[-16,30],[3,25],[-2,20],[-10,15],[1,23],[10,32],[0,41],[-11,50],[-30,70],[-49,90],[-27,66],[-4,42],[-6,33],[-10,18],[-5,31],[4,34],[-6,22],[-7,21],[1,33],[-9,22],[-18,13],[-6,25],[4,53],[-13,46],[-40,83],[-12,61],[-3,54],[-17,27],[-1,24],[-2,42],[-11,11],[-6,15],[5,17],[-8,22],[-21,26],[-9,22],[-3,21],[-10,15],[-31,16],[-8,21],[2,19],[6,17],[4,11],[-1,14],[-2,13],[-13,17],[-17,19],[-19,41],[-25,11],[-15,0],[-14,23],[5,14],[-1,28],[-12,22],[-15,9],[-14,-6],[-34,21],[-55,47],[-42,22],[-29,-4],[-18,-14],[-6,-25],[-20,3],[-48,44],[-48,11],[-27,24],[-21,40],[-20,17],[-19,-7],[-44,27],[-70,61],[-37,20],[-14,-11],[-7,0],[-12,2],[-18,0],[-32,15],[-43,-7],[-55,-27],[-59,-17],[-64,-6],[-37,3],[-12,13],[-69,-19],[-96,-40],[-94,-38],[-117,-19],[-78,-64],[-78,-118],[-57,-74],[-34,-30],[-14,-40],[6,-49],[29,-17],[53,14],[44,-7],[38,-28],[12,-42],[-14,-56],[4,-56],[22,-54],[2,-63],[-19,-71],[-48,-72],[-76,-72],[-47,-71],[-28,-102],[-42,-90],[-16,-50],[-3,-41],[-17,-45],[-31,-48],[-17,-48],[-3,-49],[-15,-44],[-29,-39],[-17,-42],[-7,-45],[-11,-29],[-15,-16],[8,-15],[30,-15],[13,-43],[-6,-71],[-18,-51],[-31,-31],[-47,-20],[-62,-9],[-85,-68],[-73,-88],[-87,-103],[-17,0],[-32,13],[-61,42],[-65,9],[-62,40],[-37,25],[-57,50]],[[82411,80543],[-14,31],[-22,25],[-56,33],[-37,18],[-23,1],[-58,-34],[-36,-27],[-22,-14],[-36,3],[-44,6],[-18,9],[-25,21],[-49,64],[-26,45],[-35,26],[-38,29],[-19,7],[-33,-2],[-47,8],[-25,10],[-21,-9],[-42,-31],[-52,-59],[-41,-23],[-44,-32],[-36,-37],[-35,-39],[-43,-44],[-20,-61],[-10,-44],[-40,-27],[-30,-26],[-30,-9],[-56,14],[-33,-10],[-83,-52],[-40,-5],[-28,-7],[-27,-3],[-45,-13],[-17,-9],[-23,-10],[-26,7],[-37,-29],[-104,-80],[-33,-13],[-22,-3],[-28,28],[-28,19],[-30,-2],[-34,-26],[-57,20],[-68,19],[-61,18],[-21,15],[-60,22],[-88,1],[-52,0],[-33,-8],[-26,11],[-32,32],[-54,74],[-32,21],[-17,19],[-7,30],[-12,4],[-8,21],[0,29],[-1,62],[4,44],[-9,13],[-36,7],[-43,14],[-79,2],[-32,1],[-25,25],[-28,31],[-28,64],[-24,29],[-40,37],[-38,10],[-57,-7],[-42,-7],[-37,16],[-24,20],[-34,22],[-51,5],[-42,16],[-44,18],[-32,-7],[-22,-18],[-26,-23],[-33,-4],[-81,-24],[-24,-14],[-36,-6],[-32,-18],[-26,-35],[-22,-26],[-28,-9],[-33,2],[-29,8],[-15,3],[-22,-13],[-25,-9],[-38,15],[-21,13],[-32,8],[-20,37],[-20,15],[-34,6],[-50,18],[-26,20],[-23,11],[-38,43],[-21,37],[-17,6],[-20,5],[-13,23],[-1,29],[5,18],[3,30],[-11,29],[-11,13],[-6,22],[3,42],[-4,42],[-4,44],[-12,32],[-3,63],[5,26],[-1,30],[-12,23],[-37,17],[-44,22],[-70,27],[-29,2],[-23,-11],[-22,13],[-22,22],[-39,23],[-50,30],[-54,33],[-48,29],[-19,8],[-66,2],[-54,4],[-32,11],[-37,41],[-19,26],[-30,12],[-22,4],[-35,13],[-64,44],[-23,21],[-16,0],[-21,38],[-18,9],[-13,-27],[-13,-65],[-11,-30],[-34,-60],[-80,-48],[-13,-25],[-8,-23],[-11,-32],[-4,-42],[-10,-12],[-23,-1],[-18,-19],[-14,-42],[-11,-17],[-7,-39],[1,-17],[-2,-19],[-2,-30],[-21,-66],[-3,-38],[8,-24],[18,-33],[9,-18],[3,-22],[0,-28],[11,-38],[8,-33],[13,-24],[19,-20],[21,-7],[16,-13],[4,-27],[-5,-37],[-7,-69],[-14,-43],[-8,-28],[-14,-42],[-5,-17],[-27,-36],[-19,-10],[-23,-29],[-19,-2],[-18,1],[-19,-7],[-18,-13],[-13,-39],[-34,-40],[-16,-19],[-42,-6],[-20,18],[-11,25],[-14,14],[-17,31],[-76,16],[-20,-7],[-12,-12],[-15,9],[-11,15],[-11,-5],[-23,-8],[-19,2],[-23,31],[-33,16],[-13,10],[-13,0],[-8,-15],[-15,-8],[-10,18],[-13,13],[-18,0],[-22,-27],[-39,-13],[-13,-19],[-22,3],[-16,15],[-15,1],[-46,0],[-15,-5],[-19,15],[-8,27],[-23,21],[-33,2],[-26,-3],[-12,-8],[-17,-3],[-14,37],[-19,26],[-10,19],[-16,8],[-13,24],[-2,47],[-8,59],[-9,61],[-10,26],[-49,9],[-23,-2],[-54,5],[-38,4],[-10,1],[-34,7],[-32,6],[-32,4],[-14,-5],[-33,-2],[-26,29],[-11,34],[-2,19],[-6,19],[-23,6],[-22,-6],[-11,-39],[-16,-16],[-15,3],[-13,21],[-26,23],[-17,22],[-20,35],[-16,-8],[-5,-22],[-3,-21],[-21,-43],[-24,-5],[-41,3],[-43,-2],[-27,-16],[-20,-29],[-10,-23],[-21,-8],[-21,-23],[-9,-31],[-20,1],[-11,-4],[-19,-6],[-48,-17],[-11,-4],[-29,-30],[-22,-23],[-21,-10],[-13,-27],[-17,-21],[-38,-6],[-42,-26],[-15,-9],[-24,-20],[-34,-8],[-14,-6],[-13,-14],[-8,-49],[-28,-17],[-37,-3],[-28,-26],[-2,-46],[9,-42],[-4,-19],[-21,-11],[-29,-22],[-22,-28],[-26,-1],[-16,10],[-11,-18],[-7,-37],[-19,-18],[-28,-16],[-11,6],[-7,14],[-12,18],[-10,-7],[-1,-26],[-8,-19],[-24,-2],[-18,11],[-13,12],[-25,-2],[-26,-5],[-16,6],[-15,-6],[-41,-12],[-16,-41],[0,-48],[-5,-24],[-24,-21],[-12,-19],[-14,-13],[-33,-1],[-1,0]],[[74392,80162],[-14,2],[-26,-11],[-26,-8],[-17,-6],[-11,-18],[-16,-8],[-26,5]],[[74256,80118],[-8,35],[-17,40],[-24,14],[-21,8],[-20,19],[-13,20],[-39,95],[-27,41],[-25,3],[-3,27],[14,27],[18,22],[0,31],[-15,16],[-18,-5],[-25,-35],[-29,-40],[-35,-29],[-14,-24],[-17,-27],[-24,4],[-18,-2],[-15,-2],[-11,29],[-15,4],[-106,28],[-35,11],[-23,-14],[-16,9],[-6,28],[-21,50],[-16,41],[-21,41],[-8,33],[7,34],[-3,30],[-18,15],[-23,2],[-65,64],[-30,9],[-27,12],[-22,0],[-18,28],[-17,86],[-6,48],[-21,49],[-27,41],[-16,57],[-23,25],[-40,39],[-38,28],[-62,34],[-23,0],[-32,-3],[-18,-16],[-21,-37],[-28,-2],[-44,0],[-11,-14],[-7,-25],[-23,-31],[-33,-25],[-46,8],[-32,-13],[-32,-5],[-45,32],[-51,-1],[-33,-15],[-46,1],[-10,18],[6,30],[-4,27],[-8,22],[-6,27],[-19,6],[-54,-11],[-15,12],[2,27],[9,33],[8,43],[-3,26],[-28,-4],[-17,3],[-9,30],[-16,23],[-18,1],[-21,5],[-24,-9],[-12,-30],[-16,-5],[-16,-8],[-12,-11],[-7,-27],[3,-25],[5,-55],[-8,-29],[-22,-16],[-20,3],[-14,-7],[-26,-31],[-12,-11],[-3,-19],[-2,-28],[-22,10],[-35,104],[-40,118],[-45,125],[-24,67],[-89,216],[-43,103],[-76,178],[-68,162],[-77,168],[-46,95],[-48,101],[-17,27],[-26,36],[-65,69],[-94,99],[-87,87],[-68,69],[-17,30],[-8,17],[-7,18],[-10,34],[0,22],[64,-4],[14,22],[24,80],[13,69],[-22,-3],[-40,-28],[-21,-21],[-12,-9],[-64,-14],[-35,-31],[-72,-52],[-52,-30],[-10,-5],[-61,-10],[-11,-12],[-1,-27],[-5,-30],[-43,-44],[-47,-38],[-17,-5],[-29,9],[-14,-5],[-43,-41],[-64,-62],[-6,-25],[0,-30],[-7,-27],[-14,-10],[-21,24],[-19,28],[-39,20],[-58,5],[-36,-10],[-24,-16],[-48,-61],[-18,-13],[-10,4],[-2,30],[-10,21],[-12,32],[6,63],[26,60],[43,33],[35,35],[10,38],[-1,27],[-13,12],[-13,2],[-8,-13],[-23,-26],[-35,-21],[-29,-4],[-13,1],[-31,13],[-57,73],[-48,10],[-33,6],[-11,-7],[-5,-18],[3,-20],[7,-19],[-4,-16],[-15,-11],[-24,-20],[-11,13],[-6,51],[1,40],[-16,34],[-17,52],[-23,31],[-22,-10],[-11,-44],[-17,-15],[-33,9],[-58,-25],[-95,-11],[-68,31],[-11,28],[28,59],[2,53],[0,48],[7,35],[-16,66],[-38,136],[-22,102],[-34,77],[-14,25],[-70,-13],[-19,-17],[-13,-23],[-22,-17],[-31,-12],[-26,8],[-29,13],[-31,27],[-36,36],[-69,28],[-68,9],[-75,10],[-38,-18],[-36,-29],[-52,-59],[-24,-6],[-38,-5],[-27,-15],[6,-26],[5,-36],[-10,-29],[-15,-15],[-22,-10],[-37,-3],[-31,-6],[-38,-41],[-58,-10],[-63,-15],[-44,-23],[-96,-29],[-55,-13],[-93,-28],[-74,-5],[-11,20],[-58,-43],[-64,3],[-11,-18],[-16,-16],[-17,-8],[-22,-20],[-13,-43],[-9,-45],[-20,-13],[-25,16],[-19,16],[-33,-16],[-44,-10],[-35,6],[-18,13],[-73,-21],[-37,-26],[-8,-13],[-9,-8],[-43,-17],[-35,5],[-6,-1],[-33,-13],[-47,-22],[-33,-7],[-29,0],[-18,-18],[-14,-20],[-123,-21],[-12,-14],[-25,-18],[-127,-6],[-11,-13],[-4,-15],[-16,-4],[-92,28],[-74,31],[-28,-17],[-24,-32],[-9,-47],[0,-40],[0,-34],[-11,-25],[-24,-31],[-2,-20],[33,-23],[42,-18],[24,8],[21,13],[17,-4],[13,-15],[4,-18],[-2,-13],[-8,-9],[-27,-17],[-25,6],[-23,-12],[-12,-22],[-6,-40],[10,-29],[31,-7],[35,-21],[39,-9],[23,3],[30,-31],[69,-38],[18,-29],[1,-30],[-13,-23],[-18,-13],[-23,7],[-47,8],[-52,5],[-37,10],[-54,-4],[-44,-9],[-11,-23],[-18,-42],[-14,-23],[-25,-44],[-8,-39],[13,-61],[44,-101],[4,-33],[-16,-33],[-30,-27],[-44,-48],[-47,-2],[-21,-12],[-53,-58],[-47,-28],[-10,-25],[11,-25],[59,-32],[30,-35],[8,-40],[13,-30],[46,-20],[95,-46],[6,-5],[6,-21],[97,-29],[13,-16],[40,-52],[8,-54],[-20,-54],[-13,-84],[-21,-75],[-45,-49],[-79,-46],[-85,-18],[-36,3],[-23,6],[-38,14],[-28,38],[-21,37],[-15,9],[-15,-6],[-13,-23],[-19,-63],[-21,-62],[-17,-22],[-63,-30],[-7,11],[7,41],[-8,13],[-12,9],[-78,16],[-30,11],[-22,5],[-28,10],[-19,25],[-42,76],[-32,59],[-53,53],[-47,11],[-4,-6],[-36,-2],[-57,13],[-3,-1],[-18,-25],[-13,-38],[-18,-32],[-26,-17],[-32,-4],[-37,34],[-37,51],[-46,17],[-45,-11],[-17,-8],[-47,-30],[-15,14],[-21,9],[-46,-48],[-50,-53],[-11,-39],[-15,-37],[-34,-34],[-36,-30],[-31,-11],[-40,11],[-51,37],[-46,45],[-50,72],[-41,42],[-39,32],[-23,8],[-19,-12],[-8,-26],[5,-20],[12,-18],[9,-57],[3,-69],[-4,-40],[-11,-23],[-11,-9],[-11,3],[-13,25],[-7,52],[-7,61],[-34,77],[-30,47],[-14,26],[-27,43],[-24,26],[-50,31],[-24,22],[-43,85],[-24,26],[-31,21],[-25,7],[-5,-5],[-53,-12],[-37,1],[-23,16],[-24,2],[-2,0],[-26,-10],[-5,0],[-13,1],[-20,17],[-21,48],[-25,50],[-31,16],[-59,-21],[-65,-68],[-46,-41],[-37,-1],[-22,-6],[-14,2],[-12,13],[-3,25],[-6,31],[-30,30],[-40,20],[-38,22],[-24,6],[-11,-32],[-31,-49],[-35,-48],[-45,-79],[-13,-27],[-17,-19],[-40,-20],[-48,-33],[-30,-38],[-43,-17],[-47,-10],[-21,-33],[-12,-53],[-16,-48],[-73,-72],[-40,-47],[-30,-25],[-20,3],[-22,7],[-9,-4],[12,-36],[9,-113],[14,-72],[10,-41],[9,-33],[7,-50],[-9,-29],[-14,-20],[-45,-31],[-46,-26],[-27,17],[-31,42],[-12,22],[-33,71],[-59,109],[-40,55],[-30,21],[-26,-7],[-21,-25],[-15,-23],[-13,-26],[-9,-32],[1,-45],[-1,-47],[-13,-33],[-33,-36],[-38,-49],[-29,-90],[-18,-112],[-6,-78],[14,-37],[28,-29],[18,-30],[4,-29],[-5,-30],[-15,-35],[-30,-39],[-42,-95],[-26,-133],[15,-93],[53,-51],[42,-23],[17,-30],[15,-60],[-2,-62],[-5,-42],[10,-41],[20,-48],[25,-30],[27,16],[26,20],[33,-8],[93,-16],[48,-9],[16,-21],[30,-69],[38,-77],[39,-78],[14,-34],[31,-93],[33,-84],[35,-104],[-2,-28],[-19,-11],[-30,2],[-23,16],[-13,12],[-11,4],[-13,-5],[-11,-13],[-5,-20],[2,-28],[9,-26],[12,-16],[7,-6],[46,-34],[51,-38],[63,-54],[13,-7]],[[63675,78534],[4,-26],[-34,-5],[-4,-31],[-8,-23],[-75,-51],[-19,0],[-16,-8],[1,-33],[4,-30],[13,-32],[-6,-14],[-11,-5],[-14,10],[-14,17],[-14,4],[-14,-4],[-64,-91],[-27,-23],[-30,-9],[-61,-34],[-19,2],[-17,12],[-15,-17],[-4,-42],[-17,29],[-18,23],[-8,7],[-4,-4],[17,-45],[1,-41],[-4,-23],[-7,-21],[-10,-12],[-11,-7],[-6,-73],[-12,-44],[-15,-40],[-21,-72],[-16,-31],[-13,-37],[-9,-51],[-12,12],[-10,22],[-6,-29],[-7,-25],[-32,-37],[-24,-36],[-11,-55],[-2,-33],[3,-30],[9,-17],[46,-20],[29,-25],[28,-47],[30,-40],[21,-51],[15,-64],[19,-123],[9,-129],[28,161],[24,29],[-6,-46],[-16,-69],[-17,-101],[-5,-74],[6,-64],[0,-30],[-13,-106],[7,-20],[11,-19],[29,-36],[21,-54],[5,-75],[12,-20],[14,-18],[72,-150],[41,-100],[21,-58],[22,-73],[12,-17],[14,-11],[27,-34]],[[63492,75947],[-15,-38],[-25,-67],[-11,-35],[-25,-33],[-44,-35],[-24,-15],[-25,-72],[-29,-69],[-19,-8],[-56,11],[-19,6],[-57,31],[-16,19],[-15,81],[-17,34],[-22,23],[-15,19],[-6,19],[-16,28],[-30,42],[-21,40],[-16,11],[-21,-14],[-12,-4],[-5,7],[-4,33],[-30,12]],[[62897,75973],[-6,8],[-39,32],[-16,17],[-14,2],[-31,9],[-27,16],[-12,20],[-18,22],[-33,29],[-24,26],[-1,17],[15,71],[10,68],[-6,13],[-14,11],[-25,11],[-61,-4],[-38,69],[-13,15],[-25,11],[-35,21],[-20,15],[-6,-6],[-22,-75],[-22,54],[-13,14],[-19,8],[-20,0],[-49,-26],[-36,-28],[-27,-22],[-27,-12],[-13,-17],[-37,3],[-18,13],[-6,14],[3,23],[13,26],[1,14],[-5,11],[-44,35],[-18,22],[-59,30],[-71,53],[-25,35],[-3,24],[-28,24],[-36,21],[-28,-6],[-26,-2],[-41,39],[-38,3],[-44,-12],[-10,-5],[-10,-5],[-130,16],[-34,33],[-28,33],[-77,24],[-39,25],[-39,36],[-42,31],[-36,-13],[-49,18],[-54,15],[-18,-9],[-17,-40],[-13,-37]],[[61104,76854],[-29,31],[-99,146],[-52,98],[-170,225],[-22,17],[-90,33],[-37,26],[-91,161],[-41,-22],[-37,6],[-21,14],[-24,23],[-16,30],[-19,68],[-22,38],[-72,56],[-82,33],[-6,14],[-3,20],[71,38],[19,22],[-36,29],[-14,5],[-11,13],[20,22],[20,10],[31,-25],[35,-46],[31,-18],[14,22],[106,39],[7,30],[0,34],[-11,-2],[-6,8],[0,38],[16,51],[48,84],[25,116],[23,27],[16,-18],[-1,-27],[3,-20],[15,39],[14,53],[36,0],[24,-9],[26,6],[-49,88],[-66,87],[-28,-6],[-18,13],[-29,73],[-12,60],[28,-2],[28,-9],[53,42],[20,6],[31,-13],[44,-8],[-3,39],[-14,47],[53,34],[47,19],[91,68],[40,12],[5,15],[1,20],[-13,54],[-14,40],[-48,2],[-26,-55],[-72,-19],[-33,4],[26,36],[25,13],[8,15],[-52,-13],[-25,-37],[-76,-48]],[[58823,81855],[-2,14],[-19,55],[-11,24],[-13,13],[-7,15],[0,66],[2,61],[9,8],[-25,50],[-2,38],[12,19],[0,16],[-8,22],[-25,37],[-25,41],[-16,33],[-11,15],[13,26],[17,45],[6,26],[9,6],[40,4],[29,-1],[22,-9],[8,-22],[21,-23],[57,-10],[24,1],[30,21],[49,48],[12,34],[30,24],[18,10],[17,4],[2,20],[-1,28],[-6,17],[-60,57],[-8,18],[-5,22],[8,21],[-1,23],[-69,51],[-58,9],[-47,-3],[-19,10],[8,26],[12,46],[3,38],[-3,17],[-9,15],[-46,32],[-62,48],[-29,56],[-15,57],[-17,35],[-31,23],[2,14],[21,54],[-1,9],[-9,13],[-38,27],[-51,51],[-3,13],[4,31],[7,32],[11,14],[30,64],[0,21],[-5,29],[-23,49],[-17,32],[-1,16],[3,14],[11,17],[11,22],[2,73],[0,26],[-7,15],[-7,7],[-16,-4],[-22,12],[-16,19],[-10,6],[-11,20],[-31,39],[-6,11],[-61,33],[-53,-5],[-30,6],[-15,-8],[-16,-21],[-22,-15],[-17,0],[-15,-11],[-41,-38],[-19,23],[-17,34],[6,29],[7,27],[-1,18],[-6,15],[-25,17],[-55,31],[-15,0],[-24,-11],[-42,-34],[-15,7],[-14,27],[-15,34],[-20,18],[-44,-2],[-4,-1],[-21,-20],[-9,2],[-38,50]],[[57818,84183],[7,27],[8,41],[-3,31],[-6,41],[-16,72],[-2,20],[-27,31],[-4,26],[-14,34],[-14,22],[-3,47],[-9,17],[-12,8],[-41,-14],[-5,2],[20,76],[2,44],[12,47],[15,18],[4,16],[2,30],[-2,27],[-9,13],[-35,30],[-37,35],[-8,45],[-11,10],[-33,2]],[[57597,84981],[1,13],[5,36],[8,31],[25,33],[6,23],[8,20],[59,24],[6,9],[1,8],[-3,8],[-13,12],[-14,17],[-8,46],[-20,71],[-19,48],[-4,28],[5,33],[7,31],[0,31],[-29,172],[2,31],[8,31],[14,26],[30,34],[38,62],[25,81],[14,49],[11,11],[22,3],[8,15],[4,8],[19,9],[6,9],[-5,17],[-19,29],[-14,18]],[[57781,86108],[14,40],[-5,54],[-9,44],[12,33],[21,3],[22,-36],[34,-18],[25,24],[8,46],[18,20],[24,-18],[40,-7],[33,3],[22,10],[10,15],[9,27],[18,34],[19,23],[145,-26],[126,-47],[9,18],[5,30],[-32,26],[-23,14],[-29,54],[-42,43],[-42,4],[-55,-15],[-84,9],[-71,81],[-47,25],[-34,62],[-8,33],[36,-28],[5,29],[3,40],[-20,24],[-18,14],[-93,-61],[-106,-20]],[[57721,86714],[98,120],[71,87],[14,14],[31,23],[26,24],[21,33],[71,63],[72,69],[67,90],[24,28],[31,30],[67,96],[22,26],[82,120],[48,59],[24,34],[103,113],[69,91],[28,50],[27,71],[15,49],[27,63],[1,21],[-8,19],[-20,30],[-28,35],[-25,43],[-18,38],[-57,53],[-89,67],[-66,50],[-101,107],[-18,26],[4,7],[57,33],[57,83],[25,42],[6,32],[0,37],[-4,34],[-7,21],[-27,27],[-78,48],[-19,44],[-15,47],[0,19],[37,50],[2,25],[-5,26],[-10,19],[-80,22],[-23,24],[-18,38],[-9,33],[-1,19],[6,22],[27,23],[25,16],[5,22],[-1,23],[-4,11],[-50,11],[-5,6],[-1,8],[2,10],[28,41],[3,79],[26,55],[-29,32],[2,5],[44,17],[41,4],[18,7],[2,25],[-4,35],[-42,136],[-9,39],[-28,50],[-23,33],[-14,24],[-22,47],[-13,47],[-22,54],[-26,48],[-22,46],[-55,88],[-8,25],[1,22],[5,23],[44,73],[40,60],[51,71],[49,59],[53,69],[13,70],[-2,12],[-44,37],[-82,101],[-51,77],[-78,32],[-104,41],[-35,93],[-25,79],[2,29],[76,134],[7,25],[-1,15],[-8,9],[-11,6],[-70,4],[-11,18],[42,14],[35,19],[58,28],[18,7]],[[58045,91602],[43,16],[14,12],[11,15],[40,100],[10,16],[123,36],[45,18],[26,23],[12,19],[9,21],[7,24],[2,22],[-10,28],[6,3],[13,-1],[42,-28],[66,-30],[48,-2],[20,5],[10,13],[7,26],[0,27],[-15,75]],[[58574,92040],[50,-8],[112,-46],[26,5],[34,13],[34,55],[25,9],[33,-12],[9,14],[-17,46],[4,22],[113,-48],[48,-36],[105,-32],[18,-17],[2,-30],[-5,-25],[-23,-14],[-44,2],[-161,39],[-23,-24],[19,-20],[47,-25],[13,-43],[72,6],[69,-16],[32,5],[6,-14],[-22,-36],[10,-9],[77,34],[36,10],[19,-9],[3,-29],[-13,-36],[-1,-28],[-24,-66],[-36,-21],[-16,-27],[54,17],[28,18],[53,92],[16,12],[152,1],[34,-5],[142,-44],[40,-3],[46,5],[16,20],[16,6],[158,-48],[211,-109],[309,-179],[174,-160],[20,-34],[63,-20],[14,14],[35,-12],[205,-146],[70,-7],[-9,31],[-12,29],[18,-7],[24,-21],[38,-57],[48,-42],[48,-64],[41,-24],[36,-9],[30,-18],[56,-17],[26,-155],[20,-34],[0,-68],[36,-28],[27,-5],[-1,-51],[-22,-119],[-24,-51],[-186,-219],[-116,-84],[-226,-97],[-176,-36],[-72,-3],[-138,18],[-75,20],[-93,55],[-86,27],[-60,12],[-110,5],[-239,54],[-41,19],[-150,105],[-60,-30],[-35,-5],[-24,36],[10,10],[5,12],[-85,30],[-70,2],[-37,26],[-46,19],[-20,-12],[-11,0],[-92,46],[-41,37],[-43,65],[10,23],[13,15],[-148,38],[-140,5],[25,-18],[60,-10],[39,-26],[44,-37],[-10,-50],[62,-50],[47,-48],[2,-14],[18,-10],[70,-14],[12,-44],[-11,-17],[9,-25],[53,-27],[31,-7],[38,-17],[-17,-33],[-32,-22],[-33,-10],[16,-8],[41,3],[152,-55],[80,-56],[81,-102],[26,-50],[2,-28],[-4,-27],[-12,-30],[-5,-31],[-28,-88],[-20,-31],[-38,-35],[36,-68],[37,-63],[37,-105],[7,-42],[1,-65],[33,-26],[-13,-10],[-13,-18],[3,-84],[46,-69],[70,-45],[41,-9],[59,18],[43,-25],[96,-84],[43,-89],[18,-18],[97,-34],[72,-20],[111,-54],[19,-2],[54,47],[92,32],[29,44],[-3,37],[-23,67],[-7,65],[-31,27],[-28,18],[-86,-14],[-39,3],[-30,17],[-40,47],[-75,113],[-40,37],[-13,24],[-14,32],[2,53],[33,-2],[37,30],[27,106],[46,14],[25,-1],[108,-50],[134,-132],[29,-14],[31,-2],[51,4],[9,-18],[27,-20],[20,-3],[123,-42],[142,-82],[53,3],[21,46],[4,20],[59,46],[40,8],[57,-17],[10,13],[-19,68],[-26,59],[-39,37],[-68,111],[-28,54],[-13,57],[9,50],[10,36],[142,89],[51,53],[50,69],[23,14],[83,19],[111,59],[85,78],[84,119],[36,31],[28,-2],[38,-19],[42,-35],[57,-6],[55,5],[64,-3],[88,-54],[14,-17],[14,-23],[-28,-45],[-3,-29],[23,14],[32,6],[29,-9],[28,-25],[20,-28],[25,-24],[7,32],[4,28],[-13,70],[34,99],[26,43],[48,110],[-14,71],[-2,82],[-7,38],[-31,55],[-61,39],[-61,13],[-20,38],[4,43],[17,63],[50,133],[52,188],[2,43],[-5,24],[4,24],[-7,57],[-9,42],[-213,163],[-13,15],[-7,22],[23,5],[16,-1],[160,-76],[35,-4],[251,21],[123,-18],[103,-39],[74,-108],[76,-99],[70,-86],[2,-70],[-73,-14],[-70,-4],[-180,-35],[-43,-39],[-120,-122],[-11,-37],[11,-36],[55,-38],[118,-57],[52,-113],[37,-57],[28,-22],[27,-5],[60,-1],[42,-13],[12,-11],[17,11],[38,4],[224,60],[44,26],[15,40],[16,133],[20,46],[19,57],[-7,35],[-2,40],[112,38],[104,26],[50,-8],[13,28],[-32,55],[-19,28],[16,12],[24,-15],[32,-9],[56,9],[215,113],[84,63],[50,25],[80,57],[38,19],[67,7],[71,23],[78,42],[105,36],[17,2],[21,-5],[43,-42],[-16,-24],[-12,-25],[21,-14],[17,-6],[21,7],[22,17],[54,26],[15,33],[-21,13],[-27,49],[-32,11],[-26,-2],[95,71],[202,105],[108,48],[107,4],[85,-6],[-32,-16],[-140,-22],[-21,-11],[0,-13],[34,-8],[14,-16],[-11,-18],[-11,-6],[-16,-54],[-21,-43],[44,-56],[4,-58],[-28,-31],[-39,12],[-34,-20],[-62,-14],[-14,-18],[-9,-26],[40,-6],[31,2],[110,-17],[15,-2],[37,18],[37,4],[45,6],[23,11],[23,-13],[44,-51],[40,10],[17,99],[63,62],[74,50],[72,5],[69,35],[33,7],[64,-14],[96,-3],[81,-30],[60,-8],[88,51],[203,143],[17,-33],[33,48],[157,50],[38,2],[1,-20],[14,-44],[30,-27],[42,-64],[-20,-17],[-21,-10],[-31,-43],[-3,-99],[59,-25],[81,-29],[34,1],[28,16],[9,9],[10,15],[8,29],[5,22],[-21,55],[8,58],[74,-4],[91,17],[41,33],[49,63],[33,52],[-21,92],[-53,-20],[-91,199],[-47,77],[30,36],[78,23],[71,74],[27,15],[29,3],[210,-51],[239,-12],[203,-39],[230,-81],[112,-57],[93,-63],[-9,-45],[38,13],[82,-40],[56,-16],[57,-24],[22,-32],[75,-23],[78,-43],[14,-8],[95,-32],[68,-11],[41,-69],[136,-100],[25,-38],[119,-63],[59,-52],[37,20],[91,126],[54,144],[32,77],[-60,3],[-45,-22],[-29,5],[-32,23],[-52,58],[-66,97],[-13,106],[-18,35],[-64,28],[-42,32],[-156,63],[-28,-22],[-8,-34],[-10,-25],[-16,32],[-10,29],[0,46],[8,59],[26,99],[40,-5],[21,15],[26,44],[-12,37],[-14,28],[3,43],[25,118],[11,138],[-21,34],[-19,23],[-89,-24],[-33,13],[-8,26],[-2,21],[25,35],[25,59],[-43,-13],[-15,23],[36,34],[42,82],[99,38],[74,37],[116,78],[86,77],[56,98],[38,93],[62,218],[58,160],[98,165],[61,15],[23,-3],[4,-12],[-14,-14],[-4,-20],[26,-7],[42,-1],[79,10],[134,-6],[234,14],[33,-7],[87,-48],[47,6],[96,-23],[52,-26],[50,-31],[-7,-120],[-10,-80],[-35,-152],[-14,-39],[-56,-110],[-26,-72],[-42,-50],[-60,-35],[-8,-21],[-5,-31],[59,-87],[140,-90],[34,-108],[8,-81],[-9,-210],[-13,-31],[-26,-34],[-25,-40],[16,-59],[20,-219],[4,-178],[-16,-61],[-8,-129],[0,-43],[14,-64],[28,-54],[37,-34],[105,-63],[99,-76],[7,-24],[5,-29],[-35,-30],[-55,-78],[-35,-65],[-3,-53],[12,-67],[-6,-63],[-23,-56],[-33,-41],[-99,-63],[-207,-334],[-50,-39],[-84,13],[23,-48],[29,-68],[-4,-45],[-54,3],[-77,-48],[-35,-32],[-60,-17],[-45,17],[-50,31],[7,26],[10,12],[35,19],[34,25],[-17,5],[-14,0],[-38,-32],[-45,-7],[-52,40],[-41,43],[-19,9],[-38,-18],[-146,8],[-38,-7],[-18,-16],[10,-13],[11,-24],[15,-48],[14,-36],[60,-39],[81,-15],[78,-48],[99,-34],[224,14],[59,-4],[58,-15],[97,-50],[42,4],[71,45],[17,101],[9,31],[257,142],[48,31],[77,77],[25,52],[29,140],[25,50],[167,161],[26,41],[5,76],[-3,51],[-10,50],[-30,84],[-34,49],[-33,67],[24,138],[28,53],[151,63],[129,23],[144,43],[58,9],[40,-7],[41,-47],[36,-69],[104,-105],[35,-72],[7,-89],[-4,-216],[-20,-94],[41,-24],[20,-22],[51,-31],[27,-31],[27,-11],[59,-7],[168,11],[92,6],[-9,14],[-14,11],[-78,4],[-110,23],[-159,42],[-19,91],[4,56],[36,106],[25,18],[31,7],[36,15],[-11,67],[-14,61],[-34,85],[-37,157],[-51,1],[-39,31],[-189,92],[-179,68],[-123,9],[-39,-7],[-102,-71],[-66,-15],[-125,31],[-107,-17],[-40,17],[-16,31],[32,127],[-17,49],[-47,66],[-28,51],[5,56],[70,214],[29,56],[75,100],[38,76],[-9,44],[-161,239],[-43,85],[-19,27],[-39,32],[-60,38],[-18,34],[163,231],[74,40],[103,25],[50,22],[87,47],[52,39],[17,31],[11,37],[2,91],[-11,73],[-14,41],[-31,52],[-31,59],[22,15],[22,9],[58,-1],[60,-32],[30,-64],[35,-60],[0,-40],[-3,-31],[15,-44],[13,-18],[14,-31],[-13,-25],[-14,-12],[-27,-35],[-43,-108],[-33,-14],[-8,-84],[71,-92],[-9,-69],[-14,-23],[-39,-37],[5,-30],[10,-21],[111,-44],[105,-27],[176,-9],[51,-43],[19,30],[165,-7],[133,-105],[70,-32],[57,-11],[116,13],[20,9],[19,30],[-54,-2],[-24,-14],[-22,1],[-38,11],[-27,18],[-29,35],[-48,104],[-84,33],[-57,-14],[-62,7],[-102,56],[-68,21],[-121,61],[-34,25],[-27,51],[-31,84],[-20,47],[26,9],[83,46],[124,15],[53,-16],[136,-94],[63,-3],[114,41],[13,26],[-26,53],[-34,27],[-66,13],[-80,-24],[-23,20],[8,28],[9,21],[43,5],[30,16],[65,58],[72,28],[71,10],[261,-8],[148,-91],[144,-41],[63,-31],[17,-5],[15,-21],[11,-48],[182,-129],[42,-17],[116,-6],[130,30],[59,3],[63,-9],[33,-16],[36,-30],[-19,-38],[-17,-23],[-36,-64],[-16,-18],[-118,-73],[-47,-19],[-13,-96],[-6,-21],[-5,-34],[22,-68],[5,-42],[-18,-58],[-30,-62],[6,-50],[10,-67],[5,20],[-2,30],[8,35],[54,85],[39,115],[40,30],[36,7],[40,-34],[11,-46],[2,-70],[-8,-65],[-30,-100],[-50,-70],[-16,-39],[23,-37],[25,-29],[29,-9],[33,3],[8,9],[6,28],[-10,36],[-6,33],[61,25],[57,14],[45,42],[11,28],[10,46],[-23,72],[-20,54],[-68,129],[-51,66],[32,99],[53,110],[20,27],[6,17],[6,30],[-5,31],[-6,20],[-54,83],[-39,27],[-123,16],[-31,13],[-90,85],[-11,19],[-20,61],[-7,15],[-25,16],[-83,35],[-58,15],[-84,4],[-51,18],[-76,56],[-8,19],[-22,73],[-17,37],[5,28],[27,58],[19,51],[-23,44],[-33,14],[-36,21],[-15,40],[-9,43],[-1,34],[-6,39],[17,33],[38,34],[-9,24],[5,31],[247,41],[96,11],[480,4],[34,12],[209,20],[89,24],[94,-25],[34,1],[69,7],[45,51],[102,20],[170,21],[84,-4],[19,-15],[19,-21],[-92,-62],[-92,-56],[-76,-24],[-74,-49],[-7,-19],[-2,-12],[2,-39],[5,-25],[77,-32],[59,-44],[57,-32],[45,-19],[11,11],[-165,104],[-42,23],[-17,25],[8,38],[17,17],[26,19],[17,9],[62,20],[206,27],[49,51],[21,30],[56,31],[-19,13],[-46,8],[-36,18],[-142,183],[-35,28],[-109,20],[-49,21],[50,62],[59,16],[40,-4],[35,-17],[65,-51],[92,22],[-35,23],[-58,26],[-54,42],[-77,37],[-86,24],[-90,10],[25,55],[50,-7],[16,17],[23,33],[125,-77],[59,21],[50,35],[104,93],[14,42],[-50,23],[-41,11],[-56,-2],[-5,25],[24,33],[45,13],[139,-36],[232,93],[63,45],[161,58],[79,-7],[164,77],[227,33],[132,1],[102,42],[156,15],[54,17],[263,43],[146,34],[23,27],[-131,-22],[-31,20],[-27,-13],[-20,-19],[-63,34],[-17,-9],[-13,-18],[-23,-6],[-27,4],[-9,41],[32,55],[37,-29],[43,42],[27,1],[81,-26],[54,27],[72,13],[79,-12],[33,3],[19,25],[129,-22],[89,15],[61,-2],[95,-13],[43,-18],[-25,-42],[-92,-68],[25,-11],[53,31],[159,46],[26,-9],[-18,-40],[-11,-17],[106,23],[91,50],[40,9],[41,-31],[39,28],[9,28],[69,6],[28,26],[49,19],[40,8],[89,36],[31,-11],[59,-9],[56,-17],[105,-40],[14,-15],[13,-3],[30,-28],[-22,-42],[-24,-60],[-45,-28],[27,-3],[19,8],[36,40],[32,28],[-8,119],[-57,60],[-44,20],[-102,63],[-34,27],[-46,28],[18,17],[196,-22],[100,11],[108,-7],[144,27],[61,-28],[69,1],[80,-23],[24,27],[-131,29],[-58,-3],[-21,15],[22,34],[25,51],[-25,44],[-24,24],[-4,45],[23,52],[54,22],[30,42],[63,55],[303,179],[145,68],[55,9],[64,-6],[126,57],[47,0],[175,-45],[42,-33],[96,-26],[111,-14],[51,-21],[25,-24],[21,-33],[-90,-22],[-97,-66],[-132,-36],[-163,-24],[-34,-18],[311,-5],[90,4],[19,-57],[30,-2],[90,27],[54,2],[102,-20],[21,11],[44,1],[94,-25],[42,-37],[-67,-60],[-69,-53],[-84,-90],[-26,7],[-44,2],[8,-45],[74,2],[40,-20],[92,25],[130,-8],[27,7],[50,28],[13,52],[22,33],[43,11],[47,-10],[80,0],[203,17],[170,-22],[136,27],[178,-20],[78,-21],[57,-37],[52,-11],[42,-29],[43,-42],[-21,-34],[-21,-23],[56,25],[43,6],[32,-15],[57,-15],[18,-95],[17,-18],[15,-33],[-21,-30],[-18,-14],[45,3],[63,32],[13,11],[16,24],[-24,23],[-21,14],[27,11],[52,-4],[26,-42],[17,-38],[38,-127],[81,17],[4,-38],[-34,-87],[-36,-64],[-14,-14],[-23,-3],[9,34],[-14,20],[-21,12],[-74,12],[-138,79],[-37,8],[-8,-4],[-4,-7],[77,-54],[63,-95],[57,28],[23,-5],[31,-45],[56,-18],[47,-30],[-31,-91],[-192,-160],[-203,-93],[-90,-65],[-158,-47],[-113,-64],[-144,-47],[-42,-51],[-107,-32],[8,-17],[12,-18],[-13,-30],[-15,-23],[-83,-47],[-121,-32],[-243,-195],[-121,-40],[-137,-2],[-29,-18],[-104,-123],[-32,-26],[-136,-13],[-142,-201],[-79,-68],[-69,-37],[72,7],[85,27],[99,65],[26,30],[14,34],[29,27],[45,19],[176,21],[72,-8],[106,6],[70,36],[41,13],[37,4],[19,26],[62,5],[143,34],[21,12],[46,51],[85,-19],[61,10],[159,91],[96,34],[26,24],[-19,17],[-22,12],[-92,-32],[-83,-10],[-94,8],[-13,13],[-11,32],[30,47],[26,28],[60,37],[49,13],[183,-40],[38,-5],[21,66],[58,-3],[58,-11],[-25,-14],[-64,-21],[20,-48],[28,-33],[112,-47],[95,-21],[70,1],[110,20],[17,14],[23,38],[-28,72],[27,-9],[27,-18],[42,-44],[40,-75],[25,-35],[-15,-37],[-57,-71],[33,-39],[59,-26],[0,-116],[-4,-56],[-29,-61],[-34,-26],[-33,-38],[8,-36],[8,-22],[35,-42],[98,-13],[13,11],[-23,13],[-66,20],[-26,16],[-23,38],[27,42],[29,31],[35,71],[11,50],[-7,52],[23,24],[35,25],[17,5],[16,11],[-25,13],[-23,6],[-48,32],[-8,41],[96,17],[57,29],[210,13],[144,55],[322,-15],[226,-45],[317,-5],[117,-30],[11,-11],[7,-22],[-50,-9],[-83,0],[-22,-56],[14,-70],[148,-74],[129,-31],[90,-49],[48,-4],[188,5],[110,-25],[100,19],[109,0],[38,-5],[40,-37],[64,-10],[77,-1],[43,7],[17,9],[-6,15],[-64,22],[7,27],[25,6],[107,-36],[44,-6],[39,27],[29,49],[16,33],[17,17],[14,2],[14,10],[-34,39],[-33,49],[-7,32],[-10,16],[-4,59],[30,60],[21,17],[85,-23],[38,36],[24,14],[102,24],[43,-2],[71,-23],[228,-110],[-5,-42],[54,12],[26,17],[61,11],[41,18],[11,-7],[14,-17],[-10,-25],[-14,-25],[9,-15],[12,-3],[61,-31],[79,57],[32,55],[22,11],[197,-38],[59,-21],[12,-12],[8,-20],[32,-22],[39,-12],[-5,-18],[-2,-19],[92,-3],[40,-16],[44,-25],[-5,-29],[11,-17],[41,-2],[11,3],[-13,-39],[-55,-42],[-33,-16],[-38,-28],[21,-5],[95,-8],[59,-56],[6,-41],[-37,-16],[-84,-52],[-50,-21],[-35,-2],[-25,-7],[36,-22],[158,-6],[46,-28],[36,-70],[0,-86],[-36,-43],[-97,-7],[-127,96],[-78,37],[-109,71],[-21,-12],[32,-60],[51,-34],[92,-93],[154,-192],[36,16],[21,24],[10,31],[-9,43],[25,-21],[23,-38],[46,-64],[-62,3],[-80,-21],[-29,-26],[22,-35],[59,-5],[25,-49],[46,-60],[103,-164],[73,-31],[71,-68],[71,-32],[37,-2],[25,42],[20,-15],[19,-76],[34,-33],[38,-2],[31,13],[45,36],[36,42],[58,116],[38,58],[36,24],[-13,28],[4,33],[26,77],[36,91],[27,49],[66,97],[25,18],[18,-32],[14,-42],[10,-18],[10,-7],[81,-85],[82,-67],[73,-33],[115,-32],[167,5],[30,42],[58,32],[94,16],[55,39],[91,11],[57,-6],[88,-28],[197,-89],[55,-33],[29,-35],[64,-52],[41,-25],[40,-18],[14,5],[-5,15],[-20,15],[-16,19],[47,19],[5,15],[17,12],[62,11],[-61,19],[-20,3],[-29,11],[2,27],[19,19],[15,36],[19,23],[32,18],[24,3],[57,-23],[41,42],[30,-3],[63,-43],[56,-64],[31,0],[87,26],[98,1],[-13,38],[-68,83],[8,106],[-47,24],[-54,14],[78,27],[58,87],[46,8],[48,16],[-15,11],[-143,9],[-31,-10],[-21,-26],[-71,0],[-8,59],[-2,37],[93,79],[35,17],[236,-2],[71,15],[104,39],[-27,25],[-3,50],[-89,73],[7,16],[9,11],[27,0],[140,-19],[58,-39],[151,-40],[404,-13],[45,-14],[174,-17],[73,-19],[175,-23],[80,-17],[63,-25],[103,-15],[47,-17],[-5,-53],[-213,7],[-71,17],[-88,2],[-33,-8],[-53,-44],[-63,-23],[-53,-4],[35,-38],[49,-10],[158,49],[432,24],[66,-4],[-7,-34],[-58,-65],[-55,-50],[-80,-52],[-30,0],[63,110],[-26,6],[-24,-3],[-70,46],[-11,2],[-14,-11],[0,-16],[-13,-64],[26,-27],[0,-46],[-97,-29],[-38,3],[-40,18],[-17,0],[-5,-15],[8,-27],[-1,-13],[-15,-22],[-8,-23],[24,-26],[31,-7],[171,29],[75,36],[82,65],[146,159],[65,54],[37,21],[48,8],[269,-17],[156,-34],[149,-51],[74,-42],[54,-57],[10,-24],[5,-32],[-37,-30],[-167,-10],[-64,-17],[-24,-19],[-3,-11],[-8,-17],[12,-14],[75,-2],[72,-13],[100,-36],[15,-12],[32,-35],[10,-6],[149,6],[10,-12],[9,-26],[-39,-40],[-39,-27],[-80,-64],[40,23],[161,55],[41,10],[49,-4],[121,-50],[50,-39],[92,-112],[-26,-12],[-66,-12],[208,-85],[80,1],[184,24],[93,1],[172,54],[171,35],[157,2],[83,33],[220,-1],[211,-11],[164,-20],[185,-60],[180,-83],[105,-82],[21,-25],[30,-57],[13,-48],[13,-65],[-6,-51],[-26,-36],[-16,-45],[2,-53],[-31,-69],[29,-49],[80,-32],[172,-42],[47,-29],[6,-85],[14,-71],[15,-136],[29,-35],[47,-32],[9,-45],[-59,-144],[-37,-27],[-39,-40],[69,14],[35,53],[38,97],[36,16],[19,31],[0,92],[-23,79],[0,57],[15,46],[114,95],[61,38],[58,22],[158,19],[72,19],[82,-13],[58,5],[67,20],[59,-10],[98,-63],[347,-14],[61,-22],[233,-27],[18,0],[52,31],[154,108],[64,-7],[26,-17],[27,-43],[28,-27],[23,-75],[20,-102],[33,-18],[46,-6],[100,-38],[101,-48],[29,-92],[54,-77],[126,7],[132,16],[127,126],[0,52],[-31,74],[-47,72],[-37,112],[-117,25],[11,33],[44,39],[40,61],[6,46],[-11,98],[106,-7],[106,-11],[201,-44],[163,-18],[86,-28],[52,-32],[62,-23],[21,57],[23,14],[82,-33],[60,-9],[103,4],[130,-15],[141,3],[127,25],[47,-5],[52,-20],[84,-53],[143,-71],[130,-20],[150,-66],[141,-25],[113,-38],[16,-14],[5,-21],[8,-18],[89,-20],[165,-143],[-99962,-16],[56,-25],[56,-20],[23,6],[12,-2],[32,-35],[21,-16],[113,-41],[51,-45],[42,-52],[-21,10],[-38,34],[4,-39],[12,-27],[61,-26],[64,-20],[40,-24],[14,-21],[8,-38],[-10,-33],[37,12],[35,30],[-18,23],[-117,81],[-25,27],[34,-14],[158,-103],[43,-39],[-18,-8],[-13,-23],[14,-10],[19,8],[31,4],[31,-13],[35,-27],[73,-32],[434,-254],[10,-44],[12,-21],[7,-26],[2,-43],[-39,-51],[61,5],[9,6],[16,21],[17,14],[24,-17],[19,-34],[-6,-46],[-17,-38],[-2,-63],[15,-54],[15,-22],[13,-26],[3,-76],[-27,-34],[-15,-59],[17,-6],[52,-5],[18,-11],[30,-27],[7,-26],[7,-36],[9,-34],[7,-16],[8,3],[30,46],[14,14],[34,12],[19,-53],[-13,-88],[11,0],[8,10],[11,23],[15,14],[19,32],[16,39],[-19,31],[-21,20],[-51,10],[-26,24],[-10,29],[26,12],[22,21],[15,52],[-4,28],[-6,27],[-12,39],[-19,23],[-36,11],[-16,22],[-25,-1],[-25,6],[-9,8],[1,16],[28,7],[157,2],[57,22],[25,-6],[26,-16],[94,-21],[-3,-10],[-16,-10],[-27,-46],[-6,-26],[-1,-34],[24,-6],[24,14],[-12,27],[-3,33],[10,14],[13,3],[24,-24],[27,-8],[89,-10],[26,3],[8,13],[-18,14],[-116,33],[-2,17],[108,-22],[48,-20],[48,-15],[67,5],[66,-24],[63,-65],[58,-82],[59,-49],[61,-36],[103,-99],[13,-8],[10,-14],[-19,-16],[-17,-25],[34,17],[33,12],[17,-3],[15,-12],[10,-21],[5,-20],[-14,-18],[99,-4],[30,-12],[14,-49],[-28,-34],[-17,5],[-16,14],[-15,1],[-44,-14],[-67,-46],[-38,-37],[-7,-24],[6,-65],[-5,-31],[-29,-20],[-64,12],[-29,13],[-33,17],[-31,24],[-41,39],[-12,4],[-8,-10],[13,-24],[28,-31],[47,-40],[22,-45],[-14,-23],[-18,-5],[-13,1],[-41,14],[-29,3],[-90,-13],[-32,-8],[-11,7],[-3,19],[-48,15],[-29,2],[-13,6],[-11,21],[-32,30],[-48,11],[-31,2],[-17,-7],[63,-39],[56,-67],[-11,-13],[-7,-14],[31,-1],[21,4],[5,-17],[-16,-71],[-11,-15],[-98,-16],[25,-12],[25,-3],[29,3],[26,-13],[17,-44],[3,-46],[-25,-27],[-27,-21],[-53,-33],[-56,-14],[-29,3],[-28,-7],[-19,-17],[-5,-17],[24,11],[28,-6],[27,-21],[-3,-17],[-26,-18],[-5,-14],[9,-24],[-3,-20],[13,-11],[30,-4],[36,-14],[36,-20],[14,-16],[12,-24],[4,-24],[-6,-11],[-82,-4],[-12,3],[-5,28],[-10,22],[-31,16],[-12,-11],[9,-79],[-12,-24],[-14,-18],[-41,-10],[-33,6],[-28,37],[0,32],[19,19],[0,26],[-6,30],[-18,-35],[-23,-29],[-35,-37],[-18,-4],[-17,4],[-47,26],[-29,23],[-56,74],[-32,34],[-70,46],[-72,34],[-57,22],[-31,-3],[-30,-9],[-39,5],[-13,8],[-11,19],[-11,10],[-54,46],[-38,37],[-2,25],[8,30],[-7,73],[-18,69],[-48,68],[-126,44],[-104,31],[-37,7],[-33,-6],[-87,-57],[-59,-8],[-170,-3],[-28,6],[-26,24],[-6,33],[8,59],[-1,25],[-7,9],[-9,-1],[-33,24],[-31,40],[-25,41],[-16,56],[22,3],[31,-14],[5,13],[10,51],[21,24],[9,18],[14,68],[2,49],[-24,-26],[-39,-68],[-18,-20],[-14,-9],[-13,-4],[-30,13],[-22,17],[-1,65],[-10,17],[-10,-12],[-4,-24],[-28,-4],[-13,-10],[7,-39],[-3,-33],[-27,-13],[-53,-7],[-19,32],[-16,-45],[-12,-51],[-2,-67],[17,-56],[25,-27],[53,-40],[23,-28],[6,-37],[-2,-33],[-28,-42],[-18,-34],[-33,-81],[-19,-33],[-82,-69],[99951,-19],[-49,-66],[-56,-57],[-83,-23],[-126,-87],[-49,-16],[-65,40],[-149,26],[-47,35],[-68,88],[-23,13],[-21,35],[-82,39],[-72,-25],[-58,19],[-20,-14],[30,-12],[54,-11],[82,5],[27,-9],[24,-31],[28,-49],[-21,-32],[-22,-11],[-66,36],[-76,-5],[-36,9],[-102,60],[-78,-67],[-107,-35],[-83,-4],[-152,-53],[41,-2],[111,38],[65,0],[96,21],[51,24],[24,23],[31,23],[31,-11],[22,-24],[14,-35],[14,-45],[-18,-24],[-18,-12],[-22,-33],[102,56],[62,-33],[31,5],[58,49],[93,32],[11,-6],[11,-16],[-15,-94],[6,-74],[71,-81],[73,-47],[26,-2],[24,9],[9,43],[18,32],[23,-29],[19,-31],[27,-76],[-1,-23],[-6,-45],[23,-20],[32,-6],[12,-71],[11,-101],[-14,-9],[-16,0],[-51,-26],[7,-18],[52,-10],[15,-21],[-11,-47],[3,-21],[18,-5],[12,28],[-3,39],[5,17],[35,-81],[0,-31],[30,-36],[85,-54],[15,-24],[5,-40],[-21,-12],[-20,-28],[12,-40],[22,-32],[36,-12],[17,-52],[0,-49],[-26,-43],[-53,-59],[-31,-24],[-12,-42],[-3,-44],[-21,2],[-23,19],[-262,110],[-99,21],[-87,2],[-16,7],[1,26],[5,24],[13,29],[-6,26],[-11,2],[-11,-20],[-24,0],[-23,23],[-19,-7],[-9,-32],[-7,-17],[0,-20],[12,-18],[50,-20],[-8,-18],[-70,-14],[-57,-18],[-74,-54],[-30,-38],[-198,-93],[-48,-32],[-21,-4],[-27,-11],[-21,-39],[-110,-55],[-23,5],[-29,-46],[-27,-26],[-63,-3],[-41,-13],[-88,-67],[-55,21],[-65,-91],[-72,-87],[-21,0],[-55,36],[-14,-19],[9,-35],[19,-37],[-11,-10],[-22,10],[-16,2],[-12,-11],[2,-27],[-31,-33],[-24,-3],[-28,-11],[-10,-29],[9,-32],[-50,-36],[-41,-48],[-19,-8],[-22,-21],[-24,-16],[-28,3],[-67,-67],[-150,-117],[-42,-15],[-53,-36],[-5,-23],[0,-30],[-21,-48],[-25,-122],[-8,-22],[-12,-25],[-55,12],[-48,46],[-15,22],[-8,25],[-3,40],[-9,19],[-11,9],[-55,99],[-95,68],[-14,23],[-121,-18],[-33,-1],[-58,17],[-90,-11],[-109,-37],[-33,-23],[-111,-36],[-73,-57],[-142,-208],[-34,-43],[-16,-9],[-24,-4],[-10,42],[-4,33],[9,63],[17,52],[17,96],[5,39],[12,41],[-48,-3],[-66,-71],[-100,-69],[-46,-18],[-36,-41],[-26,-5],[-30,-15],[-3,-89],[-15,-48],[-18,-10],[-28,-2],[-21,19],[-30,71],[-40,37],[-24,7],[-18,-9],[-35,-48],[-38,-44],[6,50],[-33,19],[-29,11],[-36,2],[-11,-7],[-14,-29],[-33,-37],[-22,-15],[-23,-30],[-13,-31],[-12,-44],[-14,-107],[1,-125],[-53,-99],[-20,10],[-10,-6],[-10,-13],[18,-55],[-10,-19],[-9,-13],[-25,-14],[-56,-81],[-53,-52],[-87,-151],[-25,-100],[-25,-113],[12,-55],[10,-36],[16,-25],[28,-27],[59,-29],[-5,-19],[0,-16],[21,28],[15,79],[37,26],[18,-1],[118,-63],[23,-27],[-4,-60],[-7,-28],[-22,-42],[-42,-50],[-49,-69],[-5,-43],[0,-23],[13,-81],[1,-46],[-6,-85],[3,-37],[13,-31],[20,-20],[35,11],[33,-9],[25,-22],[-4,-71],[15,-67],[11,-124],[-21,-34],[-20,-21],[-39,-54],[-21,-6],[-37,18],[-58,96],[23,57],[50,40],[23,28],[17,42],[-26,-8],[-18,-18],[-57,8],[-23,-20],[-28,-32],[11,-80],[-19,-15],[-35,-27],[-52,-34],[-17,-23],[-45,-143],[-41,-107],[-15,-92],[2,-79],[15,-88],[11,-38],[48,-82],[23,-64],[7,-77],[-38,-37],[-67,-89],[-28,-10],[-92,2],[-46,45],[-54,-11],[-45,-22],[-71,-63],[-63,-82],[-60,-57],[-18,-34],[-24,-71],[-22,-129],[8,-64],[12,-30],[11,-39],[-16,-61],[0,-38],[29,-61],[6,-84],[-21,-2],[-49,60],[-52,4],[-124,-69],[-52,-40],[-57,-80],[-17,15],[-12,46],[-21,20],[-26,-10],[-11,-43],[36,-20],[13,-28],[-21,-107],[-15,-36],[6,-95],[-2,-45],[-8,-45],[-37,-123],[-63,-162],[-78,-118],[-54,-41],[-27,-31],[-12,-41],[-80,-113],[-98,-119],[-28,-21],[-6,45],[-3,44],[-12,59],[-36,49],[-6,40],[-6,54],[-3,252],[-31,262],[-3,82],[-38,67],[-21,70],[-12,68],[-3,81],[-41,425],[-13,106],[-55,342],[-24,198],[-16,192],[-2,86],[24,257],[21,160],[74,359],[11,33],[12,17],[128,138],[56,75],[33,80],[36,101],[-4,55],[-4,31],[-14,36],[-30,41],[11,18],[12,14],[31,15],[64,-31],[65,13],[60,127],[86,-19],[65,22],[18,-9],[13,43],[36,46],[66,68],[97,82],[48,55],[27,52],[40,50],[39,62],[71,186],[140,154],[55,88],[45,31],[40,15],[101,126],[64,105],[85,72],[25,46],[44,108],[18,26],[55,41],[124,71],[72,71],[106,10],[31,28],[33,16],[35,23],[-43,63],[10,33],[8,16],[76,74],[31,60],[-4,25],[-5,19],[-47,24],[9,55],[13,48],[38,40],[13,94],[2,99],[37,142],[22,32],[87,71],[20,2],[60,-24],[66,-12],[23,-22],[5,19],[-3,24],[18,9],[38,-10],[-5,27],[-98,14],[-70,31],[-63,60],[-41,17],[-45,-5],[-257,-84],[-12,-23],[-12,-32],[16,-47],[-13,-21],[-12,-14],[-14,-31],[-12,-61],[3,-59],[-31,-92],[-3,-57],[55,-32],[14,-21],[-16,-32],[-17,-19],[-14,-24],[-11,-9],[-15,-6],[-20,31],[-18,62],[-29,4],[-10,-10],[-5,-24],[-25,-2],[-28,12],[-32,-5],[-57,-70],[-319,-333],[-34,-40],[-42,-80],[-79,-8],[-31,-18],[-23,-24],[-31,-16],[1,30],[6,22],[7,59],[43,111],[-27,12],[-27,1],[-50,-23],[-34,-37],[-26,8],[13,33],[31,66],[-9,61],[-9,33],[13,18],[65,123],[23,64],[20,84],[1,26],[-4,32],[-19,5],[-16,0],[-128,-83],[-47,-23],[-15,36],[-21,15],[-35,61],[-30,9],[-31,-4],[-70,-41],[-77,-23],[-59,8],[-51,-35],[-23,-6],[-75,24],[-91,2],[-28,-30],[-79,-41],[-54,-64],[-28,-20],[-31,-28],[-14,-120],[-41,-39],[-38,-29],[-80,-92],[-56,-126],[-38,-54],[-81,-76],[-126,-100],[-110,-162],[-38,-122],[-14,-4],[-27,-25],[-7,-60],[1,-41],[-17,-33],[-17,-42],[18,-26],[16,-5],[24,4],[63,34],[108,-52],[54,-52],[-4,-52],[2,-46],[-40,3],[-53,-4],[-34,-27],[-68,43],[-23,-16],[-36,-46],[-65,-19],[-33,23],[-55,63],[-93,-6],[-24,-71],[-21,2],[-33,-7],[-55,-82],[-18,-8],[-67,16],[-48,42],[-23,2],[-43,-19],[-21,-50],[-107,-25],[-105,5],[-57,119],[107,47],[63,-10],[72,8],[75,37],[-26,31],[-18,7],[-45,-4],[-40,23],[-87,116],[-38,21],[-49,13],[-38,1],[-14,-8],[-20,-28],[-13,-27],[-12,-9],[-26,5],[-31,22],[-37,-7],[16,17],[35,18],[-58,20],[-37,28],[-34,7],[-156,69],[-60,-6],[-37,-19],[-63,-56],[17,-41],[14,-19],[8,-22],[-20,-4],[-58,-4],[-35,33],[-25,-48],[10,-43],[40,15],[21,-18],[-14,-49],[-52,-15],[-65,3],[-65,87],[-107,-15],[-51,-56],[-49,-13],[-131,56],[-66,5],[-74,48],[-26,-15],[-47,-121],[-63,-29],[-32,16],[-29,76],[-20,25],[-56,23],[-298,-22],[-100,19],[-70,2],[-96,-39],[-92,15],[-170,-75],[-70,-50],[-84,-88],[-76,-147],[-42,-55],[-71,-70],[-100,-64],[-54,-65],[-30,-53],[-52,-200],[-14,-30],[-123,-72],[-39,-80],[-17,-20],[-51,-34],[-31,-56],[-17,-16],[-73,-40],[-60,-100],[-85,-70],[-123,-194],[-11,-23],[-10,-52],[-19,-38],[-106,-169],[-33,-16],[-53,-79],[-54,-47],[-49,-56],[-61,-59],[-92,-67],[-31,-39],[-48,-90],[-118,-111],[-59,-27],[-77,-98],[-8,-23],[-6,-36],[13,-63],[19,-14],[31,-9],[115,-62],[107,17],[95,0],[37,6],[23,-2],[8,-34],[-1,-63],[-14,-57],[-11,-168],[-13,-75],[10,-73],[23,-13],[23,33],[37,5],[38,-15],[28,117],[-23,18],[-22,42],[13,31],[66,57],[41,5],[39,-4],[-43,-73],[-17,-15],[-13,-4],[-18,-14],[38,-42],[41,-32],[59,-14],[-14,-25],[-39,-22],[-36,-91],[-56,-44],[-26,-30],[9,-19],[21,-4],[114,12],[59,25],[84,71],[35,105],[32,29],[9,0],[11,-7],[1,-74],[-45,-83],[-32,-47],[-12,-40],[19,0],[37,8],[16,19],[42,101],[11,72],[6,100],[-5,60],[3,43],[-16,43],[11,13],[113,-59],[60,-14],[108,48],[24,-12],[18,-29],[89,-89],[17,-29],[29,-108],[95,-125],[88,-59],[3,-23],[56,-69],[44,-24],[7,-62],[-20,-50],[-41,-48],[-82,44],[-13,-2],[10,-28],[59,-81],[47,-34],[3,-108],[-6,-59],[-31,-66],[10,-38],[44,-56],[22,-22],[22,-32],[-28,-70],[-5,-78],[-30,-35],[-36,-76],[-55,-62],[-26,-119],[-42,-105],[-5,-104],[-7,-37],[-34,-108],[-13,-146],[17,-239],[8,-14],[16,-14],[-3,-17],[-8,-11],[-33,-71],[0,-49],[13,-37],[2,-95],[-24,-153],[-9,-24],[-10,-39],[-4,-36],[-7,-22],[-4,-39],[7,-34],[12,-17],[-43,-110],[-15,-144],[-16,-58],[-31,-57],[-66,-83],[-24,-52],[-43,-66],[-41,-51],[-57,-145],[-46,-145],[-116,-188],[-15,-46],[-9,-50],[-30,-84],[-15,-116],[-35,-46],[-29,-122],[-94,-186],[-23,-63],[-72,-103],[-77,-142],[-96,-128],[-18,-53],[-37,-58],[-40,-90],[-58,-90],[-12,-60],[-19,-42],[-43,-28],[-31,-39],[-95,-231],[-12,-42],[-2,-37],[-62,-86],[-35,-92],[-60,-57],[-62,-78],[-149,-144],[-41,-54],[-83,-68],[-34,-1],[-72,-37],[-47,-38],[-28,14],[-17,50],[-21,-2],[-16,-7],[-43,48],[-37,-3],[-26,22],[-50,-15],[9,205],[-7,43],[-21,-40],[-57,-72],[-23,-14],[-22,0],[9,44],[31,62],[-10,10],[-10,3],[-40,-27],[-20,-30],[-58,-119],[-34,-100],[-28,-29],[-13,-43],[-24,-41],[-37,11],[-22,-7],[-53,23],[-13,-10],[35,-77],[-29,-113],[-12,-14]],[[63178,98417],[127,-23],[95,6],[29,-3],[28,-7],[28,-16],[38,-35],[0,-49],[-17,-2],[-161,22],[-74,51],[-20,5],[-29,-13],[-25,-31],[-27,-8],[-31,-39],[-29,5],[-15,-4],[-37,-27],[-93,0],[-15,-12],[-30,-38],[-38,-10],[-66,-6],[-22,21],[-10,33],[-15,17],[-92,-19],[-69,13],[-67,22],[-68,8],[61,23],[334,48],[131,12],[62,34],[92,22],[25,0]],[[63966,98460],[42,-10],[103,2],[32,-14],[149,-84],[38,-2],[31,-30],[-154,-49],[-52,-36],[-189,-8],[-121,-17],[-26,-15],[12,-26],[-58,-29],[-191,-4],[-24,-9],[-37,-31],[3,-5],[65,-8],[10,-6],[9,-14],[5,-20],[-9,-26],[-24,-4],[-26,3],[-60,20],[-7,-7],[-6,-14],[-19,-28],[-22,-8],[-61,21],[-20,-6],[-19,-13],[-24,-6],[-56,-4],[-29,17],[25,23],[70,35],[-23,15],[-70,4],[-55,-9],[-28,-24],[-26,-5],[-72,2],[-40,31],[-30,12],[-26,25],[211,83],[70,32],[67,16],[87,9],[27,10],[27,4],[17,-6],[44,-29],[129,5],[27,24],[2,56],[-13,33],[27,63],[74,25],[171,34],[43,2]],[[68823,95758],[-111,-44],[-66,-30],[-65,-21],[-66,-15],[-104,-36],[-184,-46],[-116,-37],[-127,-30],[-134,-39],[-134,-27],[-33,-2],[-96,-38],[-75,-16],[-272,-85],[-125,-63],[-36,-5],[-36,3],[-30,-20],[-28,-33],[-59,-34],[-30,-31],[-30,-24],[-18,-8],[-34,2],[-16,-2],[-55,-27],[-10,-22],[59,-14],[13,-24],[-17,-16],[-38,-23],[-22,-23],[-40,-23],[-27,-7],[-65,1],[-4,-29],[11,-18],[-6,-16],[-22,-15],[-21,2],[-99,45],[-16,-15],[-7,-32],[-3,-34],[-13,-25],[-17,-13],[-31,-13],[-109,21],[-9,-20],[17,-25],[23,-54],[5,-22],[-13,-36],[-49,-56],[-187,-67],[3,-23],[21,-44],[5,-27],[-8,-26],[-24,-21],[-28,0],[-15,4],[-43,29],[-37,7],[-7,-14],[49,-39],[21,-51],[-23,-27],[-90,-61],[-47,-80],[-92,-35],[-57,-5],[-56,10],[-53,18],[-135,7],[-75,20],[-76,36],[-66,-3],[-56,-18],[-74,-39],[-47,75],[20,35],[-101,90],[-22,40],[25,19],[31,13],[59,36],[59,29],[61,9],[10,5],[25,43],[27,35],[25,20],[28,33],[89,134],[21,10],[184,26],[16,8],[-53,27],[-54,-1],[-25,9],[-14,19],[-8,22],[21,16],[71,81],[84,58],[78,35],[-19,9],[-25,23],[-95,-6],[-37,32],[-12,19],[-3,19],[31,25],[32,15],[35,-4],[35,-13],[28,-15],[27,-24],[23,1],[85,84],[-13,19],[-5,29],[9,14],[41,13],[27,5],[59,-6],[85,-18],[7,9],[21,56],[21,30],[86,50],[-5,15],[-4,25],[100,33],[65,33],[63,45],[32,9],[32,2],[65,19],[121,22],[71,22],[23,48],[45,17],[90,7],[35,-3],[20,-20],[39,1],[15,11],[16,17],[-5,29],[-1,37],[34,23],[13,5],[102,9],[60,-4],[125,-28],[65,-7],[87,9],[52,-5],[154,42],[261,39],[68,28],[67,33],[34,7],[35,2],[31,11],[61,28],[30,7],[33,0],[30,20],[26,43],[29,33],[79,43],[134,60],[121,23],[75,25],[32,2],[102,-12],[130,-33],[59,-36],[49,-47],[10,-17],[9,-30],[-14,-28],[-9,-28],[11,-22],[-95,-71],[-93,-78],[-16,-17],[-111,-27]],[[65366,94071],[130,-23],[97,-7],[59,-18],[22,-14],[-9,-36],[-17,-14],[-41,-47],[-6,-28],[7,-45],[-6,-33],[-13,-24],[-11,-10],[-73,0],[-27,-13],[-1,-26],[-5,-29],[-24,-42],[-48,-13],[-11,-16],[4,-27],[-17,-21],[1,-32],[9,-18],[2,-37],[33,-54],[-6,-22],[-26,-43],[-8,-53],[-21,-46],[48,-38],[21,-50],[19,-53],[57,-105],[62,-94],[114,-137],[122,-104],[48,-29],[116,-48],[20,-16],[19,-21],[-49,-39],[-51,-14],[-5,-18],[-28,-10],[-138,34],[-7,5],[-15,24],[-16,18],[-35,3],[-35,-11],[21,-22],[23,-7],[40,-41],[-17,-16],[-18,-2],[-82,55],[-7,-7],[-8,-16],[-40,18],[-10,-13],[-31,-6],[-25,15],[0,19],[-5,10],[-125,-15],[-52,0],[-51,7],[-61,36],[-11,-16],[-2,-19],[-23,8],[-51,29],[-37,12],[-133,28],[-94,34],[24,16],[40,8],[1,21],[-7,29],[-1,29],[23,20],[52,-9],[-7,32],[25,6],[47,-18],[18,11],[-75,41],[-82,58],[8,21],[-29,5],[-30,-1],[-25,34],[4,45],[22,31],[-13,6],[-127,-27],[-64,6],[-72,18],[-66,-26],[-67,-9],[-35,9],[-34,20],[-28,26],[-22,45],[-20,74],[-3,28],[4,62],[11,27],[28,52],[19,16],[43,25],[22,6],[51,-12],[51,-1],[22,14],[21,25],[15,32],[35,18],[10,10],[11,20],[12,31],[2,27],[10,26],[32,39],[-12,24],[5,16],[21,29],[-64,7],[-22,13],[-21,19],[6,18],[8,13],[64,48],[28,15],[31,7],[31,0],[33,-5],[32,7],[-34,33],[-3,22],[-13,53],[3,25],[14,21],[30,24],[43,8],[34,12],[33,19],[31,3],[63,-12],[31,2],[34,11],[97,40],[36,11],[38,-3],[50,-15],[55,-28]],[[76812,98545],[10,-26],[36,-21],[18,-21],[183,-67],[80,-8],[36,-17],[10,-20],[-3,-37],[-31,0],[-22,-12],[-124,-15],[-30,-22],[-24,-45],[13,-9],[12,-13],[37,-77],[10,-12],[37,-11],[-33,-29],[-35,-19],[-366,-37],[-249,-15],[-83,-16],[-27,2],[-65,-29],[-127,-38],[-61,0],[-181,53],[-222,45],[-31,25],[-55,15],[-71,12],[-31,51],[45,35],[58,34],[97,12],[92,20],[69,49],[43,48],[78,51],[-135,-13],[-51,7],[5,17],[28,36],[15,12],[49,19],[35,36],[81,25],[39,4],[38,-1],[70,12],[70,18],[66,10],[65,5],[63,14],[62,28],[27,48],[179,5],[28,-11],[22,-29],[26,-10],[31,-6],[79,-48],[15,-14]],[[77131,98017],[64,-37],[31,-41],[-30,-11],[-28,-28],[-13,-34],[-37,-27],[-10,-43],[17,-8],[20,12],[41,41],[53,28],[58,-16],[23,6],[40,39],[-7,33],[16,20],[18,5],[75,-4],[119,-17],[21,-17],[29,-10],[17,-16],[53,-13],[26,-12],[35,-28],[32,-42],[-40,-22],[-22,-40],[-9,-9],[-7,-15],[-3,-35],[-6,-30],[-7,-13],[-5,-17],[5,-45],[-12,-35],[-40,-27],[-41,-1],[-61,18],[-18,-1],[-17,-7],[76,-38],[56,-56],[65,-13],[18,-6],[23,-52],[8,-26],[-108,-62],[-28,-11],[-172,-9],[-113,-18],[-36,4],[-63,15],[-42,-6],[-60,10],[-37,0],[-85,23],[-88,38],[-17,18],[-18,12],[-105,10],[-23,8],[-153,-9],[-26,6],[-47,50],[-27,1],[-84,-29],[-31,2],[-64,19],[-38,24],[-6,8],[-4,29],[-38,15],[-46,52],[-27,54],[-128,28],[-77,7],[-58,-2],[-56,21],[93,78],[123,41],[53,31],[61,42],[25,65],[103,40],[27,14],[36,31],[12,4],[81,-38],[16,7],[15,17],[29,19],[100,3],[85,-8],[32,8],[39,-3],[195,28],[130,8],[24,-5]],[[78578,97496],[-27,-45],[-11,-40],[-83,-133],[-10,-23],[49,20],[44,45],[27,38],[30,24],[34,0],[35,9],[65,31],[66,14],[36,-1],[34,-15],[22,-35],[24,-28],[87,-21],[13,-7],[8,-24],[-7,-25],[50,-25],[69,11],[37,-7],[36,-14],[17,-22],[14,-27],[15,-39],[9,-41],[-8,-55],[-134,-84],[-25,-8],[-62,6],[-61,-9],[-161,-44],[-199,-1],[-57,-39],[-17,1],[-17,7],[-16,13],[-121,-11],[-136,-7],[-136,-1],[-45,-28],[-139,-55],[-127,-42],[-66,-10],[-96,11],[-30,14],[-29,21],[42,27],[30,54],[37,32],[94,61],[11,24],[18,51],[11,20],[15,18],[11,22],[2,33],[6,28],[37,42],[27,20],[29,6],[71,-8],[22,3],[-16,13],[-11,50],[2,16],[10,31],[18,15],[18,10],[11,42],[-5,15],[27,20],[13,27],[32,16],[65,13],[3,34],[10,21],[14,7],[33,6],[18,-1],[24,-34],[26,-28],[34,-6],[34,2],[-20,33],[1,35],[12,22],[16,10],[34,2],[107,-24],[70,-35],[16,-18],[-13,-10],[-31,-6],[-16,-10]],[[88902,95523],[28,-11],[34,7],[32,-15],[30,-61],[14,-16],[15,-11],[15,-5],[45,-2],[20,12],[15,28],[-1,28],[-4,29],[0,39],[7,35],[10,21],[13,14],[74,43],[52,42],[71,-16],[72,-38],[127,-80],[59,-23],[71,-21],[72,-8],[35,5],[69,22],[35,2],[436,-160],[15,-13],[14,-19],[-94,-24],[-61,-42],[-21,-29],[24,-24],[20,-32],[-133,-96],[-53,-25],[-54,-8],[-110,23],[-64,-1],[-62,20],[-69,58],[-29,29],[-25,40],[-8,64],[10,55],[37,16],[32,35],[5,15],[-17,31],[-108,5],[-68,-17],[-61,-18],[18,-117],[13,-37],[18,-27],[98,-123],[22,-17],[65,-24],[55,-53],[-97,-59],[-43,-17],[-42,-10],[-26,5],[-26,12],[-28,28],[-24,30],[-31,23],[-66,-5],[-61,-20],[-61,-14],[-180,-24],[-55,-15],[-55,-5],[-71,28],[-70,39],[-22,1],[-20,-11],[-17,-24],[-9,-38],[-23,-51],[-29,-36],[-31,-16],[-32,-2],[-33,10],[-32,16],[-215,56],[-25,17],[-24,25],[-65,79],[-32,19],[-33,8],[-64,40],[-59,64],[-12,20],[-4,32],[10,23],[51,-11],[34,1],[-21,119],[15,112],[25,19],[97,-13],[-31,37],[-26,49],[16,27],[18,19],[42,15],[56,7],[17,12],[16,19],[31,20],[62,8],[107,40],[29,-1],[27,-21],[26,-30],[28,-16],[88,-39],[60,-35],[85,-71]],[[90776,95259],[73,-4],[107,43],[14,1],[260,-15],[22,-15],[2,-30],[-8,-15],[-4,-22],[32,-21],[84,-4],[53,19],[156,-10],[128,-14],[49,-32],[38,-17],[31,-20],[23,12],[22,20],[18,4],[18,-4],[-49,-122],[-18,-14],[-69,-30],[-137,-42],[-67,-13],[-152,0],[-209,16],[-57,15],[-34,18],[-64,43],[-31,16],[-103,14],[-32,8],[-60,37],[-62,30],[-154,49],[10,56],[20,56],[24,50],[26,45],[28,13],[59,-41],[-1,-47],[14,-33]],[[89655,83175],[60,-145],[2,-32],[-5,-33],[-11,-42],[-4,-44],[7,-39],[-5,-10],[49,-176],[35,-111],[11,-45],[7,-48],[11,-99],[2,-151],[-3,-50],[-8,-49],[-8,-29],[-18,-20],[-8,-54],[-4,-153],[9,-80],[17,-56],[12,-60],[2,-64],[5,-29],[27,-36],[11,-28],[3,-40],[2,-59],[4,-13],[13,-18],[56,-426],[22,-129],[64,-223],[26,-135],[17,-64],[11,-68],[9,-69],[19,-76],[25,-74],[49,-67],[22,-37],[5,-30],[2,-103],[-11,22],[-14,79],[-24,45],[-35,54],[-35,48],[-44,80],[-21,23],[-23,16],[-41,18],[-24,2],[-98,-12],[-40,-16],[-37,-37],[-21,-54],[-16,-108],[-89,-386],[-21,-101],[-8,-108],[3,-85],[6,-31],[26,-84],[21,-49],[15,-21],[18,-14],[11,-17],[10,-23],[18,-57],[23,-128],[25,-91],[11,-28],[28,7],[18,-1],[18,-8],[10,-23],[15,-101],[11,-98],[1,-26],[-20,-75],[-5,-32],[-3,-34],[-5,-27],[-9,-23],[-3,111],[-14,79],[-5,68],[-19,47],[-65,20],[-61,7],[-9,9],[-14,29],[-15,23],[-16,3],[-16,-9],[-27,-33],[-21,-51],[-15,-55],[-13,-59],[-27,-155],[-16,-51],[-20,-48],[-17,26],[-15,30],[-9,43],[-4,48],[-24,161],[10,140],[41,194],[7,63],[-6,60],[-9,60],[-6,113],[1,25],[14,65],[17,62],[20,54],[9,64],[-13,159],[-29,108],[-37,102],[-7,28],[-2,27],[32,128],[11,62],[13,134],[12,74],[9,74],[3,373],[-3,55],[-20,117],[-1,67],[9,84],[13,65],[17,63],[0,129],[-32,119],[-24,52],[-37,63],[-28,35],[-14,27],[14,9],[10,21],[-24,33],[-15,50],[-2,196],[6,49],[18,55],[16,59],[14,137],[5,141],[-9,57],[-4,116],[8,29],[31,38],[49,23],[11,-7],[38,-45],[14,-2],[15,5],[29,21],[16,52],[-21,29],[12,37],[35,13],[3,32],[-13,4],[11,46],[7,45],[-10,42],[-57,104],[-36,76],[60,-1],[18,14],[14,32],[7,33],[19,-13]],[[0,93051],[43,8],[43,15],[40,3],[40,-9],[41,2],[40,15],[32,-2],[33,-9],[122,-21],[23,-7],[39,-27],[22,-10],[22,-16],[23,-27],[43,-29],[65,-34],[14,-10],[10,-26],[-7,-30],[-83,-57],[-67,-15],[-129,-15],[-175,-43],[-72,-12],[-25,2],[-63,28],[-74,12],[99966,-10],[-65,-44],[-137,-11],[-81,-31],[-19,-2],[-40,103],[-6,26],[15,34],[41,42],[17,30],[96,54],[86,71],[47,11],[47,33],[-99967,8]],[[59948,89390],[9,-23],[3,-37],[-9,-24],[5,-20],[-18,-14],[-27,46],[-17,1],[-17,20],[-8,33],[15,9],[7,-6],[33,24],[24,-9]],[[61864,90265],[-10,-8],[-55,27],[-5,21],[2,8],[22,6],[23,-7],[17,-27],[6,-20]],[[64695,92951],[25,-42],[22,-31],[19,3],[14,-16],[4,-32],[-38,-54],[-6,-20],[16,-18],[4,-10],[-27,-8],[-5,25],[-15,24],[-32,19],[-13,16],[-14,38],[-53,40],[-34,-6],[-38,18],[-11,8],[-3,23],[16,19],[60,16],[29,-1],[31,-16],[-2,20],[3,8],[13,-3],[35,-20]],[[96677,83274],[11,-30],[-112,106],[-52,56],[-13,36],[19,0],[23,-34],[32,-16],[48,-46],[44,-72]],[[94643,92639],[-19,-10],[-40,8],[-19,18],[1,42],[2,6],[33,-6],[22,-23],[20,-35]],[[94851,91532],[-12,-1],[9,39],[1,17],[-27,28],[-50,21],[-13,17],[-3,50],[11,78],[-23,42],[8,37],[59,41],[24,31],[27,25],[4,-3],[27,-24],[-2,-52],[-20,-37],[-46,-14],[-6,-25],[6,-44],[1,-57],[5,-51],[28,-52],[6,-26],[-3,-25],[-11,-15]],[[92467,95691],[-27,-20],[-64,33],[24,18],[43,12],[10,-6],[8,-13],[6,-24]],[[91430,96001],[-209,-6],[14,16],[75,40],[191,21],[-38,-20],[-18,-41],[-15,-10]],[[88321,93034],[-69,-49],[-27,6],[-28,24],[-15,5],[-15,-4],[-17,-10],[-22,-2],[-51,26],[-5,16],[5,8],[14,8],[10,0],[32,13],[149,5],[11,-3],[21,-23],[7,-20]],[[79915,96849],[-25,-28],[-35,-14],[-38,23],[-95,-1],[-163,25],[47,16],[257,13],[18,-3],[34,-31]],[[81243,95979],[43,-39],[8,-25],[-13,-6],[-8,-9],[-3,-18],[-12,-1],[-38,19],[-27,31],[-40,7],[-42,31],[-9,13],[11,4],[75,-8],[32,14],[23,-13]],[[76814,95782],[22,-9],[-6,-24],[-29,7],[-38,-12],[1,-20],[-15,-33],[-53,20],[-73,3],[-46,19],[-102,12],[3,27],[16,16],[59,-23],[54,26],[101,-13],[33,19],[73,-15]],[[76745,96213],[-9,-11],[-12,-9],[-33,6],[-65,-16],[-25,9],[-24,18],[-88,-6],[-26,4],[42,22],[120,24],[188,62],[9,-30],[0,-14],[-38,-34],[-39,-25]],[[74864,96306],[-59,-3],[-34,15],[-10,10],[16,26],[23,17],[93,6],[17,-18],[-4,-15],[-42,-38]],[[70738,93820],[-6,-5],[-14,10],[-42,15],[-71,39],[-22,27],[11,30],[16,20],[58,12],[53,-5],[35,-7],[66,-27],[-61,-17],[-26,-37],[3,-22],[11,-13],[-11,-20]],[[70973,94156],[-45,-14],[9,26],[54,37],[100,19],[30,-8],[4,-6],[-42,-39],[-21,-13],[-89,-2]],[[73207,94511],[-14,-14],[-13,2],[-11,-7],[-70,21],[-95,9],[24,22],[68,13],[101,-17],[30,-19],[-20,-10]],[[68706,91894],[-22,-50],[-46,3],[-14,11],[-6,9],[52,54],[32,-2],[4,-25]],[[68488,92477],[3,-23],[-15,8],[-19,26],[-11,32],[-4,64],[7,17],[6,9],[6,-2],[-1,-40],[28,-91]],[[69450,90150],[-49,-7],[-54,44],[-51,86],[10,21],[31,-7],[51,-2],[33,-14],[44,-9],[-5,-40],[0,-16],[14,-17],[-14,-30],[-10,-9]],[[63903,97968],[-23,-8],[-106,44],[-9,13],[91,41],[102,-6],[16,-20],[3,-7],[-69,-36],[-5,-21]],[[64280,97893],[7,-7],[-1,-6],[-99,6],[-173,-4],[-100,32],[106,32],[56,7],[72,27],[89,-26],[-5,-23],[1,-11],[24,-10],[23,-17]],[[64098,98529],[-39,-4],[-27,3],[-29,22],[-10,11],[-2,11],[26,2],[12,11],[4,8],[20,6],[34,1],[45,-12],[19,-24],[-44,-21],[-9,-14]],[[65410,98083],[-79,-27],[-40,1],[-20,16],[32,23],[41,17],[31,-5],[23,-8],[12,-17]],[[65115,98198],[-39,-30],[-129,32],[11,16],[14,6],[0,16],[-12,12],[5,24],[83,-18],[8,-7],[56,-12],[9,-24],[-6,-15]],[[66580,97900],[-100,-19],[-35,6],[-10,9],[-19,9],[-50,12],[7,33],[16,7],[150,37],[72,-21],[30,-51],[-61,-22]],[[66283,98526],[39,-30],[15,-33],[24,-20],[8,-38],[-20,-31],[-60,-6],[-99,-2],[-97,16],[-52,56],[-96,15],[-54,58],[56,17],[68,-8],[109,50],[15,-3],[24,-11],[88,-19],[32,-11]],[[63328,78045],[-4,-10],[-13,53],[-1,32],[8,17],[11,-54],[-1,-38]],[[63962,91696],[5,-56],[-17,-23],[-16,-6],[-7,35],[-13,15],[-48,-41],[-22,-46],[-60,-66],[-123,-47],[-75,-20],[-68,-6],[-63,42],[-35,79],[-6,24],[-4,32],[1,33],[4,50],[7,49],[26,44],[60,52],[59,34],[31,8],[75,2],[214,-117],[48,-30],[27,-41]],[[67603,98329],[-52,-2],[-51,9],[-67,29],[-67,34],[20,18],[63,23],[82,42],[139,9],[67,0],[67,10],[19,21],[13,41],[12,22],[15,17],[74,14],[63,-1],[63,-16],[40,-14],[38,-28],[20,-23],[-6,-28],[3,-23],[18,-21],[-122,-65],[-125,-36],[-326,-32]],[[66098,97996],[-43,-11],[-113,21],[-17,11],[-14,20],[-19,78],[-1,23],[-7,16],[-28,28],[-20,13],[18,15],[124,-11],[266,-6],[136,-28],[40,-16],[39,-26],[-238,-14],[-32,-12],[1,-29],[-9,-26],[-25,-3],[-58,-43]],[[67268,98406],[17,-23],[-10,-37],[-22,-27],[-10,-38],[-86,-9],[-24,-9],[-23,-29],[-87,-18],[-65,-49],[-91,9],[-124,34],[-105,-28],[-69,-8],[-85,42],[-11,10],[-5,29],[5,26],[23,55],[30,31],[15,10],[12,19],[34,11],[105,7],[39,-6],[12,-21],[57,2],[94,13],[137,20],[79,18],[70,-4],[70,-11],[18,-19]],[[66983,98473],[-87,-12],[-141,15],[-73,17],[6,8],[19,10],[122,41],[242,9],[30,-30],[-26,-23],[-92,-35]],[[64866,98032],[-184,-7],[-62,4],[-8,7],[-15,6],[-58,6],[-36,29],[16,8],[85,12],[29,12],[10,17],[38,31],[92,6],[40,-6],[5,-20],[39,-25],[101,-32],[-20,-23],[-35,-3],[-37,-22]],[[65855,98128],[12,-20],[-1,-71],[-13,-31],[2,-26],[-26,-13],[-218,3],[-108,6],[-25,10],[61,34],[19,23],[-6,67],[10,12],[175,-6],[14,19],[66,1],[38,-8]],[[66058,98816],[14,-23],[43,-13],[117,-11],[35,-26],[-53,-19],[-143,-10],[15,-38],[29,-28],[-29,-33],[-40,-16],[-88,-19],[-81,24],[-94,35],[-42,-23],[-44,-14],[-41,2],[-48,27],[-132,-21],[-40,23],[-29,48],[87,10],[104,-15],[69,48],[88,21],[70,51],[33,17],[76,-3],[25,4],[73,13],[26,-11]],[[65199,98568],[209,-55],[194,5],[84,-17],[122,-50],[182,-53],[35,-16],[-31,-21],[-213,-53],[-138,-18],[-120,-3],[-48,6],[-48,38],[-117,28],[-125,-8],[-13,15],[-25,11],[-43,2],[-86,15],[-6,34],[54,17],[35,1],[14,48],[60,73],[24,1]],[[67680,98853],[-34,-8],[-179,7],[-86,14],[-12,8],[-4,7],[-114,12],[49,16],[142,7],[254,-19],[16,-13],[5,-8],[-37,-23]],[[66193,98914],[-92,-12],[-13,9],[-3,6],[10,15],[11,29],[42,17],[313,16],[41,-17],[-15,-26],[0,-12],[-294,-25]],[[75745,97744],[-68,-5],[-80,5],[-130,61],[-85,26],[-70,40],[-15,44],[44,28],[54,11],[91,2],[117,-4],[116,-29],[247,-31],[90,-21],[-56,-51],[-61,-19],[-63,-27],[-64,-19],[-67,-11]],[[75435,98583],[-96,-45],[-346,29],[-16,20],[-5,13],[47,25],[288,-9],[103,-9],[25,-24]],[[89169,94469],[-140,-47],[-27,2],[-63,48],[-23,103],[26,31],[29,11],[30,6],[123,4],[26,-5],[26,-13],[12,-19],[5,-24],[-14,-68],[-10,-29]],[[89495,94409],[69,-25],[57,-28],[196,-135],[18,-28],[15,-35],[8,-123],[-11,-9],[-72,-6],[-98,14],[-70,5],[-68,0],[-60,17],[-147,16],[-115,45],[-120,33],[-25,4],[-75,-10],[-102,-43],[-28,-3],[-39,0],[-27,40],[65,14],[65,5],[63,14],[59,47],[29,38],[51,85],[28,31],[28,20],[30,6],[33,-3],[103,19],[70,6],[70,-11]],[[87763,95281],[-57,-16],[-81,5],[6,42],[14,19],[19,46],[-9,35],[5,42],[10,33],[23,45],[25,-27],[17,-40],[15,-20],[62,-39],[12,-12],[-52,-48],[-5,-21],[16,-27],[-20,-17]],[[87832,94420],[-21,-17],[-20,25],[-93,76],[-23,35],[-51,34],[-13,12],[-4,30],[67,-19],[113,-75],[62,-60],[-17,-41]],[[88316,83578],[25,-23],[39,4],[10,-15],[-31,-25],[-22,-51],[-7,-47],[-9,-18],[-25,-23],[-22,-30],[-19,-19],[-17,-6],[-37,99],[-18,28],[-52,-47],[-12,-1],[12,58],[30,63],[15,9],[30,85],[9,19],[93,-50],[8,-10]],[[96999,91923],[-79,-5],[-158,54],[-56,28],[-42,36],[-48,25],[-9,10],[7,21],[14,16],[54,43],[38,19],[45,4],[283,-76],[12,-16],[4,-14],[-4,-30],[-24,-6],[-9,-20],[-10,-61],[-5,-16],[-13,-12]],[[95453,85600],[-45,-54],[-7,9],[-4,12],[-1,19],[41,36],[42,91],[16,75],[-5,25],[-2,24],[123,47],[87,75],[16,-3],[15,-63],[9,-81],[-12,-49],[-94,-28],[-88,-54],[-91,-81]],[[96291,83432],[-2,-84],[-34,43],[-16,34],[-23,6],[-16,16],[-26,41],[-31,54],[-10,27],[-4,34],[-21,31],[-67,60],[22,7],[28,26],[78,-16],[18,-7],[-13,-40],[5,-44],[43,-92],[21,-32],[28,-25],[20,-39]],[[93002,80248],[-27,-25],[-28,15],[0,50],[59,153],[21,-9],[-5,-37],[-22,-57],[7,-69],[-5,-21]],[[93445,81023],[-11,-13],[-11,3],[-36,36],[-8,17],[13,30],[45,45],[22,-1],[9,-10],[-1,-53],[-22,-54]],[[93310,80819],[-35,-58],[-52,-14],[-25,-19],[-19,-39],[-14,-21],[-30,12],[-13,19],[0,68],[-13,30],[6,19],[30,-3],[30,44],[69,18],[25,47],[31,117],[33,41],[26,9],[8,-58],[-7,-64],[-15,-62],[-35,-86]],[[92799,79948],[-10,-30],[-12,10],[-2,9],[27,35],[10,41],[20,1],[8,-8],[-6,-20],[-35,-38]],[[93234,81118],[-26,-7],[-11,16],[-8,18],[-5,26],[29,12],[19,-14],[4,-38],[-2,-13]],[[92527,79356],[-13,-33],[-14,4],[-5,9],[18,39],[8,7],[6,-26]],[[92222,78857],[-52,-63],[-17,0],[-9,24],[-2,13],[42,10],[48,84],[35,55],[19,19],[16,-1],[-80,-141]],[[91579,78134],[-41,-29],[-26,1],[61,142],[36,21],[46,84],[97,103],[11,7],[56,-3],[-88,-113],[-11,-45],[-39,-48],[-28,-16],[-20,-23],[-54,-81]],[[91277,77947],[-52,-40],[-42,-18],[-71,-84],[-26,-46],[-36,-19],[-35,11],[-10,-19],[-3,-33],[-13,-29],[-70,-91],[-29,-72],[-30,-13],[-56,-73],[10,63],[11,30],[47,56],[3,60],[26,51],[51,52],[35,67],[28,18],[31,56],[32,20],[-3,43],[14,48],[11,-3],[26,-67],[20,-2],[54,14],[80,116],[26,21],[19,4],[11,-10],[4,-14],[-1,-17],[-6,-25],[10,-29],[-13,-22],[-53,-4]],[[90753,77041],[-9,-16],[-20,14],[1,32],[2,9],[57,28],[16,-18],[4,-15],[-51,-34]],[[90612,77475],[42,-42],[58,9],[-14,-38],[-22,1],[-39,-55],[-34,-7],[-17,-13],[-55,-82],[-8,-32],[-33,-62],[-50,-55],[-9,-104],[-32,42],[-4,42],[10,35],[57,74],[23,41],[7,34],[22,36],[10,32],[14,14],[48,131],[26,-1]],[[81496,94700],[-10,-27],[-15,-21],[-11,-26],[-19,-19],[-59,-24],[-46,-54],[-8,-5],[-163,30],[-26,9],[-53,33],[-75,31],[-39,46],[19,8],[19,4],[67,-6],[19,14],[10,39],[1,23],[5,18],[22,13],[241,-40],[93,-23],[28,-23]],[[71180,97725],[34,-21],[26,16],[248,-50],[53,-18],[11,-13],[-217,-8],[-44,3],[-4,29],[-49,1],[-85,19],[-23,27],[-5,11],[27,11],[28,-7]],[[72229,98414],[-258,-21],[-25,13],[-8,8],[36,44],[30,21],[164,8],[131,-14],[41,-13],[-15,-26],[-8,-9],[-88,-11]],[[69631,93948],[-82,-27],[-22,-2],[-50,7],[-22,-11],[-33,27],[2,24],[16,25],[9,31],[-6,78],[42,49],[56,19],[164,22],[23,-6],[33,-15],[25,-18],[33,-43],[26,-18],[40,-34],[12,-33],[-2,-30],[-75,-6],[-130,-25],[-59,-14]],[[71564,93485],[-135,-5],[-67,9],[-10,11],[9,28],[69,42],[31,27],[32,46],[56,38],[47,0],[147,-45],[21,-28],[3,-13],[-58,-38],[-41,-14],[-63,-48],[-41,-10]],[[72083,93733],[-20,-6],[-152,23],[-53,30],[-16,27],[6,24],[141,117],[54,-33],[15,-31],[36,-38],[-1,-86],[-10,-27]],[[72825,95287],[10,-19],[4,-21],[-12,-6],[-36,1],[-20,-54],[-20,9],[-13,31],[-45,-21],[-12,5],[-21,24],[-13,5],[-9,16],[59,48],[36,-25],[24,1],[-5,29],[1,22],[30,9],[40,1],[2,-55]],[[66791,92128],[9,-29],[-1,-53],[-11,-39],[-31,-6],[-31,-16],[-53,17],[-29,-11],[-30,-1],[-24,6],[-25,8],[-16,11],[1,30],[-22,43],[-34,14],[-31,5],[-35,13],[-17,-6],[-22,-16],[-14,5],[-76,92],[-12,21],[-8,24],[-11,15],[-26,64],[13,29],[26,19],[18,5],[32,43],[59,18],[12,-3],[11,-13],[61,-44],[33,-29],[28,-35],[30,-30],[89,-51],[60,-50],[61,-35],[16,-15]],[[55821,83685],[-27,-55],[-74,-116],[23,-15],[27,-5],[32,-22],[30,-3],[53,18],[10,100],[3,90]],[[55898,83677],[17,0],[26,6],[16,-23],[30,-23],[35,-20],[54,-34],[55,-22],[18,-2],[58,3],[61,-3],[17,-51],[30,-24],[25,-34],[1,-18],[-33,-119],[-7,-40],[-2,-40],[13,-51],[11,-28]],[[56323,83154],[-9,-4],[-157,6],[-148,9],[-137,9],[-132,9],[-127,8],[-79,8],[-78,7],[-11,7]],[[55445,83213],[43,49],[28,52],[23,67],[3,46],[6,52],[37,21],[80,-3],[35,25],[44,62],[46,74],[15,32]],[[55805,83690],[16,-5]],[[59722,78187],[6,-19],[66,-146],[31,-54],[24,-22],[28,-3],[53,46],[23,7],[50,-18],[18,31],[26,16],[33,2],[38,-13],[41,-23],[-17,-52],[-17,-41],[-7,-45],[-9,-51],[-46,-23],[-48,3],[-52,-15],[-18,20],[-12,18],[-23,18],[-30,10],[-27,-12],[-32,-69],[-56,-47],[-19,-54],[-56,12],[-47,-10],[-69,-49],[-52,-106],[-57,-66],[-46,-21],[-43,7],[-28,20],[-57,69],[4,25],[8,13],[10,35],[23,131],[-3,43],[-13,66],[-45,52],[-36,-9],[-21,13],[-75,89],[-40,6],[-45,-18],[-16,13],[-13,31],[89,109],[88,90],[38,9],[52,42],[55,63],[-8,49],[-12,37]],[[58251,77914],[-5,-38],[-3,-24],[-12,-99],[-8,-37],[-13,-42],[-142,-49],[9,23],[-3,42],[-6,31],[13,29],[-31,10],[-14,-15],[-11,-28],[9,-62],[-15,-35],[-6,-19],[-1,-46],[-9,-20],[-2,-21],[23,5],[-10,-39],[-43,-76],[-15,-45],[4,-180],[-19,-107],[-1,-32]],[[57940,77040],[-45,-1],[-14,2],[-42,16],[-48,29],[-28,55],[-18,40],[-40,-18],[-8,5],[-11,19],[-31,13],[-37,0],[-85,72],[-9,13],[-67,-13],[-99,-35],[-76,-45],[-79,-78],[-32,-60],[-37,-32],[-52,-23],[-94,9],[-97,30],[-105,32],[-57,-18],[-77,13],[-115,39],[-86,12],[-85,-23],[-14,17],[-4,20],[4,28],[12,23],[20,17],[11,17],[1,18],[-23,29],[-47,39],[-20,24]],[[55622,78403],[11,14],[63,19],[29,-19],[14,7],[13,16],[7,12],[1,14],[6,16],[22,8],[56,-10],[23,23],[8,13],[5,27],[6,23],[20,12],[0,20],[-3,22],[12,50],[7,20],[11,8],[14,15],[24,33],[-6,28],[5,21],[25,51],[19,49],[0,25],[3,22],[16,23],[18,31],[23,96],[9,16],[15,18],[11,18],[1,63],[11,18],[21,21],[20,33],[17,38],[12,19],[17,4],[19,16],[20,5],[20,-7],[13,4],[19,19],[48,71],[7,14]],[[57394,79642],[26,2],[20,-4],[32,-26],[22,-32],[9,-26],[19,-36],[20,-51],[22,-68],[4,-34],[9,-37],[16,-45],[31,-50],[5,-10],[14,-35],[27,-78],[23,-31],[20,-34],[9,-34],[15,-31],[33,-41],[27,-37],[22,-107],[15,-50],[10,-38],[-5,-76],[6,-33],[-12,-60],[-23,-120],[-5,-95],[4,-52],[0,-33],[6,-21],[6,-44],[1,-38],[-8,-11],[-12,-9],[-4,-8],[10,-17],[14,-32],[14,-36]],[[64112,66122],[8,35],[3,22],[-19,167],[-6,128],[2,26],[11,30],[19,66],[9,65],[28,148],[29,57],[43,42],[35,-82],[43,-63],[8,-70],[-13,-57],[-11,-90],[7,-42],[2,-36],[12,-61],[11,-78],[2,-55],[-6,-51],[-15,-42],[-29,-129],[-9,-13],[-36,-22]],[[45224,70776],[38,-30],[35,14],[43,-39],[23,-9],[-20,-27],[-21,-36],[-50,9],[-42,34],[-15,26],[-5,23],[14,35]],[[47942,73259],[-24,-6],[-95,-94],[-29,0],[-55,41],[-96,14],[-32,12],[-39,-27],[-30,1],[-25,-35],[-17,10],[20,77],[31,152],[-1,93],[7,81],[-8,80],[-16,50],[21,130],[-2,67],[-19,84],[59,-13],[-19,34],[-18,20],[-17,-4],[-15,1],[-50,-33],[-25,-10],[-8,6],[3,52],[-13,68],[20,18],[24,5],[20,29],[12,33],[-7,57],[18,55],[40,46],[-21,-7],[-24,-29],[-38,-104],[-12,-53],[-33,-17],[-29,-9],[-14,6],[-18,13],[-2,39],[2,31],[12,62],[4,88],[18,78],[-2,21],[-5,31],[16,30],[19,20],[28,68],[40,160],[47,170],[-4,21],[-10,15],[4,46],[28,200],[11,26],[13,59],[3,94],[5,65],[-1,33],[-4,39],[-18,75],[-18,159],[-2,53],[15,26],[-25,4],[-11,35],[2,38],[28,63]],[[43048,73133],[-2,-11],[-15,5],[-20,-4],[-11,31],[10,13],[22,3],[11,-14],[5,-23]],[[41350,74542],[-12,-27],[-21,10],[-7,10],[6,59],[17,14],[17,-24],[0,-42]],[[42479,74103],[-6,-6],[-58,16],[-16,21],[-7,39],[10,13],[25,8],[37,-7],[24,-28],[0,-36],[-9,-20]],[[42283,74052],[-13,-7],[-74,44],[-26,21],[-34,51],[96,-62],[51,-47]],[[42044,74034],[-29,-1],[-27,44],[40,23],[12,-14],[8,-16],[6,-21],[-10,-15]],[[42181,73993],[23,-23],[-35,-5],[-11,-11],[-29,16],[-33,-3],[-22,31],[-5,33],[11,20],[30,0],[71,-58]],[[42875,73640],[17,-4],[89,9],[24,-6],[-3,-43],[-17,-17],[-52,-11],[-82,27],[-27,37],[-4,27],[0,12],[17,10],[38,-41]],[[55231,80363],[-1,17],[-6,42],[-59,83],[-8,35],[3,13],[-4,22],[-13,13],[-47,16],[-12,-9],[-11,9],[-17,20],[-29,16],[-3,9],[-11,14],[-6,2],[-3,-9],[-9,-12],[-30,-16],[-12,7],[-11,13],[-13,29],[-18,25],[-15,9],[-9,14],[-2,10],[34,21],[7,21],[-4,39],[-5,5],[-13,-13],[-28,-11],[-26,-6],[-13,0],[-73,71],[-48,22],[-28,6],[-3,-7],[13,-40],[22,-49],[-1,-13],[-26,-20],[-15,-9],[-18,-17],[-15,-24],[-12,-10],[-12,2],[-11,12],[-31,73],[-38,55],[-4,13],[-12,3],[-17,12],[-6,18],[9,17],[11,17],[21,10],[6,9],[4,14],[7,19],[-2,6],[-14,21],[-22,20],[-60,-15],[-16,-10],[-9,13],[-7,21],[-16,3],[-20,19],[-25,18],[-24,5],[-50,26],[-19,1],[-11,9],[-12,20],[-10,21],[-5,44],[-37,19],[-37,13],[-2,-7],[1,-43],[-2,-24],[-24,-14],[-24,-2]],[[54113,81139],[2,8],[28,78],[13,50],[15,91],[-18,72],[-5,33],[-8,16],[-50,35],[-4,12],[8,48],[-4,20],[-12,21],[-16,41],[-7,36],[21,42],[5,30],[9,42],[6,23],[1,7],[-13,16],[-3,23],[3,33],[-7,25],[-18,15],[-11,21],[-6,27],[5,41],[13,56],[-29,67],[-72,79],[-35,55],[3,32],[15,28],[28,26],[21,45],[11,54],[1,10],[1,39],[-33,157],[-5,39],[-4,48],[-2,13]],[[53960,82793],[64,-33],[26,-19],[-3,21],[-5,18],[3,27],[-2,40],[-57,20],[-38,7]],[[53948,82874],[-5,28],[4,18]],[[53947,82920],[11,-11],[37,-4],[92,54],[159,70],[170,66],[40,7],[40,14],[14,24],[15,17],[23,43],[51,68],[91,24],[34,32],[70,45],[162,50],[67,11],[66,1],[59,-39],[62,-49],[12,-30],[-34,19],[-49,44],[-18,2],[42,-134],[22,-47],[47,-36],[39,-11],[119,21],[43,28],[12,14]],[[56323,83154],[16,23],[20,-3],[23,-14],[11,-11],[4,-12],[3,-13],[13,-3],[23,-10],[31,-24],[24,-23],[23,-33],[8,-37],[0,-42],[-1,-27],[2,-11]],[[56523,82914],[32,-196],[53,-189],[19,-92],[8,-49],[6,-70],[2,-50],[0,-28],[-4,-38],[-16,-23],[-101,-65],[-20,-20],[-29,-51],[-28,-52],[-6,-18],[-2,-11],[6,-18],[36,-27],[37,-23],[12,-17],[26,-21],[10,-19],[6,-17],[-1,-39],[-12,-54],[5,-40],[-12,-27],[-10,-30],[-2,-53],[18,-58]],[[83638,62566],[43,-30],[94,-108],[34,-27],[36,-20],[28,-5],[26,24],[10,25],[20,67],[20,8],[13,-24],[9,-33],[5,-47],[-6,-50],[-20,-44],[-12,-54],[-8,-177],[0,-53],[7,-51],[17,-81],[9,-23],[26,-29],[7,-22],[1,-39],[4,-35],[17,-13],[14,-18],[-5,-38],[-9,-39],[-12,-97],[-55,-223],[-3,-48],[-22,-96],[-45,-16],[-52,-46],[-28,-36],[-25,-47],[-10,-62],[8,-28],[5,-30],[0,-32],[-8,-27],[-25,-65],[-10,-54],[-11,-24],[-6,-29],[2,-33],[10,-29],[30,-125],[33,-121],[7,-14],[2,-16],[-19,-32],[1,-58],[5,-58],[29,-142],[4,-38],[10,-31],[14,-30],[17,-24],[46,-42],[18,-9],[19,-1],[4,28],[17,10],[-4,28],[-20,38],[0,21],[10,16],[13,9],[28,42],[29,34],[38,-3],[37,-19],[27,-19],[22,-37],[22,-62],[16,-69],[-1,-33],[-3,-33],[0,-33],[12,-22],[36,-1],[18,51],[3,58],[-13,22],[6,28],[11,22],[16,-19],[15,-36],[56,-39],[14,-1],[11,-7],[25,-28],[12,-21],[-14,-45],[-56,-10],[-16,-34],[17,-68],[26,-55],[17,-45],[15,-49],[0,-45],[-9,-46],[24,3],[23,-9],[32,-40],[10,-3],[10,6],[-1,-141],[-22,-129],[-27,16],[-23,54],[4,67],[15,64],[-8,14],[-15,-6],[-17,-14],[-19,-5],[-30,8],[-62,70],[-26,7],[-6,31],[2,67],[-25,80],[-4,28],[-8,23],[-74,86],[-9,15],[-23,69],[-52,98],[-14,10],[-16,3],[-5,-25],[7,-38],[3,-33],[-1,-35],[2,-27],[25,-54],[3,-26],[17,-70],[2,-82],[-21,-34],[-24,38],[-1,31],[-4,29],[-25,74],[-8,16],[-48,74],[-37,80],[-82,86],[-9,5],[-15,-7],[-13,-10],[-40,-43],[-14,-29],[-1,-46],[-28,-36],[-39,-5],[-30,23],[-25,45],[-21,2],[-25,71],[-31,9],[-26,-55],[-5,109],[0,111],[7,33],[13,27],[65,116],[8,38],[-3,50],[-15,40],[-23,25],[-27,10],[-19,23],[-15,38],[-11,-67],[10,-98],[2,-65],[-9,-24],[-17,0],[-16,7],[-11,23],[-9,67],[-23,43],[-9,63],[-10,9],[-21,-5],[-16,29],[-10,74],[-2,78],[-9,66],[-13,64],[-7,52],[-12,235],[-2,21],[-6,18],[-15,27],[-11,32],[-2,27],[3,115],[5,28],[11,13],[16,-22],[12,-28],[15,-14],[14,-17],[25,-69],[10,-10],[31,2],[18,8],[9,25],[5,30],[1,35],[-18,103],[-6,74],[0,67],[5,67],[24,112],[3,77],[-2,104],[4,61],[-1,36],[-14,55],[-4,60],[41,302],[13,58],[9,61],[4,80],[31,22],[29,33],[15,-3],[15,-8],[36,17],[13,1]],[[82586,56704],[-26,-42],[3,52],[7,49],[26,99],[19,31],[31,78],[18,38],[42,75],[39,82],[13,6],[14,1],[12,9],[25,45],[63,147],[53,110],[54,139],[26,41],[7,15],[49,128],[16,18],[17,14],[12,17],[11,22],[17,56],[8,65],[-5,37],[-10,54],[13,74],[9,34],[35,150],[10,31],[14,-19],[2,-27],[-7,-64],[0,-31],[8,-33],[-10,-53],[25,-142],[19,-89],[1,-30],[-26,-53],[-15,-16],[-33,-15],[-15,-15],[-23,-44],[-15,-57],[-4,-30],[-7,-23],[-68,-39],[-31,-25],[-15,-19],[-7,-31],[5,-55],[-57,-199],[-18,-51],[-19,-45],[-24,-31],[-33,-19],[-27,-39],[-18,-68],[-22,-61],[-28,-45],[-30,-40],[-28,-30],[-30,-20],[-9,-27],[-6,-33],[-14,-16],[-15,-8],[-28,-33]],[[84026,58533],[32,-29],[32,25],[31,-7],[26,-38],[-9,-24],[-1,-27],[57,58],[16,-3],[-1,-54],[-3,-46],[-7,-44],[-12,-52],[-17,-46],[-21,-33],[-26,-21],[-12,-19],[-4,-28],[1,-35],[-6,-32],[-27,-14],[-42,-62],[-90,-40],[-25,-27],[-16,-36],[-17,-32],[-10,-8],[-4,15],[-1,13],[13,84],[-3,35],[-6,33],[4,66],[16,62],[8,68],[3,132],[12,182],[-1,22],[-9,25],[-35,20],[-14,19],[7,36],[13,25],[18,-1],[16,-23],[57,-48],[30,-40],[27,-51]],[[84202,57064],[-18,-6],[-20,3],[-13,28],[-22,122],[-26,30],[-30,22],[-15,19],[-14,23],[-42,122],[-3,74],[7,42],[13,38],[14,10],[35,1],[18,5],[40,56],[3,22],[0,92],[-4,64],[-10,62],[11,29],[14,28],[14,55],[3,39],[0,41],[4,29],[12,14],[54,45],[10,3],[71,-41],[14,-62],[1,-20],[-11,-69],[-9,-46],[-24,-71],[-18,-77],[-13,-115],[-8,-38],[-22,-72],[-7,-40],[0,-86],[-4,-32],[0,-31],[44,-143],[4,-23],[0,-26],[-8,-32],[-18,-55],[-10,-19],[-17,-14]],[[84603,58377],[20,-20],[22,8],[27,45],[30,-16],[18,-68],[9,-25],[5,-44],[-2,-106],[-7,-95],[6,-20],[14,-17],[12,-22],[10,-27],[7,-30],[2,-74],[18,-62],[2,-24],[-4,-25],[-29,5],[-3,-21],[1,-27],[-10,17],[-17,60],[-16,26],[5,-98],[5,-48],[1,-47],[-27,36],[-33,23],[-9,19],[4,61],[-1,31],[-14,64],[16,140],[0,29],[-3,28],[-13,57],[-21,47],[-13,0],[-32,-33],[-16,11],[-9,131],[-13,127],[-9,32],[-7,34],[6,28],[13,-11],[17,-34],[21,-19],[10,-16],[7,-30]],[[84788,59059],[20,-47],[4,-34],[-2,-38],[9,-16],[16,-5],[20,-19],[15,-35],[-9,-32],[3,-46],[-16,-59],[2,-105],[9,-33],[1,-33],[-2,-36],[4,-28],[24,-96],[5,-32],[-8,-25],[-2,-24],[15,-2],[21,-40],[12,-53],[-3,-13],[-17,41],[-13,6],[-55,-11],[-33,17],[-22,2],[-21,70],[-19,12],[-15,31],[-25,79],[-8,46],[18,46],[5,37],[-1,36],[-17,-6],[-14,12],[-17,44],[-7,25],[-13,22],[-20,50],[-30,20],[-11,14],[-24,42],[-16,53],[-17,92],[-9,95],[76,-25],[76,5],[86,22],[25,-26]],[[83528,59607],[14,-5],[45,18],[18,-9],[12,-33],[15,-10],[12,-17],[23,29],[22,-33],[20,-63],[24,-44],[22,-33],[5,-25],[-14,-40],[-4,-50],[2,-55],[16,-114],[-5,-31],[-18,-44],[-12,-49],[1,-20],[-5,-16],[-1,-35],[-11,7],[-9,-5],[-9,-16],[-15,-33],[-23,10],[-10,10],[-3,29],[-7,20],[-9,12],[-24,50],[-11,38],[-1,40],[-6,37],[-12,33],[-16,26],[-6,24],[-2,29],[-1,75],[-24,92],[-8,23],[-21,22],[-18,30],[-8,29],[-7,48],[-5,7],[-14,-3],[-13,7],[3,35],[14,25],[19,3],[51,-14],[14,-11]],[[85001,57212],[22,-35],[30,9],[-1,-87],[5,-26],[27,-74],[4,-61],[-16,-59],[-12,-27],[-22,-40],[0,-18],[9,-20],[31,-12],[23,-32],[4,-91],[22,-71],[-1,-31],[-9,-128],[3,-54],[16,-44],[14,-19],[8,-27],[6,-75],[-1,-128],[-2,-44],[-10,-42],[-30,-94],[-40,-75],[-22,5],[-6,-22],[13,-68],[-5,-145],[-9,-100],[-13,51],[-9,53],[-9,140],[-10,64],[-16,57],[-7,52],[-16,48],[-22,125],[-14,-7],[-23,-34],[-5,-23],[-3,-36],[-6,-32],[-27,-51],[-22,-60],[-17,-67],[-6,-61],[15,-47],[15,-20],[21,-42],[7,-20],[23,-139],[-1,-141],[-17,-63],[-42,-119],[-30,-37],[-17,19],[-13,72],[-2,29],[9,68],[1,62],[-10,21],[-12,-4],[-4,-9],[-27,-81],[-12,-21],[-17,-2],[-13,5],[-81,71],[-66,70],[-51,65],[-38,99],[-8,74],[0,77],[-17,113],[-2,38],[2,37],[16,70],[20,35],[12,25],[9,28],[6,37],[-2,37],[-7,23],[-32,82],[-27,50],[-57,45],[-13,24],[-14,19],[-16,8],[-16,0],[-16,-14],[-5,-29],[2,-27],[-2,-26],[-24,-148],[-30,32],[-29,38],[-7,26],[-4,32],[-5,21],[-6,19],[-14,-49],[-16,-39],[-20,-10],[-21,0],[-7,17],[-7,94],[-22,30],[-27,-7],[-33,-52],[-6,-19],[-7,-45],[-36,-127],[-19,-98],[-21,-96],[-9,-31],[-13,-21],[-19,9],[-18,23],[-17,61],[6,72],[19,45],[15,49],[19,171],[1,61],[4,26],[31,77],[26,48],[13,10],[57,28],[23,23],[36,0],[30,13],[24,37],[2,38],[-2,40],[6,24],[9,21],[12,27],[15,20],[40,15],[14,17],[10,26],[16,50],[17,-12],[18,-20],[33,-16],[28,-42],[19,-66],[3,-32],[5,-108],[-7,-25],[-28,-51],[13,-5],[36,46],[19,18],[45,24],[11,16],[7,24],[16,66],[12,71],[9,29],[13,23],[13,4],[47,-48],[31,23],[8,73],[7,106],[6,29],[17,28],[21,-9],[28,-38],[27,-13],[9,31],[10,61],[10,-1],[36,-20],[34,13],[10,73],[-7,78],[-27,226],[16,51],[14,1],[34,-60],[65,-81],[22,-50],[14,-61]],[[84269,57286],[-11,-15],[-4,38],[3,51],[21,179],[-5,45],[36,100],[22,93],[32,99],[5,51],[29,97],[27,134],[-1,45],[7,22],[4,33],[0,29],[20,50],[6,-33],[-6,-64],[1,-30],[3,-14],[0,-60],[-7,-91],[7,-105],[-13,-107],[-15,-48],[-21,-34],[-24,-21],[-25,-53],[-15,-62],[-3,-57],[-39,-192],[-34,-80]],[[83866,62727],[-17,-42],[-10,12],[10,40],[0,14],[8,31],[15,11],[13,-31],[-19,-35]],[[83755,62996],[3,-52],[-17,1],[-24,32],[-3,16],[1,13],[4,11],[36,-21]],[[83877,63574],[-5,-7],[-8,3],[8,55],[14,15],[11,-6],[-20,-60]],[[83854,63814],[-13,-47],[-11,0],[2,26],[14,55],[5,-1],[3,-33]],[[83655,55342],[15,-41],[19,11],[30,-12],[6,-22],[-1,-14],[-32,-40],[-21,42],[-38,-29],[-18,17],[-24,-15],[-15,33],[6,31],[39,51],[34,-12]],[[82521,56384],[-14,-44],[-16,50],[1,71],[5,19],[24,11],[0,-107]],[[83309,57883],[-34,-18],[-8,56],[24,51],[28,-21],[16,-20],[-8,-18],[-18,-30]],[[83360,58852],[15,-9],[11,8],[10,31],[9,-45],[22,-37],[-7,-38],[-20,-4],[-19,8],[-21,-15],[-25,9],[-14,35],[-17,63],[-9,12],[1,26],[6,16],[-3,4],[2,12],[3,8],[5,3],[13,-28],[32,-42],[6,-17]],[[83343,58584],[-21,-19],[-5,12],[-3,28],[0,20],[-20,104],[15,15],[11,-12],[12,-16],[10,-9],[10,-32],[-2,-23],[3,-22],[-10,-46]],[[84068,57875],[-7,-8],[-7,2],[-16,-21],[-6,39],[5,66],[25,50],[6,16],[7,10],[8,1],[8,-20],[2,-30],[-16,-90],[-9,-15]],[[84609,57480],[-3,-21],[-22,2],[-8,-3],[-20,-54],[-12,-14],[-66,-18],[-52,14],[-18,30],[-12,49],[-3,33],[13,35],[12,24],[42,46],[10,35],[22,43],[45,14],[4,-11],[6,-6],[9,-2],[23,-35],[25,-23],[-6,-85],[7,-28],[4,-25]],[[83402,54871],[-7,-35],[-9,-16],[-12,9],[-9,18],[-5,-27],[-24,-10],[-15,-41],[-23,-12],[-15,6],[2,37],[43,54],[27,21],[23,39],[12,5],[6,-33],[6,-15]],[[83914,55546],[-28,-8],[-9,0],[-22,59],[-2,26],[-18,29],[6,29],[23,7],[40,38],[64,-59],[10,-21],[-20,-13],[-14,-56],[-30,-31]],[[85016,57468],[-4,-3],[-15,45],[2,51],[21,76],[15,-67],[0,-30],[-2,-15],[14,-37],[-10,-19],[-21,-1]],[[84913,57554],[-5,-16],[-6,33],[-17,31],[-15,53],[-11,16],[7,42],[1,68],[16,31],[7,10],[11,33],[6,2],[5,-28],[-11,-85],[16,-100],[-6,-62],[3,-14],[-1,-14]],[[83408,59764],[0,-39],[-47,57],[-1,20],[1,14],[5,9],[25,-21],[17,-40]],[[83864,59642],[18,-1],[5,5],[33,-48],[-2,-24],[4,-33],[-19,-55],[-3,-19],[-11,-18],[-35,44],[-13,27],[-4,56],[14,81],[13,-15]],[[83914,58959],[-22,-143],[-15,49],[6,31],[-13,26],[-3,24],[5,31],[13,29],[3,94],[29,30],[11,1],[-4,-23],[1,-43],[-11,-106]],[[84070,58933],[-14,-13],[-29,56],[-17,26],[-4,15],[13,21],[37,0],[19,-39],[3,-24],[-8,-42]],[[84244,59247],[24,-88],[-26,60],[-30,41],[-31,67],[-23,24],[-6,14],[2,28],[17,5],[7,-2],[45,-119],[21,-30]],[[84381,59017],[1,-51],[-10,19],[-34,99],[-9,36],[9,24],[25,-37],[18,-90]],[[84365,58921],[53,-69],[37,-116],[4,-89],[-3,-35],[-17,39],[-38,54],[-26,12],[-8,10],[3,30],[-17,27],[-2,11],[-15,12],[-23,61],[-16,12],[-15,-13],[-35,-91],[-37,-64],[-1,25],[15,79],[10,128],[6,39],[-8,57],[-1,51],[28,-24],[35,-23],[27,-33],[4,-22],[40,-68]],[[84542,59695],[-8,-37],[-9,13],[-12,-2],[-21,-32],[-33,43],[-5,33],[24,73],[0,109],[8,27],[9,19],[11,11],[23,-75],[8,-10],[22,-34],[-5,-70],[2,-41],[-14,-27]],[[83937,59935],[-1,-23],[-60,85],[-3,15],[0,13],[4,14],[60,-104]],[[83897,60486],[5,-20],[-5,1],[-4,-4],[-13,-41],[14,-77],[-9,-56],[-16,-4],[-6,6],[3,28],[4,12],[-3,37],[-10,23],[-7,44],[-12,27],[6,43],[36,5],[17,-24]],[[84531,57952],[-7,-3],[13,61],[10,-9],[3,-6],[0,-28],[-19,-15]],[[84799,57593],[2,-29],[-35,75],[-8,53],[12,-2],[16,-20],[13,-77]],[[84148,56111],[3,-14],[-1,-14],[-29,-27],[-9,1],[-3,44],[7,21],[14,-18],[12,21],[6,-14]],[[84939,55853],[-4,-32],[-17,77],[-7,19],[9,65],[19,-32],[0,-97]],[[84613,58463],[-35,-4],[-15,26],[-19,78],[21,16],[21,-4],[15,-27],[15,-52],[-3,-33]],[[84668,57109],[-8,-34],[-31,28],[-8,25],[4,29],[15,10],[8,0],[15,-31],[5,-27]],[[83680,62835],[-1,-39],[-14,21],[-3,29],[1,21],[6,26],[9,-23],[2,-35]],[[83294,58482],[6,-31],[-8,-46],[-7,-10],[-8,19],[-20,14],[-1,24],[10,0],[18,24],[10,6]],[[84376,58342],[16,-76],[-22,0],[-8,56],[10,18],[4,2]],[[83974,59060],[-8,-18],[-5,3],[-4,31],[8,21],[3,-2],[6,-35]],[[84991,57369],[-5,-15],[-8,31],[7,68],[5,11],[7,-43],[-6,-52]],[[84681,58522],[-5,-30],[-8,8],[-7,14],[-11,44],[-3,33],[16,-18],[9,-33],[9,-18]],[[82598,56575],[-19,-14],[-4,36],[2,35],[14,-3],[6,-11],[1,-43]],[[84360,57164],[2,-60],[-25,-18],[-21,16],[-13,36],[0,13],[11,-1],[26,31],[8,7],[12,-24]],[[30565,49403],[-2,-38],[-9,-15],[-14,-3],[-21,26],[-15,-6],[-15,-2],[-22,31],[-7,31],[-17,25],[-35,-10],[-29,-1],[-24,6],[-22,-8],[-18,-33],[-14,-38],[-16,-31],[-48,-22],[-25,0],[-23,-21],[-33,-8],[-23,-18],[-41,-10],[-49,-10],[-28,-28],[-10,-12],[-28,-39],[-49,-62],[-26,-21],[-33,-67],[-38,-62],[-25,-33],[-37,-16],[-16,-16],[-5,-20],[3,-24],[-6,-60],[-12,-111],[-3,-54],[-2,-26],[-25,-89],[-26,-83],[-13,-55],[-8,-40],[9,-34],[10,-60],[9,-48],[3,-32],[-3,-38],[-11,-34],[-18,-22],[-23,-7],[-49,-60],[-54,-89],[-18,-41],[-5,-39],[-8,-62],[4,-31],[9,-22],[10,-52],[1,-27],[-8,-15],[-16,-3],[-13,-5],[-11,-14],[-10,4],[-10,-7],[0,-22],[3,-25],[-1,-26],[-7,-17],[-5,-12],[5,-17],[10,-15],[14,-25],[21,-48],[15,-9],[13,-16],[1,-27],[-4,-27],[-12,-12],[-1,-23],[16,-28],[10,-21],[11,-30],[9,-41],[0,-27],[11,-34],[6,-28],[0,-27],[17,-27],[15,-20],[10,-18],[11,-12],[2,-20],[-1,-30],[15,-50],[28,-38],[22,-55],[14,-39],[27,-64],[1,-73],[-33,-84],[-33,-84],[54,3],[56,-2],[58,-24],[39,-23],[23,-11],[17,-26],[8,-42],[7,-34],[1,-50],[25,-40],[-2,-38],[-1,-54],[11,-1],[71,0],[78,0],[74,10],[28,13],[34,65],[21,20],[20,30],[24,56],[19,25],[16,31],[23,31],[10,23],[8,8],[19,15],[-8,-30],[-6,-31],[-2,-44],[9,-49],[-8,-36],[-12,-32],[0,-85],[0,-121],[0,-104],[-1,-129],[0,-147],[0,-98],[13,20],[17,17],[23,-45],[16,-20],[14,-4],[15,1],[19,10],[43,37],[29,31],[34,-2],[46,-12],[26,1]],[[30672,45534],[35,-125],[25,-91],[29,-105],[24,-84],[35,-127],[31,-110],[32,-118],[37,-133],[-11,-34],[-10,-27],[1,-46],[-15,-24],[-15,-15],[-19,-38],[-12,-34],[-1,-47],[3,-242],[-3,-66],[-10,-56],[-10,-29],[-6,-22],[15,-56],[13,-113],[10,-22],[13,-46],[6,-44],[-3,-16],[-25,-21],[-9,-18],[-3,-64],[-11,-23],[-18,-31],[-12,-35],[-10,-24],[-10,-14],[-5,-42],[-7,-44],[-23,-28],[-4,-53],[0,-44],[12,-43],[40,-92],[4,-22],[-23,-56],[-13,-38],[-32,-117],[-1,-22],[8,-55],[49,-238],[8,-19],[15,-23],[24,3],[37,-26],[18,-29],[2,-15],[-4,-9],[-20,-20],[-22,-26],[-7,-24],[-2,-39],[5,-57],[-9,-18],[-22,-23],[-18,-32],[-19,-53],[-32,-81],[-11,-22],[-5,-28],[-18,-9],[-34,-55],[-5,-28],[5,-27],[17,-22],[12,-32],[3,-41],[0,-26]],[[30691,41759],[-21,-39],[-27,-44],[-34,-9],[-13,-22],[3,-47],[11,-66],[0,-52],[-10,-60],[-24,-65],[-37,-44],[-35,-24],[-27,0],[-27,-5],[-11,-7]],[[30439,41275],[-20,39],[-91,130],[-34,69],[-32,33],[-78,111],[-8,36],[-9,114],[-11,32],[-26,41],[-68,55],[-26,28],[-27,50],[-40,36],[-44,72],[-26,59],[-29,38],[-91,54],[-45,54],[-85,76],[-38,49],[-91,59],[-27,28],[-90,138],[-62,46],[-51,77],[-153,166],[-24,53],[-23,81],[-34,49],[-38,112],[-57,66],[-54,87],[-20,80],[-36,101],[-11,54],[-32,53],[-2,107],[-22,49],[16,24],[17,11],[21,165],[-12,83],[-56,151],[-21,72],[-15,93],[-22,55],[-34,116],[-21,102],[-45,75],[-12,27],[-7,38],[-25,26],[-1,79],[-17,150],[-25,76],[-90,140],[-2,55],[-7,99],[-20,106],[-99,332],[-26,99],[-25,161],[-22,91],[-25,162],[-37,123],[-24,107],[-25,133],[-2,71],[-45,122],[-24,112],[-42,94],[-42,72],[-18,50],[-58,240],[-8,71],[-40,132],[-40,95],[-25,76],[-32,69],[-195,212],[-69,88],[-23,42],[-10,66],[4,38],[20,36],[28,-27],[17,11],[13,47],[1,72],[-17,92],[-63,177],[5,38],[12,42],[-24,86],[-27,68],[-13,53],[15,200],[14,51],[95,203],[26,86],[40,54],[42,82],[49,62]],[[27687,49891],[8,-11],[7,-10],[0,-21],[2,-18],[5,-17],[1,-32],[6,-21],[1,-23],[0,-33],[-3,-16],[3,-28],[11,-52],[-4,-16],[-11,-11],[-10,-14],[-10,-32],[-15,1],[-22,14],[-15,-18],[-5,-35],[4,-28],[2,-27],[9,-23],[28,-2],[-25,-73],[-12,-33],[3,-21],[15,-18],[11,-2],[25,27],[17,39],[10,22],[16,9],[21,-18],[28,-36],[33,-32],[13,-18],[24,5],[20,7],[17,-26],[17,-22],[4,-76],[13,-55],[15,-42],[19,-51],[18,-17],[22,0],[31,-19],[12,12],[11,35],[5,20],[16,9],[1,23],[-3,28],[5,32],[13,28],[33,42],[15,18],[4,25],[6,35],[-3,19],[-6,23],[1,34],[9,45],[12,52],[11,67],[4,31],[12,20],[4,29],[6,34],[14,38],[0,41],[6,18],[0,46],[15,94],[0,20],[6,5],[11,-6],[9,-22],[3,-21],[4,-9],[9,2],[10,12],[-1,19],[-7,18],[-2,11],[3,18],[15,38],[17,44],[36,92],[22,38],[56,40],[42,30],[41,29],[55,42],[78,58],[56,42],[50,76],[39,58],[33,50],[42,64],[56,138],[40,95],[28,70],[20,44],[16,123],[18,142],[8,62],[3,22],[8,-9],[9,-15],[10,-1],[11,1],[6,8],[-9,141],[1,31],[5,37],[-1,20],[-17,28],[-28,56],[-11,50],[-7,43],[-19,27],[-20,25],[1,20],[12,0],[30,-20],[22,7],[16,2],[15,20]],[[29087,51781],[17,38],[11,0],[13,-5],[23,-39],[14,-22],[17,-19],[15,-6],[15,-2],[9,1],[6,-25],[7,-31],[18,-21],[21,-21],[17,-34],[11,-23],[14,-28],[13,-36],[12,-64],[6,-43],[7,-24],[-2,-24],[14,-45],[11,-24],[18,-16],[35,-18],[19,-40],[16,-16],[18,-41],[16,-12],[20,2],[19,-20],[15,-39],[10,-49],[15,-27],[8,-51],[-9,-58],[8,-32],[16,-25],[25,-27],[23,7],[12,-9],[7,-25],[5,-29],[10,-70],[5,-45],[-10,-43],[-3,-30],[5,-41],[24,-19],[22,-16],[13,-31],[15,-9],[21,2],[27,8],[15,18],[10,5],[11,-8],[24,-17],[29,-19],[26,11],[23,5],[23,11],[23,33],[19,-2],[14,22],[19,35],[17,36],[14,8],[23,-17],[31,-25],[18,-31],[13,-9],[14,-23],[27,0],[29,12],[23,39],[24,12],[16,10],[15,-6],[58,-71],[16,-37],[20,-7],[17,-20],[27,-22],[15,-22],[19,-14],[14,-31],[22,-19],[20,-11],[8,-25],[0,-16],[-2,-12],[-21,-65],[-39,-129],[-36,-116],[-56,-182],[-32,-102],[8,-4],[49,-45],[12,-1],[18,11],[12,18],[11,2],[11,-17],[17,-22],[11,-65],[9,-31],[20,-25],[21,-40],[15,-42]],[[33844,40227],[6,-42],[4,-32],[9,-23],[9,-31],[9,-17],[7,-28],[-2,-33],[4,-41],[4,-37],[5,-9],[13,-10],[7,-33],[-5,-16],[2,-19],[5,-19],[-5,-18],[2,-14],[9,-12],[9,-46],[1,-78],[-10,-42],[-7,-34],[-2,-21],[6,-31],[-9,-36],[-11,-44],[2,-30],[2,-29],[1,-30],[3,-29],[-4,-30],[-4,-27],[-1,-30],[4,-35],[-8,-32],[-5,-23],[-1,-23],[8,-36],[21,-15],[16,-4],[16,19],[12,6],[22,-17],[20,-31],[26,-4],[23,-5],[17,-10],[26,11],[27,-11],[31,-17],[26,-15],[25,3],[20,2],[20,17],[19,-1],[15,30],[8,27],[8,19],[21,15],[14,-10],[12,-49],[21,-29],[9,-21],[15,-9],[34,-2],[21,2],[24,-15],[16,0],[14,-27],[13,-32],[1,-59],[12,-46],[16,-17],[8,-29],[-2,-40],[-8,-40],[1,-44],[8,-40],[0,-40],[6,-40],[11,-34],[4,-55],[-2,-40],[7,-23],[3,-33],[-5,-26],[-2,-36],[1,-33],[6,-26],[16,-35],[5,-61],[0,-42],[7,-49],[14,-23],[22,-8],[26,-7],[31,11],[28,13],[15,14],[31,36],[26,21],[14,13],[13,10],[27,-23],[24,-29],[20,-40],[35,-43],[-6,-11],[-15,-36],[1,-42],[10,-61],[-9,-127],[-28,-196],[-11,-114],[4,-32],[-10,-57],[-38,-123],[-1,-82]],[[34829,37110],[-5,-248],[-13,-174],[-21,-129],[-20,-69],[-17,-8],[-13,-21],[-8,-33],[-14,-27],[-21,-22],[-11,-24],[-2,-26],[-20,-16],[-38,-8],[-23,-21],[-6,-34],[-13,-27],[-19,-20],[-9,-33],[1,-46],[-11,-40],[-23,-33],[-21,-1],[-19,31],[-25,21],[-33,10],[-26,-8],[-22,-26],[-19,-41],[-17,-57],[-18,-9],[-21,38],[-26,11],[-31,-15],[-25,5],[-18,26],[-28,3],[-39,-20],[-77,23],[-117,65],[-99,25],[-121,-23],[-11,68],[7,37],[19,27],[13,32],[5,35],[13,27],[23,18],[9,19],[-3,19],[4,16],[13,15],[7,23],[2,31],[5,15],[8,12],[1,21],[-4,67],[0,55],[6,43],[8,25],[5,7],[5,15],[2,26],[8,24],[38,49],[15,27],[1,24],[6,33],[23,71],[7,34],[1,16],[8,17],[27,40],[16,37],[2,35],[-7,39],[-16,45],[-49,110],[-38,50],[-49,42],[-33,13],[-15,-14],[-16,11],[-16,38],[-27,29],[-57,33],[-128,129],[-52,62],[-17,39],[-48,69],[-79,100],[-61,48],[-42,-2],[-67,29],[-93,61],[-54,59],[-14,57],[-35,57],[-54,57],[-28,38],[-2,18],[-16,24],[-31,29],[-33,50],[-36,71],[-38,109],[-41,148],[-44,100],[-47,51],[-23,35],[0,16],[-7,16]],[[32597,39035],[6,29],[17,112],[25,164],[25,169],[31,199],[0,141],[0,149],[43,122],[30,87],[27,83],[26,142],[18,94],[68,23],[116,49],[57,24],[122,52],[123,53],[130,3],[125,3],[97,-117],[74,-90],[82,-99],[5,-21],[6,-83],[-6,-96]],[[92490,49103],[-21,-44],[-13,41],[-16,36],[-13,36],[-17,79],[0,40],[4,42],[1,43],[-8,87],[-19,78],[-68,189],[-21,49],[-24,44],[-16,11],[-31,11],[-14,8],[-26,31],[-24,36],[-60,106],[-31,30],[-17,37],[-94,120],[-27,28],[-34,0],[-28,24],[22,15],[5,40],[-5,41],[47,-67],[50,-58],[14,-47],[25,-3],[45,-38],[30,-35],[29,-40],[33,-58],[62,-45],[9,-17],[32,-75],[42,-64],[14,-35],[177,-301],[30,-85],[2,-58],[-6,-22],[-19,-49],[1,-58],[-6,-51],[-16,-52]],[[92198,49368],[14,-12],[42,60],[22,-42],[28,-20],[30,-12],[-12,-86],[4,-40],[7,-40],[-1,-59],[-13,-52],[-26,-76],[-12,-15],[-13,-8],[-43,-6],[-8,-40],[3,-43],[23,-57],[18,-63],[-18,-59],[-30,-40],[-29,-21],[-47,12],[-50,-5],[-10,-22],[0,-37],[-7,-28],[-9,-25],[-25,-53],[-29,-46],[-38,-45],[-13,-10],[-35,-7],[-31,-26],[-13,-25],[-15,-20],[-33,-22],[-32,-43],[-12,-8],[-66,-7],[-95,-2],[-28,-5],[-27,6],[-15,17],[-32,79],[-28,26],[-30,0],[-41,-28],[-8,6],[-80,116],[-25,28],[-26,21],[-32,15],[-30,23],[-18,55],[2,72],[24,42],[37,-21],[14,0],[14,12],[16,-4],[17,-10],[60,15],[34,-22],[34,-29],[32,-6],[32,6],[43,33],[14,-4],[42,0],[36,44],[14,177],[9,60],[13,14],[9,-4],[13,-30],[-17,-38],[-8,-29],[-2,-71],[9,-69],[22,-54],[32,-7],[29,36],[32,7],[30,-35],[30,6],[14,23],[16,10],[16,4],[14,13],[20,60],[13,67],[19,52],[52,88],[15,11],[17,6],[37,-4],[27,32],[2,70],[-4,72],[-31,167],[-2,27],[4,30],[9,27],[31,0],[32,-9],[13,-26],[14,-20]],[[89159,46590],[0,8],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,118],[0,96],[-16,38],[-15,57],[3,74],[19,92],[9,61],[0,50],[0,117],[0,117],[0,117],[0,117],[0,118],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[0,117],[-1,118],[0,117],[0,117],[0,70],[0,39],[0,2]],[[89158,50339],[9,0],[28,-1],[22,-9],[140,-125],[41,-50],[14,-12],[14,-1],[14,-5],[62,-70],[94,-69],[99,-67],[31,-14],[31,-6],[69,-23],[37,-21],[53,-82],[27,-25],[25,-46],[35,-50],[15,-12],[15,-6],[35,-2],[35,9],[15,-4],[14,-9],[13,-17],[6,-33],[22,-47],[31,-20],[29,-42],[27,-50],[19,-50],[22,-43],[34,-18],[35,-2],[120,-253],[6,-39],[1,-165],[-13,-129],[30,-40],[40,-15],[58,-28],[55,-41],[175,-174],[24,-15],[35,-6],[36,3],[13,-9],[26,-32],[14,-20],[24,-57],[21,-61],[9,-17],[11,-14],[6,-33],[9,-103],[-3,-64],[-9,-24],[-28,-11],[-99,-11],[-65,12],[-46,-65],[-2,-28],[4,-27],[40,-137],[23,-121],[20,-50],[29,-40],[26,-48],[24,-54],[50,-95],[27,-36],[31,-21],[53,-74],[7,-33],[16,-103],[6,-69],[1,-29],[4,-26],[46,-63],[11,-18],[20,-140],[16,-65],[27,-24],[31,2],[85,42],[12,1],[16,-10],[14,-23],[4,-63],[-13,-66],[-4,-64],[17,-52],[43,-41],[16,-12],[78,-13],[30,-11],[30,-17],[11,-16],[-8,-28],[-15,-14],[-18,-6],[-29,-20],[1,-36],[16,-38],[15,-45],[12,-17],[14,-11],[33,-15],[33,-22],[22,-22],[22,-15],[48,-10],[36,-29],[51,12],[-44,-47],[-15,-11],[-53,17],[-10,-18],[22,-50],[32,-34],[12,-19],[-9,-23],[-37,-46],[-16,-6],[-29,-4],[-50,20],[-35,25],[-9,34],[-10,20],[-31,49],[-23,26],[-28,9],[-30,-1],[-53,28],[-116,20],[-27,12],[-35,39],[-16,6],[-18,-12],[-44,-8],[-13,3],[-32,33],[-33,12],[-14,-9],[-14,-3],[-44,24],[-34,10],[-28,33],[-15,30],[-17,28],[-16,70],[-24,67],[-31,54],[-65,89],[-13,22],[-25,81],[1,54],[9,54],[-14,-19],[-16,3],[-44,36],[-18,42],[-30,116],[-19,62],[-44,108],[-13,64],[-18,56],[-12,21],[-9,24],[-9,32],[-12,21],[-62,49],[-11,15],[-12,8],[-46,5],[-26,8],[-50,39],[-26,12],[-31,7],[-30,15],[-15,15],[-10,25],[-6,59],[-25,-7],[-25,10],[-24,21],[-24,13],[-17,-18],[-5,-47],[-8,-2],[-14,9],[-7,-5],[-16,-22],[-12,-29],[-23,4],[-47,30],[-21,18],[-18,34],[-15,38],[-16,29],[-19,22],[24,-51],[56,-228],[-14,-4],[-14,6],[13,-44],[-15,-6],[-15,0],[-32,19],[-31,6],[-10,-9],[7,-16],[11,-49],[9,-50],[-46,-23],[-46,-14],[-52,-27],[-53,-2],[-27,16],[-28,9],[-26,-9],[-25,-20],[-21,3],[-14,36],[-6,27],[-8,23],[-20,-4],[-19,-12],[33,-2],[10,-30],[8,-36],[23,-32],[29,19],[61,-5],[60,-57],[14,-7],[13,-11],[31,-56],[24,-51],[19,-59],[4,-23],[-1,-61],[-6,-30],[-39,-43],[-41,-33],[-61,-63],[-59,-73],[-31,15],[-28,38],[-10,10],[-29,21],[-18,7],[-69,-16],[-70,-8],[-30,1],[-28,12],[-32,23],[-31,-11],[-21,-26],[-23,-4],[-44,59]],[[91117,48486],[-11,-4],[-5,26],[-26,23],[-26,70],[1,61],[3,17],[15,1],[57,-70],[6,-22],[-4,-66],[-10,-36]],[[90560,49120],[-19,-17],[-13,13],[-6,38],[5,36],[16,29],[10,9],[12,-20],[4,-38],[-9,-50]],[[92408,50038],[-7,-51],[-17,30],[-12,42],[8,20],[19,11],[9,-52]],[[92249,50145],[-3,-29],[-9,1],[-24,57],[-4,15],[5,14],[28,-41],[7,-17]],[[91601,50948],[-1,-21],[-20,11],[-6,-3],[-34,60],[0,37],[9,31],[15,-5],[25,-39],[12,-71]],[[91966,46071],[12,0],[20,43],[17,13],[11,-20],[-18,-137],[-16,21],[-60,38],[-2,54],[-15,18],[-10,53],[-20,58],[-4,38],[12,-16],[12,-38],[53,-79],[-2,-25],[10,-21]],[[91762,46374],[-4,-14],[-16,10],[-46,80],[7,59],[21,30],[31,-33],[10,-49],[3,-27],[-6,-56]],[[91973,46812],[5,-41],[-22,44],[10,50],[2,27],[-1,15],[-22,26],[11,42],[13,14],[7,4],[0,-59],[6,-27],[-9,-95]],[[92855,45298],[-4,-31],[-10,10],[-30,-16],[-16,4],[-9,28],[-3,13],[27,-10],[-5,31],[38,-16],[12,-13]],[[89884,46957],[-12,-2],[-49,39],[-12,29],[57,-7],[15,-7],[3,-40],[-2,-12]],[[90881,48714],[-15,-3],[-26,54],[-6,21],[3,28],[32,39],[21,-35],[4,-75],[-13,-29]],[[90851,50714],[93,-38],[6,1],[-1,13],[1,4],[6,-10],[-2,-27],[-15,-7],[-13,3],[-10,-15],[-26,-52],[-18,9],[-22,-12],[-38,-1],[-50,23],[-13,-20],[-18,6],[-17,-22],[-8,1],[-4,32],[1,16],[20,14],[-3,49],[17,25],[29,-3],[27,17],[58,-6]],[[91787,50309],[-55,-8],[-20,9],[-18,33],[-16,52],[-16,12],[-7,11],[39,39],[35,12],[56,-49],[6,-25],[0,-16],[-1,-53],[-3,-17]],[[91813,46459],[39,-48],[21,14],[12,-7],[25,-55],[1,-40],[4,-34],[-1,-15],[-14,-21],[1,24],[-10,4],[-37,-1],[-28,15],[-39,4],[16,36],[4,14],[-21,59],[0,28],[1,15],[17,8],[9,0]],[[92397,46682],[16,-9],[33,4],[11,-33],[16,-11],[13,-15],[12,-22],[0,-13],[-3,-12],[-7,-10],[2,-23],[-12,3],[-16,-12],[-30,27],[-11,6],[-3,24],[-19,39],[-35,28],[18,23],[15,6]],[[92648,45232],[46,-30],[16,-34],[-17,-15],[-40,-10],[-10,20],[-39,21],[-6,37],[-19,-13],[10,27],[-25,29],[-7,40],[-1,16],[28,-19],[64,-69]],[[89885,46869],[5,-25],[-40,35],[-39,58],[-19,15],[-13,38],[24,-28],[41,-27],[41,-66]],[[91076,50527],[-9,-30],[-21,3],[-9,9],[15,6],[6,25],[7,8],[11,-21]],[[92209,50212],[-6,0],[-1,46],[4,24],[16,-16],[2,-42],[-15,-12]],[[91915,45757],[-4,-45],[-22,13],[-5,10],[4,28],[20,1],[7,-7]],[[92682,49481],[-2,-13],[-17,15],[14,30],[6,2],[-1,-34]],[[93321,47991],[-7,-54],[-5,-9],[-7,20],[-24,-20],[-11,-22],[-13,-17],[-28,4],[-27,15],[-26,28],[-23,35],[-23,55],[-14,57],[7,66],[-9,60],[-44,43],[-10,14],[-19,59],[-19,26],[-25,52],[-6,23],[-11,66],[-3,40],[9,116],[-4,58],[12,-5],[13,-23],[15,-16],[35,-11],[27,-46],[25,-90],[4,-30],[8,-21],[26,-38],[14,-25],[26,-98],[15,-21],[17,-9],[16,-14],[27,-43],[24,-49],[17,-51],[12,-55],[9,-70]],[[92957,48713],[-6,-4],[-12,72],[-2,54],[-4,40],[-6,24],[18,43],[8,12],[13,-23],[2,-51],[11,-43],[-8,-95],[-14,-29]],[[28507,56830],[-5,-8],[-16,-45],[-8,-39],[20,-41],[6,-44],[11,-47],[17,-47],[20,-89],[4,-35],[-5,-23],[-19,-14],[-17,-41],[-5,-51],[3,-25],[-52,-80],[-13,-13],[-9,12],[-11,40],[-13,33],[-8,11],[-4,1],[-4,-8],[-2,-17],[7,-76],[-6,-30],[-17,-24],[-20,-123]],[[28361,56007],[-8,16],[-67,165],[-58,205],[-12,93],[15,6],[14,-3],[8,15],[9,27],[-7,63],[28,47],[11,32],[7,-3],[19,-55],[26,-31],[33,-46],[21,-10],[-26,47],[-44,63],[-13,42],[-12,57],[-17,-25],[-8,-21],[-9,-12],[-8,15],[-1,18],[-26,4],[-7,17],[-7,9],[3,-36],[5,-22],[-2,-27],[-9,-1],[-7,27],[-9,25],[-13,105],[-29,49],[-14,16],[-11,7],[-17,33],[-22,18],[-29,52],[-37,37],[-44,14],[-54,-9],[-19,-20],[-12,-27],[-6,-12],[-32,-30],[-12,-43],[-7,-37],[-16,-42],[18,-25],[-104,-142],[-21,-20],[-47,-15],[-11,-15],[-14,-28],[-2,-42],[2,-37],[14,-28],[12,-17],[29,-85],[52,-106],[9,-39],[8,-57],[-15,-27],[-12,-11],[-49,-5],[-17,-23],[-7,-35],[-18,-29],[-64,-28],[-49,-3],[-16,33],[-4,92],[-33,158],[-8,108],[-8,-13],[-18,-13],[-6,-27],[-5,-80],[-6,-27],[-14,2],[-28,29],[-37,26],[-48,170],[-5,32],[-9,38],[-37,16],[-32,29],[-34,4],[-17,-16],[-18,21],[-3,46],[-36,-21],[-47,7],[-41,20],[-28,-10],[-24,-33],[4,-85],[-7,-16]],[[26978,56492],[-1,34],[-9,40],[-10,33],[-20,34],[-1,12],[8,18],[38,49],[4,21],[1,43],[-4,41],[-17,60],[10,38],[19,30],[20,24],[4,10],[-4,20],[-12,22],[-27,38],[-16,3],[-1,108],[1,116],[4,11],[10,7],[8,18],[5,34],[11,12],[22,-26],[22,-24],[9,8],[7,11],[5,12],[1,10]],[[27065,57359],[18,-31],[36,-54],[2,-27],[-3,-26],[10,-74],[18,-10],[19,14],[5,-14],[-4,-13],[-9,-15],[-3,-64],[31,-30],[15,-26],[51,13],[19,-7],[13,7],[-14,51],[-19,38],[1,17],[15,-13],[11,-25],[25,-32],[46,-111],[53,-26],[42,3],[39,15],[63,43],[45,78],[36,34],[116,74],[42,77],[17,10],[17,10],[36,58],[20,46],[21,22],[62,-16],[39,-22],[28,3],[27,-15],[11,-33],[12,-14],[65,3],[54,-16],[117,-98],[70,-97],[37,-103],[90,-133]],[[28084,56609],[-6,-24],[-13,54],[2,14],[-1,49],[13,13],[9,1],[7,-7],[5,-58],[-4,-26],[-12,-16]],[[27332,56067],[-15,-3],[-31,24],[-23,48],[-2,15],[1,16],[12,49],[17,17],[6,0],[16,-57],[-11,-21],[5,-35],[22,-26],[3,-27]],[[27157,57246],[-3,-27],[-21,49],[12,8],[5,-1],[7,-29]],[[28037,56597],[-12,-25],[-5,24],[9,25],[3,0],[5,-24]],[[86436,53586],[-6,-3],[-4,2],[0,8],[4,9],[6,4],[4,-3],[0,-8],[-4,-9]],[[87387,56095],[-17,-12],[-8,44],[3,51],[11,39],[12,13],[2,4],[12,51],[3,-28],[-8,-93],[-9,-37],[-1,-32]],[[71323,72385],[13,-52],[19,-78],[13,-51],[14,-58],[7,-29],[13,-50]],[[71402,72067],[-5,-27],[-9,-41],[-30,-30],[-30,-23],[-7,-12],[-3,-18],[-14,-35],[-28,-29],[-24,3],[-15,8],[-79,-51],[-36,2],[-29,-33],[-21,-30],[-42,-33],[-29,-1],[-43,20],[-52,37],[-21,22],[-19,-1],[-47,5],[-45,18],[-54,22],[-27,10],[-55,19],[-35,-26],[-33,-23],[-26,-16],[-22,-71],[-9,-26],[-10,-36],[-5,-25],[4,-31],[32,-21],[13,-30],[2,-26],[-11,-27],[-10,-21],[0,-19],[5,-18],[8,-14],[45,-9],[27,0],[10,-8],[2,-25],[-10,-34],[-38,-28],[-22,-29],[-7,-39],[1,-30],[7,-21],[18,-23],[17,-27],[6,-22],[-3,-30],[-6,-41],[-19,-48],[-16,-34],[-1,-12],[4,-18],[12,-27],[22,-39],[27,-31],[17,-9],[5,-8],[6,-37],[2,-38],[-7,-29],[13,-24],[36,1],[29,-10],[13,10],[8,-8],[-5,-86],[4,-51],[7,-15],[29,-21],[55,3],[33,-24],[36,-28],[19,-31],[8,-22],[-2,-37],[-20,-43],[-32,-21],[-19,-9],[-92,-81],[-29,-34],[-22,-41],[-8,-31],[-4,-30],[19,-108],[4,-34],[-17,-118],[-4,-43],[6,-31],[19,-11],[5,-26],[2,-19],[-35,-43],[-35,-39],[-12,0],[-34,-71],[-58,-144],[-30,-49],[-2,-23],[-3,-24],[12,-41],[2,-34],[-13,-35],[-21,-40],[-42,-34],[-53,-36],[-24,-21],[-18,-93],[-16,-94],[-8,-34],[-28,-108],[-50,-158],[-13,-35],[-77,-76],[-79,-83],[-14,-32],[-16,-75],[-15,-83],[-14,-44],[-50,-97],[-17,-75],[-5,-49],[-42,-27],[-49,-26],[-70,-9],[-29,-13],[-86,-68],[-22,-3],[-16,12],[-13,23],[-12,38],[-6,59],[-16,26],[-23,23],[-23,1],[-24,-25],[-20,-27],[-14,-23],[-14,-26],[-26,-89],[-43,-128],[-48,-92],[-17,-28],[-11,-21],[-15,-31],[-9,-30],[-12,-97],[-6,-86],[3,-19],[7,-17],[26,-25],[37,-41],[49,-24],[41,-4],[16,-18],[9,-24],[2,-20],[-2,-71],[-4,-77],[-16,-82],[1,-47],[6,-46],[45,-117],[17,-12],[34,-3],[16,2],[18,12],[13,-8],[9,-14],[2,-24],[-1,-117],[14,-53],[27,-72],[22,-82],[20,-99],[19,-77],[8,-40],[-13,-20],[-7,-20],[-2,-27],[3,-29],[-2,-20],[9,-25],[11,-8],[0,-17],[-17,-23],[-15,1],[-12,-10],[-23,-48],[-10,-9],[-14,-4],[-16,4],[-22,19],[-7,30],[3,32],[-5,18],[-16,-3],[-56,-32],[-53,-40],[-9,-27],[-12,-28],[-25,-12],[-35,-3],[-25,4],[-23,30],[-21,28],[-32,1],[-58,-4],[-32,0],[-19,10],[-18,-7],[-24,11],[-10,-15],[-10,-1],[-8,26],[-5,2],[-6,-4],[-5,-8],[-4,-15],[-1,-174],[-38,1],[-27,1],[-30,-10],[-27,-13],[-14,-16],[-19,-25]],[[68934,65585],[-4,-34],[-10,-26],[-13,38],[-9,17],[-9,-13],[-14,2],[-26,42],[-11,-43],[-42,-9],[-5,32],[-1,30],[-23,-22],[-17,34],[-7,45],[-6,12],[-8,15],[-17,15],[-16,48],[-1,51],[-4,60],[-33,224],[-20,21],[-110,39],[-6,40],[8,105],[-3,66],[-36,88],[-10,61],[-29,52],[-29,15],[-30,-7],[-15,-20],[-9,-35],[63,8],[14,-13],[17,-23],[-18,1],[-21,11],[-26,-1],[-98,-26],[-56,-37],[-76,11],[-96,-36],[-79,-2],[-33,-71],[-18,12],[-14,18],[-109,56],[-7,23],[-18,17],[-20,-30],[-15,-5],[-59,25],[-46,-19],[-17,-32],[-1,-50],[-57,10],[-32,15],[-43,-17],[-98,23],[-25,-6],[-36,-33],[-15,-26],[-21,-10],[-18,36],[-14,16],[-13,-10],[-18,-30],[-50,-14],[-46,4],[-49,28],[6,9]],[[67107,66360],[8,48],[7,172],[8,62],[-2,34],[2,10],[19,31],[4,12],[8,88],[8,98],[9,35],[7,9],[61,44],[11,29],[31,-7],[3,7],[3,34],[14,36],[21,30],[15,11],[54,19],[32,26],[10,2],[85,-6],[18,10],[3,9],[5,99],[15,16],[3,8],[-5,69],[3,45],[17,27],[-1,16],[-12,32],[-17,21],[-8,5],[-70,-20],[-29,7],[-14,12],[-2,9],[2,20],[1,32],[10,51],[3,30],[-8,175],[-12,116],[6,115],[-1,24],[-2,5],[-9,0],[-43,-10],[-36,74],[-22,30],[-62,36],[-27,7],[-40,32],[-37,70],[-37,72],[-15,45],[-17,78],[-47,149],[0,39],[-6,23],[-46,98],[-33,70],[-53,112]],[[66900,69042],[106,-63],[83,-48],[133,-78],[103,-60],[29,-10],[303,52],[112,-40],[36,-22],[5,13],[15,27],[26,27],[35,21],[36,12],[51,1],[34,-1],[25,-7],[49,4],[24,10],[81,43],[54,29],[82,44],[60,33],[15,17],[15,32],[8,28],[-19,43],[-2,38],[12,48],[7,74],[-2,104],[-4,61],[17,112],[14,63],[28,30],[19,19],[8,13],[8,15],[30,86],[27,40],[26,24],[29,-3],[25,-33],[47,-15],[46,10],[40,25],[18,20],[21,18],[-1,20],[-24,18],[-14,25],[-5,31],[14,18],[31,6],[77,74],[31,49],[9,23],[15,3],[29,-23],[34,-8],[22,23],[21,5],[21,-25],[11,-29],[20,-36],[24,-7],[29,19],[30,41],[29,58],[26,56],[-7,180],[-4,107],[14,55],[19,35],[13,53],[-1,47],[14,40],[13,107],[19,26],[37,17],[61,11],[47,49],[47,52],[7,46],[-18,50],[-24,95],[-22,57],[-52,103],[6,63],[29,26],[72,-44],[20,-9],[25,-6],[66,1],[54,17],[57,39],[11,41],[-1,48],[1,40],[1,56],[-20,35],[-12,32],[-4,25],[14,14],[14,26],[13,47],[31,57],[19,51],[18,24],[27,33],[17,48],[8,29],[16,29],[5,18],[-4,17],[-8,21],[-9,23],[0,23],[7,24],[8,22],[-3,30],[-5,50],[-14,29],[-10,68],[-16,68],[-8,27],[-15,34],[-34,35],[-10,24],[13,46],[22,29],[42,70],[23,48],[21,34],[27,-5],[15,3],[14,31],[27,28],[49,57],[17,39],[26,19],[21,5],[29,13],[28,21],[25,16],[40,3],[63,9],[35,10],[81,8],[89,3],[11,1],[38,-21],[26,-17],[11,2],[43,41],[66,50],[30,22]],[[70705,73169],[17,8],[25,0],[21,-14],[21,-19],[13,-15],[16,9],[30,11],[25,-8],[56,-35],[8,-17],[13,-84],[10,-7],[32,19],[26,-10],[29,-27],[19,-26],[12,-28],[14,-46],[5,-36],[6,-44],[-1,-123],[-10,-20],[-8,-26],[2,-23],[9,-18],[18,-12],[17,-8],[9,-19],[12,-70],[9,-10],[20,0],[38,15],[32,24],[14,5],[3,-66],[19,-25],[26,-29],[11,-10]],[[66311,63489],[-17,-8],[-6,4],[1,73],[40,91],[27,106],[19,-94],[-33,-53],[-17,-91],[-14,-28]],[[65663,66232],[28,-152],[42,-142],[37,-78],[38,-106],[59,-98],[27,-33],[108,-69],[60,-25],[82,-25],[57,-53],[19,-3],[29,15],[22,-1],[54,-73],[16,-69],[23,-36],[20,-57],[13,-60],[45,-92],[33,-103],[33,-76],[29,-47],[44,-19],[36,-21],[4,-51],[-4,-67],[-7,-49],[-33,-96],[-8,-59],[-37,-97],[-41,-163],[-18,-37],[-66,-84],[-48,-102],[-57,-176],[-43,-174],[-17,-56],[-35,-12],[-23,5],[-15,17],[6,47],[4,54],[-21,-6],[-19,-11],[-43,-131],[-24,-57],[-5,-73],[-12,-94],[-16,-86],[-8,-73],[0,-41],[13,-101],[1,-103],[7,-62],[6,-74],[-20,-23],[-18,-11],[-68,-8],[-70,-24],[-61,-43],[-37,-43],[-47,-95],[-29,-243],[-47,-103],[-31,-21],[-76,-9],[-106,-28],[-38,-25],[-62,-148],[-5,-47],[12,-34],[4,-37],[-5,-35],[-29,-94],[-30,-68],[-81,-43],[-30,25],[-27,13],[-53,2],[-86,-17],[-31,-50],[-50,-36],[-46,-55],[-87,-21],[-59,-43]],[[65577,66856],[24,83],[9,13],[8,-6],[22,9],[11,45],[9,25],[10,-3],[4,-14],[-3,-69],[0,-57],[-12,-175],[-13,-30],[-6,-25],[-2,-34]],[[53163,85850],[-1,17],[-5,22],[-65,22],[-12,-1],[-25,13],[-15,4],[-31,8],[-25,64],[-28,54],[-3,22],[0,101],[-8,44],[-2,49],[-17,-39],[9,-63],[-21,-26],[-26,-13],[2,-37],[11,-7],[3,-38],[-7,-56],[-52,-126],[-11,-13],[-7,-17],[-27,11],[-34,-35],[-32,-5],[-12,39],[-46,53],[-22,-3],[20,-26],[19,-34],[-11,-22],[-11,-14],[-18,-8],[-67,-44],[23,-29],[-20,-34],[-23,-5],[-13,-15],[-4,-21],[-69,-61],[-113,-155],[-59,-44],[-40,-46],[-36,2],[-45,-39],[-114,-34],[-75,15],[-53,-13],[-28,26],[-4,19],[2,10],[5,13],[-10,5],[-21,2],[-9,-13],[-1,-29],[-10,-8],[-39,17],[-10,15],[14,30],[25,28],[-5,5],[-5,17],[-11,2],[-35,-4],[-29,5],[-93,62],[-21,33],[-75,52],[-34,56],[-19,61],[2,56],[9,87],[15,22],[68,-31],[68,-51],[10,3],[22,40],[41,32],[-12,9],[-61,-37],[-23,21],[-36,42],[0,21],[17,22],[5,29],[-8,28],[4,37],[27,40],[41,40],[30,39],[31,24],[-4,8],[-34,-15],[-34,-26],[-39,-44],[-48,-35],[-35,-13],[-17,-12],[-26,-11],[-27,-50],[-29,-21],[-53,-3],[-11,37],[15,131],[16,64],[17,45],[27,7],[20,34],[16,0],[13,-16],[54,-15],[26,43],[35,6],[62,42],[-1,8],[-42,-9],[-26,-2],[-37,-10],[-20,7],[-9,32],[15,29],[59,68],[21,30],[11,28],[-2,19],[10,39],[58,69],[47,32],[15,-28],[-13,-84],[0,-35],[38,123],[16,30],[19,20],[45,14],[13,20],[-53,-7],[-127,-47],[-54,-42],[-15,-32],[-37,-49],[-17,-31],[-8,-47],[-21,-25],[-29,-9],[-39,-59],[-17,-48],[-39,-37],[-25,-29],[-8,-11],[-14,-28],[-11,-2],[-10,16],[-1,37],[3,59],[19,42],[9,42],[-12,38],[9,24],[16,0],[31,-11],[33,1],[54,31],[-9,18],[-23,2],[-44,-2],[-36,29],[-29,59],[-13,79],[9,23],[105,81],[28,36],[-16,4],[-39,-45],[-57,-27],[-35,38],[-19,41],[-11,87],[4,45],[-4,59],[24,19],[27,-10],[26,-4],[61,5],[133,35],[85,-21],[35,2],[54,31],[46,3],[35,-23],[19,-27],[3,-36],[16,-23],[11,7],[-9,29],[-2,43],[140,50],[17,19],[-56,7],[-16,45],[30,68],[-3,9],[-31,-36],[-15,-51],[6,-40],[-6,-19],[-29,-9],[-64,-3],[-41,17],[-38,10],[-13,13],[4,29],[-7,6],[-16,-26],[-14,-52],[-30,-12],[-84,19],[-121,-11],[-54,-26],[-35,3],[-61,46],[-24,36],[-8,73],[3,33],[47,13],[24,-1],[22,17],[-19,12],[-28,22],[-19,44],[-29,14],[-19,38],[-5,57],[6,40],[15,13],[37,-9],[97,6],[91,-40],[62,-23],[125,12],[73,36],[-13,10],[-80,-21],[-73,1],[-130,40],[-53,14],[-57,-6],[-30,12],[-18,40],[13,77],[27,17],[15,-20],[18,-2],[18,32],[17,19],[14,41],[51,39],[22,3],[31,18],[20,-5],[12,-18],[16,-15],[35,2],[103,31],[11,10],[20,25],[-65,-11],[-54,-18],[-35,-5],[-5,22],[13,21],[20,21],[10,37],[22,16],[24,-1],[50,7],[35,9],[60,-6],[90,-14],[58,-34],[21,3],[23,9],[11,12],[-46,14],[-2,21],[5,15],[74,28],[81,6],[-14,23],[-177,-34],[-46,23],[-36,0],[-24,-13],[-68,-16],[-13,11],[13,40],[41,65],[3,16],[19,16],[106,37],[51,44],[23,6],[22,-3],[35,5],[67,-13],[30,-55],[28,-17],[87,-69],[-4,20],[-75,93],[-29,23],[-21,46],[7,43],[24,29],[86,15],[15,17],[2,29],[-13,19],[-32,-1],[-26,12],[-7,31],[10,21],[50,38],[27,13],[47,13],[81,-30],[6,-16],[-22,-38],[2,-21],[20,-3],[46,64],[55,9],[23,14],[26,9],[38,-58],[16,-19],[12,-7],[12,-48],[12,-3],[17,24],[30,13],[42,8],[69,-12],[32,9],[15,-1],[-14,43],[-10,12],[15,39],[15,15],[48,27],[46,12],[30,26],[40,24],[-6,18],[-12,22],[-26,2],[-10,12],[33,28],[45,32],[-8,12],[-34,14],[-26,-10],[-38,-25],[-45,-39],[15,-11],[22,-32],[-31,-43],[-166,-115],[-78,-34],[-37,5],[-9,32],[-16,23],[-18,48],[-31,-1],[-17,-11],[-8,16],[13,51],[26,40],[44,31],[20,36],[20,59],[63,55],[91,138],[75,44],[27,48],[44,21],[38,37],[29,4],[54,34],[30,40],[-20,2],[-47,-26],[-27,-10],[2,43],[13,44],[39,40],[186,117],[19,-19],[22,-35],[56,8],[64,66],[49,72],[-26,-12],[-29,-30],[-57,-41],[-26,-6],[-15,5],[-8,28],[-20,8],[-18,-6],[-18,20],[-3,48],[23,71],[19,47],[20,36],[78,101],[17,56],[36,29],[46,-7],[14,9],[-16,36],[-50,29],[-3,18],[167,47],[80,-1],[24,23],[43,15],[33,29],[-17,13],[-81,-26],[-51,-13],[-23,0],[-18,-9],[-64,-3],[-14,115],[10,63],[24,-2],[5,60],[28,35],[39,8],[19,15],[28,31],[46,-7],[48,7],[-12,14],[-59,19],[-14,32],[20,17],[23,13],[20,3],[40,62],[24,27],[26,-5],[38,28],[37,-10],[35,18],[49,12],[178,5],[5,25],[-38,6],[-132,7],[-67,-1],[-29,-7],[-10,9],[2,16],[24,24],[12,26],[49,65],[58,44],[44,-11],[46,-42],[34,-5],[15,-13],[25,-57],[11,-2],[-5,55],[32,44],[-8,13],[-49,-16],[-37,16],[-29,34],[-8,31],[18,30],[17,15],[-11,18],[-74,-48],[-51,-11],[-21,7],[11,43],[-6,34],[70,85],[23,9],[39,-6],[35,-24],[30,4],[32,12],[-5,23],[-69,9],[-18,19],[7,19],[47,19],[48,36],[54,10],[43,27],[8,-6],[8,-11],[15,-99],[39,-81],[15,-3],[-15,69],[14,20],[17,15],[6,17],[-20,6],[-17,24],[-24,79],[9,21],[51,41],[64,10],[68,-29],[24,-1],[40,8],[67,24],[40,10],[20,0],[5,12],[-19,8],[-6,7],[-15,5],[-62,-13],[-172,4],[-16,14],[-3,24],[18,34],[20,20],[65,34],[68,5],[72,61],[28,45],[15,71],[44,57],[111,32],[4,14],[-12,30],[1,53],[31,63],[20,21],[9,3],[24,-21],[29,-43],[45,-24],[59,-5],[16,12],[-46,25],[-35,32],[-3,33],[17,17],[25,-2],[33,4],[30,21],[4,16],[1,20],[8,22],[44,50],[136,33],[10,-14],[-7,-97],[-16,-63],[0,-46],[27,46],[35,126],[27,59],[30,34],[22,8],[21,17],[28,11],[9,-14],[9,-31],[-16,-110],[2,-35],[-17,-46],[-65,-104],[3,-13],[15,5],[25,17],[80,98],[70,-12],[1,8],[-22,29],[-28,28],[-8,34],[4,91],[21,37],[60,-4],[37,5],[17,-17],[36,1],[25,66],[50,6],[44,-44],[52,-29],[43,-42],[12,12],[-23,98],[-25,35],[-54,19],[-58,44],[-15,19],[3,15],[50,14],[68,-16],[59,36],[17,-10],[46,19],[28,-25],[17,7],[11,35],[73,21],[46,-20],[25,-20],[12,-39],[17,-78],[36,-42],[23,-21],[27,-5],[12,21],[-24,25],[-7,24],[12,59],[14,23],[78,87],[66,46],[39,4],[68,102],[20,18],[18,5],[-5,24],[-37,16],[-2,31],[50,38],[60,63],[30,4],[18,-17],[59,-29],[35,-33],[26,-16],[17,3],[14,25],[17,11],[37,-6],[22,-16],[18,-2],[15,-9],[4,-21],[-32,-23],[-55,-61],[-54,-69],[-18,-36],[-17,-95],[-43,-61],[-3,-43],[17,-20],[47,16],[57,57],[15,60],[143,164],[68,91],[76,75],[43,15],[21,-49],[-17,-65],[-32,-41],[24,-19],[-5,-50],[-7,-27],[-5,-28],[0,-26],[23,7],[89,52],[23,56],[21,42],[10,36],[35,34],[66,0],[3,14],[-80,47],[-9,22],[27,28],[73,55],[38,-6],[23,-13],[91,-9],[69,-39],[-2,-61],[-16,-26],[-15,-15],[-89,-47],[-15,-22],[28,-8],[60,23],[16,-21],[-19,-53],[-4,-78],[-7,-46],[0,-42],[8,-23],[24,90],[8,22],[36,34],[13,68],[34,81],[39,47],[23,13],[75,-2],[33,-18],[28,-39],[21,-16],[67,-17],[24,-21],[4,-12],[16,-3],[45,30],[30,5],[48,-46],[-10,-35],[3,-11],[58,2],[48,-13],[92,-71],[10,-33],[-5,-40],[-132,-44],[-57,-42],[-94,-16],[-318,28],[7,-31],[221,-66],[13,-19],[-7,-40],[-1,-33],[5,-22],[16,-20],[27,-10],[55,5],[27,-11],[19,17],[7,55],[16,12],[31,-16],[13,-59],[9,-6],[15,42],[31,-3],[33,3],[43,-7]],[[58045,91602],[-20,22],[-17,34],[4,33],[50,64],[46,45],[13,16],[27,46],[-54,114],[-94,34],[-108,53],[-40,28],[-62,58],[-43,52],[-40,1],[-43,-13],[-68,-47],[-39,-24],[-22,-7],[-5,-1],[-49,14],[-54,3],[-43,-4],[-16,-7],[-61,-76],[-42,-39],[-23,-14],[-17,-22],[-14,-37],[-31,-128],[-23,-48],[-5,-30],[5,-89],[-5,-50],[-28,-40],[-20,-19],[-27,-4],[-34,-10],[-30,-24],[-21,-32],[-24,-73],[-40,-26],[-39,7],[-28,27],[-59,21],[-44,13],[-49,28],[-44,22],[-39,4],[-23,-27],[-18,-26],[-68,-21],[-39,-16],[-50,-4],[-20,19],[-72,12],[-86,14],[-25,0],[-8,32],[-23,46],[-61,79],[-25,28],[-48,65],[-55,67],[-7,2],[-37,2],[-54,-2],[-34,-15],[-22,-20],[-4,-15],[21,-61],[-6,-16],[-11,-7],[-49,17],[-59,-1],[-15,-19]],[[51377,87030],[-25,-8],[-19,6],[7,55],[10,9],[15,4],[16,-30],[-4,-36]],[[51412,86582],[1,-68],[-25,5],[-12,26],[-3,17],[2,39],[-6,41],[7,20],[10,3],[16,-36],[10,-47]],[[58321,92048],[-53,-17],[-6,14],[11,22],[14,44],[22,-2],[22,-17],[17,-20],[-27,-24]],[[53324,89646],[-18,-18],[-35,5],[-3,15],[9,31],[21,13],[27,-3],[9,-13],[-10,-30]],[[52352,88517],[-31,-1],[-20,13],[46,25],[72,25],[6,15],[9,2],[12,-19],[2,-26],[-8,-13],[-88,-21]],[[52250,88327],[-27,0],[-32,9],[-21,19],[-3,16],[38,21],[37,12],[18,-23],[1,-37],[-11,-17]],[[56511,92635],[-6,-18],[-9,-18],[-23,-18],[-66,-74],[-38,-11],[-13,-12],[-15,-7],[-48,10],[-14,-15],[-14,-10],[-34,-4],[-21,4],[-53,27],[-31,29],[-17,26],[49,-1],[17,6],[33,-5],[19,26],[42,-3],[80,18],[29,-10],[67,60],[21,-2],[32,17],[13,-15]],[[57107,92823],[74,-22],[25,0],[37,-41],[19,4],[-3,-25],[-37,-12],[-58,-7],[-9,-5],[-49,4],[-28,33],[-47,9],[0,11],[30,25],[46,26]],[[56559,92482],[5,-27],[2,-23],[-26,-32],[-59,-42],[3,-11],[-20,-11],[-31,-8],[-17,8],[2,36],[-5,11],[-23,-15],[-24,19],[-1,18],[7,16],[23,25],[37,16],[25,-6],[83,65],[9,-14],[10,-25]],[[56671,92492],[-53,-23],[-31,20],[-13,20],[-1,45],[7,27],[25,15],[16,-11],[4,-8],[29,-9],[34,-28],[-17,-48]],[[53853,91166],[17,-10],[43,3],[8,-4],[-6,-16],[-19,-18],[-39,-11],[-18,-27],[-12,-9],[-34,-1],[-20,-6],[-25,-24],[-20,18],[-5,-13],[-4,-23],[-11,-6],[-34,-9],[-8,53],[16,20],[12,22],[19,4],[17,-2],[30,50],[42,14],[26,1],[25,-6]],[[53603,90941],[-41,-31],[15,56],[22,56],[30,32],[16,-12],[-7,-27],[0,-27],[-7,-13],[-28,-34]],[[54224,91556],[36,-58],[16,-34],[-13,-64],[-35,-32],[-54,-6],[-38,3],[-24,16],[-3,17],[-14,5],[-37,-22],[-25,-3],[-32,17],[-9,28],[34,35],[16,27],[38,-3],[10,-8],[21,-5],[13,32],[-3,23],[10,15],[46,-11],[0,61],[17,5],[8,-3],[13,-13],[9,-22]],[[55490,92290],[15,-7],[14,4],[11,-6],[23,-30],[25,-12],[2,-15],[-23,-15],[-31,-4],[-32,5],[-9,19],[-10,31],[-27,31],[-4,27],[23,5],[23,-33]],[[55771,92217],[-15,-14],[-23,-5],[-12,8],[-17,6],[-20,-3],[-16,25],[1,20],[23,28],[45,16],[36,-6],[10,-9],[-12,-66]],[[55348,92203],[25,-31],[22,3],[6,12],[15,6],[30,-17],[-4,-28],[-42,-36],[-30,-50],[-38,-12],[-18,6],[-35,-29],[-27,-31],[-28,-38],[-2,-20],[-5,-15],[-104,-15],[-37,-10],[-40,12],[-19,26],[6,14],[40,5],[1,24],[10,14],[13,8],[9,30],[16,8],[30,-7],[20,22],[11,3],[14,-18],[6,25],[-6,23],[3,15],[38,40],[17,29],[24,19],[22,-3],[7,28],[-7,28],[3,18],[20,45],[22,2],[11,-40],[1,-65]],[[53474,89805],[-22,-2],[0,23],[13,22],[20,14],[26,4],[29,2],[9,-12],[-17,-16],[-58,-35]],[[53449,89886],[-25,-4],[4,26],[21,24],[8,16],[4,20],[18,14],[26,-19],[1,-31],[-13,-30],[-44,-16]],[[53119,89208],[-14,-16],[-33,13],[-63,-10],[-26,15],[20,31],[58,32],[31,-2],[31,-39],[-4,-24]],[[54861,91933],[34,-33],[15,10],[29,3],[22,-11],[18,-21],[22,-1],[13,-27],[7,-36],[-16,-27],[-22,-12],[-6,-31],[9,-44],[-49,-15],[-58,-7],[-22,21],[-45,-38],[-46,-60],[-21,-7],[-2,19],[-32,13],[-42,1],[1,14],[8,10],[36,15],[7,30],[-7,54],[7,26],[1,19],[23,21],[77,-10],[9,20],[-6,13],[-39,22],[6,15],[28,14],[28,2],[8,22],[1,10],[4,6]],[[54377,91336],[4,-4],[38,56],[41,17],[3,19],[16,19],[-2,31],[9,24],[21,7],[13,8],[15,5],[27,-20],[15,-22],[19,-50],[-8,-48],[-50,-38],[-40,-17],[-41,-43],[-20,-35],[-17,-8],[-11,3],[-10,9],[-21,0],[-22,-31],[-68,-25],[-27,7],[-1,31],[-16,-3],[-26,-36],[-25,-12],[-16,-4],[-31,14],[-83,-63],[-78,-11],[-25,7],[0,38],[50,49],[41,34],[142,23],[88,101],[21,109],[21,39],[-10,23],[-24,4],[-1,34],[12,37],[47,51],[25,22],[42,62],[20,14],[23,0],[23,-16],[-4,-33],[-34,-60],[-50,-51],[6,-37],[20,-30],[5,-51],[1,-50],[-38,-66],[-9,-33]],[[47512,92649],[-25,-4],[-15,13],[37,35],[124,66],[49,63],[95,22],[6,-35],[-6,-44],[-84,-35],[-92,-23],[-89,-58]],[[55338,94695],[-33,-23],[-51,34],[-33,43],[18,16],[89,3],[22,-23],[4,-13],[-16,-37]],[[57465,97147],[-41,-1],[-75,42],[-14,37],[13,15],[36,1],[57,-51],[61,-15],[-37,-28]],[[59034,97994],[-263,-22],[-27,16],[427,63],[22,6],[80,8],[68,-14],[-20,-11],[-287,-46]],[[56002,97117],[38,-14],[83,3],[45,-98],[26,-103],[41,-8],[80,15],[70,7],[36,-8],[65,-30],[28,-21],[-24,-17],[-59,-19],[-10,-55],[59,-20],[98,-47],[56,-6],[98,19],[93,-37],[92,-45],[-215,-56],[-19,-16],[-29,-42],[-32,-35],[-29,-20],[-64,-35],[-35,-13],[-78,3],[-29,-14],[-27,-28],[-27,-21],[-69,-5],[-35,28],[12,9],[5,17],[-13,40],[66,40],[15,23],[-13,8],[-18,-2],[-48,12],[-14,0],[-40,-24],[-55,-16],[-55,-4],[-224,-31],[-34,11],[-15,61],[91,31],[14,53],[23,35],[26,23],[50,60],[12,4],[-123,48],[-48,31],[-53,61],[-17,50],[-71,42],[9,54],[-52,-4],[-41,38],[38,21],[190,24],[113,24],[43,-1]],[[55804,98069],[28,-6],[153,2],[30,-14],[11,-34],[24,-12],[32,-3],[81,-42],[28,-6],[24,23],[19,58],[0,68],[-7,33],[9,21],[27,8],[34,-2],[34,12],[29,21],[31,3],[67,-16],[18,-13],[-18,-25],[-7,-37],[-31,-75],[66,-4],[93,15],[24,22],[50,35],[53,-5],[25,4],[13,15],[5,18],[29,-3],[40,-34],[19,-6],[34,9],[13,0],[34,-14],[157,-25],[54,-14],[24,-12],[23,-8],[167,1],[118,-9],[43,-20],[37,-38],[14,-88],[-33,-24],[-239,-108],[-60,-35],[-29,-32],[-48,-70],[-24,-21],[-112,-34],[-26,-3],[-84,16],[-25,-2],[-102,-36],[-36,-22],[-34,-27],[-51,-13],[-53,7],[-237,14],[-32,20],[-26,37],[47,48],[-265,-18],[-292,10],[-15,6],[-13,19],[-100,12],[-75,15],[-64,26],[-62,33],[20,15],[20,9],[54,4],[48,-4],[85,0],[20,33],[34,10],[27,24],[-90,15],[-94,2],[-62,-20],[-73,-9],[-66,-1],[-127,6],[-60,14],[-83,36],[-28,21],[-11,16],[-9,24],[95,21],[36,17],[36,24],[-142,13],[-60,19],[-59,29],[48,16],[192,13],[51,-11],[50,-21],[56,-12],[53,27],[-50,12],[-46,45],[-9,22],[6,17],[23,3],[18,-7],[67,-42],[51,-14],[14,39],[2,19],[-9,15],[-24,28],[-21,35],[33,9],[33,-4],[70,-24],[71,-17],[32,-16],[61,-42],[56,-29]],[[54662,97872],[15,-1],[14,6],[10,16],[11,9],[71,-11],[99,-32],[30,-16],[41,-33],[34,-55],[-27,-40],[-35,-37],[-12,-21],[13,-30],[-6,-29],[-13,-26],[54,29],[114,94],[17,6],[18,-3],[51,-19],[46,-48],[11,-16],[8,-20],[5,-24],[-3,-28],[-4,-19],[-25,-12],[-11,-12],[26,-1],[30,-15],[27,-31],[31,-13],[111,11],[73,-17],[39,-52],[62,12],[0,27],[13,12],[82,-9],[43,-13],[43,-27],[-74,-45],[61,-43],[103,-31],[61,-33],[12,-14],[10,-18],[-40,-24],[-41,-13],[-104,-2],[-93,-17],[-172,-12],[-26,-7],[-6,-7],[-10,-21],[-66,-47],[-64,-58],[-26,-35],[-20,-49],[-8,-29],[15,-29],[-4,-30],[-48,-23],[-31,0],[-38,4],[-38,-13],[-2,-20],[2,-28],[-9,-85],[-12,-65],[-18,-59],[-19,-33],[-25,-9],[-81,-5],[-62,-57],[-50,-100],[-26,-39],[-55,-62],[10,-22],[17,-24],[-30,-43],[-46,-48],[1,-19],[16,-34],[7,-35],[-35,-30],[-66,-16],[-66,17],[-32,21],[-30,32],[-32,22],[-33,13],[-127,72],[-117,114],[-108,45],[-69,21],[-34,20],[-33,28],[-28,31],[-27,39],[-12,24],[-3,36],[9,21],[12,11],[85,9],[31,-5],[30,-19],[27,-7],[63,94],[357,54],[115,9],[115,0],[-18,25],[-15,33],[-17,7],[-87,-18],[-133,-19],[-65,0],[-67,13],[-67,-7],[-69,-28],[-69,-17],[-68,-7],[-143,3],[-35,14],[-48,33],[-11,17],[-10,21],[-9,63],[10,17],[14,9],[15,6],[32,1],[31,-11],[72,-36],[-17,39],[208,46],[96,40],[49,6],[50,-2],[-11,21],[0,20],[35,16],[25,7],[77,8],[174,-2],[62,11],[47,28],[-50,-10],[-50,-2],[-23,6],[-53,24],[-24,31],[68,63],[24,30],[-70,-5],[-23,-10],[-80,-58],[-60,-26],[-73,-12],[-73,1],[-16,8],[-22,39],[-7,20],[3,11],[23,31],[12,34],[-2,29],[-17,5],[-27,-28],[-25,-39],[-33,-20],[-35,6],[-15,15],[-13,23],[-13,9],[-15,0],[-31,-9],[-31,-18],[11,-25],[3,-29],[-14,-23],[-10,-28],[32,-17],[26,-28],[-39,-13],[-38,-18],[-34,-29],[-36,-23],[-56,-2],[-70,-12],[-141,-5],[-66,37],[-12,17],[-13,12],[-44,19],[-63,57],[-50,64],[-33,6],[-49,21],[-27,19],[-25,24],[-8,29],[3,26],[29,12],[-69,29],[-68,39],[25,13],[25,6],[202,-46],[14,6],[22,23],[-8,7],[-34,5],[-46,0],[-11,5],[-18,24],[-16,30],[-6,20],[-3,23],[34,35],[19,32],[-29,14],[-83,-1],[-28,-4],[10,-45],[-26,-31],[-51,-25],[-36,12],[-28,60],[-37,41],[-14,26],[-10,38],[-15,27],[-27,33],[-3,20],[3,16],[20,34],[-15,28],[-19,25],[-1,14],[18,18],[16,6],[17,-2],[51,-21],[28,-25],[9,2],[19,38],[25,8],[100,12],[111,-48],[29,-10],[23,-4],[-12,21],[-7,28],[17,10],[89,-24],[42,1],[98,33],[163,16],[62,-25],[3,-14],[-2,-18],[-3,-5],[-36,-22],[-206,-17],[-134,-66],[183,10],[33,-7],[14,-55],[13,-5],[48,-8],[32,-16],[32,-31],[34,-21],[21,3],[7,22],[-8,27],[-5,30],[3,33],[5,27],[39,19],[56,62],[59,42],[66,-19],[62,-53],[55,-74],[53,-80],[60,-99],[29,-35],[27,-8],[121,-103],[13,-3],[-25,78],[-62,133],[-43,102],[-9,39],[-7,54],[3,16],[5,14],[31,59],[40,28],[-12,40],[10,31],[42,24],[39,2],[38,-19],[73,-65]],[[53125,97125],[3,-40],[45,4],[53,-42],[58,-22],[17,-16],[12,-20],[35,-40],[17,-42],[-42,-4],[-58,60],[-47,34],[-60,29],[-48,2],[-21,12],[-78,105],[-15,24],[-44,39],[-20,48],[0,38],[60,-9],[52,-24],[45,-54],[9,-16],[-21,-22],[21,-27],[27,-17]],[[55205,98099],[-60,-32],[-100,25],[12,25],[23,15],[64,-6],[61,-27]],[[58068,97299],[83,-4],[83,9],[14,-9],[-107,-31],[-119,16],[-107,4],[-127,-33],[-42,13],[65,33],[70,10],[11,20],[27,4],[93,2],[56,-34]],[[85175,73606],[-3,5],[-14,4],[-56,47],[-46,-29],[-12,-37],[-12,-12],[-19,73],[-30,2],[-48,65],[-21,-13],[-5,-26],[-26,-60],[-37,-48],[-12,-7],[-13,3],[2,14],[-15,55],[-58,22],[-21,23],[-11,6],[57,61],[15,11],[-11,14],[-12,7],[-47,-9],[-24,20],[-36,-7],[-24,16],[51,60],[2,36],[-1,27],[26,80],[26,44],[67,62],[30,9],[21,-3],[17,6],[-18,24],[-18,11],[-35,-2],[-36,36],[-3,38],[70,240],[1,22],[-11,58],[-3,57],[-51,33],[-22,4],[-64,64],[-26,33],[-10,-10],[-2,-51],[-9,-12],[-17,-10],[-9,59],[-14,42],[-42,44],[-16,23],[8,52],[-4,4]],[[84544,74886],[7,58],[26,45],[64,79],[17,37],[33,44],[14,-1],[16,4],[4,19],[4,15],[13,13],[31,25],[36,31],[28,9],[35,48],[14,21],[15,0],[3,10],[9,24],[11,16],[15,3],[25,12],[32,7],[22,40],[7,29],[14,31],[31,34],[20,51],[24,55],[11,18],[10,3],[7,21],[7,59],[11,56],[6,27],[27,30],[7,14],[6,5],[12,-4],[16,17],[16,19],[14,-7],[15,-15],[15,-32],[7,-25],[12,-21],[2,-30],[12,-14],[25,-6],[42,-21],[27,-1],[15,-16],[32,-8],[64,12],[26,-7],[11,-19],[17,-16],[10,-1],[14,27],[16,42],[10,32],[-1,26],[-9,28],[-21,25],[-14,40],[-13,41],[-8,14],[-6,20],[-1,30],[4,21],[32,14],[41,8],[33,-9],[56,6],[34,12],[25,-2],[23,0],[11,18],[32,42],[16,15],[17,29],[3,30],[3,24],[10,26],[17,32],[14,15],[16,-2],[17,-15],[11,-14],[12,4],[10,25],[7,5],[19,2],[6,16],[8,74],[7,59],[2,40],[17,68],[6,41],[10,19],[12,-1],[10,-12],[12,-7],[17,6],[12,-10],[7,-22],[25,-15],[2,-11],[0,-74],[13,-34],[18,-31],[25,-29],[14,-6],[8,-20]],[[86301,76210],[-14,-16],[-19,10],[-31,6],[-39,-51],[-22,-17],[-16,-50],[-31,-30],[-17,-31],[-22,-54],[-14,-53],[-33,-54],[-20,-67],[-1,-58],[21,-59],[2,-51],[-15,-104],[9,-110],[-10,-43],[-102,-76],[-26,-37],[-38,-98],[-46,-36],[-28,-40],[-39,-24],[-26,-69],[-27,-39],[-33,-24],[-25,-30],[-55,-2],[-39,-21],[-27,-58],[-83,-66],[-12,-49],[6,-77],[0,-58],[-7,-49],[-18,14],[-10,-16],[-11,-44],[4,-51],[28,-17],[23,-20],[33,-11],[24,-24],[52,-107],[42,-47],[11,-17],[24,-24],[22,-37],[13,-33]],[[84695,74617],[-16,-17],[0,30],[12,25],[12,3],[-8,-41]],[[52027,54388],[-26,-18],[-18,4],[24,77],[12,-17],[16,-7],[-8,-39]],[[53779,59737],[44,-124],[47,-133],[36,-104]],[[53906,59376],[27,-268],[3,-51],[2,-23],[2,-21],[3,-37],[21,-16],[40,-7],[29,-26],[17,-44],[1,-7],[9,-34],[3,-24],[-3,-71],[-6,-90],[-10,-58],[6,-79],[-2,-34],[-4,-23],[-18,-27],[-24,-26],[-57,-76],[-17,-12],[-24,-2],[-21,-19],[-25,-41],[-53,-154],[-46,-154],[-16,-128],[-17,-122],[-40,-78],[-6,-44],[-2,-25],[-1,-59],[-5,-97],[-6,-47],[-7,-14],[-43,-30],[-25,-35],[-15,-71],[-5,-77],[-9,-87],[-5,-76],[-7,-40],[-14,-42],[-22,-44],[-19,-26],[-50,-16],[-26,-101],[-21,-79],[-1,-32],[-21,-164],[-36,-124],[-3,-44],[0,-35],[-45,-109],[-12,-32],[-12,-42],[12,-41],[12,-37],[2,-12],[-20,-35],[-36,-60],[-22,-36],[-5,-20],[-3,-90],[-6,-25],[-14,-33],[-21,-37],[-22,-28],[-24,-20],[-23,-7],[-13,12],[-8,27],[-13,111],[-7,24],[-15,21],[-30,61],[-30,61],[-36,43],[-8,-3],[-6,-12],[-11,-61],[-10,-23],[-19,-8],[-33,0],[-25,8],[-5,13],[-5,26],[-7,22],[-29,-43],[-46,-68],[-15,-12],[-11,-13],[-15,-64],[-18,-68],[-24,-35],[-23,-30],[-14,-26],[-19,-31],[-37,-77],[-50,-102],[-17,-53],[-18,-78],[-10,-87],[-11,-96],[-16,-153],[-24,-87],[-20,-69],[-16,-54],[-8,-45]],[[52376,54582],[-3,1],[-8,-19],[-23,13],[-11,39],[-14,6],[-25,57],[-5,-9],[26,-145],[-10,-57],[-73,-1],[-64,-19],[-43,1],[-22,21],[-10,54],[-3,-5],[-3,-30],[-13,-22],[-49,-5],[-22,37],[-17,42],[-19,18],[3,-17],[22,-41],[-3,-58],[-39,-67],[-25,-4],[-16,29],[-8,47],[-4,70],[-10,46],[-6,0],[5,-42],[2,-34],[0,-71],[19,-55],[-29,-17],[-11,-1],[-23,-1],[-4,20],[-5,46],[-6,12],[-7,-78],[-15,-5],[-10,1],[-46,-17],[-10,3],[-2,14],[6,22],[-2,35],[-15,-27],[-3,-54],[-9,-8],[-27,7],[-29,28],[-18,28],[-30,39],[-58,111],[-10,49],[-17,61],[-12,62],[-18,105],[5,8],[14,-9],[7,15],[-25,12],[-5,12],[-1,37],[1,45],[19,16],[18,8],[8,27],[5,28],[-45,-42],[-43,47],[-9,29],[4,22],[21,3],[29,-1],[17,21],[-10,8],[-19,-1],[-7,14],[0,34],[-6,-7],[-8,-31],[-29,-22],[-16,22],[-2,50],[-4,23],[-14,17],[-50,132],[-63,110],[-57,76],[-84,36],[-178,-2],[-10,11],[11,17],[16,12],[57,61],[-10,8],[-59,-38],[-21,-4],[-26,-74],[-156,-12],[-19,-3]],[[50751,55512],[1,33],[7,97],[5,38],[6,29],[-6,34],[-6,47],[-3,74],[8,22],[2,28],[-1,43],[0,145],[4,16],[5,12],[0,20],[-9,37],[-9,43],[0,61],[-3,60],[-6,27],[4,102],[3,128],[-3,57],[6,40],[3,100],[0,97],[11,153],[35,7],[40,13],[19,60],[10,77],[-3,75],[8,25],[16,41],[29,58],[-1,64],[8,20],[14,15],[20,8],[23,32],[12,56],[12,89],[-19,63],[0,13],[8,34],[11,34],[10,10],[22,-8],[3,3],[4,10],[14,99],[-2,27],[-20,66],[-3,47],[-3,70],[-5,62],[-6,23],[-11,20],[-5,13],[-42,126],[1,60],[18,76],[11,37]],[[50998,58580],[16,21],[3,17],[-4,22],[-8,16],[-2,34],[2,23],[6,25],[-2,53],[0,80],[3,118],[0,71],[35,53],[49,89],[25,91],[14,70],[17,232],[12,14],[14,11],[50,84],[38,31],[29,18],[44,16],[28,-6],[49,-4],[40,8],[33,46],[15,13],[21,8],[96,-62],[96,-59],[18,6],[14,-8],[24,-32],[36,-68],[21,-44],[10,-26],[50,-148],[18,-37],[18,-20],[19,-7],[15,2],[13,17],[19,33],[28,15],[23,-3],[120,133],[12,1],[34,-10],[39,-18],[100,-134],[82,-87],[58,-29],[67,-21],[116,-6],[87,187],[32,41],[39,37],[12,6],[68,28],[135,24],[125,-10],[25,-8],[54,-24],[82,-61],[36,-59],[55,-9],[40,11],[14,58],[40,76],[29,31],[31,40],[49,49],[40,22],[37,57],[28,17],[50,2]],[[50998,58580],[-17,53],[-23,37],[-25,16],[-17,27],[-9,37],[-33,73],[-75,144],[-8,3],[-12,6],[-22,-17],[-13,-24],[-9,-9],[-14,-1],[-36,-19],[-28,-23],[-1,-19],[14,-109],[-7,-59]],[[50663,58696],[-13,28],[-41,110],[-29,81],[-5,18],[-4,28],[3,12],[11,9],[27,11],[5,8],[1,23],[-4,41],[-15,57],[-15,37],[-8,7],[-16,2],[-17,-5],[-32,-46],[-14,-9],[-33,4],[-30,9],[-18,24],[-53,91],[-59,96],[-25,13],[-5,10],[-4,74],[1,89],[3,23],[25,-14],[26,-6],[8,16],[-21,32],[-30,32],[-11,48],[-9,17],[-13,17],[-16,9],[-15,14],[-11,14],[-17,6],[-19,10],[-26,79],[-26,76],[-16,60],[-5,36],[8,62],[-8,24],[-29,62],[-24,59],[6,89],[5,75],[0,47],[4,27]],[[50060,60432],[3,30],[16,10],[41,-1],[79,-14],[64,16],[3,3],[45,80],[50,84],[74,8],[81,9],[64,4],[92,7],[75,5],[86,7],[3,38],[5,10],[9,1],[63,-21],[60,-20],[4,73],[53,92],[30,18],[7,16],[9,31],[6,48],[3,34],[11,28],[8,52],[11,90],[29,95],[17,129],[3,125],[3,95],[9,19],[0,168],[-1,170],[0,143],[0,178],[-1,156],[0,169],[0,152],[0,101]],[[51174,62870],[60,24],[63,25],[92,36],[99,39],[108,43],[25,26],[81,146],[37,66],[74,130],[56,101],[72,128],[76,129],[61,103],[95,117],[144,176],[144,176],[144,175],[143,176],[144,176],[144,176],[144,176],[144,176]],[[53324,65390],[145,-67],[137,-64],[138,-64],[33,-35],[73,-125],[94,-160],[4,-3],[4,0],[91,94],[117,123]],[[54160,65089],[31,-333],[23,-285],[2,-183],[1,-47],[9,-32],[22,-33],[87,-263],[-19,-46],[13,-81],[23,-35],[72,-157],[10,-31],[-4,-25],[-51,-185],[-9,-45],[-10,-235],[-7,-167],[-10,-228],[-11,-273],[-10,-230],[-12,-304],[-12,-289],[-73,-158],[-129,-280],[-105,-229],[-53,-153],[-103,-298],[-46,-194],[-36,-100],[-18,-44],[16,-141],[28,-248]],[[26900,60479],[-7,-21],[-9,-14],[-18,-69],[-6,-6],[-1,51],[-10,7],[-13,-18],[-7,-26],[11,-35],[10,0],[11,-9],[31,-236],[-7,-42],[-19,-65],[-18,-56],[-18,-35],[-23,-148],[-20,-241],[14,-217],[-7,-200],[6,-48],[2,-59],[-15,-10],[-8,1],[-9,37],[1,31],[9,38],[4,50],[-5,27],[-9,-58],[-15,-26],[-10,-9],[-10,-29],[10,-55],[14,-40],[4,-29],[-5,-34],[-3,-117],[-5,3],[-5,16],[-14,1],[-2,-47],[1,-26],[-12,-21],[-4,-20],[10,-14],[11,-9],[13,2],[12,-58],[3,-47],[-26,-44],[-9,-36],[-14,-43],[-8,-43],[-3,-31],[10,-98],[18,-69],[15,-44],[20,-10]],[[26766,58131],[-5,-46],[-15,-29],[-27,-25],[-30,-4],[-49,23],[-20,3],[-8,12],[-3,23],[-14,34],[-25,45],[-15,-3],[-24,10],[-41,31],[-18,4],[-27,-27],[-31,-34],[-75,54],[-53,38],[-47,35],[-13,13],[-10,-3],[-9,-18],[-10,-32],[-4,-9],[-5,-9],[-6,-2]],[[26182,58215],[0,15],[-24,64],[-36,76],[-141,234],[-52,140],[-28,101],[-27,53],[-76,107],[-17,43],[-76,143],[-57,85],[-1,35],[24,45],[11,-2],[13,-32],[20,-36],[10,-1],[14,17],[0,17]],[[25739,59319],[78,7],[13,10],[14,26],[8,37],[1,35],[3,26],[12,25],[23,7],[17,3],[5,17],[-5,54],[-9,131],[-2,37],[3,27],[7,10],[34,6],[65,-11],[13,9],[26,74],[24,55],[17,25],[14,7],[15,-49],[55,-69],[9,4],[6,4],[1,10],[0,32],[13,29],[29,26],[28,47],[29,66],[25,39],[21,12],[8,18],[-5,24],[1,35],[9,46],[12,26],[16,7],[6,14],[-3,22],[3,23],[15,39],[34,33],[20,-12],[17,-44],[23,-30],[30,-16],[23,6],[17,28],[15,8],[13,-11],[7,6],[1,24],[7,5],[13,-13],[12,-3],[10,6],[4,12],[2,11],[7,9],[26,-9],[29,14],[33,35],[21,16],[11,-4],[12,18],[15,40],[34,18],[71,-9]],[[98087,28064],[32,-3],[29,43],[31,34],[32,28],[49,66],[12,9],[32,13],[14,15],[15,4],[-14,-39],[-17,-13],[-3,-14],[10,-22],[-15,-31],[0,-39],[-18,-46],[28,18],[10,30],[-5,17],[12,34],[18,16],[-7,25],[0,20],[23,-7],[11,0],[9,8],[16,4],[4,-23],[21,3],[-8,-28],[-16,-33],[-4,-20],[-27,-33],[-18,-14],[28,-4],[40,44],[24,39],[-1,-48],[-19,-44],[-17,-28],[-19,-8],[-18,-23],[-9,-36],[1,-25],[5,-19],[19,-32],[-21,-63],[24,8],[13,-12],[18,-36],[-11,-42],[-8,-22],[-47,-88],[-20,-44],[-24,-29],[1,-47],[-14,-34],[-70,-117],[-12,-25],[-55,-186],[-35,-78],[-20,-27],[-21,-22],[-51,-36],[-23,-43],[-25,-35],[-26,-8],[1,-15],[17,-9],[13,-23],[-10,-26],[-19,-16],[-19,-5],[-10,-17],[46,12],[13,-13],[3,-29],[5,-26],[11,-34],[39,-21],[35,-10],[7,-16],[5,-54],[-6,-27],[-8,-18],[-12,-6],[-28,-3],[-29,12],[-19,33],[-54,-11],[-15,-7],[-7,6],[30,35],[-16,19],[-13,8],[-14,-12],[-9,-18],[-3,-30],[-10,-17],[-15,-5],[-21,25],[-21,35],[-30,36],[4,-22],[24,-54],[12,-36],[-28,-29],[-28,-22],[-25,-13],[-22,-20],[-27,-32],[-15,-11],[-39,-1],[-21,-10],[-7,-42],[-15,-27],[-34,-5],[12,-8],[8,-14],[-23,-126],[-5,-53],[-4,-89],[-14,-83],[-41,0],[6,-15],[31,-23],[-6,-36],[-34,-64],[-14,-38],[-14,-90],[-20,-84],[-32,-95],[0,-17],[11,-24],[13,-21],[1,-30],[-4,-16],[-15,-4],[-13,-10],[-71,-26],[-24,-29],[-19,-53],[-22,-45],[-74,-100],[-44,-83],[-9,-24],[-12,-18],[-95,-39],[-68,-6],[-37,10],[-36,20],[-19,7],[-38,-12],[-16,-14],[-30,13],[-23,-10],[-7,10],[-9,25],[5,32],[-6,24],[-15,17],[-10,19],[-12,13],[-31,6],[-49,-9],[-16,1],[-34,80],[-11,20],[-39,25],[-14,-3],[-21,-43],[-13,-7],[-74,-5],[-75,14],[-28,16],[-5,37],[57,102],[-17,-14],[-35,-41],[-22,6],[21,45],[2,20],[-4,23],[-30,-38],[-33,-5],[-4,35],[3,41],[7,11],[89,22],[33,14],[14,22],[-54,7],[-3,31],[7,25],[46,41],[-33,-11],[-38,4],[3,43],[9,34],[40,1],[-13,23],[-1,33],[11,2],[39,-44],[29,-16],[-12,33],[2,21],[7,9],[24,7],[-7,6],[-22,8],[-26,25],[-3,26],[1,31],[28,42],[17,-25],[20,7],[-15,19],[-9,30],[6,19],[60,78],[15,-75],[4,25],[1,24],[-7,20],[1,21],[7,18],[25,17],[34,58],[25,26],[20,-17],[13,-23],[-2,23],[-9,19],[-3,53],[45,81],[49,78],[48,82],[25,29],[54,34],[34,-14],[9,3],[51,58],[21,16],[19,-21],[12,-8],[-12,54],[10,24],[42,44],[54,45],[40,19],[30,30],[18,1],[-3,23],[3,22],[16,-2],[5,9],[-14,12],[44,44],[24,48],[13,11],[11,14],[14,34],[17,11],[15,-5],[11,-17],[-6,28],[-20,15],[22,24],[22,16],[21,-12],[21,-19],[-21,30],[-3,18],[25,21],[14,6],[19,-39],[-2,31],[4,28],[28,45],[36,75],[11,-26],[2,-31],[-2,-39],[8,14],[2,34],[-5,61],[45,113],[8,12],[10,8],[16,3],[-5,17],[-12,17],[12,57],[8,65],[10,63],[17,62],[18,102],[14,22],[38,7],[16,15],[28,37],[32,67],[18,54],[23,140],[13,147],[37,108],[54,79],[48,60],[19,12],[33,4],[32,-17],[-59,-14],[-6,-36],[-2,-35],[7,-33],[11,-28],[28,-27],[33,-16],[15,-61],[3,-72],[5,-62],[13,-54]],[[98309,28304],[-38,-34],[2,23],[7,51],[17,26],[8,1],[17,20],[-1,-43],[-12,-44]],[[96317,25543],[-1,-28],[-3,-14],[-10,0],[-14,3],[-14,13],[-10,-4],[-7,5],[10,32],[33,17],[12,-14],[4,-10]],[[96382,25818],[12,-70],[-25,14],[-11,20],[20,35],[4,1]],[[96706,24848],[0,-23],[-29,9],[1,-26],[23,-14],[8,-18],[24,5],[5,-28],[-5,-24],[-16,-19],[-47,-9],[-31,-36],[-26,6],[-7,-3],[-30,-39],[-34,-12],[-9,3],[5,34],[25,33],[0,31],[7,25],[24,18],[0,33],[16,29],[-10,63],[6,56],[47,3],[53,-97]],[[98761,30944],[2,-31],[-21,11],[-8,24],[-24,24],[-4,8],[-2,48],[12,23],[2,10],[6,4],[10,-26],[19,-36],[8,-59]],[[98129,31719],[5,-26],[15,18],[11,30],[19,30],[-3,-48],[10,-11],[61,-34],[13,-28],[13,-8],[7,16],[9,8],[22,-18],[50,-49],[4,-17],[-2,-25],[2,-27],[7,-21],[17,-5],[22,31],[10,4],[15,-45],[6,-25],[-3,1],[10,-25],[12,-25],[22,-74],[-3,-26],[-6,-23],[20,-68],[-13,-5],[-40,12],[1,-14],[23,-50],[20,-70],[15,-43],[55,-132],[-8,-47],[1,-31],[-7,-26],[19,-70],[-12,-22],[-8,-72],[-8,-12],[1,-26],[22,-7],[13,-11],[12,-21],[7,25],[10,7],[26,-34],[55,-34],[15,-13],[8,-27],[5,-67],[11,-29],[21,-6],[23,9],[7,25],[-5,65],[-16,104],[0,34],[2,33],[-3,34],[-9,32],[-8,24],[-12,21],[4,32],[17,14],[10,-27],[9,-32],[42,-97],[26,7],[2,-40],[17,-41],[10,-47],[12,-143],[19,-133],[35,-59],[4,-28],[-21,15],[-7,-9],[2,-14],[20,-25],[23,-13],[14,2],[14,-9],[90,-87],[43,-34],[109,-56],[31,-4],[17,2],[33,19],[29,34],[25,52],[22,59],[23,28],[27,23],[14,21],[14,15],[73,-7],[25,-30],[32,-24],[16,-18],[-5,-38],[-19,-56],[-15,-61],[-13,-138],[-9,-141],[-13,-61],[-24,-48],[-27,-34],[-30,-17],[-12,-79],[-6,-93],[1,-24],[10,-18],[4,-28],[-16,-56],[-9,8],[-13,47],[-12,19],[-36,15],[-37,7],[-32,-5],[-31,-19],[-47,-41],[-14,-21],[-13,-25],[-21,-58],[-5,-71],[1,-38],[7,-28],[40,-40],[-39,-136],[-35,-143],[-20,-40],[-23,-38],[-21,-85],[-38,-74],[-25,-56],[-20,-59],[-17,-62],[-37,-88],[-16,-58],[-22,-48],[-40,-61],[-42,-53],[-67,-73],[-18,-24],[-20,-18],[-24,21],[-5,23],[-6,50],[-5,18],[-31,15],[-41,-24],[-7,5],[-2,11],[0,73],[7,20],[-9,12],[-10,-5],[-3,-18],[6,-16],[-23,-20],[-25,-1],[-7,8],[-2,13],[6,22],[8,20],[45,91],[47,122],[40,130],[11,67],[15,125],[-12,51],[-16,49],[-40,94],[-55,53],[-35,7],[-33,20],[-31,45],[-29,53],[-56,43],[-60,34],[-34,48],[-8,29],[-5,33],[0,30],[5,32],[6,24],[11,17],[63,62],[67,35],[12,-1],[12,6],[17,21],[30,48],[8,33],[6,104],[10,102],[17,116],[26,73],[9,44],[-11,73],[10,27],[12,17],[13,9],[-23,69],[-26,104],[-6,32],[4,32],[7,31],[-17,8],[-10,30],[-24,101],[7,16],[14,-11],[20,-73],[4,38],[16,23],[16,12],[18,2],[-40,82],[-14,-4],[-18,-12],[-19,-8],[-18,7],[-17,18],[-8,34],[-11,66],[-7,24],[-53,135],[16,4],[43,-67],[8,21],[7,31],[-3,35],[-10,26],[-15,17],[-1,30],[12,28],[-1,20],[-24,40],[-10,4],[-5,-18],[7,-28],[-6,-3],[-61,73],[-18,58],[-15,65],[-2,-26],[2,-37],[24,-74],[39,-82],[7,-22],[-6,-29],[-14,-8],[-11,18],[-18,71],[-13,35],[-148,365],[19,48],[29,41],[7,18],[5,22],[-13,3],[-11,-10],[-13,-18],[-11,-22],[-15,-47],[-7,-11],[-17,33],[-7,20],[0,24],[-4,16],[-13,5],[-19,48],[-12,24],[20,47],[1,62],[-21,65],[-24,60],[-47,96],[-43,102],[47,13],[47,2],[-22,-61],[10,-35],[15,-30],[32,-91],[3,-27],[16,-26],[8,-21]],[[96993,21602],[15,-29],[-29,-13],[-14,11],[-10,13],[-5,19],[15,-2],[14,8],[14,-7]],[[96172,22602],[6,-48],[-16,-1],[-32,14],[-9,21],[-7,5],[-12,-24],[-18,-1],[-5,8],[8,25],[44,49],[8,61],[-1,19],[35,5],[8,-7],[3,-9],[-2,-11],[-14,-20],[0,-23],[3,-24],[-11,-12],[6,-21],[6,-6]],[[1062,26647],[-10,-15],[-17,1],[-30,-59],[2,44],[-9,17],[-26,-4],[-4,-10],[17,-12],[4,-6],[-17,-25],[17,-55],[15,2],[14,-43],[0,-13],[-33,-16],[-17,-23],[-16,1],[-7,4],[-9,41],[0,17],[19,31],[11,30],[-9,28],[-22,19],[-48,-9],[-11,6],[24,39],[26,-5],[28,28],[108,-13]],[[1062,26312],[-12,-5],[1,33],[-4,21],[21,7],[9,-26],[-15,-30]],[[2089,46900],[-1,-1],[-1,6],[-2,7],[-1,7],[0,1],[3,-6],[2,-7],[0,-7]],[[2448,46454],[0,-2],[-2,3],[-2,5],[-1,6],[1,1],[2,-4],[1,-4],[1,-5]],[[2832,40850],[-28,-31],[-12,37],[11,48],[13,12],[8,2],[11,-45],[-3,-23]],[[5628,39602],[-9,0],[-12,4],[-7,3],[-1,5],[3,16],[6,9],[12,-2],[8,-11],[1,-19],[-1,-5]],[[51664,81077],[-28,1],[-26,1],[-14,3],[-15,9],[-7,18],[-8,21],[2,14],[25,37],[4,11],[-3,5],[3,17],[19,56],[2,23],[-8,16],[-13,9],[-40,17],[-19,23],[-8,21],[-9,6],[-13,-7],[-33,-8],[-27,11],[-32,39],[-7,35],[-4,26],[-8,10],[-11,-14],[-13,-22],[-27,-2],[-7,5],[-2,12],[-1,11],[-8,14],[-7,8],[-34,-40],[-13,1],[-16,15],[-8,15],[-17,-9],[-16,-18],[6,-35],[-9,-6],[-19,3],[-22,14]],[[51173,81443],[-24,9],[-37,24],[-51,-20],[-36,24],[-29,2],[-19,19],[-19,31],[14,21],[13,7],[54,4],[40,-13],[71,-68],[18,1],[19,8],[-10,19],[-18,9],[-26,18],[-21,26],[49,8],[-7,13],[-6,23],[-52,79],[9,22],[13,46],[16,38],[13,10],[22,27],[46,80],[30,65],[22,76],[32,212],[10,36],[15,40],[20,-8],[13,-11],[48,30],[83,78],[24,68],[24,31],[95,62],[52,18],[81,5],[59,11],[70,4],[27,-38],[15,-28],[25,-15],[39,-11]],[[51999,82535],[-3,-55],[1,-108],[-3,-19],[-18,-46],[-18,-81],[-5,-54],[-5,-11],[-74,1],[-10,-10],[-2,-11],[4,-14],[-2,-14],[-6,-11],[3,-18],[13,-20],[23,-13],[25,-1],[13,2],[9,-14],[10,-22],[-1,-29],[-4,-37],[-11,-35],[-34,-40],[-16,-14],[-14,-8],[-7,-10],[-3,-14],[1,-12],[24,-32],[-1,-7],[-7,-17],[-9,-16],[-62,-33],[-26,3],[-14,-16],[-5,-4],[-16,16],[-37,17],[-13,-6],[-8,-10],[-23,-11],[-16,-18],[0,-23],[29,-60],[10,-12],[0,-23],[14,-28],[15,-35],[1,-22],[-1,-23],[-8,-32],[-25,-75],[0,-15],[2,-11],[9,-3],[6,-6],[-2,-10],[-47,-52],[-6,-9],[-19,3],[-3,-9],[2,-14],[8,-13],[17,-6],[14,-13],[12,-26],[-16,-89]],[[51173,81443],[-4,-22],[-10,-24],[-37,-34],[-39,-23],[-19,3],[-14,12],[-7,12],[-21,12],[-28,6],[-18,-13],[-12,-12],[-11,2],[-8,10],[-7,16],[-8,50]],[[50930,81438],[21,9],[46,4],[35,-18],[46,-8],[36,24],[28,-21],[31,15]],[[51759,82667],[-39,-20],[-10,4],[3,6],[34,12],[12,-2]],[[51647,82637],[-55,-9],[-19,7],[-3,6],[15,4],[47,1],[14,-6],[1,-3]],[[51419,82550],[-52,-42],[-4,6],[33,37],[23,-1]],[[51479,82595],[-26,-5],[-12,8],[63,23],[39,7],[7,-3],[-71,-30]],[[51357,82413],[-28,-41],[-17,12],[-4,9],[8,32],[41,53],[0,-65]],[[51096,81646],[28,-31],[5,-10],[2,-11],[-34,-12],[-37,38],[-24,-9],[-9,18],[0,12],[25,9],[44,-4]],[[51870,82708],[-25,-2],[7,15],[24,12],[13,0],[-19,-25]],[[31054,58838],[-14,-64],[-8,28],[-1,52],[-6,20],[-11,12],[-6,17],[0,26],[42,-41],[4,-50]],[[32517,61921],[-7,-12],[-6,1],[-4,11],[0,20],[5,-6],[3,-2],[1,-4],[8,-8]],[[32435,61994],[-2,-2],[-4,5],[1,10],[3,4],[2,-3],[2,-7],[-2,-7]],[[30583,59015],[1,-16],[-13,9],[-17,35],[-17,27],[4,29],[4,10],[18,-27],[17,-50],[3,-17]],[[30902,58789],[-14,-8],[-54,56],[-44,90],[-1,47],[11,-4],[12,-18],[17,-64],[52,-42],[21,-57]],[[74474,67897],[11,-16],[2,-25],[-2,-29],[-12,-61],[-10,-44],[-13,-91],[-11,-158],[3,-28],[33,-91],[12,-69],[2,-48],[-14,-80],[-16,-90],[-8,-20],[-9,-7],[-40,31],[-28,-4],[-32,-18],[-34,4],[-27,10],[-35,-36],[-34,20],[-21,22],[-15,63],[-6,8],[-70,-66],[-17,-4],[-44,35],[-36,35],[-13,10],[-35,14],[-31,8],[-34,22],[-42,-29],[-17,3],[-16,20],[-8,42],[-2,40],[-15,27],[-22,6],[-31,-24],[-45,-33],[-15,6],[-13,9],[-5,9],[-7,37],[-7,9],[-10,1],[-19,9],[-23,27],[-70,66],[-9,29],[0,65],[-3,27],[-9,28],[-36,28],[-70,46],[-38,37],[-19,-17],[-35,-16],[-19,-33],[-23,11],[-54,34],[-29,6],[-18,-12],[-4,-20],[-22,-23],[-21,18],[-41,25],[-37,13],[-55,30],[-6,44],[-10,45],[-13,7],[-50,-8],[-45,48],[-49,63],[-21,20],[-13,8],[-12,-8],[-14,-15],[-12,-4],[-26,27],[-34,38],[-42,47],[-48,66],[-20,37],[-9,28],[-11,27],[-42,43],[-34,34],[-40,41],[-7,8],[-15,24],[-23,31],[-20,9],[-6,-17],[-4,-18],[-17,4],[-26,32],[-28,32],[-21,31],[-22,31],[-5,23],[9,71],[13,62],[11,13],[17,41],[7,71],[-1,61],[18,85],[23,91],[41,98],[18,32],[20,22],[37,72],[8,12],[17,19],[16,4],[12,-9]],[[72502,69218],[13,-37],[15,-36],[18,2],[22,30],[45,141],[63,29],[59,-15],[52,-20],[16,-47],[10,-50],[6,-25],[17,-29],[74,-71],[43,-64],[59,-85],[45,-37],[39,-3],[22,-34],[33,-66],[29,-77],[35,-71],[24,3],[33,23],[41,30],[24,-15],[22,-20],[7,-36],[13,-69],[15,-72],[23,-25],[28,-37],[15,-30],[51,-53],[8,-22],[10,-15],[13,-10],[10,-11],[16,-3],[60,32],[15,-4],[10,-6],[0,-12],[-11,-50],[-9,-65],[9,-32],[25,-14],[55,-9],[75,0],[22,-32],[23,-49],[22,-84],[9,-36],[12,-10],[19,14],[3,35],[1,51],[16,18],[11,-14],[12,-40],[30,-36],[23,-17],[21,6],[9,14],[10,70],[17,10],[21,-5],[8,-14],[9,-28],[25,-13],[26,-18],[24,-22],[33,-52],[42,-10],[48,1],[25,-1],[19,-4],[17,4],[49,37],[20,3],[25,-5],[24,-7]],[[96376,51545],[-5,-20],[-6,3],[-3,13],[2,14],[7,6],[5,-5],[0,-11]],[[57016,41593],[-12,3],[-85,-19],[-33,-25],[-73,-108],[-15,14],[-17,22],[-15,7],[-32,-27],[-32,-31],[-35,-44],[-29,-43],[-10,-23],[-45,-89],[-15,-15],[-13,-6],[-5,4],[-6,38],[-28,90],[-45,117],[-13,12],[-9,4],[-33,-6],[-96,-33],[-82,-28],[-124,-47],[-134,-39],[-83,-24],[-71,-7],[0,-116],[0,-235],[0,-235],[0,-235],[0,-235],[1,-235],[0,-235],[0,-235],[0,-235],[0,-102],[-2,-22],[-41,0],[-94,0],[-78,0],[-63,0],[0,-140],[0,-165],[0,-165],[0,-165],[0,-165],[0,-165],[0,-166],[0,-165],[0,-165],[1,-124],[0,-15]],[[54568,35358],[-31,47],[-91,175],[-32,46],[-48,107],[-105,334],[-15,64],[-20,161],[-23,120],[-3,69],[11,39],[-6,53],[-12,47],[-36,62],[-10,208],[-24,134],[5,110],[-11,101],[-1,65],[5,123],[-19,141],[-39,138],[-35,199],[-5,88],[3,235],[-6,95],[0,113],[-14,117],[-6,63],[10,51],[6,-16],[10,-8],[7,67],[1,59],[-17,146],[-39,149],[-97,244],[-24,92],[-13,77],[-108,321],[-46,226],[-33,196],[-35,90],[-162,634],[-36,101],[-65,121],[-15,41],[-25,115],[-48,155],[-12,144],[-4,164],[6,125]],[[53261,41906],[45,14],[31,33],[28,2],[27,-26],[29,-2],[12,4],[52,-3],[30,30],[36,30],[20,26],[29,27],[39,28],[21,-3],[27,-10],[36,-10],[20,-19],[24,-58],[36,-53],[28,-32],[31,-42],[9,-16],[14,-9],[8,-3],[58,7],[53,6],[56,0],[106,-1],[107,0],[106,0],[106,-1],[106,0],[107,0],[106,-1],[106,0],[44,0],[76,-2],[80,-2],[8,-3],[9,-12],[8,-10],[28,-73],[36,-77],[30,-36],[36,-22],[33,-8],[32,5],[52,-9],[73,-25],[76,-8],[78,11],[55,-14],[32,-38],[33,-25],[33,-13],[45,8],[57,28],[49,-4],[22,-21],[14,0],[83,30],[68,25],[101,39],[83,32],[123,47],[87,34]],[[59222,43770],[12,-17],[40,-142],[32,-83],[37,-77],[6,4],[10,18],[19,7],[57,18],[23,1],[14,20],[30,15],[34,9],[12,-10],[36,-99],[5,-77],[8,-110],[2,-54],[-1,-72],[-4,-90],[-29,-104],[-6,-51],[-16,-80],[-21,-39],[-10,-33],[1,-33],[11,-28],[24,-51],[8,-32],[-2,-29],[0,-40],[6,-27],[6,-16],[25,-26],[23,-65],[41,-78],[48,-111],[23,-34],[18,-8],[9,-38],[-5,-43],[-14,-25],[6,-35],[7,-19],[9,-9],[22,-2],[19,7],[5,12],[-2,167],[-15,97],[-14,38],[-3,7],[5,32],[16,75],[14,74],[8,31],[10,19],[67,20],[31,17],[12,21],[10,58],[8,160],[3,151],[-7,88],[10,133],[15,82],[-8,17],[-5,111],[-44,118],[-56,152],[-31,82],[-36,94],[-65,146],[-29,52],[-16,21],[-52,17],[-14,28],[-14,45],[-5,83],[0,62],[-6,105],[-11,149],[-5,44],[-15,112],[-14,107],[-1,26],[5,26],[24,79],[18,55],[8,31],[14,83],[4,40],[11,18],[46,8],[37,-2]],[[61239,45815],[15,-60],[26,-54],[-15,-31],[-19,-28],[30,-38],[-22,-57],[-3,-40],[6,-15],[5,-24],[-15,-65],[-20,-50],[-5,-38],[18,-68],[-9,-119],[17,-108],[4,-55],[6,-37],[-8,-67],[2,-111],[4,-46],[-10,-57],[17,-20],[9,-63],[-3,-71],[-5,-38],[-29,-46],[-4,-18],[1,-27],[36,-1],[2,-42],[-3,-33],[2,-63],[-5,-40],[8,-46],[-10,-51],[4,-40],[0,-51],[9,-130],[1,-160],[2,-25],[13,-18],[18,-9],[0,-44],[-21,-58],[-1,-35],[3,-50],[22,68],[14,-1],[12,-26],[-2,-39],[4,-20],[-2,-38],[7,-48],[-3,-42],[-16,-29],[-21,-50],[-4,-48],[2,-30],[-14,-10],[-7,-19],[10,-45],[-1,-39],[-25,-123],[-68,-167],[-30,-59],[-27,-65],[0,-27],[-3,-23],[-32,-92],[-34,-15],[-20,-25],[15,-81],[-22,-19],[-39,-64],[-106,-122],[-17,-29],[-27,-75],[-35,-19],[-20,-21],[-36,-8],[-12,6],[-12,-3],[-10,-16],[-70,-53],[-66,-42],[-16,-19],[-11,-26],[-58,-41],[-91,-103],[-74,-97],[-54,-98],[-14,-15],[-17,-33],[-5,-50],[-6,-28],[-40,-103],[-60,-121],[-11,-34],[-24,-67],[-2,-44],[-22,-14],[-18,42],[-7,-81],[-15,-6],[-16,17],[-40,-41],[-35,-46],[-56,-98],[-80,-191],[-116,-183],[-16,-5],[-10,0],[-37,64],[-20,5],[18,-38],[12,-32],[-3,-61],[1,-93],[-14,-181],[2,-40],[16,-51],[31,-62],[30,-79],[37,-224],[3,-115],[39,-147],[1,-64],[16,-159],[-1,-128],[-3,-79],[19,-33],[7,30],[-2,50],[5,80],[10,35],[11,-5],[3,-38],[7,-33],[3,-31],[0,-43],[-14,-162],[4,-66],[19,-110],[-22,-128],[-33,-301],[-1,-52],[7,-23],[18,-7],[6,38],[11,0],[5,-23],[-14,-139],[-15,-61],[-51,-149],[-27,-64],[-46,-63],[-106,-98],[-215,-142],[-85,-70],[-50,-42],[-108,-132],[-47,-88],[-19,-102],[-19,-47],[-18,-59],[16,-50],[16,-39],[18,-25],[10,-22],[12,-16],[13,80],[6,25],[11,2],[-6,-98],[-13,-333],[-1,-11]],[[59622,44922],[-5,17],[-9,8],[-10,-7],[-4,-21],[11,-27],[12,0],[5,30]],[[59644,44866],[7,13],[3,17],[0,16],[-5,11],[-7,6],[-9,-4],[-4,-22],[-1,-31],[6,-10],[10,4]],[[49383,72064],[8,-43],[16,-34],[59,-78],[35,-48],[1,-17],[-12,-39],[-4,-27],[9,-29],[21,-35],[2,-17],[-5,-20],[-11,-37],[23,-111],[4,-107],[-6,-76],[0,-44],[3,-37],[20,-87],[-13,-143],[15,-78],[21,-63],[11,-113],[17,-53],[27,-47],[15,-16],[30,-39],[22,-32],[13,-48],[-27,-40],[-22,-36],[-6,-38],[10,-61],[0,-33],[-14,-11],[-56,3],[-44,3],[-50,3],[-71,6],[-44,4],[-61,5],[-20,-3],[-56,-17],[-39,-12],[-6,-4],[-13,-15],[-8,-45],[-8,-52],[-8,-23],[-117,-74],[-46,-11],[-26,8],[-19,-6],[-16,-16],[-6,-24],[-1,-31],[4,-31],[11,-43],[2,-44],[-7,-30],[-2,-31],[-3,-33],[6,-18],[11,-3],[11,-15],[16,-14],[14,-26],[-1,-38],[-11,-21],[-10,-11],[-44,-10],[-35,-8],[-45,-60],[-48,-64],[-58,-42],[-25,-12],[-44,-30],[-53,-50],[-26,-80],[-32,-93],[-32,-62],[-43,-58],[-40,-23],[-51,-28],[-63,-21],[-45,-8],[-14,-4],[-39,-2],[-20,5],[-14,2],[-6,-6],[-2,-15],[-1,-33],[-3,-38],[-12,-32],[-9,-15],[-11,-6],[-33,9],[-28,10],[-66,14],[-13,-3],[-5,-4],[-21,-22],[-32,-46],[-22,-41],[-16,-18],[-38,-10],[-17,-15],[-72,-101],[-15,-24],[-74,-88],[-21,-29],[-17,-28],[-44,-65],[-28,-28],[-5,-17],[-2,-40],[0,-87],[0,-84],[0,-122],[0,-122],[0,-140]],[[47587,67774],[-37,0],[0,-1],[1,-24],[8,-48],[3,-40],[-4,-25],[-4,-32],[2,-31],[6,-33],[6,-34],[0,-23],[-11,-18],[-27,-9],[-31,-8],[-23,0],[-34,5],[-22,-1],[-19,0],[-16,-5],[-21,-22],[-23,-35],[-29,-46],[-17,-29],[-23,-6],[-23,0],[-22,23],[-14,12],[-10,-1],[-15,-16],[-19,-12],[-17,0],[-29,24],[-34,34],[-20,17],[-29,6],[-29,11],[-20,-5],[-26,0],[-34,-23],[-29,-17],[-31,-18],[-36,-16],[9,-51],[12,-28],[0,-35],[-6,-30],[-17,-28],[-20,-37],[-11,-29],[-12,-39],[-8,-24],[-15,-37],[-13,-47],[-4,-30],[-6,-33],[-10,-11],[-35,-9],[-22,-11],[-19,-12],[-8,-20],[-1,-3],[-5,-40],[0,-29],[-6,-23],[-8,-57],[-11,-53],[-9,-69],[-8,-57],[-11,-93],[-11,-86],[-14,-81],[-11,-51],[-9,-29],[-19,-35],[-17,-22],[-19,-30],[-22,-28],[-31,-35],[-25,-29],[-10,-13],[-12,-16],[-20,-40],[-16,-57],[-11,-47],[-20,-74],[-14,-41],[-8,-22],[-22,-23],[-25,-18],[-28,-23],[-22,-23],[-31,-23],[-19,-23],[-14,-34],[-11,-41],[-14,-58],[-11,-63],[-6,-40],[-16,-139],[-6,-80],[-6,-52],[-8,-64],[-5,-97],[0,-81],[-6,-46],[-3,-35],[-14,-40],[-11,-29],[-19,-40],[-17,-23],[-5,-23],[-17,-29],[-17,-46],[-14,-29],[3,-23],[3,-40],[-8,-41],[-9,-46],[-22,-57],[-25,-29],[-36,-6],[-50,0],[-39,6],[-47,0],[-42,11],[-39,12],[-47,6],[-33,0],[-42,-12],[-108,0],[-42,-6],[-61,-23],[-15,-5]],[[45276,64182],[21,276],[38,149],[30,66],[47,35],[43,150],[16,138],[28,64],[9,50],[-11,38],[27,75],[32,114],[15,73],[38,113],[5,25],[-4,29],[-15,-25],[-16,-41],[-19,-33],[8,40],[15,60],[34,62],[53,69],[110,234],[42,41],[37,98],[14,88],[4,200],[13,106],[24,83],[29,150],[22,68],[15,136],[16,53],[28,24],[40,69],[60,42],[71,89],[33,53],[23,79],[24,158],[42,166],[22,125],[1,2],[37,66],[26,83],[43,37],[90,18],[134,69],[120,104],[34,42],[37,83],[60,108],[114,130],[52,72],[79,182],[53,150],[44,97],[30,86],[21,87],[12,140],[-8,55],[-33,89],[-23,24],[-6,42],[12,75],[0,128],[7,204],[37,165],[91,217],[17,88],[10,142],[1,50],[114,200],[67,154],[23,37],[59,70],[205,154],[116,109],[68,80],[40,94],[112,371],[110,521],[9,61],[49,17],[35,7],[28,19],[34,40],[33,-16],[-16,-27],[0,-64],[23,-75],[41,-85],[75,-107],[58,-43],[83,-26],[96,47],[54,1],[27,20],[28,-30],[55,-9],[52,16],[40,45],[25,51],[4,-25],[1,-28],[8,-16],[15,-66],[9,-25],[30,4],[26,-13],[59,6],[57,-11]],[[47587,67774],[0,-96],[0,-118]],[[47587,67560],[1,-96],[0,-114],[0,-114],[0,-130],[0,-129],[0,-94],[0,-66],[-57,0],[-51,0],[-52,0],[-52,0],[-52,0],[-51,0],[-52,0],[-52,0],[-52,0],[-51,0],[-52,0],[-52,0],[-52,0],[-52,0],[-51,0],[-52,0],[-52,0],[-41,0],[0,-69],[0,-78],[0,-79],[0,-78],[0,-78],[0,-79],[0,-78],[0,-79],[0,-78],[0,-79],[0,-78],[0,-78],[0,-79],[0,-78],[0,-79],[0,-78],[0,-79],[0,-69],[-2,-63],[-17,-19],[-40,-33],[-40,-34],[-52,-16],[-17,-11],[-33,-46],[-44,-59],[-37,-51],[-25,-67],[-9,-37],[-4,-39],[3,-37],[14,-74],[3,-37],[2,-65],[3,-71],[2,-76],[3,-76],[2,-81],[3,-81],[2,-82],[2,-61],[3,-76],[-42,0],[-64,0],[-63,-1],[-64,0],[-64,0],[-64,0],[-63,0],[-64,0],[-64,-1],[-63,0],[-64,0],[-64,0],[-63,0],[-64,0],[-64,-1],[-64,0],[-63,0],[-36,0],[-11,-108],[-10,-77],[-6,-63],[4,-53]],[[45264,63828],[-14,29],[25,300],[1,25]],[[55651,76513],[-36,-17],[-7,-25],[-17,3],[-21,0],[-7,-16],[10,-27],[7,-31],[-5,-43],[-2,-6]],[[55573,76351],[-5,2],[-30,-25],[-22,-12],[-20,-6],[-9,12],[-5,17],[1,47],[-4,16],[-6,7],[-14,-11],[-16,-36],[-15,-42],[-22,-45],[-18,-42],[-19,-53],[-14,-44],[14,-25],[9,-35],[-3,-26],[3,-15],[-5,-46],[-1,-28]],[[55372,75961],[-43,46],[-18,64],[-63,109],[-73,74],[-4,12],[4,14],[4,11],[-15,1],[-11,-9],[-10,3]],[[55143,76286],[-11,27],[-11,24],[0,22]],[[55121,76359],[5,2],[7,9],[15,23],[3,13],[-1,18],[-21,60],[-3,38],[-3,72],[4,17],[8,8],[38,9],[-1,56],[2,17],[8,23],[5,21],[21,31],[28,36],[12,1],[11,-5],[12,-31],[14,4],[2,37],[-17,49],[-9,31],[3,18],[6,9],[15,-6],[14,-9],[10,6],[14,5],[8,-2]],[[82411,80543],[-26,-80],[-52,-161],[-44,-135],[-23,-77],[-17,-58],[-18,-56],[-3,-33],[-19,-54],[-37,-64],[-8,-70],[1,-63],[-3,-57],[-41,-35],[-32,-32],[10,-107],[16,-41],[26,-43],[28,-35],[24,-30],[27,14],[22,45],[44,40],[24,1],[16,-9],[38,-3],[38,14],[31,3],[39,-9],[14,-10],[33,-17],[35,-38],[25,-43],[18,-8],[9,14],[20,37],[27,37],[34,60],[26,45],[20,7],[38,0],[18,11],[29,6],[26,-17],[71,-9],[20,-23],[34,-70],[19,-37],[33,-19],[21,-13],[18,-10],[17,-18],[5,-22],[7,-33],[11,-19],[20,-19],[16,-11],[4,-25],[5,-11],[14,-17],[42,-72],[20,-20],[31,-41],[13,-35],[1,-36],[8,-28],[20,-41],[10,-29],[-4,-38],[4,-34],[-8,-35],[-34,-25],[-11,-13],[-24,-1],[-41,13],[-39,-7],[-47,14],[-37,31],[-20,25],[-32,14],[-15,-7],[-18,-32],[-21,5],[-19,-5],[-49,6],[-26,8],[-42,-22],[-24,-7],[-45,-27],[-27,-47],[-20,-11],[-19,2],[-14,17],[-21,21],[-30,-1],[-9,-9],[-4,-19],[-10,-58],[0,-26],[-6,-17],[-18,-6],[-32,2],[-49,4],[-33,15],[-20,-7],[-27,-31],[-20,-5],[-15,-14],[-13,-46],[-20,-29],[-24,-36],[-26,-77],[-14,-44],[4,-24],[3,-28],[-12,-33],[-24,-30],[-20,-6],[-29,-29],[-40,-53],[-30,-44],[-40,-11],[-27,-11],[-62,-14],[-15,-3],[-68,-7],[-50,24],[-26,-4],[-24,-13],[-11,-15],[-5,-28],[-4,-25],[-19,-40],[-38,-53],[-32,-35],[-24,-45],[-14,-17],[-27,-17],[-15,-10],[-35,-40],[-28,-36],[-18,-10],[-22,9],[-14,3],[-43,14],[-29,2],[-41,9],[-95,42],[-31,20],[-27,54],[-24,27],[-34,3],[-49,0],[-23,10],[-37,-10],[-41,-54],[-19,-41],[-17,-41],[-20,-89],[-9,-60],[-8,-33],[-21,-53],[-3,-30],[8,-26],[16,-29],[9,-46],[23,-49],[22,-38],[43,-61],[12,-33],[14,-36],[3,-36],[-2,-24],[-16,-18],[-29,-9],[-15,-25],[-21,-33],[-26,-39],[-13,-2],[-14,-10],[-74,-48],[-27,-13],[-22,-16],[-27,-49],[-20,-36],[-25,-48],[-11,-21],[-23,-48],[-30,-55],[-16,-30],[-9,-17],[-8,-23],[-31,-18],[-26,-19],[-38,-28],[-55,-32],[-45,-30],[-29,-25],[-42,-31],[-29,-10],[-57,1],[-72,-8],[-52,-6],[-39,7],[-59,5],[-45,6],[-30,-12],[-72,-12],[-16,-3],[-126,-30],[-56,-16],[-52,-7],[-37,-12],[-22,-14],[-31,-21],[-17,-9],[-56,-41],[-125,-84],[-84,-69],[-13,-12],[-57,-48],[-32,-19],[-23,-43],[-18,-27],[-19,-12],[-34,28],[-24,-2],[-77,11],[0,125],[-53,-17],[-86,-29],[-79,-26],[-73,60],[-56,47],[-48,40],[-74,26],[-65,23],[-116,38],[-51,33],[-26,45],[-46,99],[-15,20],[-22,14],[-24,8],[-50,0],[-62,8],[-88,21],[-71,16],[-120,32],[-29,3],[-62,-27],[-81,-36],[-145,28],[-64,13],[-130,26],[-147,30],[-142,31],[-104,-17],[-57,-9],[-67,-14],[-9,15],[-3,59],[-12,46],[-36,50],[-25,47],[-46,63],[-15,40],[-5,62],[-43,162],[-27,109],[-6,22],[-12,36],[-15,18],[-32,12],[-8,19],[0,38],[5,52],[6,38],[-5,9],[-83,-10],[-51,25],[-43,27],[-60,70],[-36,27],[-46,73],[-67,17],[-25,28],[-32,62],[-27,40],[-39,25],[-62,23],[-105,21],[-35,9],[-58,-14],[-43,-2],[-70,16],[-40,19],[-49,0],[-32,0],[-43,4],[-20,13],[-19,15],[-36,-4],[-25,16],[-24,28],[-24,13],[-27,0],[-11,-13],[-10,1],[-7,39],[-25,62],[-4,28],[-15,32],[-9,29],[3,40],[10,78],[24,71],[16,18],[10,21],[20,37],[12,29],[-2,40],[-14,41],[-10,54],[2,31],[15,37],[17,81],[-1,21],[-7,17],[-2,38],[-3,51],[-21,77],[-11,41],[-20,18],[-23,11],[-20,55],[-25,66],[-16,41],[-5,25],[-3,45],[-12,56],[-12,30],[-9,23],[-5,34],[-5,12],[-34,15],[-24,25],[-10,33],[-4,27],[-7,16],[-19,5],[-14,-24],[-22,-12],[-14,2],[-15,14],[-9,16],[-15,17],[-22,55],[-22,14],[-42,-2],[-37,-26],[-22,4],[-19,9],[-22,27],[-14,23],[-22,7],[-44,40],[-29,28],[-3,56],[-14,39],[-28,11],[-29,39],[-42,22],[-27,16],[-23,10],[-3,15],[1,13],[11,21],[11,20],[2,19],[-9,16],[-23,17],[-31,15],[-6,26],[-19,26],[4,21],[14,16],[15,12],[3,19],[-10,19],[-5,28],[2,20],[-3,27]],[[52066,77044],[-17,-10]],[[52049,77034],[1,12],[4,7],[5,3],[6,-5],[1,-7]],[[23015,66797],[-5,-119],[-17,-97],[-55,-203],[-24,-126],[-44,-360],[-14,-236],[-3,-111],[-4,-15],[4,-17],[-10,-245],[5,-210],[-3,-32],[-17,-63],[-11,-88],[5,-39],[-1,-27],[17,-133],[5,-100],[50,-171],[28,-60],[34,-51],[13,-30],[-6,-72],[-14,-37],[-6,-59],[-7,49],[2,62],[11,34],[1,25],[-21,26],[-37,86],[-45,153],[32,-244],[11,-39],[9,-16],[14,-17],[4,-27],[0,-19],[40,-170],[45,-175],[3,-48],[18,-58],[114,-246],[70,-184],[25,-174],[15,-54],[7,-75],[46,-83],[14,-54],[24,-30],[20,-90],[38,-53],[-9,-1],[-33,27],[2,-18],[28,-37],[54,-37],[13,0],[-21,19],[-18,26],[6,4],[38,-32],[105,-11],[47,-75],[60,-32],[32,-96],[38,-100],[24,-5],[19,0],[56,17],[88,63],[30,30],[59,42],[90,8],[28,-12],[67,26],[33,32],[11,29],[5,22],[62,30],[13,6],[63,6],[31,11],[35,7],[26,-45],[0,-22],[-17,-21],[8,-20],[31,-34],[56,-13],[19,5],[26,49],[46,48],[-1,55],[-9,31],[-13,2],[-3,17],[9,40],[-2,14],[-29,-39],[-6,0],[3,18],[6,15],[83,85],[22,35],[28,31],[60,115],[13,218],[12,38],[40,67],[4,20],[3,45],[-1,114],[2,90],[-2,102],[7,90],[7,26],[23,145],[47,64],[82,76],[19,13],[261,80],[37,20],[45,52],[33,17],[60,-1],[18,7],[4,7],[0,7],[11,7],[34,-7],[65,-31],[24,-8],[58,-36],[63,-15],[10,6],[8,11],[6,22],[-6,18],[-6,-1],[-11,-10],[-13,-1],[-25,15],[5,13],[25,-1],[17,6],[24,22],[26,-16],[35,-75],[24,-24],[2,-108],[4,-19],[8,-29],[-12,-84],[-13,-69],[-17,-57],[-37,-89],[-45,-71],[-56,-159],[-13,-75],[1,-59],[9,-58],[-3,-21],[-6,-22],[-12,2],[-22,-28],[-28,-82],[-1,-25],[13,-23],[16,11],[21,1],[12,7],[12,-2],[-3,-47],[-13,-33],[-8,-11],[-15,-5],[-17,-19],[-9,-18],[1,-54],[9,-4],[20,40],[12,-2],[2,-17],[-26,-139],[-16,-143],[-23,-82],[-8,-121],[-11,-51],[-14,-51],[-8,3],[-21,96],[-23,25],[-4,23],[12,117],[-6,65],[-11,-3],[-15,-35],[-19,-31],[0,-45],[-22,-73],[-6,-25]],[[25473,62483],[-21,6],[-25,-3],[-17,-18],[-18,-89],[-43,-126],[-18,-62],[-14,-21],[-11,-8],[-13,15],[-29,34],[-24,-17],[-8,-39],[1,-50]],[[25233,62105],[-59,0],[-99,0],[-126,0],[-122,0],[-102,1],[0,-113],[-1,-100],[0,-112],[-56,1],[-60,1],[5,-12],[20,-21],[27,-50],[31,-78],[38,-63],[44,-46],[29,-46],[14,-44],[8,-38],[0,-32],[16,-24],[29,-17],[15,-28],[0,-22],[-9,-52],[-3,-57],[4,-52],[-21,-1],[-51,0],[-76,0],[-71,0],[-56,0],[-84,0],[-23,-80],[-38,-132],[-35,-119],[-29,-101],[-5,-26],[0,-22],[36,-94],[-6,-27],[-13,-15],[-4,-22],[1,-36],[-9,-47],[3,-33],[5,-41],[-8,-35],[-6,-34],[-7,-15]],[[24379,60221],[-8,13],[-74,157],[-78,172],[-30,56],[-29,43],[-40,79],[-104,174],[-54,80],[-50,95],[-45,53],[-45,34],[-20,20],[-17,26],[-10,2],[-5,-35],[16,-18],[19,-15],[14,-1],[16,-13],[46,-48],[7,-25],[-130,97],[-53,9],[-6,15],[27,50],[-9,18],[-9,3],[-28,-35],[-11,-2],[-2,23],[1,21],[-18,32],[-11,-1],[-10,-22],[-25,-42],[1,-17],[49,-18],[16,-10],[-3,-11],[-42,0],[-51,-19],[-92,-116],[-86,-50],[-122,-113],[-54,-5],[-29,-18],[-82,43],[-105,105],[-158,33],[-107,138],[-106,57],[-67,132],[-41,6],[-26,21],[-96,48],[-95,32],[-93,115],[-61,37],[-52,46],[-115,79],[-43,43],[-41,68],[-66,69],[-28,59],[-32,21],[-45,109],[-23,47],[-20,21],[-21,8],[-62,-9],[-91,48],[-43,12],[-88,72],[-118,80],[-39,91],[-32,86],[-60,113],[-37,48],[-64,57],[-36,46],[-55,35],[-93,91],[-29,77],[-18,68],[-49,83],[-55,156],[-14,57],[-10,88],[-13,51],[-15,39],[8,29],[27,36],[46,8],[33,39],[4,32],[-2,19],[-21,49],[-26,13],[-20,1],[-5,18],[15,20],[18,48],[25,58],[18,53],[4,75],[-3,76],[7,63],[-62,74],[-7,31],[-19,84],[-34,98],[1,195],[-41,173],[-42,86],[-22,30],[-59,134],[-46,77],[-46,146],[-45,93],[-58,156],[-41,78],[-189,262],[11,0],[55,-64],[9,5],[2,32],[-7,37],[-10,9],[-15,-8],[-20,8],[-10,12],[-29,8],[-38,44],[-16,45],[-1,52],[-54,110],[-20,62],[10,-5],[14,-25],[15,-7],[17,0],[12,10],[-4,18],[-12,15],[-78,58],[-26,41],[-64,68],[-15,24],[-10,65],[-16,3],[-13,-18],[-38,-18],[-10,21],[-1,20],[27,22],[24,61],[0,22],[-14,-25],[-20,-28],[-21,-15],[-32,-13],[-16,9],[-14,14],[-22,54],[-11,176],[20,61],[23,61],[20,35],[11,-27],[12,-3],[-9,31],[-19,28],[-7,29],[-1,26],[-9,48],[-57,102],[-54,-8],[-22,3],[-20,39],[-17,65],[-9,55],[-1,29],[-5,29],[-93,48],[-28,41],[-27,51],[-12,42],[-11,32],[-9,54],[-7,63],[11,82],[13,39],[-64,30],[-24,1],[-21,-16],[-18,21],[-37,24],[-45,85],[-53,155],[-57,50],[-19,54],[-24,48],[-20,60],[-4,26],[-6,15],[-29,42],[-32,71],[-9,57],[-8,87],[-22,31],[-21,14],[-5,41],[2,24],[-7,44],[-44,105],[-23,87],[-12,27],[-11,39],[-6,81],[-18,101],[-36,120],[-29,82],[-15,82],[7,83],[-5,51],[-4,12],[3,17],[10,-9],[8,15],[-1,53],[-10,16],[-29,17],[-12,11],[-70,22],[-39,30],[-3,70],[-19,32],[-16,20],[-52,41],[-9,-21],[-7,-39],[-21,-8],[-19,-2],[-32,27],[-79,103],[-17,17],[-25,9],[-12,16],[-53,55],[11,-29],[15,-30],[14,-87],[-16,-63],[-10,-220],[11,-44],[23,-70],[16,-112],[5,-82],[14,-66],[-4,-155],[5,-47],[22,-77],[41,-73],[9,-38],[53,-55],[33,-72],[65,-98],[20,-42],[58,-152],[2,-46],[11,-56],[33,12],[15,-42],[-2,-20],[4,-15],[17,3],[15,-11],[31,-166],[17,-22],[21,-10],[24,-18],[1,-42],[-1,-34],[21,-49],[-4,-66],[17,-56],[-3,-55],[7,-43],[50,-97],[62,-77],[13,-101],[26,-93],[25,-23],[27,-39],[-4,-40],[2,-24],[35,-73],[6,-94],[30,-61],[9,-4],[6,9],[-22,61],[-10,40],[-2,63],[8,8],[62,-99],[7,-74],[21,-42],[1,-56],[13,-34],[4,-49],[20,-80],[1,-112],[10,-82],[40,-125],[32,-26],[6,-61],[33,-159],[38,-87],[19,-73],[3,-45],[-14,-68],[-2,-47],[21,-143],[31,-73],[35,-18],[6,-10],[-3,-20],[12,-18],[13,23],[7,32],[-7,37],[-1,27],[6,19],[11,3],[67,-98],[11,-38],[25,-43],[23,-55],[9,-42],[19,-36],[9,-81],[46,-37],[25,-68],[2,-43],[-12,-110],[-11,-31],[-37,-47],[-27,-56],[-27,-34],[-27,-21],[-23,4],[-23,65],[-26,193],[-18,41],[-12,61],[-20,50],[-75,76],[-37,81],[-37,53],[-39,78],[-106,129],[-44,66],[-29,65],[-19,-1],[-14,-7],[-6,18],[-1,33],[-6,22],[-62,98],[-13,55],[-3,62],[14,162],[6,95],[-4,49],[-6,6],[-6,27],[-2,78],[-15,84],[-56,174],[-41,34],[-37,25],[-101,154],[-27,76],[-7,44],[-3,89],[-14,-52],[-19,-38],[-42,3],[-48,-43],[-29,40],[-15,46],[-24,55],[-26,11],[-17,2],[-31,68],[-26,21],[-36,9],[-32,34],[-9,38],[-5,53],[-12,32],[-49,62],[-39,69],[-38,45],[-11,36],[-1,25],[59,-7],[71,-27],[34,8],[21,25],[20,18],[3,-19],[-4,-37],[20,-33],[26,-27],[19,3],[-18,29],[-12,60],[5,22],[0,29],[-26,-6],[-4,15],[23,45],[25,120],[13,118],[-27,103],[-46,72],[-98,210],[-59,108],[-17,40],[-16,19],[-48,25],[-40,60],[-71,85],[-30,44],[-21,104],[-16,14],[5,71],[-7,127],[-12,32],[-38,31],[-9,86],[-2,82],[-8,57],[-65,96],[-3,46],[0,44],[-7,44],[-35,91],[-42,79],[-14,38],[-2,77],[-15,21],[6,5],[13,-2],[8,10],[1,54],[-63,84],[-18,116],[-34,61],[-8,23],[-18,109]],[[25850,63538],[-15,-18],[-7,64],[11,61],[14,36],[28,4],[18,12],[2,-16],[-15,-48],[-36,-95]],[[20416,64291],[-8,-47],[-21,19],[-8,30],[-1,48],[11,9],[17,-21],[4,-14],[6,-24]],[[19190,62638],[-17,-12],[-24,36],[6,27],[14,19],[14,-35],[7,-35]],[[19287,66246],[8,-65],[-15,10],[-18,35],[-13,44],[1,20],[3,4],[26,-26],[8,-22]],[[18568,68578],[-2,-10],[-29,35],[-64,122],[-23,61],[-4,28],[2,64],[22,-8],[25,-42],[12,-40],[0,-45],[48,-21],[7,-98],[6,-46]],[[18008,68012],[-4,-19],[-47,39],[26,67],[-4,70],[12,15],[10,-23],[13,-90],[-6,-59]],[[18832,68551],[-21,-136],[-21,2],[-44,43],[-5,27],[17,157],[13,21],[39,21],[6,-19],[4,-47],[12,-69]],[[17155,68514],[-12,-22],[-32,120],[0,29],[9,15],[15,-3],[0,-30],[13,-26],[5,-24],[2,-59]],[[25913,64077],[4,-28],[-4,4],[-7,21],[-4,26],[4,1],[3,-9],[4,-15]],[[24532,62601],[-31,-13],[-6,13],[63,58],[11,-2],[4,-8],[-33,-28],[-8,-20]],[[19498,65755],[-6,-3],[-14,31],[-6,75],[3,8],[27,-93],[-1,-11],[-3,-7]],[[18140,70106],[-9,-2],[-17,26],[1,25],[4,2],[17,-21],[6,-19],[-2,-11]],[[19139,66831],[3,-20],[-2,-6],[-11,14],[-19,-86],[-6,-8],[12,118],[12,17],[13,3],[-2,-32]],[[18972,65894],[-3,-27],[-84,108],[20,10],[23,-8],[44,-83]],[[18873,65982],[-6,-7],[-24,67],[-3,46],[-10,19],[-24,15],[21,93],[17,193],[8,-35],[-18,-195],[1,-26],[8,-24],[10,-40],[1,-44],[16,-40],[3,-22]],[[66014,40043],[-36,-17],[-39,6],[-15,31],[-3,13],[13,12],[-1,39],[7,63],[8,26],[20,23],[8,51],[17,34],[22,4],[22,-63],[16,-66],[-3,-65],[-16,-25],[-5,-38],[-15,-28]],[[45451,63194],[-17,-56],[-8,22],[-3,37],[15,52],[8,28],[14,9],[-9,-92]],[[45406,60966],[0,258],[15,97],[5,85],[33,187],[38,153],[36,204],[14,197],[-5,193],[-11,172],[-18,113],[-17,164],[-26,87],[-47,76],[-11,44],[11,16],[29,12],[18,59],[-38,-23],[44,181],[14,123],[-2,81],[9,50],[-35,108],[-26,136],[-14,22],[-14,11],[-1,-32],[-8,-29],[-17,18],[-29,99],[-41,161],[-15,17],[-12,-23],[-7,-21],[-14,-134]],[[47587,67560],[53,-63],[52,-64],[52,-64],[52,-64],[53,-63],[52,-64],[52,-64],[52,-63],[53,-64],[52,-64],[52,-63],[52,-64],[53,-64],[52,-64],[52,-63],[52,-64],[44,-53],[67,-86],[63,-80],[63,-81]],[[48660,66241],[-97,0],[-130,0],[-89,0],[-91,0],[-85,-1],[7,-131],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[8,-143],[8,-144],[7,-143],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[7,-144],[8,-143],[8,-143],[8,-143],[8,-144],[8,-143],[8,-143],[8,-143],[8,-143],[8,-144],[8,-143],[7,-143],[8,-143],[8,-139],[33,-73],[42,-92],[-12,-129],[-15,-155],[-16,-169],[-58,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-57,0],[-56,0],[-57,0],[-53,0],[-32,4],[-12,13],[-4,87],[-10,-5],[-11,-26],[-6,-28],[2,-36],[-2,-31],[-36,-12],[-49,-21],[-52,-16],[-52,6],[-18,7],[-19,12],[-42,12],[-22,2],[-26,-3],[-31,-7],[-10,-16],[-23,-66],[-22,-75],[-15,0],[-16,42],[-45,78],[-55,102],[-24,51],[-14,7],[-26,-37],[-22,-35],[-23,-50],[-11,-47],[-8,-57],[-4,-66],[-8,-78],[-19,-62],[-23,-47],[-16,-22],[-7,-13],[-49,37]],[[54046,72495],[-10,-19],[-26,1],[-24,29],[0,61],[27,-12],[25,-41],[8,-19]],[[53975,72596],[-16,-9],[-17,17],[-4,11],[23,9],[12,-8],[4,-15],[-2,-5]],[[48660,66241],[85,-110],[77,-104],[91,-124],[91,-123],[91,-123],[91,-124],[90,-123],[91,-123],[91,-124],[91,-123],[91,-123],[91,-124],[91,-123],[91,-123],[91,-124],[91,-123],[91,-123],[91,-124],[41,-55],[3,-23],[4,-46],[-2,-52],[0,-43],[12,-29],[23,-31],[89,-91],[7,-18],[3,-37],[11,-47],[19,-27],[22,-20],[26,-14],[81,-14],[17,-22],[35,-84],[19,-16],[54,-25],[38,-13],[17,-8],[35,-23],[38,-38],[20,-35],[0,-11],[0,-30],[0,-91],[7,-50],[8,-36],[-1,-22],[-9,-16],[-8,-19],[-4,-25],[-11,-32],[-9,-36],[4,-27],[15,-18],[23,-34],[19,-14],[9,-1],[12,1],[11,4],[68,26],[63,25],[88,34]],[[50060,60432],[-58,42],[-68,43],[-47,-27],[-8,10],[-6,18],[-23,10],[-36,-5],[-26,-12],[-41,-64],[-31,-55],[-8,-13],[-43,-33],[-80,-78],[-46,-57],[-10,-11],[-21,-13],[-31,-3],[-26,-14],[-23,-151],[-16,-15],[-95,61],[-19,-9],[-17,-18],[-53,-88],[-27,-71],[-14,-95],[2,-29],[0,-32],[-9,-18],[-13,-7],[-12,1],[-44,20],[-14,-9],[-6,-46],[1,-102],[-10,-69],[-26,-22],[-20,-27],[-16,-8],[-14,7],[-77,103],[-26,17],[-29,-12],[-28,-44],[-12,-28],[-17,-34],[-20,-45],[5,-39],[14,-44],[10,-55],[-1,-50],[-70,-70],[6,-24],[10,-28],[0,-51],[-2,-89],[-14,-33],[-18,-31],[-12,-42],[-11,-20],[-20,-25],[-27,-25],[-48,-23],[-38,-15],[-14,-14],[-20,-30],[-16,-36],[-4,-39],[3,-44],[6,-37],[7,-25],[4,-31],[-6,-85],[-14,-97],[-13,-44],[-21,-24],[-19,-27],[6,-64],[4,-92],[-6,-73],[0,-45],[-8,-48],[-5,-33]],[[48465,57848],[-9,8],[-38,-3],[-42,-26],[-14,-20],[-3,-27],[-10,-19],[-13,-20],[-13,-26],[-23,4],[-22,18],[-11,17],[-1,10],[7,25],[6,27],[1,18],[-8,43],[-6,47],[3,23],[-6,70],[-3,3],[-29,-18],[-10,-4],[-6,-8],[-2,-13],[7,-44],[-5,-8],[-16,1],[-23,15],[-25,40],[-6,-13],[-3,-32],[-1,-38],[6,-69],[-7,-25],[-16,5],[-23,0],[-19,-7],[-13,-2],[-8,-24],[-4,-28],[8,-31],[-1,-12],[-6,-12],[-8,-7],[-6,0],[-18,34],[-22,13],[-50,19],[-6,47],[-8,1],[-12,24],[-11,32],[-10,-1],[-8,-9],[-28,3],[-24,-49],[-18,-61],[-20,-29],[-21,-13],[-8,0]],[[47780,57697],[4,38],[-3,28],[-6,25],[-62,67],[-10,28],[-9,76],[-7,76],[1,44],[4,40],[-2,31],[-6,24],[-19,22],[-20,11],[-24,-30],[-12,-5],[-11,2],[-6,10],[1,16],[27,81],[13,34],[16,26],[10,14],[7,20],[1,15],[-3,12],[-17,14],[-28,38],[-14,4],[-12,18],[-13,59],[-6,11],[-13,6],[-12,15],[1,77],[0,66],[-27,108],[-10,67],[-13,69],[-12,33],[-22,27],[-26,19],[-24,4],[-18,-6],[-8,-8],[0,-13],[15,-44],[2,-24],[-2,-24],[-5,-16],[-13,-2],[-23,-13],[-28,-27],[-19,-22],[-16,-58],[-11,-8],[-18,8],[-53,42],[-44,35],[-30,21],[-18,-13],[-9,-7],[-26,-23],[-34,-86],[-8,-28],[-7,-9],[-9,-15],[-9,0],[-7,10],[-3,6],[-17,62],[-20,68],[-15,30],[-20,2],[-17,-22],[-18,-43],[-22,-41],[-14,-12],[-13,7],[-30,51],[-22,36],[-3,18],[8,28],[8,42],[8,34],[8,15]],[[70393,53704],[-6,-1],[-4,10],[1,14],[5,10],[7,1],[4,-9],[-2,-14],[-5,-11]],[[70419,54242],[-4,-6],[-5,2],[-2,7],[3,10],[3,13],[3,14],[4,7],[3,-2],[0,-8],[-2,-11],[-1,-14],[-2,-12]],[[78361,55438],[48,-22],[18,-18],[54,-178],[71,-126],[30,-46],[23,-23],[32,-67],[28,-84],[61,-237],[10,-105],[5,-159],[-14,-240],[-16,-119],[3,-57],[22,-86],[-6,-82],[4,-68],[-2,-189],[13,-55],[15,-36],[76,-112],[6,-41],[37,-143],[70,-310],[19,-139],[-2,-38],[-8,-15],[-21,-14],[-17,27],[-6,20],[2,24],[-7,24],[-16,28],[-10,26],[3,-42],[0,-55],[-21,-5],[-28,17],[-34,-15],[-40,-68],[-19,-2],[-15,58],[-8,39],[-12,28],[-127,142],[-47,37],[-50,107],[-112,119],[-71,116],[-30,71],[-73,64],[-31,74],[-16,15],[-15,27],[16,72],[-7,76],[-8,64],[-51,126],[-25,88],[-49,87],[-19,51],[-18,58],[11,21],[11,12],[-10,43],[-27,74],[-13,85],[0,160],[-39,226],[-34,313],[6,110],[-9,119],[-22,114],[-29,82],[-11,67]],[[82659,54245],[-11,1],[-24,12],[-48,61],[-49,22],[-71,2],[-41,8],[-16,-9],[-14,0],[-10,12],[-11,6],[-27,-36],[-13,11],[-14,16],[-23,5],[-28,-5],[-32,-37],[-34,34],[-10,-1],[-7,-8],[-15,-46],[-29,-35],[-14,-64],[-9,-61],[-7,-21],[-3,-119],[-4,-57],[7,-76],[-1,-32],[-13,-49],[-2,-11],[-6,-77],[2,-21],[-1,-25],[-11,-54],[-20,-15],[-20,-9],[-18,19],[-16,-30],[-20,-46],[-8,-31],[0,-29],[2,-19],[-4,-20],[-1,-21],[1,-30],[14,-13],[14,-26],[-1,-25],[-7,-17],[-18,-27],[-33,-55],[-37,-47],[-14,-11],[-5,-22],[-2,-29],[8,-64],[7,-18],[5,-23],[-5,-26],[-4,-23],[-14,-15],[-13,-10],[-5,-19],[-7,-76],[-8,-40],[-18,-59],[-6,-27],[-9,-9],[-35,28],[-31,-17],[-41,-11],[-35,2],[-27,-12],[-19,-31],[-21,-40],[-22,-29],[-16,-14],[-30,41],[-16,-3],[-27,14],[-65,47],[-16,13],[-17,2],[-5,13],[3,23],[-3,29],[-13,11],[-129,-4],[-38,-26],[-25,-20],[-18,-23],[-5,-59],[-11,-54],[-14,-58],[-43,-17],[-32,-59],[-11,-7],[-21,9],[-24,5],[-17,-17],[-17,1],[-55,28],[-51,4],[-30,-14],[-16,-5],[-89,-81],[-31,-9],[-12,12],[-17,33],[-24,32],[-55,112],[-21,26],[-14,27],[-13,32],[-18,35],[-17,24],[-23,48],[-22,53],[-5,93],[-18,17],[-7,24],[-2,28],[25,76]],[[80452,53011],[18,-80],[7,-18],[40,-54],[33,-27],[36,-11],[37,-2],[15,4],[14,10],[14,-11],[76,-88],[30,-15],[31,6],[13,-8],[44,-67],[13,-8],[22,5],[-28,30],[-18,22],[-8,41],[4,44],[18,29],[12,31],[5,94],[8,48],[14,46],[5,43],[-16,34],[-4,57],[3,47],[10,33],[15,-22],[15,-19],[15,2],[11,7],[2,25],[-3,43],[1,78],[19,63],[31,43],[29,21],[108,35],[172,89],[51,35],[19,18],[15,25],[27,80],[50,125],[35,103],[74,151],[59,139],[8,26],[9,76],[1,36],[-2,36],[8,17],[12,10],[3,0]],[[81684,54488],[8,-16],[21,-22],[15,-28],[10,-37],[8,-34],[0,-29],[10,-24],[26,-4],[8,-30],[18,-52],[17,-37],[10,-14],[13,7],[19,34],[14,42],[10,56],[-8,9],[14,42],[2,22],[-6,21],[-8,20],[-3,51],[-5,66],[-4,29],[11,22],[22,27],[22,31],[23,25]],[[81951,54665],[1,-45],[-1,-75],[7,-63],[15,-110],[18,-15],[21,-10],[12,3],[8,7],[2,9],[-13,44],[-3,102],[-11,67],[-17,67],[-7,19]],[[81983,54665],[65,19],[14,21],[26,46],[10,26],[7,58],[-32,34],[-12,44],[-1,48],[38,88],[13,21],[6,-31],[17,-8],[15,-1],[16,2],[22,44],[12,64],[39,91],[14,70],[8,72],[99,226],[12,36],[59,227],[7,7],[16,-22],[4,-72],[-2,-31],[-9,-47],[-6,-49],[7,1],[28,30],[29,79],[17,69],[14,30],[28,-17],[6,-12],[-2,-49],[3,-29],[11,-61],[24,-37],[33,-24],[31,-34],[10,-22],[6,-27],[7,-45],[0,-44],[-22,-44],[10,-71],[-2,-41],[-7,-35],[-33,-33],[88,33],[22,18],[30,47],[16,-41],[15,-69],[-12,-18],[-38,-26],[-2,-10],[13,-36],[16,3],[31,24],[29,38],[14,0],[15,-8],[29,-24],[16,-20],[13,-26],[9,-53],[33,-19],[68,-75],[12,-7],[14,-1],[35,9],[13,-10],[9,-27],[3,-34],[-1,-36],[-4,-27],[-8,-22],[-25,-34],[-61,-45],[-66,-34],[-34,2],[-47,29],[-17,-3],[-17,-14],[-21,-92],[39,-92],[66,-96],[9,-24],[-2,-29],[-11,-18],[-14,-9],[-37,-16],[-38,-11],[-30,-17],[-31,-21],[-31,7],[-43,43],[-12,3],[-13,-22],[-13,-60],[-8,-17]],[[78950,53416],[-14,-6],[-7,4],[-5,23],[11,51],[4,9],[11,-56],[0,-25]],[[77857,54893],[-7,-16],[-20,9],[4,94],[11,12],[18,-17],[8,-16],[-14,-66]],[[77735,55567],[19,-62],[-9,-27],[-5,-8],[-12,9],[-11,-24],[-11,-4],[-11,42],[-13,17],[-3,30],[18,5],[10,-10],[20,20],[8,12]],[[82539,55972],[-17,-31],[-6,37],[1,47],[23,44],[33,8],[4,-35],[-4,-40],[-7,-21],[-27,-9]],[[78143,53564],[-14,-10],[0,15],[2,21],[10,20],[5,-12],[-3,-34]],[[80941,53234],[-9,-8],[-13,21],[-3,175],[9,15],[6,-2],[7,-32],[-1,-76],[1,-68],[3,-25]],[[82745,54254],[-39,-11],[-27,1]],[[82679,54244],[5,20],[-1,27],[13,7],[15,-6],[34,-38]],[[63760,44681],[13,-60],[15,-58],[46,-140],[20,-53],[17,-57],[8,-114],[30,-178],[28,-266],[8,-273],[9,-126],[21,-118],[36,-122],[11,-136],[-21,-140],[-32,-132],[-8,-25],[-15,-34],[-6,1],[-26,34],[-20,56],[-26,132],[-10,66],[-10,11],[-31,-6],[-22,-41],[-4,-27],[5,-74],[8,-66],[4,-68],[0,-85],[9,-26],[12,-22],[12,-55],[3,-133],[-8,-67],[-22,-58],[2,-32],[8,-32],[-8,-20],[-29,-25],[-11,-22],[-16,-59],[-25,-120],[-3,-61],[16,-186],[-5,-132],[-32,-252],[-18,-119],[-26,-143],[-40,-189],[-39,-237],[-34,-243],[-25,-147],[-28,-144],[-38,-255],[-33,-258],[-48,-285],[-68,-317],[-7,-41],[-14,-163],[-15,-140],[-18,-140],[-37,-230],[-5,-71],[-8,-68],[-36,-144],[-16,-54],[-10,-57],[-6,-72],[-11,-70],[-27,-129],[-39,-110],[-27,-40],[-58,-59],[-30,-11],[-65,-2],[-64,-33],[-66,-64],[-63,-73],[-25,-35],[-27,-20],[-83,-4],[-26,16],[-84,120],[-32,20],[-62,17],[-18,10],[-17,16],[-25,62],[-50,54],[-12,16],[-7,37],[-5,39],[-13,45],[-10,84],[-16,59],[-45,104],[-5,33],[-4,110],[2,75],[-5,136],[5,65],[16,58],[-6,62],[-17,66],[-6,68],[-13,62],[-48,112],[-11,55],[-8,57],[-18,178],[-2,62],[3,130],[7,68],[11,47],[3,35],[8,30],[11,24],[7,28],[18,168],[23,37],[33,21],[27,44],[16,59],[15,121],[42,121],[15,63],[34,96],[30,135],[9,64],[7,65],[8,143],[5,71],[-1,70],[-17,72],[-41,132],[-1,24],[3,98],[-4,70],[-15,71],[-19,66],[-19,124],[-10,205],[2,74],[-5,65],[-14,63],[10,109],[123,397],[4,47],[-5,121],[2,71],[5,26],[9,15],[21,7],[99,18],[13,12],[25,33],[34,65],[15,19],[14,-7],[8,-28],[11,-15],[40,29],[16,1],[16,-5],[7,27],[4,36],[6,26],[11,14],[51,8],[33,11],[43,25],[9,-5],[34,-91],[11,-8],[13,-4],[12,17],[-28,48],[-4,26],[1,31],[15,65],[25,50],[56,76],[57,88],[17,6],[14,-14],[11,-103],[-1,-17],[9,-3],[10,13],[10,42],[0,34],[-7,34],[-4,28],[0,26],[29,61],[23,58],[10,70],[10,32],[24,36],[7,-6],[6,-29],[3,-31],[-6,-31],[-9,-31],[-4,-40],[14,-8],[13,10],[19,73],[21,70],[13,36],[16,25],[27,-5],[26,-15],[-43,73],[-10,101],[50,174],[1,37],[7,11],[3,14],[-26,59],[-5,29],[4,44],[12,40],[12,27],[16,11],[13,-15],[28,-49],[19,-7],[23,46],[18,58],[28,40],[32,25],[49,91],[32,191],[2,56],[-7,67],[-11,65],[-19,80],[5,18],[27,-11],[9,11],[28,71],[48,136],[16,0],[13,-25],[5,-37],[10,-28],[32,-65],[16,-48]],[[63428,44145],[0,-21],[-36,8],[-6,72],[18,3],[4,29],[11,4],[11,-64],[-2,-31]],[[63871,42106],[-32,-106],[9,89],[36,127],[11,10],[-24,-120]],[[56206,76217],[43,-86],[23,-34],[28,-27],[32,-19],[11,-19],[20,-91],[10,-34],[13,-11],[3,-10],[1,-13],[-15,-64],[-6,-144],[-4,-11]],[[56365,75654],[-16,0],[-21,-3],[-8,-11],[-8,-77],[-34,-22],[-30,-13],[-26,3],[-45,18],[-15,2],[-13,-10],[-40,-5],[-18,-14],[-42,-90],[-42,-32],[-14,-15],[-33,20],[-15,2],[-22,-23],[-49,-3],[-13,-4],[-38,-3]],[[55823,75374],[-2,12],[-7,18],[-17,9],[-36,-7],[-9,13],[-15,77],[-11,12],[-13,26],[-22,83],[-1,37],[2,32],[-12,74],[7,19],[11,12],[0,30],[-3,46],[14,90],[3,6]],[[55712,75963],[4,-4],[32,-7],[8,11],[6,18],[1,66],[8,30],[78,58],[23,2],[18,-27],[14,-17],[8,1],[3,17],[10,33],[16,19],[48,16]],[[51699,80714],[-3,-15],[1,-35],[8,-34],[18,-34],[14,-25],[19,-20],[33,-19],[13,-4],[1,-25],[-2,-27],[-11,-15],[-11,-21],[-8,-26],[-8,-50],[-1,-35]],[[51762,80329],[-19,14],[-10,10],[-17,3],[-17,-8],[-12,-18],[-18,-5],[-14,5],[-9,13],[-7,8],[-22,8],[-9,19]],[[51608,80378],[7,9],[6,15],[5,19],[7,19],[-21,50],[-5,16],[-17,28],[0,14],[4,14],[-1,11],[2,25],[12,24],[8,30],[14,40],[31,49],[21,-8],[10,0],[6,-17],[2,-2]],[[55805,83690],[32,66],[12,43],[8,61],[8,20],[0,-28],[-3,-46],[-20,-80],[-21,-41]],[[55898,83677],[0,4],[-9,42],[10,64],[-19,93],[-30,113],[-2,121],[-2,27]],[[55846,84141],[74,68],[94,73],[22,6],[86,44],[12,3],[78,-8],[62,-10],[51,1],[29,11],[26,-9],[20,-33],[22,4],[21,21],[116,-19],[26,0],[29,-3],[54,-19],[32,-18],[68,11],[30,0],[15,7],[47,49],[21,9],[19,8],[17,-7],[11,-42],[35,-72],[38,-13],[106,-27],[21,-15],[59,-64],[36,-31],[22,-25],[35,-49],[20,-35],[33,-27],[39,-18],[15,-3]],[[57387,83909],[-1,-26],[-7,-44],[-13,-56],[-14,-44],[-3,-17],[10,-14],[52,-7],[22,-7],[4,-12],[-11,-15],[-17,-13],[-7,-12],[-13,-42],[-86,5],[-12,-9],[-5,-19],[-4,-23],[-12,-28],[-23,-23],[-35,-9],[-29,-16],[-22,-49],[-16,-67],[0,-47],[2,-26],[-2,-15],[-11,-17],[-18,-43],[-14,-48],[-6,-26],[3,-12],[16,-1],[24,-10],[13,-19],[4,-22],[0,-24],[-4,-13],[-19,-10],[-30,0],[-17,12],[-4,9],[8,22],[-6,29],[-12,16],[-25,-24],[-24,0],[-29,-21],[-19,-34],[-18,-13],[-49,7],[-13,-15],[-10,-69],[-6,-14],[-40,3],[-40,-28],[-45,-22],[-22,15],[-13,18],[-24,-3],[-27,-8],[-17,4],[-20,-1],[-39,-14],[-48,4],[-21,12]],[[52646,79072],[3,-9],[1,-12],[3,-12],[1,-16],[4,-16],[8,-15],[3,-14],[-4,-18],[-4,-11]],[[53195,70957],[43,-37],[43,-14],[130,-136],[40,-17],[91,-16],[107,56],[40,10],[71,-52],[31,-15],[52,-4],[89,-47],[22,-17],[52,-75],[25,-23],[184,-69],[25,-46],[26,-87],[1,-109],[14,-79],[23,-102],[28,-72],[30,-61],[35,-37],[81,-56],[91,-21],[92,-8],[158,-76],[133,-89],[33,-44],[67,-43],[134,-208],[74,-72],[52,-14],[46,13],[83,72],[34,43],[84,180],[27,94],[11,66],[-3,67],[-10,61],[-23,63],[-17,84],[-9,151],[13,104],[16,63],[25,64],[69,122],[70,86],[122,113],[71,1],[30,12],[58,80],[24,3],[33,-20],[97,6],[42,-22],[51,-50],[64,-31],[45,-30],[48,-40],[11,-98],[-5,-29],[-1,-38],[50,-68],[142,-32],[28,-18],[39,-52],[25,-16],[97,-7],[57,11],[54,-18],[20,-18],[21,-40],[25,-99],[10,-33]],[[56986,70077],[-11,-16],[-15,-35],[-10,-30],[-26,-50],[-21,-53],[2,-79],[5,-79],[14,-78],[13,-86],[-4,-56],[-11,-70],[-12,-58],[-42,-119],[-7,-28],[3,-41],[25,-141],[2,-44],[16,-138],[14,-112],[15,-87],[2,-25],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129],[0,-130],[0,-129],[0,-129],[0,-130],[0,-129]],[[56661,63073],[-133,137],[-134,136],[-133,136],[-133,136],[-133,137],[-133,136],[-133,136],[-133,137],[-133,136],[-133,136],[-133,136],[-133,137],[-133,136],[-133,136],[-134,137],[-133,136],[-92,94],[-99,-92],[-77,-72],[-103,-95]],[[53324,65390],[-26,102],[-30,114],[-40,142],[-24,87],[-8,14],[-111,69],[-117,67],[-69,-41],[-12,3],[-19,26],[-20,35],[-10,49],[-28,66],[-25,150],[-2,119],[-6,43],[-61,168],[-55,153],[-37,102],[-7,46],[4,57],[15,51],[54,60],[48,66],[7,45],[3,125],[-16,39],[-12,74],[-11,101],[-2,64],[22,128],[25,134],[-16,149],[-12,297],[8,235],[-7,85],[-4,36],[-16,110],[-21,114],[-9,40],[-26,92],[-43,114],[-22,70],[30,37],[28,29]],[[47143,56730],[14,3],[24,17],[14,-8],[6,-23],[3,-20],[72,51],[6,11],[4,-2],[9,-47],[5,3],[5,14],[5,1],[5,-6],[6,-22],[9,-19],[16,-14],[10,-19],[-2,-49],[4,-49],[7,-11],[4,-28],[1,-32],[4,-17],[3,-32],[-1,-34],[2,-24],[12,-41],[7,-53],[0,-37],[-4,-39],[-8,-35],[-13,-39],[-1,-16],[8,-10],[12,-2],[10,8],[25,-18],[14,-25],[12,-32],[10,-16],[5,-20],[18,6],[21,19],[4,9],[7,-5],[13,-2],[10,35],[7,40],[17,43],[8,16],[2,28],[1,36],[6,30],[13,17],[15,0],[8,-6],[4,-30],[11,-23],[10,-15]],[[47642,56197],[5,-7],[9,-18],[8,-60],[31,-194],[-2,-54],[-6,-35],[0,-35],[-2,-33],[-19,-56],[-56,-114],[4,-10],[13,-13],[14,-6],[11,3],[14,-28],[16,-36],[16,-18],[23,-17],[20,-2],[17,7],[24,-7],[26,-30],[9,-49],[7,-42],[9,-22],[1,-36],[18,-33],[26,-6],[34,-38],[9,2],[4,5],[4,-8],[8,-109],[7,-58],[-3,-23],[-5,-19],[0,-88],[-16,-51],[-2,-56],[-5,-18],[-16,-16],[0,-42],[-4,-52],[-2,-55],[4,-144],[1,-107],[8,-20]],[[47904,54349],[-32,9],[-94,82],[-73,47],[-242,267],[-68,108],[-77,160],[-173,322],[-39,51],[-50,25],[-31,28],[-21,30],[-18,89],[-43,53],[-80,75],[-60,126]],[[59963,71101],[-8,-10],[-15,-26],[-14,-22],[-30,-33],[-7,-20],[-6,18],[-13,-12],[-11,-75],[-23,-26],[-29,3],[-23,7],[-32,-5]],[[59752,70900],[13,44],[13,57],[13,77],[24,64],[49,217],[28,87],[10,125],[43,109],[33,32],[15,31],[0,47]],[[55846,84141],[-9,109],[5,217],[11,108],[51,63],[26,49],[15,65],[5,61],[10,49],[75,144],[60,15],[80,40],[90,33],[17,-42],[9,-32],[108,-117],[27,-40],[42,-135],[100,-68],[79,22],[34,33],[63,61],[28,45],[6,43],[-11,184],[-17,80],[6,50]],[[56756,85178],[11,-2],[27,24],[88,44],[17,2],[20,9],[56,34],[18,-18],[14,-20],[9,-1],[4,8],[-2,13],[4,10],[16,-6],[65,-55],[24,-13],[17,-4],[20,-26],[55,-18],[7,-13],[4,-17],[51,-71],[23,-35],[46,-33],[20,-7],[79,33],[23,11],[18,1],[19,-18],[42,-23],[39,-8],[7,2]],[[57818,84183],[-8,2],[-24,-8],[-38,-32],[-56,-78],[-14,-17],[-15,-59],[-3,-6],[-33,2],[-9,2],[-33,-1],[-71,15],[-28,-10],[-36,-60],[-14,-9],[-42,-8],[-7,-7]],[[79866,60313],[-15,-23],[-14,-59],[-10,-4],[-24,21],[-9,-11],[-15,-43],[-27,-47],[-13,0],[-9,5],[-11,-20],[-15,-36],[-7,1],[-26,-9],[-10,12],[-12,30],[-21,31],[-18,22],[-10,15],[-9,26],[-8,16],[-15,-36],[-26,-35],[-24,7],[-12,5],[-9,-50],[-7,-9],[-44,-9],[-8,-8],[7,-46],[26,-79],[7,-45],[-16,-73],[-45,2],[-20,30],[-19,41],[-7,21],[-57,41],[-39,-28],[-12,1],[-18,30],[-11,23],[-11,34],[-6,34],[0,16]],[[77811,63546],[2,32],[15,125],[18,81],[22,38],[22,16],[24,-6],[20,7],[16,19],[-1,12],[-19,3],[-8,21],[4,41],[8,26],[13,13],[13,40],[12,70],[15,35],[18,1],[30,30],[42,59],[16,57]],[[78093,64266],[16,-26],[-6,-66],[9,-14],[4,-23],[-2,-37],[3,-32],[7,-15],[9,-8],[45,27],[27,2],[12,-17],[10,-11],[13,-9],[11,-11],[6,3],[15,28],[5,5],[1,13],[-11,25],[-11,21],[0,46],[5,80],[1,41],[-1,100],[-2,27],[-10,33],[-27,61],[-7,38],[-5,38],[1,24],[-7,27],[-4,26],[13,13],[14,29],[7,45],[7,33],[10,14],[9,5],[6,-3],[23,-59],[28,30],[22,-1],[19,-15],[10,-19]],[[69707,76179],[-15,26],[0,27],[16,46],[14,23],[6,44],[20,29],[20,47],[25,38],[46,28],[25,-9],[24,7],[38,23],[7,1],[15,1],[96,-36],[32,-1],[74,-46],[34,-10],[24,-13],[11,-20],[18,-25],[93,-19],[26,-13],[9,-22],[26,-27],[23,-6],[-20,106],[8,63],[30,173],[15,26],[30,23],[46,26],[18,36],[38,-4],[16,3],[12,6],[6,21],[43,-35],[72,-71],[54,-45],[64,-43],[88,-39],[75,-13],[13,10],[30,59],[14,2],[26,-5],[79,-3],[81,-3],[38,6],[83,25],[12,1],[19,-2],[50,-33],[37,-5],[25,0],[14,-2],[31,1],[50,-4],[61,-22],[75,4],[23,4],[42,-4],[32,-20],[42,-22],[26,-9],[17,-5],[31,-2],[19,7],[11,-10],[10,-53],[26,-35],[20,-34],[17,-36],[17,-15],[30,-1],[57,-10],[33,-15],[41,-63],[39,-65]],[[72280,76146],[5,-35],[5,-40],[-3,-10],[-5,-6],[-86,-10],[-19,-11],[-20,-56],[-73,-45],[-42,-23],[-17,1],[-40,-37],[-113,-91],[-55,-58],[-28,-24],[-22,-27],[-4,-27],[-1,-25],[-62,-118],[-46,-15],[-39,3],[-27,-18],[-38,-18],[-83,12],[-28,-2],[-55,17],[-21,-9],[-24,-24],[-32,-95],[-13,-22],[-6,-21],[-5,-46],[-12,-49],[-16,-38],[-11,-36],[-23,-34],[-22,-22],[-17,45],[-14,-13],[-14,-18],[-26,6],[-16,-9],[-37,-39],[-54,1],[-6,14],[-11,108],[-9,51],[-8,11],[-10,2],[-77,-85],[-36,-15],[-30,-3],[-39,25],[-8,-6],[-7,-14],[-3,-17],[12,-48],[-3,-10],[-18,1],[-24,-11],[-19,-22],[-56,-78],[-47,-26],[-43,-10],[-18,-9],[-8,-9],[-15,-37],[-15,-58],[-8,-29],[-6,-16],[1,-22],[12,-27],[9,-63],[-2,-16],[-9,-26],[-14,-25],[-30,-16],[-23,-7]],[[63409,68907],[-16,-13],[-10,6],[-11,31],[-17,77],[10,29],[-1,12],[2,9],[5,6],[6,36],[7,12],[12,-25],[33,-88],[0,-37],[-2,-14],[-18,-41]],[[62925,68603],[45,94],[21,51],[38,109],[19,78],[19,87],[16,67],[4,12],[9,23],[21,24],[30,22],[51,9],[36,1],[8,-1],[22,-11],[63,-54]],[[63327,69114],[-2,-21],[9,-64],[20,-69],[17,-56],[2,-27],[-15,4],[-12,11],[-22,11],[-42,-75],[-26,-40],[0,-14],[34,-16],[25,1],[17,11],[15,-18],[10,-46],[4,-37],[23,-133],[19,-45],[24,-80],[9,-41],[5,-35],[15,-51]],[[55712,75963],[5,26],[-2,55],[-15,91],[-10,30],[-22,30],[-16,19],[-30,17],[-15,50],[-23,57],[-11,13]],[[98046,53645],[-17,-19],[-6,3],[21,27],[0,-3],[2,-8]],[[98011,53600],[-20,-22],[-6,12],[8,0],[14,22],[16,1],[-2,-11],[-10,-2]],[[98060,52906],[1,-14],[-16,37],[-9,23],[0,10],[5,-6],[5,-12],[3,-9],[11,-29]],[[98063,52832],[-10,-3],[7,9],[2,11],[-1,36],[4,-3],[1,-15],[1,-21],[-4,-14]],[[98064,52426],[15,-23],[-2,-15],[-5,-18],[-20,-46],[-6,4],[19,42],[8,27],[-11,21],[-5,-5],[-1,0],[-4,20],[4,0],[8,-7]],[[98474,51381],[-9,-16],[-4,14],[5,18],[-8,73],[-12,10],[-8,22],[4,0],[12,-20],[10,-9],[6,-48],[4,-44]],[[98547,51145],[2,-30],[-7,4],[-2,11],[-2,30],[-7,30],[8,-8],[6,-23],[2,-14]],[[98065,52616],[-7,-2],[5,11],[31,13],[3,4],[5,-7],[0,-7],[-2,-3],[-16,-1],[-12,-6],[-7,-2]],[[97097,51339],[-3,-1],[-5,6],[0,7],[4,4],[5,-6],[-1,-10]],[[2163,49244],[1,-4],[4,1],[4,1],[-2,-4],[-8,-2],[-3,10],[4,8],[4,1],[1,-2],[-1,-2],[-1,0],[-3,-2],[0,-5]],[[2476,50037],[-1,-5],[-2,4],[1,6],[2,6],[1,-3],[-1,-8]],[[2435,49272],[-3,-3],[-3,1],[-2,4],[0,6],[3,4],[3,-1],[3,-6],[-1,-5]],[[1524,49150],[3,-8],[0,-4],[-1,1],[-5,2],[-1,5],[3,-3],[2,1],[-4,6],[-2,5],[-3,2],[0,3],[3,-1],[5,-9]],[[6957,49488],[-1,-4],[-4,5],[-6,9],[-6,9],[0,4],[8,5],[10,5],[2,-6],[-2,-9],[-1,-18]],[[7838,45252],[-2,-9],[-5,3],[-2,12],[-1,12],[2,11],[2,-1],[4,-12],[2,-16]],[[6704,48601],[-6,-2],[-8,0],[-3,7],[-1,6],[3,1],[2,-2],[11,-1],[3,-4],[-1,-5]],[[6294,52912],[46,-67],[-20,-5],[-48,32],[-44,66],[13,15],[7,-24],[20,-22],[12,46],[7,11],[-35,48],[14,-3],[33,-32],[-5,-65]],[[5739,54103],[22,-49],[-4,-24],[-16,2],[-7,8],[12,5],[2,9],[-6,14],[-7,10],[-5,0],[-2,-20],[-8,16],[5,15],[6,10],[8,4]],[[2306,50249],[9,-11],[7,-15],[4,-20],[-1,-5],[-5,0],[-6,6],[-5,9],[-2,2],[-1,2],[6,-1],[6,-9],[5,-4],[-1,10],[-5,18],[-4,6],[-4,5],[-5,3],[-4,-3],[-1,-2],[-1,5],[1,3],[1,4],[6,-3]],[[61387,50599],[-11,-5],[6,33],[30,43],[13,-10],[2,-10],[-1,-8],[-5,-9],[-34,-34]],[[59796,55006],[-1,-19],[0,-27],[7,-16],[10,-11],[15,12],[12,16],[13,3],[77,-43],[12,-38],[0,-40],[3,-30],[-6,-29],[-6,-90],[2,-82],[23,-60],[20,-48],[16,-67],[13,-21],[16,-10],[53,-3],[78,-4],[75,-4],[7,-2],[16,-9],[69,-91],[63,-82],[54,-72],[52,-70],[51,-68],[39,-57],[39,-17],[62,-8],[44,-3],[40,-23],[60,-22],[44,-12],[27,-12],[75,-14],[12,8],[33,63],[37,101],[15,56],[47,56],[84,77],[59,55],[66,55],[30,-48],[41,-76],[18,-38],[15,-17],[23,-11],[27,0],[15,2],[30,10],[71,9],[41,-1]],[[61536,50866],[-40,-99],[-33,-45],[-45,-21],[-13,4],[-18,14],[-7,-24],[-5,-37],[-10,8],[-7,11],[4,-66],[5,-32],[-7,-44],[-22,-38],[-2,-32],[-47,-85],[-66,-10],[-35,-42],[-16,-34],[-12,-75],[5,-116],[-19,-88],[-3,-45],[-35,-57],[-15,-53],[-11,-54],[-10,-24],[-12,-120],[-16,-73],[-4,-25],[-4,-22],[-12,-43],[-8,-29],[-6,-20],[-41,-187],[-32,-85],[-24,10],[-17,-33],[-2,-15]],[[63939,77681],[-9,-17],[-15,3],[-28,61],[8,62],[10,13],[14,8],[2,-13],[-20,-28],[-2,-35],[17,-39],[23,-15]],[[63975,77748],[-10,-8],[-6,37],[11,31],[15,4],[-5,-49],[-5,-15]],[[64633,78001],[-5,-6],[-18,16],[-12,26],[15,31],[14,-5],[9,-33],[-3,-29]],[[64581,75910],[-7,60],[-3,94],[1,30],[15,79],[16,54],[13,56],[5,73],[-11,118],[-13,26],[-16,9],[-17,2],[-30,-5],[-14,-9],[-25,40],[-30,6],[-16,-11],[-16,-6],[-17,11],[-15,24],[-10,25],[-7,29],[-23,57],[-24,31],[-28,7],[-46,-1],[-15,3],[-1,33],[6,72],[0,38],[-3,35],[-8,29],[-10,25],[-27,42],[-21,58],[-35,120],[-30,135],[-13,21],[-27,21],[-60,17],[-39,18],[-15,17],[-7,29],[1,32],[3,38],[9,31],[31,25],[67,5],[58,-3],[53,-56],[17,-13],[18,-4],[37,18],[19,5],[46,-6],[-14,27],[-17,14],[-18,-1],[-16,11],[-25,52],[-45,59],[-10,24],[-3,39],[8,34],[32,34],[26,47],[13,63],[11,28],[23,45],[34,-8],[54,32],[87,-6],[105,9],[29,-3],[67,-32],[39,-14],[46,-7],[34,14],[-32,44],[-69,51],[-17,44],[31,119],[43,109],[26,129],[-7,128],[-13,35],[4,42],[15,35],[11,35],[-9,42],[-19,65],[-10,22],[-33,35],[-66,2],[-54,19],[-17,-16],[-10,-24],[-13,-15],[-42,-32],[-14,-6],[-14,6],[-21,36],[-18,-4],[-56,22],[-26,49],[-10,7],[-90,38],[-32,8],[-71,-40],[-52,-52],[-15,-7],[-27,-32],[-15,-6],[-16,6],[-14,-2],[-32,-49],[-57,-57],[-28,-35],[-31,-23],[-35,-14],[-36,-2],[-13,-13],[-41,-4],[-25,-11],[-1,-19],[5,-43],[-21,15],[-22,-30],[7,-28]],[[74256,80118],[-26,11],[-51,3],[-30,-7],[-15,-4],[-21,-24],[-16,-24],[-6,-40],[8,-45],[-11,-94],[-15,-36],[-32,-61],[-19,-14],[-30,-11],[-30,-18],[-58,-18],[-63,-9],[-22,-13],[-16,-42],[-12,-35],[-7,-27],[-17,-88],[-11,-78],[10,-98],[8,-108],[-1,-37],[16,-56],[7,-34],[-3,-48],[-22,-38],[-13,-51],[-13,-21],[-36,-10],[-34,-6],[-34,-43],[-27,-30],[-43,-38],[-20,-7],[-11,19],[-8,43],[-14,19],[-21,2],[-17,0],[-53,12],[-35,-1],[-25,-9],[-30,-5],[-51,16],[-33,13],[-22,13],[-53,38],[-70,45],[-28,13],[-17,-14],[-3,-25],[-4,-62],[-8,-39],[-49,-197],[-30,-137],[-38,-131],[-12,-88],[-23,-112],[-22,-81],[-9,-44],[-1,-18],[4,-25],[35,-28],[36,-17],[8,-10],[4,-29],[-1,-47],[-7,-44],[-11,-35],[-10,-17],[-12,-2],[-23,23],[-20,25],[-16,7],[-40,-13],[-37,-20],[-12,0],[-22,12],[-21,25],[-9,49],[-19,22],[-24,-22],[-75,-37],[-82,-44],[-51,-23],[-21,3],[-40,-5],[-35,-12],[-26,-17],[-52,-24],[-47,-16],[-30,-36],[-22,-35],[1,-13],[16,-20],[18,-17],[36,4],[35,3],[30,-22],[26,-14],[7,-18],[-7,-18],[-15,-4],[-6,-12],[3,-17],[-10,-43],[-5,-65],[5,-65],[3,-59],[-2,-30],[-1,-43],[11,-29],[10,-55],[18,-34],[27,-119],[16,-70],[15,-79],[-11,-42],[1,-25],[17,-21],[8,-40],[8,-25],[-2,-24],[-8,-10],[-37,15],[-31,-24],[-32,-25],[-4,-13],[-1,-14],[3,-13],[19,-22],[26,-14],[-2,-22],[-32,-10],[-48,-34],[-13,-36],[-11,-39],[-1,-24],[5,-61],[8,-69],[13,-72],[1,-22],[-7,-16],[-6,-10]],[[60770,71066],[20,-127],[19,-125],[20,-129],[20,-125],[-21,-12],[16,-96],[28,15],[29,11],[13,-62],[-41,-68]],[[59708,68751],[9,76],[-3,40]],[[59714,68867],[14,134],[8,63],[5,47],[20,94],[-3,31],[5,109],[-2,21],[9,60],[17,86],[17,74],[7,33],[17,71],[16,86],[-9,47],[-2,10],[6,54],[8,89]],[[59847,69976],[4,48],[9,63],[17,54],[-8,126],[1,68],[11,78],[-6,91]],[[59875,70504],[5,129],[1,12],[6,16],[4,8],[35,27],[14,3]],[[87046,72697],[-12,-21],[-24,7],[-14,31],[5,35],[25,27],[23,-54],[-3,-25]],[[88428,73630],[-26,-2],[-7,6],[16,14],[1,24],[10,42],[0,13],[-21,2],[1,48],[16,48],[43,75],[11,14],[2,-33],[-13,-77],[-3,-28],[34,-6],[-22,-93],[-42,-47]],[[87480,71594],[-30,-49],[-26,3],[-13,22],[-4,27],[25,43],[21,60],[19,27],[16,15],[12,-1],[-27,-84],[7,-63]],[[86283,69275],[-32,-12],[-17,13],[-16,71],[30,45],[41,-44],[8,-13],[-14,-60]],[[86377,69352],[-24,-6],[-1,34],[19,75],[2,55],[18,70],[8,15],[6,6],[6,-22],[-7,-85],[-18,-65],[-9,-77]],[[86133,70408],[-22,-20],[-3,19],[-9,9],[16,28],[0,12],[-11,19],[12,71],[-3,30],[44,12],[8,-29],[1,-87],[-33,-64]],[[85910,71499],[-18,-23],[-8,35],[8,102],[34,-21],[0,-31],[-16,-62]],[[85940,71632],[-6,-28],[-19,19],[-8,18],[17,87],[-2,34],[1,16],[35,45],[6,-8],[2,-13],[-3,-20],[2,-43],[-27,-71],[2,-36]],[[85740,70727],[10,-15],[16,9],[13,2],[9,-8],[11,-40],[4,-24],[-20,-3],[-9,-5],[-11,-30],[-16,11],[-10,14],[-2,19],[5,70]],[[86216,70520],[-24,-3],[-11,7],[-4,18],[35,37],[26,-6],[-11,-34],[-11,-19]],[[89186,77956],[-11,-37],[-14,55],[-3,58],[8,0],[16,-9],[3,-28],[1,-39]],[[89248,77833],[-19,-4],[-23,24],[-3,30],[17,24],[16,-9],[16,-31],[5,-16],[-9,-18]],[[88744,76083],[-6,-3],[-7,5],[-6,43],[5,23],[18,16],[17,5],[-14,-80],[-7,-9]],[[87319,71706],[-5,-11],[-5,3],[-18,-26],[-4,25],[-13,17],[-2,13],[40,9],[13,-7],[-6,-23]],[[88737,71846],[-3,-27],[-15,6],[-7,18],[1,32],[16,0],[8,-29]],[[85854,70760],[-7,-6],[-9,52],[-6,18],[10,10],[21,94],[4,-37],[8,-37],[8,-6],[-8,-27],[-12,-10],[-9,-51]],[[85969,70980],[-19,-27],[-15,0],[13,32],[2,15],[11,43],[21,15],[9,2],[-17,-44],[-5,-36]],[[86054,71283],[-20,-24],[-14,19],[7,51],[5,17],[16,-17],[6,-46]],[[86826,71494],[-8,-23],[-24,7],[10,20],[7,24],[6,5],[4,-26],[5,-7]],[[86740,71396],[13,-21],[32,9],[4,-6],[-9,-19],[-14,-19],[-26,14],[-16,1],[-2,31],[2,12],[16,-2]],[[86032,70078],[-9,-10],[6,45],[22,40],[2,-26],[-21,-49]],[[89496,67175],[-5,-1],[-18,61],[5,3],[10,-9],[12,-36],[-4,-18]],[[89950,77256],[35,-3],[16,2],[26,-8],[106,-88],[32,-11],[33,-1],[23,7],[20,24],[64,106],[67,97],[8,-4],[0,-27],[-5,-29],[-30,-89],[-33,-119],[-7,-60],[11,-59],[20,-49],[17,-66],[19,-93],[26,-11],[14,-2],[27,28],[25,35],[22,4],[22,-6],[-30,-24],[-28,-30],[-24,-57],[-9,-10],[-28,3],[-16,-2],[-32,-24],[-29,-27],[-27,-33],[-30,-17],[-32,-4],[-49,-27],[-32,-2],[-59,23],[-29,-6],[-63,-53],[-58,-77],[-50,-86],[-42,-104],[-17,-54],[-10,-60],[-2,-40],[-4,-38],[-9,-27],[-12,-22],[-35,13],[-57,55],[-110,81],[-117,123],[-66,62],[-123,-19],[-117,-118],[-11,10],[-44,81],[-22,32],[-26,9],[-19,-1],[-19,-6],[-26,-41],[-10,-30],[-7,-34],[-2,-24],[3,-24],[25,-53],[31,-40],[13,-8],[30,3],[14,-4],[49,-80],[55,-74],[12,-25],[-20,-26],[-22,-13],[-26,3],[-25,10],[-44,32],[-18,-27],[-29,-56],[-16,-60],[-13,-28],[-32,-36],[-34,-19],[-17,6],[-14,23],[-7,27],[-4,32],[7,69],[17,62],[7,63],[-14,89],[-9,18],[-36,53],[-17,50],[-4,63],[2,35],[9,77],[9,39],[16,13],[18,8],[28,27],[30,36],[29,41],[29,51],[15,55],[-25,68],[-5,40],[4,38],[26,20],[27,-15],[55,-56],[11,-5],[37,-3],[51,-12],[30,3],[14,8],[22,46],[10,59],[-4,75],[0,75],[14,61],[43,99],[12,57],[4,141],[16,62],[12,64],[6,135],[-17,129],[-18,64],[-20,60],[3,58],[16,53],[0,16],[4,14],[31,11],[14,11],[14,26],[16,15],[12,-15],[10,-26],[43,-65],[68,-116],[80,-176],[50,-86],[53,-78],[59,-79],[63,-69],[39,-32],[29,-52],[18,-8]],[[86437,71199],[37,-17],[16,-1],[14,7],[23,23],[23,17],[17,-9],[14,-20],[8,-28],[-4,-30],[-26,-63],[-22,-68],[50,-13],[50,1],[-12,-42],[-1,-36],[15,-18],[13,-23],[-4,-21],[-7,-21],[27,-32],[-2,-21],[-7,-22],[-68,-145],[-20,-73],[-13,-81],[-13,-59],[-9,-61],[-8,-66],[-12,-68],[4,-61],[-4,-62],[-34,-153],[-25,3],[-30,18],[-19,-3],[-10,-34],[17,-70],[-54,-83],[-60,-56],[-1,26],[6,20],[9,16],[6,19],[9,66],[-5,65],[-18,83],[-1,29],[12,12],[9,4],[4,11],[1,27],[-6,21],[-17,6],[-17,1],[-11,-31],[-16,-59],[-8,-59],[3,-33],[7,-29],[22,-49],[-6,-29],[-9,-22],[-77,50],[-17,4],[-14,11],[-15,67],[32,16],[9,8],[3,22],[5,65],[-15,55],[-12,19],[-11,23],[7,46],[-4,58],[-1,81],[6,14],[29,16],[21,44],[19,49],[27,87],[22,94],[-21,5],[-18,17],[19,45],[-6,56],[-29,69],[-17,81],[-26,36],[-14,13],[-17,-19],[-14,-23],[13,-53],[-1,-46],[2,-47],[13,-2],[16,11],[13,-8],[7,-24],[2,-32],[-5,-31],[-12,-15],[-15,1],[-14,17],[-12,24],[-27,13],[-28,-28],[-28,-58],[-23,-29],[11,42],[5,47],[-11,32],[-27,54],[-6,31],[-2,38],[5,37],[28,-43],[14,-53],[20,-23],[25,-1],[-19,79],[-7,20],[-28,35],[-37,59],[-23,29],[8,62],[14,12],[12,-3],[39,-22],[4,31],[-6,16],[-3,20],[26,26],[42,22],[9,11],[8,22],[10,11],[30,0],[25,21],[20,58],[5,31],[8,27],[51,46],[13,7],[34,-6],[32,-26],[16,-55],[13,-60],[33,-40]],[[87321,71576],[38,-24],[39,6],[0,-105],[5,-35],[11,-32],[-5,-46],[18,-16],[-53,-52],[-48,-70],[-20,-47],[-17,-50],[-11,-53],[-6,-58],[-16,23],[-46,93],[-29,26],[-47,13],[-15,-3],[-96,-87],[-13,-63],[-26,-96],[-12,-32],[-14,-9],[-10,-16],[-11,-82],[-30,-51],[-18,-1],[-31,14],[-14,-8],[19,81],[-30,9],[-30,-1],[0,52],[-18,30],[13,39],[0,31],[8,18],[3,25],[-1,22],[-18,6],[-12,16],[2,57],[-10,2],[-26,-10],[-54,-44],[-15,0],[23,31],[48,43],[21,25],[48,69],[29,33],[16,58],[5,36],[10,31],[9,49],[15,17],[27,43],[15,-4],[17,-53],[23,-40],[16,3],[30,21],[14,5],[34,-3],[30,26],[13,30],[4,37],[-11,63],[15,-6],[14,3],[33,40],[34,23],[35,6],[40,-22],[39,-36]],[[89229,75675],[11,-11],[52,29],[-10,-88],[-5,-89],[4,-148],[4,-67],[9,-65],[22,-46],[29,-33],[42,-105],[23,-129],[16,-63],[11,-66],[4,-30],[0,-30],[-3,-41],[4,-33],[-5,-105],[-19,-121],[-2,-62],[-16,-12],[-10,-29],[-9,-13],[-9,-10],[-14,-3],[-9,-11],[-4,-33],[-6,-31],[-12,-28],[-9,-31],[-8,-75],[-3,-77],[-11,-54],[-28,-14],[-32,1],[-40,-25],[-9,-15],[-32,-94],[-9,-56],[0,-59],[9,-73],[12,-72],[9,-133],[-10,-203],[-9,-65],[-20,-44],[-16,-20],[-13,-25],[-17,-66],[-29,-132],[-2,-34],[0,-34],[-8,-45],[-5,-44],[5,-51],[9,-48],[38,-123],[15,-36],[17,-34],[-65,-36],[-12,-17],[-39,-70],[-12,-67],[1,-73],[-7,-27],[-10,-23],[-12,-15],[-43,-34],[-28,-33],[-27,-52],[-11,-28],[-21,9],[-13,24],[12,31],[-3,35],[6,93],[-7,37],[22,28],[10,45],[24,35],[16,32],[3,26],[-15,28],[-15,20],[-22,0],[-21,-6],[-13,-27],[-5,-36],[1,-16],[-2,-15],[-32,-49],[4,-52],[10,-26],[12,-13],[-4,-17],[-15,-42],[-11,-4],[-20,58],[-25,32],[-31,0],[-31,-12],[-25,-39],[-8,-32],[-5,-33],[2,-81],[-10,-68],[-19,-59],[-10,-22],[-23,-40],[-17,-5],[-12,18],[-9,28],[12,101],[-1,57],[28,29],[-23,41],[-28,16],[-39,-21],[-11,-25],[-8,-33],[-21,-41],[-24,-39],[-26,-66],[-18,-79],[-58,26],[-32,6],[-32,-2],[-57,9],[-63,-16],[-71,-30],[4,22],[59,47],[2,14],[-6,26],[-14,1],[-35,-9],[-18,4],[-8,28],[-12,12],[-7,-12],[2,-54],[-9,-7],[-11,14],[4,42],[-8,61],[-1,39],[12,32],[-12,14],[-14,-5],[-17,-16],[-14,-22],[-32,-112],[-12,-64],[23,-52],[63,-72],[10,-17],[1,-31],[-8,-32],[-17,-15],[-69,-24],[-59,-46],[-18,-47],[-54,-183],[-43,-125],[-62,-43],[-67,39],[-16,43],[-14,54],[-25,48],[-22,53],[-13,63],[2,101],[-10,61],[9,16],[37,37],[12,21],[21,48],[8,27],[1,41],[-17,21],[-44,-1],[-43,-13],[-31,18],[-41,49],[-12,11],[-43,3],[-31,-9],[-31,-18],[-32,-6],[-11,-9],[-37,-60],[-29,-38],[-26,-19],[-55,-5],[-28,-12],[-29,-20],[-8,1],[-30,-27],[-35,-24],[-19,-24],[-34,16],[-68,-43],[-33,-5],[-34,23],[-31,38],[-30,-16],[-21,-56],[-10,-113],[-12,-50],[-4,-61],[-15,10],[-91,109],[-6,4],[-74,-19],[-19,-9],[-23,-22],[-25,-10],[-23,16],[-22,26],[-21,-8],[-22,-18],[-8,165],[4,21],[14,29],[14,25],[36,9],[36,-9],[25,12],[22,32],[23,47],[26,37],[35,30],[34,34],[30,48],[28,52],[26,39],[28,32],[43,77],[57,87],[22,64],[13,18],[49,35],[65,28],[31,-2],[30,-56],[17,8],[16,14],[34,8],[34,-9],[34,0],[33,7],[65,19],[34,22],[33,29],[118,20],[82,48],[12,-3],[13,-11],[1,-36],[-10,-39],[10,-24],[16,-14],[76,-5],[22,-8],[32,26],[30,33],[31,44],[22,49],[-20,61],[-4,67],[17,73],[24,62],[30,37],[27,42],[54,121],[40,98],[14,121],[-8,142],[34,106],[33,18],[66,49],[34,14],[5,-21],[-1,-28],[-51,-89],[-30,-36],[-17,-12],[-16,-16],[-7,-31],[26,-53],[7,-38],[-2,-37],[1,-34],[30,-36],[34,-12],[14,0],[13,10],[39,89],[8,15],[111,65],[55,50],[30,13],[28,26],[64,100],[23,46],[21,51],[18,59],[13,64],[18,40],[101,95],[32,52],[11,25],[12,73],[9,75],[12,59],[16,56],[22,57],[25,52],[15,54],[21,128],[10,72],[7,25],[11,22],[9,27],[7,31],[3,30],[5,93],[-3,72],[-16,61],[-14,17],[-15,1],[-23,-5],[-19,24],[4,22],[20,4],[13,12],[9,21],[18,66],[11,71],[1,31],[-14,58],[-11,69],[0,37],[12,43],[17,34],[16,9],[17,2],[15,13],[14,20],[8,21],[13,59],[4,33],[-7,90],[8,24],[11,15],[16,-11],[15,-2],[19,3],[17,-9],[4,-23],[11,-151],[6,-21],[13,-16],[14,3],[13,23],[8,32],[17,6],[51,-34],[18,24],[11,37],[11,66],[-5,60],[-13,21],[-12,-4],[-11,-16],[-13,-9],[-75,-31],[1,66],[16,99],[9,31],[12,15],[32,-17],[15,-11],[34,-48]],[[84525,65965],[-16,-91],[-14,-13],[-14,7],[-14,51],[10,19],[14,-10],[11,4],[25,74],[7,-12],[-9,-29]],[[84413,65829],[-18,-8],[-21,10],[-19,2],[0,18],[20,17],[0,25],[5,13],[46,-30],[-2,-22],[-11,-25]],[[84845,66096],[-24,-15],[-25,8],[4,81],[9,-11],[5,-28],[19,-16],[12,-19]],[[85627,67196],[-27,-27],[-10,-31],[-25,-11],[-24,-44],[-23,-9],[0,-35],[10,-30],[-15,-6],[-17,-36],[-1,-27],[6,-22],[-1,-11],[-20,-31],[-22,-2],[-1,35],[2,25],[20,63],[0,73],[19,8],[7,10],[29,52],[6,22],[-16,21],[1,25],[4,11],[24,-8],[10,-19],[5,-2],[14,14],[6,25],[27,50],[11,49],[21,-41],[-6,-52],[-14,-39]],[[85832,67811],[-12,-11],[-15,15],[-5,66],[7,32],[12,7],[11,-57],[7,-24],[-5,-28]],[[85958,68092],[-24,-47],[-25,42],[-31,29],[15,7],[8,11],[1,18],[20,27],[40,20],[12,2],[14,19],[5,17],[6,9],[25,24],[7,-28],[-1,-21],[-19,-12],[-19,-29],[-17,-36],[-16,-15],[-5,-11],[4,-26]],[[85922,68032],[2,-13],[-27,11],[-11,53],[18,-10],[6,-18],[12,-23]],[[88844,70884],[-5,-6],[-13,19],[-2,17],[2,10],[9,2],[18,-20],[-9,-22]],[[28538,62475],[34,-21],[35,-11],[15,0],[14,-7],[32,-49],[26,-28],[97,-60],[33,-105],[6,-33],[-25,-19],[-32,-7],[-30,-1],[-28,20],[-12,16],[-29,7],[7,14],[-13,7],[-16,-2],[-12,-40],[-14,-32],[-25,3],[-10,27],[-13,-12],[-11,-20],[-13,-75],[-21,37],[-23,31],[-28,13],[-57,2],[-28,11],[-22,63],[-9,18],[-23,17],[-22,72],[-8,10],[-62,16],[-12,40],[4,36],[20,44],[10,12],[34,-1],[32,13],[14,19],[15,12],[117,-32],[27,0],[26,-5]],[[52903,78839],[7,-6],[28,-1],[31,-4],[19,-31],[19,-10],[28,-3],[18,4],[9,11],[11,36],[19,45],[31,22],[52,5],[27,8],[27,-1],[20,-7],[21,1],[54,31],[56,25],[8,-4],[1,-9],[-10,-18],[-10,-25],[7,-29],[31,-57],[17,-44],[17,-33],[25,-17],[33,-11],[28,-4],[30,-12],[100,-31],[51,-8],[39,-2],[58,-20]],[[53811,78103],[17,23],[-43,82],[-19,0],[-26,-35],[-72,36],[-14,-15],[-10,-28],[-25,-35],[-35,-15],[-40,-38],[-41,-27],[-32,-21],[-18,4],[29,44],[-13,1],[-38,-31],[-22,-27],[-7,-44],[-7,-74],[17,-19],[30,-97],[36,-41],[-7,-40],[-9,-31],[-22,-27],[-19,20],[-11,0],[-8,-64],[16,-168],[25,-119],[25,-51],[57,-81],[60,-42],[108,-136],[59,-42],[15,-24],[36,-104],[31,-121],[33,-189],[24,-94],[48,-105],[100,-151],[90,-111],[84,-68],[66,-12],[155,15],[27,-6],[29,-19],[6,-47],[-10,-32],[-33,-33],[-33,-46],[-4,-63],[31,-44],[150,-117],[153,-98],[48,-50],[55,-78],[134,-107],[22,-52],[82,-111],[36,-87],[7,-67],[-17,-67],[-8,-48],[-14,-48],[-35,18],[-39,49],[-59,197],[-108,20],[-22,15],[-39,34],[-2,22],[-10,28],[-9,10],[-42,6],[-28,-32],[-34,-76],[-38,-109],[-39,-160],[-2,-64],[21,-63],[63,-35],[48,-56],[32,-58],[3,-140],[14,-80],[-21,-45],[-41,11],[-54,-29],[-39,-51],[-16,-49],[4,-128],[-8,-48],[-73,-92],[-38,-94],[-10,-39],[-14,-45],[-93,-1],[-21,55],[-1,81],[16,50],[34,24],[22,104],[-7,75],[14,33],[12,23],[26,14],[37,13],[3,105],[-28,48],[-10,66],[-14,124],[-47,157],[-25,140],[-19,69],[-30,37],[-54,-1],[-27,10],[-96,98],[-6,15],[0,25],[16,40],[-10,52],[-12,50],[-18,43],[-21,22],[-43,-14],[-15,-10],[-27,4],[-21,-19],[-12,-1],[33,75],[-9,17],[-33,31],[-45,5],[-12,4],[-8,-20],[-8,11],[1,33],[-53,150],[-35,61],[-17,11],[-32,-13],[-54,27],[-32,6],[-17,-7],[-27,-19],[-13,12],[-5,20],[-48,63],[-61,35],[-118,197],[-36,74],[-75,81],[-47,119],[-39,43],[-56,35],[-13,-4],[-17,-13],[-13,-2],[-10,15],[10,16],[12,7],[-4,45],[-64,118],[-38,37],[-10,24],[-8,32],[-8,20],[-18,13],[-15,-3],[-21,8],[1,57],[4,43],[-3,37],[-20,96],[-36,82],[-20,195],[-17,55],[-39,42],[-88,46],[-122,126],[-26,2],[-74,49],[-46,8],[-59,-43],[-72,-121],[-59,-125],[-21,-25],[-75,-43],[-67,-20]],[[52081,77054],[-1,32],[-2,24],[11,27],[19,31],[17,40],[7,28],[-3,19],[-8,28],[-11,2],[-63,-23],[-15,6],[-47,36],[-50,46],[-19,32],[-7,32],[5,21],[-4,20],[-10,27],[9,31],[16,39],[8,26],[13,7],[6,16],[-10,64],[-6,10],[-9,8],[-14,1],[-24,13],[-18,22],[-4,30],[-9,28],[-16,27],[-1,28],[17,15],[25,1],[17,-6],[39,46],[14,4],[13,10],[10,63],[9,19],[2,11],[-8,13],[-31,45],[-15,46],[-22,51],[-21,23],[-4,18],[-1,23],[5,19],[37,31],[23,34]],[[52887,76530],[9,-22],[1,-13],[-6,-15],[3,-33],[-24,28],[-35,-14],[-21,3],[-6,24],[5,15],[33,3],[11,7],[20,-3],[10,20]],[[53871,75291],[-12,-5],[-7,6],[-4,9],[5,22],[25,-13],[-1,-12],[-6,-7]],[[53347,73016],[-13,-6],[-18,19],[-1,28],[3,9],[22,-13],[6,-26],[1,-11]],[[54326,73859],[-19,-66],[-9,-25],[-67,-160],[-7,-37],[-5,-40],[-7,-35],[-9,-34],[-9,-42],[1,-48],[4,-23],[8,-16],[13,-14],[10,-22],[-16,-21],[18,-40],[14,-24],[2,-24],[0,-24],[-30,-46],[-12,-24],[-8,-31],[-3,-31],[3,-28],[-1,-28],[-30,4],[-32,17],[-31,-8],[-45,33],[-16,5],[-15,13],[-38,100],[-30,43],[-32,33],[-33,2],[-33,-4],[-29,20],[-59,68],[-63,55],[-27,35],[-12,24],[-14,16],[-36,16],[-33,37],[-14,2],[-32,-4],[-16,2],[-16,13],[-32,44],[-20,60],[-5,26],[14,69],[17,65],[15,19],[17,13],[11,20],[9,23],[32,-68],[15,-17],[14,4],[26,24],[2,27],[29,35],[36,0],[17,-6],[9,-31],[14,-9],[16,-5],[53,-59],[15,-9],[15,-2],[41,25],[31,9],[66,-13],[36,15],[25,1],[36,23],[28,38],[15,9],[15,3],[38,-2],[38,-9],[16,9],[13,25],[16,11],[17,-8],[44,43],[19,2],[18,-16],[-16,-27]],[[52675,75392],[14,-37],[31,-151],[3,-32],[-6,-34],[-8,-23],[-31,-76],[5,-63],[11,-39],[2,-43],[-6,-54],[-19,-328],[-9,-58],[-6,-50],[-21,-16],[-28,17],[-34,28],[-16,-2],[-16,-10],[-13,9],[-13,16],[-9,-113],[-16,-46],[-23,-29],[-23,-2],[-23,10],[-19,0],[-15,21],[-12,38],[-18,47],[-19,55],[-2,49],[-3,109],[5,24],[8,23],[4,49],[-3,43],[6,15],[11,-15],[8,5],[-1,22],[3,40],[-15,34],[-24,11],[-2,35],[2,35],[13,23],[4,30],[1,94],[-18,34],[-6,52],[-9,33],[-16,34],[-18,27],[-12,26],[-2,69],[6,58],[6,24],[6,-3],[18,-29],[15,-6],[29,-7],[29,9],[35,26],[34,31],[49,93],[30,18],[16,25],[5,33],[13,8],[15,-32],[19,-3],[29,-26],[12,-26],[11,-30],[10,-13],[11,-8],[2,-7],[-9,-7],[-10,-35],[6,-10],[16,-19]],[[52355,74347],[-16,-57],[-17,40],[-1,35],[3,10],[20,-15],[11,-13]],[[52301,75483],[-9,-26],[-13,2],[5,19],[12,39],[15,13],[6,-11],[-7,-23],[-9,-13]],[[59875,70504],[-19,3],[-23,28],[-4,25],[-7,8],[-16,3],[-31,13],[-35,-43],[-15,-70],[-4,-33],[-12,-70],[5,-42],[2,-55],[3,-45],[-3,-27],[-7,-15],[2,-10],[6,-4],[19,12],[21,-12],[20,-23],[1,-15],[-14,-9],[-33,-35],[-23,-41],[-6,-38],[-16,-81],[2,-16],[8,-10],[54,9],[48,32],[37,35],[12,-2]],[[59714,68867],[-19,-44]],[[59695,68823],[-10,50],[-21,142],[-16,98],[-21,121],[-36,147],[-3,35],[-8,51],[-25,134],[-20,96],[-23,123]],[[59512,69820],[29,48],[0,41],[49,94],[-1,9],[-13,25]],[[59576,70037],[2,4],[54,175],[35,173],[33,241],[23,122],[20,81],[9,67]],[[59512,69820],[-9,48],[-4,18]],[[59499,69886],[52,92],[25,59]],[[47236,82899],[-1,-17],[-21,21],[-10,22],[-56,11],[23,22],[12,-6],[40,-1],[11,-10],[2,-42]],[[48272,83000],[12,-21],[5,-21],[-20,-7],[-22,4],[-10,-14],[-1,-26],[8,-34],[14,-24],[11,-55],[10,-60],[14,-37],[3,-45],[-2,-22],[3,-40],[-6,-14],[4,-38],[18,-78],[7,-43],[5,-94],[-12,-36],[-16,-33],[-11,-40],[-8,-43],[-5,-70],[-36,-81],[-15,-20],[-18,-13],[39,-56],[-32,-26],[-34,-8],[-38,14],[-23,-1],[-22,-19],[-8,-11],[-7,6],[-14,46],[-11,-48],[-22,-15],[-37,3],[-62,-13],[-24,-14],[-10,-21],[-8,-25],[-10,-14],[-11,-8],[-48,-18],[-9,-8],[-23,-40],[-29,-23],[-24,-7],[-21,23],[-9,14],[-10,8],[-33,-2],[10,-7],[7,-16],[3,-32],[-4,-31],[-16,-15],[-19,-3],[-31,-32],[-41,-9],[-22,-30],[-134,-50],[-7,0],[-19,13],[-20,5],[-20,-4],[-56,-28],[-28,6],[35,69],[47,35],[5,10],[-16,4],[-88,-24],[-31,-21],[-31,-6],[14,32],[40,43],[21,21],[14,8],[14,25],[42,29],[-135,-59],[-35,7],[-8,16],[-28,-7],[-10,40],[40,61],[24,26],[29,14],[27,20],[10,25],[-13,8],[-82,-6],[-39,5],[2,20],[8,22],[40,37],[22,6],[20,-4],[19,-9],[15,-13],[46,8],[-19,23],[-3,49],[-15,16],[19,22],[21,14],[36,47],[13,7],[71,11],[76,24],[76,34],[-39,19],[-19,25],[-30,-51],[-21,-19],[-61,-10],[-19,6],[-27,15],[-9,-6],[-8,-12],[-40,-24],[-42,-6],[49,45],[62,76],[14,25],[20,42],[-6,18],[-13,11],[45,87],[16,15],[29,3],[22,14],[9,0],[8,5],[19,26],[-29,16],[-29,9],[-92,-9],[-12,2],[-12,8],[-7,11],[-6,30],[-6,6],[-21,0],[-20,-9],[-15,1],[-14,13],[23,30],[-29,7],[-29,-6],[-25,9],[0,19],[11,19],[-15,18],[-3,23],[16,11],[16,-4],[35,17],[43,8],[-37,16],[-15,14],[-1,22],[3,18],[44,32],[46,13],[-4,21],[4,22],[-47,7],[-46,-16],[5,43],[11,38],[2,25],[-2,27],[-22,-11],[-3,38],[-9,26],[-32,-18],[1,35],[9,24],[17,11],[17,-5],[30,0],[30,19],[43,4],[69,-5],[47,-52],[12,9],[19,33],[9,3],[71,-14],[44,-18],[12,6],[-7,35],[-15,25],[19,33],[23,22],[16,11],[36,14],[15,13],[11,42],[16,35],[-90,-18],[-85,41],[14,29],[18,17],[31,13],[3,15],[15,13],[26,33],[-9,43],[5,32],[19,21],[6,30],[8,22],[38,8],[37,20],[13,-2],[43,5],[15,-8],[-4,36],[27,4],[10,-7],[5,-25],[12,-17],[3,-28],[-8,-22],[-13,-17],[12,-17],[-19,-31],[21,13],[29,31],[-1,25],[-5,31],[-9,28],[4,31],[17,20],[43,10],[-18,35],[16,3],[18,-7],[25,-28],[26,-21],[28,-17],[-27,-35],[-32,-23],[-13,-26]],[[62434,73238],[0,-4],[9,-41],[23,-153],[13,-19],[15,-16],[11,-23],[4,-23],[-1,-35],[0,-41],[6,-31],[9,-24],[8,-12],[12,-1],[14,-6],[9,-24],[31,-174],[3,-22],[13,-7],[21,3],[21,-18],[24,-28],[21,-53],[15,-9],[46,8],[63,-8],[29,-28],[-3,-16],[-23,-19],[-39,-22],[-12,-38],[-7,-48],[1,-27],[10,-30],[28,-60],[2,-21],[5,-30],[5,-21],[-6,-40],[-25,-27],[-34,-30],[-67,-132],[-5,-29],[0,-78],[-7,-23],[-21,1],[-17,4],[0,-28],[-11,-36],[-6,-32],[25,-75],[4,-40],[-4,-36],[-23,-63],[-13,-42],[3,-9],[18,-17],[56,-138],[17,-48],[24,13],[9,-1],[7,-8],[4,-16],[0,-21],[-6,-31],[30,-12],[11,-32],[35,-107],[-2,-32],[-16,-50],[0,-34],[3,-30],[5,-11],[52,-4],[22,-12],[53,-55],[61,-84],[50,-69],[43,-58],[45,4],[13,-11],[11,-18],[13,-48],[26,-109],[22,-37],[34,-87],[32,-82],[-21,-111],[-20,-116],[0,-149],[0,-80],[43,-3],[49,-4],[0,-96],[0,-96],[1,-110],[14,-5],[23,-23],[9,-36],[13,-19],[14,-3],[15,-18],[14,-32],[5,-24],[-4,-16],[3,-29],[10,-42],[13,-19],[18,-24]],[[63484,69102],[-25,-14],[-28,11],[-59,48],[-19,2],[-25,-19],[-1,-16]],[[65607,67350],[-26,-69],[-39,-58],[-17,18],[-12,0],[-28,-23],[-20,-3],[-37,-40],[-33,-20],[-23,2],[-8,4],[-5,27],[0,10],[15,-5],[51,36],[64,58],[6,26],[-10,43],[3,9],[41,-21],[46,42],[39,11],[19,-29],[-26,-18]],[[67017,72361],[5,-38],[-1,-23],[-9,-23],[-6,-29],[-7,-36],[-3,-28],[-13,-14],[-11,-9],[1,-36],[6,-31],[6,-36],[-7,-25],[-5,-28],[-10,-46],[3,-38],[-11,-33],[-14,-28],[-9,-23],[-2,-33],[-10,-11],[-19,-27],[-12,-19],[-18,-5],[-3,-16],[2,-15],[8,-9],[11,-33],[24,-57],[-68,-7],[-21,-51],[-23,-72],[11,-145],[-11,-75],[7,-42],[17,-29],[23,-16],[42,-1],[28,-12],[3,-19],[-16,-28],[-26,-54],[-14,-23],[-43,-107],[0,-45],[4,-37],[19,-116],[18,-112],[33,-202],[0,-46],[-11,-105],[0,-63],[4,-82],[-3,-43],[8,-95],[9,-7],[72,-18],[65,-17],[87,-23],[27,-56],[16,-122],[-1,-92],[-7,-47],[-63,-134],[-63,-136],[-63,-135],[-73,-156]],[[67107,66360],[-15,-4],[-12,-24],[-22,-30],[-47,23],[-37,24],[-124,57],[-13,28],[-8,48],[-21,13],[-31,-72],[-104,42],[-36,-13],[-21,22],[-57,2],[-44,45],[-64,-31],[-50,-6],[-69,79],[-74,22],[-60,-7],[-31,6],[-50,29],[-24,29],[-39,-22],[-18,41],[-110,38],[-21,74],[-15,68],[-1,70],[-27,123],[-9,177],[-10,70],[-15,60],[-20,51],[-27,55],[-24,22],[-103,42],[-20,-6],[-46,-27],[-49,-61],[-81,-34],[-17,-26],[-20,-59],[-26,-35],[-36,9],[-39,-35],[-72,-97],[-38,-29],[-32,2],[-34,46],[-76,62],[-49,20],[-69,-14],[-32,11],[-56,72],[-14,53],[-32,35],[-99,79],[-81,105],[-15,39],[-10,59],[-35,71],[-79,58],[-45,61],[-52,14],[-49,-2],[-21,11],[-20,27],[-67,127],[0,51],[-41,124],[-10,45],[-9,123],[-11,32],[-43,51],[-7,33],[10,44],[0,34],[-23,31],[-33,17],[-8,38],[6,73],[-5,47],[-30,73],[-43,76],[-44,111],[-17,28],[-11,73],[-16,87],[-24,6],[-119,-104],[-35,59],[-104,102],[-8,15],[-7,23],[13,14],[13,5],[26,-18],[16,21],[-6,35],[-26,21],[-36,-2],[10,-32],[-34,-30],[-7,-41],[5,-49],[3,-70],[-14,-33],[-10,-16],[-45,-4],[-21,-31],[-14,-7]],[[62449,74683],[5,-13],[45,-118],[20,-35],[12,-29],[8,-33],[13,-23],[18,-12],[23,-32],[15,-25],[25,-51],[26,-20],[96,-37],[54,-17]],[[62809,74238],[15,-5],[41,25],[48,-4]],[[62913,74254],[18,-1],[64,105],[19,36],[38,18],[21,42],[34,50],[42,48],[38,43],[30,26],[53,61],[33,21],[29,-1],[43,-71],[36,-65],[11,-28],[-18,-25],[-34,-25],[-6,-18],[-2,-23],[1,-22],[5,-18],[41,-42],[5,-23],[0,-23],[-5,-15],[-9,-8],[-29,-12],[-24,-13],[-9,-14],[-7,-16],[1,-17],[7,-20],[51,-55],[5,-20],[10,-27],[13,-17],[21,-4],[10,-11],[48,-101],[12,-7],[57,22],[8,-1]],[[63574,73983],[1,-25],[8,-143],[7,-74],[9,-72],[16,-66],[18,-62],[25,-39],[56,-47],[27,-13],[71,-9],[71,-21],[41,-22],[13,-15],[11,-23],[34,-110],[54,-78],[110,-117],[53,-39],[179,-74],[119,4],[328,142],[110,36],[41,0],[-25,-28],[-41,-17],[25,-20],[38,-3],[18,3],[13,18],[2,30],[-2,30],[-18,132],[-10,93]],[[77077,52687],[61,-162],[24,-22],[33,-74],[8,-25],[-9,-52],[-7,-147],[-15,-37],[-38,18],[-1,26],[-22,111],[-39,62],[-16,3],[-10,63],[-20,76],[-60,137],[46,-1],[22,33],[5,27],[4,7],[34,-43]],[[77545,50818],[-26,-3],[-55,69],[-13,31],[-3,42],[-52,159],[-7,37],[20,131],[54,31],[18,-22],[6,-59],[30,-106],[10,-57],[8,-26],[3,-19],[-2,-14],[22,-68],[15,-39],[2,-64],[-30,-23]],[[82399,46881],[-35,-120],[13,-19],[7,-18],[-58,-25],[-24,13],[-14,-3],[-59,22],[-42,28],[-5,21],[3,26],[13,-8],[32,-4],[13,11],[0,77],[-5,100],[44,82],[24,33],[27,20],[68,-46],[11,-12],[9,-18],[4,-30],[-26,-130]],[[82068,47145],[28,-31],[40,-89],[3,-25],[-12,-24],[-28,-38],[-63,-58],[-10,-28],[-14,-54],[-3,-23],[-4,-13],[-7,-9],[-14,-8],[-15,12],[13,34],[1,42],[-10,39],[-14,32],[-29,44],[-30,40],[-31,19],[-33,9],[-12,19],[-19,49],[-6,27],[-3,28],[2,27],[8,1],[32,-6],[59,-32],[30,-2],[16,7],[43,62],[11,-1],[41,-27],[30,-23]],[[79456,50881],[10,-40],[13,-35],[10,-39],[13,-185],[43,-159],[126,-63],[-21,-25],[-10,-23],[-8,-27],[-18,-110],[1,-24],[11,-37],[3,-41],[-16,0],[-17,10],[-15,15],[-13,20],[-14,16],[-15,10],[-26,32],[-34,22],[-36,17],[-17,47],[-8,58],[9,86],[-9,24],[-13,21],[-15,62],[-6,73],[-22,28],[-30,17],[-13,14],[-58,-26],[-14,6],[-12,20],[-32,21],[1,40],[15,32],[35,33],[16,27],[3,36],[-6,26],[3,28],[11,27],[13,21],[34,27],[16,-48],[7,-40],[10,-30],[14,42],[-9,72],[27,16],[26,1],[19,-20],[13,-31],[5,-44]],[[84216,49221],[6,-124],[-2,-32],[-15,47],[-6,10],[-4,-10],[-6,-5],[-8,0],[-10,-48],[-1,-45],[-8,-30],[-4,-101],[3,-28],[12,14],[7,3],[27,-39],[15,-28],[-4,-34],[-19,-35],[-21,-15],[-16,15],[-5,-7],[-9,-18],[-8,-24],[3,-24],[-19,-68],[-10,-19],[-22,21],[-14,-18],[-11,1],[-16,69],[0,32],[15,36],[1,26],[7,29],[17,40],[10,29],[0,19],[8,72],[2,30],[5,32],[8,66],[1,122],[26,101],[25,28],[11,5],[-2,-27],[31,-68]],[[84067,48807],[-7,-38],[-15,-30],[-13,-2],[-12,6],[-23,26],[-6,-27],[-18,1],[-6,35],[12,105],[19,39],[-2,41],[-15,88],[10,46],[43,34],[37,42],[12,9],[11,-32],[5,-149],[-40,-118],[8,-76]],[[80087,53968],[-38,-21],[-22,30],[24,36],[8,3],[6,7],[2,15],[-43,24],[-12,21],[-12,54],[0,34],[55,91],[13,10],[2,-38],[38,-95],[2,-64],[-1,-23],[-22,-84]],[[80057,50116],[-5,-61],[-6,-23],[-24,-30],[-7,-18],[-22,3],[-3,32],[-7,21],[-23,25],[-6,-6],[-4,-37],[-45,-26],[-13,-2],[6,49],[-11,38],[-1,47],[-2,21],[-6,12],[11,32],[-1,37],[12,39],[7,95],[47,21],[10,-17],[56,-21],[39,-58],[21,-77],[-23,-96]],[[87606,51467],[59,-22],[21,1],[21,-25],[26,12],[14,-8],[49,-88],[24,-58],[35,-50],[26,-17],[-19,-45],[-39,-24],[-15,-1],[-30,27],[-25,-5],[-21,34],[-4,52],[-21,119],[-29,-34],[-33,54],[-9,1],[-3,-9],[-14,19],[-12,37],[-1,30]],[[87631,50926],[110,-29],[29,4],[63,-12],[52,-38],[91,-7],[28,-12],[21,-26],[-51,-22],[-24,-20],[-45,-10],[-38,10],[-27,-12],[-10,20],[-39,20],[-51,41],[-105,49],[-5,30],[1,14]],[[86336,51840],[48,-24],[11,4],[70,-64],[11,-31],[-4,-21],[10,-29],[-22,-43],[-11,-5],[-12,16],[-22,10],[-25,-18],[-17,13],[-14,40],[-24,24],[-35,84],[-17,-3],[5,-33],[14,-21],[20,-64],[11,-6],[11,2],[16,-27],[-1,-41],[-40,-16],[-14,30],[-3,55],[-23,-19],[-9,-19],[-7,-2],[-15,57],[-43,3],[-29,30],[14,32],[2,30],[19,17],[19,-15],[19,22],[14,-6],[10,14],[38,9],[25,15]],[[85681,53025],[-44,-10],[-10,27],[-12,124],[31,99],[40,58],[27,15],[9,1],[24,-71],[-18,-144],[-21,-73],[-26,-26]],[[85597,50886],[-17,-23],[-8,-7],[-41,16],[-48,-3],[-50,-22],[-29,18],[-18,30],[1,32],[17,78],[37,60],[16,10],[26,-16],[45,-45],[36,-54],[32,-41],[1,-33]],[[85014,50431],[-4,-11],[-17,31],[-11,88],[-10,24],[-11,83],[3,24],[14,35],[11,0],[8,-21],[-5,-90],[25,-114],[-3,-49]],[[85006,50812],[85,-19],[-12,-21],[-92,-33],[-33,6],[-100,-20],[-12,1],[-2,32],[-11,23],[16,20],[21,4],[55,-7],[85,14]],[[84713,50860],[26,-20],[9,0],[9,24],[5,4],[12,-12],[2,-39],[17,6],[13,-14],[4,-9],[-1,-39],[-50,-6],[-36,-32],[-48,28],[-54,-48],[-33,-16],[-28,1],[-25,84],[14,99],[11,16],[18,8],[50,5],[85,-40]],[[86478,47235],[-4,-7],[-35,8],[-19,0],[2,43],[-10,33],[14,48],[0,56],[15,7],[2,32],[17,84],[10,19],[15,7],[17,49],[10,15],[10,37],[15,17],[-2,32],[9,17],[23,13],[16,-15],[10,-33],[-26,-40],[13,-99],[-19,-108],[-12,-33],[-23,-27],[-6,-27],[-27,-53],[-8,-46],[-2,-19],[-5,-10]],[[85222,47426],[3,-28],[0,-13],[-33,-9],[-32,-31],[-17,-36],[-13,-46],[-44,19],[-39,3],[-18,16],[-19,-1],[-24,-14],[-35,-40],[-8,-3],[3,60],[10,37],[36,88],[31,-19],[36,-6],[40,18],[29,39],[40,21],[33,-52],[21,-3]],[[84603,47153],[7,-35],[22,20],[21,4],[47,-3],[35,-8],[21,-15],[2,-70],[-10,-15],[-181,-53],[-18,17],[-7,17],[20,52],[-9,25],[10,40],[22,27],[18,-3]],[[86389,51085],[-10,-16],[-34,15],[-17,35],[-12,48],[-8,39],[-2,32],[-10,38],[1,14],[62,40],[12,-15],[26,-1],[12,-29],[-8,-127],[-12,-73]],[[76803,54855],[34,-5],[63,31],[35,-3],[32,-23],[30,-13],[72,17],[14,-5],[13,-13],[11,-20],[33,-75],[56,-92],[16,-59],[9,-67],[6,-15],[63,-127],[7,-54],[-9,-73],[19,-59],[61,-55],[36,-40],[8,-24],[5,-29],[21,-44],[25,-28],[78,-74],[103,-156],[59,-74],[48,-112],[18,-54],[14,-58],[29,-84],[50,-105],[13,-31],[13,-46],[16,-43],[19,-39],[22,-30],[22,-10],[37,-75],[20,-24],[-3,59],[-17,51],[0,32],[3,27],[14,24],[16,6],[31,-21],[49,-89],[21,-52],[16,-72],[13,-75],[20,-37],[27,-13],[31,-5],[28,-23],[65,-104],[22,-48],[16,-57],[12,-68],[7,-71],[4,-16],[42,-85],[22,-36],[27,-18],[78,-19],[28,-30],[23,-49],[10,-50],[-17,-44],[-61,-68],[-66,-47],[64,16],[32,20],[30,31],[30,39],[46,55],[17,11],[21,-4],[18,-16],[28,-53],[26,-57],[20,-66],[12,-73],[-22,-39],[-33,-28],[-45,-71],[-4,-28],[9,-18],[-11,-52],[25,-32],[4,-28],[-22,-39],[2,-24],[26,-103],[13,-24],[40,-52],[60,-53],[34,-25],[38,-19],[17,1],[28,8],[6,-20],[12,-102],[6,-64],[9,-137],[11,-57],[-1,-69],[15,-59],[30,-38],[32,-31],[15,-30],[0,-45],[-5,-36],[-11,-28],[-33,-60],[-6,-25],[-5,-65],[6,-30],[13,-2],[10,16],[40,87],[11,16],[15,12],[15,8],[72,0],[31,-13],[27,-29],[25,-36],[88,-228],[40,-126],[3,-31],[1,-33],[-7,-25],[-37,-86],[-4,-23],[-12,-94],[2,-67],[13,-29],[9,-30],[0,-28],[-25,-139],[-2,-23],[15,-226],[1,-61],[-3,-77],[2,-124],[-19,-384],[-4,-23],[-15,-59],[-20,1],[-16,10],[-12,22],[-6,28],[-9,23],[-48,71],[-13,-12],[-49,-88],[-13,-13],[-16,11],[-25,26],[-81,93],[-5,-30],[-1,-40],[16,-101],[2,-44],[-15,-9],[-8,2],[-33,59],[-31,65],[-35,87],[-26,42],[-23,46],[-66,177],[-17,27],[-101,124],[-20,30],[-26,51],[-28,46],[-61,72],[-106,184],[-46,105],[-51,170],[-17,43],[-86,128],[-47,77],[-20,44],[-45,155],[-14,52],[-16,46],[-28,37],[-24,44],[-49,140],[-15,55],[-11,61],[2,120],[-103,366],[-26,114],[-23,158],[-6,16],[-56,142],[-19,45],[-24,43],[-20,50],[-38,162],[-15,45],[-20,33],[-73,61],[-27,34],[-22,48],[-13,62],[-14,131],[-35,199],[-38,267],[-26,119],[-30,94],[-9,21],[-133,169],[-22,25],[-24,15],[-34,11],[-27,43],[-10,78],[-6,105],[-7,63],[-7,35],[-56,75],[-21,58],[-18,65],[-17,50],[-61,172],[-21,45],[-26,32],[-76,33],[-23,29],[-37,98],[-22,50],[-67,109],[-114,230],[-23,57],[-18,60],[-14,64],[-48,177],[3,36],[8,37],[-1,31],[-6,31],[1,27],[15,16],[32,21],[34,-2],[31,-9],[30,-17],[29,-38],[51,-94],[30,-33],[33,-15],[67,-22]],[[84106,46882],[-40,-20],[-24,-20],[-23,-26],[-15,-5],[-27,-2],[-37,5],[-26,-9],[-71,-66],[-28,-6],[-24,-16],[-8,26],[-10,19],[-24,4],[-24,-1],[-24,-59],[-38,13],[-15,-6],[-14,-12],[-14,-5],[-15,4],[-56,45],[-64,27],[-64,-10],[-55,25],[-30,-19],[-29,-28],[-8,29],[-11,26],[-9,37],[0,44],[3,30],[8,27],[5,29],[3,31],[12,-15],[12,5],[38,34],[37,50],[34,19],[20,5],[16,-10],[17,4],[18,11],[28,-39],[11,-8],[38,-3],[34,-22],[30,-34],[44,-31],[27,-42],[20,-15],[15,-5],[13,6],[18,28],[20,12],[18,0],[32,7],[14,7],[15,15],[15,-9],[13,-15],[54,-74],[17,-2],[30,16],[10,20],[4,31],[9,25],[11,22],[14,17],[40,28],[28,28],[19,48],[-44,20],[9,34],[15,20],[20,-7],[17,-27],[7,-102],[-14,-15],[-8,-15],[-6,-20],[-26,-38],[10,-46],[-7,-20],[-10,-9]],[[83336,46442],[13,-25],[45,-50],[7,-21],[3,-35],[9,-26],[21,-4],[22,5],[16,-16],[15,-26],[21,-50],[19,-56],[23,-31],[14,-46],[-8,-41],[-30,-57],[-16,-12],[-21,-4],[-35,-34],[-12,18],[-39,12],[-30,24],[-26,45],[-15,47],[-19,43],[-33,28],[-58,83],[-37,7],[-15,-6],[-15,0],[-77,37],[-12,22],[-9,28],[-9,27],[-5,31],[10,27],[10,19],[43,32],[31,10],[35,-2],[53,10],[51,-16],[15,12],[25,34],[9,-12],[11,-31]],[[82844,47051],[14,-22],[13,2],[26,34],[16,13],[17,1],[17,-6],[16,-25],[6,-40],[6,-13],[10,49],[13,14],[14,8],[22,-3],[17,-23],[16,-69],[-1,-60],[6,-22],[11,-17],[8,-23],[-7,-24],[-7,-11],[-21,-11],[-9,4],[-9,17],[-10,6],[-23,-6],[-21,-13],[3,-22],[17,-10],[5,-11],[-1,-14],[-7,-3],[-22,19],[-15,-3],[-54,-26],[-14,1],[-9,24],[1,63],[-6,17],[-40,-77],[-12,-19],[-17,-9],[-16,3],[-59,-46],[-18,6],[-18,0],[-62,-50],[-33,-14],[-17,-1],[-17,4],[-15,-4],[-14,-21],[-28,-17],[-28,13],[-25,18],[-23,23],[-5,29],[1,35],[10,48],[-7,84],[5,39],[9,38],[15,14],[18,2],[31,34],[28,45],[16,-4],[37,-31],[22,-4],[37,5],[15,-19],[6,-44],[8,-16],[11,-11],[26,-74],[24,4],[21,-14],[38,45],[28,-1],[8,34],[-17,37],[-20,31],[-11,6],[-12,-2],[-11,5],[-45,67],[-14,37],[-8,43],[5,31],[31,28],[15,7],[55,-19],[9,-16],[14,-68],[11,-29]],[[84691,52416],[-53,-98],[-17,-47],[-14,-51],[-21,-56],[-24,-50],[-12,-15],[-29,-27],[-17,-10],[-32,-4],[-97,-39],[-31,-5],[-32,2],[-60,10],[-12,5],[-24,51],[-27,40],[-24,5],[-24,-4],[-175,-3],[-61,-8],[-61,-18],[-33,8],[-33,21],[-24,7],[-25,-2],[-115,-31],[-29,3],[-58,39],[-34,8],[-33,-10],[-31,-36],[-11,-23],[-32,-81],[-18,-58],[-14,-73],[-11,-75],[-7,-61],[0,-64],[5,-72],[9,-71],[10,-55],[39,-126],[8,-17],[44,-36],[25,-45],[25,-126],[17,-65],[17,0],[19,4],[33,-8],[33,-17],[32,39],[17,73],[18,55],[43,103],[25,48],[15,15],[16,-6],[13,-28],[16,-22],[32,-11],[33,7],[34,34],[12,20],[11,26],[29,22],[69,0],[36,-8],[64,9],[-1,19],[-12,20],[-4,16],[12,11],[41,23],[42,17],[31,-12],[27,-33],[11,-34],[4,-41],[-10,-105],[-5,-25],[-22,-12],[-20,14],[-21,54],[-28,20],[-41,-16],[-14,-16],[-13,-22],[-23,-56],[-19,-64],[-41,-100],[-48,-86],[-23,-33],[-26,-23],[-83,-57],[-22,-42],[-17,-55],[-19,-19],[-22,-6],[-16,10],[-33,31],[-11,-25],[-2,-39],[16,-14],[27,-43],[20,-61],[13,-13],[29,-20],[12,-19],[22,-52],[34,-122],[12,-66],[19,-53],[58,-91],[3,-26],[-3,-30],[4,-27],[21,-52],[5,-34],[-23,-43],[-1,-62],[-14,-83],[-3,-28],[0,-26],[10,-24],[11,-18],[16,-10],[14,-17],[26,-65],[14,-17],[8,-23],[0,-36],[12,-20],[11,-37],[16,-9],[8,10],[6,16],[14,-6],[8,-25],[4,-33],[2,-37],[-1,-69],[-7,-24],[-15,1],[-27,28],[-1,-20],[2,-20],[-14,-7],[-16,3],[-40,-3],[-73,-42],[-26,-26],[-17,-46],[-1,-31],[6,-68],[-9,-23],[-34,-9],[-47,18],[-28,18],[-16,15],[-21,45],[-8,58],[16,172],[4,22],[7,19],[8,31],[2,37],[-22,45],[-34,18],[-29,37],[-111,209],[-6,21],[0,34],[4,33],[37,114],[4,22],[5,91],[-1,74],[-4,75],[-17,46],[-31,15],[-32,2],[-31,-15],[-30,-37],[-57,-79],[-22,-46],[-2,-60],[13,-58],[17,-54],[8,-58],[13,-207],[-1,-23],[-14,-60],[-6,-135],[6,-190],[10,-116],[-4,-63],[-26,-136],[-8,-75],[-1,-31],[31,-142],[7,-56],[4,-58],[-33,28],[-15,-1],[-16,-9],[-34,-9],[-35,-1],[-12,-11],[-25,-38],[-15,-15],[-13,-3],[-44,47],[-27,52],[-24,56],[-4,63],[8,66],[12,70],[24,116],[-1,78],[8,64],[14,62],[5,58],[3,224],[-3,20],[-33,133],[-4,22],[0,36],[3,34],[1,31],[-7,24],[-14,22],[-16,9],[-34,-9],[-68,-36],[-20,31],[-15,49],[-10,68],[-5,71],[2,67],[10,65],[-8,45],[-12,49],[0,25],[7,23],[12,18],[15,11],[14,19],[37,66],[12,58],[1,72],[10,68],[19,63],[22,58],[7,60],[-11,96],[5,43],[-4,51],[0,50],[13,95],[42,194],[40,103],[16,27],[21,-47],[16,-57],[1,51],[-5,50],[-16,117],[-14,228],[4,21],[14,-3],[15,20],[7,36],[-15,84],[0,30],[28,119],[24,43],[10,27],[6,73],[12,27],[16,20],[20,50],[11,63],[7,5],[8,2],[12,-55],[14,-22],[28,-18],[24,21],[7,27],[9,24],[14,25],[12,28],[14,66],[18,59],[12,21],[15,13],[16,8],[16,1],[35,-37],[21,-7],[20,2],[14,-6],[10,-17],[9,-34],[11,-29],[10,-14],[12,-7],[76,12],[67,-33],[91,-8],[32,-19],[30,-26],[36,-44],[14,-10],[15,2],[19,42],[14,10],[15,1],[59,-8],[158,-52],[23,8],[96,99],[38,93],[34,26],[11,43],[7,51],[12,13],[29,15],[11,15],[21,62],[24,56],[11,16],[34,-8],[15,-25],[19,-81],[-3,-14],[-22,-40],[-7,-17],[-25,-115],[-17,-56],[-21,-50]],[[79825,48382],[28,-66],[25,-35],[29,-19],[30,-2],[30,-8],[35,-25],[35,-11],[17,4],[16,13],[11,1],[10,-12],[25,-56],[27,-51],[6,-26],[18,-123],[20,-35],[29,-10],[33,0],[33,-5],[77,-29],[30,4],[27,29],[24,-19],[65,-34],[32,-8],[36,10],[37,2],[17,-10],[17,-15],[14,-6],[15,1],[26,29],[18,52],[14,67],[11,69],[7,30],[10,26],[14,17],[14,11],[38,-7],[8,-16],[42,-118],[8,-10],[45,-8],[12,4],[27,24],[16,2],[28,-29],[13,-25],[13,-18],[70,-19],[28,-50],[13,-7],[49,6],[34,-5],[29,-13],[13,-72],[11,-73],[7,-25],[28,-25],[12,-23],[-3,-73],[3,-70],[61,-60],[65,-35],[69,-4],[70,12],[35,15],[45,26],[9,0],[87,-80],[8,-12],[9,-60],[0,-62],[-16,-149],[-1,-41],[1,-41],[18,-89],[9,-25],[31,-47],[1,-25],[-4,-24],[-35,17],[-21,20],[-12,33],[-17,19],[-33,-7],[-61,34],[-69,52],[-122,110],[-33,-1],[-32,-14],[-33,-28],[-35,-20],[-26,-7],[-26,5],[-65,27],[-66,17],[-168,11],[-47,25],[-79,12],[-63,22],[-62,30],[-158,149],[-51,36],[-159,71],[-24,6],[-58,-5],[-36,21],[-32,0],[-47,-23],[-15,-17],[-18,-35],[-33,2],[-32,7],[-84,33],[-31,21],[-30,30],[-28,40],[-14,14],[-72,41],[-60,14],[-122,18],[-27,12],[-22,15],[-12,33],[1,42],[9,36],[12,36],[8,34],[-89,73],[-71,40],[-30,7],[-31,0],[-34,-8],[-34,4],[-16,11],[-17,5],[-16,-9],[-13,3],[-4,33],[9,28],[17,32],[10,6],[4,-50],[5,-10],[16,-11],[6,3],[27,64],[8,31],[13,85],[14,-16],[14,10],[8,13],[23,196],[19,58],[26,47],[12,12],[26,-29],[51,-11],[30,-20],[31,-2],[29,-10],[42,-34],[15,3],[14,11],[23,38],[9,60],[32,-31],[48,-12],[11,-17]],[[82659,54245],[-3,-5],[-19,-16],[-9,-33],[27,-51],[1,-34],[21,-30],[24,-46],[1,-16],[9,-21],[4,-25],[-17,-26],[-24,-5],[-17,24],[-16,30],[-4,-37],[-13,-21],[-45,6],[-32,0],[-32,-10],[16,-5],[14,-12],[50,-96],[11,-35],[-17,-70],[8,-29],[19,-16],[24,-35],[17,-4],[12,-19],[0,-34],[7,-32],[-19,-12],[19,-8],[17,-16],[-9,-16],[-7,-20],[7,-10],[23,-19],[10,-16],[6,-45],[22,-73],[41,-95],[9,-34],[0,-32],[-6,-27],[-24,-32],[-19,-42],[-2,-15],[-26,-20],[12,-14],[9,-19],[18,-59],[42,-95],[22,-35],[87,-129],[46,-57],[60,-128],[31,-30],[6,-36],[-26,-54],[-38,-28],[-62,-15],[-62,20],[-32,15],[-28,32],[-22,63],[-29,35],[12,-39],[7,-39],[-4,-43],[-11,-33],[-20,-25],[-21,-20],[-9,-14],[-53,-224],[-9,-60],[-16,-252],[0,-71],[24,-133],[2,-69],[5,-30],[-4,-25],[-11,-15],[-46,-41],[-32,-34],[-26,-48],[-21,-59],[-19,-44],[-25,-20],[-18,3],[-14,20],[-10,38],[-6,42],[-4,-31],[1,-30],[8,-33],[4,-34],[-5,-35],[-11,-28],[-29,-30],[-16,-26],[-2,-46],[-8,-26],[-11,-20],[-40,-46],[-9,-18],[-7,-24],[22,4],[19,-4],[2,-45],[6,-34],[-8,-75],[-30,-50],[15,-11],[14,-16],[30,-12],[10,-53],[-4,-64],[-6,-58],[-21,-16],[-14,11],[-14,-1],[-10,-17],[-2,-30],[19,15],[-1,-75],[-5,-72],[-7,-40],[-11,-33],[-18,-10],[-16,24],[-4,-28],[5,-24],[24,-58],[-15,-13],[-10,-20],[-5,-29],[-26,-66],[-11,-49],[-5,-52],[-12,-41],[-194,-180],[-156,-151],[-12,10],[-7,23],[-6,235],[-19,121],[-3,68],[-22,-61],[-14,6],[-15,16],[-11,19],[0,26],[11,75],[-14,-41],[-16,-31],[-16,3],[-14,16],[-5,24],[-7,4],[-35,-67],[-45,-35],[-25,0],[-20,21],[1,50],[-2,50],[-5,29],[-13,10],[-11,-4],[-32,-25],[-12,3],[-7,-13],[-85,180],[-18,-146],[-59,-78],[-44,-45],[-43,17],[-45,29],[-44,-35],[-47,-86],[-13,-13],[-14,1],[-10,11],[3,65],[1,64],[-4,145],[-4,28],[-13,40],[-18,28],[-11,-21],[-9,-28],[-36,1],[-35,23],[-30,-13],[-60,-58],[-32,-8],[-17,12],[-11,31],[6,29],[14,21],[-25,-17],[-21,-29],[-9,-19],[-10,10],[-26,65],[-54,-24],[-8,-8],[-13,-22],[-13,11],[-7,24],[-2,136],[-28,262],[-7,134],[-6,31],[-32,49],[1,69],[16,57],[4,68],[-5,73],[-10,71],[-12,54],[-18,46],[-24,52],[-30,39],[-63,43],[-33,-4],[-13,17],[-8,23],[3,43],[12,30],[15,7],[2,17],[-33,35],[-26,48],[-9,28],[-2,31],[0,73],[8,46],[4,25],[8,76],[18,24],[-3,14],[-8,10],[-11,25],[-9,29],[-20,49],[-36,60],[-6,102],[-5,150],[3,68],[11,128],[21,40],[16,12],[12,17],[-10,2],[-9,-6],[-15,-4],[12,114],[6,33],[25,64],[30,57],[12,67],[17,58],[70,61]],[[85480,52331],[21,-13],[21,4],[10,26],[3,33],[11,62],[24,42],[17,7],[12,18],[-2,46],[1,45],[18,48],[57,68],[31,24],[42,7],[5,-25],[-5,-37],[8,-56],[-4,-150],[-10,-21],[-42,-52],[-47,-42],[-13,-17],[-12,-42],[1,-41],[38,-54],[59,-52],[13,-24],[8,-40],[2,-45],[14,-21],[20,-10],[13,-22],[11,-30],[-100,70],[-26,31],[-32,4],[-31,9],[-32,27],[-34,6],[-16,-19],[-7,-38],[-4,-43],[8,-53],[-1,-32],[-6,-58],[25,-171],[31,-137],[45,-142],[23,-49],[25,-44],[-41,13],[-12,48],[-52,47],[-10,28],[-34,135],[-10,25],[-31,46],[-14,33],[-5,46],[4,48],[-2,66],[1,65],[7,81],[-11,28],[-15,26],[-17,62],[-5,70],[1,40],[7,35],[10,31],[2,30],[-25,44],[-25,124],[-2,65],[32,124],[-1,60],[7,36],[3,38],[17,83],[28,70],[47,99],[18,21],[20,14],[2,-24],[-4,-21],[-34,-101],[-5,-22],[-1,-43],[17,-24],[18,-51],[3,-68],[1,-72],[-4,-73],[-7,-25],[-28,-73],[-65,-85],[-5,-21],[0,-24],[12,-29],[15,-22]],[[86042,50192],[64,-64],[33,-9],[56,8],[21,-6],[53,-82],[15,-56],[4,-48],[9,-46],[13,-11],[15,-5],[20,-66],[4,-21],[-15,-166],[-63,63],[-60,71],[-26,27],[-69,60],[-11,21],[-8,27],[-30,37],[-60,6],[-23,-1],[-9,-6],[2,-20],[0,-40],[-15,-12],[-37,26],[-34,9],[-29,25],[-39,14],[-4,12],[3,19],[-1,18],[-9,6],[-18,-3],[-17,-17],[-14,-21],[-20,-55],[-11,-21],[-34,-9],[-14,5],[-13,14],[-39,101],[-13,22],[-14,18],[-14,8],[-13,-16],[-8,-31],[-3,-37],[-4,-22],[-17,-59],[-13,-36],[-5,6],[7,57],[0,32],[-9,34],[-5,35],[65,165],[24,40],[103,13],[61,-8],[34,4],[22,12],[19,-5],[4,-33],[12,-24],[16,2],[29,25],[26,40],[15,17],[16,3],[16,-3],[16,-9],[43,-34]],[[85238,50064],[46,-45],[10,-29],[9,-35],[9,-20],[10,-15],[18,-31],[5,-46],[-4,-93],[-21,-8],[-19,-14],[-40,-54],[-20,-10],[-21,-4],[-15,-14],[-15,-6],[-39,30],[-38,35],[-54,61],[-10,15],[-9,32],[-25,59],[-6,38],[-2,106],[6,25],[11,13],[36,-25],[24,26],[69,22],[71,-2],[14,-11]],[[84740,46363],[-19,-30],[-10,-58],[-34,-54],[-37,-89],[-29,-46],[-26,-53],[-23,-36],[-28,-13],[-42,-7],[-56,-65],[-32,-28],[-31,-2],[-28,21],[-11,24],[2,31],[10,28],[12,22],[7,29],[-33,37],[-2,27],[12,75],[9,76],[12,52],[46,93],[28,46],[17,19]],[[84567,46549],[36,20],[20,22],[17,32],[51,53],[9,15]],[[87429,48555],[-2,-22],[-1,-41],[5,-38],[-12,-39],[11,-57],[2,-29],[-1,-41],[-3,-18],[-8,-54],[-9,-19],[-6,-5],[-7,-16],[-54,18],[-24,37],[-21,40],[-4,17],[-25,46],[-6,16],[0,25],[20,7],[21,-1],[-1,22],[13,80],[-33,51],[-6,21],[12,15],[26,-18],[32,89],[10,19],[4,50],[18,6],[13,-6],[8,-31],[3,-27],[-3,-24],[15,-13],[13,-60]],[[87370,48132],[-4,-41],[-5,-45],[-25,-51],[-16,-78],[-9,-19],[-34,-35],[-30,43],[-9,37],[13,172],[13,-6],[9,1],[2,12],[-19,19],[-4,98],[1,38],[15,8],[18,-29],[24,-52],[27,-40],[33,-32]],[[88481,47077],[-66,-76],[-87,13],[-31,2],[-51,-19],[-11,15],[10,71],[41,190],[49,168],[20,43],[29,41],[31,33],[69,34],[62,-7],[9,-13],[27,-56],[18,-44],[7,-63],[-27,-107],[-29,-102],[-49,-80],[-21,-43]],[[89159,46590],[-14,19],[-39,64],[-34,74],[-23,68],[-25,62],[-108,184],[-27,61],[-6,16],[3,16],[12,32],[22,92],[-23,-57],[-27,-45],[-40,-3],[-39,-11],[-37,-27],[-37,-10],[-18,14],[-11,34],[-6,35],[-3,36],[-15,-59],[-31,-33],[-41,-69],[-12,14],[-7,27],[-3,27],[8,29],[6,31],[8,73],[19,44],[12,84],[8,30],[4,30],[-11,34],[-18,12],[-13,20],[-15,57],[-9,20],[-16,23],[-13,28],[14,20],[19,8],[15,-1],[27,-13],[13,0],[31,21],[-17,-7],[-18,1],[-57,37],[-35,38],[-33,77],[0,15],[23,14],[51,16],[-16,39],[-23,34],[-8,61],[-15,38],[-34,61],[-23,64],[-19,129],[-20,98],[5,35],[17,25],[-26,3],[-23,19],[12,47],[27,28],[-25,-7],[-23,-14],[-11,-2],[-11,4],[-6,19],[-1,27],[3,48],[-4,46],[-21,22],[-17,33],[-10,13],[-13,-1],[-12,22],[-10,32],[-126,139],[-8,40],[-11,-18],[-12,-8],[-14,23],[-16,15],[-16,-2],[-15,12],[-16,7],[-17,1],[-66,43],[-63,68],[-51,29],[-31,38],[-33,31],[-73,30],[-74,20],[-27,1],[-22,-7],[-22,2],[-122,147],[-21,67],[2,39],[6,33],[50,9],[-36,9],[-14,-4],[-29,-27],[-16,-2],[-22,18],[-21,22],[-35,-20],[-17,34],[-7,35],[-9,17],[-13,-2],[-17,-13],[-18,2],[-11,25],[-8,32],[-12,23],[-15,17],[-24,42],[-12,56],[1,98],[4,36],[24,57],[16,54],[-20,6],[-19,-25],[-8,-25],[-3,-31],[-2,-103],[-15,-30],[-22,2],[6,-60],[-9,-57],[-26,-67],[-2,-31],[4,-33],[-6,-32],[-42,-94],[-14,-5],[-32,1],[-32,-15],[-15,22],[-13,28],[-9,34],[-13,70],[-10,71],[32,88],[-11,80],[-21,68],[-55,94],[-57,90],[-26,18],[-43,8],[-13,9],[-13,33],[-10,39],[26,17],[46,46],[26,-3],[70,-24],[21,-23],[20,-13],[48,75],[38,99],[24,21],[20,7],[20,-9],[41,-34],[32,-16],[23,-4],[12,-30],[13,-14],[3,46],[12,54],[22,17],[12,3],[8,14],[-2,50],[-30,6],[17,43],[14,21],[5,21],[1,26],[-59,-50],[-62,-21],[-36,5],[-37,1],[-73,-33],[-27,1],[-65,13],[-36,17],[-27,-13],[-27,-1],[-28,38],[-23,48],[-12,34],[-16,25],[-7,33],[-17,126],[-2,89],[-27,2],[-28,9],[-121,85],[-15,-21],[-17,-11],[-17,-4],[-17,5],[-17,13],[1,23],[13,58],[12,21],[17,17],[11,30],[18,92],[1,31],[-2,32],[1,24],[11,12],[46,30],[95,45],[24,27],[20,43],[24,26],[10,27],[12,21],[74,57],[32,4],[32,-6],[65,-34],[61,-54],[53,-72],[57,-52],[70,-8],[35,5],[34,-7],[14,-15],[24,-44],[-7,-29],[-4,-60],[13,-58],[20,-58],[16,-62],[3,-30],[-6,-65],[-5,-31],[-20,-53],[-11,-58],[7,-71],[4,-71],[-1,-66],[4,-65],[10,-65],[47,-180],[27,-122],[9,68],[-2,76],[9,27],[14,15],[17,-16],[4,-30],[2,-67],[14,-131],[19,-6],[21,20],[3,-40],[-1,-74],[10,-59],[8,-23],[34,-48],[15,-9],[44,-12],[33,-3],[32,17],[21,44],[18,47],[65,110],[18,53],[18,80],[7,18],[63,87],[8,31],[9,59],[14,58],[10,30],[62,28],[64,16],[64,53],[27,46],[2,30],[-14,53],[-1,23],[15,23],[56,67],[66,69],[53,47],[29,0],[27,-42],[28,-34],[150,-101],[24,-31],[21,-42],[30,-29],[33,-14],[31,-27],[28,-35],[64,-64],[86,-79],[21,-5],[80,4],[14,-15],[13,-21],[12,-5],[91,-14],[14,-15],[13,-21],[8,-57],[62,-2]],[[88581,47010],[-14,-7],[-69,17],[-8,24],[-1,12],[16,24],[15,40],[24,14],[10,0],[28,-94],[-1,-30]],[[78251,53040],[16,-47],[3,-31],[-11,-35],[-4,-54],[-33,-42],[-28,10],[-9,15],[-18,82],[2,69],[11,27],[26,-4],[27,38],[18,-28]],[[78451,52413],[-13,-18],[-15,28],[-13,39],[-6,41],[-6,68],[-2,48],[8,28],[5,-1],[23,-28],[15,-49],[9,-15],[1,-45],[-5,-52],[-1,-44]],[[78469,52683],[2,-74],[-20,20],[-17,29],[-25,22],[-32,7],[-23,19],[-16,34],[0,16],[1,13],[5,10],[119,-67],[6,-29]],[[78618,52273],[-5,-22],[-11,16],[-54,25],[-18,2],[-47,28],[-14,14],[-10,19],[3,35],[7,21],[4,59],[12,24],[23,-44],[26,-38],[15,-17],[46,-38],[16,-19],[7,-65]],[[78657,52344],[-9,-17],[-14,4],[-14,20],[-20,35],[-21,31],[-28,20],[-17,5],[-6,8],[6,60],[18,4],[58,-56],[19,-31],[28,-83]],[[78689,52155],[-31,-4],[-9,8],[4,54],[9,33],[14,-1],[16,-49],[-3,-41]],[[78735,52225],[-5,-7],[-24,73],[6,42],[6,11],[13,-26],[10,-27],[8,-32],[-14,-34]],[[78895,52523],[18,-25],[14,16],[-1,-21],[-3,-21],[-17,-59],[-28,13],[-7,19],[-2,15],[4,9],[3,29],[12,0],[7,25]],[[79051,52543],[1,-43],[16,-21],[4,-32],[-3,-51],[-14,-59],[-7,-15],[-20,12],[-6,19],[-3,16],[3,11],[-15,14],[10,22],[-7,32],[-40,-20],[-12,-1],[-2,36],[2,15],[31,45],[18,9],[20,-10],[24,21]],[[79104,51741],[8,-9],[10,30],[19,-41],[11,-21],[15,-20],[-15,-1],[-6,-19],[-4,-4],[-59,66],[-38,-21],[-25,19],[-8,14],[14,36],[13,83],[26,-21],[6,-26],[-2,-7],[17,-16],[18,-42]],[[79020,51650],[26,-56],[6,-20],[-13,-31],[-10,-44],[-6,-9],[-20,16],[-14,-43],[-9,69],[-20,44],[12,44],[5,4],[6,-2],[6,-11],[31,39]],[[78815,51642],[-36,-20],[-41,15],[5,34],[20,41],[17,-2],[31,-27],[12,-23],[-8,-18]],[[80474,51163],[-55,-59],[-13,3],[-10,21],[6,113],[7,34],[39,4],[23,-17],[12,-18],[5,-38],[-2,-23],[-12,-20]],[[81623,47750],[-6,-9],[-47,5],[-30,-47],[-21,-14],[-76,0],[-9,6],[-7,0],[-4,-10],[-24,7],[-77,42],[-10,38],[12,42],[27,58],[56,12],[252,4],[27,-51],[3,-16],[-55,-35],[-11,-32]],[[87489,51200],[-13,-11],[-15,12],[-15,44],[5,34],[17,23],[15,-23],[4,-30],[11,-2],[-9,-47]],[[85346,51557],[-17,-15],[-19,1],[-4,61],[6,78],[18,13],[27,-16],[-10,-20],[8,-42],[-9,-60]],[[85434,51659],[32,-86],[-21,-82],[15,-46],[40,-2],[10,-17],[7,-21],[4,-28],[-10,-23],[-23,-20],[-26,29],[-7,28],[-5,10],[-35,-21],[-10,-2],[-6,39],[8,55],[-24,25],[-23,57],[-1,24],[9,39],[-1,32],[13,3],[23,-43],[11,40],[9,17],[11,-7]],[[86923,48443],[-22,-50],[21,117],[4,59],[20,36],[29,179],[7,-5],[10,-17],[-15,-131],[-41,-92],[-13,-96]],[[86890,48472],[-17,-55],[-11,19],[-7,1],[-4,32],[4,68],[-14,76],[19,-1],[5,-23],[6,-8],[18,-73],[1,-36]],[[85631,49726],[-7,-21],[-16,-14],[-14,1],[5,21],[-4,11],[-10,-5],[-16,-16],[-20,-33],[-13,16],[-2,26],[1,11],[24,45],[29,8],[40,43],[18,-2],[-4,-27],[-6,-20],[-4,-20],[-1,-24]],[[85226,54166],[-11,-12],[-18,4],[-2,30],[18,52],[12,56],[-13,14],[-12,35],[-1,41],[11,76],[15,-6],[14,-33],[6,-62],[10,-47],[-20,-64],[-9,-84]],[[84904,53822],[-7,-18],[-34,32],[2,51],[-4,25],[-9,27],[-4,26],[4,28],[20,-36],[12,-57],[16,-55],[4,-23]],[[86350,47051],[-24,-18],[16,45],[52,104],[18,-19],[25,-4],[-37,-47],[-38,-19],[-12,-42]],[[86065,47261],[-16,-53],[-18,3],[-34,71],[2,50],[3,16],[13,5],[43,-15],[9,-40],[-2,-37]],[[85506,47177],[48,-23],[28,3],[6,-21],[-27,-49],[-56,38],[-10,40],[11,12]],[[86208,50869],[4,-34],[16,-32],[-5,-49],[-7,-7],[4,-23],[7,-17],[-13,-12],[-10,6],[-15,-16],[-10,-22],[-32,-9],[-11,20],[-57,24],[-37,53],[-5,16],[71,62],[32,17],[26,-1],[33,23],[9,1]],[[78435,48687],[-23,-3],[-42,71],[-7,22],[12,21],[13,-2],[48,-45],[9,-22],[-10,-42]],[[77895,50009],[11,-84],[-33,58],[1,40],[-5,26],[-20,33],[-15,40],[-7,96],[5,20],[13,1],[58,-126],[4,-21],[-1,-45],[-8,-14],[-3,-24]],[[77834,50264],[-20,-47],[-33,1],[-6,29],[1,70],[-8,22],[0,9],[6,40],[6,9],[53,-98],[1,-35]],[[77733,50493],[2,-15],[-45,50],[-22,14],[-19,56],[5,26],[1,37],[3,15],[14,5],[18,-27],[13,-66],[23,-61],[7,-34]],[[77349,51537],[-17,-27],[-25,26],[9,37],[4,51],[15,41],[5,47],[-29,130],[14,5],[12,-14],[19,-87],[17,-52],[-7,-70],[-17,-87]],[[76795,53202],[-18,-5],[-16,12],[-14,33],[-75,96],[-23,1],[-16,25],[-20,8],[-21,64],[-5,35],[16,16],[9,35],[25,-15],[28,-62],[29,-23],[8,-12],[14,-34],[66,-85],[7,-28],[5,-29],[1,-32]],[[83900,48710],[-18,-15],[-33,66],[-14,54],[3,31],[10,26],[5,7],[-2,28],[13,14],[15,-2],[9,-38],[11,-10],[6,-36],[-5,-125]],[[84225,51168],[6,-36],[-10,-31],[11,-59],[28,78],[27,10],[15,-13],[10,-15],[6,-30],[-10,-63],[-18,-30],[-22,-5],[-11,37],[-15,4],[-10,-81],[-5,-12],[-13,-10],[-12,22],[-2,12],[17,37],[-9,108],[-13,-20],[-34,-99],[-26,-44],[-8,23],[-14,67],[6,86],[21,58],[18,-4],[52,18],[15,-8]],[[83850,51608],[12,-25],[-7,-30],[-9,7],[-26,0],[-9,-2],[-12,-18],[-7,0],[5,27],[21,41],[14,-6],[18,6]],[[83479,48215],[-11,-96],[-6,33],[-2,88],[-7,43],[5,49],[-1,126],[8,58],[16,-74],[4,-38],[-6,-189]],[[82048,47827],[-22,-10],[-21,21],[0,27],[5,25],[32,13],[17,0],[18,-18],[12,-18],[6,-21],[-34,-1],[-13,-18]],[[82306,49614],[-59,-107],[-9,28],[5,109],[-17,67],[2,51],[11,89],[15,68],[34,46],[8,5],[-2,-83],[7,-31],[2,-27],[-3,-23],[6,-105],[4,-26],[-8,-33],[4,-28]],[[84152,45559],[-26,-1],[-8,6],[-3,51],[8,28],[60,37],[23,34],[34,70],[20,18],[5,8],[4,-1],[3,-54],[9,-31],[1,-17],[-30,-27],[-26,-62],[-59,-41],[-15,-18]],[[84523,47045],[-17,-36],[-11,-62],[-11,-19],[-22,-11],[-14,62],[-24,-3],[12,54],[11,21],[16,0],[7,-22],[4,-4],[36,92],[7,1],[6,-4],[5,-11],[-5,-58]],[[84423,47077],[-39,-15],[-24,-72],[-19,1],[-11,-32],[-2,-14],[1,-12],[-2,-13],[-8,-12],[-17,20],[-16,-25],[-6,-7],[-23,30],[-21,-2],[-6,5],[26,52],[36,50],[6,18],[-14,5],[-8,7],[-2,12],[23,7],[16,2],[12,-16],[8,1],[48,58],[20,-14],[14,-14],[8,-20]],[[84254,47030],[-6,-25],[-75,2],[2,33],[21,36],[7,12],[23,11],[33,-20],[-5,-49]],[[87420,48070],[-15,-6],[-8,48],[13,12],[14,-29],[-4,-25]],[[78728,52447],[2,-32],[-19,8],[-13,37],[11,26],[7,10],[7,-36],[5,-13]],[[78840,52304],[2,-17],[-25,34],[-1,24],[3,11],[15,-26],[6,-26]],[[78955,52323],[-18,-17],[-22,53],[1,12],[2,9],[4,6],[13,-27],[16,-10],[4,-26]],[[79080,51877],[2,-14],[-13,16],[-8,10],[-5,8],[-29,79],[12,-5],[32,-69],[9,-25]],[[79523,53661],[-1,-39],[-19,23],[-4,44],[7,14],[13,-8],[4,-34]],[[79377,53492],[-12,-2],[-3,17],[1,29],[-2,24],[-3,17],[0,30],[11,-15],[8,-14],[10,-10],[7,-6],[4,-5],[-7,-42],[-14,-23]],[[80246,53516],[-14,-30],[-14,19],[22,61],[5,4],[1,-54]],[[80264,50910],[-32,-25],[-10,55],[21,16],[22,-14],[-1,-32]],[[79853,50172],[-11,-14],[-7,14],[-2,16],[5,20],[15,2],[7,-6],[-7,-32]],[[79690,50111],[-5,-11],[-15,6],[-11,16],[-7,15],[-2,16],[15,20],[32,-20],[-7,-42]],[[81780,47733],[-4,-22],[-14,5],[-13,38],[6,10],[8,4],[9,-4],[8,-31]],[[81310,48495],[-6,-20],[-26,1],[-5,24],[17,41],[12,3],[10,-15],[-2,-34]],[[79236,48018],[-17,-13],[-13,11],[-6,16],[19,40],[10,10],[9,3],[5,-22],[-7,-45]],[[77037,53038],[-2,-13],[-29,61],[-32,34],[13,8],[27,-9],[11,-9],[10,-30],[2,-42]],[[76489,55191],[-6,-16],[-16,8],[-18,52],[6,10],[12,-5],[21,-12],[2,-20],[-1,-17]],[[84332,50861],[-19,-4],[-13,17],[1,85],[12,18],[5,-3],[4,-25],[5,-23],[10,-21],[-5,-44]],[[84233,49473],[-27,-69],[-19,4],[-23,45],[-6,50],[-1,18],[16,28],[52,-9],[9,-25],[-1,-42]],[[84401,50716],[5,-23],[-17,1],[-7,43],[1,24],[18,-45]],[[84208,50796],[-20,-47],[-2,25],[4,23],[5,16],[9,9],[4,-26]],[[83184,46808],[-11,-6],[-11,8],[4,52],[-6,34],[11,28],[3,48],[5,15],[6,-15],[4,-10],[5,-5],[13,-1],[3,-21],[-1,-19],[-5,-21],[-15,-23],[-11,-25],[6,-39]],[[83075,47097],[-12,-1],[-2,23],[4,24],[12,11],[5,0],[8,-22],[2,-11],[-8,-15],[-9,-9]],[[82113,46791],[-8,-20],[-22,35],[-6,16],[17,23],[6,3],[14,-24],[-1,-33]],[[82745,54254],[9,-55],[2,-21],[-52,-29],[-31,68],[6,27]],[[82682,53732],[-3,-19],[-24,47],[-7,33],[3,27],[25,2],[12,-17],[-6,-73]],[[84458,48402],[-3,-28],[-10,32],[-9,15],[1,34],[13,-12],[8,-41]],[[84340,48806],[-1,-58],[-11,3],[-9,20],[-3,20],[1,15],[5,13],[18,-13]],[[83548,47742],[-29,-3],[-8,5],[-3,56],[32,-24],[10,-2],[-2,-32]],[[82654,47023],[-7,-1],[-12,11],[5,24],[-7,40],[2,32],[16,18],[33,2],[1,-24],[-31,-102]],[[82339,49847],[-10,-99],[-17,56],[19,67],[9,13],[-1,-37]],[[85380,52298],[-9,-18],[-9,6],[-6,24],[2,18],[8,11],[9,-8],[5,-33]],[[87325,50619],[-8,-8],[-3,25],[5,33],[5,6],[6,-2],[8,-12],[-13,-42]],[[87102,49397],[14,-31],[-33,24],[-47,51],[-3,34],[40,-52],[29,-26]],[[86362,51395],[-7,-30],[-14,-19],[-119,-36],[10,21],[5,21],[8,11],[12,-3],[6,7],[5,2],[7,-3],[12,9],[24,-6],[25,5],[-2,28],[28,-7]],[[86284,51538],[-16,-1],[-28,25],[16,22],[11,5],[9,13],[5,0],[12,-11],[7,-19],[-16,-34]],[[85985,51735],[-12,-2],[-10,34],[-28,37],[-17,65],[65,-107],[2,-27]],[[85403,51839],[-1,-17],[-9,24],[-6,6],[6,62],[4,11],[5,-43],[1,-43]],[[85394,52213],[-10,-7],[-3,2],[-3,24],[5,39],[12,0],[5,-6],[1,-29],[-7,-23]],[[85360,51393],[-3,-12],[-29,15],[-8,8],[15,82],[14,-2],[12,-78],[-1,-13]],[[85755,49800],[0,-25],[-2,-8],[-15,9],[-11,-1],[-10,44],[3,10],[20,-12],[7,-5],[8,-12]],[[85711,49777],[-48,-30],[11,56],[6,15],[24,-15],[7,-26]],[[85199,54075],[1,-25],[-17,56],[-7,65],[14,-23],[15,-49],[-6,-24]],[[85236,54013],[-5,-6],[-10,15],[-6,17],[1,17],[7,9],[14,-26],[0,-15],[-1,-11]],[[84835,53370],[-3,-13],[-11,68],[9,34],[12,-13],[3,-12],[-11,-32],[1,-32]],[[86661,47694],[-4,-28],[-12,15],[-11,33],[-17,5],[-13,8],[-7,16],[47,7],[17,-56]],[[85741,47705],[-13,-15],[-20,30],[-6,13],[13,29],[14,9],[9,-13],[4,-13],[-2,-14],[1,-26]],[[85393,47451],[-17,-13],[5,43],[-1,34],[29,-11],[0,-27],[-3,-10],[-13,-16]],[[84281,45908],[-25,-20],[0,42],[20,54],[17,18],[10,-22],[1,-9],[-26,-20],[3,-43]],[[83856,45742],[-14,-7],[-30,17],[-6,10],[25,28],[20,39],[23,4],[14,-8],[-5,-47],[-27,-36]],[[87449,48136],[-7,-4],[0,28],[8,25],[8,14],[9,1],[-18,-64]],[[87409,47955],[-5,-9],[-7,18],[-1,12],[10,32],[9,18],[11,1],[-3,-26],[-14,-46]],[[85551,50151],[-14,-48],[-24,2],[-4,7],[29,30],[13,9]],[[85445,49933],[7,-25],[-28,16],[-12,25],[12,15],[7,4],[14,-35]],[[84160,46920],[-9,-34],[-16,10],[4,33],[8,19],[22,28],[22,5],[13,-10],[4,-11],[-34,-11],[-14,-29]],[[71402,72067],[33,36],[35,37],[36,38],[41,44],[35,37],[28,31]],[[71610,72290],[1,-2],[2,-5],[12,-14],[12,-6],[14,13],[18,10],[9,-6],[1,-17],[-11,-82],[1,-33],[18,-66],[23,-109],[22,-102],[12,-66],[13,-28],[52,-28],[43,-23],[26,-37],[28,-36],[20,-22],[9,-29],[2,-25],[-1,-18],[-11,-22],[-50,-59],[-6,-18],[-1,-24],[10,-73],[6,-45],[1,-92],[4,-86],[17,-40],[15,-25],[8,-24],[18,-31],[15,-24],[13,-14],[6,-31],[-3,-37],[-6,-32],[2,-17],[10,-12],[16,-32],[2,-47],[-1,-32],[6,-29],[2,-32],[-5,-80],[1,-33],[0,-4],[-14,-2],[-12,-12],[-17,-51],[-19,-13],[-22,-4],[-22,31],[-19,32],[-5,18],[-4,34],[-10,23],[-20,-11],[-29,-4],[-31,-8],[-6,-7],[-1,-15],[8,-30],[7,-40],[3,-56],[9,-37],[3,-12],[50,-111],[13,-23],[3,-14],[-4,-41],[-9,-47],[2,-38],[16,-41],[14,-29],[-13,-39],[-8,-45],[9,-21],[-5,-65],[4,-12],[10,-5],[15,4],[15,18],[13,3],[7,-5],[11,49],[9,7],[17,-13],[35,-93],[30,-78],[8,-15],[6,-9],[29,-41],[20,-26],[27,10],[36,1],[22,-25],[12,-17],[1,-3],[2,0],[43,-62],[19,5],[12,-18],[4,-43],[-6,-46],[2,-21],[19,-4],[41,-30],[37,-26],[19,-9],[20,-19],[18,-32],[35,-40],[31,-31],[7,-42]],[[74474,67897],[-3,20],[3,16],[9,9],[37,12],[42,24],[17,13],[12,14],[13,20],[12,0],[38,-30],[13,-19],[7,-58],[5,-22],[-5,-58],[-22,-142],[4,-53],[19,-38],[16,-27]],[[74691,67578],[-2,-11],[-34,-46],[-6,-24],[7,-24],[14,-20],[6,-20],[6,-60],[17,-16],[34,-39],[30,-28],[51,18],[14,-12],[25,-14],[20,-4],[11,-10],[7,-9],[-1,-13],[1,-12],[28,-3],[15,-7],[49,13],[50,17],[23,54],[11,4],[28,20],[29,-22],[31,-32],[17,-9],[33,-5],[32,4],[77,14],[43,-7],[39,44],[8,0],[17,-34],[43,-3],[22,16],[25,13],[16,4],[12,0],[15,-3],[15,12],[6,23],[-1,34],[-11,38],[-9,22],[-1,12],[3,27],[7,39],[15,44],[-11,43],[-15,49],[-11,5],[-28,-12],[-30,3],[-23,29],[-18,37],[-4,31],[5,38],[8,34],[2,13]],[[75453,67833],[22,0],[31,-7],[24,-10],[19,0],[34,45],[16,2],[18,9],[7,8],[6,-6],[20,-6],[20,3],[18,12],[19,19],[32,40],[7,23],[0,21],[-6,14],[-6,7],[2,18],[14,31],[50,47],[42,57],[24,43],[10,52],[14,57],[13,22],[30,14],[84,21],[27,23],[39,42],[20,33],[11,27],[1,30],[26,10],[23,48],[28,49],[48,41],[43,56],[15,-9],[16,-26],[8,-29],[2,-15],[55,-18],[9,3],[40,-26],[38,-32],[20,-8],[10,1],[9,10],[10,28],[10,20],[7,8],[-1,32],[54,61],[49,45],[42,32],[12,-13],[14,-25],[18,-62],[11,-16],[29,9],[5,-7],[-5,-22],[-19,-28],[-25,-26],[-16,-20],[5,-68],[-1,-24],[7,-7],[51,67],[25,14],[9,-16],[2,-37],[21,-74],[8,-38],[-51,-91],[-19,-47],[1,-16],[-1,-16],[-14,-24],[1,-9],[11,-15],[13,-11],[6,1],[11,22],[48,31],[14,-6],[34,-48],[16,-3],[41,-14],[27,18],[19,-16],[40,-60],[9,-11]],[[77033,68097],[-3,-36],[-2,-40],[10,-32],[1,-28],[-2,-25],[-8,-18],[-23,-10],[-18,-30],[-31,-45],[-24,-35],[-17,-32],[-7,-32],[2,-42],[5,-43],[56,-159],[0,-28],[-18,-8],[-23,18],[-21,26],[-22,68],[-19,21],[-18,4],[-109,-35],[-23,-10],[-36,-25],[-25,-52],[-18,-47],[-19,-18],[-28,-37],[-76,-112],[-44,-48],[-29,-18],[-20,-25],[-11,-42],[-8,-29],[-3,-73],[5,-90],[11,-58],[6,-12],[1,-17],[-11,-31],[-15,-26],[-7,-17],[-6,-82],[-13,-40],[-23,-59],[-21,-45],[-33,-35],[-13,-28],[-12,-52],[-7,-44],[0,-16],[4,-14],[13,-16],[17,-15],[8,-23],[1,-28],[-12,-68],[-22,-95],[-26,-74],[-26,-71],[-6,-24],[-23,-87],[-21,-120],[-13,-81],[-12,-56],[-15,-2],[-18,18],[-43,23],[-27,19],[-21,17],[-14,0],[-19,-12],[-19,-7],[-12,8],[-27,50],[-8,-6],[-5,-24],[18,-143],[12,-53],[-2,-88],[-5,-109],[-7,-119],[-4,-28],[-12,-31],[-15,-9],[-14,13],[-11,-3],[-3,-20],[3,-52],[-14,-58],[-10,-51],[3,-49],[5,-49],[16,-108],[0,-39],[-3,-36],[-9,-14],[-14,2],[-7,-15],[-6,-22],[-16,-81],[-16,-9],[-15,12],[-23,55],[-14,16],[-9,-1],[-4,-15],[-6,-32],[-6,-22],[-16,-19]],[[75714,64503],[-3,40],[-8,209],[-7,66],[-5,92],[-7,28],[-10,51],[-10,43],[-9,19],[-5,81],[-2,99],[0,47],[-13,97],[-12,110],[-16,-4],[-10,26],[-7,0],[-23,-25],[-18,8],[-14,-3],[0,-51],[3,-54],[-6,-19],[-36,-64],[-9,-42],[1,-45],[4,-59],[-6,-31],[-16,-28],[-21,-14],[-18,7],[-12,24],[-11,62],[-10,34],[-10,8],[-8,-9],[-1,-39],[0,-33],[-2,-3],[-6,5],[-6,16],[-17,155],[-25,119],[-1,46],[8,59],[11,91],[29,56],[4,24],[5,19],[7,4],[37,-5],[13,9],[11,27],[16,21],[16,9],[13,3],[20,-21],[9,12],[6,38],[9,37],[5,18],[14,8],[18,2],[5,7],[5,13],[4,49],[23,111],[8,49],[1,8],[-1,55],[7,8],[37,-27],[16,1],[9,11],[3,20],[-5,23],[-26,41],[-47,55],[-43,34],[-80,-5],[-79,-11],[-23,6],[-29,15],[-70,-2],[-86,-9],[-32,5],[-17,0],[-32,-6],[-52,16],[-37,20],[-32,22],[-38,20],[-9,0],[-5,7],[-4,18],[-1,23],[8,106],[-7,161],[6,59],[-31,132],[-11,25],[-15,1],[-9,-17],[-3,-31],[5,-35],[-12,-38],[-23,-13],[-27,13],[-22,18],[-29,40],[-21,55],[-2,61],[-10,40],[-13,19],[-10,5],[-9,-4],[-8,-21],[7,-22],[9,-30],[-3,-20],[-8,-3],[-12,9],[-19,-5],[-19,16],[-11,1],[-11,6],[0,35],[-17,45],[-28,50],[-28,31],[-14,-4],[-6,-35],[1,-12],[10,-7],[14,-20],[3,-20],[-2,-19],[-17,-33],[-13,-31],[-27,-46],[-23,-52],[-6,-40],[-9,-36],[-4,-39],[6,-27],[12,-17],[29,-13],[31,-52],[24,-72],[14,-21],[26,-24],[48,-3],[8,-20],[7,-52],[9,-18],[25,-25],[2,-18],[-6,-21],[-11,-16],[-20,-11],[-20,-4],[-19,6],[-29,5],[-33,0],[-23,-131],[-16,-46],[-10,1],[-25,22],[-11,-4],[-29,-116],[-4,-28],[-2,-21],[16,-45],[18,-37],[22,-14],[17,11],[14,-15],[17,-37],[28,-25],[40,-12],[23,-29],[2,-25],[-1,-26],[-4,-67],[-4,-39],[-21,-102],[-16,-87],[8,-42],[6,-17],[5,-13],[17,-33],[12,-32],[-10,-83],[6,-22],[23,-14],[25,-11],[9,-14],[-22,-84],[5,-59],[9,-55],[6,-90],[1,-9],[-2,-23],[15,-69],[21,-136],[2,-51],[-1,-54]],[[74736,64569],[-7,-90],[-22,1],[20,-60],[6,-44],[3,-60],[-24,-7],[-16,7],[-14,52],[-7,-48],[-24,-44],[-9,22],[-5,23],[-1,41],[13,157],[-2,17],[-7,12],[-13,6],[-5,32],[-21,-167],[9,-68],[-4,-32],[-38,-26],[-39,63],[-5,20],[-3,-35],[-7,-43],[-36,8],[-19,33],[12,58],[23,137],[4,62],[-30,45],[-26,27],[-15,63],[6,-69],[14,-24],[20,-17],[21,-35],[-15,-43],[-15,-27],[-29,-101],[-34,-57],[-41,-42],[-132,-63],[-28,-25],[-41,-78],[-26,-74],[-5,-75],[15,-81],[12,-127],[10,-26],[-14,-47],[-25,-49],[-20,-66],[2,-37],[-5,-24],[-70,-82],[-15,-47],[-19,-48],[-23,27],[-14,0],[19,-38],[-3,-25],[-6,-14],[-18,-14],[-101,-60],[-77,-57],[-22,3],[4,17],[14,15],[-1,66],[-15,12],[-12,4],[-59,-79],[-23,-79],[5,-15],[13,4],[39,44],[19,-12],[1,-18],[-60,-68],[-126,-220],[-6,-44],[-17,-49],[-22,-46],[-41,-112],[-78,-167],[-21,-62],[-125,-128],[-23,-39],[-51,-125],[-53,-102],[-62,-85],[-106,-108],[-65,-102],[-20,-68],[-2,-25],[7,-33],[12,-30],[3,-25],[-6,-44],[-3,-24],[-19,-60],[-33,-43],[-105,-90],[-14,3],[-86,18],[-32,-17],[-13,-42],[-30,-174],[-28,-46],[-11,-42],[-4,-29],[-17,1],[-14,13],[-11,-10],[-12,59],[-21,12],[-17,4],[-73,-59],[-25,-47],[-53,-223],[-14,-144],[13,-159],[18,-127],[4,-57],[-2,-75],[-10,-36],[-6,-43],[8,-88],[23,-116],[5,-48],[1,-51],[17,-115],[-12,20],[-9,49],[-21,62],[-26,-62],[14,-44],[49,-53],[15,-44],[-32,-386],[-24,-138],[-29,-90],[-16,-34],[-34,-142],[-24,-172],[-5,-67],[11,-74],[-12,-43],[-16,-34],[30,15],[10,-40],[3,-42],[1,-246],[-3,-257],[-23,-11],[-25,-2],[-22,7],[-16,10],[-39,-14],[-21,-28],[-17,-47],[1,-81],[-72,-203],[-16,-67],[-6,-65],[10,-34],[18,-35],[24,-14],[47,-14],[23,-19],[15,-34],[-55,36],[-65,8],[-155,-95],[-41,-66],[-23,-57],[-15,-131],[-3,-88],[-18,-73],[-81,-112],[-51,-34],[-19,-30],[-60,39],[-66,98],[-27,53],[-97,253],[-18,32],[-19,108],[-4,41],[-5,16],[-9,11],[-5,16],[-21,124],[-9,130],[-14,144],[11,-10],[17,-47],[8,-70],[1,-96],[12,-11],[11,9],[-31,222],[-28,55],[-7,4],[-7,36],[-1,44],[2,22],[-21,72],[-8,44],[-48,220],[-22,157],[-33,175],[-22,62],[-34,135],[-28,63],[-30,84],[-24,38],[-9,19],[-70,292],[-21,162],[-18,76],[-9,58],[-25,247],[0,44],[-3,49],[-17,105],[-31,113],[-9,70],[1,28],[-20,110],[-4,50],[-13,47],[-15,42],[-16,34],[-37,112],[-14,27],[-25,72],[-18,134],[-23,52],[36,0],[-22,49],[-11,32],[-12,20],[17,50],[-27,-1],[-15,30],[-20,93],[-37,105],[-6,57],[-32,177],[-27,426],[-26,189],[2,54],[-30,165],[-15,110],[-6,93],[-8,61],[-7,121],[-12,39],[-1,23],[8,55],[22,85],[8,54],[-10,77],[-20,-80],[-18,-23],[-9,60],[0,80],[-2,20],[5,27],[49,-13],[-56,49],[-6,29],[-3,22],[12,40],[-20,33],[-8,103],[-6,24],[-2,19],[11,142],[48,280],[4,63],[-5,90],[-10,71],[-5,76],[-3,19],[-17,7],[-16,28],[-19,112],[17,36],[13,21],[-18,-9],[-15,3],[29,52],[25,39],[59,46],[25,30],[-37,-27],[-38,-10],[-83,6],[14,104],[14,35],[16,19],[-23,-6],[-27,9],[9,106],[21,22],[22,5],[28,15],[-30,17],[-31,9],[-37,-18],[-34,13],[-42,0],[17,-14],[17,-33],[-8,-57],[-9,-36],[-23,-24],[-18,-38],[-6,-32],[-10,-24],[18,-16],[19,-12],[11,-26],[13,-39],[-1,-75],[-49,-177],[-17,-39],[-124,-107],[-48,-58],[-104,-75],[-40,-14],[-44,15],[-66,57],[-99,147],[-26,48],[-79,189],[-57,99],[-44,93],[-54,88],[-51,118],[-10,54],[3,54],[19,30],[22,-12],[18,-46],[12,-21],[11,-8],[76,71],[29,-3],[20,35],[25,-7],[52,55],[22,3],[26,11],[42,140],[31,89],[20,19],[-1,22],[-5,28],[-16,-7],[-10,-27],[-8,-33],[-8,-19],[-24,18],[-17,-3],[-20,-11],[-75,-52],[-31,-47],[-20,-9],[-119,51],[-117,118],[-49,79],[-31,100],[-31,120],[10,33],[48,72],[42,56],[-37,-25],[-41,-35],[-20,-24],[-22,-51],[-31,-12],[-11,76],[-8,74]],[[76080,55778],[-17,-48],[-33,145],[-15,9],[0,69],[8,28],[38,30],[10,-17],[20,-134],[-11,-82]],[[76036,56080],[-26,-54],[-12,33],[5,22],[11,13],[11,17],[11,-31]],[[75872,56595],[8,-22],[-15,4],[-15,32],[4,31],[6,12],[12,-57]],[[75956,56381],[-22,-1],[-6,24],[-9,26],[6,25],[12,6],[16,-40],[4,-28],[-1,-12]],[[75982,56484],[-13,-22],[-4,3],[-1,16],[-1,12],[-2,20],[-2,37],[11,30],[10,-6],[-5,-31],[7,-59]],[[75774,57106],[-13,-4],[-7,20],[-1,23],[7,15],[6,7],[7,-1],[7,-39],[-6,-21]],[[75694,57923],[-8,-20],[-29,15],[3,60],[-7,58],[5,24],[21,42],[18,18],[12,-56],[5,-55],[-20,-86]],[[75747,58399],[-13,-12],[-14,15],[11,23],[2,47],[13,-26],[0,-30],[1,-17]],[[75756,58488],[-7,-14],[-9,15],[-25,104],[-5,66],[-7,23],[9,33],[12,11],[6,37],[3,57],[10,46],[5,13],[20,0],[6,6],[-3,44],[-12,20],[-4,12],[0,106],[3,43],[8,30],[-6,64],[4,24],[15,33],[7,72],[-6,21],[14,110],[-1,73],[19,74],[29,33],[9,1],[1,-62],[3,-21],[-17,-37],[16,-49],[-2,-17],[-6,-39],[-11,-37],[-15,-16],[-11,-50],[-7,-19],[22,-53],[7,-180],[-16,-49],[-19,-10],[4,-120],[-3,-26],[-19,-59],[-4,-26],[-11,-24],[5,-30],[9,-13],[0,-25],[-8,-64],[-1,-72],[-11,-59]],[[75837,58776],[13,-79],[-22,35],[-8,24],[11,17],[6,3]],[[75754,59253],[-9,-37],[-1,80],[4,10],[4,3],[6,-8],[-4,-48]],[[70216,58296],[-2,-4],[0,10],[2,17],[3,11],[1,-1],[0,-11],[-2,-15],[-2,-7]],[[70296,56606],[-4,-7],[-4,-3],[-3,1],[-1,7],[0,6],[4,-7],[5,6],[5,18],[1,6],[1,-3],[-1,-10],[-3,-14]],[[45682,89993],[32,-3],[52,20],[22,13],[53,45],[32,13],[49,-3],[23,3],[1,-5],[-30,-18],[-24,-6],[-35,-27],[-32,-62],[-25,-30],[1,-13],[29,-24],[32,-13],[30,12],[13,-5],[12,-17],[6,-18],[2,-17],[-6,-36],[-17,-37],[-24,-30],[3,-10],[19,-5],[92,20],[10,-1],[5,-10],[1,-19],[5,-16],[9,-15],[-3,-15],[-40,-48],[48,30],[37,9],[65,-15],[26,-18],[15,-30],[23,10],[9,-1],[15,-17],[0,-18],[-10,-27],[-4,-24],[-11,-10],[-21,-7],[-6,-9],[9,-18],[14,-18],[19,-1],[3,-9],[1,-10],[-3,-12],[-6,-8],[-10,-4],[-13,-13],[48,-29],[6,-10],[1,-16],[-4,-17],[-8,-18],[-15,-11],[-34,-2],[-22,-12],[7,-20],[0,-26],[-6,-29],[-28,-46],[-26,-24],[-25,-15],[-45,5],[-24,12],[2,-39],[-25,-24],[5,-20],[9,-10],[-5,-26],[-11,-26],[-20,-27],[-23,-17],[-45,-21],[-38,-35],[-26,-14],[-65,1],[-67,-22],[-93,-47],[-64,-38],[-48,-43],[-65,-69],[-48,-30],[-27,-7],[-54,-7],[-45,-19],[-150,-35],[-50,-19],[-7,-18],[-21,-27],[-1,-9],[9,-8],[2,-9],[-19,-32],[-37,-22],[-17,0],[-21,20],[-10,-1],[-3,-3],[0,-6],[12,-24],[-23,-10],[-97,-28],[-166,20],[-65,22],[-81,33],[-49,9],[-68,2],[-56,47],[-26,29],[-2,12],[3,14],[5,9],[9,5],[19,0],[2,5],[-14,23],[-14,-8],[-36,-33],[-16,2],[-21,16],[-1,16],[-41,6],[-36,20],[-36,28],[-5,11],[17,16],[-3,3],[-13,3],[-26,-5],[-39,-36],[-17,-9],[-257,-8],[-65,-4],[-13,-5],[-11,23],[-10,53],[-4,34],[3,17],[9,20],[14,-4],[13,-15],[12,-23],[14,-11],[89,28],[37,18],[15,18],[18,29],[20,16],[9,14],[18,46],[13,21],[14,16],[18,10],[40,7],[-27,11],[-24,0],[-85,-48],[-28,0],[1,7],[12,14],[29,24],[-20,1],[-8,11],[-1,22],[15,37],[69,47],[24,7],[7,10],[-9,7],[-14,5],[-70,-49],[-50,-17],[-15,3],[-26,19],[-8,9],[-12,22],[2,13],[24,38],[-4,8],[-17,3],[-44,36],[-71,-4],[-174,21],[-36,-9],[-59,-30],[-36,-10],[-16,6],[-15,16],[-14,22],[-12,27],[5,19],[23,11],[17,5],[47,-6],[58,19],[37,4],[10,3],[22,20],[11,5],[16,-7],[8,-14],[59,22],[20,10],[2,7],[9,8],[28,-12],[24,0],[29,8],[52,3],[115,2],[18,18],[8,15],[10,39],[-4,8],[-73,-36],[-16,1],[-84,19],[-30,21],[10,18],[44,37],[46,30],[67,32],[16,13],[2,15],[-45,26],[-85,-7],[-22,31],[-70,19],[-47,-12],[-25,19],[-61,-26],[-134,-38],[-54,-27],[-28,-8],[-33,21],[-57,25],[-64,7],[-6,14],[37,44],[26,8],[26,-4],[49,-30],[34,-10],[-43,45],[1,17],[-3,26],[-13,11],[-13,29],[5,9],[17,4],[34,-10],[82,-50],[40,9],[22,18],[29,14],[-8,7],[-70,1],[-38,10],[-19,14],[-17,25],[6,11],[20,10],[60,-3],[-40,43],[-27,24],[-3,12],[2,15],[3,10],[6,5],[69,-25],[15,-1],[-14,16],[-30,24],[-2,9],[13,7],[6,14],[1,11],[21,9],[21,1],[21,-9],[66,-46],[10,-13],[3,-17],[-3,-22],[2,-8],[26,7],[21,-9],[10,2],[26,32],[17,-7],[11,-15],[3,-14],[2,-18],[-5,-39],[1,-5],[18,22],[31,1],[4,11],[1,41],[-3,34],[-3,7],[-101,48],[-17,11],[-22,24],[5,11],[19,11],[30,4],[68,-1],[7,5],[-13,13],[-32,8],[-7,7],[-4,14],[-38,-8],[-42,0],[-40,8],[-1,11],[16,15],[33,26],[15,7],[46,-5],[46,8],[37,-9],[29,-26],[42,-45],[57,-29],[5,-9],[30,-24],[60,-63],[60,-37],[3,-10],[-10,-11],[-23,-13],[5,-7],[31,-9],[21,-25],[2,-11],[-20,-78],[-10,-16],[-13,-9],[-56,15],[14,-25],[40,-26],[9,-15],[-6,-14],[4,-4],[15,8],[6,-8],[-3,-24],[-6,-20],[-10,-16],[3,-7],[16,2],[14,-4],[23,-22],[19,-67],[9,-21],[7,19],[8,49],[8,25],[7,1],[7,8],[5,15],[11,55],[38,41],[18,12],[16,3],[9,-5],[28,-43],[17,-7],[9,2],[12,29],[15,56],[3,63],[-8,69],[5,49],[18,30],[23,9],[29,-12],[22,-18],[42,-68],[34,-36],[29,-39],[15,-12],[29,-7],[7,3],[6,9],[2,15],[-6,98],[8,31],[12,22],[53,12],[28,14],[28,22],[22,12],[19,2],[19,-9],[19,-19],[31,-37],[39,-61],[50,-46],[26,-73],[5,-13],[6,-1],[7,9],[4,14],[1,32],[-14,43],[-46,109],[-1,20],[6,17],[33,1],[75,-9],[25,-17],[51,-66],[15,-16],[8,-5],[4,9],[20,12],[13,15],[23,36],[51,66],[10,2],[15,-5],[26,-18],[12,-13],[24,-11],[25,4],[35,23],[38,14],[14,32],[2,15],[-31,97],[13,20],[68,24],[59,2],[14,-7],[38,-47],[25,-23],[13,-19],[3,-42],[15,-16],[29,-17]],[[55251,78301],[-1,0],[-19,-12],[-31,-7],[-16,5],[-28,-54],[-8,-10],[-27,-17],[-22,-8],[-19,7],[-7,0],[-84,3],[-43,12],[-28,21],[-19,23],[-9,27],[-21,15],[-34,6],[-27,26],[-19,46],[-26,37],[-32,27],[-26,38],[-19,50],[-34,44],[-50,40],[-15,8]],[[54470,78838],[44,62],[22,18],[26,-3],[8,5],[2,9],[4,21],[3,19],[2,18],[-3,10],[-12,3],[-6,45],[6,17],[6,12],[-7,54],[2,18],[20,3],[16,12],[14,13],[4,17],[11,34],[-10,42],[-58,27],[-3,11],[13,12],[15,17],[8,13],[11,2],[16,-7],[28,-30],[10,-5],[11,9],[11,2],[30,-1],[26,7],[-6,32],[0,24],[-4,19],[3,20],[10,16],[3,36],[17,25]],[[25739,59319],[2,61],[-23,25],[-12,50],[-11,34],[3,21],[-1,24],[-31,19],[-30,-14],[-17,9],[-12,13]],[[25607,59561],[21,30],[2,18],[-7,14],[-7,8],[2,34],[4,40],[12,94],[-4,17],[-20,28],[-25,3],[-27,-9],[-13,14],[-12,32],[-20,16],[-34,-26],[-37,-39],[-11,-14],[-10,2],[-4,29],[-2,35],[-2,8],[-20,12],[-23,9],[-11,10],[-11,23],[-28,30],[-6,22],[-37,52],[-7,25],[-8,19],[-18,23],[-14,-5],[-46,29],[-7,3]],[[25177,60147],[6,26],[15,39],[32,45],[2,36],[-8,68],[-8,45],[4,20],[10,80],[8,19],[46,40],[4,6],[37,57],[40,63],[42,69],[47,78],[26,45],[12,20]],[[25492,60903],[27,-16],[21,37],[12,12],[29,44],[9,10],[48,18],[23,-1],[21,-44],[16,-25],[30,21],[26,5],[105,-42],[42,19],[76,4],[35,-11],[49,59],[31,12],[37,27],[-5,29],[-9,12],[56,-12],[83,-60],[89,11],[32,32],[21,9],[91,-61],[24,-47],[19,-4],[14,10],[4,10],[-18,10],[-8,15],[72,-29],[135,-222],[3,-18],[-58,65],[-31,-5],[-8,-10],[2,-36],[3,-17],[13,-2],[10,10],[24,-12],[15,-24],[19,-36],[12,-40],[12,-1],[12,24],[23,3],[15,-26],[11,1],[-15,42],[-35,41],[9,1],[77,-74],[21,-92],[19,-21],[18,-29]],[[25994,61277],[-44,-45],[-14,1],[20,35],[33,30],[28,14],[23,-6],[-46,-29]],[[26147,61325],[-21,-33],[-4,15],[10,31],[13,17],[12,-1],[-3,-14],[-7,-15]],[[30061,63201],[6,-17],[13,-116],[1,-38],[-13,-56],[2,-22],[28,-52],[0,-18],[-3,-19],[-24,-49],[-18,-34],[6,-39],[15,-36],[2,-31],[-5,-41],[-22,-50],[-12,-18],[-34,-2],[-3,-7],[16,-49],[19,-56],[31,-43],[7,-41],[-8,-38],[-1,-95]],[[30064,62234],[-23,46],[-26,38],[-16,15],[-16,10],[-123,-5],[-14,-7],[-11,-12],[-11,-6],[-34,-12],[-34,-2],[-79,31],[-31,16],[-31,10],[-36,-3],[-36,-10],[-29,-22],[-21,-40],[-4,-36],[-13,-10],[-29,59],[-27,41],[-30,31],[-62,45],[-12,27],[-5,32],[26,101],[28,19],[16,3],[35,-12],[35,-23],[31,-15],[49,-6],[27,-25],[187,-38],[35,-12],[14,4],[12,15],[10,27],[12,21],[56,4],[11,9],[8,29],[0,29],[-33,40],[-51,86],[-45,103],[20,34],[-8,63],[8,58],[10,57],[-44,49],[-53,49],[-73,15],[-22,13],[-12,36],[11,49],[23,28],[27,16],[28,12],[67,14],[67,-16],[57,-50],[59,-40],[73,-13],[34,-14],[15,12]],[[29776,62659],[-5,-40],[-71,48],[-57,61],[2,33],[30,7],[28,-20],[41,-40],[32,-49]],[[29815,63385],[12,-13],[-5,-17],[-28,10],[-29,19],[-9,-5],[-6,2],[-17,18],[15,14],[15,4],[17,-1],[35,-31]],[[33328,56767],[10,-9],[40,-92],[23,-20],[4,0],[0,24],[21,-10],[52,-63],[77,-103],[108,-195],[31,-75],[20,-35],[33,-85],[9,-41],[-1,-166],[-28,-112],[-7,-84],[-2,-113],[-16,-64],[22,35],[6,101],[19,62],[24,67],[33,16],[35,-28],[28,-5],[24,-20],[53,-108],[52,-86],[18,-68],[55,-34],[32,-54],[10,-47],[7,-122],[-11,-185],[3,-9]],[[34310,52961],[-12,-8],[-10,-12],[-15,9],[-21,-5],[-21,-12],[-19,-7],[-37,21],[-11,2],[-8,9],[-15,40],[-8,5],[-19,-19],[-24,-13],[-12,3],[-14,-14],[-12,-18],[-25,-78],[-12,-27],[-14,-13],[-27,1],[-29,-3],[-21,-19],[-21,-10],[-10,-1],[-3,-42],[-5,-20],[-6,-12],[-16,-3],[-14,1],[-9,18],[-15,9],[-15,7],[-9,10],[-7,-3],[-6,-18],[-5,-15],[-4,-28],[-22,-9],[-9,-16],[5,-52],[-2,-20],[-5,-16],[-26,-4],[-22,2],[-12,-20],[-16,-22],[-10,-4],[-11,1],[-15,26],[-14,32],[-37,23],[-36,18],[-24,51],[-6,25],[-11,11],[-28,61],[-16,39],[-17,10],[-19,17],[0,28],[-1,27],[-8,11],[-12,7],[-4,15],[1,36],[2,92],[-3,88],[-26,30],[-11,21],[-20,130],[-9,58],[-1,44],[7,129],[7,56],[20,113],[12,38],[1,28],[-2,37],[-6,72],[35,46],[14,19],[3,30],[18,39],[8,37],[7,29],[-2,15],[-8,9],[-10,27],[-19,79],[-7,16],[-6,22],[3,35],[7,38],[-1,16],[-11,21],[-25,34],[-20,2],[-16,13],[-23,1],[-18,4],[-10,13],[2,21],[4,16],[16,40],[10,42],[2,42],[3,55],[4,47],[3,54],[-25,35],[-7,29],[-10,25],[-11,0],[-17,11],[-26,-33],[-21,6],[-14,-13],[-32,3],[-21,16],[-25,-11]],[[46186,59143],[-1,-46],[16,-66],[-2,-49],[-7,-47],[-6,-18],[-9,-11],[-25,1],[-10,-10],[-17,-18],[0,-21],[13,-21],[11,-28],[13,-23],[21,-25],[2,-29],[1,-72],[-1,-57],[-61,-41],[-47,-7],[-40,4],[-17,-17],[-35,-43],[-42,-25],[-22,-2],[-10,-15],[-17,-44],[-46,-192],[-15,-46],[-12,-30]],[[45821,58145],[-14,40],[11,76],[-12,-1],[-23,-61],[-12,-2],[2,72],[-13,3],[-15,-5],[-21,37],[-2,28],[1,40],[13,25],[-2,10],[-12,3],[-14,-6],[-8,11],[14,51],[49,43],[24,5],[26,9],[-14,37],[-30,15],[-24,-10],[-12,-27],[-15,-5],[-25,63],[1,31],[9,38],[14,16],[57,0],[22,21],[9,4],[8,19],[-2,12],[-9,1],[-21,-25],[-69,10],[-22,-15],[-38,-58],[-47,-31],[-34,13],[11,77],[-5,10],[-10,13],[-50,-25],[-38,35],[-15,43],[3,53],[17,36],[3,18],[-19,3],[-34,-22],[-77,86]],[[45523,58213],[-22,-8],[-10,28],[-2,11],[12,10],[5,0],[9,21],[11,14],[5,5],[5,-1],[4,-46],[-5,-20],[-12,-14]],[[45584,58227],[-3,-16],[-16,2],[4,16],[-4,5],[5,49],[2,7],[8,-18],[1,-8],[3,-37]],[[45631,58303],[0,-23],[-11,4],[-4,7],[7,43],[11,19],[12,-3],[4,-6],[-2,-16],[-6,-14],[-11,-11]],[[45679,58488],[-2,-13],[-16,11],[23,49],[15,8],[-1,-37],[-11,-8],[-8,-10]],[[45582,58447],[-13,-18],[-13,9],[-7,16],[1,29],[15,41],[14,-6],[3,-71]],[[45559,58687],[-15,-70],[-17,7],[-13,42],[-1,18],[36,6],[10,-3]],[[46307,57055],[-3,17],[10,53],[-8,28],[-28,55],[-2,27],[-9,34],[-36,71],[-35,-4],[10,59],[-1,79],[-11,43],[3,44],[-7,-2],[-11,-31],[-18,10],[-38,47],[-18,46],[-3,38],[-4,15],[-11,-8],[-24,1],[-71,69],[-51,174],[-1,39],[7,67],[-1,19],[-23,-45],[-5,30],[-18,70],[-5,40],[-17,17],[-14,4],[-10,-14],[-14,-81],[-11,0],[-10,18],[2,61]],[[47780,57697],[-6,-22],[-18,-33],[-17,-26],[-5,-28],[3,-53],[0,-119],[2,-103],[14,-38],[16,-19],[19,4],[18,7],[-1,-62],[-5,-69],[22,-22],[11,-21],[6,-19],[-35,-37],[-10,-22],[-4,-57],[1,-54],[46,-38],[18,-45],[8,-46],[3,-88],[-4,-20],[-12,0],[-14,27],[-10,26],[-12,0],[-24,6],[-26,10],[-33,-2],[-12,-5],[-8,-16],[-2,-27],[-3,-89],[11,-20],[21,-22],[14,-9],[12,3],[9,-15],[2,-38],[-7,-28],[-11,-26],[-15,-67],[3,-25],[0,-37],[-25,-98],[-7,-19],[-33,19],[-22,7],[-16,-25]],[[25233,62105],[-3,-140],[-3,-162],[-2,-119],[-3,-159],[-3,-162],[-5,-222],[-2,-143],[1,-3],[33,7],[49,-6],[12,0]],[[25307,60996],[15,-12],[12,-4],[24,-32],[30,-25],[18,50],[-9,29],[-8,15],[1,14],[102,-128]],[[25177,60147],[-6,6],[-10,2],[-23,-10],[-11,-2],[-9,-11],[-1,-25],[6,-40],[3,-21],[-7,-9],[-28,-25],[-11,-23],[-11,-38],[-12,-15],[-13,3],[-9,-6],[-19,-27],[-30,-54],[-15,-40],[-1,-30],[3,-27]],[[24973,59755],[-106,95],[-36,16],[-150,-2],[-64,37],[-73,72],[-50,66],[-115,182]],[[32856,58762],[-18,-2],[7,21],[2,37],[10,44],[15,30],[15,-8],[-6,-98],[-25,-24]],[[57738,72899],[-6,-9],[-14,26],[0,14],[14,16],[7,3],[2,-10],[0,-23],[-3,-17]],[[55725,73953],[4,-67],[19,-12],[26,-60],[-2,-31],[-6,-10],[-43,28],[-10,-13],[-13,5],[-7,34],[1,11],[-8,20],[-5,9],[-17,-26],[-11,-5],[0,24],[16,66],[7,11],[13,-22],[10,8],[8,36],[1,36],[3,11],[14,-53]],[[55802,73620],[29,-56],[-23,14],[-26,-39],[-31,45],[-20,46],[-4,18],[20,43],[19,-44],[22,-7],[14,-20]],[[55746,74083],[-11,-5],[-9,3],[-9,-2],[-8,-11],[1,45],[10,57],[11,33],[17,15],[7,-26],[-1,-92],[-8,-17]],[[55766,73922],[-14,-6],[-17,55],[-7,38],[7,2],[7,-5],[8,-14],[0,-15],[3,-15],[7,-19],[6,-21]],[[55577,74557],[6,-32],[-35,20],[-25,29],[-21,71],[-45,81],[0,24],[17,18],[36,12],[15,-13],[9,-13],[3,-16],[-20,-31],[-5,-14],[16,-28],[0,-11],[7,-55],[8,-20],[20,-16],[14,-6]],[[56504,74284],[15,-62],[15,-21],[31,-25],[15,-4],[52,-45],[62,-8],[8,-13],[7,-35],[13,-27],[3,-22],[-7,-23],[9,-72],[16,-68],[23,-33],[29,-10],[28,1],[7,-14],[-3,-59],[-12,-24],[-9,-5],[-9,6],[-7,14],[-8,7],[-16,1],[-12,24],[-29,33],[-5,19],[-1,31],[-13,22],[-11,43],[-11,11],[-6,22],[-1,9],[-43,6],[-35,0],[-30,24],[-9,63],[-18,17],[-13,18],[-11,25],[-29,45],[-31,39],[-30,25],[-32,16],[-26,-19],[-15,4],[-3,13],[33,27],[44,50],[31,16],[15,2],[29,-44]],[[56605,74374],[-12,-20],[-20,9],[-20,65],[52,-54]],[[56635,74399],[-13,-7],[13,46],[23,24],[-9,-38],[-14,-25]],[[56854,74198],[-30,-14],[-8,2],[7,18],[0,7],[-29,33],[4,42],[3,11],[22,-22],[5,-37],[26,-40]],[[56881,75238],[-35,-20],[-37,39],[1,23],[19,47],[10,14],[27,-4],[15,-32],[4,-15],[-5,-26],[1,-26]],[[56541,73689],[-11,-14],[-12,1],[-9,5],[-4,11],[5,6],[7,23],[6,6],[9,-3],[5,-9],[4,-26]],[[56403,72689],[-3,-25],[-28,17],[-8,26],[-2,57],[8,28],[5,9],[13,-32],[27,-47],[-12,-33]],[[57548,72272],[-10,-32],[-11,27],[5,31],[-13,50],[24,74],[0,36],[18,19],[-4,-62],[-14,-49],[14,-40],[7,-46],[-16,-8]],[[57505,73132],[-28,-8],[5,46],[-13,36],[21,-20],[14,-24],[7,-5],[-2,-15],[-4,-10]],[[57485,72999],[-8,-1],[10,28],[29,38],[43,34],[14,3],[24,-21],[-44,-34],[-12,-18],[-32,-4],[-24,-25]],[[57096,73137],[-25,-22],[-17,32],[-10,50],[46,72],[11,-6],[6,-19],[-1,-65],[-10,-42]],[[57021,73195],[-22,-44],[-18,5],[-8,20],[12,42],[24,24],[11,-7],[-1,-31],[2,-9]],[[57078,72806],[-13,-30],[-18,11],[7,11],[5,15],[0,22],[-5,13],[3,5],[17,-22],[4,-25]],[[57050,72968],[-5,-9],[-21,37],[-8,21],[10,18],[31,-42],[-7,-25]],[[57451,73623],[34,-19],[9,2],[16,-6],[5,-35],[-22,-6],[-37,-32],[-15,7],[-19,28],[-30,3],[-9,8],[16,33],[29,16],[23,1]],[[57230,73461],[-13,-2],[4,23],[25,40],[34,2],[32,20],[7,0],[-15,-31],[-25,-30],[-49,-22]],[[57183,73035],[-25,-4],[-8,4],[15,10],[11,10],[5,13],[25,23],[16,29],[18,-20],[-23,-13],[-34,-52]],[[57350,72917],[-22,-14],[-14,-29],[-17,21],[0,28],[18,-9],[13,16],[-4,18],[15,-9],[11,-22]],[[56765,73488],[-19,-28],[-3,42],[12,44],[16,3],[6,-19],[-12,-42]],[[56787,73354],[-16,-17],[6,40],[-8,21],[7,17],[10,15],[5,-15],[9,-24],[-13,-37]],[[56815,73020],[0,-34],[-1,-12],[-57,-16],[5,38],[3,13],[19,-18],[7,9],[3,10],[21,10]],[[56928,73440],[-1,-60],[-8,1],[-4,9],[0,23],[3,36],[10,-9]],[[56942,73594],[-9,-39],[-21,45],[-24,31],[-9,27],[-14,16],[-4,36],[17,15],[8,1],[18,-44],[28,-5],[-2,-27],[8,-35],[4,-21]],[[57015,73501],[-10,-37],[-18,6],[-29,40],[-10,18],[-5,18],[12,2],[14,-19],[37,-10],[9,-18]],[[56866,73111],[-5,-3],[-7,25],[-2,22],[3,13],[10,2],[13,-43],[-12,-16]],[[57248,73858],[-27,-33],[-29,47],[-5,15],[21,19],[11,30],[-8,36],[-31,53],[-1,38],[46,16],[27,-33],[14,-3],[-5,-31],[2,-10],[2,-96],[-13,-13],[-2,-26],[-2,-9]],[[57336,74498],[-5,-34],[38,-57],[13,-36],[5,-35],[-3,-10],[-15,19],[-12,6],[4,-25],[13,-21],[-22,-13],[-22,1],[-64,30],[-14,32],[38,48],[8,19],[-27,-2],[-29,-57],[-46,25],[-14,23],[-4,12],[19,51],[32,-2],[17,11],[21,16],[1,24],[50,6],[18,-31]],[[57134,75130],[-31,-15],[-35,47],[34,19],[15,-14],[11,-16],[6,-21]],[[57065,74874],[-10,-19],[-8,-34],[-4,-47],[-16,-2],[-10,10],[-3,18],[-1,23],[-7,-1],[-6,-25],[-5,-11],[-16,-2],[-18,15],[1,33],[-4,38],[2,14],[49,3],[14,-28],[18,16],[7,18],[21,11],[-4,-30]],[[57056,73397],[-27,-3],[2,44],[10,11],[31,-22],[-1,-14],[-15,-16]],[[56812,73228],[-11,-9],[-17,13],[5,32],[11,13],[13,-10],[2,-14],[-3,-25]],[[57734,72539],[-21,-12],[-6,2],[-9,26],[12,65],[-11,41],[-1,18],[17,24],[11,36],[27,40],[72,46],[17,5],[-1,-37],[-24,-92],[-21,-46],[6,-37],[-34,-11],[-34,-68]],[[56625,72312],[19,-4],[26,1],[6,3],[16,34],[20,1],[9,-34],[-20,-15],[-5,-9],[4,-7],[16,-13],[21,5],[1,-26],[4,-22],[11,-13],[11,-2],[26,4],[25,8],[25,17],[26,9],[79,-9],[28,-36],[53,-5],[50,-19],[26,13],[45,12],[7,-13],[-6,-82],[3,-24],[13,-11],[12,5],[16,27],[37,21],[39,0],[33,54],[10,3],[-6,-26],[-5,-63],[-7,-37],[-3,-29],[-22,-15],[-33,-3],[-61,6],[-60,-10],[-113,-28],[-113,-14],[-15,9],[0,37],[-3,25],[-7,18],[-35,15],[-33,26],[-130,36],[-31,14],[-50,-8],[-18,1],[-13,13],[-9,22],[-4,69],[7,69],[10,18],[5,-21],[13,-9],[12,21],[0,31],[6,29],[9,-12],[7,-45],[16,-12]],[[57232,75303],[-7,24],[-43,43],[-100,25],[-48,32],[-21,-6],[-40,36],[-28,-16],[-59,-63],[-31,7],[-34,38],[-22,7],[-26,-20],[-42,-73],[-42,-36],[-38,14],[-51,0],[-5,-41],[10,-28],[27,-48],[-13,-37],[10,-36],[18,-7],[28,2],[50,-47],[22,-50],[14,-54],[-30,39],[-21,37],[-28,14],[-40,32],[-25,5],[-26,-22],[-3,-25],[29,-47],[26,-29],[14,-23],[9,-52],[-5,-17],[-10,-17],[-31,33],[-47,116],[-66,23],[-11,-24],[13,-61],[9,-24],[58,-67],[-5,-14],[-8,-6],[-65,38],[-19,58],[-4,73],[-59,50],[-56,55],[-13,53],[12,19],[8,38],[-31,-7],[-19,-24],[-32,-23],[-1,-39],[5,-36],[-10,-52],[-10,-90],[6,-48],[68,-136],[23,-99],[16,-37],[35,-42],[36,-76],[15,-41],[11,-65],[-30,-41],[-18,-2],[-9,19],[13,44],[-2,28],[-47,42],[-20,-15],[-22,-27],[13,-51],[14,-34],[8,-46],[28,4],[-38,-52],[-35,-27],[-35,-1],[-23,-5],[-7,-13],[18,-10],[15,-1],[24,-28],[68,-34],[33,-42],[32,-4],[32,-78],[56,-21],[31,-79],[43,-16],[36,-29],[11,-27],[5,-50],[2,-107],[8,-79],[0,-25],[-2,-37],[-9,-19],[-14,0],[-26,58],[-40,61],[-42,73],[-12,13],[-10,1],[-23,-25],[-63,-19],[-29,-26],[-11,-6],[-4,-14],[14,-15],[17,-33],[0,-45],[14,-56],[18,-14],[24,1],[13,-10],[4,-22],[14,-26],[9,-19],[-1,-13],[-66,-37],[-13,-16],[-12,-9],[-17,18],[-1,44],[-22,23],[-21,21],[-25,9],[-21,30],[-14,-25],[11,-85],[24,-60],[40,-158],[18,-93],[4,-46],[-9,-75],[19,-56],[14,-57],[-15,2],[-13,20],[-21,24],[-42,92],[-15,57],[-17,4],[-30,-8],[-34,-122],[1,-70],[-18,17],[-14,22],[1,76],[-1,32],[-40,104],[-19,12],[-8,35],[-15,38],[-19,-8],[-16,-15],[-4,-56],[-2,-51],[-11,-38],[-43,72],[-43,126],[-1,68],[31,63],[-4,45],[-30,89],[-43,57],[-24,17],[-11,60],[-23,31],[-19,15],[-4,22],[6,16],[45,62],[27,97],[13,5],[27,-23],[31,6],[25,57],[21,31],[36,-4],[80,-76],[87,-44],[43,-38],[25,-38],[13,-8],[20,-5],[-1,28],[-6,25],[17,14],[46,-1],[9,14],[8,21],[-9,24],[-16,12],[-16,3],[-11,8],[-17,-8],[-28,19],[-14,16],[-8,16],[-47,32],[-45,54],[-10,-31],[-19,-16],[-25,-3],[-73,35],[-45,-27],[-24,-6],[-19,-1],[-23,-12],[-26,-7],[-23,50],[-9,39],[-7,7],[-1,-37],[-7,-29],[-33,-16],[-20,23],[-15,68],[-18,87],[-33,70],[-27,18],[-3,39],[3,30],[32,8],[50,-32],[11,6],[11,15],[-2,33],[-7,29],[-14,2],[-10,-4],[-31,6],[-39,-16],[-19,15],[-6,19],[-33,46],[-29,62],[-46,41],[-31,126],[-25,55],[-28,40]],[[55555,74717],[6,0],[11,-6],[19,-22],[21,-5],[12,15],[7,13],[4,21],[2,26],[3,8],[16,-3],[5,6],[0,23],[-10,28],[-10,35],[0,16],[8,7],[13,15],[6,19],[14,9],[19,2],[22,8],[15,20],[2,19],[9,55],[5,27],[10,24],[5,33],[10,31],[21,13],[19,15],[14,40],[8,34],[0,20],[-12,35],[-9,33],[3,43]],[[56365,75654],[30,-6],[37,-2],[23,36],[37,3],[17,5],[28,-8],[28,1],[35,15],[33,25],[26,-2],[10,4],[6,5],[7,34],[48,2],[17,-3],[27,-1],[28,18],[8,-2],[14,-49],[8,-14],[15,-13],[34,-37],[6,10],[14,12],[41,-17],[39,-28],[33,-42],[36,12],[40,21],[27,6],[28,3],[17,8],[38,-10],[40,22],[19,20],[6,29],[-3,50],[-9,49],[-10,19],[-3,19],[5,18],[6,12],[26,11],[34,-16]],[[50329,55350],[-22,-22],[-16,-33],[-12,-50],[-16,-55],[-55,-29],[-22,-1],[-114,-1],[-108,-109],[-61,-39],[-38,-61],[-51,-44],[-36,-53],[-74,-25],[-122,-83],[-38,-33],[-38,-58],[-63,-68],[-24,1],[-49,63],[-37,32],[-90,49],[-67,18],[-33,21],[-8,4]],[[49135,54774],[7,23]],[[49142,54797],[19,1]],[[49161,54798],[20,-7],[14,18],[22,2],[6,18],[2,46],[0,37],[7,16],[2,44],[-11,96],[-7,11],[-39,14],[-3,19],[-7,21],[-8,49],[-8,74],[-14,92],[-27,151],[-6,54],[-5,54],[-1,66],[6,24],[-1,33],[-2,34],[18,77],[37,94],[7,34],[7,24],[1,34],[7,110],[17,132],[11,51],[7,27],[9,44],[3,21],[33,52],[16,14],[3,20],[-5,23],[2,15],[8,8],[12,6],[9,21],[-14,164],[-11,163],[-1,14],[-7,23],[-6,67],[-12,39],[-16,12],[1,37],[16,63],[4,37],[-8,11],[-1,28],[5,47],[-2,28]],[[49251,57304],[-3,31],[-17,71],[-4,51],[9,29],[-1,65],[-9,100],[-1,63],[6,26],[-3,25],[-12,24],[-1,23],[10,23],[-1,17],[-13,13],[-11,31],[-10,48],[2,78],[19,144],[2,12],[22,-1],[0,-6],[68,2],[77,1],[92,2],[83,2],[4,6],[14,8],[84,-15],[53,8],[22,-5],[17,-10],[36,6],[20,-3],[14,-36],[6,0],[8,15],[15,18],[15,13],[11,28],[6,22],[10,-5],[13,2],[10,18],[3,27],[64,-29]],[[52115,79258],[-14,8],[-10,38],[3,58],[15,76],[4,56],[-7,35],[9,54],[25,71],[16,75],[9,78],[12,52],[23,36],[56,100],[5,8],[-2,50],[-15,7],[-22,15],[-56,18],[-52,11],[-24,14],[-21,38],[-13,1],[-25,-14],[-32,-9],[-22,8],[-15,-2],[-8,-7],[-4,6],[-6,33],[-12,9],[-18,7],[-12,-3],[-8,-16],[-12,-12],[-12,4],[-35,75],[-9,17],[-3,15],[-8,28],[-22,27],[-21,9],[-10,-3]],[[51699,80714],[1,11],[15,53],[52,49],[-5,48],[-1,30],[-13,19],[-25,8],[-7,13],[-3,14],[19,29],[-23,24],[-10,24],[-31,30],[-4,11]],[[51999,82535],[-13,26],[-27,28],[6,59],[9,45],[27,57],[22,15],[96,9],[105,-4],[44,-84],[-16,-44],[25,-20],[13,7],[9,38],[6,42],[9,13],[33,-32],[12,-21],[0,-69],[12,93],[-9,66],[6,63],[14,34],[12,21],[77,-23],[86,12],[32,-25],[73,-123],[24,-20],[31,-6],[-42,26],[-89,149],[-26,19],[-41,5],[-26,15],[-16,23],[-4,20],[1,150],[-16,22],[-20,8],[-12,-10],[-25,-1],[-5,34],[6,26],[51,17],[33,23],[2,41],[-22,32],[-25,58],[-30,56],[-3,64]],[[52408,83469],[52,-1],[13,-3],[78,-30],[19,-21],[24,-1],[44,20],[33,8],[12,-12],[18,-5],[4,0]],[[52705,83424],[2,-10],[40,-16],[17,-24],[19,-37],[2,-54],[-24,-38],[-20,-24],[76,9],[8,-22],[11,-24],[41,17],[103,-70],[63,34],[16,2],[14,-57],[-16,-57],[-55,-61],[13,-38],[17,-8],[52,8],[82,-37],[17,11],[67,86],[26,18],[88,14],[16,33],[35,33],[23,36],[55,70],[56,-13],[33,-13],[37,-7],[33,-74],[83,-81],[77,7],[27,-77],[12,-96],[24,-30],[20,-19],[63,-21],[2,-1]],[[54113,81139],[-3,-9],[-9,-14],[-12,-2],[-18,10],[-12,13],[3,34],[-8,3],[-10,20],[-4,23],[-11,9],[-39,10],[-13,6],[-10,-5],[-8,-15],[5,-15],[8,-14],[21,-22],[-2,-9],[-47,-21],[-29,-23],[-27,-12],[-28,-23],[-55,-26],[-40,-7],[-8,-6],[-15,-44],[-10,-9],[-10,4],[-7,8],[-10,-6],[-9,-15],[-11,-6],[-8,1],[-16,-39],[-46,-11],[-5,-20],[-9,-23],[-6,-5],[-21,9],[-29,5],[-16,-13],[-20,-7],[-24,-2],[-26,-25],[-27,-44],[-14,-39],[-8,-14],[-13,36],[-16,26],[-11,13],[-10,0],[-2,-6],[0,-19],[10,-32],[13,-21],[2,-16],[8,-29],[19,-32],[30,-25],[20,-25],[15,-35],[0,-10],[-4,-14],[-7,-13],[-6,-18],[-17,-35],[5,-15],[14,-19],[12,-23],[15,-37],[21,-66],[14,-27],[19,-28],[18,-21],[28,1],[30,-41],[33,-58],[24,-27],[17,-8],[14,-22],[12,-30],[5,-18],[11,-12],[30,2],[38,-48],[23,-35],[13,-28]],[[53837,79934],[-3,-11],[-2,-35],[0,-38],[-3,-19],[-17,-26],[-9,-6],[-5,-5],[-52,34],[-4,-6],[-4,-4],[-14,-99],[-9,-18],[-15,-18],[-30,-17],[-20,-7],[-17,-8],[-51,-41],[-23,-25],[-15,-31],[0,-18],[25,-52],[29,-55],[0,-47],[-13,-36],[-3,-14],[9,-5],[16,-2],[13,-6],[6,-25],[-2,-44],[-5,-41],[-4,-17],[-13,-2],[-25,18],[-19,21],[-8,12],[0,15],[4,10],[-7,19],[-24,17],[-25,-8],[-19,-11],[-12,0],[-13,17],[-20,13],[-27,8],[-16,9],[-4,-5],[2,-36],[-5,-16],[-130,-21],[-40,-19],[-28,-25],[-22,-11],[-5,-16],[-21,-20],[-24,-6],[-6,6],[-15,-9],[-26,-9],[-17,3],[-8,16],[-16,25],[-7,18],[1,11],[-37,2],[-23,14],[-49,-4],[-12,6],[-2,-6],[-8,-71],[-9,-30],[-16,-30],[-20,-17],[-16,-3],[1,22],[4,27],[-12,6],[-17,3],[-8,8],[2,20],[-4,12],[-7,14],[-18,18],[-36,27],[-25,14],[-10,-14],[-18,-15],[-28,5],[-7,-6]],[[53808,83169],[7,-39],[-8,-19],[-31,32],[-32,0],[-18,-51],[-14,-2],[-49,46],[-7,23],[-2,18],[7,65],[-1,20],[15,22],[2,32],[27,34],[24,1],[8,-28],[11,-20],[40,-22],[6,-10],[4,-14],[-19,-27],[-6,-14],[6,-23],[30,-24]],[[53948,82874],[-12,2],[-34,-6],[-34,9],[-7,34],[6,34],[-14,22],[-13,14],[-2,19],[2,20],[59,-54],[48,-48]],[[53134,83189],[-43,-1],[-16,23],[-17,6],[9,29],[12,10],[41,-19],[13,-36],[1,-12]],[[52307,83402],[-6,-12],[3,82],[30,86],[13,-2],[-13,-23],[-4,-16],[-5,-33],[2,-17],[70,-5],[-8,-15],[-71,-10],[-11,-35]],[[52385,83359],[-11,-14],[-26,2],[-15,13],[5,14],[14,11],[11,2],[18,-7],[4,-21]],[[61530,75758],[53,108],[16,65],[1,39],[0,49],[-27,102],[-24,144],[-25,151],[-19,45],[-81,52],[-19,59],[-62,77],[-87,33],[-17,14],[-76,96],[-59,62]],[[62897,75973],[-7,-20],[-16,-38],[-13,-19],[-14,-3],[-14,-8],[-5,-20],[0,-26],[2,-19],[4,-7],[14,-6],[14,-54],[22,-28],[34,-31],[31,-36],[15,-33],[-3,-23],[-10,-50],[-25,-41],[-22,-10],[-7,3],[-14,13],[-28,32],[-30,25],[-24,-8],[-15,-10],[-31,12],[-35,21],[-19,22],[-8,16],[5,28],[-81,50],[-40,14],[-17,-15],[-60,-76]],[[62500,75628],[-7,-8],[-46,-10],[0,-7],[10,-16],[-2,-5],[-77,-2],[-25,-10],[-68,13],[-23,-6],[-19,-12],[-47,-13],[-32,-16],[-41,-9],[-43,0],[-14,-5]],[[45343,59368],[-2,49],[-15,111],[21,48],[22,29],[15,-23],[5,-45],[12,-31],[39,-20],[40,14],[24,-6],[-1,25],[8,33],[48,15],[50,9],[52,20],[41,-1],[12,6],[-3,8],[-36,10],[-78,-23],[-80,-7],[-60,-60],[-24,6],[-25,60],[-9,74]],[[53692,53088],[-1,-40],[-22,-99],[-11,-76],[-2,-81],[6,-65],[10,-46],[7,-51],[-5,-35],[-11,-15],[8,-18],[16,-4],[27,15],[42,27],[55,39],[36,21],[60,-13],[32,-15],[16,-28],[18,-116],[8,-17],[15,-50],[12,-59],[2,-30],[-1,-22],[-12,-32],[-14,-47],[-5,-29],[-11,-21],[-14,-21],[-40,-8],[-6,-13],[-12,-50],[-21,-43],[-9,-40],[-9,-53],[2,-67],[-4,-96],[-5,-64],[11,-23],[48,-16],[9,-13],[13,-40],[16,-38],[43,-23],[17,-29],[14,-32],[2,-26],[-10,-104],[-10,-99],[4,-76],[4,-73],[5,-105],[-2,-65],[-13,-39],[0,-31],[6,-37],[-11,-103],[-7,-17],[-20,-20],[-10,-27],[-3,-44],[-11,-59],[-10,-22],[0,-27],[10,-21],[0,-30],[-20,-37],[-11,-28],[-26,-14],[-30,14],[-7,21],[7,32],[-2,25],[-11,27],[-16,69],[-14,15],[-7,-28],[-25,-53],[-42,-67],[-30,-6],[-55,21],[-47,32],[-21,79],[-14,65],[-20,76],[-22,36],[-24,23],[-10,1],[-34,-42],[-10,-16],[0,-36],[3,-33],[5,-16],[5,-21],[-1,-33],[-6,-44],[-2,-49],[-106,-47],[-19,17],[-13,22],[-16,-4],[-46,-25],[-17,18],[-17,12],[-7,-10],[-1,-21],[8,-114],[-3,-44],[-10,-57],[-6,-38],[29,-11],[10,-18],[10,-29],[13,-27],[1,-16],[-15,-30],[-6,-37],[8,-28],[19,-30],[28,-32],[14,-20],[-2,-19],[-13,-40],[-5,-33],[-9,-31],[2,-28],[13,-26],[-2,-23],[-8,-18],[-18,4],[-14,-3],[-13,8],[-42,90],[-9,3],[-60,-70],[-15,-28],[-12,-41],[-17,-89]],[[53091,49587],[-27,51],[-24,95],[-27,58],[-58,94],[-15,69],[-66,153],[-95,152],[-69,133],[-10,29],[12,-3],[66,-66],[9,7],[7,15],[-28,34],[-27,28],[-26,17],[-26,-2],[-14,28],[-9,43],[-5,36],[-11,38],[-37,79],[-9,30],[-19,41],[12,6],[39,-40],[3,16],[-3,23],[-39,38],[-22,2],[-5,27],[3,30],[-28,115],[-29,85],[-4,41],[78,-186],[11,-4],[13,2],[33,21],[-6,25],[-15,26],[-14,-12],[-19,-2],[-9,11],[-5,19],[19,90],[-8,-4],[-6,-16],[-10,-8],[-16,-5],[-39,49],[-34,130],[-9,27],[-9,46],[-9,18],[-39,186],[15,-14],[18,-53],[35,11],[13,31],[12,-1],[12,7],[15,29],[45,128],[12,169],[-4,100],[-7,100],[15,32],[6,-21],[3,-36],[7,-26],[16,-23],[29,-7],[46,-36],[16,-24],[4,47],[53,40],[-16,14],[-47,-15],[-64,59],[-21,38],[-20,72],[-20,38],[1,34],[46,31],[12,-4],[5,-37],[12,-15],[5,5],[2,31],[0,86],[-14,122],[5,23]],[[52664,52437],[12,9],[11,16],[8,3],[16,-3],[8,-29],[4,-15],[15,-7],[13,-15],[11,4],[10,17],[13,4],[42,0],[38,-1],[75,0],[76,-1],[75,0],[57,0],[0,69],[0,108],[-1,127],[0,122],[0,113],[-1,133]],[[53146,53091],[3,38],[4,16],[-1,22],[58,2],[106,-10],[46,1],[13,-1],[58,6],[47,-8],[20,-10],[18,-4],[56,-6],[73,7],[25,-2],[14,-18],[6,-36]],[[52633,76500],[-7,-84],[5,-25],[10,-18],[5,-19],[8,-225],[-2,-18],[-34,-91],[-7,-26],[-2,-113],[-6,-30],[-12,-30],[-21,-96],[-19,-43],[-51,53],[-30,22],[-14,25],[-10,17],[6,23],[14,23],[2,19],[-32,21],[-15,14],[0,24],[11,38],[-5,32],[-18,-2],[-15,5],[-1,17],[10,21],[14,27],[-1,30],[-16,13],[-15,25],[-6,33],[12,23],[18,15],[-13,34],[-10,1],[-7,7],[6,16],[14,24],[21,71],[28,33],[50,22],[14,9],[12,25],[14,16],[16,-2],[16,-9],[9,-11],[8,11],[6,31],[-4,27],[2,75],[9,42],[15,3],[13,-24],[-1,-20],[5,-49],[1,-32]],[[52081,77054],[-15,-10]],[[52049,77034],[-32,-21],[-23,-21],[-88,-127],[-41,-38],[-8,-22],[-8,-42],[-24,-36],[-22,-17],[-52,-18],[-53,-38],[-23,16],[-62,-1],[-38,46],[-74,29],[-24,67],[-33,4],[-22,-2],[-13,10],[-4,23],[0,22],[-23,-10],[-18,0],[-11,-9],[-8,-10],[-10,7],[-6,-3],[1,-13],[-22,-3],[-23,8],[-61,35],[-9,5],[-42,13],[-17,14],[-14,35],[-11,10],[-6,7],[-39,-17],[-14,-27],[-21,-32],[-146,-155],[-27,-64],[-31,-96],[-2,-44],[13,-142],[30,-75],[4,-18]],[[50473,76326],[3,13],[7,18],[0,11],[-9,16],[-39,18],[-18,4],[-12,-12],[-9,-15]],[[49501,76847],[45,17],[41,73],[39,263],[28,311],[20,58],[26,17],[-21,42],[-13,-21],[-5,-23],[-7,-12],[15,285],[11,105],[19,109],[39,-43],[32,-44],[17,-39],[21,-127],[15,-27],[24,-26],[-9,29],[-17,22],[-25,170],[-16,48],[-25,40],[-80,85],[-8,17],[-4,32],[27,-1],[23,-16],[-3,18],[-7,19],[-10,69],[-9,161],[1,28],[-4,34],[-26,7],[-20,2],[-22,13],[-110,95],[-37,98],[-39,72],[-9,32],[1,32],[20,67],[-18,43],[-17,8],[-15,21],[14,35],[11,23],[22,6],[30,-8],[28,-20],[21,-5],[-64,54],[-105,-18],[-23,7],[-19,12],[-7,40],[15,18],[13,34],[-15,23],[-20,9],[-31,-1],[-29,-7],[-7,14],[17,37],[-15,14],[-20,-7],[-29,-7],[-28,11],[-26,42],[-17,0],[-12,-5],[-18,16],[-19,4],[-13,-5],[-18,24],[-109,49],[-47,6],[-43,-22],[-24,7],[-18,32],[-14,52],[-70,41],[14,27],[32,6],[37,19],[14,23],[-29,28],[-22,7],[-9,10],[-9,24],[13,12],[9,-6],[26,-4],[45,6],[-16,25],[-18,6],[-8,6],[-36,3],[-17,-9],[-37,4],[-9,27],[-3,23],[11,51],[53,46],[131,51],[56,-7],[40,9],[47,31],[20,28],[67,16],[63,-29],[59,-109],[28,-37],[68,64],[102,-2],[21,-36],[8,30],[19,36],[15,-16],[8,-22],[107,6],[17,6],[-29,26],[-23,62],[-5,229],[-30,64],[-34,102],[-16,60],[-1,21],[5,30],[42,-1],[32,-8],[62,23],[30,-16],[-2,-47],[9,-60],[11,-28],[15,-33],[50,3],[54,-19],[68,-3],[99,-34],[42,20],[41,41],[78,27],[7,14],[-45,-6],[-42,26],[-5,29],[5,25],[16,58],[120,92],[85,28],[89,50],[45,52],[30,68],[10,14],[12,13],[-12,24],[8,256],[9,46],[17,38],[27,29],[40,32],[148,44],[22,17]],[[50701,81276],[3,-27],[11,-35],[7,-19],[-6,-25],[5,-21],[20,-37],[25,-35],[22,-23],[7,3],[16,6],[28,23],[24,7],[13,-17],[7,-10],[15,-40],[4,-41],[7,-34],[12,-14],[44,-5],[33,-13],[9,-11],[11,-76],[6,-11],[9,9],[8,12],[11,2],[19,-5],[26,-1],[26,-8],[36,-44],[-1,-14],[-7,-25],[-3,-20],[6,-8],[10,-20],[-2,-24],[-10,-17],[-3,-14],[0,-9],[3,-7],[8,-6],[53,-9],[49,9],[31,24],[5,25],[9,29],[18,25],[13,8],[12,-10],[-20,-102],[14,-26],[2,-39],[6,-34],[17,1],[21,-6],[15,-13],[18,-20],[25,-19],[18,-6],[6,-16],[15,-18],[22,-37],[20,-25],[10,0],[19,10],[28,6],[22,-1]],[[49672,78285],[-10,-50],[-18,46],[-25,41],[-5,37],[0,10],[29,-27],[29,-57]],[[62549,44368],[-17,-5],[-8,15],[-5,36],[5,35],[1,28],[-14,49],[14,28],[12,-32],[6,-2],[18,-23],[-5,-42],[1,-13],[-8,-42],[0,-32]],[[65499,39550],[-40,-17],[-27,6],[-54,49],[-15,33],[-21,91],[5,32],[17,57],[38,23],[41,-9],[18,-15],[21,-66],[28,-68],[-4,-80],[-7,-36]],[[33103,60192],[-2,-33],[-7,-6],[-11,27],[-45,-4],[-7,25],[-1,11],[22,42],[-26,11],[-10,18],[-22,87],[2,26],[9,13],[15,2],[28,-28],[20,-40],[7,-1],[3,-11],[-4,-29],[12,-24],[5,-17],[12,-69]],[[32964,61192],[-32,-6],[-22,5],[-5,41],[11,35],[-8,42],[5,25],[11,17],[18,-22],[3,-32],[11,-29],[51,-61],[-43,-15]],[[32891,61063],[-22,-26],[-11,8],[-14,50],[-9,138],[7,22],[5,9],[30,-17],[12,-19],[13,-13],[-7,-25],[4,-103],[-8,-24]],[[32991,60996],[-15,-2],[-7,5],[-2,34],[12,24],[7,6],[10,-27],[3,-22],[-8,-18]],[[34956,54930],[20,30],[27,152],[19,54],[20,7],[109,-126],[51,-11],[103,-68],[38,-88],[86,-145],[45,-45],[1,-39],[-10,-60],[29,53],[45,-84],[13,-41],[14,-76],[-5,-49],[-6,-25],[-1,-19],[14,27],[7,21],[3,51],[10,63],[15,1],[12,-38],[24,-163],[9,-33],[4,-52],[-2,-23],[2,-22]],[[35652,54182],[-9,-12],[-23,-27],[-11,-37],[-6,-34],[-14,-24],[-14,-30],[-4,-24],[-13,-19],[-3,-32],[-32,-112],[-13,-50],[-19,-54],[-11,-20],[-16,-32],[-8,-36],[0,-39],[-11,-45],[-6,-40],[-10,-23],[-28,-124],[-1,-43],[-7,-26],[-19,-59],[-13,-36],[-23,-27],[-25,-29],[-9,-31],[-17,-17],[-12,-1],[-20,12],[-28,5],[-13,-3],[-7,16],[-9,36],[-13,25],[-9,-9],[-19,-25],[-21,-15],[-15,5],[-33,17],[-15,9],[-4,16],[-5,11],[-7,-5],[-10,-19],[-13,-20],[-19,-26],[-40,-48],[-11,-17],[-11,10],[-17,9],[-18,1],[-39,30],[-22,22],[-10,28],[-12,11],[-7,8]],[[34402,78779],[-6,-5],[-19,8],[9,18],[7,5],[9,2],[4,-5],[-1,-13],[-3,-10]],[[34370,78823],[-24,-25],[-9,14],[2,17],[13,39],[-1,11],[-14,76],[2,13],[4,5],[21,-16],[3,-21],[-10,-46],[7,-31],[9,-23],[-3,-13]],[[1066,44162],[-4,-4],[-5,22],[7,34],[6,12],[6,-26],[-10,-38]],[[543,43595],[-16,-4],[-16,7],[-9,33],[4,14],[10,-7],[10,-24],[17,-11],[0,-8]],[[32497,62251],[-32,0]],[[32465,62251],[3,13],[14,14],[11,-2],[4,-5],[0,-20]],[[32546,62140],[-4,-1],[-3,5],[-3,9],[-2,8],[1,6],[2,-3],[18,-5],[-2,-7],[-3,-7],[-4,-5]],[[7926,42247],[-5,-4],[-6,10],[-2,16],[2,26],[13,-17],[6,-11],[-8,-20]],[[8385,41736],[-9,-15],[-11,11],[-5,14],[-2,15],[2,19],[26,-3],[8,-8],[-9,-33]],[[7942,42120],[-11,0],[-10,9],[2,59],[3,12],[15,-20],[13,-52],[-12,-8]],[[8522,41653],[40,-27],[7,-44],[-8,-29],[-21,7],[-10,16],[-14,52],[-39,-12],[-27,11],[-15,67],[0,31],[6,19],[29,20],[36,-15],[13,-38],[3,-58]],[[11382,46258],[42,-30],[13,3],[-13,-29],[-42,-16],[-14,-15],[-16,10],[-9,34],[39,43]],[[11372,46122],[-20,-45],[-1,48],[8,6],[7,0],[6,-9]],[[11486,45785],[-10,-9],[-1,61],[13,-12],[5,-9],[-2,-17],[-5,-14]],[[11091,46710],[-27,-14],[-13,3],[-10,47],[3,29],[5,9],[46,-11],[4,-22],[-1,-20],[-7,-21]],[[11090,46413],[-6,-11],[-11,35],[-2,14],[20,18],[11,-9],[-12,-47]],[[10886,41557],[2,-11],[-11,1],[-3,4],[1,20],[7,25],[6,21],[11,20],[21,19],[11,8],[3,-5],[-4,-2],[-35,-41],[-10,-29],[-5,-20],[1,-6],[5,-4]],[[11234,46693],[-18,-5],[-3,29],[6,15],[8,7],[13,-9],[8,-12],[-1,-11],[-13,-14]],[[10921,41255],[3,-21],[-6,10],[-22,20],[-2,17],[27,-26]],[[10880,41365],[2,-16],[-10,11],[-10,29],[-17,36],[-4,15],[13,-14],[9,-21],[17,-40]],[[12140,41160],[-5,-12],[-1,12],[-7,6],[-11,12],[-15,14],[-8,3],[-4,8],[6,4],[9,-6],[12,-13],[15,-13],[9,-15]],[[11952,41277],[0,-11],[-26,55],[10,-4],[16,-40]],[[11526,39828],[-8,-11],[3,15],[-6,32],[-6,5],[6,9],[9,-25],[2,-25]],[[10413,42571],[-5,-7],[7,46],[7,6],[-9,-45]],[[10155,42269],[15,-28],[-20,19],[-25,8],[9,5],[15,0],[6,-4]],[[10119,42260],[-11,-3],[-27,34],[11,0],[15,-21],[12,-10]],[[9708,42709],[-2,-26],[-5,25],[-17,40],[-7,18],[8,-3],[23,-54]],[[9587,42436],[1,-10],[-6,1],[-10,29],[-4,25],[-6,29],[-9,21],[-1,19],[0,30],[10,-46],[9,-37],[8,-31],[8,-30]],[[95611,40180],[31,-36],[34,15],[42,-57],[108,-172],[37,-37],[23,-14],[16,-28],[16,-40],[20,-28],[9,-26],[2,-36],[8,-22],[37,-57],[22,-50],[32,-26],[13,-30],[17,-14],[18,-31],[30,-24],[68,-88],[53,-84],[26,-52],[29,-46],[36,-37],[34,-42],[17,-99],[-9,-35],[-20,-18],[-18,-1],[-17,-12],[-56,64],[-14,9],[-15,-4],[-8,14],[-6,21],[-35,24],[-32,37],[-9,26],[-5,32],[-8,19],[-45,28],[-31,31],[-22,44],[-34,31],[-54,63],[-27,20],[-24,31],[-65,115],[-23,21],[-20,51],[-55,120],[-27,50],[-29,44],[-22,52],[-17,61],[-40,88],[-5,38],[2,38],[-10,25],[-16,15],[-8,26],[1,35],[5,18],[40,-60]],[[96539,38811],[-9,-22],[-11,5],[-8,8],[-6,12],[6,44],[24,-22],[4,-25]],[[94430,40718],[-4,-12],[-2,92],[8,34],[5,-71],[-7,-43]],[[96669,39498],[13,-10],[22,1],[-5,-98],[-32,-16],[-11,1],[-7,21],[-18,14],[1,33],[-18,76],[31,11],[17,20],[0,-18],[2,-22],[5,-13]],[[96262,39919],[-15,-5],[18,52],[1,33],[7,63],[-1,22],[12,-3],[12,-18],[-14,-16],[-5,-28],[0,-34],[6,-7],[-9,-37],[-12,-22]],[[96499,39653],[-15,-4],[-20,41],[-39,21],[-17,36],[-11,43],[22,11],[22,58],[-15,22],[-26,3],[3,23],[42,27],[18,-16],[8,-18],[-2,-92],[19,-29],[20,-65],[-1,-18],[-8,-43]],[[69217,23554],[23,-4],[13,6],[62,76],[16,2],[-2,-59],[16,-26],[-20,-6],[-38,2],[-9,-33],[39,-42],[19,-6],[15,0],[29,10],[23,15],[36,36],[22,14],[41,0],[21,34],[10,10],[24,-1],[21,-13],[13,-31],[7,-37],[-5,-37],[-15,-36],[-26,-22],[6,-26],[-7,-13],[-13,-1],[-12,6],[-16,31],[-20,16],[-48,-1],[-22,-2],[-3,-23],[-12,-18],[-12,-10],[-16,4],[-3,-10],[9,-24],[21,-31],[36,-22],[21,-5],[3,42],[26,4],[23,-12],[16,-30],[-13,-10],[-12,-16],[-3,-21],[-23,-23],[-13,-2],[-44,11],[-26,25],[-6,18],[-16,7],[-18,-23],[-19,-5],[-37,19],[-35,31],[-22,12],[-33,8],[-19,-71],[-26,-30],[-33,-3],[-16,6],[-9,28],[2,29],[5,29],[11,29],[6,32],[-2,30],[-12,22],[6,40],[-12,30],[4,23],[20,16],[-9,13],[-10,4],[-7,18],[-6,22],[7,41],[12,39],[-2,45],[19,42],[17,47],[12,19],[15,3],[7,-13],[3,-26],[-6,-17],[14,-7],[4,-55],[-9,-22],[-1,-22],[-19,-46],[5,-37],[37,-16]],[[69244,23583],[-17,-5],[-5,19],[1,25],[-10,20],[-5,22],[4,20],[28,3],[28,-7],[8,-35],[-21,-48],[-11,-14]],[[64398,25092],[-20,-5],[-18,11],[-11,32],[23,27],[12,-19],[9,-20],[5,-26]],[[55552,86607],[9,0],[3,5],[15,-4],[23,-22],[4,-12],[16,-6],[5,-13],[-18,-39],[-11,0],[-8,4],[-15,-4],[-8,-7],[-3,-16],[0,-34],[-65,-7],[-15,10],[-20,77],[4,20],[14,8],[12,2],[1,-41],[18,4],[5,27],[1,20],[-4,9],[-12,8],[-7,13],[10,21],[18,9],[16,-28],[12,-4]],[[55461,86513],[2,-13],[-11,3],[-8,-4],[-6,-16],[-12,5],[-5,23],[9,34],[22,2],[9,-34]],[[55725,86428],[-2,-13],[-23,-3],[-10,12],[-21,-2],[-3,6],[8,12],[17,8],[22,-3],[12,-17]],[[57721,86714],[-10,-2],[-26,-20],[-40,-5],[-17,-14],[-61,42],[-11,3],[-36,-11],[-34,-31],[-64,-9],[-32,-10],[-20,-14],[-4,33],[9,43],[14,29],[1,18],[-10,-1],[-21,-42],[-11,-49],[-21,-25],[-48,-10],[-47,39],[-23,0],[14,-28],[10,-31],[-1,-17],[-25,3],[-28,-19],[-25,-27],[-11,0],[-17,38],[-30,-18],[-26,-24],[-52,-7],[-31,-31],[-55,-22],[-30,1],[-69,-25],[-23,-40],[-20,-14],[-29,12],[-88,-19],[-84,-25],[-36,1],[-36,11],[-38,-35],[-40,-47],[-45,-16],[-16,6],[13,24],[29,25],[21,35],[2,28],[-13,12],[-19,3],[-24,30],[-23,64],[-13,3],[-6,-17],[-7,-49],[-7,-14],[-12,-11],[-15,-12],[-14,-5],[-51,1],[-7,24],[0,11],[9,32],[-7,6],[7,26],[12,-2],[14,4],[7,13],[0,16],[-20,4],[-1,11],[18,45],[2,12],[-7,3],[-11,-5],[-73,14],[-90,57],[-22,3],[-14,51],[-21,-6],[-32,-30],[-24,22],[-25,15],[-7,24],[0,34],[-2,41],[-7,47],[-5,68],[5,53],[20,39],[8,25],[9,64],[3,74],[-6,26],[2,17],[16,0],[-4,14],[-7,8],[-8,17],[7,9],[19,0],[2,6],[2,8],[-15,43],[-2,21],[-21,62],[-23,60],[-36,43],[13,71],[14,64],[-3,31],[-5,37],[-44,41],[-7,58],[-10,63],[4,38],[7,29],[14,29],[73,92],[4,48],[50,4],[-23,42],[-6,24],[-1,29],[71,19],[27,-16],[62,20],[55,38],[-1,20],[-8,18],[-12,35],[8,10],[21,-7],[-10,17],[2,18],[22,-7],[36,51],[1,39],[63,21],[71,79],[33,25],[32,18],[69,80],[29,3],[15,54],[58,72],[17,9],[27,64],[71,75],[45,95],[25,33],[8,36],[28,3],[25,27],[54,18],[53,-5],[22,-12],[21,4],[-2,32],[-15,20],[12,19],[28,14],[-2,32],[-7,20],[-23,25],[12,58],[2,63],[11,73],[-29,39],[-112,65],[-21,-2],[-24,8],[-26,50],[11,43],[2,16],[-11,-1],[-16,-21],[-36,-23],[-46,18],[-23,-4]],[[56109,86599],[-20,-3],[-29,29],[-3,11],[11,6],[-8,23],[3,10],[22,-18],[12,-21],[-12,-5],[20,-22],[4,-10]],[[55893,88272],[3,-11],[17,3],[21,20],[16,-9],[-2,-28],[-10,1],[-3,4],[-14,-16],[-2,-9],[-16,-7],[-29,28],[-18,45],[42,0],[-4,-11],[-1,-10]],[[56159,86618],[35,-13],[15,5],[17,-30],[-29,-20],[-2,-24],[12,-14],[4,-22],[-29,0],[-13,18],[-6,23],[-13,16],[-18,13],[9,16],[5,24],[13,8]],[[55958,86710],[-4,-27],[-19,3],[-19,-5],[-15,27],[-9,45],[3,9],[12,10],[9,-24],[42,-38]],[[56064,86486],[-28,-20],[-10,5],[3,33],[16,15],[28,2],[-9,-35]],[[56007,86467],[-24,-6],[-15,17],[6,12],[17,14],[18,-2],[4,-16],[-6,-19]],[[56902,89280],[-42,-19],[-33,12],[-1,37],[21,18],[37,7],[52,-18],[7,-10],[-29,-7],[-12,-20]],[[99999,42529],[-42,-77],[-15,-39],[-13,-44],[-36,-47],[-15,-63],[1,-63],[36,66],[40,54],[12,11],[13,0],[-1,-19],[-6,-18],[-5,-48],[11,-45],[-30,5],[-29,-4],[-35,-25],[-34,-11],[-13,-1],[-13,9],[-8,13],[-6,29],[-6,5],[-28,-1],[-40,-59],[-14,-49],[-16,-3],[-18,11],[-23,-38],[-26,-14],[-12,32],[-7,40],[-10,29],[-29,7],[4,36],[8,15],[7,21],[5,24],[14,-16],[14,-9],[16,18],[17,1],[17,53],[26,33],[37,26],[37,19],[19,3],[18,11],[32,50],[21,25],[24,15],[22,9],[20,-8],[17,5],[42,35],[0,-9]],[[99521,41836],[0,-26],[8,-11],[8,-2],[21,-48],[31,-42],[19,-32],[1,-28],[-6,-29],[8,-51],[4,-54],[14,-86],[-20,-16],[-30,-2],[-7,-15],[-11,8],[-25,-6],[-25,-28],[-23,-38],[-27,0],[-30,-8],[-30,5],[-21,21],[-38,22],[-49,19],[-21,15],[-17,25],[-16,63],[-3,31],[3,30],[15,10],[12,15],[1,19],[6,14],[7,5],[3,9],[-5,32],[-1,29],[29,53],[31,45],[56,42],[34,-4],[52,33],[17,15],[16,-10],[9,-24]],[[0,42174],[30,49],[9,7],[10,-45],[-12,-49],[-30,-43],[-7,-22],[0,103]],[[99999,42071],[-21,-21],[-8,21],[10,50],[19,52],[0,-42],[0,-60]],[[99579,40913],[0,-25],[-36,-16],[-12,20],[-8,4],[-21,-36],[-6,-15],[-2,-11],[-6,-6],[-39,-17],[-17,17],[12,12],[14,23],[14,-3],[15,22],[14,33],[21,8],[14,13],[24,-10],[19,-13]],[[281,41487],[-8,-8],[-6,2],[-7,9],[-4,16],[9,14],[13,-16],[3,-17]],[[344,41339],[-3,-10],[-15,17],[-6,12],[16,9],[8,-3],[0,-25]],[[486,41501],[-16,-6],[-14,25],[9,26],[13,-7],[7,-25],[1,-13]],[[290,41893],[-7,-20],[-6,7],[8,33],[1,15],[-12,17],[-1,12],[3,8],[15,-20],[9,-15],[1,-8],[-2,-15],[-9,-14]],[[407,40802],[-3,-5],[-8,6],[-6,8],[-1,8],[3,10],[6,6],[3,-2],[-2,-3],[-3,-4],[0,-11],[5,-6],[4,-1],[2,-6]],[[56,40932],[0,-17],[-4,1],[-5,8],[-2,-4],[-2,-5],[-1,-12],[-1,-7],[-4,3],[0,11],[1,9],[2,12],[7,11],[9,-10]],[[99231,41965],[-15,-9],[8,45],[8,15],[5,3],[9,3],[-4,-32],[-11,-25]],[[99839,41839],[-10,-16],[-4,79],[9,0],[7,-8],[4,-20],[-6,-35]],[[99818,41415],[-2,-5],[-24,46],[0,19],[5,16],[9,15],[9,-26],[7,-44],[-4,-21]],[[99673,41630],[-14,-10],[-8,35],[11,35],[12,4],[6,-36],[-7,-28]],[[99999,42315],[-4,-1],[0,11],[-99995,19],[16,28],[12,5],[-8,-27],[0,-14],[-20,-21],[99999,0]],[[0,42538],[9,15],[6,0],[-3,-13],[-12,-11],[0,9]],[[99199,44639],[-10,-6],[-18,5],[-4,9],[6,2],[11,6],[14,-3],[3,-6],[-2,-7]],[[98507,39346],[-2,-7],[-8,2],[-2,13],[5,7],[7,-4],[0,-11]],[[358,39937],[0,-1],[-1,0],[-2,2],[-2,4],[0,4],[0,4],[1,0],[2,-4],[1,-4],[1,-5]],[[60145,60055],[5,1],[38,28],[37,5],[36,-20],[23,-5],[11,10],[10,26],[9,41],[15,23],[20,5],[26,-47],[43,-125],[11,-7],[7,3],[21,100],[17,78],[31,144],[18,83],[16,-24],[17,-42],[18,-20],[20,-12],[10,-2],[12,-17],[44,-103],[15,-24],[20,-2],[86,33],[51,60],[7,24],[14,0],[17,-27],[7,-25],[11,-34],[20,-5],[49,24],[23,14],[21,-12],[26,-9],[16,0],[38,-34],[47,11],[22,-2],[22,-15],[37,-53],[47,-65],[68,-47],[14,-19],[33,-74],[51,-142],[67,-136],[73,-107],[39,-75],[26,-91],[26,-83],[26,-35],[24,-29],[26,-63],[18,-52],[24,-60]],[[61771,59024],[-27,-82],[-37,-110],[-42,-127],[-13,-32],[-37,-77],[-7,-22],[-7,-56],[0,-101],[5,-130],[4,-119],[21,-14],[23,-9],[27,16],[31,13],[40,8],[43,24],[26,20],[27,-2],[24,-21],[12,-19],[17,-6],[21,1]],[[56756,85178],[2,23],[37,113],[7,89],[13,13],[4,12],[-6,29],[-38,18],[-15,-3],[-14,-30],[-14,-22],[-34,-14],[-29,23],[-67,32],[-18,41],[-4,42],[-35,40],[-15,48],[6,33],[32,22],[9,19],[-40,-3],[-9,5],[-2,17],[-18,58],[16,23],[7,22],[-13,19],[4,22],[10,22],[-6,50],[40,27],[40,19],[83,10],[-8,46],[34,2],[57,56],[56,-10],[82,38],[157,0],[22,22],[-4,22],[0,24],[30,-7],[49,4],[186,-46],[45,0],[63,-47],[34,-13],[101,0],[154,-21],[31,32],[3,9]],[[56282,85611],[20,-14],[18,4],[18,10],[40,-9],[92,-71],[8,-19],[-54,-8],[-13,-22],[-13,-15],[-15,-5],[-27,-30],[-35,-29],[-8,-17],[-64,3],[-35,-11],[-29,-33],[-11,-62],[-21,-49],[-21,-18],[-22,-3],[-6,19],[3,18],[46,69],[10,23],[-23,10],[-20,24],[-42,28],[-8,22],[10,2],[10,7],[11,19],[5,21],[-34,64],[18,10],[21,-2],[22,-19],[24,22],[11,3],[17,-8],[17,42],[40,14],[20,13],[20,-3]],[[56367,85729],[-23,-28],[-13,11],[-7,14],[-30,-65],[-33,-11],[-19,13],[2,24],[-19,63],[-29,19],[-40,1],[-30,26],[113,18],[12,30],[23,32],[17,3],[15,-7],[2,-25],[4,-10],[51,-13],[20,-41],[8,-50],[-24,-4]],[[56484,85570],[-23,-6],[-55,41],[13,27],[15,11],[47,-17],[6,-42],[-3,-14]],[[60724,62214],[84,-333],[34,-196],[30,-206],[23,-308],[21,-157],[34,-78],[23,-146],[21,-6],[14,-40],[25,-138],[18,-51],[9,44],[-1,25],[-7,43],[7,54],[14,33],[31,-44],[18,-34],[5,-68],[7,-37],[33,-80],[28,-23],[37,-6],[30,-17],[25,-29],[46,-81],[104,-71],[85,-216],[49,-151],[163,-227],[28,-110],[15,-106],[34,5],[59,-117],[17,-89],[48,-32],[9,52],[23,-43],[9,-67]],[[61976,59163],[-31,-26],[-34,-24],[-4,1],[-12,-31],[-16,-84],[-17,-25],[-10,-2],[-53,79],[-8,4],[-11,-15],[-9,-16]],[[61132,61107],[9,-56],[-27,21],[-5,12],[12,22],[3,13],[8,-12]],[[61150,60884],[11,-30],[8,3],[7,10],[4,21],[44,-42],[-3,-29],[-26,-1],[-30,12],[-28,-4],[-33,12],[-8,48],[21,-23],[11,6],[2,6],[-15,33],[-21,6],[1,26],[10,10],[6,12],[-13,36],[24,-9],[15,-21],[10,-25],[3,-57]],[[52426,54008],[7,-3],[41,2],[12,-30],[-1,-45],[-43,-131],[-8,-55],[-17,-46],[-14,-4],[-49,27],[-9,17],[-3,22],[5,52],[4,16],[23,10],[8,9],[13,56],[4,51],[10,39],[17,13]],[[52664,52437],[2,13],[-25,35],[-18,3],[-16,11],[13,90],[17,80],[25,61],[13,14],[4,30],[20,99],[25,80],[-8,81],[6,136]],[[52722,53170],[7,-4],[1,-13],[2,-19],[9,-16],[31,-27],[91,0],[54,0],[80,0],[85,0],[64,0]],[[25607,59561],[-7,-8],[5,-58],[-16,-35],[-14,-25],[-26,-7],[-44,-2],[-66,28],[-48,39],[-26,0],[8,-13],[21,-8],[27,-27],[-8,-8],[-99,57],[-114,112],[-68,18],[-78,30],[-46,71],[-35,30]],[[56986,70077],[21,-70],[43,-12],[142,62],[157,-62],[86,-24],[133,-54],[81,-95],[23,-12],[58,2],[38,-56],[152,-27],[81,-62],[46,-50],[28,-15],[24,2],[33,19],[42,35],[45,48],[94,125],[33,22],[22,-6],[27,2],[11,33],[14,23],[8,27],[15,31],[48,9],[98,54],[-11,-25],[-89,-61],[38,-8],[39,21],[45,13],[8,26],[6,49],[9,6],[30,-9],[92,-74],[23,-2],[65,41],[13,9],[21,-23],[48,-93],[-17,2],[-51,80],[-4,-40],[-29,-70],[36,-30],[30,-11],[16,-39],[10,-35],[29,15],[21,47],[-11,27],[-8,27],[10,1],[20,-23],[58,-89],[20,-19],[22,3],[48,26],[13,-4],[63,33],[8,-25],[10,-24],[51,27],[80,0],[66,29],[76,71],[6,11]],[[59695,68823],[-15,-26],[-32,-93],[-33,-296],[-47,-231],[-5,-144],[-8,-52],[-23,-73],[-27,-72],[-49,37],[-79,126],[-46,120],[-49,77],[-47,103],[-13,73],[1,48],[-21,115],[-15,55],[-57,123],[-16,65],[-13,29],[-12,41],[-21,160],[-23,101],[-25,-28],[4,-43],[-22,-59],[-14,-68],[11,-56],[46,-85],[10,-37],[11,-80],[-2,-110],[7,-37],[35,-81],[13,-48],[7,-42],[12,-38],[34,-71],[50,-134],[47,-91],[35,-44],[14,-44],[3,-113],[-2,-55],[30,-101],[11,-52],[29,-42],[13,-48],[12,-78],[18,-231],[26,-56],[77,-303],[66,-192],[32,-144],[48,-174],[95,-383],[56,-118],[22,-66],[41,-51],[44,-74],[-42,7],[-10,-5],[-15,-12],[-7,-45],[-3,-37],[5,-194],[11,-98],[37,-188],[28,-56],[14,-36],[18,-27],[88,-63],[52,-136],[115,-170],[11,-47],[0,-11]],[[27687,49891],[6,8],[40,29],[17,29],[20,26],[18,41],[11,39],[28,180],[26,114],[-5,54],[-21,74],[-5,109],[2,33],[-3,25],[-14,-45],[4,-160],[-13,-72],[-17,-18],[-12,13],[7,117],[-13,-22],[-21,-79],[-34,-59],[-1,-19],[-9,-25],[-26,23],[-20,24],[-65,132],[-43,28],[-25,46],[-6,19],[-3,27],[26,27],[28,37],[2,82],[0,65],[-20,109],[9,144],[-5,56],[-23,119],[17,60],[60,44],[20,29],[13,95],[14,56],[27,-22],[21,2],[-28,21],[-24,85],[-3,40],[44,116],[24,30],[28,62],[25,93],[6,147],[-10,105],[-8,111],[15,28],[36,15],[30,36],[15,33],[36,-5],[41,51],[66,26],[91,58],[20,52],[-9,92]],[[28094,52681],[9,-12],[25,-44],[16,-43],[26,-27],[21,-22],[55,-88],[37,-44],[40,-41],[57,-42],[36,7],[8,-32],[7,-34],[13,-19],[21,-17],[12,-5],[4,-9],[12,-122],[8,-17],[29,-20],[35,-7],[14,4],[31,-34],[23,-16],[25,-12],[17,-3],[8,5],[3,12],[14,-2],[21,-16],[30,-3],[19,15],[2,25],[2,43],[7,15],[21,25],[11,-5],[57,-54],[11,-19],[15,-38],[26,-55],[29,-36],[44,-15],[42,-58],[50,-40]],[[27741,50130],[-5,-22],[-27,2],[-7,7],[0,25],[6,81],[7,34],[22,32],[18,16],[23,-3],[25,-29],[-29,-55],[-16,-8],[-6,-7],[-11,-73]],[[28080,52564],[-15,-4],[-7,28],[19,32],[6,6],[-3,-62]],[[24907,51398],[-15,-1],[-43,56],[3,55],[17,37],[56,18],[23,-34],[-2,-66],[-19,-48],[-15,-9],[-5,-8]],[[25161,51318],[-33,-24],[-11,11],[-7,11],[-2,15],[19,35],[17,20],[16,41],[29,24],[9,-6],[5,-8],[2,-14],[-9,-33],[-18,-23],[-17,-49]],[[24604,51577],[-28,-10],[-24,20],[-10,31],[-2,46],[2,15],[52,16],[17,-38],[0,-57],[-7,-23]],[[24882,51071],[-11,-1],[-16,24],[12,45],[13,-11],[9,-12],[5,-18],[-12,-27]],[[24646,51857],[18,-37],[9,-106],[56,-112],[7,-62],[-5,-29],[2,-11],[27,-44],[18,-47],[-30,-108],[-62,-46],[-67,2],[-13,12],[-18,41],[-4,37],[11,35],[34,54],[53,48],[6,37],[-21,35],[-14,71],[-34,50],[-16,152],[-11,8],[-23,-21],[-11,18],[-2,10],[25,35],[5,24],[36,12],[15,-20],[9,-38]],[[24840,51650],[-13,-17],[-52,20],[-16,33],[13,46],[11,18],[31,-17],[32,-51],[-6,-32]],[[30061,63201],[12,10],[8,34],[11,31],[14,17],[17,10],[32,-1],[44,-27],[13,1],[43,24],[35,14],[34,-16],[13,-21],[28,-33],[14,-10],[43,1],[12,-3],[37,-55],[30,-22],[18,-1],[32,21],[16,-1],[18,-47],[4,-67],[15,-61],[24,-39],[115,16],[25,-32],[-8,-27],[-17,-14],[-54,6],[-24,-3],[-5,-26],[0,-25],[32,-6],[31,-12],[32,-20],[33,-13],[36,-9],[36,-14],[61,-49],[66,-109],[18,-25],[12,-34],[-6,-43],[-24,-69],[-13,-22],[-20,-14],[-13,-28],[-13,-49],[-8,-4],[-9,2],[-16,28],[-12,42],[-32,39],[-38,-5],[-56,24],[-34,-12],[-34,-2],[-35,12],[-35,4],[-35,-15],[-34,-25],[-12,-17],[-22,-39],[-12,-15],[-82,-20],[-24,29],[-22,40],[-32,5],[-46,-30],[-28,-11],[-12,-14],[-3,-14],[0,-56],[-7,-33],[-45,-127],[-25,-90],[-10,-28],[-12,-6],[-23,52],[-14,19],[-17,9],[-7,27],[0,39],[-5,38],[-10,29],[-16,20]],[[32977,60627],[-26,-13],[-11,100],[-18,72],[3,45],[3,17],[38,-28],[12,-33],[7,-89],[-8,-71]],[[61976,59163],[4,-27],[47,-114],[15,-56],[16,-102],[-9,-56],[-12,-37],[-18,-33],[-62,-81],[-69,-52],[-44,-103],[-33,7],[5,-39],[12,-5],[19,8],[38,30],[34,14],[37,1],[33,-13],[23,-38]],[[41679,99979],[267,-35],[141,-40],[30,1],[191,-15],[182,-19],[302,-51],[42,-16],[-32,-14],[-75,-9],[-386,-16],[-700,-21],[-401,-39],[-127,-2],[-11,-59],[54,-3],[89,8],[314,59],[117,9],[219,-5],[285,-22],[114,8],[205,-6],[239,17],[283,37],[77,-82],[104,-81],[83,9],[70,-5],[24,-26],[39,-12],[80,6],[245,-23],[168,-42],[63,-19],[30,-28],[18,-22],[-27,-28],[-105,-49],[-133,-45],[-179,-34],[-207,-22],[-1588,-73],[-54,-17],[-31,-44],[21,-57],[74,-9],[173,32],[300,31],[221,-2],[527,-26],[155,-68],[82,-105],[183,24],[39,18],[29,31],[22,33],[18,36],[19,24],[21,13],[45,11],[105,13],[274,13],[66,-4],[48,-49],[10,-28],[3,-38],[-1,-45],[-6,-55],[-24,-54],[-76,-94],[-61,-52],[-66,-37],[-126,-84],[-44,-23],[-138,-99],[-35,-45],[-2,-34],[24,-6],[40,31],[15,23],[26,23],[205,62],[44,17],[133,74],[86,28],[70,29],[37,20],[206,146],[107,43],[112,0],[20,-73],[135,-12],[59,3],[94,-18],[41,-14],[70,-8],[73,-17],[63,18],[19,12],[62,54],[83,47],[77,59],[26,15],[41,13],[42,5],[115,28],[29,2],[62,-9],[273,-5],[150,-14],[208,-40],[145,-21],[67,-20],[97,-41],[79,-43],[37,-13],[-2,-13],[-27,-19],[-195,-66],[-64,-45],[-185,-83],[-90,-29],[-98,-11],[-109,-2],[-71,-12],[-10,-12],[50,-34],[22,-25],[-3,-22],[-53,-32],[-20,-8],[-192,-24],[-97,-41],[-126,-5],[-89,5],[-123,-44],[48,-36],[44,-16],[137,-32],[1,-19],[-66,-38],[-89,-44],[-105,-31],[-40,-5],[-50,8],[-46,-2],[-101,-14],[-97,-2],[-173,20],[-93,23],[-49,8],[-62,-2],[-24,-9],[-98,-56],[-48,-38],[-31,-39],[-13,-42],[5,-46],[12,-32],[19,-17],[23,-10],[41,-6],[89,6],[35,-3],[11,-10],[19,-29],[-3,-28],[-17,-39],[-12,-45],[-9,-52],[5,-29],[36,-6],[17,2],[19,-9],[23,-21],[17,-22],[11,-23],[-6,-19],[-23,-15],[-52,-17],[-128,-33],[-13,-10],[-10,-21],[-7,-30],[-16,-28],[-23,-25],[-22,-15],[-42,-6],[-54,-1],[-61,-14],[-144,-84],[-2,-9],[54,-27],[-2,-24],[-67,-101],[-18,-50],[-14,-68],[-24,-58],[-33,-47],[-33,-55],[-31,-61],[5,-47],[41,-33],[56,26],[69,86],[74,38],[81,-12],[70,-17],[90,-34],[76,-21],[65,-28],[26,-23],[27,-33],[1,-20],[-48,-12],[-16,4],[-119,54],[-58,14],[-77,-16],[-67,-25],[60,-99],[65,-45],[117,-21],[62,-22],[44,-28],[35,-14],[47,6],[64,28],[88,1],[40,-13],[28,-26],[13,-47],[-3,-70],[-9,-52],[-16,-35],[-32,-47],[-27,-9],[-37,3],[-35,9],[-32,17],[-49,13],[-98,14],[-98,31],[-56,8],[-117,-4],[-127,-20],[-5,-25],[-182,-89],[-37,1],[-50,30],[-71,30],[-41,0],[-62,-38],[-15,-14],[1,-14],[45,-32],[18,-7],[24,-6],[80,-8],[36,-8],[33,-100],[52,-61],[23,-13],[19,-5],[65,3],[83,20],[28,-16],[61,-20],[36,-6],[43,1],[49,-7],[67,-57],[-26,-72],[42,-57],[67,-59],[15,-21],[7,-39],[1,-26],[5,-24],[9,-21],[9,-42],[9,-62],[-2,-51],[-15,-39],[-27,-29],[-42,-18],[-34,5],[-26,27],[-37,29],[-48,31],[-80,3],[-117,-90],[-52,-5],[-42,-9],[-46,-39],[-66,-24],[-59,9],[-103,46],[37,-30],[54,-36],[33,-19],[25,-4],[27,4],[39,15],[88,41],[23,6],[20,-3],[16,-12],[19,-35],[21,-58],[-3,-49],[-26,-41],[-23,-26],[-18,-12],[0,-9],[49,-10],[69,53],[22,66],[32,76],[56,25],[64,-25],[52,-71],[72,-131],[31,-14],[39,-31],[17,-39],[-4,-45],[-9,-33],[-12,-21],[-15,-13],[-27,-8],[-50,-7],[-111,14],[-58,0],[7,-45],[-117,-39],[-133,-15],[-125,30],[-104,47],[34,65],[20,72],[-51,48],[-11,1],[18,-74],[-15,-28],[-57,-35],[-40,-15],[-3,-10],[19,-8],[13,-15],[6,-23],[-7,-23],[-19,-24],[-11,-19],[-2,-16],[18,-20],[38,-22],[41,-11],[191,-5],[77,-13],[182,-53],[8,-17],[-31,-96],[-17,-92],[-35,-17],[-191,-4],[-62,-14],[-90,-42],[-87,-51],[-45,-1],[-178,45],[-68,29],[-147,84],[-110,128],[-51,-53],[-30,-26],[-32,-13],[-31,-2],[-30,9],[-34,20],[-56,47],[-68,46],[-47,22],[-1,-6],[27,-27],[41,-32],[103,-92],[37,-23],[-4,-16],[-65,-15],[-79,-31],[-39,-24],[-60,-56],[-20,-9],[-90,-14],[-29,3],[-67,32],[-99,20],[-59,18],[-82,33],[29,-36],[157,-55],[17,-17],[-32,-33],[-20,-12],[-37,-3],[-56,7],[-56,-1],[-58,-10],[-24,-12],[8,-15],[13,-14],[20,-12],[18,0],[44,38],[33,2],[88,-9],[89,29],[64,13],[48,3],[175,44],[37,50],[58,20],[131,15],[126,-8],[65,-6],[53,-47],[70,-34],[59,-37],[69,-13],[40,-50],[111,-57],[71,-12],[44,-27],[4,-114],[5,-49],[-19,-136],[-57,-31],[11,-72],[-15,-58],[-57,22],[-58,38],[-139,59],[-130,38],[-50,35],[-59,26],[-81,109],[-52,135],[-23,67],[-44,4],[-57,-18],[-49,-19],[-24,-32],[-168,-45],[-61,-30],[-35,0],[-125,-45],[50,-22],[23,-3],[51,12],[31,16],[114,44],[92,7],[33,19],[70,26],[48,8],[7,-7],[5,-12],[33,-165],[-14,-44],[-38,-19],[-80,-31],[-21,-15],[23,-27],[76,25],[50,27],[26,-10],[43,-41],[49,-21],[123,-64],[59,-35],[82,-34],[93,-47],[24,-17],[85,-24],[18,-8],[36,-83],[29,-10],[85,-5],[-15,-32],[-83,-72],[-43,-22],[-10,-15],[4,-25],[2,-42],[17,-78],[20,72],[13,34],[19,10],[17,2],[58,32],[58,-17],[15,-81],[8,-76],[-5,-66],[6,-101],[-2,-35],[14,-29],[14,-124],[14,-37],[-29,-33],[-88,-14],[-35,16],[-87,-6],[0,30],[-5,33],[0,24],[-6,21],[-4,122],[-25,-31],[-1,-24],[-7,-25],[-15,-132],[-22,-32],[-70,8],[-69,-5],[-38,5],[-129,60],[-50,54],[-44,82],[-28,76],[-10,71],[-31,57],[-51,45],[-61,36],[-70,28],[-62,35],[-53,44],[-58,33],[-64,25],[-90,10],[-133,-4],[-89,27],[-22,-2],[-21,-14],[16,-40],[103,-18],[79,-5],[105,3],[64,-10],[24,-23],[16,-42],[9,-59],[-21,-47],[-76,-52],[-39,-25],[-117,-47],[-39,-10],[-97,-4],[-75,5],[-98,23],[-55,5],[-115,3],[-27,-8],[30,-25],[49,-14],[34,-17],[4,-32],[-13,-48],[-13,-33],[-21,-25],[-75,-47],[-31,-15],[-141,-50],[-10,-10],[33,2],[89,17],[26,0],[146,-43],[116,2],[236,40],[19,-1],[16,-6],[15,-15],[16,-23],[-19,-23],[-54,-22],[-84,-22],[-36,-15],[-35,-22],[-64,-53],[-19,-56],[68,-21],[30,27],[36,59],[33,35],[76,24],[94,-12],[72,14],[148,58],[26,4],[217,-34],[197,-65],[103,-25],[138,-14],[246,7],[22,-11],[-8,-23],[-14,-20],[-41,-27],[-50,-18],[-31,-5],[-27,-13],[-59,-13],[-15,-10],[21,-45],[-10,-7],[-52,-1],[-88,-29],[-72,2],[-15,-5],[14,-10],[14,-21],[16,-32],[-9,-22],[-32,-13],[-24,-4],[-85,18],[-14,-3],[13,-13],[7,-20],[2,-28],[-21,-23],[-43,-18],[-81,-51],[-35,-15],[-74,-12],[-15,-7],[30,-39],[-4,-16],[-49,-42],[-76,-27],[-10,-14],[-7,-38],[-6,-15],[-20,-22],[-71,-42],[-51,-21],[-25,-17],[-31,-28],[-40,-16],[-47,-1],[-45,-11],[-74,-30],[-51,-10],[-163,-53],[-76,-8],[-66,-19],[-137,-50],[-64,-16],[-45,-19],[-49,-5],[-80,12],[-43,1],[-27,-8],[-24,-15],[-40,-42],[-34,-4],[-112,34],[3,-15],[29,-36],[-1,-26],[-67,-26],[-36,-7],[-52,11],[-70,28],[-90,59],[-109,89],[-53,30],[4,-29],[12,-28],[20,-27],[5,-20],[-13,-12],[-16,-6],[-20,0],[-3,-7],[33,-43],[25,-44],[-2,-41],[-31,-39],[-26,-23],[-22,-7],[-130,-98],[-37,-13],[-16,-12],[-14,-18],[-38,-81],[-15,-25],[-30,-32],[-13,-6],[-4,-13],[6,-21],[-9,-34],[-22,-49],[-76,-133],[-61,-125],[-27,-41],[-20,-17],[-12,6],[-30,-3],[-15,-22],[-13,-40],[-15,-30],[-16,-21],[-122,-89],[-32,-17],[-28,11],[-34,-4],[-70,47],[-12,17],[-45,39],[2,-20],[8,-11],[6,-17],[16,-20],[34,-105],[-27,-22],[-25,-25],[-63,-42],[-68,-70],[-25,-19],[-5,57],[3,17],[-39,27],[1,-19],[-4,-19],[-27,-74],[-8,-13],[-14,3],[-30,-14],[-30,7],[-26,33],[-11,18],[-47,-48],[-23,1],[-4,-40],[-22,-37],[-30,-16],[-41,1],[-25,-21],[-55,23],[-13,44],[44,60],[12,25],[-8,30],[11,39],[84,125],[57,63],[-3,12],[-77,13],[-68,22],[-66,8],[-29,-8],[46,-36],[66,-35],[-33,-34],[-27,-36],[-29,-97],[-19,-40],[-72,46],[-33,16],[21,-51],[63,-48],[4,-16],[0,-57],[-121,-50],[-125,-8],[-91,-14],[-152,-18],[-59,0],[-5,-19],[149,-89],[22,-16],[-21,-30],[-31,-19],[-48,-65],[-25,-23],[-63,-31],[-115,35],[-59,-16],[-57,11],[-1,-38],[17,-27],[17,-69],[38,6],[48,21],[38,-52],[24,-87],[43,-45],[19,-34],[8,-33],[-27,-32],[-55,-46],[-62,-8],[4,-36],[-27,-26],[-56,7],[-26,18],[-28,9],[-112,10],[113,-70],[40,-32],[18,19],[39,5],[58,-18],[-10,-118],[26,-95],[3,-21],[-62,-57],[-1,-54],[-36,-15],[-40,4],[-2,-59],[-27,-36],[5,-23],[8,-20],[-25,-38],[-22,-45],[-31,-39],[-17,4],[-50,-3],[-60,3],[-49,52],[-20,17],[-23,11],[9,-33],[14,-20],[45,-37],[82,-46],[-2,-33],[-22,-14],[-52,-89],[-18,-1],[-23,-23],[-72,7],[-30,9],[-88,-5],[-30,7],[-26,-3],[24,-25],[51,-23],[57,-23],[87,-17],[-3,-32],[-22,-27],[13,-39],[-10,-29],[-4,-34],[-20,-78],[23,-54],[26,-26],[-3,-35],[12,-55],[-38,-50],[-33,2],[-45,-11],[-16,-22],[73,-20],[-7,-38],[-19,-46],[-21,-100],[-42,-172],[-20,-171],[-91,-141],[-32,-3],[-8,-6],[-45,7],[-69,33],[-54,10],[-36,1],[-5,-16],[30,-27],[46,-10],[37,-18],[66,-16],[23,-31],[16,-33],[-3,-19],[0,-21],[12,-117],[-31,-40],[-24,-37],[-82,5],[-15,13],[-79,38],[5,-18],[57,-52],[20,-26],[-13,-5],[-23,-2],[-33,-18],[-58,10],[3,26],[11,27],[-27,-4],[-29,-14],[-18,5],[-14,-1],[-8,13],[-12,53],[14,27],[48,69],[15,37],[-13,16],[-34,-39],[-36,-63],[-16,-38],[-22,-8],[-55,20],[-158,88],[5,53],[-2,45],[46,5],[34,20],[30,23],[33,43],[31,71],[-4,6],[-90,-91],[-56,-30],[-27,-6],[-14,14],[-44,29],[-29,13],[-67,22],[-12,11],[-19,9],[-27,93],[35,113],[23,32],[15,38],[9,50],[-6,22],[-20,-8],[-9,-17],[1,-27],[-11,-18],[-80,-43],[-79,-35],[-38,-33],[-24,-26],[-19,-25],[-29,2],[-41,-5],[-27,-16],[-41,10],[-26,24],[-32,3],[-35,-12],[-25,1],[2,-16],[16,-41],[-27,-3],[-52,-1],[-26,11],[-20,16],[-17,22],[10,28],[83,52],[38,30],[-24,10],[-80,-9],[-14,7],[-53,-4],[2,77],[-13,19],[-1,9],[-18,21],[-18,6],[-11,7],[-90,18],[-12,43],[-6,44],[-17,55],[-43,14],[-24,24],[19,24],[8,31],[-20,14],[-13,22],[2,14],[-16,38],[-5,30],[18,27],[51,32],[17,13],[9,14],[58,23],[-50,16],[-31,3],[-23,-8],[-21,-31],[-19,-20],[-77,-7],[-11,11],[-5,43],[4,34],[32,47],[-37,23],[-33,8],[-39,22],[-35,23],[-30,27],[-29,31],[-10,4],[11,34],[6,27],[1,58],[-12,25],[26,50],[36,54],[78,82],[-83,-39],[-68,-86],[-15,-4],[-5,16],[-26,55],[-19,15],[-9,17],[-39,29],[-17,23],[-24,44],[-34,52],[-48,103],[-78,119],[-20,67],[25,84],[-27,58],[74,27],[106,31],[55,25],[32,7],[68,5],[22,25],[-37,-6],[-25,3],[-2,12],[9,21],[6,27],[-13,-5],[-66,-46],[-97,-37],[-76,-21],[-13,1],[-26,-13],[-16,-3],[-11,3],[-27,36],[-8,23],[49,63],[36,86],[48,56],[33,7],[57,-3],[20,-5],[-7,33],[3,16],[46,20],[53,8],[38,-6],[24,-39],[31,-72],[41,-24],[-2,34],[-21,45],[-8,68],[-27,29],[-22,14],[-61,-7],[-36,50],[-9,19],[0,24],[-37,72],[-12,36],[-19,47],[-10,3],[13,-60],[17,-42],[24,-93],[12,-38],[-16,-29],[-31,-30],[-27,-17],[-64,-21],[14,46],[8,45],[-32,-16],[-30,-33],[-10,-45],[-20,-41],[-57,-101],[-23,-56],[-21,-27],[-24,-8],[-21,22],[-18,51],[-9,41],[-1,104],[3,49],[-10,65],[-31,153],[-7,54],[-52,29],[-1,9],[-14,31],[-10,31],[9,12],[12,8],[78,46],[58,51],[70,80],[28,25],[102,19],[45,3],[-1,14],[-15,6],[-68,-4],[-92,-32],[-16,-12],[-40,-50],[-31,-27],[-87,-62],[-56,0],[-58,74],[-65,-14],[-44,5],[-13,11],[-10,102],[36,119],[-38,1],[-8,5],[-20,27],[-13,8],[9,14],[94,56],[141,111],[61,43],[37,19],[29,21],[34,47],[11,20],[20,16],[40,19],[44,28],[72,63],[9,23],[-15,5],[-34,-21],[-68,-58],[-49,-32],[-166,-145],[-71,-52],[-38,-34],[-30,-32],[-32,-23],[-33,-14],[-71,-10],[-35,-12],[-21,9],[-10,69],[7,40],[-3,40],[18,58],[26,40],[11,22],[5,16],[55,42],[30,18],[21,42],[121,15],[31,-1],[16,5],[13,13],[-12,9],[-36,7],[-97,-2],[-89,8],[-40,7],[-20,-4],[-32,12],[-35,23],[-55,86],[22,110],[2,53],[69,46],[37,15],[53,35],[71,59],[84,36],[43,7],[36,-6],[131,-51],[68,-10],[60,13],[75,-18],[132,-74],[25,11],[-7,18],[-148,78],[1,23],[38,6],[40,22],[-22,14],[-98,-12],[-29,-18],[-95,-10],[-49,16],[-45,8],[-67,33],[-56,-11],[-35,-13],[-62,-13],[-23,-8],[-122,-106],[-51,-22],[-37,7],[26,69],[7,27],[0,30],[11,40],[62,77],[40,84],[16,53],[31,6],[42,-8],[126,-34],[105,-40],[77,-11],[51,-1],[22,13],[17,22],[7,15],[5,32],[6,12],[17,13],[34,49],[11,34],[-11,20],[-24,-2],[-45,-13],[-6,-6],[1,-10],[-44,-54],[-47,-12],[-110,-18],[-50,-1],[-89,25],[-13,9],[-9,19],[-109,-5],[-33,-5],[-26,2],[13,32],[34,35],[48,114],[41,29],[80,27],[84,-4],[145,-88],[44,-8],[40,7],[96,30],[18,12],[34,36],[40,63],[-2,15],[-61,-35],[-33,-10],[-28,0],[26,115],[10,87],[9,22],[82,-7],[111,12],[26,19],[0,9],[-45,11],[-21,25],[-38,-8],[-50,-16],[-62,2],[5,37],[46,79],[5,36],[18,72],[1,37],[24,36],[72,25],[31,16],[1,16],[-43,64],[11,18],[34,16],[13,11],[-9,8],[-31,7],[-49,-14],[-53,-7],[-47,21],[-37,10],[-24,-3],[-63,-36],[-23,-1],[-27,10],[-183,31],[-22,11],[-65,54],[-54,36],[-72,39],[-93,30],[-114,20],[-68,19],[-34,27],[-58,59],[-44,50],[-8,24],[26,30],[26,22],[50,18],[85,-6],[46,-8],[50,-17],[38,-3],[79,4],[80,-10],[48,-12],[63,-25],[172,-106],[72,-37],[32,-4],[129,-39],[20,0],[53,19],[6,12],[-18,11],[-57,10],[-67,43],[-42,34],[-4,57],[5,32],[10,15],[8,48],[-39,29],[-27,9],[-72,43],[-6,10],[34,5],[34,-3],[73,-21],[38,-3],[28,8],[3,9],[-44,24],[-56,44],[-115,6],[-75,-5],[-48,15],[-51,24],[-32,7],[-67,-16],[-34,-1],[-31,5],[-30,76],[8,23],[24,10],[18,25],[12,26],[40,25],[217,56],[55,42],[-2,7],[-37,-8],[-48,-19],[-31,-4],[-128,24],[-20,-5],[-52,-35],[-70,-38],[-32,2],[-44,23],[-7,16],[-3,19],[48,26],[15,14],[31,38],[-2,18],[-52,-10],[-7,17],[1,30],[-5,37],[-13,37],[-43,57],[-18,14],[-15,21],[-33,77],[10,19],[29,14],[5,7],[-69,-12],[-7,-13],[13,-20],[9,-26],[6,-32],[9,-29],[25,-31],[20,-16],[33,-43],[14,-48],[-4,-25],[-26,-26],[-40,-27],[-13,-23],[-5,-23],[-32,-21],[-19,8],[-16,1],[18,-37],[12,-39],[-14,-38],[-38,-24],[-20,0],[-41,-19],[-103,-10],[-36,4],[-66,20],[-78,10],[-31,26],[-40,47],[-21,42],[0,38],[11,27],[22,17],[27,109],[38,88],[96,91],[27,33],[9,17],[0,14],[-15,8],[-118,-112],[-73,-12],[-21,25],[6,45],[13,11],[59,-5],[23,25],[-37,38],[-39,10],[-9,9],[40,29],[93,-2],[21,20],[34,22],[37,40],[14,34],[3,29],[-8,23],[-1,23],[7,24],[-10,26],[-26,28],[-57,28],[-17,-31],[-18,-13],[-25,-3],[-24,13],[-24,5],[-24,12],[-24,3],[-10,10],[-6,26],[-1,34],[28,16],[39,13],[26,23],[17,34],[3,38],[-12,40],[-32,37],[-58,-36],[-23,-9],[-6,26],[-8,19],[-24,25],[-33,18],[-31,13],[-1,19],[7,21],[14,24],[18,52],[20,-5],[16,5],[-9,42],[-16,36],[-19,20],[-1,9],[-4,10],[-14,25],[-16,19],[-29,52],[-20,19],[-26,11],[-28,0],[-45,-13],[-83,-16],[-66,-8],[-11,4],[33,20],[49,21],[64,14],[19,34],[-7,29],[2,28],[-17,30],[17,16],[58,16],[27,3],[26,21],[-74,50],[-77,33],[-20,14],[-17,22],[-15,30],[-24,31],[-33,31],[-48,30],[-125,54],[-42,38],[-40,57],[-19,25],[-21,18],[-87,43],[-10,18],[89,50],[9,20],[-36,61],[-38,44],[-41,16],[-60,8],[-56,20],[-50,31],[-51,23],[-76,22],[-126,56],[-195,59],[-87,35],[-52,13],[-68,3],[-132,33],[-111,10],[-69,-4],[-22,5],[-51,33],[-79,19],[-41,-7],[-51,-36],[-62,-35],[-32,-4],[-49,32],[-24,22],[-23,8],[-23,-8],[-43,-29],[-41,-21],[-61,-25],[-49,-12],[-63,-3],[-16,-9],[-24,-1],[-32,8],[-31,17],[-28,24],[-25,14],[-22,2],[-50,-13],[-63,-37],[-29,-9],[-24,3],[-30,12],[-59,30],[-33,-3],[-24,-10],[6,-25],[56,-59],[50,-42],[-42,-5],[-368,57],[-46,14],[-68,34],[-56,21],[-96,54],[-74,30],[-24,22],[-6,16],[23,22],[149,72],[56,14],[116,18],[27,11],[9,8],[-30,16],[-151,-6],[-135,11],[-117,28],[-21,10],[-19,17],[-20,26],[5,28],[28,32],[16,22],[5,11],[-147,-77],[-60,-28],[-48,9],[-34,13],[-16,14],[1,16],[5,11],[10,7],[-78,33],[-35,25],[-4,26],[28,27],[27,19],[27,12],[72,11],[263,20],[188,-19],[64,64],[43,21],[127,21],[195,3],[138,-12],[64,-15],[88,-33],[5,10],[-21,30],[-2,25],[36,43],[16,27],[-11,29],[-38,29],[-69,38],[-36,3],[-41,-9],[-49,-21],[-102,-53],[-49,-11],[-80,-3],[-44,7],[-43,8],[-67,28],[-25,5],[-29,-12],[-35,-30],[-34,-21],[-32,-12],[-30,-5],[-43,2],[-173,47],[-40,21],[-2,31],[-53,30],[-60,5],[-8,11],[77,46],[57,19],[-10,6],[-82,1],[-56,-25],[-32,-4],[-74,-1],[-77,13],[-33,11],[-34,25],[-38,14],[-115,21],[-26,12],[-25,19],[-94,55],[-57,40],[-8,22],[66,49],[3,12],[-28,21],[-12,15],[10,22],[57,47],[22,13],[103,28],[104,40],[37,9],[34,3],[136,-3],[42,10],[36,20],[58,20],[123,30],[272,46],[18,6],[1,8],[-24,24],[-5,12],[55,21],[126,33],[86,16],[55,2],[45,7],[63,21],[35,4],[214,8],[95,-12],[46,1],[30,8],[40,24],[74,59],[38,36],[37,56],[48,88],[35,85],[24,83],[18,51],[13,18],[44,23],[47,18],[79,16],[-7,7],[-34,12],[-31,5],[-29,-3],[-53,-18],[-69,-13],[-67,2],[-48,-5],[-44,-17],[-71,-14],[-48,3],[-86,25],[-43,5],[-110,-3],[-32,10],[-28,17],[-23,25],[-16,32],[2,34],[40,60],[15,16],[107,68],[66,31],[66,24],[48,13],[45,7],[43,14],[80,47],[82,40],[102,75],[50,20],[173,32],[47,1],[40,-9],[38,-16],[106,-74],[9,2],[-19,28],[-39,84],[7,34],[61,37],[25,6],[64,-2],[103,-11],[70,-13],[52,-20],[63,-13],[32,1],[23,9],[33,32],[43,54],[17,66],[-8,78],[-13,58],[-16,36],[9,30],[52,36],[48,26],[114,38],[92,9],[55,-2],[72,-18],[100,-10],[91,-34],[146,-78],[97,-39],[81,-18],[79,-29],[117,-64],[62,-27],[36,-10],[32,-1],[-12,18],[-56,37],[-85,42],[-191,75],[-104,53],[-94,60],[-69,36],[-126,35],[2,14],[151,50],[278,44],[313,33],[105,-3],[184,14],[18,22],[39,9],[172,30],[49,0],[76,-15],[80,-27],[37,-24],[51,-42],[25,-59],[-4,-186],[1,-36],[10,-13],[35,20],[42,38],[37,26],[29,41],[20,56],[12,41],[-49,46],[-2,76],[24,41],[69,0],[284,-140],[111,-31],[127,-75],[149,8],[137,-9],[60,3],[30,11],[-42,32],[-195,85],[-88,67],[-62,84],[-15,45],[47,8],[217,-1],[327,-39],[418,-133],[205,-45],[369,-154],[111,-23],[45,-5],[34,19],[21,21],[1,27],[-18,35],[-10,39],[-3,46],[25,89],[60,30],[26,33],[-24,59],[-70,41],[-271,105],[-1,13],[55,14],[81,8],[671,-25],[116,-10],[50,-9],[21,-11],[28,-6],[144,15],[-3,26],[-18,16],[-779,45],[-145,16],[-74,1],[-77,-12],[-158,-6],[-73,2],[-95,54],[86,64],[72,-1],[137,-25],[82,35],[129,29],[128,10],[278,63],[52,5],[65,-3],[143,-16],[57,-15],[65,-33],[38,-10],[45,-2],[61,-15],[89,48],[81,52],[92,33],[131,-19],[83,-25],[75,-30],[107,-16],[182,-102],[34,0],[16,8],[17,19],[6,28],[22,38],[-16,14],[-152,42],[-29,17],[-29,26],[0,22],[28,18],[30,8],[98,-8],[32,6],[31,15],[37,27],[29,7],[66,1],[101,-18],[88,-1],[32,8],[5,17],[8,11],[10,5],[321,1],[79,4],[63,13],[76,2],[66,-8],[83,-17],[81,1],[122,27],[115,13],[634,-4],[208,-16]],[[35352,92133],[93,-47],[98,-32],[9,-15],[8,-22],[2,-12],[-3,-11],[-6,-10],[7,-12],[21,-16],[2,-19],[-25,-31],[-34,-35],[-183,-72],[-64,-13],[-160,-49],[-49,2],[-11,2],[-30,22],[-42,20],[-19,16],[-17,23],[7,14],[30,5],[44,0],[65,16],[-18,15],[-17,9],[-12,19],[-27,-3],[-20,11],[-38,7],[-101,7],[-66,19],[-20,11],[-17,20],[-15,28],[22,109],[15,27],[34,9],[84,-24],[11,11],[-92,40],[-33,23],[-10,19],[-6,28],[0,16],[4,16],[8,17],[23,22],[92,35],[102,-12],[175,-43],[22,-10],[54,-37],[103,-113]],[[35829,91907],[-43,-20],[-9,5],[-9,15],[-22,70],[-7,34],[5,41],[-8,29],[39,35],[32,5],[43,-8],[72,-35],[-5,-11],[-16,-18],[-44,-24],[-15,-53],[-3,-27],[2,-20],[-12,-18]],[[35129,92765],[-26,-4],[-75,29],[-12,11],[-5,14],[3,16],[24,30],[45,43],[32,8],[20,-27],[20,-37],[2,-18],[-1,-22],[-5,-19],[-9,-15],[-13,-9]],[[34717,93773],[-39,-39],[-32,-23],[-70,-66],[-12,-3],[-18,9],[-15,18],[-26,4],[-9,11],[-4,9],[-12,6],[-18,3],[-30,-7],[-27,7],[-21,29],[38,20],[24,17],[91,6],[25,-7],[16,0],[25,4],[54,21],[8,10],[48,-12],[4,-17]],[[30092,96385],[-99,-5],[-97,22],[-34,17],[2,27],[14,9],[53,9],[44,2],[29,-4],[70,-16],[50,-16],[33,-5],[-9,-24],[-56,-16]],[[37537,99126],[-56,-10],[-118,61],[-186,61],[-164,40],[-154,107],[-12,38],[21,33],[135,5],[108,15],[274,-66],[138,-56],[46,-45],[-7,-92],[-25,-91]],[[42935,92696],[10,-34],[1,-16],[-2,-14],[-6,-9],[-13,-9],[25,-22],[7,-15],[2,-12],[-16,-24],[-110,-31],[-31,-15],[-38,-37],[-47,-31],[-16,0],[-18,33],[-74,24],[-139,-13],[-162,-30],[-58,-14],[-29,7],[-9,12],[0,15],[19,47],[8,12],[37,15],[25,41],[-8,44],[10,62],[25,10],[64,-22],[41,-5],[73,-3],[99,8],[79,25],[144,71],[25,-1],[19,-25],[13,-12],[43,-20],[7,-12]],[[44815,98989],[-29,-18],[-73,7],[-94,52],[-62,43],[-5,50],[32,22],[50,4],[69,-43],[71,-58],[41,-59]],[[45107,97825],[-117,-66],[-174,5],[-103,31],[-30,45],[40,51],[125,41],[156,25],[142,-15],[20,-51],[-59,-66]],[[44723,96758],[-37,-20],[-25,61],[-22,81],[-5,92],[57,45],[29,11],[20,-11],[-5,-40],[0,-82],[19,-55],[-31,-82]],[[44838,95646],[-32,-16],[-108,239],[0,87],[7,66],[49,5],[42,-36],[20,-137],[22,-208]],[[44999,95280],[22,-61],[10,-56],[35,-35],[73,5],[29,-66],[-53,-26],[-214,10],[-88,-5],[-61,41],[2,71],[8,71],[61,41],[51,-36],[62,26],[63,20]],[[45012,96567],[-54,0],[-20,15],[13,27],[75,85],[25,7],[37,-9],[11,-44],[-24,-44],[-63,-37]],[[39713,89591],[-43,0],[-14,45],[4,50],[49,15],[26,-34],[-10,-50],[-12,-26]],[[37148,86855],[-32,-70],[-32,15],[-16,31],[-31,15],[-34,-4],[-1,12],[110,74],[53,20],[-4,-31],[-10,-27],[-3,-35]],[[35645,92658],[-37,-2],[-86,11],[-7,6],[-1,13],[12,37],[38,5],[45,-20],[49,-29],[6,-13],[-19,-8]],[[48160,87445],[-6,-22],[-7,1],[-26,26],[-21,15],[-7,13],[-6,21],[12,2],[14,-4],[36,-20],[10,-20],[1,-12]],[[48139,87237],[5,-18],[-6,2],[-19,20],[-33,48],[-11,39],[-2,18],[8,-2],[7,-16],[31,-11],[8,-8],[0,-19],[10,-23],[2,-30]],[[48003,87637],[25,-22],[9,-16],[-14,-15],[-18,-4],[-21,3],[-34,17],[-12,38],[24,-1],[28,7],[13,-7]],[[48158,87688],[-7,-77],[-12,0],[-20,22],[-15,4],[-5,-11],[1,-14],[8,-9],[24,-52],[2,-15],[-3,-7],[-23,15],[-57,67],[-44,110],[60,18],[43,-29],[48,-22]],[[48220,87706],[-13,-42],[-20,7],[-5,4],[-5,11],[3,31],[-1,45],[22,-37],[19,-19]],[[53491,83977],[0,-58],[-7,-17],[-10,-11],[-28,-11],[-24,-17],[-22,-29],[-7,-41],[16,-30],[31,-16],[8,-58],[-26,-28],[-64,-28],[-7,-68],[2,-54],[-1,-39],[-5,-54],[-52,-24],[-34,82],[0,33],[-11,38],[-1,33],[-12,52],[-50,14],[-19,2],[-27,-9],[-6,3],[-33,72],[6,79],[-17,40],[-3,18],[1,20],[-14,16],[-18,9],[-8,44],[20,11],[48,-5],[15,3],[13,9],[39,73],[-1,16],[4,21],[42,8],[19,-28],[-3,-46],[2,-57],[26,-16],[10,-3],[10,43],[8,21],[10,12],[4,39],[-6,24],[-13,17],[48,49],[50,38],[29,2],[29,-9],[27,-13],[15,-11],[8,-18],[-18,-43],[-5,-23],[12,-77]],[[52408,83469],[-3,48],[-6,34],[-18,51],[27,12],[-5,100],[-10,52],[-75,53],[-60,51],[14,174],[6,46],[-23,91],[3,105],[9,164],[19,7],[14,-1],[53,-30],[22,-3],[15,-26],[18,-11],[13,28],[5,48],[42,62],[30,23],[20,11],[20,-25],[16,-28],[4,61],[12,117],[-40,19],[-33,-16],[-32,-74],[-29,-94],[-47,-8],[-37,-27],[-34,28],[-22,24],[0,35],[5,22],[39,76],[54,73],[53,-1],[39,23],[24,3],[72,-5],[38,16],[33,34],[73,141],[41,59],[82,21],[76,68],[22,1],[-36,-51],[-6,-19],[-4,-30],[25,-66],[-5,-40],[2,-78],[-24,-41],[-28,-87],[-12,-13],[-2,-101],[3,-25],[-4,-92],[28,-38],[29,-20],[99,1],[10,-16],[13,-29],[-9,-49],[-11,-36],[-28,-31],[-37,-23],[-23,-1],[-31,44],[-15,-14],[-15,-23],[-26,-119],[-12,-81],[-6,-7],[-15,12],[-25,1],[-31,-19],[16,-17],[17,-30],[-7,-15],[-28,-16],[-24,-32],[-11,-25],[-31,-29],[-19,-37],[9,-46],[4,-40],[9,-45],[-8,-35],[-38,-51],[-14,-45],[32,1],[21,-10],[12,-13],[12,-19],[-8,-23],[10,-59]],[[52956,83876],[12,-30],[14,-64],[23,-72],[-10,-30],[7,-38],[-7,-41],[-44,-46],[-51,-2],[-52,22],[-74,44],[-6,24],[-10,13],[-20,74],[1,92],[37,11],[81,43],[18,-6],[20,-23],[23,-1],[32,32],[6,-2]],[[53155,83462],[50,-36],[33,2],[22,-14],[6,-23],[2,-51],[-24,-15],[-26,5],[-36,-19],[-117,83],[2,69],[4,27],[56,7],[28,-35]],[[52981,83381],[-12,-3],[-17,46],[-2,15],[20,30],[12,34],[33,52],[19,61],[7,-1],[-8,-55],[-43,-151],[-9,-28]],[[53485,83505],[-10,-9],[-43,7],[-48,-40],[-18,12],[7,26],[5,9],[16,11],[11,16],[4,25],[10,-14],[30,-5],[14,-8],[12,-12],[10,-18]],[[53518,83868],[-26,-24],[-6,1],[-9,34],[14,20],[8,17],[6,0],[8,-19],[5,-29]],[[52912,83437],[-19,-6],[-21,12],[-35,48],[-4,12],[18,-8],[23,-25],[18,-5],[25,-21],[-5,-7]],[[52794,83459],[-29,-8],[-14,14],[-28,5],[-9,89],[2,5],[14,-6],[47,-41],[16,-45],[1,-13]],[[52946,83976],[-5,-11],[-17,11],[-2,37],[6,34],[-7,30],[8,19],[25,-45],[7,-21],[-9,-25],[-6,-29]],[[53070,84822],[-12,-13],[-38,19],[17,26],[42,13],[24,-4],[-27,-27],[-6,-14]],[[54190,83537],[-10,-10],[-46,17],[-56,40],[9,78],[14,34],[102,-88],[1,-33],[-14,-38]],[[54709,79837],[-7,13],[-13,48],[-14,6],[-19,4],[-14,7],[-31,28],[-16,8],[-18,2],[-18,-16],[-13,-19],[-41,0],[-45,9],[-65,63],[-16,1],[-18,-3],[-28,15],[-55,41],[-26,9],[-16,-5],[-14,-9],[-11,-2],[-6,14],[-20,16],[-21,2],[-6,-10],[-6,-90],[-7,-32],[-28,1],[-10,-15],[-22,-44],[-5,-41],[-38,8],[-18,7],[-16,-6],[-18,-23],[-49,2],[-39,13],[-17,52],[-18,21],[-22,18],[-8,4]],[[59445,72041],[-11,-4],[-17,16],[-10,5],[-10,-15],[-11,-11],[-10,-5],[-8,-2],[-14,-11],[-17,3],[-25,9],[-14,-22],[-3,3],[-2,55],[-9,23],[-11,13],[-16,-6],[-22,2],[-16,10],[-31,-16],[-26,-17],[-18,-17],[-14,1],[-24,16],[-18,17],[-2,14]],[[59086,72102],[17,-6],[30,12],[13,56],[4,65],[50,-19],[52,-9],[42,-4],[41,11],[126,69],[36,41],[23,14],[38,34],[40,19],[-25,-39],[-145,-174],[-10,-52],[7,-35],[20,-44]],[[59445,72041],[5,-11],[8,-33],[-32,-10],[-31,-3],[-18,4],[-17,-1],[-51,-95],[-28,-32],[-33,-19],[-33,-11],[-17,-1],[-15,-12],[-10,-22],[0,-22],[-5,-17],[-18,4],[-8,34],[-13,15],[-32,-8],[-16,1],[-52,33],[-16,13],[-10,28],[-27,101],[-4,75],[25,-19],[23,23],[23,38],[27,15],[16,-7]],[[27267,65185],[73,-26],[59,7],[28,16],[-3,-16],[26,-40],[10,-3],[38,20],[99,8],[10,-11],[18,-39],[25,-24],[26,-18],[28,-5],[27,8],[26,-4],[32,-37],[10,-5],[28,10],[-8,-34],[48,-49],[36,-95],[25,-39],[28,-35],[23,-24],[25,-11],[79,5],[18,-3],[17,-14],[15,-5],[9,5],[151,-149],[48,-79],[30,-41],[63,-59],[25,-13],[14,7],[-3,14],[-18,33],[-3,12],[24,-11],[43,-67],[12,-24],[21,-23],[22,-17],[-11,-26],[-17,-3],[-34,11],[27,-43],[5,-31],[12,-3],[19,35],[11,29],[48,-75],[25,-34],[-6,-20],[-2,-20],[28,18],[11,-2],[10,-11],[12,-32],[26,-7],[27,1],[55,-27],[51,-54],[49,-11],[49,-2],[24,-28],[11,-39],[-12,-27],[-7,-28],[18,-35],[-39,-15],[-6,-21],[2,-23],[8,-12],[23,11],[33,-10],[51,-8],[35,7],[71,-24],[21,-13],[42,-44],[19,-30],[42,-79],[35,-31],[31,-8],[11,5],[10,-8],[9,-11],[8,-35],[-5,-37],[-17,-29],[-10,-22],[-44,-2],[-62,-10],[-60,-32],[-29,-26],[-14,-17],[-31,-15],[-2,13],[0,17],[-8,31],[-7,-28],[-12,-21],[-19,-17],[-73,-1],[-29,23],[-30,17],[-109,16],[-27,-1],[-73,-18],[-73,-9],[-31,-11],[-30,-16],[-59,0],[-70,-18],[-70,-4],[45,131],[95,125],[17,27],[13,35],[3,26],[-4,23],[-23,39],[-4,29],[-7,19],[-33,17],[-33,10],[-35,0],[-73,13],[-39,1],[-33,27],[-55,96],[-26,26],[-13,22],[-10,24],[-13,140],[-11,68],[-17,58],[-25,45],[-27,15],[-101,-38],[-24,5],[-23,13],[-154,91],[-63,50],[-26,25],[-22,35],[-23,58],[-25,52],[0,-21],[-4,-14],[-129,-6],[-20,12],[-13,14],[-10,21],[-7,42],[-12,35],[-4,-38],[-6,-34],[-17,-20],[-20,-3],[-24,46],[-104,10],[-9,8],[-34,44],[-30,56],[29,19],[60,26],[13,18],[8,21],[-5,33],[-12,24],[-13,14],[-13,9],[-18,4],[-232,5],[-13,-17],[-21,-37],[-41,-46],[-28,-49],[-10,-25],[-12,-18],[-29,-30],[-24,-46],[-30,-21],[-16,13],[-16,0],[-11,-12],[-13,-5],[-59,-6],[-9,-11],[-8,-34],[-10,-64],[-9,-21],[-30,-8],[-28,-18],[-58,-62],[-15,-9],[3,45],[-3,44],[-16,2],[-19,-7],[-15,-13],[-29,-32],[-14,-9],[-14,17],[3,21],[95,79],[11,6],[17,-6],[17,3],[13,22],[-16,105],[6,71],[22,55],[45,83],[21,27],[219,174],[22,9],[142,35],[22,12],[66,51],[69,21],[73,-16]],[[28425,64488],[-11,-18],[-13,26],[-8,2],[-11,10],[-21,29],[-5,29],[17,2],[23,-5],[39,-16],[-4,-34],[-6,-25]],[[28326,64680],[-6,-10],[-15,22],[-22,9],[-13,33],[-12,13],[-1,12],[20,9],[14,-4],[16,-26],[9,-46],[10,-12]],[[28158,64834],[38,-13],[13,8],[13,2],[13,-5],[19,-48],[-16,-6],[-13,0],[-10,8],[-34,3],[-23,14],[-12,12],[-6,14],[18,11]],[[28367,64589],[-10,-2],[-27,24],[-9,20],[10,27],[2,30],[4,1],[4,-35],[22,-15],[1,-8],[13,-30],[-10,-12]],[[27066,64269],[-26,-31],[-55,-43],[-30,-1],[-30,16],[-20,36],[-12,35],[1,17],[19,-28],[16,-14],[13,9],[10,16],[-31,114],[2,25],[24,62],[65,-19],[11,-11],[10,-40],[14,-31],[17,-83],[2,-29]],[[27958,64898],[1,-15],[-49,42],[-21,44],[-8,10],[13,1],[55,-72],[9,-10]],[[55279,77689],[-18,-2],[-29,10],[-14,18],[-2,19],[0,17],[-9,29],[-23,29],[-49,5],[-18,9],[-18,11],[-20,8],[-19,-1],[-22,-8],[-40,13],[-13,-17],[-20,-20],[-18,0],[-34,46],[-10,3],[-30,-23],[-12,-1],[-9,7],[-40,18],[-18,3],[-14,-8],[-23,9],[-58,61],[-35,-46],[-73,11],[-21,-31],[-25,-60],[-20,-29],[-17,11],[-20,26],[-36,67],[-18,13],[-21,3],[-18,-8],[-10,-14],[-7,-98],[-7,-87],[0,-53],[40,-48],[47,-83],[15,-10],[7,-27],[11,-70],[12,-79],[24,-52],[22,-37],[26,-33],[33,-52],[27,-56],[7,-21],[52,-75],[51,-76],[46,-27],[7,-14],[0,-59],[5,-22],[30,-61],[62,-90],[7,-21],[2,-15],[-4,-12],[-16,-12]],[[54884,76577],[-13,13],[-58,88],[-55,56],[-63,104],[-84,41],[-58,46],[-34,-7],[-39,-14],[-23,-1],[-17,9],[-12,28],[2,22],[-2,28],[-34,46],[-46,44],[-43,56],[-87,151],[-18,49],[17,9],[13,0],[15,10],[24,0],[28,-10],[-25,32],[-31,32],[-80,127],[-24,59],[-3,65],[6,88],[-14,63],[-62,82],[-23,43],[-45,25],[-21,-2],[-12,-32],[-9,-71],[-40,-93],[-14,-41],[-21,-52],[-18,-4],[-11,5],[-33,88],[-32,68],[-4,31],[-3,40],[-24,144],[17,20]],[[54625,76610],[51,-16],[38,8],[34,-10],[21,-19],[5,-9],[-28,-1],[-31,8],[-35,-19],[-31,10],[-12,12],[-8,15],[-4,21]],[[54776,76685],[-20,-6],[-123,4],[-36,12],[-40,31],[-9,9],[41,9],[37,-9],[12,-22],[101,-18],[37,-10]],[[54662,76768],[-44,-1],[-38,10],[-19,18],[2,15],[6,25],[42,-3],[65,-18],[15,-21],[-4,-9],[-25,-16]],[[54230,77224],[5,-20],[-35,38],[-13,26],[-3,11],[46,-55]],[[54113,77751],[-34,-12],[-16,22],[-4,18],[-29,6],[-17,25],[-3,11],[24,28],[13,45],[16,-27],[20,-51],[11,-14],[19,-51]],[[54119,77625],[7,-25],[-26,23],[-23,9],[-5,17],[3,14],[5,14],[18,-2],[3,-14],[18,-36]],[[54218,77382],[-7,-16],[-18,29],[-16,20],[-12,23],[-23,30],[-8,34],[-34,69],[-6,19],[18,-28],[14,-18],[12,-4],[30,-44],[30,-57],[35,-49],[-8,-2],[-7,-6]],[[54219,77143],[4,-8],[-1,-6],[-14,8],[-4,-2],[-68,126],[-7,24],[24,-29],[66,-113]],[[54269,77173],[19,-43],[-18,9],[-18,27],[-11,28],[28,-21]],[[54024,77568],[-2,-22],[-17,28],[-9,51],[-21,82],[-3,23],[11,23],[0,23],[-15,72],[12,11],[8,2],[3,-50],[7,-29],[20,-35],[-4,-58],[4,-83],[4,-18],[2,-20]],[[54891,76479],[37,-39],[-111,51],[13,5],[12,1],[49,-18]],[[55143,76286],[-51,54],[-48,61],[-93,94],[-67,23],[-91,76],[-59,27],[23,6],[26,0],[140,-101],[-16,27]],[[54907,76553],[20,10],[17,-7],[11,-33],[22,-22],[35,-38],[22,-29],[50,-53],[12,-7],[25,-15]],[[49135,54774],[-37,15],[8,19],[36,-11]],[[48465,57848],[17,-38],[22,-26],[34,3],[24,-15],[21,-30],[14,-65],[15,-47],[7,-67],[24,-35],[19,-17],[26,-48],[27,-25],[27,6],[13,-26],[21,-18],[20,-1],[18,56],[24,22],[61,45],[23,20],[25,13],[58,4],[54,-13],[27,-11],[18,8],[18,-27],[18,-56],[14,-18],[15,-19],[12,-44],[13,-44],[7,-19],[16,-44],[14,0],[14,18],[6,14]],[[49161,54798],[-2,12],[-11,4],[-29,26],[5,83],[-13,4],[-11,-11],[-20,-101],[-10,-17],[-146,52],[-31,42],[-38,9],[-66,-5],[-54,-12],[-16,-25],[137,15],[15,-3],[7,-16],[-173,-33],[-67,-19],[-19,5],[-15,32],[-72,4],[-15,-11],[-8,-23],[28,5],[44,1],[12,-18],[-139,-24],[-97,-45],[-41,-33],[-135,-110],[-83,-52],[-22,-20],[-37,-53],[-48,-34],[-54,-64],[-33,-14]],[[26978,56492],[-19,64],[-26,61],[-23,37],[-2,88],[-9,48],[-34,44],[-30,30],[-21,-6],[13,-50],[34,-65],[3,-25],[-1,-33],[-23,5],[-21,14],[-26,4],[-17,20],[-36,77],[26,66],[8,43],[-1,90],[-6,43],[-28,67],[-44,72],[-61,60],[-29,47],[-73,37],[-27,24],[-22,45],[-3,33],[8,50],[-20,63],[-86,125],[-48,46],[-11,26],[-7,9],[7,-86],[21,-52],[55,-48],[15,-28],[6,-37],[-32,-70],[-16,-18],[-5,-38],[-10,-12],[-11,22],[-45,110],[-86,53],[-16,32],[-32,101],[-14,91],[5,61],[35,96],[11,41],[-2,26],[1,37],[-13,26],[-33,35],[-21,27],[6,14],[38,37],[2,33],[0,11]],[[26766,58131],[7,-23],[8,-36],[3,-46],[36,-155],[28,-86],[62,-158],[26,-29],[45,-127],[16,-21],[9,-37],[46,-31],[13,-23]],[[56657,45580],[-11,-11],[-6,-30],[-1,-23],[-19,-18],[-38,4],[-38,17],[-27,5],[-18,-4],[-67,-57],[-22,-7],[-73,4],[-41,12],[-30,2],[-20,-18],[-26,-42],[-22,-22],[-10,2],[-6,18],[-9,24],[-2,63],[-11,69],[7,36],[21,27],[8,53],[-7,81],[0,56],[6,33],[-8,79],[-22,126],[-30,102],[-39,79],[-25,76],[-12,72],[4,173],[12,153],[9,121],[-2,203],[-27,132],[-6,142],[15,152],[3,104],[-10,53],[-7,8],[-9,5],[-66,5],[-89,7],[-78,2],[-84,2],[-14,20],[-6,35],[0,35],[17,108],[-2,9],[-30,2],[-81,-18],[-54,-17],[-34,-6],[-59,-29],[-37,-62],[-12,-78],[1,-64],[-2,-47],[-17,-49],[-14,-56],[0,-30],[-8,-149],[-55,-20],[-55,0],[-13,1],[-68,36],[-25,0],[-22,-19],[-42,-18],[-39,-13],[-40,-45],[-11,-4],[-27,23],[-37,-2],[-38,-11],[-17,-5],[-12,14],[-35,111],[-46,149],[-25,94],[-10,24],[-16,32],[-22,61],[-9,58],[4,55],[-13,73],[-29,93],[-20,89],[-9,85],[-2,72],[4,60],[-5,45],[-16,28],[-9,37],[-7,15],[-13,34],[-29,38],[-33,20],[-70,0],[-93,1],[-84,-3],[-93,-3],[-94,-3],[-26,-6],[-72,-2],[-58,10],[-21,6],[-38,5],[-59,1],[-32,-4],[-77,0],[-7,-1],[-12,-11],[-33,15],[-32,-5]],[[53630,48464],[-19,17],[-39,-11],[-19,-13],[-31,-48],[-46,-25],[-17,2],[-12,8],[-27,53],[-20,50],[-8,28]],[[53392,48525],[12,7],[36,11],[27,5],[6,14],[4,156],[1,159],[-10,21],[-9,12],[-1,11],[14,20],[20,23],[6,11],[22,42],[43,97],[33,24],[30,25],[5,10]],[[53631,49173],[4,19],[14,-2],[4,-9],[7,-20],[12,-29],[21,-34],[22,-37],[11,-5],[17,19],[21,28],[30,20],[7,19],[4,40],[2,44],[3,51],[6,7],[11,5],[20,-15],[9,-15],[16,0],[10,14],[19,25],[25,10],[25,24],[25,31],[12,3],[12,-40],[11,-29],[2,-17],[-11,-34],[-12,-45],[10,-55],[3,-54],[-1,-32],[9,-13],[6,-7],[9,8],[17,-2],[21,-17],[21,2],[20,20],[37,81],[54,141],[44,88],[36,36],[24,43],[12,48],[21,33],[43,26],[32,29],[33,97],[44,174],[12,156],[7,94],[-4,326],[-3,107],[7,58],[16,40],[44,85],[30,70],[23,81],[44,186],[19,60],[8,26],[27,50],[37,43],[47,38],[73,129],[59,130],[-8,157],[13,129],[32,166],[11,174],[-11,184],[4,151],[31,175],[13,65],[4,106],[-1,169],[39,232],[37,138],[41,155],[15,94],[21,125],[-3,100]],[[55169,53846],[-4,116],[10,158],[-3,94],[-15,81],[7,51],[30,21],[36,81],[66,212],[71,104],[49,32],[52,-3],[33,-19],[16,-33],[39,-50],[62,-66],[46,-83],[26,-83],[20,-46],[25,-15],[40,6],[45,-19],[48,-47],[29,-17],[10,12],[23,-7],[52,-38],[42,21],[61,-16],[143,-68],[7,11],[4,3],[12,27],[31,137],[26,85],[12,31],[31,45],[35,11],[35,-4],[28,-19],[26,-23],[29,0],[30,22],[44,40],[46,26],[40,29],[65,50],[26,23],[33,10],[91,-46],[59,30],[24,-9],[51,33],[10,22],[32,111],[35,33],[52,-17],[30,-17],[98,-48],[127,-49],[38,-8],[15,-5],[13,7],[42,63],[14,9],[12,-1],[80,-51]],[[58059,50276],[0,-22],[1,-24],[13,-30],[25,-60],[19,-56],[1,-49],[-4,-82],[-1,-48],[2,-64],[0,-121],[-1,-86],[3,-44],[30,-106],[13,-118],[7,-86]],[[53692,53088],[67,-1],[66,-2],[73,1],[70,1],[55,-3],[26,25],[25,-38],[12,-9],[5,3],[9,-27],[31,3],[5,-6],[3,-33],[29,1],[14,-8],[12,1],[17,19],[12,-6],[22,-25],[15,-21],[22,7],[51,-4],[39,-20],[39,-57],[26,-33],[23,-48],[9,9],[8,13],[5,6],[-1,41],[-13,71],[-5,59],[3,49],[10,35],[17,22],[2,33],[0,4]],[[54495,53150],[19,79],[19,78],[22,92],[19,75],[-2,37],[1,56],[4,62],[-1,37],[6,25],[13,93],[7,53],[12,25],[17,17],[25,1],[66,11],[62,24],[21,11],[38,39],[15,2],[13,-15],[75,-45],[20,-17],[8,2],[11,-3],[17,-1],[18,6],[10,-6],[14,-29],[9,3],[12,21],[23,22],[43,25],[7,-11],[15,-54],[16,-19]],[[53631,49173],[-7,9],[-21,39],[-25,61],[-10,9],[-13,-1],[-22,-22],[-22,-35],[-39,-33],[-32,-18],[-3,-22],[-8,-39],[-11,-23],[-28,-8],[-11,-34],[-25,-66],[-16,-30]],[[53338,48960],[-4,13],[-10,16],[-21,51],[-20,63],[-5,29],[-6,17],[-1,64],[-30,75],[-77,135],[-8,40],[-65,124]],[[62354,44883],[14,-79],[0,-60],[-6,-19],[-13,12],[-23,48],[-43,46],[20,4],[12,-4],[12,4],[8,26],[1,16],[11,12],[7,-6]],[[62163,44753],[19,-35],[-54,15],[-8,31],[-1,24],[20,-5],[24,-30]],[[62073,44987],[-5,-8],[-25,33],[-15,8],[-21,53],[8,184],[7,24],[5,10],[12,3],[14,-23],[-4,-119],[19,-79],[12,-63],[-7,-23]],[[31423,52547],[-53,-26],[-4,4],[-3,15],[1,109],[0,124],[-9,51],[-24,81],[-31,108],[-9,31],[-14,18],[-16,2],[-11,-7],[-16,-20],[-15,-22],[-28,-65],[-29,-76],[-17,-17],[-16,-7],[-15,2],[-12,21],[-13,41],[-14,55],[-18,18],[-7,-17],[-6,-32],[-4,-32],[12,-41],[10,-32],[-18,1],[-56,0],[-66,0],[-65,0],[-58,0],[-55,0],[-21,3],[-21,18],[-20,9],[-10,-1],[-20,-18],[-24,-3],[-17,-17],[-14,2],[0,-95],[0,-135],[-1,-144],[15,11],[13,-1],[10,-10],[27,8],[14,-4],[14,-4],[13,-1],[8,-11],[11,2],[12,13],[13,-8],[15,-20],[10,-31],[8,-37],[9,-20],[-1,-35],[0,-28],[-3,-24],[4,-15],[2,-16],[0,-9],[-5,-4],[-11,-3],[-12,-3],[-8,1],[-6,14],[-6,2],[-9,-2],[-9,9],[-8,18],[-14,18],[-15,-8],[-11,-9],[-11,-11],[-9,-12],[-10,3],[-13,-9],[-10,-14],[-14,-10],[-15,-6],[-18,-5],[-17,-2],[-19,-4],[-1,-76],[-2,-148],[-1,-99],[0,-90],[7,-33],[34,-70],[26,-37],[22,-41],[23,-17],[9,-16],[6,-25],[3,-27],[3,-23],[-3,-24],[-5,-23],[2,-24],[8,-19],[2,-24],[6,-23],[3,-23],[7,-16],[8,-12],[11,-19],[2,-17],[-2,-21],[0,-15],[11,-35],[3,-25],[-5,-29],[-5,-101],[-12,-116],[-8,-88],[-12,-143],[-15,-167],[-18,-204],[-17,-201],[-18,-195],[-15,-176],[-17,-194],[-10,-117],[-5,-20]],[[28094,52681],[-8,40],[-38,57],[19,74],[46,56],[60,-44],[7,87],[-22,76],[4,144],[7,29],[16,39],[20,26],[12,8],[21,-13],[13,29],[49,-13],[15,12],[10,20],[12,14],[15,35],[9,40],[7,16],[17,-6],[1,18],[9,23],[30,53],[-1,23],[-8,51],[2,19],[17,6],[21,15],[10,48],[14,42],[15,63],[17,4],[9,72],[22,64],[46,189],[-13,-4],[-11,-26],[-13,3],[-14,15],[4,85],[-8,10],[-23,-65],[-19,67],[-2,40],[8,40],[-1,27],[-31,-20],[2,25],[19,26],[9,27],[17,29],[7,44],[4,69],[7,74],[-5,36],[-9,31],[-8,137],[2,80],[-4,62],[-8,54],[-37,69],[59,80],[21,60],[-27,124],[-35,105],[-1,62],[10,-8],[11,2],[11,132],[-3,41],[-19,67],[-24,1],[-21,83],[-13,19],[-9,52],[-34,102],[-27,53]],[[28507,56830],[8,-12],[23,-83],[37,-53],[38,-87],[16,-59],[12,-11],[11,-22],[-5,-16],[-12,-17],[-3,-35],[8,-19],[8,-12],[22,8],[12,40],[-8,178],[-13,89],[-15,27],[-13,35],[9,27],[24,12],[31,31],[115,170],[39,159],[30,58],[34,37],[41,-9],[33,20],[10,51],[-9,69],[-13,41],[12,61],[13,91],[-1,76],[16,46],[-6,18],[-23,-37],[-18,-16],[10,30],[33,76],[16,115],[13,48],[46,67],[10,32],[34,50],[56,108],[22,30],[108,-69],[34,4],[-6,-13],[-16,-4],[-23,-19],[-6,-41],[15,-44],[17,-12],[14,28],[14,80],[22,88],[6,92],[15,32],[24,11],[41,-18],[32,-19],[33,-3],[101,14],[164,240],[77,52],[47,50],[31,99],[8,74],[22,28],[24,0],[11,18],[3,23],[57,64],[33,8],[28,-1],[65,-56],[29,-98],[5,-68],[-40,-74],[-10,-32]],[[28301,53307],[-7,-13],[-14,23],[-5,29],[8,21],[12,-7],[5,-18],[1,-35]],[[82828,65953],[-10,-34],[-16,5],[0,25],[-4,7],[5,23],[3,7],[18,-20],[4,-13]],[[83850,69983],[-23,-16],[-72,49],[-51,55],[-31,65],[-4,28],[35,-5],[35,-24],[8,-36],[14,-11],[9,-21],[65,-49],[10,-15],[5,-20]],[[83970,69103],[-4,-12],[-34,33],[-37,7],[-13,29],[-2,46],[39,-2],[48,-41],[11,-21],[-8,-39]],[[83936,68939],[-1,-11],[-24,37],[-11,7],[5,21],[16,5],[13,-47],[2,-12]],[[84000,69062],[-2,-27],[-8,4],[-10,47],[6,12],[14,-3],[0,-33]],[[83283,66507],[-21,-27],[-13,13],[0,36],[7,32],[-8,23],[7,28],[16,8],[5,-17],[9,-10],[3,-9],[0,-18],[-9,-30],[7,-16],[-3,-13]],[[80662,63993],[10,-20],[28,14],[5,-25],[-1,-12],[-9,-29],[-23,22],[-23,-5],[-16,2],[-5,14],[13,28],[21,11]],[[83680,68021],[-24,-13],[-9,0],[0,42],[20,39],[8,-13],[5,-21],[0,-34]],[[81542,64979],[3,-27],[-22,41],[-6,2],[-11,15],[-6,25],[17,1],[16,-30],[9,-27]],[[81330,64286],[-6,-11],[-8,20],[-2,30],[-6,16],[14,21],[6,22],[15,-4],[7,-7],[-14,-23],[-3,-10],[-3,-54]],[[81289,64308],[-27,-12],[-6,2],[10,30],[24,21],[-1,-41]],[[78093,64266],[3,8],[-6,72],[1,17],[-3,6],[-11,6],[-17,-11],[-51,-47],[-44,-87],[-20,-19],[-20,-8],[-24,15],[-27,10],[-37,-22],[-19,10],[-9,18],[-7,27],[4,34],[-2,25],[-16,13],[-17,11],[-10,32],[-5,36],[4,47],[3,50],[-9,23],[-26,12],[-64,23],[-57,12],[-24,-6],[-19,6],[-11,9],[-6,16],[0,22],[9,52],[11,51],[26,73],[2,51],[-2,59],[13,79],[23,59],[11,18],[-3,26],[-9,24],[-13,13],[-21,16],[-34,4],[-45,16],[-54,35],[6,67],[0,42],[-7,34],[-11,24],[-6,22],[10,60],[-13,65],[-14,27],[-15,33],[-2,37],[7,34],[37,73],[0,17],[-9,-1],[-10,-2],[-50,-26],[-6,16],[-18,10],[-37,2],[-43,-5],[-54,-26],[-50,-45],[-22,-32],[-20,-19],[-15,-7],[-19,14],[2,45],[34,82],[4,56],[-10,49],[-1,38],[-12,25],[-17,12],[-9,28],[0,80],[15,83],[24,26],[15,13],[4,16],[-8,57],[1,37],[15,72],[14,54],[28,-9],[12,13],[13,19],[15,33],[10,38],[12,90],[8,13],[35,-15],[10,11],[19,52],[18,64],[26,20],[18,2],[9,21],[-1,31],[-17,50],[-8,39],[2,24],[26,15],[6,29],[-4,63],[11,75],[6,89],[2,66],[0,50],[-3,53],[-4,96],[-11,84],[2,32],[-2,102],[-7,86],[-14,16],[-26,28],[-15,5],[-12,-10],[-5,-30],[-11,-28],[-15,6],[-6,29],[-10,37],[-30,175],[-4,50],[-5,51],[-10,25],[-11,14],[-25,59],[-13,25],[-6,4],[-14,-4],[-13,0],[-11,29],[-9,36],[-10,18],[-17,9],[-17,-3],[-10,-31],[-7,-18],[-12,-41],[-21,-58],[-10,-21]],[[75453,67833],[-1,24],[3,70],[-10,17],[-31,17],[-35,23],[-17,25],[-9,8],[-13,-4],[-21,-26],[-20,-30],[-16,-3],[-16,15],[-16,18],[-53,26],[-24,4],[-42,-5],[-35,6],[-5,8],[0,14],[5,29],[3,27],[-4,16],[-35,20],[-33,14],[-34,5],[-23,-10],[-23,-22],[-18,-39],[-27,-17],[-32,-29],[-16,-28],[-24,-58],[-34,-72],[-31,-71],[-16,-68],[-21,-43],[-22,-31],[-16,-85]],[[71610,72290],[-21,-9],[-42,-5],[-14,1],[-21,1],[-42,19],[-57,25],[-58,35],[-32,28]],[[70705,73169],[-4,5],[-8,15],[-34,46],[-1,12],[52,45],[31,18],[16,13],[3,-2],[8,-22],[20,-13],[14,3]],[[84544,74886],[-3,5],[-23,-51],[-45,-48],[-96,-10],[-30,34],[-11,-24],[-9,-31],[-25,-11],[-39,-2],[-22,-21],[-12,-23],[-54,-8],[-20,-31],[-34,-11],[-140,-135],[-30,-57],[-29,-66],[-21,-34],[-18,-23],[-16,-10],[-17,-23],[-16,-3],[-17,11],[-19,-4],[-12,-28],[10,-36],[-5,-16],[-37,-19],[-55,-13],[-23,-24],[-8,-14],[-12,-7],[-12,47],[-4,62],[23,15],[20,8],[116,86],[-14,64],[10,28],[26,45],[17,23],[-10,8],[-75,-15],[-44,1],[-22,5],[7,39],[-4,38],[-5,15],[38,44],[18,11],[13,-1],[-1,27],[-11,40],[12,52],[79,61],[19,55],[31,51],[58,128],[4,22],[16,60],[3,24],[-26,35],[-11,49],[-78,89],[-7,76],[-7,-3],[-12,-53],[-10,-18],[-36,-1],[-18,20],[-100,13],[-25,-34],[-23,-53],[-22,-38],[-23,-20],[-19,-35],[-81,-206],[-31,-16],[-144,-124],[-72,-49],[-56,-87],[-19,-52],[-17,-58],[-10,-88],[-51,-107],[-18,-23],[-18,-9],[-23,3],[-21,-7],[-35,10],[-43,-34],[-48,-29],[-42,73],[-30,19],[-48,-21],[-23,-33],[-47,-162],[-17,-93],[1,-38],[27,-116],[31,-64],[69,-74],[147,-51],[34,18],[37,0],[39,-48],[24,-80],[3,-55],[0,-19],[9,-16],[5,-27],[-15,-23],[-12,-12],[-10,-84],[0,-94],[12,-31],[32,-44],[49,-36],[45,-8],[86,17],[35,57],[-2,24],[1,32],[76,83],[43,74],[-7,19],[-8,13],[8,8],[23,5],[106,76],[83,-62],[47,-72],[47,-13],[33,-36],[37,-32],[49,-2],[41,-7],[13,30],[13,19],[14,-4],[17,-38],[47,-30],[43,2],[30,11],[18,-14],[-26,-49],[4,-79],[-20,-25],[-19,-40],[11,-26],[10,-12],[-1,-32],[-17,-18],[-32,-48],[-19,1],[-9,9],[-6,18],[-4,27],[-12,18],[-31,7],[-33,-6],[-73,-71],[-71,-57],[-75,-45],[-25,-28],[-18,-8],[-30,22],[-19,-2],[-4,-14],[24,-40],[6,-31],[-3,-23],[-13,-11],[-20,18],[-18,-25],[-8,-42],[0,-99],[-12,-22],[-33,-12],[-35,-32],[-13,15],[-5,17],[4,46],[-4,22],[-16,-1],[-25,-13],[-18,-31],[-6,-18],[24,-58],[23,-6],[6,-13],[-19,-29],[-45,-42],[-8,-36],[-13,-34],[-19,-27],[-13,-28],[-15,-15],[-25,-17],[-31,-68],[-23,-65],[-27,-32],[-21,-109],[-38,-58],[-14,-94],[10,-58],[41,1],[21,-21],[44,-76],[52,-49],[53,-28],[66,-71],[19,-29],[15,-61],[29,-174],[20,-86],[2,-46],[31,-85],[33,-146],[37,-127],[8,-99],[-13,-46],[1,-59],[37,-55],[85,-63],[13,-18],[17,-31],[0,-95],[13,-31],[12,-18],[51,-41],[21,-33],[23,-54],[6,-48],[3,-65],[-29,-2],[-23,7],[-91,84],[-24,3],[-33,-12],[-48,16],[-51,93],[-36,28],[-39,15],[-93,-81],[-24,6],[-7,-9],[-11,-14],[44,-17],[43,26],[42,39],[60,-21],[10,-35],[10,-59],[42,-40],[33,-18],[41,-52],[41,-83],[86,-95],[35,-90],[13,-59],[12,-83],[-30,-27],[-26,-4],[-41,-13],[-30,-29],[-31,-52],[-86,-82],[-17,-51],[-11,-44],[-21,-22],[-54,21],[-50,-2],[-56,-60],[-14,-24],[9,4],[9,8],[25,-9],[40,32],[38,-98],[76,16],[71,82],[27,1],[23,-13],[25,-32],[69,-142],[37,-16],[37,-33],[20,-4],[18,-10],[-49,-52],[-64,-113],[-28,-27],[-19,-30],[51,15],[37,54],[18,13],[15,-12],[7,-67],[-14,-205],[-18,-3],[-17,56],[-20,17],[-18,-11],[-33,0],[-13,-25],[-11,-36],[20,-7],[40,-62],[4,-33],[-11,-22],[-28,9],[34,-46],[-9,-48],[-11,-19],[-20,-12],[-12,-42],[18,-69],[18,-89],[2,-43],[-28,18],[-43,-54],[-23,-4],[-16,71],[-19,-11],[-13,-21],[-18,-77],[-21,-69],[-19,-19],[-22,5],[-18,-2],[5,-18],[19,-23],[0,-27],[-41,-84],[-7,-33],[1,-28],[-21,-34],[11,-57],[-6,-40],[-19,-54],[-19,-36],[-24,-58],[-29,-33],[-39,-122],[-11,-61],[-3,-63],[-13,-21],[-20,-28],[-24,14],[-1,42],[-10,4],[-6,27],[-2,35],[3,28],[-10,-8],[-6,-33],[-16,-27],[-16,11],[-18,22],[1,-32],[9,-31],[4,-32],[24,-6],[17,-37],[13,-55],[2,-21],[10,-25],[1,-21],[-23,-20],[-29,-36],[-35,-63],[-29,-42],[-26,0],[-15,5],[-23,24],[-26,10],[35,-85],[19,-15],[24,3],[23,32],[33,-3],[8,-49],[-9,-55],[-18,-72],[-3,-62],[22,-88],[1,-27],[-9,-13],[-26,23],[-21,29],[-22,-7],[-22,12],[-23,-10],[-10,-21],[7,-34],[20,-28],[12,-43],[-14,-15],[-58,10],[-14,-8],[-17,-47],[11,-71],[-13,-43],[-24,-11],[-32,-35],[-19,-8],[1,-15],[14,-16],[8,-21],[-18,-72],[-26,-23],[-42,12],[-32,-17],[-28,31],[-30,1],[-20,-39],[-2,-45],[-20,-4],[-11,3],[-15,-3],[2,-24],[8,-21],[41,-10],[7,-30],[2,-47],[-43,-80],[-18,-54],[-27,1],[-20,-43],[-11,-60],[-14,12],[-31,-9],[-10,-28],[8,-12],[1,-20],[-13,-67],[-14,-18],[-6,27],[-4,42],[-11,3],[-18,-39],[-22,-28],[-18,-11],[-14,26],[-34,13],[-13,-112],[-29,-40],[-13,-13],[-23,-4],[15,-15],[5,-29],[-9,-28],[-23,-6],[-13,-22],[-5,-100],[-14,-35],[-35,-2],[-26,23],[-8,-19],[-4,-17],[-14,-18],[-26,-5],[-59,-45],[-26,13],[-32,17],[-23,-17],[-7,-34],[-10,-26],[-32,0],[-26,32],[-26,24],[-29,-20],[-22,-42],[-27,-14],[-5,-26],[-12,-13],[-29,5],[-11,65],[-16,9],[-16,-32],[-6,-26],[-8,-19],[3,-53],[-16,-1],[-21,32],[-23,6],[-20,-30]],[[81740,64827],[-11,8],[-11,6],[-18,0],[-7,-8],[-13,-5],[-9,-16],[-1,-2]],[[81670,64810],[-23,11],[-29,44],[-20,73],[-26,39],[-12,35],[-4,62],[-5,29],[2,33],[7,29],[-28,-15],[-20,-27],[4,-34],[-5,-32],[-31,-16],[2,-14],[2,-14],[24,-43],[5,-36],[10,-20],[19,-56],[-1,-110],[11,-31],[-4,-30],[-7,-42],[-1,0],[-6,12]],[[81534,64657],[-9,-2],[-3,-14],[-1,-13]],[[81521,64628],[-1,-1],[-16,-9],[-14,-8],[-11,-11],[-17,-32],[-33,-8],[-16,76],[-23,-51],[-6,-104],[-9,-18],[-14,-15],[-26,37],[-23,-25],[-18,-25],[-8,-22],[-13,-25],[-25,24],[-21,36],[5,27],[-2,17],[-10,14],[-10,-2],[5,-35],[4,-67],[-10,-19],[-14,-15],[-31,12],[-21,25],[-26,21],[-22,4],[-5,-42],[-15,-35],[-13,-4],[-14,6],[-18,-37],[-8,-27],[-22,-29],[-58,-13],[-21,-29],[-27,5],[-21,-7],[-13,2],[-10,15],[-13,0],[-5,-47],[-33,-20],[-30,-5],[-33,-62],[-24,-37],[-17,-4],[-13,13],[-7,56],[-6,6],[-4,-52],[-6,-43],[-12,-24],[-38,-54],[-11,-54],[7,-49],[51,-12],[7,-27],[-5,-22],[-13,-19],[-3,-28],[55,-88],[2,-34],[-9,-19],[-10,-41],[-29,-35],[-62,-18],[-51,18],[-16,40],[1,28],[13,-8],[14,3],[-4,26],[-6,15],[-24,23],[-19,62],[4,51],[-11,40],[-11,34],[-12,20],[-6,25],[12,78],[-7,45],[22,56],[6,63],[39,22],[3,60],[-29,2],[-19,44],[-5,-18],[-15,-2],[-26,84],[-8,11],[-12,2],[6,-90],[-30,-33],[-25,-15],[-35,-6],[-20,-10],[-18,8],[4,27],[10,33],[-9,27],[-20,20],[-30,-1],[-21,6],[-20,-2],[-8,12],[-19,42],[-17,26],[-7,26],[7,31],[-6,18],[-32,2],[1,-43],[3,-52],[9,-39],[-6,-22],[-16,-15],[-17,42],[-8,10],[-9,-2],[-6,-41],[-15,-37],[-28,4],[-22,-23],[-26,-10]],[[80802,63359],[13,-26],[9,-37],[8,-68],[4,-63],[-28,-40],[-25,-16],[-50,-154],[-11,-48],[-8,-21],[-3,-21],[1,-21],[-13,-74],[-12,-91],[-7,-37],[-14,-28],[-19,-15],[-11,-2],[-11,-8],[-27,-49],[-30,-38],[5,-17],[0,-16],[-13,-18],[-14,3],[-42,-14],[-16,-28],[-16,-51],[-6,-7],[-25,-12],[-20,-5],[-33,36],[-16,11],[-44,15],[-43,24],[-30,28],[-61,69],[-7,123],[-11,67],[0,24],[4,206],[4,22],[8,20],[27,46],[31,37],[44,76],[33,35],[27,50],[-16,-2],[-12,6],[12,43],[12,23],[14,12],[29,-9],[27,9],[19,38],[19,8],[71,-12],[49,17],[24,35],[12,2],[36,-10],[14,-37],[-1,25],[1,23],[7,-2],[47,-45],[0,55],[3,15],[15,23],[7,-1],[19,-44],[17,-26],[23,-13]],[[81534,64657],[6,-13],[0,-1],[-13,-11],[-4,-3],[-2,-1]],[[81740,64827],[1,-2],[6,-22],[-2,-24],[11,-12],[3,-23],[-12,-13],[-1,-28],[-6,-17],[-36,30],[-29,16],[-27,-6],[-9,18],[-2,18],[31,32],[2,16]],[[81730,64637],[-7,-9],[-19,42],[-1,14],[15,2],[16,-19],[0,-17],[-4,-13]],[[81665,64637],[-33,0],[-7,5],[-4,13],[12,22],[45,30],[-11,-32],[-2,-38]],[[19644,36209],[-43,-18],[2,32],[11,27],[31,-16],[15,-3],[-16,-22]],[[28110,32461],[-50,-12],[-2,3],[3,10],[11,18],[14,21],[3,1],[5,-2],[6,-4],[15,-14],[4,-10],[-1,-8],[-8,-3]],[[30691,41759],[5,-66],[38,-87],[12,-99],[9,-13],[52,-49],[1,-12],[-8,-18],[-7,-24],[5,-34],[9,-46],[4,-42],[5,-44],[6,-68],[4,-61],[13,-90],[3,-56],[0,-34],[10,-33],[20,-39],[28,-39],[22,-47],[16,-31],[21,-26],[15,-23],[6,-16],[2,-13],[-6,-13],[-25,-61],[-34,-92],[0,-12],[33,-66],[5,-27],[0,-37],[-11,-45],[-35,-14],[-8,-12],[-1,-15],[8,-19],[-1,-44],[13,-49],[-7,-16],[-13,-23],[0,-22],[4,-24],[14,-20],[54,-69],[4,-9],[-1,-7],[-21,-46],[-2,-28],[1,-47],[3,-30],[7,-12],[27,-14],[34,-105],[32,-98],[0,-85],[3,-98],[21,-78],[3,-62],[6,-70],[25,-43],[10,-85],[2,-45],[-1,-29],[19,-92],[2,-79],[-5,-57],[1,-32],[2,-22],[17,-20],[7,-13],[24,-5],[35,-2],[61,21],[46,20]],[[31334,38697],[52,-104],[-22,-140],[-36,-224],[-28,-174],[-5,-23],[-5,-34],[-60,-49],[-88,-71],[-44,-38],[-57,-48],[-13,-39],[-17,-22],[-18,-27],[-6,-30],[-17,-19],[-15,-68],[0,-52],[9,-35],[17,-15],[6,-43],[5,-30],[12,-23],[-3,-19],[-10,-14],[-18,-8],[-12,-43],[-15,-105],[-2,-38],[16,-96],[9,-51],[23,-187],[4,-51],[-32,-71],[-13,-43],[-5,-38],[0,-30],[3,-28],[27,-87],[31,-79],[15,-41],[0,-55],[-7,-31],[-17,-12],[-36,-21],[-16,-32],[-16,-5],[-16,25],[-17,-6],[-21,-22],[-8,-53],[-19,-92],[-16,-25],[-12,-70],[-21,-100],[-10,-60],[-5,-44],[-22,-28],[-25,-56],[-19,-55],[-7,-15],[-15,-5],[-10,-49],[-36,-74],[-9,-85],[-13,-46],[-2,-82],[-20,-151],[-4,-33],[-20,-26],[-27,-58],[-8,-43],[12,-128],[15,-128],[1,-61],[-6,-82],[-4,-36],[10,-14],[17,-10],[6,-31],[-13,-22],[-5,-40],[-14,-44],[-40,-17],[-14,16],[-5,-15],[2,-31],[-9,-37],[-21,-100],[-13,-90],[-8,-39],[3,-33],[7,-19],[0,-18],[-11,-21],[-11,-35],[-11,-5],[-12,10],[-13,-21],[-3,-43],[-7,-54],[-3,-64],[-5,-81],[16,-56],[21,-101],[16,-25],[17,2],[14,-20],[8,-24],[-11,-42],[-18,-7],[-2,-24],[6,-53],[6,-52],[18,-25],[7,-70],[17,-23],[-2,-89],[17,-105],[18,-30],[8,-14],[-5,-46],[-15,-36],[-3,-58],[6,-43],[18,-40],[14,-4],[20,16],[21,-19],[3,-35],[3,-31],[-11,-41],[-12,-76],[-3,-75],[3,-114],[6,-89],[1,-56],[1,-25],[-7,-17],[-19,-9],[-16,-4],[-13,-14],[-3,-28],[-11,-47],[-11,-35],[-19,-51],[-12,-53],[-10,-35],[1,-24],[-7,-46],[-8,-39],[-15,-129],[-20,-27],[-17,-13],[-8,-18],[6,-35],[18,-10],[6,-29],[-3,-44],[12,-41],[-1,-50],[11,-93],[-10,-62],[3,-53],[0,-52],[-15,-41],[-29,-8],[-16,-38],[-28,-41],[-3,-33],[-5,-30],[-11,-11],[-18,0],[-14,-5],[-20,-38],[-22,-21],[-5,-32],[2,-38],[-11,-23],[-15,-44],[-9,-48],[9,-44],[10,-78],[2,-34],[-13,-65],[-10,-42],[10,-53],[8,-30],[-8,-66],[-6,-41],[5,-76],[20,-85],[19,-75],[2,-88],[5,-70],[9,-76],[19,-29],[15,-26],[-3,-36],[-11,-44],[-15,-33],[-38,-11],[-30,-30],[-25,-21],[-19,-25],[-13,-26],[-7,-29],[5,-127],[-3,-47],[-13,-67],[-12,-53],[-5,-16],[-1,-24],[-2,-22],[-14,-5],[-18,10],[-11,-6],[-8,-18],[7,-41],[7,-73],[9,-31],[-2,-24],[-4,-53],[-12,-42],[-17,0],[-10,-18],[-5,-30],[5,-39],[22,-31],[7,-21],[-3,-27],[-17,-11],[-10,-22],[-9,-49],[-13,-55],[-13,-41],[-3,-56],[19,-60],[-2,-59],[-2,-171],[-1,-58],[5,-97],[-7,-26],[-4,-25],[19,-71],[21,-113],[5,-45],[-3,-31],[-28,-27],[-23,-11],[-13,19],[-10,-8],[-10,-33],[-12,-27],[-5,-27],[13,-34],[7,-66],[-15,-29],[-10,-31],[4,-41],[4,-74],[-9,-123],[12,-44],[14,-21],[43,-25],[32,-12],[9,-41],[-4,-33],[-15,-16],[-24,-14],[0,-53],[20,-51],[23,-36],[5,-32],[-1,-34],[-16,-28],[22,-60],[10,-41],[-10,-32],[-15,-47],[-12,-23],[0,-26],[-5,-52],[-1,-51],[4,-31],[137,-24],[31,-9],[18,-31],[-3,-38],[-17,-40],[-11,-76],[-27,-13],[-27,20],[-29,-7],[-26,-5],[-36,-2],[-48,-10],[-30,11],[-2,-28],[8,-48],[64,-15],[60,-28],[18,-51],[24,-58],[25,-36],[1,-58],[-39,-61],[-5,-43],[-51,-13],[-15,-25],[-7,-84],[6,-66],[20,-23],[13,-43],[-15,-51],[-34,-35],[-19,-33],[12,-27],[15,-42],[5,-23],[8,-62],[10,-87],[-1,-42],[-9,-32],[-34,-49],[-24,-23],[-4,-61],[-2,-45],[2,-41],[15,-33],[-1,-33],[-20,-7],[-18,-16],[-17,-58],[-50,-60],[-17,-27],[1,-46],[-20,-65],[-16,-57],[-13,-53],[2,-56],[28,-24],[23,-54],[9,-69],[-17,-79],[-40,-30],[-23,-33],[-7,-25],[6,-83],[-2,-38],[-6,-37],[-10,-28],[-22,-31],[-38,-28],[-32,-19],[-14,-21],[-17,-48],[-15,-52],[3,-65],[-90,-8],[-6,-48],[-20,-38],[-6,-69],[20,-66],[9,-56],[-16,-67],[6,-69],[2,-54],[32,-61],[20,-76],[11,-63],[6,-50],[8,-30],[13,-34],[6,-39],[20,-13],[35,37],[25,25],[17,9],[51,-6],[31,23],[14,-3],[19,-13],[14,-27],[11,-62],[7,-69],[-9,-71],[-14,-16],[-5,-20],[5,-43],[16,-31],[-1,-43],[-17,-99],[-12,-41],[21,-46],[18,-40],[37,-31],[30,-43],[21,-35],[-5,-49],[14,-14],[56,-1],[84,-2],[131,-2],[128,-3],[145,-3],[69,-39],[62,-35],[79,0],[78,-41],[58,-27],[35,-11],[36,-10],[5,-38]],[[30988,21683],[-157,54],[-35,30],[-30,3],[-57,-36],[-32,-88],[-16,-25],[-40,-23],[-40,-5],[-134,-85],[-48,-7],[-33,-23],[-32,-32],[-12,-70],[5,-42],[-36,-152],[-9,-84],[0,-44],[10,-70],[-13,-120],[-25,-26],[-59,-34],[-41,24],[-69,22],[-50,46],[-63,33],[-21,20],[-56,92],[-6,31],[-4,39],[30,56],[16,4],[46,-2],[39,9],[25,-30],[6,-65],[-10,-34],[-10,-22],[3,-16],[28,23],[14,145],[94,72],[31,42],[30,66],[5,18],[2,25],[-20,20],[-44,27],[-142,-137],[-64,-36],[-42,-39],[-50,-71],[-9,-21],[-11,-46],[-5,-52],[-49,24],[-76,74],[-15,28],[15,38],[23,31],[2,107],[6,38],[16,30],[29,33],[14,7],[12,-14],[2,-25],[48,2],[93,94],[38,3],[51,-22],[57,13],[11,10],[11,22],[-42,26],[-41,13],[-115,10],[-25,-10],[-34,-51],[-11,13],[-7,25],[-39,18],[-19,-4],[-18,-24],[3,-37],[-10,-41],[-36,-39],[-25,-64],[1,-49],[-1,-26],[-9,-14],[-19,-16],[-60,11],[-34,52],[-13,35],[-38,39],[83,47],[29,27],[27,61],[20,39],[-14,27],[-17,0],[1,-43],[-18,-36],[-38,17],[-57,-52],[-35,14],[-56,-16],[-28,28],[-6,36],[10,38],[-10,63],[-16,15],[-16,-4],[-7,38],[-17,66],[-8,18],[-8,31],[9,7],[19,-8],[17,-20],[26,-3],[57,-43],[24,10],[13,10],[5,36],[0,34],[10,0],[32,-43],[21,4],[36,-12],[19,5],[34,16],[54,48],[27,49],[14,7],[16,-6],[12,-15],[0,-34],[12,-32],[17,-26],[5,-31],[-3,-32],[-31,-43],[-6,-16],[11,-16],[12,8],[18,21],[10,30],[2,16],[1,22],[-1,27],[-25,76],[-3,18],[0,35],[28,32],[8,25],[2,48],[-15,33],[-61,77],[-101,76],[-12,-8],[-8,-14],[10,-10],[13,-5],[90,-63],[24,-37],[15,-10],[19,-24],[-5,-36],[-91,-34],[-72,-76],[-55,-46],[-37,17],[-18,47],[-19,60],[-28,35],[-16,-4],[-13,7],[-11,18],[-21,-15],[-49,42],[-13,18],[35,58],[39,-22],[9,165],[-12,37],[-51,41],[-24,-5],[-34,5],[-23,19],[-26,8],[-22,11],[-29,25],[-34,14],[-47,104],[-20,55],[-11,60],[72,2],[42,10],[10,25],[-15,47],[-20,38],[15,36],[21,27],[22,-12],[56,-61],[9,-41],[39,-126],[10,-12],[4,-11],[82,-71],[11,1],[-5,59],[23,81],[23,26],[11,0],[1,13],[-22,34],[11,44],[-7,1],[-19,-28],[-40,-140],[-24,-26],[-33,64],[-18,45],[-10,17],[4,71],[65,-14],[-22,23],[-77,42],[-19,20],[-14,7],[-25,49],[-32,41],[55,74],[27,52],[88,-27],[17,16],[-15,38],[-17,-12],[-27,24],[-43,72],[2,36],[7,67],[17,14],[36,14],[41,-22],[17,-17],[16,8],[-16,49],[-27,19],[-29,35],[3,39],[9,33],[8,35],[5,50],[-3,39],[8,17],[13,8],[1,15],[-26,-3],[-9,-49],[-3,-45],[-19,-35],[-7,-41],[-5,-48],[-10,-55],[-23,21],[-13,21],[-5,15],[3,28],[-6,175],[-1,147],[11,114],[32,45],[14,13],[13,-6],[20,1],[14,16],[-45,28],[-28,-16],[-20,-22],[-37,17],[-7,58],[-21,51],[-4,65],[2,93],[51,-8],[42,-18],[110,2],[90,-90],[40,12],[-2,18],[-30,22],[-19,51],[-11,14],[-6,31],[-1,35],[-23,129],[-9,-3],[-9,-44],[-18,-74],[-26,-36],[-40,-15],[-40,-8],[-34,14],[-8,31],[1,35],[-15,17],[-39,16],[-11,8],[-13,32],[19,49],[15,29],[18,-6],[18,-13],[23,-38],[22,-7],[25,30],[5,21],[-16,13],[-14,5],[-23,16],[-44,58],[22,59],[52,68],[16,16],[-14,57],[16,63],[-16,51],[-29,56],[-39,12],[-8,-16],[-2,-23],[6,-17],[-3,-12],[-9,0],[-50,12],[-33,37],[-54,34],[-7,26],[-6,39],[19,67],[-10,1],[-35,-52],[-53,-27],[-40,-9],[-17,-20],[-7,-18],[11,-10],[22,-2],[17,-65],[-4,-25],[-8,-16],[-19,-4],[-38,45],[-20,51],[0,40],[14,54],[61,74],[17,31],[36,34],[48,78],[41,43],[-20,36],[-21,53],[2,75],[84,30],[37,-13],[47,3],[26,18],[18,3],[40,21],[17,29],[4,22],[0,20],[-4,23],[-7,62],[7,21],[17,24],[22,8],[10,-2],[27,-22],[-6,-32],[-10,-39],[-22,-153],[-11,-35],[-17,-30],[12,-62],[-18,-44],[-76,-47],[-10,-2],[6,-17],[44,4],[34,10],[34,39],[11,60],[14,117],[18,17],[22,3],[11,-27],[-4,-62],[0,-60],[-28,-176],[-35,-71],[-4,-19],[2,-22],[27,3],[21,38],[15,49],[15,68],[-2,49],[5,30],[6,100],[11,50],[-1,71],[-19,26],[-26,16],[-7,43],[14,86],[50,-3],[48,59],[31,21],[18,-5],[62,-56],[12,-1],[-2,21],[-9,14],[-25,19],[-45,60],[-61,10],[11,78],[12,72],[30,9],[49,24],[94,107],[17,81],[4,91],[-45,23],[-48,60],[-39,31],[-35,40],[7,59],[5,97],[43,21],[20,132],[-29,102],[7,76],[38,64],[6,45],[11,49],[33,5],[1,27],[-3,49],[-22,58],[-1,80],[21,94],[33,-6],[6,4],[-23,57],[-19,63],[3,25],[18,21],[21,12],[23,-32],[33,-103],[5,27],[-13,104],[-11,130],[-35,-17],[-31,9],[-12,20],[-12,30],[11,35],[11,27],[23,33],[49,12],[35,42],[11,87],[-11,-9],[-19,-76],[-32,-26],[-16,4],[-19,14],[-38,67],[-21,15],[-20,2],[-17,-17],[-44,-117],[-19,-20],[-78,-9],[-28,14],[-31,17],[3,29],[10,31],[17,16],[1,17],[-24,5],[-28,32],[-13,41],[-5,73],[-25,116],[-5,83],[17,59],[38,232],[12,119],[20,104],[0,68],[52,63],[20,38],[45,211],[6,114],[-71,346],[-11,66],[-3,82],[17,136],[2,52],[-15,75],[-40,122],[-1,62],[17,64],[-16,80],[8,49],[9,39],[63,-21],[29,10],[15,23],[12,65],[6,103],[4,44],[5,64],[31,26],[11,61],[26,84],[26,238],[27,58],[27,68],[-11,100],[18,46],[15,34],[14,61],[19,58],[46,83],[11,101],[35,176],[7,112],[11,76],[-3,71],[21,86],[20,73],[7,40],[46,97],[8,76],[-17,52],[0,81],[-13,112],[30,41],[12,31],[39,179],[-3,70],[11,87],[-25,103],[-4,231],[-14,179],[-23,188],[2,105],[-15,131],[0,76],[11,171],[74,108],[15,121],[9,163],[-3,119],[-8,54],[-36,87],[-10,157],[7,41],[31,44],[21,61],[11,95],[23,75],[9,181],[18,144],[10,50],[30,63],[5,17],[5,48],[-2,113],[5,70],[23,136],[3,63],[26,141],[6,101],[12,53],[-5,60],[8,134],[-18,76],[-4,44],[22,137],[16,34],[24,64],[11,72],[2,45],[-32,227],[-4,78],[7,180],[11,116],[-3,93],[3,48],[6,60],[21,72],[5,52],[-7,21],[-26,27],[-21,66],[-2,65],[7,47],[2,67],[31,13],[17,37],[16,70],[20,169],[9,209],[12,125],[8,63],[7,130],[12,85],[2,78],[-2,60],[-30,304],[0,112],[13,174],[0,244],[-2,57],[-12,54],[-3,72],[-18,127],[-17,253],[0,134],[-7,114],[-16,30]],[[30936,21513],[-1,-171],[0,-169],[-1,-157],[0,-158],[0,-152],[-1,-156],[-2,-175],[-2,-130]],[[30929,20245],[-41,0],[-12,-13],[-66,-19],[-112,29],[-28,27],[-38,58],[-13,-16],[-36,-25],[-36,-19],[-30,-2],[-28,24],[-6,12],[-6,3],[-60,-34],[-66,34],[-53,21],[-84,12],[-59,43],[-109,-4],[-19,14],[-7,42],[6,20],[23,11],[6,24],[24,-6],[30,-31],[9,1],[20,29],[30,26],[11,3],[54,-32],[22,4],[32,14],[5,12],[5,22],[9,13],[28,6],[27,-12],[3,-38],[-4,-41],[36,-11],[43,1],[30,-15],[4,25],[-48,65],[-20,40],[-26,24],[-35,12],[-28,75],[1,66],[-3,64],[62,36],[-14,55],[21,41],[25,16],[24,-153],[18,-54],[-23,-11],[-47,1],[27,-76],[43,-25],[37,-56],[1,-41],[20,-18],[50,-1],[34,8],[16,27],[19,9],[33,-34],[57,-25],[15,-17],[11,-30],[0,-31],[3,-16],[17,8],[23,42],[12,15],[14,7],[8,10],[1,12],[-42,31],[-220,141],[-28,56],[-18,71],[1,73],[16,23],[39,29],[72,41],[84,58],[10,11],[-1,37],[-10,25],[-33,18],[-35,4],[-33,-1],[-33,-8],[-60,-39],[-34,2],[-32,21],[-24,42],[-13,57],[0,36],[5,33],[15,35],[19,14],[18,-2],[17,8],[10,12],[8,16],[-3,13],[-6,12],[-27,24],[-10,23],[-23,38],[12,10],[41,6],[28,-26],[26,-30],[16,0],[15,13],[33,38],[28,49],[25,56],[21,34],[23,3],[69,-105],[24,-4],[80,57],[9,-3],[28,-29],[8,-12]],[[31366,20072],[-8,-22],[-17,-29],[-24,-23],[-23,-6],[-16,12],[-9,20],[-4,21],[-5,11],[-9,2],[-11,0],[-14,-8],[-29,-29],[-13,-8],[-9,-2],[-84,22],[-8,9],[-10,19],[-11,59],[-35,52],[54,29],[65,0],[125,-22],[49,-5],[39,-50],[6,-30],[1,-22]],[[29507,26874],[-21,-12],[-19,-3],[-20,9],[-35,-1],[-34,22],[-32,32],[-9,19],[3,26],[24,61],[22,116],[15,166],[-12,63],[1,26],[6,31],[2,33],[-1,32],[3,30],[24,64],[4,29],[0,31],[11,64],[-3,21],[-9,18],[7,16],[85,-47],[56,-11],[3,-49],[11,-38],[7,-68],[8,-16],[-4,-49],[-26,-21],[2,-45],[15,-42],[-22,-16],[-23,-9],[-6,-11],[-17,-10],[-20,-23],[6,-21],[26,-48],[29,-33],[16,-49],[21,-51],[-10,-33],[-19,-46],[-31,-31],[-27,-19],[3,-76],[-10,-31]],[[29312,23532],[2,-85],[-4,-85],[-11,-104],[2,-21],[12,-5],[4,-13],[-4,-55],[-7,-42],[-13,-35],[-7,-41],[-7,-9],[-30,-7],[-17,4],[-13,47],[-4,29],[1,38],[-16,51],[-1,19],[6,34],[14,16],[2,52],[6,15],[15,21],[2,9],[-1,8],[-5,1],[-61,-64],[-5,-18],[-3,-24],[-1,-84],[-10,-49],[-10,-9],[-28,-2],[-37,5],[-42,44],[-27,-12],[-6,54],[14,44],[51,-4],[8,77],[-16,18],[-18,32],[-10,28],[9,21],[30,31],[15,3],[15,-17],[36,13],[-2,49],[-32,22],[7,37],[41,35],[24,36],[2,41],[-10,40],[3,16],[20,34],[29,16],[13,-2],[26,-24],[24,-3],[5,-7],[5,-26],[15,-193]],[[29025,23753],[-32,-1],[-7,103],[36,149],[3,56],[-12,43],[-5,35],[3,14],[47,30],[14,-32],[18,-83],[33,-119],[-1,-114],[-18,-28],[-58,-29],[-21,-24]],[[29337,21357],[5,-5],[10,1],[16,-9],[58,-11],[52,-27],[27,-26],[35,-7],[29,-33],[13,-8],[15,-2],[39,-60],[2,-7],[44,-47],[2,-7],[-25,-3],[-51,22],[-25,1],[-19,7],[-4,4],[-4,27],[-5,13],[-49,63],[-21,14],[-35,12],[-40,-8],[-28,8],[-9,-3],[-40,50],[-40,42],[-17,50],[-25,38],[-1,11],[12,9],[27,-22],[27,-37],[15,-14],[10,-36]],[[29287,23852],[-6,-14],[-34,9],[-59,-15],[-25,52],[-11,83],[-8,18],[-14,47],[-8,31],[-15,48],[-6,51],[-3,16],[13,30],[62,29],[22,48],[19,-6],[-5,-98],[11,-33],[22,-28],[3,-11],[4,-35],[11,-53],[13,-26],[4,-15],[0,-13],[-5,-19],[15,-96]],[[29743,21035],[8,-46],[4,-9],[20,7],[34,4],[57,-17],[6,-6],[24,-51],[19,-22],[28,-47],[-28,-32],[-17,-45],[-1,-23],[-11,-13],[-17,-14],[-26,-27],[-31,-3],[-31,-14],[-15,-12],[-8,-1],[-10,7],[-11,13],[-4,15],[22,14],[28,50],[5,52],[-30,9],[-18,-7],[-14,0],[-15,16],[-9,-24],[-4,-24],[4,-36],[-3,-11],[-10,-7],[-26,14],[-26,24],[-2,14],[6,48],[-1,25],[-5,37],[-3,3],[-10,0],[-31,-7],[-31,46],[-16,49],[-57,14],[44,69],[67,10],[22,-35],[74,-24],[-4,37],[1,13],[10,16],[6,2],[9,-12],[14,-5],[7,-11],[6,-23]],[[29216,22102],[11,-112],[9,-16],[28,-8],[31,-57],[1,-16],[-37,-96],[-8,-69],[-43,5],[-19,68],[-27,66],[-10,77],[-15,66],[27,38],[26,-8],[1,50],[25,12]],[[30638,20207],[223,-57],[68,35],[55,-1],[16,-48],[-55,-49],[-5,-16],[8,-13],[57,-8],[14,-16],[13,-20],[-11,-31],[-1,-14],[6,-14],[42,-46],[18,-24],[9,-23],[3,-40],[-1,-32],[-9,-4],[-21,10],[-20,18],[-18,46],[-12,10],[-36,9],[-35,22],[-28,-1],[-25,10],[-23,-9],[-8,16],[-10,30],[0,14],[12,48],[0,13],[-7,1],[-26,-10],[-11,7],[-29,35],[-11,7],[-29,3],[-17,-62],[-1,-16],[17,-39],[33,-61],[-17,-1],[-47,19],[-13,11],[-14,31],[-28,18],[-10,11],[-3,13],[-1,40],[-6,6],[-40,-11],[-8,10],[-3,17],[-6,9],[-26,16],[-2,9],[11,12],[7,28],[10,104],[51,-22]],[[30169,20718],[62,-46],[40,0],[0,-28],[5,-49],[-6,-20],[-16,-20],[-9,-29],[-7,-5],[-45,35],[-47,48],[-24,-9],[-31,12],[-25,-3],[-16,-27],[-36,-14],[-7,54],[-33,51],[-33,41],[18,63],[22,10],[20,21],[81,-22],[42,-19],[45,-44]],[[29518,26270],[-14,-25],[-22,-4],[-33,-29],[-4,-25],[-1,-30],[23,-37],[11,-43],[14,-64],[10,-61],[-1,-19],[2,-31],[17,-50],[1,-22],[-1,-22],[-7,-41],[-5,-5],[-17,-4],[-1,-25],[-4,-8],[-46,-3],[-23,12],[2,74],[-29,30],[-20,49],[-23,85],[-19,27],[-22,67],[-33,58],[38,36],[-6,64],[22,22],[33,23],[25,-18],[22,6],[10,16],[-3,65],[7,52],[25,26],[26,3],[10,-29],[13,-28],[32,-23],[-1,-29],[-8,-40]],[[29726,26048],[-68,-46],[-33,15],[-13,34],[-7,29],[-7,48],[12,26],[24,37],[10,24],[4,28],[-2,27],[4,25],[14,9],[50,-28],[52,-43],[18,-29],[3,-23],[-22,-52],[-15,-42],[-24,-39]],[[29155,25984],[-7,-9],[-9,3],[-7,18],[-5,31],[10,12],[7,0],[9,-17],[4,-26],[-2,-12]],[[29082,22649],[-7,-53],[-23,5],[-7,13],[-4,34],[-7,16],[9,34],[7,37],[-2,29],[34,-2],[41,-7],[11,-8],[-12,-25],[-12,-16],[-25,-9],[-3,-48]],[[29137,23711],[-3,-46],[-41,-88],[-35,-52],[-32,-41],[-21,0],[-17,20],[19,33],[24,32],[-8,42],[-7,13],[-10,4],[-17,22],[5,33],[10,15],[14,12],[12,-7],[54,23],[17,18],[32,4],[4,-37]],[[29135,24286],[-20,-7],[-3,19],[-18,31],[16,21],[31,21],[24,-2],[22,-17],[3,-19],[-38,-25],[-9,-14],[-8,-8]],[[29258,26723],[-39,-10],[-9,17],[0,15],[7,12],[20,7],[13,-9],[7,-15],[2,-12],[-1,-5]],[[29546,26024],[-9,-7],[-8,1],[-8,20],[-3,26],[-18,39],[-5,18],[0,22],[10,32],[16,9],[10,-2],[13,-37],[3,-40],[4,-42],[-5,-39]],[[29289,22305],[-1,-48],[-8,-15],[-8,-5],[-20,15],[-11,1],[-18,-25],[-16,-13],[-23,3],[-31,17],[-27,-72],[-13,-25],[-27,-33],[-3,39],[17,60],[8,40],[16,60],[31,-22],[44,22],[41,41],[34,1],[12,-23],[3,-18]],[[29151,22870],[-54,-46],[-16,19],[-39,0],[10,50],[4,37],[6,14],[2,32],[12,58],[32,-19],[24,-6],[33,-19],[36,-12],[10,-51],[-34,-23],[-26,-34]],[[29497,26597],[6,-29],[-13,-4],[-19,5],[-10,-23],[-5,-4],[-45,20],[-7,9],[1,29],[48,3],[31,19],[4,-3],[9,-22]],[[29405,21928],[-9,-6],[-30,14],[-16,12],[-24,30],[-3,31],[-11,38],[7,0],[25,-15],[10,-11],[13,-24],[40,-34],[5,-10],[-1,-13],[-6,-12]],[[29357,25523],[-15,-26],[-27,-12],[-27,20],[-32,-9],[-3,43],[12,36],[24,43],[18,58],[-2,81],[14,18],[8,29],[31,18],[7,-61],[-8,-107],[20,-64],[3,-21],[-4,-24],[-19,-22]],[[31229,19648],[-10,-1],[-25,11],[-36,4],[-5,5],[0,8],[4,9],[20,7],[60,-6],[8,-4],[2,-7],[-10,-19],[-8,-7]],[[31535,20029],[-22,-25],[-16,1],[-6,9],[-1,12],[3,12],[7,11],[16,14],[5,2],[24,-14],[-10,-22]],[[30280,20237],[13,-37],[4,-6],[35,-15],[15,9],[37,4],[23,14],[32,7],[38,-90],[-4,-28],[-30,-30],[-20,-6],[-19,9],[2,15],[-4,13],[-13,17],[-12,-1],[-19,-13],[-10,2],[-19,14],[-35,10],[-7,13],[0,19],[-7,9],[-36,31],[-23,25],[-20,4],[-7,-3],[-7,-13],[-17,-11],[-5,2],[-6,9],[-3,14],[7,29],[11,3],[49,-6],[30,-13],[27,0]],[[31308,19713],[-10,-4],[-7,10],[-12,8],[-46,16],[-1,10],[5,14],[9,12],[18,13],[14,32],[7,-3],[6,-13],[11,-44],[14,-32],[-2,-11],[-6,-8]],[[56349,58133],[-11,4],[-25,16],[-29,13],[-36,11],[-35,-26],[-37,-33],[-12,-25],[-10,-14],[-16,2],[-15,-4],[-9,-24],[-13,-26],[-54,-54],[-11,-19],[-7,-20],[0,-21],[5,-44],[0,-55],[-12,-44],[-13,-30],[-16,-11],[-14,-6],[-8,-19],[-28,-100],[-12,-19],[-25,3],[-71,-150],[-7,-45],[-25,-62],[-33,-70],[-29,-34],[-3,-13],[-8,-13],[-18,-16],[-62,-85],[-75,4],[-33,-34],[-32,-15],[-47,-16],[-14,2],[-61,-7],[-70,2],[-27,-12],[-26,-32],[-19,-29],[-3,-9],[3,-12],[0,-9],[49,-70],[12,-34],[-12,-33],[-6,-5],[-1,-2],[-8,-26],[-29,-79],[-44,-93],[-22,-26],[-10,-17],[-11,-62],[-8,-9],[-30,-8],[-60,-6],[-83,-20],[-50,-7],[-31,5],[-43,-42],[-16,-11],[-10,-4],[-43,-41],[-36,-64],[-12,-12],[-51,-27],[-20,-44],[-9,-4],[-32,58],[-23,53],[-10,53],[-2,17],[-6,-3],[-17,-23],[-16,-27],[-7,-51],[-52,-35],[-45,-30],[-20,-37],[-31,-18],[-40,7],[-31,16],[-31,5]],[[54299,56177],[15,46],[6,35],[1,42],[-2,29],[-18,14],[-12,23],[-26,133],[-27,138],[-38,135],[-41,86],[-30,53],[-9,7],[-15,16],[-11,16],[-55,92],[-56,102],[-15,47],[-28,70],[-32,72],[-16,33],[-8,59],[22,54],[23,67],[29,45],[37,3],[61,-18],[67,-7],[65,14],[17,10],[17,-1],[35,-15],[61,3],[32,27],[-34,47],[-37,74],[-34,81],[-21,73],[-19,95],[-18,116],[-11,152],[2,85],[6,61],[18,100],[-12,58],[2,47],[-1,70],[-6,36],[-24,115],[-5,13],[-21,80],[-9,134],[-24,89],[-39,43],[-21,52],[-8,91],[-15,25],[-61,32],[-50,0]],[[54495,53150],[-13,54],[-8,63],[-4,73],[2,19],[-5,22],[0,4],[-7,55],[7,38],[-5,40],[-16,39],[-14,30],[-8,27],[-7,12],[-15,4],[-21,14],[-27,59],[-27,57],[-34,74],[-27,63],[-33,78],[-31,72],[-19,69],[-7,40],[9,4],[13,1],[6,7],[0,19],[-14,54],[-6,70],[-12,42],[-35,66],[-35,49],[-11,26],[-6,36],[-13,231],[-6,65],[-10,29],[-8,13],[-3,16],[1,41],[5,37],[-1,14],[10,32],[0,213],[-5,11],[-6,18],[-10,-1],[-11,2],[-11,31],[-9,39],[3,28],[9,23],[11,20],[13,17],[39,34],[11,17],[7,21],[4,29],[23,109],[33,109],[15,23],[14,72],[20,89],[8,41],[6,41],[10,33],[37,54],[28,96]],[[43008,61604],[-27,-11],[-12,5],[-3,46],[-6,30],[1,14],[63,59],[21,-10],[16,-47],[-11,-26],[-42,-60]],[[43487,60488],[-17,-53],[-36,4],[-19,22],[-22,66],[0,52],[8,44],[-1,39],[3,10],[11,-6],[2,-26],[34,-64],[12,-13],[25,-75]],[[43086,61530],[-22,-13],[-14,1],[-21,21],[7,22],[22,24],[15,5],[12,-43],[1,-17]],[[43634,61196],[23,-11],[8,4],[15,-2],[16,-30],[3,-33],[-8,-40],[-30,-33],[-18,4],[-21,30],[12,60],[0,51]],[[43247,60400],[-21,-22],[-15,10],[-15,23],[-7,33],[6,28],[29,33],[17,-11],[10,-51],[-4,-43]],[[43309,61418],[11,-17],[4,-12],[-17,-7],[-42,22],[-11,-13],[-11,-48],[-21,72],[2,27],[4,8],[30,-19],[51,-13]],[[43642,61439],[-9,-30],[-11,44],[-6,10],[-3,62],[16,19],[8,1],[0,-64],[5,-42]],[[43560,60562],[-8,-2],[-11,26],[2,36],[-1,9],[10,39],[20,-4],[6,-28],[0,-59],[-18,-17]],[[13151,83022],[26,-34],[61,22],[11,-4],[12,-13],[12,-28],[14,-42],[3,-46],[-5,-17],[-11,-18],[-98,-73],[-2,-7],[2,-7],[9,-7],[19,1],[77,18],[5,13],[5,57],[11,31],[0,23],[-7,55],[1,22],[54,5],[33,20],[35,38],[8,-1],[-5,-68],[-5,-21],[-33,-84],[-19,-73],[-9,-73],[-2,-120],[-8,-41],[-15,-25],[-93,-43],[-48,2],[-43,40],[-20,27],[15,33],[10,2],[30,-7],[24,-12],[10,0],[-2,7],[-66,63],[-49,28],[-14,32],[-1,24],[-4,14],[-38,86],[-8,34],[-5,48],[0,49],[10,80],[4,8],[16,-1],[27,-9],[66,-8]],[[13402,82485],[28,-53],[8,-48],[-3,-56],[-45,-22],[-23,17],[-11,-3],[-15,-17],[19,-7],[26,-28],[23,-36],[32,-6],[44,-25],[-33,-45],[-5,-26],[41,-72],[4,-18],[13,-4],[30,6],[4,-6],[0,-15],[-19,-42],[2,-8],[17,-7],[32,0],[8,-41],[-30,-38],[-55,49],[-25,48],[-14,45],[-17,25],[-52,57],[-78,121],[-21,18],[-20,48],[-6,23],[1,15],[7,9],[24,5],[0,24],[-90,42],[-10,8],[-12,30],[7,4],[49,-5],[53,14],[33,11],[13,13],[27,17],[11,-1],[28,-20]],[[14667,81013],[138,-72],[138,-35],[102,-42],[62,-13],[22,-9],[15,-15],[17,-36],[29,-85],[23,-55],[46,-94],[37,-67],[8,-27],[-8,-8],[1,-16],[28,-65],[52,-59],[41,-28],[86,-45],[53,-45],[16,-30],[23,-30],[9,-21],[19,-76],[35,-73],[36,-139],[7,11],[4,42],[4,9],[8,5],[7,-17],[6,-36],[23,-87],[-7,-26],[-7,-2],[-31,11],[-10,-15],[-15,-32],[-10,-13],[-6,6],[-90,31],[-55,29],[-72,45],[-87,47],[-50,33],[-41,33],[-29,29],[-5,24],[1,11],[56,77],[23,42],[9,31],[5,34],[-3,41],[-3,-3],[-5,-40],[-8,-34],[-10,-28],[-6,-9],[-67,-14],[-54,4],[-27,-33],[-8,-4],[-15,11],[-33,44],[-47,36],[5,9],[31,19],[16,26],[-3,5],[-11,-2],[-10,6],[-19,34],[-10,10],[-23,-16],[-10,-1],[-9,23],[13,53],[1,13],[-24,-20],[-8,7],[-7,17],[-7,7],[-19,-3],[-21,15],[-7,-6],[-3,-23],[-7,-6],[-31,39],[-8,1],[-15,-29],[-5,-2],[-9,13],[-4,71],[2,21],[4,7],[28,16],[79,18],[7,13],[-60,-7],[-15,10],[-17,24],[-17,0],[-9,8],[-10,18],[-25,64],[-17,17],[-29,10],[-15,12],[-6,-5],[-6,-19],[-9,-11],[-19,-7],[-19,5],[-14,18],[-8,22],[-4,25],[8,33],[0,14],[-3,15],[-7,12],[-9,10],[-5,-5],[-1,-20],[-5,-14],[-17,-11],[-13,19],[-9,27],[-11,19],[-57,0],[-27,-25],[-13,-2],[-13,6],[-2,13],[12,35],[-3,47],[-3,12],[-27,7],[-4,12],[15,57],[9,11],[12,4],[53,4],[17,-8],[26,-34],[-1,13],[-9,39],[-2,24],[18,26],[-17,8],[-63,6],[1,-17],[5,-24],[-37,-21],[-28,-4],[-26,4],[-21,12],[-37,51],[-23,51],[1,27],[13,29],[16,19],[39,18],[51,1],[57,-23],[143,-104]],[[10833,91964],[39,-9],[126,-19],[119,11],[221,-61],[137,-114],[111,-57],[45,-38],[72,-34],[169,-75],[53,-7],[98,-36],[61,5],[104,-9],[71,-28],[140,-79],[29,-7],[8,6],[-49,78],[-8,7],[-56,29],[-67,14],[-5,6],[-12,27],[4,11],[14,5],[50,-1],[29,5],[4,11],[-21,2],[-25,11],[-30,18],[-17,17],[61,115],[21,-11],[32,26],[58,-17],[10,10],[7,58],[9,14],[16,11],[80,10],[99,-10],[11,5],[-10,39],[-1,16],[6,35],[6,18],[12,10],[46,-8],[15,-17],[15,-30],[16,-17],[49,-17],[6,-11],[-19,-45],[-19,-24],[-41,-62],[-3,-16],[63,28],[71,38],[60,22],[51,4],[36,12],[22,21],[16,22],[31,70],[21,12],[87,-4],[21,2],[13,7],[-2,8],[-19,11],[-25,3],[0,5],[9,12],[14,6],[42,8],[29,-25],[19,-2],[63,28],[98,74],[39,21],[34,3],[29,-13],[22,4],[29,41],[12,23],[17,19],[73,43],[46,10],[29,-8],[33,-18],[28,-7],[37,5],[27,-2],[13,8],[47,50],[15,0],[14,-14],[24,-36],[0,-18],[-31,-44],[-225,-126],[-69,-54],[-34,-20],[-36,-11],[-69,-9],[-27,-11],[-46,-10],[-109,-17],[-21,-9],[-14,-10],[-39,-66],[-18,-22],[-38,-33],[-41,-20],[-58,-7],[-36,-31],[-42,-60],[-33,-42],[-39,-36],[-42,-46],[-11,-25],[13,-32],[7,-10],[42,-18],[16,4],[-15,17],[-35,25],[-5,9],[9,7],[166,-19],[36,19],[12,16],[-2,9],[-45,3],[-10,15],[-7,29],[-2,23],[4,17],[10,22],[49,35],[52,15],[40,20],[22,19],[60,32],[23,27],[13,20],[2,10],[-11,7],[9,18],[43,16],[20,1],[61,-15],[11,-12],[-6,-31],[8,2],[24,39],[13,13],[14,3],[13,-5],[14,-13],[8,-38],[1,-63],[3,-25],[16,43],[11,20],[59,93],[40,51],[46,50],[65,37],[152,61],[85,17],[43,15],[21,13],[14,17],[24,19],[4,-2],[-9,-39],[-6,-12],[-56,-24],[-5,-19],[6,-29],[9,-19],[13,-9],[23,6],[33,23],[41,34],[89,86],[8,16],[22,69],[51,31],[92,35],[22,22],[-80,19],[-17,13],[-3,8],[15,19],[-36,20],[-14,12],[1,36],[11,25],[24,24],[14,5],[36,-15],[30,-18],[104,-85],[42,-42],[25,-33],[58,-102],[26,-59],[21,-61],[21,-44],[20,-27],[100,-107],[52,-45],[44,-28],[49,-22],[57,-16],[38,-2],[60,46],[1,29],[-26,50],[-27,35],[4,21],[35,40],[-3,14],[8,42],[24,-8],[10,1],[13,15],[17,29],[22,24],[27,19],[7,12],[-26,9],[-16,0],[-12,4],[-8,8],[11,9],[57,22],[11,22],[19,14],[23,5],[15,-6],[16,-17],[1,-28],[-7,-46],[-2,-37],[18,-87],[16,-19],[63,-25],[-4,-22],[-72,-91],[-16,-23],[-7,-17],[2,-14],[13,-12],[24,-9],[63,-3],[18,8],[122,3],[22,6],[19,18],[28,44],[31,14],[10,12],[19,52],[10,61],[9,26],[14,16],[19,5],[48,-6],[22,5],[88,-5],[88,4],[92,-11],[58,-12],[54,-20],[104,-46],[41,-26],[145,-113],[43,-23],[79,-22],[274,-49],[34,-13],[72,-51],[50,-30],[59,-29],[73,-25],[144,-37],[24,-13],[26,-3],[30,5],[132,-22],[35,1],[25,-4],[31,-15],[45,-6],[-2,11],[-51,59],[2,9],[21,1],[64,-10],[15,17],[21,-1],[49,-8],[53,-18],[56,-28],[68,-24],[104,-60],[57,-50],[55,-62],[29,-43],[6,-24],[11,-12],[17,0],[7,-9],[-16,-53],[-9,-14],[-12,-9],[-49,-11],[-136,13],[-25,-43],[-76,-37],[-13,-16],[-4,-11],[6,-38],[-10,-12],[-62,-43],[-2,-12],[40,-18],[43,-30],[34,-7],[43,4],[54,-11],[65,-25],[45,-12],[25,2],[35,-4],[44,-12],[59,-4],[129,1],[39,-8],[54,-4],[105,1],[19,1],[33,21],[22,6],[38,1],[108,14],[38,0],[34,11],[45,23],[27,4],[10,-14],[19,-6],[27,2],[52,23],[120,71],[43,0],[32,22],[8,0],[8,-9],[30,-52],[9,-8],[20,-4],[20,-27],[20,-39],[16,-11],[113,-2],[39,-11],[12,-11],[13,-31],[7,-60],[5,-22],[16,-33],[11,-9],[10,9],[28,84],[10,13],[18,-4],[6,-5],[28,-62],[40,-46],[100,-84],[16,-31],[6,-23],[-6,-21],[-17,-18],[-27,-15],[-37,-11],[-34,4],[-32,19],[-10,1],[11,-17],[66,-70],[17,-28],[16,-18],[14,-10],[13,-15],[12,-21],[55,-56],[16,-27],[62,-84],[30,-33],[23,-19],[8,-1],[-5,15],[-79,111],[-41,70],[-5,17],[-3,26],[-2,85],[6,13],[28,11],[35,-39],[13,-5],[9,2],[5,10],[20,-9],[36,-29],[12,0],[-27,54],[-19,27],[-7,19],[18,28],[-10,14],[-45,41],[-24,42],[-21,65],[-2,25],[3,26],[-3,22],[-29,43],[-31,30],[-24,35],[-5,19],[3,50],[19,21],[36,29],[9,30],[-16,31],[-3,14],[10,-2],[70,15],[18,-5],[26,6],[35,19],[28,9],[36,-2],[20,5],[24,8],[13,9],[22,36],[12,6],[37,-4],[21,-8],[9,3],[-1,50],[7,18],[37,37],[39,4],[25,10],[30,20],[21,19],[21,29],[9,38],[-7,11],[-44,15],[-26,-8],[-59,-27],[-61,-34],[-24,-33],[-6,-41],[-12,-18],[-47,17],[-21,0],[-25,-7],[-27,-16],[-29,-25],[-42,-4],[-56,15],[-33,5],[-34,-26],[2,-20],[15,-28],[-15,-17],[-82,-6],[-21,4],[-44,-12],[-17,3],[-12,13],[-89,58],[-9,11],[22,47],[82,126],[9,8],[152,22],[91,23],[169,69],[32,6],[108,46],[45,12],[41,-8],[60,-24],[32,-21],[22,-26],[18,-37],[23,-81],[8,-69],[14,-26],[51,-48],[26,-18],[16,-6],[14,11],[9,2],[7,-4],[7,-31],[9,-3],[30,4],[32,-12],[5,-10],[-7,-37],[9,-16],[40,-34],[37,-12],[44,-6],[81,6],[68,16],[51,26],[42,-29],[84,-71],[50,-51],[41,-23],[84,-29],[19,-15],[31,-2],[43,12],[48,-5],[54,-21],[37,-9],[127,40],[20,2],[47,19],[31,6],[36,0],[27,5],[17,13],[68,-1],[122,-14],[84,-17],[49,-23],[41,-12],[32,-3],[31,4],[30,11],[32,20],[68,11],[11,5],[-1,11],[-14,17],[-39,32],[-27,31],[-5,20],[1,24],[8,14],[16,4],[26,-15],[34,-34],[98,-126],[24,-17],[13,-17],[90,-45],[42,-9],[50,29],[22,17],[11,17],[0,17],[4,24],[-5,14],[-13,20],[-36,26],[-59,34],[-53,10],[-48,-14],[-55,-29],[-23,12],[-68,81],[-17,31],[0,8],[31,-9],[2,9],[-19,40],[-12,13],[-39,62],[-5,18],[24,5],[11,7],[15,-1],[70,-37],[35,17],[83,23],[-33,36],[-7,35],[3,8],[27,5],[53,-29],[25,-4],[19,11],[19,1],[21,-10],[19,-15],[37,-43],[17,-26],[20,-39],[7,-6],[97,-3],[54,35],[-1,-12],[-12,-27],[-68,-105],[1,-13],[36,6],[17,8],[10,13],[9,29],[6,9],[101,49],[29,8],[-18,-53],[-37,-188],[-8,-65],[-8,-23],[-40,-72],[1,-25],[43,-61],[8,-17],[4,-50],[8,-9],[36,-1],[37,16],[44,11],[7,-11],[-24,-60],[1,-6],[42,16],[19,2],[8,-3],[31,-31],[3,-23],[0,-35],[-3,-24],[-11,-14],[-13,-6],[-16,-4],[-14,2],[-44,-5],[-26,6],[-25,19],[-18,5],[-21,-15],[-34,3],[-37,41],[-15,-4],[-5,-6],[0,-9],[17,-27],[132,-143],[20,-29],[4,-43],[3,0],[12,43],[-8,20],[-67,83],[-9,31],[3,8],[18,9],[96,-21],[38,4],[25,15],[13,18],[9,99],[17,63],[-10,57],[-26,90],[-21,54],[-47,53],[-5,20],[53,163],[9,14],[12,6],[42,2],[30,14],[47,-19],[26,-5],[33,17],[72,69],[28,21],[36,40],[43,59],[48,43],[76,40],[47,32],[10,12],[-44,2],[-10,6],[-9,30],[4,57],[-1,31],[-5,28],[-9,25],[-14,23],[-13,13],[-11,4],[-8,-2],[-4,-8],[-12,-54],[-15,-39],[-20,-21],[-43,-14],[-72,-10],[-30,19],[-4,16],[10,62],[25,27],[66,53],[42,42],[1,7],[-39,1],[-9,8],[-9,52],[3,20],[6,22],[27,16],[84,20],[65,23],[2,-8],[-52,-70],[-5,-16],[20,-16],[50,41],[32,34],[6,11],[-30,4],[-1,14],[5,26],[-2,17],[-33,22],[-40,-12],[-34,-23],[-28,-7],[-41,0],[-30,5],[-18,11],[-23,25],[-26,38],[-33,38],[-12,4],[-10,-4],[-22,-37],[-9,-4],[-130,52],[-56,28],[-26,22],[-34,13],[-39,4],[-32,11],[-24,16],[-19,23],[-15,31],[-27,38],[-62,77],[-16,49],[-2,19],[4,49],[58,82],[10,24],[20,17],[29,11],[21,4],[47,-11],[-28,26],[-3,13],[29,45],[-6,2],[-78,-34],[-20,2],[-28,21],[-52,75],[-1,47],[17,65],[5,38],[-15,33],[6,10],[16,9],[7,10],[-7,36],[11,20],[38,38],[36,33],[22,10],[19,-2],[19,-10],[21,-19],[34,-19],[26,-5],[19,10],[33,71],[11,18],[-11,8],[-63,0],[-28,5],[-16,7],[-11,27],[9,15],[62,50],[29,53],[86,73],[87,34],[43,11],[34,3],[15,-5],[18,-36],[4,-39],[47,-48],[38,-4],[24,7],[76,-2],[18,-14],[-1,-15],[-9,-24],[6,-21],[51,-40],[47,-28],[42,-34],[63,-72],[13,-21],[10,-22],[16,-80],[2,-31],[-6,-88],[-5,-17],[-16,-20],[5,-8],[50,-23],[39,-46],[21,-15],[49,-24],[9,-9],[12,-16],[28,-66],[46,-59],[3,-13],[-10,-28],[7,-9],[18,-10],[16,5],[14,21],[15,6],[17,-9],[12,-16],[17,-38],[25,-31],[-2,-10],[-12,-8],[-68,-8],[-37,6],[-35,15],[-25,16],[-22,24],[-9,-2],[-12,-20],[-25,-29],[-16,-27],[18,-12],[89,1],[19,-8],[23,-19],[-26,-31],[-60,-53],[-129,-103],[-38,-26],[9,-8],[14,-2],[45,5],[41,14],[51,-6],[22,-12],[-8,-11],[14,-17],[83,-42],[52,8],[53,40],[41,20],[51,-2],[14,-5],[-5,-10],[-38,-22],[-34,-25],[-3,-7],[42,10],[94,-16],[45,-4],[34,4],[31,-6],[29,-17],[9,-11],[-27,-6],[-25,0],[-22,-11],[-18,-20],[-13,-26],[-8,-33],[-19,-13],[-31,6],[-13,9],[7,13],[-9,2],[-25,-10],[-20,0],[-5,-9],[137,-104],[44,-91],[30,-38],[3,-10],[-20,-26],[-1,-19],[9,-56],[-4,-45],[-14,-78],[13,-25],[29,-22],[18,-27],[12,-10],[9,-22],[10,-14],[12,-6],[8,8],[5,20],[11,19],[31,34],[30,54],[5,17],[-5,42],[4,18],[28,64],[9,44],[8,69],[15,48],[32,40],[56,82],[20,16],[22,8],[40,-2],[28,-26],[39,-49],[49,-44],[90,-60],[25,-23],[51,-59],[21,-59],[15,-84],[13,-50],[10,-17],[5,-25],[-1,-34],[-4,-26],[-7,-19],[-11,-11],[-27,-4],[-34,6],[-9,8],[-18,40],[-7,2],[-31,-29],[-4,-16],[12,-54],[-2,-102],[3,-23],[33,-106],[55,-81],[138,-155],[8,-18],[15,-64],[7,-13],[9,-8],[11,-2],[15,6],[51,48],[44,51],[31,27],[18,2],[18,9],[21,17],[13,18],[7,19],[9,77],[8,37],[21,50],[8,14],[107,127],[9,16],[45,147],[17,67],[2,41],[-6,36],[3,30],[12,24],[13,16],[22,17],[13,24],[7,2],[19,0],[24,-16],[17,-3],[113,19],[0,9],[-66,31],[1,16],[5,21],[21,24],[26,7],[6,15],[0,19],[9,31],[-8,11],[-62,42],[-36,-2],[-9,5],[-31,35],[-11,50],[-1,20],[4,33],[4,9],[-2,15],[-8,20],[0,19],[6,16],[-4,19],[-14,22],[-6,18],[15,56],[1,17],[-15,24],[-10,9],[8,6],[25,2],[31,-7],[36,-18],[43,0],[52,17],[52,9],[91,-4],[21,-5],[90,-52],[70,-26],[32,3],[156,-11],[68,6],[35,-3],[68,-28],[-4,-24],[-30,-39],[-38,-8],[-34,-14],[32,-21],[92,-28],[22,-44],[6,-21],[-11,-18],[6,-10],[21,0],[55,16],[61,-10],[89,-35],[10,-7],[15,-27],[-2,-11],[-78,-67],[-41,-27],[-54,-27],[-1,-15],[75,-3],[58,-7],[27,-9],[14,-13],[19,-27],[3,-22],[-2,-29],[-6,-20],[-69,-59],[-31,-18],[-53,-21],[-23,-17],[-26,3],[-28,20],[-28,5],[-52,-17],[-29,1],[-13,-6],[-2,-13],[25,-37],[14,-14],[6,-11],[-11,-18],[3,-6],[8,-7],[47,-80],[10,-6],[10,3],[20,23],[13,9],[5,-1],[0,-12],[-22,-70],[-2,-19],[0,-17],[11,-35],[23,-38],[30,-35],[45,-46],[60,-49],[22,-24],[33,-56],[7,-22],[-9,-59],[-24,-97],[-15,-55],[-7,-14],[-45,-39],[-26,-9],[-42,1],[-14,-8],[-22,-31],[-30,-55],[-24,-35],[-17,-14],[-32,-17],[-50,-51],[-24,-20],[-86,-21],[-69,-68],[-28,-23],[-30,-12],[-32,-2],[-19,11],[-10,42],[-7,14],[-24,29],[-50,83],[-22,29],[-14,6],[-30,-5],[-14,3],[-33,26],[-11,17],[1,7],[25,9],[-11,14],[-43,37],[-18,20],[-2,6],[-43,26],[-43,7],[-53,-42],[-21,-29],[1,-9],[26,-11],[11,6],[22,26],[11,8],[33,-4],[28,-18],[10,-16],[4,-11],[75,-83],[26,-17],[12,-20],[8,-33],[16,-37],[36,-61],[39,-75],[8,-30],[-20,-14],[-10,-1],[-30,11],[-78,35],[-9,-1],[-20,-18],[-17,-42],[-5,-4],[-42,17],[-78,36],[-52,31],[-27,26],[-32,41],[-37,56],[-45,17],[-52,-20],[-76,-7],[-158,6],[-21,-5],[-8,-7],[14,-30],[-4,-9],[-10,-6],[-3,-9],[18,-32],[27,-23],[79,-30],[52,-25],[32,-22],[10,-19],[1,-20],[-15,-41],[-8,-15],[-183,-203],[-70,-82],[-35,-50],[-32,-33],[-27,-17],[-45,-9],[-62,-2],[-81,8],[-42,26],[-76,70],[-54,41],[-23,14],[-20,39],[-18,7],[-39,7],[-39,21],[-92,70],[-48,28],[-44,15],[-39,3],[-15,-4],[27,-36],[-12,-2],[-31,8],[-32,0],[-55,26],[-55,-4],[-39,5],[-48,14],[-51,7],[-82,0],[-29,-3],[-5,-7],[40,-31],[68,-37],[-9,32],[2,8],[23,11],[107,-19],[122,-42],[31,-4],[34,-15],[38,-25],[52,-51],[99,-116],[32,-29],[43,-27],[215,-40],[75,0],[149,-11],[79,-21],[22,-15],[7,-51],[-7,-26],[-43,-79],[-27,-58],[-168,-245],[-22,-57],[-9,-34],[-30,-34],[-76,-55],[-76,-46],[-46,-10],[-41,11],[-26,14],[-39,45],[-3,-4],[29,-72],[-7,-7],[-23,9],[-53,32],[-17,-6],[-10,-9],[-14,0],[-18,10],[-32,26],[-9,13],[-7,40],[-6,7],[-64,-23],[-10,-7],[26,-16],[9,-12],[25,-58],[2,-13],[-19,-8],[-61,23],[-7,-2],[30,-59],[12,-27],[1,-15],[-39,-66],[-25,-27],[-35,-10],[-21,6],[-24,17],[-18,-2],[-11,-22],[-20,-15],[-29,-9],[-37,4],[-45,17],[-120,62],[-37,9],[-70,9],[-9,9],[1,8],[10,8],[-3,7],[-15,6],[-15,-6],[-16,-16],[-28,-5],[-40,7],[-59,24],[-116,62],[-128,53],[-74,68],[28,-62],[-3,-20],[-14,-19],[-2,-18],[29,-44],[40,-15],[40,1],[1,7],[-16,11],[-15,16],[-7,24],[7,4],[36,-12],[23,-15],[177,-81],[53,-15],[40,-15],[11,-10],[-14,-20],[-71,-50],[-1,-8],[49,4],[59,45],[33,20],[32,13],[43,-22],[55,-56],[44,-32],[63,-18],[37,-19],[62,-53],[10,-27],[6,-111],[-2,-27],[-8,-27],[-14,-26],[-26,-15],[-38,-3],[-30,-11],[-65,-59],[-28,-9],[-117,18],[-45,16],[-21,-1],[-12,-13],[-12,-6],[-46,-5],[-8,-11],[3,-16],[9,-22],[11,-13],[18,-16],[26,-11],[53,-12],[6,-30],[-2,-10],[-18,-20],[-20,2],[-35,24],[-18,1],[-15,-13],[-21,-4],[-27,4],[-15,-10],[-3,-25],[-9,-19],[-31,-30],[-17,-22],[0,-18],[18,-12],[21,-28],[23,-45],[5,-19],[-15,5],[-19,18],[-24,29],[-36,27],[-80,35],[-15,-1],[8,-9],[53,-36],[20,-24],[3,-17],[-45,-38],[-1,-13],[12,-11],[3,-9],[-16,-18],[-26,-16],[-51,-2],[-4,-9],[19,-19],[6,-12],[-16,-16],[-11,-2],[-58,7],[15,-40],[9,-14],[18,-20],[32,-19],[1,-7],[-11,-16],[-19,-20],[-81,-59],[-56,-70],[-8,-22],[14,-45],[1,-12],[-15,-21],[-33,6],[-7,-8],[8,-22],[2,-31],[-5,-42],[-24,-66],[-43,-88],[-33,-81],[-23,-73],[-16,-36],[-31,-2],[-23,-23],[16,-12],[9,-14],[7,-21],[-7,-67],[-19,-111],[-13,-89],[3,-274],[-3,-121],[-9,-67],[-14,-37],[-24,-11],[30,-10],[20,-17],[9,-26],[8,-42],[12,-19],[13,3],[13,-4],[11,-12],[33,-59],[37,-17],[2,-33],[-15,-184],[0,-24],[17,46],[18,144],[23,63],[19,14],[77,7],[81,-16],[31,-2],[27,8],[28,-17],[6,-18],[8,-75],[8,-43],[48,-153],[23,-86],[29,-133],[10,-38],[59,-178],[11,-49],[5,-37],[-2,-26],[-11,-40],[-19,-54],[-18,-42],[-17,-28],[-18,-22],[-18,-14],[1,-3],[21,6],[20,15],[39,37],[15,8],[43,5],[1,-13],[-20,-28],[4,-2],[30,22],[64,31],[252,103],[59,9],[85,-19],[69,-43],[75,-56],[79,-41],[124,-38],[37,-18],[73,-19],[34,-21],[40,-52],[65,-67],[49,-42],[54,-39],[55,-73],[88,-164],[22,-20],[54,-27],[102,-35],[151,-81],[66,-32],[43,-13],[43,-22],[43,-32],[32,-35],[23,-38],[19,-25],[35,-28],[18,-19],[2,-30],[-42,-116],[-1,-10],[42,84],[24,24],[19,11],[39,-1],[59,-14],[53,0],[44,13],[39,6],[31,-1],[23,4],[14,10],[17,0],[68,-29],[27,-2],[99,-27],[63,10],[11,-5],[22,-36],[19,-3],[31,6],[31,-10],[51,-46],[23,-40],[23,-82],[2,-25],[-42,-190],[-13,-73],[-2,-65],[8,-36],[37,-62],[6,-17],[22,-91],[6,-39],[-3,-45],[-11,-75],[3,-56],[9,-85],[-3,-58],[-17,-31],[-11,-29],[-9,-54],[0,-21],[9,-40],[16,-23],[26,-25],[24,-38],[45,-92],[33,-51],[39,-75],[8,-38],[-11,-25],[-14,-17],[-32,-23],[-14,-17],[3,-4],[47,12],[27,-1],[23,-19],[19,-36],[32,-30],[43,-25],[44,-43],[74,-100],[13,-23],[19,-52],[26,-82],[13,-54],[1,-25],[-14,-25],[-49,-46],[-50,-81],[16,4],[32,34],[56,67],[30,13],[29,-7],[45,-20],[39,-27],[35,-36],[51,-95],[55,-76],[30,-65],[-9,41],[-20,48],[-51,76],[-22,39],[-5,19],[-2,21],[4,37],[10,55],[13,39],[16,22],[10,24],[6,25],[8,19],[44,33],[12,-3],[9,-41],[10,-8],[21,-6],[17,-15],[14,-21],[10,-23],[6,-22],[13,-73],[9,-34],[2,41],[11,65],[8,26],[27,39],[-2,17],[-11,22],[-56,97],[-1,24],[15,14],[11,26],[5,40],[12,28],[35,40],[30,62],[16,42],[12,23],[13,5],[-18,17],[-4,11],[-1,51],[-8,54],[-12,25],[-34,53],[-6,16],[-6,60],[4,30],[9,26],[-5,24],[-32,45],[-12,39],[-14,93],[-13,118],[-14,86],[-16,56],[-3,35],[9,14],[11,44],[10,10],[16,-2],[1,5],[-25,23],[-12,30],[1,11],[21,29],[-3,12],[-16,16],[-49,28],[18,10],[11,23],[-2,7],[-20,10],[-22,17],[-17,27],[-20,42],[-13,34],[-12,56],[-22,63],[-9,16],[-11,10],[-12,5],[0,10],[13,14],[210,106],[18,16],[103,59],[48,33],[48,48],[66,49],[32,31],[21,31],[105,122],[44,62],[26,53],[37,64],[49,75],[31,63],[13,54],[16,91],[4,82],[3,119],[-1,106],[-14,167],[-7,53],[-15,62],[-37,125],[-6,35],[-23,57],[-74,151],[-92,101],[-18,26],[-36,30],[-56,34],[-36,28],[-94,104],[-31,13],[-11,27],[-3,19],[4,50],[5,34],[7,26],[7,16],[52,77],[29,61],[20,34],[22,26],[41,34],[23,44],[-6,17],[-18,19],[-4,19],[31,47],[4,13],[-4,45],[6,10],[38,3],[54,-64],[13,5],[-17,18],[-21,43],[3,18],[40,47],[1,21],[-12,29],[-1,24],[23,55],[-6,12],[-65,11],[-11,16],[4,7],[31,19],[2,7],[-54,125],[-9,37],[23,46],[26,20],[-3,12],[-35,2],[-21,7],[-21,35],[8,23],[8,10],[20,54],[20,11],[-4,9],[-74,-23],[-35,19],[-35,-5],[-16,6],[6,19],[62,86],[29,47],[18,43],[10,28],[1,14],[-6,93],[3,26],[25,24],[37,44],[-51,41],[-32,39],[-21,20],[-16,19],[-21,40],[-15,53],[-17,106],[-3,58],[4,42],[7,21],[11,22],[47,41],[82,60],[64,24],[47,-13],[90,-15],[73,-34],[222,-86],[40,-38],[-37,-33],[5,-8],[84,62],[22,12],[19,3],[63,-24],[25,-4],[32,-20],[76,-66],[6,6],[-21,34],[12,15],[60,35],[62,29],[44,28],[47,37],[32,20],[16,2],[21,-11],[56,-49],[36,-25],[29,-26],[40,-47],[16,-10],[31,-32],[41,3],[13,-3],[4,-7],[7,-21],[4,-14],[0,-14],[-9,-42],[-30,-66],[13,-1],[18,14],[24,25],[19,9],[40,-20],[38,-32],[13,-17],[15,-28],[12,-15],[12,-27],[-1,-9],[-11,-14],[-46,-22],[9,-9],[53,14],[17,14],[11,24],[16,6],[63,-41],[9,-14],[-4,-11],[-10,-13],[-27,-14],[-24,-35],[-4,-15],[17,-11],[41,-4],[0,-8],[-24,-16],[-3,-20],[53,-71],[36,-32],[21,-5],[48,-2],[39,-12],[86,-40],[51,-8],[44,13],[29,2],[25,-16],[8,-11],[4,-23],[0,-34],[14,-24],[28,-14],[23,2],[31,27],[25,5],[9,20],[7,37],[8,20],[18,6],[15,-11],[9,-17],[16,-51],[4,-23],[-1,-20],[-8,-19],[-16,-20],[-23,-21],[-19,-31],[-22,-70],[-9,-46],[-2,-28],[1,-29],[4,-33],[9,-27],[21,-37],[1,-13],[2,-30],[-2,-14],[-12,-27],[-34,-26],[-46,-7],[-152,-1],[-41,6],[10,-24],[43,-8],[38,0],[145,-15],[20,-15],[17,-28],[12,-28],[12,-57],[2,-27],[-6,-31],[-15,-33],[-10,-44],[-5,-55],[8,-29],[78,-3],[15,-20],[-1,-15],[-28,-56],[-3,-15],[13,-38],[-2,-11],[-7,-11],[-8,-28],[-7,-46],[-9,-30],[-21,-22],[-11,-5],[-8,6],[-21,62],[-9,9],[-8,-6],[-4,-9],[0,-14],[-4,-14],[-7,-14],[-31,-23],[-50,-16],[1,-16],[34,-9],[43,-28],[25,-4],[38,22],[75,71],[31,19],[27,7],[30,1],[34,-5],[68,9],[17,-7],[20,-15],[25,-25],[17,-23],[9,-23],[15,-85],[21,-23],[4,-16],[2,-25],[-1,-49],[-23,-100],[-11,-36],[-31,-50],[-36,-23],[-64,-21],[-33,-18],[-25,-25],[-1,-13],[72,42],[79,20],[23,24],[17,22],[17,50],[32,130],[18,40],[25,7],[11,-14],[26,-76],[0,-19],[-7,-16],[-42,-74],[15,7],[43,70],[9,21],[5,32],[14,23],[5,-11],[13,-82],[0,-60],[3,-19],[-5,-56],[5,-10],[13,49],[4,37],[6,26],[7,16],[52,50],[61,40],[40,36],[33,17],[50,17],[31,33],[14,50],[12,35],[10,20],[33,34],[17,2],[17,-12],[20,-26],[21,-40],[13,-30],[4,-23],[4,-78],[4,0],[19,60],[3,21],[-2,23],[-6,22],[-20,49],[-7,31],[1,18],[22,11],[31,4],[5,8],[-23,21],[-1,11],[22,36],[13,1],[26,-5],[-5,18],[0,12],[7,5],[42,-11],[5,14],[36,1],[4,12],[-32,18],[-30,12],[-10,9],[-7,15],[-9,35],[2,9],[9,0],[14,-9],[9,18],[9,43],[9,18],[28,-21],[1,9],[-23,68],[4,13],[35,5],[21,-9],[55,-49],[11,5],[-9,14],[-28,29],[-26,19],[-23,9],[-17,16],[-19,45],[-3,18],[2,24],[13,50],[7,11],[14,8],[19,5],[21,-5],[44,-33],[7,11],[-23,18],[-13,16],[-6,21],[2,24],[19,49],[9,40],[39,109],[12,20],[12,12],[8,13],[31,3],[57,-39],[18,-23],[4,-32],[-30,-45],[-51,-33],[-16,-14],[10,-9],[49,27],[42,12],[34,0],[28,-53],[4,-73],[-16,-60],[21,30],[26,17],[22,-40],[2,-32],[12,-31],[24,-40],[25,-36],[-28,-37],[-33,-23],[7,-16],[46,-18],[6,-18],[-5,-24],[7,1],[32,36],[27,-5],[34,-79],[-25,-46],[-39,-21],[-30,-9],[-43,2],[-17,-7],[8,-15],[41,-1],[63,12],[47,19],[20,1],[22,-8],[7,-6],[-23,-13],[-1,-5],[8,-13],[18,-44],[-2,-10],[-17,-25],[27,-5],[38,12],[11,-14],[23,-52],[15,-53],[-64,-73],[-32,-15],[-48,-39],[-13,-31],[-28,-39],[18,0],[49,64],[24,15],[18,-4],[7,-11],[-3,-18],[16,3],[66,37],[28,7],[36,3],[3,-13],[-22,-89],[-38,-69],[-70,-42],[-24,-25],[-31,-40],[12,-7],[66,52],[45,21],[64,17],[28,-3],[51,-104],[28,-10],[24,5],[44,-30],[16,-29],[-4,-21],[-15,-13],[-7,-19],[18,-58],[-11,-33],[-32,-29],[-23,-14],[-24,-5],[-24,-25],[-10,-4],[-33,6],[11,-15],[16,-8],[26,-4],[30,8],[30,-1],[46,-19],[20,-23],[0,-6],[-10,-13],[-15,-42],[-10,-15],[9,-12],[23,-18],[17,-6],[23,6],[25,-8],[82,-99],[-4,-51],[-12,-40],[5,-44],[0,-55],[-44,-15],[-148,25],[-84,39],[-5,12],[24,26],[-21,2],[-24,-10],[-11,-10],[29,-41],[77,-36],[35,-44],[38,-4],[11,-8],[21,-25],[-6,-9],[-39,-3],[-30,-30],[19,-17],[69,-16],[49,-4],[25,-17],[-20,-19],[-58,-22],[-2,-33],[43,-14],[38,8],[16,-3],[11,-80],[7,-17],[-41,-14],[-1,-16],[28,-13],[45,-10],[15,-15],[3,-24],[9,-12],[26,-3],[29,30],[17,25],[25,-9],[1,-31],[30,-36],[10,-6],[9,-51],[24,45],[17,-9],[20,-2],[-7,-44],[-11,-34],[15,-22],[12,-32],[33,-43],[-9,-21],[-38,-45],[-20,-72],[-5,-24],[-20,-41],[-26,-40],[16,4],[60,73],[36,25],[78,13],[19,20],[29,9],[18,-23],[1,-42],[24,-14],[24,14],[22,-12],[-13,-26],[-71,-108],[-21,-44],[-6,-31],[24,43],[90,97],[9,14],[20,42],[18,27],[48,-10],[25,-19],[11,-55],[19,-59],[30,-65],[78,-32],[28,-6],[49,23],[7,30],[38,10],[27,-4],[9,-59],[29,-31],[28,-26],[27,-14],[40,-6],[22,-28],[0,-12],[-22,-30],[-22,-45],[-38,-31],[-53,-1],[-72,-20],[-3,-17],[-16,-19],[-39,-20],[-21,-14],[-35,-72],[-20,-31],[-24,-6],[-34,3],[-22,-6],[-16,-14],[-10,-19],[-7,-7],[-45,-20],[-82,-55],[-44,-2],[-26,7],[-21,-5],[-14,-15],[-39,-27],[-12,-16],[-7,-19],[-5,-38],[-5,-14],[-7,-8],[-33,8],[-37,25],[7,-27],[58,-44],[17,-25],[-16,-21],[-37,-34],[-4,-18],[15,-10],[-6,-15],[-20,-16],[2,-7],[2,-6],[51,23],[45,50],[29,50],[14,14],[58,19],[34,22],[49,39],[54,58],[58,76],[74,59],[91,42],[66,22],[42,1],[2,7],[-37,14],[-32,2],[-39,-10],[-12,24],[2,10],[12,17],[33,15],[161,-21],[55,-17],[60,-137],[14,-44],[4,-32],[-6,-20],[-24,-24],[-69,-48],[-9,-12],[-1,-7],[30,-9],[9,-14],[15,-52],[31,34],[58,83],[48,38],[40,11],[47,5],[17,-1],[6,-27],[25,-54],[23,-14],[45,-7],[40,-67],[15,-46],[14,-27],[-1,-19],[2,-15],[11,-23],[5,-19],[-3,-45],[-23,-77],[17,-71],[-7,-31],[-4,-51],[14,-33],[5,-20],[-13,-11],[-88,-28],[-35,-1],[-9,-17],[27,-5],[48,1],[59,-17],[27,-19],[11,-27],[-3,-21],[-17,-16],[-33,3],[-32,15],[2,-14],[47,-35],[14,-17],[26,-22],[5,-30],[-6,-30],[-90,-120],[-73,-76],[-74,-67],[-119,-129],[-12,-6],[-21,-3],[-57,21],[-45,-5],[-85,-25],[-24,-15],[-47,-45],[-18,-6],[-51,-9],[-47,6],[-19,-7],[-23,-21],[-6,-12],[-7,-38],[-115,-168],[-31,-57],[-59,-60],[-65,-106],[-57,-43],[-19,-58],[-54,-36],[-100,-9],[-47,-10],[-55,16],[-42,-25],[-62,-8],[-30,6],[-121,-57],[-31,54],[-23,21],[-68,3],[-55,22],[-50,4],[-48,10],[-32,0],[-33,-6],[-52,2],[-29,-30],[-96,9],[-41,27],[-34,6],[-44,-6],[-43,-20],[-94,22],[-100,-19],[-87,13],[-24,13],[-138,-35],[-53,20],[-48,-54],[-32,11],[-35,-8],[-12,11],[-23,-8],[-15,-29],[-20,-3],[-33,-52],[-56,-41],[-82,-226],[-7,-87],[-31,-59],[-27,-8],[-22,-1],[-141,-44],[-63,-34],[18,-27],[-21,-21],[-33,-8],[-36,-25],[-24,-28],[-11,-39],[-72,-64],[-84,-147],[-40,-108],[-49,-78],[-34,-30],[-25,-5],[-25,10],[-41,36],[-30,4],[-76,51],[-177,52],[27,-19],[23,-32],[47,-8],[47,0],[99,-63],[48,-22],[30,-19],[25,-43],[-18,-84],[-19,-69],[-24,-53],[-85,-137],[-41,-46],[-72,-163],[-74,-77],[-40,-47],[-42,-74],[-99,-56],[-37,-15],[-34,8],[-41,-46],[-49,-28],[-15,-42],[-117,-114],[-45,-15],[-39,-30],[-11,-51],[-34,-32],[-10,-23],[-29,-72],[-53,-94],[-66,-15],[-24,-32],[-27,-53],[-39,-36],[-77,17],[18,-22],[69,-34],[7,-51],[-34,-12],[-72,-68],[-98,-117]],[[15892,80064],[-11,21],[-27,26],[-10,0],[-11,-8],[-7,-12],[-6,-27],[-4,-8],[-4,1],[-3,7],[-8,37],[2,16],[9,20],[-1,7],[-20,-6],[-8,5],[-4,10],[1,42],[-11,23],[13,10],[32,8],[34,1],[9,18],[10,43],[-24,-40],[-14,-4],[-44,15],[-29,-2],[-4,8],[2,9],[6,9],[4,31],[7,85],[9,31],[3,16],[-2,4],[-38,-59],[-3,-19],[4,-16],[-4,-33],[-18,-10],[-10,5],[-20,-28],[-6,-3],[-91,50],[-10,6],[-15,23],[-23,40],[-7,34],[9,28],[8,14],[10,0],[10,-10],[21,-47],[8,-29],[22,4],[35,37],[8,14],[-35,-14],[-15,1],[-15,15],[-16,30],[-8,34],[0,107],[5,20],[17,16],[11,25],[-1,11],[-10,22],[-15,16],[-15,9],[-4,-3],[23,-46],[0,-18],[-26,-46],[-4,-13],[0,-45],[-3,-9],[-21,-13],[-23,-35],[-39,-12],[-36,4],[-20,17],[-61,86],[-22,36],[0,30],[-42,107],[0,23],[-14,33],[-16,5],[-4,32],[33,68],[21,58],[2,18],[-1,28],[-5,62],[5,27],[-21,-36],[-4,-26],[5,-27],[-3,-30],[-12,-43],[-21,-45],[-42,-21],[-74,12],[-8,6],[-5,15],[-4,66],[-5,-8],[-8,-35],[-7,-51],[-9,-11],[-15,-1],[-12,8],[-9,17],[-19,2],[-34,-14],[-17,6],[-19,0],[-40,15],[-47,4],[-12,11],[1,22],[8,11],[49,10],[48,23],[47,12],[-2,11],[-21,4],[-108,-26],[-34,4],[-6,4],[-1,26],[13,24],[21,23],[6,18],[-12,7],[-20,-5],[-9,14],[10,55],[-9,55],[-13,-52],[-19,-29],[-91,-13],[-15,-15],[-12,0],[-58,28],[-25,17],[-23,25],[-42,57],[-33,37],[-1,67],[7,43],[15,49],[59,104],[21,19],[18,7],[87,9],[65,13],[12,7],[-95,7],[-85,-5],[-29,-16],[-37,-67],[-9,-28],[-10,-21],[-7,0],[-12,7],[-4,9],[-6,22],[-19,34],[-9,40],[-5,59],[1,26],[10,34],[28,66],[-36,-2],[4,55],[13,61],[34,35],[34,26],[31,34],[55,22],[18,-46],[47,-14],[13,-21],[17,-38],[20,-36],[25,-35],[7,-3],[-11,30],[-40,65],[-2,23],[-10,25],[-52,36],[-10,14],[-9,36],[-4,24],[6,22],[53,69],[13,37],[0,17],[-5,19],[-11,34],[-3,0],[3,-51],[-2,-20],[-6,-22],[-8,-17],[-12,-11],[-114,-158],[-12,-9],[-42,-14],[-22,-17],[-12,-22],[-19,-58],[-25,-115],[-30,-93],[-25,121],[-46,92],[89,92],[2,14],[-8,49],[2,15],[8,21],[23,32],[-1,3],[-26,-12],[-41,-71],[-16,-22],[-8,-3],[-1,41],[22,109],[18,105],[6,30],[16,30],[-15,-2],[-72,-47],[-24,29],[-20,153],[-36,59],[-60,49],[-59,22],[-13,43],[-12,53],[16,62],[26,29],[23,14],[23,-7],[1,-22],[-15,-61],[20,-6],[81,-74],[17,-6],[34,28],[18,-1],[44,-23],[15,-28],[42,-54],[-6,32],[-46,66],[-25,22],[-45,4],[-28,-11],[-12,3],[-24,17],[-21,28],[-21,61],[-5,29],[1,21],[5,19],[9,17],[17,13],[26,7],[7,8],[-32,35],[-15,0],[-52,-51],[-10,-5],[-5,10],[-4,1],[-15,-25],[-12,-11],[-42,-79],[-7,-37],[-2,-57],[-5,-35],[-7,-14],[-50,-27],[-28,-55],[-34,48],[-38,45],[-25,80],[-45,14],[-52,45],[-20,41],[28,82],[41,63],[6,74],[6,16],[70,19],[46,37],[-47,4],[-29,-6],[-52,-26],[-57,51],[-29,47],[-10,40],[10,34],[2,34],[5,47],[5,20],[12,26],[25,17],[22,54],[9,37],[44,111],[16,48],[31,67],[61,105],[-20,-6],[-10,-9],[-9,1],[-9,11],[-9,24],[-8,35],[-5,-16],[-1,-66],[-6,-57],[-11,-39],[-30,-80],[-18,-31],[-12,29],[10,50],[17,40],[3,54],[-16,65],[-10,53],[-4,40],[-1,36],[3,33],[7,35],[11,39],[-1,4]],[[19495,97148],[49,-34],[17,1],[21,-6],[10,-9],[29,-43],[6,-21],[2,-27],[-5,-23],[-10,-19],[-27,-11],[-62,-8],[-87,11],[-75,-14],[-35,-2],[-93,9],[-24,7],[-52,26],[-40,11],[-16,-6],[-20,-23],[-37,-28],[-23,-7],[-68,4],[-103,48],[-118,-14],[-123,-28],[-48,-5],[-14,8],[-19,21],[3,11],[36,32],[82,33],[60,19],[118,28],[141,15],[52,17],[33,23],[92,37],[53,16],[73,13],[58,-1],[74,-30],[56,-15],[34,-16]],[[19317,96833],[223,-14],[9,-3],[1,-10],[-17,-33],[-25,-24],[-119,-30],[-153,-28],[-32,-13],[2,-8],[13,-10],[25,-12],[119,2],[29,-5],[10,-8],[6,-12],[4,-15],[0,-53],[-6,-30],[-17,-27],[-48,-20],[-86,-26],[-59,-11],[-46,4],[-46,-3],[-202,-48],[-62,-1],[-55,12],[-75,46],[-78,18],[-34,21],[-33,11],[-9,16],[-3,13],[6,11],[14,10],[4,9],[-13,25],[-6,24],[-22,35],[-4,20],[0,13],[4,14],[15,25],[8,5],[46,4],[60,13],[139,37],[305,47],[93,-4],[40,9],[75,4]],[[17902,96407],[21,-23],[2,-9],[-10,-9],[-33,-15],[-164,-51],[-32,-24],[12,-20],[59,-41],[60,-35],[13,-18],[-28,-17],[-55,5],[-20,-1],[-20,-8],[6,-16],[60,-52],[20,-28],[0,-14],[-11,-14],[-26,-19],[-40,-25],[-68,-19],[-148,-26],[-5,-21],[1,-15],[-3,-38],[-6,-18],[-17,-29],[-13,-14],[-22,-9],[-32,-6],[-40,0],[-67,26],[-30,16],[-42,35],[-8,24],[5,28],[11,45],[18,46],[25,46],[8,29],[-10,12],[-18,0],[-54,-19],[-35,-7],[-27,-13],[-20,-21],[-11,-22],[-6,-43],[-10,-23],[-29,-13],[-44,0],[-17,-7],[-8,-16],[6,-12],[43,-27],[6,-30],[-6,-18],[-46,-33],[-11,-11],[-29,-52],[-11,-13],[-24,-12],[-24,1],[-23,19],[-33,36],[-22,31],[-12,26],[-9,11],[-16,-8],[-19,-26],[0,-21],[4,-31],[-1,-19],[-28,-23],[4,-10],[49,-28],[6,-12],[0,-19],[-3,-9],[-20,1],[-16,-22],[-19,-17],[-49,-33],[-69,-4],[-57,-16],[-12,1],[-14,26],[-15,50],[-14,29],[-20,15],[-26,58],[-12,18],[-11,8],[-10,2],[-15,-12],[-33,-82],[-54,-21],[-29,-4],[-30,2],[-74,23],[-60,8],[-41,-9],[-68,-34],[-27,-9],[-37,4],[-16,13],[-14,21],[-1,12],[10,5],[17,24],[0,9],[-17,14],[0,11],[6,7],[-2,6],[-8,3],[-17,-3],[-61,-16],[7,17],[29,37],[71,72],[26,21],[16,6],[209,24],[15,7],[99,97],[28,22],[29,18],[143,58],[13,14],[22,40],[13,10],[31,16],[102,82],[94,59],[47,37],[65,37],[75,16],[227,28],[163,-37],[38,-2],[19,10],[17,17],[25,-7],[60,-5],[14,4],[25,19],[-17,11],[-73,19],[-5,10],[2,9],[26,23],[31,14],[90,11],[41,-3],[43,-15],[55,-32],[127,-56]],[[19919,95654],[35,-1],[41,6],[46,-4],[21,-13],[15,-23],[0,-13],[-3,-10],[-6,-9],[-60,-58],[-14,-20],[19,-5],[10,3],[59,44],[45,13],[34,4],[57,-9],[22,-8],[15,-8],[9,-11],[22,-41],[16,-54],[2,5],[1,31],[3,23],[55,16],[1,5],[-20,13],[-16,18],[-12,33],[4,12],[12,14],[35,28],[42,17],[36,4],[137,-29],[54,-25],[21,-12],[8,-9],[12,-28],[23,-78],[-1,-25],[-10,-40],[-44,-76],[-7,-51],[-44,-127],[-31,-35],[-33,-24],[-138,-43],[-104,-43],[-26,-7],[-27,-1],[-86,15],[-99,27],[-57,-7],[-56,-20],[-36,-6],[-33,3],[-33,7],[-44,19],[23,8],[10,10],[-9,10],[-46,14],[-48,-32],[-139,-73],[-187,-25],[-58,-15],[-44,-19],[-22,-16],[-35,-38],[-53,-28],[-96,-31],[-123,-48],[-220,-49],[-138,-8],[-138,16],[-44,13],[-46,21],[-93,49],[-26,17],[-31,39],[18,25],[50,30],[75,26],[150,36],[135,58],[49,11],[130,9],[66,-5],[48,3],[31,8],[47,20],[68,42],[50,39],[12,18],[-16,17],[-25,2],[-81,-40],[-41,-13],[-44,-1],[-61,-14],[-60,-5],[-11,0],[-62,39],[-33,6],[-16,-4],[-14,-10],[-26,-28],[-16,-10],[-27,-8],[-107,-8],[-104,-14],[-23,9],[-14,16],[-3,10],[-1,33],[-7,14],[9,28],[12,21],[14,15],[71,43],[10,11],[-34,-2],[-80,-21],[-11,7],[-18,24],[-9,2],[-11,-10],[-6,-14],[-13,-58],[-13,-30],[-32,6],[-40,18],[-15,3],[-9,-6],[3,-10],[41,-50],[0,-17],[-26,-31],[-114,-51],[-44,-13],[-16,5],[-14,14],[-13,22],[-29,31],[-18,7],[-19,1],[-18,-7],[-17,-13],[-10,-15],[-10,-26],[-20,-21],[-13,-3],[-115,42],[-93,75],[-101,-11],[-46,2],[-138,28],[-17,17],[-10,22],[1,12],[6,12],[17,25],[35,37],[15,12],[21,10],[29,8],[73,4],[189,2],[37,5],[206,72],[24,12],[30,23],[7,10],[-1,6],[-254,-57],[-109,-12],[-166,9],[-31,9],[-8,16],[35,42],[18,16],[48,15],[114,21],[154,19],[100,0],[84,15],[51,17],[-170,-1],[-204,-8],[-30,5],[-58,23],[-3,16],[23,19],[9,15],[-17,33],[5,13],[38,27],[68,29],[42,5],[81,-11],[230,-10],[45,4],[-28,13],[-40,9],[-178,17],[-37,7],[-7,10],[-3,15],[2,19],[13,20],[55,42],[162,35],[64,5],[65,-3],[65,-15],[29,-14],[15,-16],[7,-16],[1,-26],[3,-11],[12,-17],[37,-42],[28,-13],[128,24],[53,6],[54,-8],[78,-24],[101,-75],[130,-77],[-1,-16],[-49,-26],[-10,-11],[7,-7],[50,-5],[46,4],[45,-6],[10,-7],[16,-28],[23,-49],[27,-37],[31,-24],[31,-13],[45,-1],[46,8],[74,-3],[381,-28],[23,5],[16,15],[9,26],[4,22],[-5,29],[-8,14],[-236,94],[-21,38],[116,54],[8,12],[2,17],[-4,21],[-15,21],[-62,39],[-55,6],[-82,38],[-12,10],[-11,15],[-8,21],[1,16],[11,12],[80,39],[33,21],[100,98],[46,39],[33,19],[34,11],[74,5],[77,-36],[17,-2],[7,-10],[-3,-17],[-10,-16],[-27,-29],[-7,-12],[2,-13],[19,-29],[6,-19],[4,-32],[3,-5],[47,-27],[42,-36],[20,-55],[-16,-19],[-35,-27],[-21,-22],[-7,-18],[5,-10],[27,-6]],[[18188,93659],[18,-7],[32,6],[47,19],[60,15],[74,13],[19,-15],[12,3],[22,24],[4,16],[-3,18],[1,40],[12,23],[44,50],[23,18],[37,9],[89,-6],[84,-28],[112,-28],[165,-71],[52,-30],[5,-26],[-29,-55],[-71,-79],[-57,-28],[-22,-18],[37,-12],[24,-20],[36,29],[27,33],[38,27],[13,3],[3,-6],[-7,-14],[-2,-14],[1,-13],[4,-8],[23,-4],[13,5],[50,38],[49,59],[75,38],[20,19],[65,16],[-1,12],[3,44],[-22,19],[-77,40],[-37,48],[8,37],[42,-5],[115,-4],[24,-5],[111,-62],[39,-39],[31,-19],[65,-28],[22,-23],[16,-9],[5,-10],[-5,-10],[-2,-23],[12,-8],[42,-9],[12,-9],[16,-30],[19,-50],[17,-55],[27,-103],[54,-137],[18,-86],[7,-16],[12,-11],[34,-16],[27,-22],[31,-7],[7,2],[8,19],[20,31],[94,59],[5,9],[-11,14],[-3,9],[1,7],[20,5],[-66,75],[-43,71],[-27,89],[-4,25],[-4,55],[-9,15],[-15,13],[-6,17],[2,21],[-3,18],[-17,37],[-67,261],[0,26],[9,19],[24,11],[38,2],[13,6],[-15,10],[-25,27],[-3,13],[17,26],[86,-11],[62,-24],[106,-55],[11,3],[12,28],[22,17],[34,-6],[96,-40],[112,-71],[74,-36],[53,-48],[35,-45],[23,-35],[1,-13],[-5,-14],[5,-19],[16,-22],[8,-20],[7,-43],[15,-56],[3,-28],[99,-250],[19,-45],[12,-20],[69,-97],[37,-70],[3,-48],[5,-13],[2,-22],[-2,-30],[-8,-25],[-14,-22],[-14,-30],[-22,-67],[-1,-16],[15,-23],[97,-79],[59,-95],[28,-16],[74,-59],[81,-34],[27,-15],[26,-21],[7,-1],[16,4],[4,6],[1,9],[-22,45],[-2,17],[11,3],[83,-76],[45,-31],[61,-32],[105,-74],[15,-6],[57,7],[15,-5],[10,-7],[4,-10],[2,-44],[16,-21],[90,9],[25,-2],[16,-7],[13,-14],[20,-47],[17,-92],[1,-33],[-8,-56],[-13,-20],[-17,-7],[-48,7],[-33,17],[-18,23],[-16,48],[-7,10],[-7,-10],[-16,-45],[-10,-19],[-13,-14],[-24,4],[-35,19],[-66,50],[-23,12],[-15,-2],[-31,-17],[-49,-31],[-20,-23],[8,-15],[6,-19],[3,-22],[-2,-17],[-6,-10],[-16,-13],[-34,-2],[-49,9],[-39,18],[-68,46],[-15,6],[-21,-10],[-8,-14],[13,-19],[34,-24],[42,-41],[11,-8],[11,0],[4,-7],[5,-22],[-2,-38],[-21,-76],[-2,-18],[9,4],[57,75],[29,21],[65,32],[27,24],[82,7],[30,-13],[18,-23],[1,-10],[-21,-27],[-4,-14],[-1,-17],[2,-15],[5,-13],[14,-13],[26,6],[8,-4],[14,-13],[9,-20],[0,-29],[-19,-62],[-34,-21],[-105,-37],[-36,-20],[-70,-14],[-26,-18],[-17,-5],[-74,2],[-85,-11],[-98,23],[-69,10],[-79,36],[-30,-9],[-31,-24],[-148,28],[-18,20],[6,14],[35,42],[2,9],[-1,8],[-68,7],[-75,23],[-75,11],[-57,-3],[-37,8],[-36,19],[-19,17],[-4,16],[0,17],[3,34],[-5,24],[-16,18],[-34,17],[-33,-2],[-28,-18],[-26,-35],[-50,-96],[-24,-16],[-65,-70],[-24,-17],[-117,-27],[-140,-11],[-52,-22],[-49,-40],[-60,-39],[-146,-48],[-135,-27],[-142,-12],[-105,-18],[-31,9],[-47,-3],[-51,-27],[-57,-5],[-219,-10],[-100,-17],[-55,-5],[-44,2],[-30,8],[-28,23],[-30,37],[-60,97],[-17,41],[6,70],[-4,40],[-20,88],[-4,7],[-105,33],[-70,10],[-104,2],[-128,-4],[-127,10],[-68,12],[-67,19],[-114,51],[-7,5],[-8,17],[-12,28],[-28,37],[-78,82],[-31,49],[-5,13],[-7,36],[-10,59],[-3,36],[9,22],[7,5],[162,43],[284,47],[261,32],[118,-3],[69,-15],[70,-7],[126,-3],[160,-22],[31,2],[72,15],[21,12],[113,-2],[22,8],[20,13],[-26,25],[-108,55],[-286,97],[-70,21],[-100,22],[-58,3],[-74,-12],[-28,0],[-72,-19],[-69,-12],[-131,-12],[-189,-8],[-26,2],[-39,15],[-28,4],[-185,-11],[-165,15],[-188,149],[-32,46],[7,18],[23,20],[93,58],[34,13],[139,31],[138,38],[110,35],[53,12],[52,2],[42,11],[-9,11],[-34,13],[0,18],[18,9],[69,9],[72,-11],[37,3],[10,13],[-10,9],[-69,21],[-331,-59],[-155,-5],[-107,-26],[-59,1],[-70,25],[-10,8],[-1,10],[22,34],[75,20],[38,57],[-41,1],[-134,-12],[-59,5],[-79,22],[-23,26],[-10,18],[-2,23],[3,63],[6,34],[5,8],[98,105],[62,22],[43,33],[1,13],[-10,14],[-40,34],[-17,17],[-9,17],[7,25],[23,36],[67,57],[162,114],[82,48],[79,26],[110,55],[284,91],[254,92],[93,-24],[27,-19],[12,-16],[10,-23],[9,-29],[12,-63],[1,-32],[-2,-33],[-6,-29],[-9,-27],[-19,-32],[-29,-38],[-60,-65],[-7,-19]],[[16740,94534],[2,-2],[71,53],[44,3],[30,-5],[10,-6],[6,-11],[3,-23],[2,-58],[4,-7],[9,3],[16,14],[78,85],[33,23],[23,7],[96,13],[65,0],[71,-8],[54,-12],[88,-35],[69,-40],[63,-43],[212,-161],[90,-47],[35,-27],[15,-20],[13,-25],[4,-23],[-5,-21],[-10,-15],[-21,-13],[-130,-54],[-69,-16],[-67,-24],[-162,-84],[-111,-40],[-144,-78],[-272,-126],[-32,-25],[-15,-18],[-77,-143],[-29,-33],[-71,-34],[-89,-9],[-25,-9],[-5,-50],[-32,-82],[-15,-55],[-22,-148],[-5,-15],[-16,-28],[-28,-29],[-86,-35],[-64,-18],[-86,-15],[-21,10],[-21,24],[-22,2],[-13,-4],[-114,-103],[-109,-41],[-47,-38],[-33,-18],[-27,-5],[-44,3],[-32,17],[-29,27],[-22,28],[-56,118],[-24,40],[-21,20],[-55,72],[-15,14],[-209,91],[-101,51],[-25,18],[-23,11],[-130,-7],[-18,2],[-4,8],[15,27],[6,16],[2,17],[-2,27],[2,4],[49,27],[-8,5],[-5,10],[-4,15],[5,11],[15,6],[17,24],[21,43],[15,24],[22,16],[38,41],[27,17],[23,21],[1,9],[-10,8],[-3,16],[5,50],[-1,25],[5,22],[8,17],[11,11],[97,37],[4,10],[2,12],[-3,14],[-5,9],[-15,8],[-26,2],[-23,21],[-5,10],[9,29],[44,45],[14,22],[48,101],[86,63],[23,67],[65,72],[0,10],[-21,24],[-60,17],[-29,26],[-19,29],[-87,170],[-15,13],[-5,20],[-18,13],[4,12],[341,51],[235,16],[243,44],[68,2],[52,-8],[52,-23],[69,-40],[90,-39],[170,-58],[106,-12],[-42,-45],[-6,-14],[0,-10]],[[30697,99663],[227,-10],[73,4],[84,-26],[51,-3],[83,5],[61,-6],[226,-6],[47,-10],[-1,-11],[-48,-26],[-66,-25],[-423,-82],[-31,-13],[83,-4],[121,3],[94,9],[111,28],[37,2],[70,13],[137,38],[109,20],[49,-9],[42,-14],[28,-2],[15,11],[23,30],[14,11],[36,7],[22,-1],[35,-14],[40,-33],[36,-23],[20,0],[83,26],[41,3],[96,-9],[39,-12],[7,-12],[-25,-13],[-16,-11],[-6,-10],[14,-11],[58,-23],[83,-51],[-1,-19],[-45,-38],[1,-9],[214,40],[217,-18],[61,-12],[23,-15],[25,-24],[27,-34],[-19,-35],[-95,-55],[-98,-43],[-58,-38],[-88,-22],[-305,-92],[-149,-30],[-85,-30],[-39,-5],[-181,6],[-48,-16],[-26,-28],[-58,-13],[-84,-9],[-172,-7],[-39,-31],[-10,-21],[-17,-16],[-15,-8],[-492,-111],[-10,-18],[50,-8],[63,8],[717,134],[137,9],[128,-10],[-14,-31],[-181,-88],[-231,-80],[-115,-61],[-291,-104],[-237,-105],[-92,-52],[-122,-95],[-42,-23],[-51,-9],[-60,4],[-54,14],[-72,35],[-65,39],[-21,7],[13,-19],[126,-132],[-14,-25],[-232,-27],[-103,-23],[-53,-6],[-38,4],[-36,-2],[-36,-10],[-2,-10],[32,-11],[92,-9],[206,30],[33,-2],[52,-15],[3,-13],[-55,-42],[-166,-50],[21,-2],[48,-18],[-1,-16],[-52,-38],[-25,-12],[-160,-35],[-70,-8],[-62,4],[-281,77],[-99,11],[-94,19],[-69,-3],[-74,-22],[33,-12],[136,-21],[114,-4],[47,-9],[18,-14],[49,-51],[8,-27],[-11,-25],[-15,-18],[-18,-10],[-30,-5],[-111,3],[-41,-6],[-48,-15],[-61,-6],[-109,3],[-128,-22],[-67,-4],[-76,10],[-81,24],[-86,12],[-145,11],[12,-14],[51,-6],[104,-37],[50,-51],[47,-8],[96,-42],[69,-6],[72,-14],[102,18],[68,-3],[-14,-102],[-30,-10],[-164,0],[-79,15],[-34,15],[-76,17],[-68,-10],[-62,2],[-42,-10],[-67,1],[-174,-18],[-92,0],[-68,11],[-79,4],[-90,-4],[7,-12],[38,-4],[55,-19],[52,-29],[43,-13],[51,7],[52,14],[190,23],[84,3],[75,-10],[49,-12],[35,-15],[44,-40],[109,-5],[84,-13],[133,-58],[37,-4],[15,-15],[-28,-38],[-4,-22],[-92,-44],[-144,-12],[-158,4],[-113,-5],[-12,-6],[78,-11],[180,-51],[69,-28],[13,-16],[-100,-61],[-87,-122],[-29,-10],[-30,-3],[-77,2],[-98,-30],[-74,-6],[-134,11],[-154,-1],[-13,-19],[-7,-38],[1,-57],[9,-76],[-8,-56],[-26,-35],[-32,-26],[-58,-25],[-60,-16],[-44,-5],[-75,-1],[-213,-18],[-105,1],[-81,8],[-83,25],[-140,71],[-40,16],[-38,9],[1,-15],[42,-40],[35,-26],[28,-11],[-7,-12],[-62,-20],[-67,-8],[-81,0],[-2,-7],[27,-21],[35,-19],[24,-6],[61,6],[72,24],[44,8],[89,-6],[35,-9],[110,-54],[16,-2],[82,27],[118,1],[44,-21],[16,-43],[2,-34],[-12,-26],[27,-25],[67,-25],[52,-6],[37,14],[56,35],[24,8],[23,-2],[34,-25],[46,-48],[5,-56],[-38,-64],[-46,-42],[-180,-69],[-55,-27],[-43,-28],[-63,-26],[-123,-34],[-64,-6],[-140,-37],[-31,-2],[-45,6],[-9,18],[11,32],[15,30],[19,27],[0,23],[-39,35],[-28,16],[-27,9],[-54,-5],[-30,-10],[-33,-2],[-35,6],[-29,15],[-59,63],[-22,8],[-29,-2],[-25,9],[-23,20],[-38,19],[10,-15],[38,-35],[26,-36],[15,-35],[-7,-27],[-321,-16],[-138,8],[-28,25],[-66,103],[-14,-183],[-241,-30],[-56,5],[-93,20],[-121,50],[-50,33],[-20,32],[-15,18],[-9,3],[-30,-39],[-33,-81],[-83,21],[-104,20],[-38,80],[-2,-115],[-169,15],[-81,-4],[-23,100],[-4,112],[-33,-71],[14,-59],[5,-73],[-72,21],[-157,10],[-56,10],[7,96],[13,97],[202,96],[60,45],[44,18],[69,12],[89,7],[60,-6],[70,6],[82,17],[59,5],[11,6],[-17,9],[-63,62],[-23,14],[-23,6],[-45,3],[-45,27],[-25,24],[-28,32],[-43,62],[-44,69],[22,37],[72,30],[72,21],[73,11],[60,0],[73,-16],[103,-32],[59,-36],[74,-76],[49,-61],[39,-27],[177,-50],[59,-8],[70,4],[143,13],[70,14],[31,16],[16,23],[21,18],[63,41],[96,85],[54,68],[12,22],[11,28],[9,32],[-30,-17],[-167,-167],[-35,-30],[-97,-51],[-42,-8],[-66,2],[-89,23],[-104,-36],[-63,9],[-56,25],[0,118],[-71,95],[78,48],[65,29],[115,77],[26,1],[84,-12],[-46,17],[-45,26],[-100,-7],[35,166],[-67,-124],[-68,-65],[-42,-33],[-46,-18],[-176,-17],[43,61],[40,90],[-42,-34],[-99,-50],[-74,-27],[-61,-14],[-118,4],[-59,25],[17,62],[0,77],[36,35],[54,46],[59,61],[40,63],[158,29],[153,11],[128,34],[63,6],[60,-16],[244,-26],[100,-20],[44,-15],[33,-5],[34,22],[44,21],[152,-2],[42,3],[39,10],[47,20],[56,30],[8,15],[-38,-1],[-39,-8],[-58,-21],[-56,-12],[-57,2],[-115,19],[-200,3],[-102,8],[-47,9],[-27,12],[-23,19],[-20,25],[10,17],[41,10],[35,2],[57,-14],[63,-23],[69,-3],[-24,21],[-88,42],[-60,36],[-51,44],[-40,43],[-87,68],[-70,68],[-50,30],[-52,15],[-160,18],[-32,12],[-76,59],[-20,100],[-34,61],[32,77],[54,35],[318,-27],[135,4],[172,-10],[92,-19],[106,-47],[94,-53],[91,-36],[83,-48],[91,-73],[54,-34],[47,-21],[62,-19],[118,-23],[103,-7],[53,3],[57,16],[41,20],[-45,6],[-119,-3],[-82,11],[-47,23],[-50,31],[-79,59],[-60,39],[-131,63],[-97,62],[-78,60],[-7,25],[56,18],[69,13],[432,40],[258,48],[105,56],[12,13],[346,78],[244,29],[94,5],[85,13],[3,7],[-74,11],[-75,5],[-171,0],[-152,9],[-46,18],[10,28],[14,25],[46,40],[49,31],[209,88],[140,38],[41,25],[-302,-57],[-106,-41],[-106,-62],[-55,-19],[-39,5],[-35,-6],[-31,-16],[-25,-30],[-21,-44],[-19,-30],[-17,-16],[-43,-23],[-104,-44],[-242,-63],[-82,-16],[-70,-3],[-226,-35],[-68,-2],[-76,11],[33,31],[119,56],[32,25],[-77,-5],[-78,-16],[-172,-12],[-69,-23],[-66,-42],[-53,-26],[-40,-11],[-55,-6],[-202,-3],[-45,2],[-116,32],[-103,-11],[-43,2],[-78,23],[-23,14],[3,20],[45,37],[53,35],[170,78],[109,37],[158,31],[369,35],[17,26],[-374,-29],[-318,-36],[-52,-14],[-74,-35],[-235,-129],[-70,-33],[-106,-7],[-81,11],[-63,16],[-109,38],[-83,21],[-39,13],[-23,14],[-18,17],[-15,18],[27,16],[210,33],[284,-6],[128,7],[125,20],[186,51],[201,71],[40,22],[-74,5],[-54,-5],[-131,-26],[-208,-68],[-181,-24],[-448,-13],[-142,-19],[-63,4],[-47,19],[-52,34],[9,28],[107,31],[84,7],[15,7],[-119,30],[-11,15],[69,34],[148,50],[76,15],[137,10],[142,-5],[5,9],[-140,19],[-105,4],[-138,-14],[-369,-80],[-31,2],[-53,14],[15,20],[197,85],[6,13],[-141,-2],[-42,4],[-40,10],[-58,-9],[-75,-27],[-52,-12],[-31,4],[-78,33],[10,27],[62,35],[57,25],[77,23],[126,29],[90,10],[148,0],[70,13],[62,22],[78,36],[86,25],[140,20],[118,-6],[65,-18],[51,-31],[56,-24],[5,19],[46,24],[58,10],[69,-3],[61,-12],[79,-28],[63,-13],[30,0],[38,16],[99,1],[-2,6],[-32,17],[-40,12],[-352,82],[-10,18],[119,17],[74,21],[35,5],[87,43],[57,22],[105,25],[43,-7],[53,-22],[51,-14],[151,-13],[65,-14],[115,-81],[46,-26],[66,-27],[39,-10],[77,-6],[8,15],[-92,38],[-25,22],[11,18],[20,10],[28,1],[72,-17],[192,-56],[288,-67],[110,-15],[68,-24],[62,-29],[61,-20],[11,2],[-57,45],[-139,55],[-371,94],[-147,50],[-72,33],[-53,34],[-1,19],[50,21],[68,17],[85,7],[11,7],[-78,26],[-45,22],[1,16],[93,12],[57,-4],[108,-28],[91,-13],[15,8],[-94,75],[-9,17],[14,9],[33,10],[98,-5],[161,-37],[290,-18],[79,3],[-12,8],[-115,23],[-121,30],[-53,18],[-39,24],[-47,21],[-4,9],[75,16],[196,-3],[182,-24],[155,9],[97,-6],[39,-8],[70,-26],[224,-96],[23,-15],[26,-23],[27,-32],[38,-8],[74,21],[49,21],[-21,20],[-124,46],[-28,20],[-61,34],[-139,59],[-37,28],[-23,24],[383,22],[370,-20],[60,-14],[40,-19],[38,-30],[60,-30],[119,-46],[171,-29],[-33,20],[-127,51],[-58,35],[1,23],[10,18],[20,13],[144,47],[206,15],[24,-3],[161,-73],[76,-30],[53,-12],[2,5],[-74,34],[-56,18],[-6,12],[94,35],[59,9],[251,10],[28,-3],[24,-10],[59,-39],[22,-5]],[[23476,96654],[70,-22],[76,11],[81,2],[182,-10],[120,6],[31,-3],[47,-14],[25,-18],[23,-28],[-59,-18],[-50,-89],[-7,-5],[-54,-1],[-27,-7],[-159,13],[-438,5],[-19,11],[-58,53],[-4,21],[11,24],[12,16],[14,8],[128,39],[55,6]],[[24016,95061],[18,-43],[3,-18],[1,-37],[-8,-49],[-5,-9],[-7,-4],[-4,-13],[0,-21],[-7,-12],[-15,-5],[-99,-10],[-62,2],[-91,-6],[-45,3],[-30,11],[-43,22],[-91,55],[-45,2],[-116,19],[-63,58],[-24,11],[-25,-18],[-7,4],[-6,12],[-7,20],[-12,10],[-48,-5],[-9,6],[-2,18],[0,15],[9,23],[51,65],[25,5],[31,12],[17,35],[-2,33],[48,49],[28,15],[51,34],[172,54],[48,4],[63,-4],[62,-17],[47,-28],[97,-70],[44,-43],[23,-43],[21,-25],[26,-54],[-9,-21],[-6,-28],[3,-14]],[[22221,94438],[235,-123],[33,10],[71,6],[73,19],[102,15],[63,27],[26,8],[45,5],[25,0],[70,-15],[29,-11],[15,-11],[16,-19],[28,-49],[4,-18],[-1,-5],[-26,-30],[-17,-13],[-36,-12],[-30,-4],[-27,-21],[-29,5],[-9,-19],[4,-12],[8,-6],[15,1],[17,8],[33,-4],[18,-13],[15,-21],[-11,-20],[-59,-27],[-87,-31],[-105,-98],[-56,-41],[-11,-13],[-6,-13],[2,-24],[2,-10],[16,-4],[51,34],[34,16],[33,9],[60,0],[25,-5],[44,-20],[41,-32],[9,-11],[-4,-11],[-17,-12],[-2,-8],[39,-15],[43,-43],[3,-26],[-19,-26],[-5,-18],[9,-8],[21,5],[51,29],[55,15],[22,-2],[14,-6],[14,-40],[12,-45],[2,-37],[-9,-31],[-13,-23],[-33,-30],[-30,-11],[-16,0],[2,-5],[35,-25],[15,-19],[6,-19],[-2,-18],[-5,-16],[-41,-57],[2,-9],[12,-3],[26,-33],[3,-78],[-93,-24],[-22,-18],[-25,-28],[-29,-22],[-67,-22],[-33,-3],[-167,19],[-17,11],[-11,19],[-7,29],[-1,22],[2,16],[0,9],[-5,3],[-19,-16],[-19,-29],[11,-33],[52,-91],[10,-39],[2,-16],[-3,-13],[-59,-53],[-34,-18],[-36,-9],[-33,7],[-32,22],[-24,10],[-51,-1],[-15,11],[-15,22],[-35,76],[-50,54],[-42,61],[-108,89],[-56,53],[-75,86],[-31,19],[-26,8],[-51,6],[-12,11],[-19,29],[-32,22],[-11,3],[-19,-6],[-50,-20],[-63,22],[-14,15],[-8,25],[-8,14],[-21,13],[-18,31],[-119,63],[-71,72],[-14,26],[-2,10],[7,35],[17,39],[21,39],[14,16],[46,33],[37,8],[51,-4],[27,-8],[24,-22],[11,-26],[12,-18],[38,-19],[20,-15],[30,-36],[24,-43],[21,-14],[52,-5],[53,7],[114,27],[5,4],[7,16],[13,98],[8,0],[39,-45],[11,-5],[16,9],[10,23],[-1,10],[-24,53],[-15,23],[-13,15],[-14,4],[-31,-4],[-24,10],[-5,15],[4,19],[13,21],[14,12],[27,6],[32,-6],[44,-25],[28,-6],[40,7],[-51,15],[-70,58],[-30,11],[-36,-25],[-25,-9],[-47,-12],[-37,-2],[-156,89],[-9,9],[-11,23],[1,11],[16,17],[38,22],[58,13],[39,3],[34,-17],[49,-44],[43,-26],[4,9],[-8,26],[-20,38],[-14,10],[-34,11],[-33,26],[-15,20],[-8,20],[-1,22],[7,15],[13,8],[120,22],[83,-24],[53,-4],[22,30],[-7,6],[-28,-8],[-32,0],[-19,17],[-1,9],[25,23],[37,10]],[[26411,89435],[10,-7],[11,4],[20,29],[44,82],[13,7],[18,-1],[65,-52],[24,-30],[13,-41],[14,-16],[51,-21],[49,-7],[65,-21],[23,-16],[51,-78],[6,-5],[59,-32],[89,-72],[23,-10],[87,-24],[32,-17],[30,-27],[34,-49],[39,-77],[31,-123],[2,-24],[-3,-14],[-12,-16],[-50,-50],[4,-9],[48,4],[105,31],[65,-23],[22,-3],[5,1],[24,39],[25,-6],[38,-38],[24,-30],[10,-23],[-2,-13],[-25,-5],[60,-22],[53,-35],[-11,-23],[-57,-51],[-57,-45],[-67,-66],[-17,-11],[-9,0],[-37,12],[-54,32],[-164,73],[-51,15],[-64,9],[-9,17],[-16,110],[-29,19],[-99,23],[-29,13],[-2,22],[7,38],[-14,19],[-33,-1],[-33,-8],[-53,-26],[-25,-24],[-9,-25],[-6,-55],[-7,-26],[-18,-35],[-82,-88],[-33,-27],[-33,-7],[-13,-9],[-22,-32],[-33,-80],[-14,-23],[-21,-24],[-46,-36],[-46,-29],[-77,-33],[-42,-11],[-29,11],[-20,76],[-41,223],[-7,15],[-8,9],[-10,4],[-138,-29],[-76,3],[-75,-50],[-19,-3],[-39,1],[-27,8],[-7,6],[-5,21],[2,23],[9,25],[34,66],[28,41],[13,13],[129,74],[31,24],[16,25],[0,25],[-6,33],[-23,80],[-5,73],[0,36],[8,55],[33,135],[11,66],[20,234],[11,67],[16,62],[15,37],[42,73],[31,30],[41,20],[8,-2],[8,-9],[15,-31],[56,-29],[18,-28],[12,-31],[7,-40],[-7,-18],[-26,-27],[-5,-11],[1,-9],[51,-42],[38,-102]],[[22861,95890],[3,-26],[-4,-19],[-9,-14],[-1,-17],[9,-18],[37,-45],[12,-25],[2,-25],[-2,-17],[-23,-32],[-10,-43],[-1,-22],[14,-35],[0,-16],[-26,-28],[-54,-25],[8,-13],[117,-30],[9,-7],[0,-70],[20,-76],[-8,-1],[-28,24],[-52,28],[-63,-53],[7,-90],[42,-40],[12,-23],[-4,-13],[-35,-6],[-12,2],[-35,19],[-21,27],[-7,-1],[-6,-13],[4,-14],[24,-24],[11,-29],[-11,-8],[-36,-8],[-48,0],[-76,-13],[-38,-2],[-36,7],[-49,1],[-41,-3],[-24,6],[-23,14],[-26,-3],[-57,-35],[-89,11],[-80,3],[-16,11],[-18,23],[-35,70],[6,18],[86,9],[2,6],[-61,25],[-70,18],[-32,15],[7,27],[-2,7],[120,32],[88,62],[54,25],[4,12],[46,13],[106,7],[4,18],[-200,-10],[-274,-35],[-85,-18],[-71,10],[-300,-54],[-13,0],[-31,17],[-27,33],[19,22],[88,43],[44,37],[-5,21],[35,35],[56,5],[96,-29],[49,-29],[45,-14],[39,3],[41,20],[-11,3],[-69,-11],[-8,3],[-35,33],[-15,20],[-10,21],[-1,15],[21,28],[-79,9],[-29,19],[-14,24],[3,11],[25,28],[67,39],[-8,10],[-97,-1],[-22,5],[-42,24],[9,27],[39,39],[30,23],[19,7],[31,0],[73,-15],[21,-8],[56,-38],[14,-21],[-2,-21],[11,-15],[43,-22],[186,-115],[35,-27],[23,-12],[43,-9],[26,2],[20,8],[3,10],[-80,40],[-20,22],[-17,29],[7,9],[24,4],[58,-4],[69,8],[-76,12],[-50,16],[-52,1],[-64,26],[0,8],[16,9],[87,11],[17,5],[1,7],[-29,18],[-26,9],[-132,21],[-47,24],[-15,11],[-4,11],[17,28],[71,35],[51,17],[89,12],[71,-1],[40,-5],[94,-59],[45,-39],[77,7],[-22,40],[-15,45],[23,17],[64,29],[51,-15],[66,-40],[15,-13],[75,-25],[44,-8],[23,-13],[7,-17]],[[21270,97531],[65,-11],[77,-37],[73,-79],[4,-10],[0,-13],[-3,-16],[-9,-21],[-13,-12],[37,-15],[4,-8],[-3,-17],[4,-12],[23,12],[19,19],[5,12],[4,32],[57,17],[60,23],[28,5],[47,-5],[112,-56],[43,-5],[16,-7],[14,-13],[1,-14],[-23,-32],[-9,-20],[6,-13],[58,-11],[134,22],[117,-53],[65,-63],[47,-21],[8,-11],[-14,-11],[-13,-29],[-39,-22],[-8,-10],[21,-26],[1,-17],[-2,-22],[7,-13],[53,-14],[119,-93],[22,-26],[14,-32],[1,-11],[-17,-18],[-19,-51],[-10,-12],[-49,-10],[-88,-9],[-83,-17],[-88,22],[-87,34],[-26,22],[-22,28],[-5,10],[-9,44],[-4,9],[-37,24],[-32,37],[-63,3],[-147,38],[-63,8],[-64,-2],[-89,-15],[-17,4],[-15,11],[-14,18],[-3,14],[14,23],[-262,-29],[-75,-35],[-105,6],[-53,14],[-69,33],[-32,29],[-30,38],[-3,29],[24,20],[25,11],[26,4],[142,-23],[125,-11],[54,11],[25,32],[-30,16],[-120,7],[26,17],[101,16],[53,26],[-10,8],[-30,10],[-137,-2],[-48,9],[-3,9],[11,10],[77,51],[-3,10],[-33,16],[-29,22],[-11,3],[-68,-20],[-95,-75],[-22,-11],[-22,1],[-21,12],[1,16],[21,19],[44,58],[-4,21],[-42,14],[-114,-10],[-63,-1],[-9,17],[-3,30],[3,29],[15,45],[22,35],[13,12],[151,-7],[245,21],[71,2],[78,-21]],[[24476,98578],[36,-48],[134,-115],[61,-42],[103,-51],[13,-19],[1,-8],[-3,-28],[30,-10],[88,-16],[99,-28],[18,1],[34,17],[42,5],[54,-4],[26,-12],[19,-18],[8,-13],[1,-10],[-19,-19],[2,-8],[12,-8],[2,-11],[-20,-41],[5,-15],[50,-37],[45,-19],[89,-20],[58,2],[36,-13],[1,8],[-17,23],[-34,34],[-65,18],[-9,19],[-5,34],[6,22],[33,18],[27,6],[84,1],[45,-8],[80,-25],[8,-14],[4,-27],[3,-54],[-2,-12],[-67,-30],[-15,-21],[17,-6],[58,-5],[90,-19],[35,-2],[35,-44],[27,-41],[-20,-52],[-26,-82],[-21,-19],[-21,-28],[15,-6],[88,12],[18,4],[59,28],[86,-7],[29,-7],[15,-10],[26,-31],[22,-41],[16,3],[40,51],[15,12],[20,12],[9,-2],[40,-47],[91,-82],[31,-34],[6,-26],[-39,-29],[-30,-15],[-223,-62],[-99,-35],[-50,-28],[-25,-9],[-54,5],[-12,-5],[-16,-44],[-18,-19],[-46,-30],[-65,-55],[-38,-24],[-68,18],[-17,25],[-10,58],[-1,24],[2,13],[9,20],[29,49],[-3,6],[-14,-5],[-45,-24],[-18,-13],[-16,-23],[-8,-38],[7,-70],[-6,-28],[-18,-14],[7,-11],[53,-15],[9,-7],[6,-12],[3,-17],[-3,-16],[-16,-25],[-30,-10],[-38,11],[-82,61],[-36,-3],[-9,-7],[8,-22],[25,-48],[5,-41],[-12,-33],[-23,-53],[-16,-29],[-9,-3],[-41,-1],[-35,14],[-104,93],[-51,39],[-76,78],[-19,15],[-12,4],[-10,-33],[20,-31],[68,-72],[41,-53],[29,-43],[4,-19],[-9,-7],[-15,4],[-20,16],[-62,25],[-26,15],[-16,16],[-31,13],[-45,8],[-45,2],[-45,-5],[-8,-8],[50,-23],[18,-12],[13,-17],[9,-19],[-17,-13],[-63,-7],[-84,5],[-137,17],[-136,28],[-125,44],[-91,44],[-36,23],[-11,17],[34,16],[119,19],[119,13],[-19,11],[-217,25],[-71,4],[-38,-6],[-44,4],[-34,20],[-45,37],[-23,25],[3,10],[17,5],[99,-4],[13,3],[-49,19],[-157,37],[-59,33],[-11,12],[-4,13],[1,12],[59,25],[183,59],[62,9],[63,1],[44,16],[38,56],[189,20],[146,25],[12,7],[-109,-4],[-155,5],[-65,37],[-45,7],[-49,0],[-57,-12],[-98,-35],[-47,-9],[-107,-36],[-29,3],[-15,4],[-5,7],[19,24],[28,17],[-5,5],[-42,4],[-48,-1],[-34,-6],[-122,-32],[-55,-23],[-17,-3],[-59,38],[-95,20],[-21,16],[20,63],[27,13],[73,11],[217,57],[13,11],[20,29],[-50,-7],[-109,-27],[-90,-14],[-71,0],[-51,4],[-33,8],[-40,17],[-128,83],[-36,39],[-4,36],[-9,26],[-38,65],[276,-40],[107,-8],[208,-2],[10,3],[3,11],[-4,17],[2,13],[7,9],[77,23],[12,8],[-91,4],[-168,-39],[-59,0],[-67,56],[-71,-10],[-34,4],[-53,14],[-26,12],[-16,15],[-7,13],[2,10],[14,12],[62,16],[28,1],[73,-10],[55,1],[-18,17],[-79,43],[-70,47],[5,80],[57,17],[60,2],[58,-20],[77,-2],[56,-23],[37,-44],[44,1],[69,-8],[155,1],[-28,15],[-49,14],[-109,18],[-53,63],[-114,33],[-88,17],[1,15],[67,79],[80,28],[128,-10],[85,14],[108,28],[106,-13],[28,2],[16,8],[14,17],[0,15],[-14,14],[-34,17],[-135,2],[-60,7],[-23,9],[-7,14],[-4,14],[0,15],[4,9],[11,5],[33,6],[126,0],[76,8],[83,-10],[173,-39],[55,-20],[60,-34],[31,-30]],[[23807,96147],[52,-5],[44,8],[38,-2],[56,-23],[53,-36],[40,-16],[13,-8],[5,-9],[6,-27],[0,-12],[-3,-10],[-18,-25],[-15,-30],[-30,-27],[-16,-20],[-14,-26],[31,15],[119,85],[77,-10],[117,7],[141,35],[67,5],[67,-3],[50,-10],[108,-47],[37,-22],[14,-16],[3,-11],[-22,-18],[-67,11],[-111,10],[-20,5],[-18,0],[-12,-6],[8,-25],[22,-5],[133,-6],[436,-78],[19,-25],[-5,-11],[-16,-12],[-31,-17],[-252,-18],[-143,16],[-120,26],[-41,-6],[35,-35],[72,-10],[61,-21],[25,-17],[128,-13],[21,-13],[40,-34],[33,-3],[33,-24],[27,-41],[13,-5],[39,7],[64,-36],[21,-19],[0,-14],[-15,-22],[-29,-31],[-73,-35],[-6,-11],[86,4],[16,-5],[101,-63],[13,-1],[8,6],[10,23],[-4,21],[-13,28],[4,21],[19,13],[19,7],[19,0],[21,-8],[102,-77],[131,37],[24,-17],[20,-30],[9,-5],[49,61],[30,15],[123,-73],[75,-16],[30,-15],[55,-18],[79,-6],[13,27],[-45,35],[26,15],[109,29],[58,-4],[107,42],[66,5],[40,0],[133,63],[31,10],[23,22],[52,-3],[141,-36],[40,3],[150,36],[56,8],[55,-1],[141,-21],[105,-22],[33,-12],[-12,-29],[6,-9],[13,-7],[35,-8],[131,-1],[57,-7],[46,-28],[10,-11],[-1,-11],[-45,-30],[7,-7],[45,-6],[100,-4],[22,-7],[21,-37],[21,-52],[0,-20],[-35,-35],[-95,-46],[-106,-39],[-7,-10],[34,-18],[35,-9],[27,2],[85,18],[19,-1],[38,-18],[18,-17],[17,-24],[-30,-22],[-121,-27],[-72,36],[-24,7],[-16,-3],[9,-15],[35,-28],[11,-18],[-12,-9],[-6,-18],[1,-26],[-3,-27],[-11,-42],[-5,-2],[-263,-8],[-32,-8],[-74,-29],[-56,-15],[-36,-2],[-36,5],[-96,31],[-64,-6],[-25,3],[-55,20],[-13,10],[-22,27],[-16,37],[1,22],[7,32],[-4,17],[-16,0],[-17,6],[-52,33],[-32,10],[-6,-6],[10,-25],[6,-8],[34,-19],[6,-21],[-14,-55],[-5,-8],[-34,-40],[-25,-12],[-68,-1],[-105,-28],[-50,-4],[-67,7],[-42,12],[-27,15],[-27,21],[-13,2],[-7,-46],[-13,-6],[-23,1],[-35,14],[-28,33],[-9,0],[-4,-19],[-7,-13],[-8,-6],[-74,-20],[-41,0],[-43,23],[-28,-2],[-36,-13],[-87,24],[-21,1],[18,-39],[-29,-6],[-62,1],[-103,13],[-64,-19],[-114,11],[-116,3],[-22,9],[-15,18],[-1,16],[6,23],[17,33],[28,45],[10,23],[-26,11],[-15,15],[-13,1],[-41,-17],[-27,-50],[-20,-14],[-9,12],[-7,30],[-9,15],[-11,-1],[-11,-8],[-11,-15],[-15,-6],[-22,4],[-7,-7],[6,-20],[2,-18],[-2,-16],[-18,-17],[-52,-24],[-31,-7],[-79,-4],[-48,7],[-96,29],[-53,1],[-64,48],[-51,11],[3,18],[22,32],[-1,9],[-69,-47],[-10,-15],[9,-34],[-10,-3],[-47,13],[-47,-10],[-12,3],[-32,25],[-57,26],[-25,28],[-39,90],[-20,59],[2,12],[29,16],[-4,13],[-36,34],[-39,28],[-12,19],[-5,20],[-5,28],[-1,21],[5,13],[22,42],[62,76],[8,14],[3,13],[-8,40],[-12,40],[-12,29],[-34,39],[-46,42],[-66,73],[-48,58],[-58,80],[-28,7],[-32,-3],[-70,-28],[-24,-13],[-5,-9],[-52,-2],[-148,7],[-56,9],[-42,-3],[-72,-20],[-77,4],[-48,56],[-110,31],[-33,17],[-22,24],[7,15],[63,14],[26,15],[12,12],[-62,-10],[-27,1],[-186,77],[-57,14],[-10,7],[-4,9],[0,11],[5,17],[55,-22],[25,-1],[39,6],[14,14],[-9,7],[-64,26],[-30,19],[-12,15],[12,20],[3,13],[21,8],[37,1],[48,10],[88,26],[59,10],[59,-2],[142,-27],[142,-34],[89,-26]],[[23276,97079],[66,-15],[113,7],[41,-11],[106,-39],[32,-23],[8,-17],[0,-9],[-35,-19],[-71,-28],[-17,-22],[63,-27],[32,-24],[15,-17],[0,-18],[-42,-48],[-31,-14],[-48,2],[-23,-5],[-60,-22],[-95,-21],[-129,-9],[-35,-13],[-65,-22],[-43,-3],[-14,12],[-6,18],[3,13],[9,15],[-21,15],[-92,28],[-54,39],[-8,13],[-2,11],[119,7],[52,8],[23,13],[4,7],[-23,3],[-82,26],[-138,16],[-7,19],[-57,36],[-6,35],[-12,10],[-39,15],[-6,5],[-12,22],[-1,12],[2,12],[71,23],[-10,16],[-54,61],[-14,34],[2,13],[34,18],[47,0],[124,-5],[59,-8],[59,-14],[65,-22],[97,-19],[31,-12],[58,-41],[7,-12],[-4,-13],[14,-12]],[[24119,94562],[109,-27],[53,-18],[26,-12],[50,-40],[25,-12],[97,24],[68,8],[151,-10],[127,-34],[48,-24],[28,-23],[-7,-26],[-24,-41],[-27,-38],[-56,-61],[-47,-31],[-11,-14],[-8,-21],[-18,-29],[-50,-65],[-14,-11],[-71,-28],[25,-12],[11,-11],[-10,-29],[-45,-69],[-46,-63],[-33,-39],[-59,-55],[-32,-15],[-44,-5],[-263,48],[-66,-1],[-176,-25],[17,-12],[64,-19],[41,-20],[55,-63],[8,-16],[3,-18],[-2,-36],[-4,-9],[-87,-97],[-29,-71],[-18,-58],[-29,-16],[-98,24],[-32,0],[-110,-17],[-52,8],[8,88],[-8,95],[-16,90],[-82,161],[-9,29],[-6,31],[-3,33],[0,33],[6,67],[0,34],[-4,88],[-11,132],[-1,47],[1,19],[3,14],[18,19],[34,13],[17,2],[108,-40],[50,-13],[33,0],[2,5],[-30,8],[-27,18],[-46,51],[-20,44],[-5,14],[-1,16],[3,15],[6,15],[23,22],[18,10],[68,26],[69,15],[151,11],[42,-8],[66,29],[38,6],[67,-10]],[[22933,91959],[9,-7],[16,6],[12,19],[8,4],[12,-4],[39,-34],[29,-35],[32,-25],[50,-23],[110,-73],[32,-49],[34,-77],[31,-58],[26,-41],[29,-32],[46,-36],[41,26],[18,7],[15,-11],[14,-27],[-7,-12],[-18,-16],[-29,-17],[-42,-2],[-20,-5],[-32,-28],[-26,-35],[-36,-11],[-67,-57],[-37,-22],[-55,-5],[-114,44],[-71,-6],[-58,9],[-64,48],[-51,26],[-97,39],[-6,6],[-4,13],[-2,20],[-5,14],[-6,7],[-16,-1],[-15,-14],[-30,-11],[-46,2],[-20,9],[-15,12],[-8,15],[-1,17],[-5,13],[-7,9],[-16,0],[-26,-8],[-10,-11],[5,-13],[-4,-8],[-46,0],[-18,8],[-34,24],[-15,24],[-19,43],[2,11],[12,26],[16,19],[103,10],[48,11],[53,29],[61,52],[13,15],[1,11],[-4,12],[-19,30],[-7,20],[6,9],[25,1],[-13,12],[-11,16],[-4,10],[1,16],[19,4],[24,-8],[47,-47],[18,-9],[32,-7],[-34,32],[-35,67],[-4,24],[1,13],[9,36],[8,14],[11,10],[33,21],[53,14],[28,2],[27,-11],[24,-23],[54,-37],[8,-15],[-1,-7],[-20,-10],[-3,-9],[8,-14]],[[33026,78308],[9,-4],[38,28],[20,-1],[-1,-20],[-32,-22],[-15,-17],[18,-15],[0,-10],[-22,-25],[-11,-27],[9,-26],[36,26],[14,0],[20,-6],[19,8],[11,13],[63,99],[3,13],[-68,-20],[-8,13],[45,61],[-4,31],[23,51],[20,30],[15,16],[22,16],[15,-24],[5,-43],[37,6],[37,-9],[26,-18],[5,-10],[0,-17],[-9,-29],[-15,-25],[30,-31],[-4,-13],[-48,-36],[-28,-35],[-25,-44],[-50,-51],[-80,-36],[-25,0],[-30,11],[-30,-3],[-29,-13],[-29,1],[-13,-7],[-14,1],[-11,14],[-23,41],[-12,27],[-12,130],[4,68],[20,63],[29,43],[17,34],[72,200],[14,45],[17,39],[31,39],[40,64],[12,14],[23,6],[23,-4],[-7,-23],[2,-23],[26,-89],[0,-18],[-15,-71],[-27,-116],[-7,-63],[4,-19],[-11,-32],[-12,-25],[-47,-45],[-24,-11],[-22,-17],[-54,-58]],[[29247,77766],[40,22],[82,85],[61,30],[80,89],[57,17],[11,20],[9,73],[6,26],[26,73],[33,61],[26,84],[47,54],[71,45],[66,98],[36,30],[35,22],[15,40],[21,23],[58,46],[64,13],[64,38],[50,21],[30,36],[44,19],[132,104],[36,49],[48,99],[41,51],[14,54],[60,87],[62,116],[30,83],[46,45],[89,132],[47,52],[20,6],[53,47],[34,48],[54,49],[97,60],[91,72],[123,63],[144,93],[117,50],[82,7],[100,24],[35,-3],[156,-40],[74,-50],[85,-106],[13,-27],[2,-39],[-45,19],[-40,1],[28,-22],[47,-65],[-3,-81],[-26,-73],[-79,-36],[-20,-29],[-16,-47],[-16,-18],[-39,-22],[-21,-30],[-62,-49],[-28,-6],[-32,11],[-78,47],[-47,44],[-24,-24],[-20,-25],[-46,8],[-21,-11],[-34,12],[-71,-56],[20,-6],[56,32],[19,-4],[42,-41],[100,-45],[26,-29],[25,-95],[16,-15],[35,10],[39,47],[32,25],[63,20],[-13,-31],[48,3],[48,-42],[-18,-30],[-24,-59],[-16,-116],[-49,-78],[-64,-76],[16,-19],[19,-11],[41,22],[28,-1],[31,-15],[-10,-59],[-11,-40],[7,-38],[18,-71],[25,-16],[10,-92],[14,-50],[-2,-40],[25,-25],[4,-41],[92,-12],[19,-16],[63,-15],[12,-12],[12,-22],[-63,-49],[51,-36],[47,-59],[38,12],[16,-2],[42,-36],[12,-19],[6,-16],[21,4],[31,14],[54,-4],[59,-20],[-5,-32],[-9,-21],[46,7],[28,-23],[10,11],[7,14],[57,38],[73,79],[9,-9],[3,-30],[10,-49],[28,-34],[33,-8],[45,26],[18,-22],[22,-43],[20,-57],[-1,-20],[-26,-17],[-24,-26],[99,-10],[10,-11],[10,-22],[-10,-22],[-9,-11],[-18,13],[-33,-12],[-28,-29],[-31,-16],[-20,-2],[-22,-14],[-20,-20],[-20,-6],[-65,-52],[-66,-33],[-69,-54],[-71,-34],[-73,-40],[-16,-4],[-19,2],[-41,-40],[-21,6],[-21,-7],[-25,9],[-16,16],[13,-42],[3,-39],[-6,-16],[-12,-20],[-42,3],[-16,14],[-20,21],[-9,33],[-21,24],[-13,-33],[1,-25],[-16,-33],[-18,57],[-34,-21],[-14,-61],[7,-17],[10,-46],[-16,-25],[-12,7],[-25,-68],[-31,-25],[-31,-69],[-37,-53],[-11,-36],[-62,-81],[-24,2],[-17,-2],[-26,-34],[-5,-68],[-11,9],[-12,-2],[-6,-22],[-9,-3],[-23,20],[-27,-11],[-21,15],[-27,100],[-14,35],[-26,12],[-6,-22],[-10,-20],[-25,41],[-18,153],[0,37],[26,129],[64,116],[-21,4],[-56,-81],[6,20],[9,20],[19,33],[29,31],[39,17],[27,3],[18,17],[27,30],[5,16],[-24,-18],[-39,-18],[10,23],[10,13],[209,208],[42,34],[84,44],[12,28],[-12,19],[33,-17],[-3,-23],[-5,-18],[-2,-29],[3,-28],[34,-14],[27,-52],[-13,71],[25,40],[96,54],[80,6],[25,25],[-68,17],[-81,-9],[-50,19],[-70,-12],[-73,11],[-22,-15],[-19,-34],[-23,15],[-12,3],[-11,11],[24,58],[74,87],[46,75],[12,15],[10,31],[-24,-5],[-22,-12],[-15,34],[-27,47],[-2,-20],[13,-57],[-51,-101],[-34,-7],[-44,-47],[-62,-41],[-73,-78],[-95,-66],[-19,-1],[-43,55],[12,24],[11,34],[-11,-10],[-7,-14],[-25,-24],[21,-45],[-11,-17],[-30,-22],[-27,-32],[-25,-22],[-20,28],[-54,-35],[-46,-9],[-10,17],[-3,28],[-16,7],[-30,-8],[-11,15]],[[34594,81530],[-20,-58],[-14,-28],[-13,-9],[-28,-8],[-59,-9],[-25,-8],[-3,-39],[4,-20],[8,-16],[11,-4],[24,9],[9,-1],[7,-8],[6,-15],[3,-20],[0,-25],[-4,-31],[-20,-73],[-25,-40],[-33,-33],[-7,-12],[-5,-15],[-4,-48],[-16,-38],[-52,-96],[-20,-22],[0,-17],[-8,-46],[-16,-36],[-43,-85],[-10,-30],[-5,-24],[1,-33],[-2,-15],[-10,-28],[-14,-27],[-3,-13],[6,-23],[5,-8],[1,-22],[-4,-34],[18,22],[40,78],[31,47],[20,16],[15,21],[15,46],[20,44],[19,15],[9,-9],[7,-21],[-1,-28],[-10,-33],[0,-10],[24,24],[41,21],[15,-3],[30,-30],[26,3],[40,18],[7,-8],[-7,-27],[-15,-26],[-37,-36],[-90,-72],[-28,-49],[5,2],[20,21],[20,11],[21,2],[9,-7],[-3,-14],[-3,-37],[-54,-74],[13,3],[62,33],[39,-46],[52,16],[31,16],[0,-10],[6,-20],[0,-33],[3,-5],[15,11],[3,12],[-1,58],[5,6],[10,-9],[6,-15],[2,-42],[-7,-43],[-9,-39],[-23,-57],[3,-24],[-6,-27],[5,-1],[23,25],[1,10],[-2,24],[3,11],[19,26],[31,31],[11,4],[4,-7],[-2,-19],[10,5],[20,28],[18,16],[17,6],[18,19],[19,32],[20,27],[21,21],[9,2],[-3,-35],[4,-40],[1,-34],[4,-7],[17,36],[9,13],[11,6],[12,-3],[87,13],[27,-9],[30,-24],[37,-36],[14,-33],[3,-42],[-4,-29],[-27,-37],[-24,-24],[-14,-24],[-5,-25],[-5,-15],[-16,-20],[-72,-59],[17,-2],[41,13],[28,3],[1,-9],[-11,-16],[-21,-17],[-2,-8],[1,-11],[22,-12],[29,6],[24,-9],[-3,-14],[-19,-46],[-5,-28],[-26,-25],[-50,-37],[-13,-15],[3,-3],[46,28],[24,7],[14,0],[17,27],[26,9],[26,-17],[39,46],[14,6],[24,-5],[15,8],[26,32],[20,15],[4,-1],[4,-13],[2,-36],[-5,-32],[-6,-21],[-21,-45],[-13,-16],[-12,-6],[-21,2],[-9,-7],[-20,-35],[-35,-36],[-22,-14],[14,-20],[5,-37],[-8,-12],[-37,-12],[-2,-6],[-13,-8],[-31,-13],[21,-6],[39,9],[4,-6],[-5,-27],[-11,-27],[-46,-70],[0,-7],[7,-35],[9,-26],[11,-18],[26,-1],[19,8],[27,47],[62,146],[55,41],[45,45],[11,-9],[5,-11],[-2,-11],[-23,-37],[-12,-31],[-31,-94],[-12,-45],[-6,-47],[1,-81],[4,-14],[9,-19],[19,17],[31,40],[20,38],[15,63],[10,24],[10,-1],[10,-13],[2,-30],[8,-42],[6,-41],[-4,-46],[-5,-25],[-63,-186],[6,-33],[2,-20],[-2,-22],[-20,-89],[-19,-55],[-11,-24],[-12,-15],[-15,-5],[-13,8],[-11,21],[-10,11],[-9,1],[-17,-4],[-42,-45],[-9,-3],[-6,6],[-8,24],[6,120],[4,40],[-9,30],[9,52],[1,19],[-6,7],[-10,-4],[-17,-26],[-22,-47],[-23,-42],[-42,-57],[-18,-11],[-8,2],[-8,8],[-12,24],[1,22],[5,29],[17,68],[34,101],[28,72],[5,31],[-7,13],[-7,27],[-11,78],[-13,64],[-16,28],[-41,32],[-7,-8],[-4,-43],[-48,-124],[-8,-54],[-6,-20],[-9,-14],[-21,-17],[6,29],[22,64],[-3,6],[-28,-51],[-21,-29],[-26,-7],[-16,2],[-15,-8],[-65,-121],[-3,-41],[-11,-33],[-32,-60],[-17,-21],[-24,-4],[-21,11],[-15,-2],[-33,-19],[-38,-8],[-16,4],[-10,7],[-19,24],[-2,16],[1,10],[10,25],[22,32],[18,11],[45,16],[33,24],[25,35],[12,21],[47,110],[60,39],[29,31],[21,40],[3,14],[-30,-20],[-15,-5],[-25,7],[-11,14],[-34,-4],[-47,6],[-7,-10],[-6,-54],[-6,-28],[-7,-9],[-11,-6],[-21,-6],[-55,19],[-11,11],[-14,8],[-60,-18],[-13,2],[12,12],[60,40],[6,112],[-3,18],[-17,-16],[-28,-16],[-20,5],[-9,10],[-8,-9],[-19,-59],[-12,-7],[-17,-3],[-38,-21],[-73,-15],[-14,-15],[-49,5],[-145,33],[-52,-3],[-62,20],[-12,8],[-87,-3],[-26,4],[2,25],[-3,6],[-25,-27],[-23,-18],[-29,-15],[-91,-26],[-49,-6],[-28,18],[-11,19],[-17,59],[-12,74],[0,13],[6,26],[19,36],[87,94],[69,96],[30,49],[28,18],[46,41],[2,5],[-45,-5],[-32,11],[-32,5],[-62,-11],[-62,0],[0,21],[29,40],[62,68],[6,1],[-19,-32],[-5,-24],[8,-16],[9,-10],[36,-4],[8,14],[12,73],[27,85],[14,61],[25,47],[13,7],[11,-9],[37,-11],[38,-43],[12,-3],[4,3],[-14,13],[-11,20],[-5,19],[14,59],[16,17],[3,12],[-32,0],[-26,16],[-8,27],[1,47],[9,28],[21,37],[25,25],[15,-6],[30,-34],[18,10],[-3,10],[-27,53],[-9,39],[1,19],[59,187],[29,100],[40,153],[9,24],[20,45],[9,12],[25,0],[16,6],[-23,19],[-8,14],[-1,15],[6,15],[9,12],[31,24],[22,40],[13,48],[-2,16],[-7,16],[0,9],[17,10],[42,56],[5,11],[16,75],[19,33],[17,17],[28,21],[86,52],[51,46],[34,-3],[10,-32],[49,-21],[9,23],[-12,28],[10,11],[40,10],[7,-4],[12,-16],[-2,-14]],[[25947,92747],[11,-12],[64,16],[54,18],[84,45],[50,15],[152,0],[26,-9],[-11,-26],[-7,-8],[5,-11],[17,-16],[33,-17],[13,16],[9,37],[23,153],[9,46],[5,44],[-1,41],[-11,26],[-39,16],[-53,-3],[-28,4],[-33,8],[-25,13],[-16,17],[-31,52],[-24,28],[-60,52],[-28,17],[14,21],[55,23],[33,23],[39,65],[23,11],[84,-9],[114,-51],[72,-44],[19,-5],[0,8],[-18,21],[-82,54],[-38,40],[-17,29],[8,12],[46,13],[6,14],[-63,17],[-31,0],[-26,-12],[-28,-1],[-51,22],[-14,13],[-30,38],[-15,34],[-17,21],[-7,16],[-3,51],[2,30],[7,26],[12,22],[33,39],[19,12],[35,5],[76,-20],[203,-71],[-5,23],[-227,96],[-81,24],[-20,35],[122,133],[111,31],[56,38],[91,2],[85,-25],[1,7],[-38,46],[3,12],[48,27],[89,32],[108,26],[22,13],[28,9],[51,9],[127,3],[71,-3],[95,-20],[55,-35],[17,-21],[30,-69],[24,-95],[35,-40],[56,-21],[39,-24],[22,-26],[6,-32],[-10,-39],[7,-40],[25,-41],[20,-24],[42,-26],[1,-14],[-13,-16],[-28,-23],[-70,-69],[-90,-76],[-64,-66],[-3,-20],[133,104],[42,-4],[2,-15],[-28,-50],[-33,-45],[-33,-29],[6,-11],[63,-50],[-11,-9],[-31,5],[-12,-5],[-9,-9],[-6,-14],[0,-20],[5,-25],[-1,-18],[-6,-13],[7,-5],[18,2],[16,10],[27,34],[88,93],[57,34],[18,4],[52,-23],[13,1],[-58,72],[-5,18],[12,26],[7,9],[32,20],[26,10],[15,-4],[24,-36],[11,-25],[19,-11],[44,14],[28,30],[36,-20],[54,-48],[-5,-48],[0,-49],[3,-35],[65,-65],[44,-28],[9,-1],[-2,10],[-9,22],[-24,21],[-23,34],[-20,40],[12,95],[34,50],[32,-13],[43,-29],[34,-2],[53,3],[108,-58],[58,-1],[-5,23],[-44,12],[-64,31],[-101,38],[-46,44],[-8,20],[1,22],[6,20],[10,16],[20,17],[97,50],[69,22],[51,7],[87,-1],[100,-9],[55,-14],[62,-36],[79,-35],[28,-6],[33,0],[38,8],[36,-3],[114,-52],[30,-27],[18,-32],[14,-32],[8,-31],[-3,-24],[-95,-108],[-41,-18],[-28,-41],[-40,-77],[-35,-42],[-3,-8],[7,-2],[21,19],[36,53],[26,46],[47,38],[78,45],[68,22],[58,-2],[49,-6],[39,-11],[24,-10],[7,-7],[16,-34],[-1,-23],[-10,-26],[-19,-29],[-84,-33],[-47,-25],[-29,-10],[-87,-9],[4,-10],[65,-14],[71,4],[-1,-16],[-34,-44],[-11,-38],[9,-31],[-1,-26],[-26,-53],[-28,-48],[10,-7],[66,69],[18,76],[27,66],[31,37],[23,14],[74,5],[40,39],[35,12],[15,1],[29,-15],[-1,-15],[-43,-70],[-92,-112],[38,13],[25,27],[34,26],[38,40],[25,-36],[39,-27],[23,-61],[38,-29],[23,-23],[-3,39],[-33,77],[9,31],[25,16],[79,65],[55,-22],[34,-19],[17,5],[43,-3],[69,-10],[67,-19],[66,-25],[50,-31],[35,-34],[21,-24],[8,-14],[12,-34],[-9,-23],[-50,-53],[-27,-24],[-27,-11],[-73,11],[-23,-7],[-24,-16],[-76,-73],[-42,-32],[-41,-20],[-10,-10],[89,1],[24,21],[21,41],[39,42],[74,19],[103,-41],[52,2],[39,41],[44,28],[17,6],[9,-3],[33,-30],[10,-26],[0,-60],[-5,-18],[-29,-46],[-73,-68],[-47,-25],[-52,-14],[-57,-23],[-20,-19],[-20,-26],[-20,-18],[-25,-14],[33,-22],[12,1],[13,13],[33,50],[24,23],[14,4],[14,-2],[14,-10],[14,-18],[-1,-43],[-42,-171],[7,0],[26,47],[74,178],[18,36],[36,36],[80,54],[63,29],[70,24],[37,9],[43,-6],[28,-28],[37,-5],[46,7],[30,-4],[33,-11],[29,-20],[48,-24],[110,-44],[14,-10],[12,-16],[12,-25],[-1,-24],[-15,-23],[-18,-15],[-22,-5],[-23,-13],[-42,-34],[-13,-6],[-66,-14],[-61,-7],[-38,-14],[-73,-37],[-101,-68],[1,-16],[40,-8],[33,10],[45,47],[42,18],[66,15],[91,12],[39,-2],[7,-2],[5,-11],[3,-20],[-15,-26],[-17,-12],[-47,-58],[31,-15],[42,-7],[24,16],[22,36],[25,19],[27,4],[24,9],[21,15],[5,9],[-30,19],[-2,11],[12,28],[22,30],[23,19],[17,2],[57,-21],[39,-35],[98,-107],[12,-21],[34,-79],[7,-35],[-6,-25],[-8,-15],[-10,-5],[-22,-1],[-130,33],[-60,-4],[-26,-9],[-21,-14],[-16,-17],[-12,-21],[-23,-12],[-82,0],[-47,-12],[-80,-28],[-28,-16],[-7,-20],[49,4],[81,26],[75,8],[127,-59],[41,-9],[23,9],[28,2],[101,-4],[35,-7],[51,-22],[78,-49],[15,-14],[9,-15],[2,-16],[0,-39],[-8,-13],[-27,-9],[-112,10],[-35,9],[-42,-11],[-34,4],[-44,15],[-48,28],[-72,-26],[-58,17],[-59,-15],[-117,-62],[13,-11],[160,53],[31,-3],[51,-20],[80,-38],[23,-16],[0,-60],[-12,-41],[-25,-45],[-37,6],[-85,28],[-35,4],[-26,-4],[-34,-19],[-17,0],[-137,36],[-31,2],[-3,-4],[6,-7],[125,-56],[92,-6],[57,-10],[34,-17],[16,-13],[2,-37],[30,-38],[28,-15],[18,-1],[30,14],[30,2],[25,-9],[31,-21],[37,-6],[33,-13],[26,-2],[71,6],[31,-8],[8,-7],[-13,-12],[-66,-29],[-10,-28],[37,-36],[20,-28],[-1,-20],[-20,-47],[-5,-19],[6,-2],[48,38],[7,-4],[5,-53],[6,3],[16,43],[-7,58],[28,23],[88,18],[-15,-91],[-2,-47],[-39,-79],[-32,-25],[1,-6],[23,-10],[14,-1],[14,13],[33,60],[66,64],[12,1],[0,-23],[-9,-42],[31,-20],[29,19],[16,17],[37,-2],[17,-8],[5,-19],[-17,-79],[3,-19],[39,-52],[4,3],[-8,25],[-8,62],[8,28],[32,34],[65,50],[25,10],[15,-7],[24,-24],[-8,-14],[-26,-15],[-19,-27],[-13,-39],[14,-21],[53,-2],[54,32],[30,-16],[37,-42],[66,-67],[39,18],[47,-51],[-64,-40],[20,-86],[-82,4],[-46,-7],[-31,8],[-34,-3],[31,-20],[59,-9],[6,-25],[46,0],[35,5],[63,-1],[4,30],[41,17],[23,19],[20,-12],[57,-12],[77,-59],[-34,-35],[-9,-33],[-12,-28],[-6,-25],[-14,-17],[-109,-99],[18,-1],[46,24],[91,35],[50,15],[36,-10],[18,0],[16,13],[30,-15],[62,-13],[71,81],[43,-16],[40,-50],[86,-89],[45,-51],[15,-23],[-2,-23],[-41,-25],[-20,-5],[-55,46],[-50,24],[-31,-3],[-30,-18],[10,-9],[121,-71],[21,-52],[2,-23],[-81,-35],[-26,-2],[-57,17],[-32,31],[-28,11],[-37,3],[-12,-6],[41,-52],[-4,-16],[-21,-10],[-11,-25],[81,-46],[61,-46],[9,-19],[-41,-13],[-29,-4],[-62,7],[-35,10],[-9,-11],[35,-24],[14,-16],[10,-23],[7,-22],[1,-20],[-28,-17],[-35,-46],[-14,-48],[-31,-5],[-13,9],[-42,-15],[-55,21],[-20,22],[-61,90],[-1,-10],[15,-46],[-3,-27],[-64,-20],[0,-7],[39,-15],[48,-11],[-8,-42],[1,-181],[-11,-64],[-23,-56],[-34,-53],[-36,35],[-15,36],[-12,18],[-17,15],[-23,7],[-23,0],[-25,-32],[-28,28],[-26,33],[10,88],[11,44],[-4,-1],[-16,-20],[-36,-64],[-23,-79],[-31,30],[-28,38],[-22,38],[-37,43],[-36,51],[-19,60],[-8,13],[-21,50],[-8,14],[-8,5],[-17,31],[6,34],[28,39],[26,28],[42,28],[50,16],[22,36],[28,66],[30,46],[33,26],[-16,4],[-42,-22],[-30,-32],[-35,-54],[-32,-34],[-84,-40],[-30,-8],[-36,-4],[-78,5],[-18,14],[9,38],[56,68],[-9,5],[-20,-24],[-27,-17],[-23,-9],[-34,3],[-41,43],[-19,13],[-39,15],[-16,14],[-66,104],[-13,28],[-7,27],[-21,23],[-35,18],[-8,-3],[13,-23],[0,-20],[-30,-12],[-31,4],[-33,21],[-3,-28],[35,-51],[1,-64],[-10,-6],[-24,-4],[-16,8],[-53,48],[-50,33],[-36,18],[-4,-13],[23,-57],[27,-57],[44,-47],[69,-56],[32,-32],[-25,-46],[-22,-14],[-13,-5],[-42,0],[-77,25],[-37,28],[-52,67],[-87,69],[-19,-1],[-61,-28],[9,-4],[40,-2],[29,-9],[69,-55],[6,-23],[-18,-25],[1,-32],[20,-39],[20,-25],[41,-18],[20,-2],[8,-11],[-25,-87],[-2,-24],[7,-10],[9,0],[52,35],[22,9],[19,2],[22,-10],[26,-22],[14,-23],[5,-23],[7,-15],[52,-24],[-5,-12],[-53,-37],[-3,-5],[11,-3],[33,-22],[31,-34],[19,-41],[4,-21],[0,-19],[4,-11],[16,-2],[7,7],[7,-1],[9,-10],[8,-32],[19,-92],[10,-25],[5,-1],[3,92],[9,15],[33,-16],[47,-36],[34,-32],[4,-15],[-25,-29],[5,-13],[19,-19],[17,7],[12,33],[22,32],[25,22],[48,-18],[39,-48],[6,-16],[26,-21],[22,11],[44,-54],[-21,-25],[-45,-36],[-5,-12],[11,2],[87,1],[23,-15],[5,-28],[-38,-76],[-35,6],[-47,2],[-24,-4],[4,-10],[65,-35],[18,-29],[25,-30],[12,-25],[-1,-11],[-10,-17],[5,-6],[44,-11],[28,10],[34,4],[30,-3],[3,-11],[-5,-28],[-31,-25],[9,-7],[36,8],[17,-12],[21,-62],[25,-48],[-20,-11],[-22,-5],[3,-61],[14,-64],[1,-60],[-5,-54],[-20,-12],[-22,1],[-8,14],[-53,161],[-13,29],[-16,25],[-56,70],[2,-11],[14,-32],[12,-48],[16,-96],[8,-61],[-4,-23],[-11,-6],[-3,-11],[5,-17],[43,-63],[21,-38],[15,-39],[13,-26],[13,-14],[-3,-11],[-19,-9],[-32,-4],[-16,5],[-58,36],[-8,-11],[32,-133],[-1,-32],[-16,-11],[-20,13],[-24,38],[-36,42],[-49,46],[-47,37],[-11,-1],[-7,-11],[-7,-2],[-9,7],[-16,28],[-16,18],[-68,62],[-7,0],[7,-18],[6,-41],[-7,-8],[-18,3],[-34,18],[-23,40],[-28,70],[-16,26],[-1,-17],[8,-67],[-1,-22],[-17,-6],[-8,6],[-7,18],[-6,29],[-17,23],[-25,15],[-14,16],[-7,29],[-5,6],[-45,-6],[-23,20],[-65,81],[-59,88],[-38,46],[-14,12],[20,-57],[22,-84],[6,-39],[-10,-1],[-22,17],[-113,108],[-69,51],[-39,9],[-63,6],[-14,-28],[34,-62],[33,-47],[32,-32],[50,-61],[46,-79],[19,-25],[62,-34],[33,-9],[34,-2],[3,-12],[-16,-23],[-4,-14],[75,-35],[28,-20],[27,-32],[15,-8],[65,-82],[16,-14],[58,-26],[19,-17],[32,-53],[20,-27],[28,-64],[21,-29],[52,-32],[22,-10],[10,-12],[-7,-29],[-6,-12],[-30,-20],[5,-28],[17,-50],[-1,-31],[-18,-12],[-37,-14],[-19,1],[-28,12],[-35,20],[-70,50],[-105,35],[-39,18],[-13,17],[-20,10],[-260,48],[-44,12],[-27,15],[-25,22],[-100,49],[-12,11],[-67,85],[-49,100],[-17,13],[-54,13],[-45,-8],[-30,-11],[-46,4],[-30,16],[-63,45],[-64,23],[-56,39],[-29,14],[3,10],[41,58],[-12,0],[-73,-45],[-26,14],[-43,35],[-32,35],[-66,97],[-38,35],[5,8],[43,3],[34,-3],[23,8],[44,39],[19,25],[2,14],[-37,4],[-8,7],[-7,16],[-17,21],[-27,25],[-31,10],[-107,-9],[-19,11],[0,17],[21,47],[12,19],[3,10],[-4,3],[-14,-2],[-62,-42],[-14,3],[-24,45],[-15,51],[-11,17],[-14,6],[-51,50],[-72,95],[-27,30],[-30,27],[-21,11],[3,14],[46,79],[2,12],[-40,-4],[-59,16],[-28,-20],[-18,-1],[-21,11],[-12,-4],[-11,-65],[-9,-16],[-12,-9],[-11,2],[-9,11],[0,15],[-9,79],[-21,12],[-58,3],[-13,6],[-14,15],[-12,27],[-10,40],[-12,22],[-13,3],[-11,-3],[-8,-10],[-18,-6],[-28,-3],[-1,-15],[27,-28],[25,-40],[25,-52],[-15,-35],[-55,-18],[-48,-5],[-41,7],[-32,12],[-44,29],[-63,-9],[-15,-76],[-13,-4],[-60,1],[-24,-6],[-80,-42],[-25,-6],[-18,5],[-18,-11],[-27,-24],[-37,-2],[-47,19],[-39,8],[-33,-3],[-33,12],[-34,25],[-29,11],[-36,-2],[-9,4],[-54,55],[-17,22],[-35,68],[-7,27],[-1,29],[3,21],[13,32],[13,76],[12,25],[17,23],[32,29],[120,51],[24,20],[-1,14],[-27,62],[0,16],[9,9],[19,37],[9,10],[21,6],[44,-19],[37,-7],[50,-3],[83,-25],[115,-49],[66,-33],[50,-50],[36,-49],[5,-25],[-16,-38],[-9,-11],[1,-13],[9,-15],[29,-21],[7,8],[-3,26],[6,22],[15,17],[1,23],[-11,28],[-13,24],[-17,21],[-74,70],[-7,23],[25,11],[108,-24],[42,6],[16,27],[17,19],[18,10],[37,4],[51,-13],[25,-2],[23,5],[29,15],[42,50],[28,11],[41,8],[31,1],[56,-20],[35,0],[-3,34],[-23,63],[-28,66],[-23,22],[-57,41],[-68,78],[-34,49],[-9,24],[4,16],[12,24],[123,86],[97,86],[42,44],[21,31],[21,22],[22,14],[47,16],[13,22],[3,36],[8,32],[44,85],[33,23],[51,16],[33,20],[41,70],[-4,17],[-19,13],[-14,20],[-62,182],[-42,89],[-49,76],[-45,94],[-73,92],[-1,24],[13,28],[-6,6],[-76,-40],[-18,-2],[-29,17],[-20,22],[-16,38],[1,20],[11,19],[15,47],[0,24],[-5,22],[-6,16],[-9,9],[-23,6],[-38,2],[-13,-8],[43,-71],[-7,-17],[-54,-7],[-24,3],[-22,8],[-20,14],[-63,74],[-13,27],[4,20],[-5,11],[-13,-7],[-17,0],[-24,7],[-5,8],[44,40],[3,12],[-21,13],[-30,3],[-8,12],[10,12],[41,22],[15,14],[-25,11],[-13,1],[-28,-24],[-42,-48],[-30,-18],[-41,22],[-27,8],[-18,-5],[-28,-38],[-61,-27],[-109,-65],[-46,-20],[-51,4],[-9,13],[0,22],[4,18],[6,14],[2,18],[-4,73],[9,21],[17,12],[32,12],[81,-15],[37,3],[27,17],[26,24],[27,33],[5,31],[-28,50],[-10,11],[-72,39],[-40,14],[-35,6],[-26,11],[-16,17],[-15,27],[-1,18],[2,24],[15,17],[64,20],[0,5],[-53,14],[-25,-2],[-21,-16],[-27,-37],[-16,-11],[-48,22],[-29,3],[-19,11],[-11,10],[7,10],[24,11],[41,32],[3,18],[-29,28],[-15,7],[-60,10],[-72,-10],[-28,5],[-12,32],[-7,37],[-4,44],[-13,75],[-14,39],[-19,4],[-88,-16],[-20,0],[-15,6],[-57,50],[-24,18],[-13,4],[-42,53],[-16,10],[-19,26],[-22,42],[-24,13],[-26,-16],[-26,-24],[-26,-30],[-14,-26],[-2,-21],[16,-16],[91,-28],[24,-18],[19,-30],[15,-36],[10,-43],[-1,-32],[-11,-22],[-20,-19],[-57,-30],[-58,-17],[-59,-5],[-28,4],[-152,59],[-27,0],[-35,8],[-79,24],[-43,3],[-76,20],[-128,11],[-25,-9],[34,-27],[30,-14],[25,0],[37,-24],[48,-47],[28,-29],[22,-34],[1,-12],[-23,-23],[-178,122],[-109,-42],[-51,-16],[-43,-3],[-54,17],[-121,59],[-46,20],[-16,3],[-106,-25],[-91,-1],[-185,24],[-67,17],[-18,17],[-22,8],[-40,0],[-105,19],[-97,-43],[-116,40],[-35,23],[-11,16],[-33,66],[-5,36],[10,32],[9,22],[10,12],[-64,-37],[-22,-6],[-29,-1],[-87,13],[-14,-7],[5,-12],[23,-19],[2,-12],[-48,-8],[-73,9],[-33,-4],[-14,-5],[-33,-30],[-14,-7],[-17,3],[-77,67],[-62,43],[-73,16],[-33,14],[-18,16],[-100,137],[-14,29],[-32,107],[-10,23],[-13,15],[25,3],[95,-13],[91,0],[50,-8],[57,-27],[76,-19],[53,-4],[87,7],[98,18],[11,14],[-63,24],[-57,31],[-52,41],[-31,17],[-53,11],[-146,8],[-137,27],[-93,37],[-77,41],[-31,22],[-11,18],[-12,54],[-13,90],[-12,61],[-12,31],[-1,27],[26,57],[74,63],[2,10],[-15,3],[-31,16],[-10,23],[-4,37],[0,32],[3,25],[13,33],[32,57],[46,71],[49,65],[9,22],[4,58],[7,43],[6,30],[11,22],[31,43],[38,41],[60,34],[5,13],[1,18],[3,13],[6,9],[149,110],[68,45],[57,29],[69,21],[195,43],[101,12],[127,-3],[233,-24],[28,-17],[7,-9],[10,-24],[-7,-16],[-64,-52],[-80,-44],[-53,-38],[-88,-86],[-24,-30],[-110,-173],[-26,-28],[-15,-23],[-11,-63],[4,-22],[17,-36],[59,-79],[16,-36],[0,-34],[-7,-81],[-1,-41],[3,-39],[12,-56],[22,-73],[51,-74],[79,-74],[59,-50],[59,-36],[69,-54],[15,-26],[-32,-29],[-74,-44],[-98,-19],[-52,-18],[-65,-39],[-82,-30],[-32,-19]],[[32833,80122],[-117,-8],[-92,36],[-69,17],[-67,31],[-146,100],[-16,35],[-14,43],[-28,39],[-30,32],[-154,98],[-13,34],[31,23],[36,10],[31,-1],[104,-38],[130,-34],[56,-26],[64,-38],[62,-47],[140,-125],[24,-10],[63,-61],[23,-46],[11,-38],[-14,-19],[-15,-7]],[[32274,78610],[8,-8],[13,15],[15,47],[41,-12],[22,-21],[12,4],[12,-2],[23,-28],[44,-22],[46,4],[70,13],[8,5],[72,11],[72,5],[25,-12],[9,-12],[5,-14],[-41,-38],[-41,-44],[-58,-44],[-7,-21],[4,-39],[-1,-40],[11,-3],[7,-14],[-15,-13],[-59,-6],[-17,4],[-21,16],[-7,39],[-25,-6],[-7,5],[35,32],[-16,42],[-18,-3],[-11,19],[1,27],[16,13],[5,14],[-22,-13],[-17,-24],[-21,-9],[-22,-22],[33,-6],[-17,-17],[-17,-3],[-81,32],[-20,12],[-26,34],[-19,45],[11,2],[3,8],[-2,7],[-28,6],[-45,-2],[-25,12],[1,79],[-8,22],[-28,18],[-42,5],[-4,30],[13,44],[21,39],[16,37],[18,31],[46,62],[-1,-46],[4,-40],[-30,-79],[52,-79],[6,-17],[5,-21],[-4,-19],[-8,-18],[20,-8],[6,-15]],[[27222,88107],[11,-17],[3,-24],[-4,-32],[-7,-30],[-10,-27],[-25,-44],[-76,-77],[-28,-42],[-22,-25],[-124,-111],[-16,-6],[-16,2],[-34,17],[-34,3],[-90,-45],[-4,8],[-4,48],[-9,27],[-40,57],[-2,13],[0,16],[3,13],[45,54],[101,193],[24,10],[49,-22],[24,-7],[17,1],[72,41],[68,-5],[63,24],[29,0],[23,-4],[13,-9]],[[27904,87794],[22,-16],[36,-52],[14,-26],[4,-36],[-10,-48],[-5,-44],[-13,-34],[-25,-42],[-22,-50],[-20,-56],[-15,-38],[-13,-18],[-14,-10],[-14,-1],[-23,21],[-30,42],[-24,25],[-31,18],[-17,23],[-3,23],[-1,76],[1,37],[4,32],[7,25],[16,34],[44,75],[26,29],[16,7],[43,-6],[18,2],[14,9],[15,-1]],[[28979,91199],[145,-51],[14,-19],[7,-16],[4,-19],[0,-38],[-3,-15],[-14,-36],[-1,-12],[11,-123],[-1,-67],[-10,-56],[-21,-45],[-31,-34],[-24,-20],[-105,-48],[-75,-12],[-79,-2],[-100,-13],[-46,3],[-24,5],[-17,10],[-19,30],[-23,51],[-18,58],[-23,102],[0,12],[21,83],[29,56],[50,82],[57,81],[14,14],[26,14],[64,23],[54,-6],[23,3],[29,10],[33,3],[53,-8]],[[27906,94270],[47,-7],[300,14],[63,-11],[189,-64],[48,-21],[25,-28],[21,-45],[10,-10],[69,-26],[28,-32],[10,-17],[14,-38],[31,-22],[36,-12],[11,-11],[-5,-48],[15,-22],[33,-27],[13,-18],[-26,-22],[-61,-13],[-170,13],[-228,31],[-133,-9],[-67,-14],[-161,-49],[-51,-8],[-51,-1],[-89,40],[-32,22],[-11,16],[-21,49],[-17,58],[-9,48],[-10,37],[-31,12],[-90,14],[-30,20],[-14,17],[-13,27],[0,27],[7,25],[6,6],[11,1],[-25,29],[-9,33],[-1,46],[4,29],[7,13],[17,8],[39,5],[58,-1],[81,-33],[64,-4],[98,-27]],[[27574,82227],[-19,-8],[-58,16],[-24,11],[-71,41],[-135,61],[-46,31],[-10,22],[25,48],[13,19],[15,12],[143,22],[55,-11],[65,-97],[38,-66],[15,-52],[0,-26],[-6,-23]],[[28103,84184],[-14,-8],[-10,1],[2,19],[14,38],[8,34],[2,28],[6,25],[10,22],[11,11],[15,-1],[4,-70],[-5,-32],[-10,-28],[-14,-22],[-19,-17]],[[28073,84254],[-23,-58],[-18,-56],[-25,-106],[-15,-3],[-13,25],[37,123],[1,14],[-1,12],[-11,18],[-11,-21],[-52,-139],[-13,-22],[-11,-13],[-9,-2],[-22,3],[-44,-40],[74,165],[1,13],[-14,8],[-6,-5],[-60,-104],[-34,-40],[-23,13],[-6,10],[2,13],[59,104],[54,75],[22,48],[9,44],[4,33],[0,36],[3,10],[3,-2],[3,-14],[1,-38],[-12,-77],[-10,-38],[-12,-32],[5,-7],[22,18],[18,38],[15,57],[9,50],[10,80],[3,-3],[4,-16],[10,-11],[15,-7],[9,-10],[6,-26],[7,-12],[23,-10],[9,-8],[6,-29],[-1,-16],[3,-9],[7,-5],[-8,-31]],[[27784,84220],[-14,-4],[-17,8],[9,42],[14,18],[36,17],[7,11],[11,6],[17,0],[19,15],[21,32],[7,4],[-14,-46],[-16,-34],[-80,-69]],[[25046,96352],[-73,-33],[-37,1],[-212,67],[-43,33],[-8,23],[-2,32],[0,43],[9,30],[12,10],[25,10],[49,7],[46,-4],[70,-12],[70,-19],[92,-60],[34,-28],[7,-37],[0,-22],[-5,-17],[-10,-10],[-24,-14]],[[20956,96279],[-43,-10],[-84,23],[-56,10],[-45,42],[-49,57],[-39,62],[-14,37],[-28,22],[-10,36],[-51,57],[8,9],[48,8],[77,-11],[36,-20],[47,-34],[60,-54],[18,-24],[4,-33],[11,-17],[51,-4],[63,-43],[12,-17],[13,-34],[-1,-16],[-10,-34],[-18,-12]],[[22558,97915],[6,-75],[-6,-38],[-14,-28],[-12,-7],[-17,0],[-76,21],[-23,13],[-1,11],[-8,21],[-50,27],[-95,-4],[-40,3],[-16,8],[-10,12],[-9,47],[2,17],[11,29],[7,7],[70,27],[20,2],[85,-10],[75,-1],[38,-7],[34,-17],[20,-26],[9,-32]],[[20753,93847],[-14,-3],[-26,14],[-39,29],[-63,60],[-75,59],[-12,36],[-19,26],[-96,63],[-62,26],[-48,13],[-7,17],[33,51],[37,41],[23,15],[70,13],[236,27],[54,1],[56,-13],[78,-56],[32,-6],[20,-13],[17,-21],[9,-21],[0,-44],[-8,-64],[-11,-25],[-47,-82],[-49,-46],[-10,-29],[-20,-23],[-35,-29],[-24,-16]],[[21603,95630],[58,-35],[3,-9],[-11,-6],[-75,-19],[-29,-15],[-25,-35],[-19,-16],[-101,-10],[-103,1],[20,33],[56,56],[-44,22],[-158,-38],[-60,24],[51,60],[-51,5],[-71,0],[-46,36],[16,42],[94,24],[122,20],[131,31],[103,-3],[40,-14],[14,-49],[12,-59],[18,-5],[55,-41]],[[21105,95957],[13,-3],[43,12],[27,2],[30,-22],[8,-14],[110,-36],[38,-16],[5,-10],[-13,-15],[-33,-20],[-31,-13],[-44,-11],[-222,-2],[-24,5],[-14,18],[-28,65],[-19,36],[-8,24],[5,14],[24,13],[82,21],[36,0],[23,-5],[9,-11],[-3,-14],[-14,-18]],[[17131,95379],[-79,-37],[-57,4],[-75,27],[-61,10],[-21,9],[-3,9],[20,26],[26,21],[62,41],[105,78],[69,30],[67,21],[69,47],[38,21],[33,2],[33,-9],[4,-13],[-35,-64],[-25,-26],[-49,-67],[-93,-112],[-28,-18]],[[18380,96632],[-76,-19],[-51,0],[-89,28],[-103,84],[-14,30],[39,5],[28,9],[17,13],[34,15],[76,21],[10,-8],[-2,-18],[6,-16],[28,-4],[26,-11],[53,-36],[36,-7],[13,-8],[6,-12],[22,-21],[0,-11],[-30,-22],[-29,-12]],[[13631,83225],[-6,-1],[-3,12],[2,25],[9,42],[4,9],[36,-7],[5,-3],[1,-8],[-2,-13],[-12,-19],[-34,-37]],[[13603,81774],[-5,-1],[-9,12],[-7,19],[-4,51],[3,20],[3,8],[24,-32],[-5,-77]],[[13823,82925],[-8,-21],[-20,-32],[-13,-13],[-6,6],[-18,4],[-19,32],[-14,13],[-10,1],[-5,-12],[-1,-15],[3,-20],[-2,-9],[-6,2],[-5,9],[-6,16],[-1,17],[4,17],[13,24],[42,47],[13,9],[14,-2],[23,-22],[5,-7],[17,-44]],[[13931,82469],[-6,-2],[-18,7],[-60,98],[-43,35],[-29,48],[-30,31],[18,50],[16,-6],[56,-41],[44,-39],[25,-26],[53,-110],[-4,-16],[-22,-29]],[[13829,83540],[3,-46],[-40,-76],[-52,-38],[-11,12]],[[14291,82338],[13,-184],[-1,-59],[-19,-38],[-13,-65],[-15,-29],[-15,39],[-1,64],[-4,51],[-5,24],[6,95],[-6,-7],[-18,-41],[-19,-3],[-34,47],[-17,38],[-3,40],[-22,42],[-3,15],[2,16],[19,42],[7,28],[7,58],[7,23],[18,-3],[31,-27],[33,-28],[30,-39],[22,-99]],[[14974,80272],[8,-52],[-34,9],[-12,10],[0,25],[6,23],[26,-8],[6,-7]],[[15513,80374],[4,-12],[-62,45],[-27,27],[-10,19],[-6,11],[-32,28],[-5,13],[7,10],[21,-6],[35,-21],[32,-35],[43,-79]],[[14822,80417],[-11,-2],[-18,7],[-19,16],[-35,44],[-3,10],[3,9],[9,7],[3,11],[-8,32],[27,20],[25,-17],[11,-20],[13,-36],[6,-41],[1,-28],[-4,-12]],[[15226,80700],[-3,-30],[-17,49],[-28,105],[4,24],[12,35],[11,2],[18,-16],[16,-29],[3,-11],[10,-30],[5,-27],[-11,-33],[-20,-39]],[[14184,82090],[-9,-26],[-37,63],[-13,18],[-28,67],[-5,29],[1,17],[5,6],[9,-4],[8,-8],[53,-74],[15,-35],[1,-53]],[[14465,81493],[-4,-9],[-11,0],[-18,10],[-13,21],[-16,66],[2,12],[5,12],[25,24],[10,-3],[3,-18],[15,-39],[5,-11],[0,-46],[-3,-19]],[[14342,82027],[-21,-7],[7,31],[2,18],[-4,17],[-3,33],[-1,79],[21,49],[33,1],[-1,-25],[-14,-111],[-7,-51],[-5,-19],[-7,-15]],[[14079,82368],[-4,-5],[-11,8],[-11,15],[-19,43],[-6,18],[-4,29],[3,5],[9,-3],[5,-5],[30,-70],[8,-35]],[[14120,82440],[-2,-4],[-28,0],[-8,6],[-5,12],[-2,19],[4,22],[17,42],[1,18],[3,8],[12,-22],[5,-19],[3,-82]],[[15712,79927],[-11,-15],[-7,2],[-5,10],[-18,102],[8,-3],[24,-31],[-5,-12],[18,-31],[4,-21],[-8,-1]],[[33392,77153],[-37,-20],[-32,1],[-22,19],[-1,8],[51,-8],[19,5],[39,32],[-17,-37]],[[33066,78046],[-12,-4],[-2,8],[-18,24],[-1,12],[15,11],[32,-6],[-12,-30],[-2,-15]],[[32801,79080],[10,-11],[18,1],[12,-4],[-17,-21],[-33,-3],[-16,9],[23,110],[27,26],[56,71],[22,22],[21,9],[21,-5],[-22,-43],[-30,-2],[-28,-35],[-18,-40],[-23,-22],[-15,-27],[-8,-35]],[[32081,79427],[-7,-42],[-25,-36],[-12,-2],[-5,3],[6,23],[0,40],[20,6],[7,-4],[16,12]],[[32090,79469],[-32,-30],[14,45],[6,11],[5,5],[5,-4],[2,-27]],[[31590,77357],[-14,-21],[4,20],[17,51],[11,7],[-18,-57]],[[31455,77581],[-38,-31],[15,78],[12,24],[15,-8],[-2,-47],[-2,-16]],[[29565,78034],[-22,-11],[-36,11],[-41,-15],[-11,0],[30,42],[46,27],[46,80],[13,2],[-18,-91],[-3,-33],[-4,-12]],[[29529,78102],[-34,-12],[-11,5],[37,56],[42,13],[-34,-62]],[[30270,78843],[-25,-5],[6,20],[35,36],[25,20],[15,0],[-24,-44],[-32,-27]],[[34573,81059],[-9,-6],[-9,0],[-8,7],[-1,11],[8,23],[21,12],[17,-3],[-1,-12],[-9,-19],[-9,-13]],[[34846,80408],[-43,-34],[-10,-13],[-12,-7],[-9,11],[-12,35],[2,12],[12,2],[7,-5],[1,-11],[5,-6],[9,0],[32,35],[16,5],[6,-6],[-4,-18]],[[34622,81733],[-14,-1],[-3,7],[6,22],[15,26],[20,7],[-6,-38],[-18,-23]],[[34974,80497],[20,-37],[11,-10],[-72,-41],[-8,-2],[-5,4],[-1,38],[4,29],[5,5],[16,-18],[17,36],[13,-4]],[[34937,79171],[-14,-20],[-14,0],[2,18],[17,34],[8,24],[1,15],[3,11],[13,13],[11,23],[-5,-43],[-22,-75]],[[31993,87879],[53,-6],[33,2],[14,-9],[13,-28],[-17,-40],[-19,-16],[-31,-4],[-50,13],[-17,8],[-16,22],[7,15],[25,5],[4,7],[-6,12],[0,10],[7,9]],[[31046,86544],[-25,-5],[-12,12],[0,35],[8,26],[29,55],[25,62],[15,14],[31,-10],[18,-17],[18,-30],[8,-22],[-7,-34],[-22,-29],[-25,-21],[-61,-36]],[[30462,87873],[-20,-2],[-37,4],[-40,12],[-23,14],[-19,29],[-4,33],[-38,48],[-42,16],[-23,33],[24,3],[34,-8],[49,-14],[45,-19],[64,-42],[21,-40],[21,-28],[7,-22],[-6,-10],[-13,-7]],[[31991,87192],[-7,-7],[-6,2],[-21,30],[-28,13],[-10,12],[-84,63],[-9,28],[-2,22],[28,11],[56,10],[49,-1],[46,-13],[9,-14],[24,-26],[-6,-30],[-2,-40],[-10,-19],[-15,-14],[-12,-27]],[[31936,87487],[6,-5],[7,6],[6,-5],[4,-16],[6,-12],[17,-14],[5,-11],[0,-11],[-14,-16],[-9,0],[-66,37],[-18,39],[-1,19],[7,18],[10,8],[13,0],[16,-10],[11,-27]],[[30789,85852],[-17,-42],[-23,5],[-8,-8],[-6,-1],[10,39],[1,27],[-5,27],[8,13],[30,1],[0,-31],[4,-11],[7,-6],[-1,-13]],[[32109,86616],[-10,-40],[-32,15],[-50,30],[-20,20],[-7,22],[0,30],[15,5],[37,3],[32,-42],[9,-6],[26,-37]],[[33057,84123],[3,-14],[-43,10],[-15,9],[-1,9],[2,15],[8,17],[20,13],[11,-7],[23,-17],[3,-11],[-11,-24]],[[32849,84996],[23,-17],[6,-63],[-44,4],[-50,42],[-10,31],[1,5],[7,5],[13,-7],[12,11],[13,3],[29,-14]],[[31134,91901],[-7,-4],[-72,26],[-6,21],[36,24],[29,12],[22,2],[22,-4],[21,-25],[-25,-23],[-20,-29]],[[32588,90469],[-34,-15],[-19,19],[13,6],[19,23],[26,20],[11,17],[43,8],[15,-1],[5,-6],[-24,-26],[-55,-45]],[[28038,95579],[3,-34],[-20,1],[-65,-22],[-52,-3],[-26,10],[-17,23],[41,43],[47,31],[57,47],[47,30],[23,-6],[22,-16],[-28,-47],[-30,-23],[-2,-34]],[[27814,84547],[-7,-10],[-14,11],[0,29],[13,22],[10,-1],[10,-12],[-3,-15],[-9,-24]],[[27856,84974],[-4,-5],[-12,4],[-5,-38],[-4,-3],[-9,23],[7,20],[-1,14],[2,10],[12,23],[7,5],[4,-2],[4,-29],[-1,-22]],[[27911,84479],[-9,-7],[-7,0],[7,51],[-8,18],[-1,9],[4,9],[5,2],[11,-16],[6,-17],[2,-16],[0,-16],[-4,-11],[-6,-6]],[[27795,82548],[-1,-17],[-18,3],[-9,10],[-8,15],[-2,12],[7,11],[21,-7],[10,-27]],[[27949,81769],[-12,-4],[-26,4],[-22,15],[-13,18],[86,51],[18,-6],[0,-10],[-13,-27],[-3,-18],[-6,-14],[-9,-9]],[[15730,80003],[-4,-7],[-43,41],[-29,54],[-12,32],[57,-81],[29,-26],[2,-13]],[[15284,80661],[-7,-5],[-7,66],[9,23],[2,12],[-1,13],[15,-30],[6,-20],[2,-27],[0,-8],[-19,-24]],[[29549,90889],[-135,-1],[-74,4],[-29,9],[-26,13],[-29,45],[-19,45],[-1,20],[5,17],[7,11],[91,15],[74,-19],[64,-22],[83,-4],[25,-9],[9,-6],[7,-11],[9,-53],[1,-28],[-2,-21],[-60,-5]],[[28367,88404],[24,-25],[24,2],[14,-20],[32,-63],[3,-10],[-1,-21],[-17,-26],[-18,-13],[-37,-20],[-42,-9],[-23,14],[-64,58],[-59,68],[-19,38],[8,16],[25,11],[51,11],[83,-6],[16,-5]],[[23742,95477],[-27,0],[-35,12],[-10,12],[-8,17],[-5,22],[-7,18],[-10,13],[-2,10],[6,9],[11,5],[27,2],[57,22],[11,-2],[8,-12],[7,-31],[9,-19],[22,-34],[10,-22],[-2,-6],[-7,-6],[-55,-10]],[[27698,86188],[-9,-2],[-2,7],[7,24],[12,3],[13,26],[12,-9],[-4,-15],[-16,-22],[-13,-12]],[[27760,86273],[-29,-4],[13,34],[10,16],[12,11],[24,4],[16,-14],[-15,-25],[-31,-22]],[[23116,93857],[-45,-6],[-41,40],[-2,38],[3,21],[5,18],[15,16],[43,18],[19,-13],[7,-17],[6,-6],[28,-14],[13,-16],[-2,-19],[-8,-28],[-10,-18],[-11,-8],[-20,-6]],[[22957,94772],[-84,-34],[-18,13],[-8,12],[65,53],[28,14],[27,-16],[7,-13],[-3,-9],[-14,-20]],[[22702,94394],[-80,-13],[-36,6],[-20,-16],[-15,-7],[-44,-3],[-90,29],[-24,10],[-9,9],[4,9],[16,9],[69,12],[25,10],[11,13],[17,11],[24,8],[65,8],[146,41],[72,5],[28,-3],[9,-11],[2,-10],[-4,-11],[-22,-28],[-30,-21],[-79,-46],[-35,-11]],[[24944,91831],[6,-36],[-24,-49],[-8,-8],[-10,-4],[-9,6],[-28,38],[-8,24],[10,12],[22,15],[15,7],[20,-6],[6,10],[8,-9]],[[24863,91716],[-23,-6],[-14,24],[-12,5],[-5,16],[-24,3],[2,25],[7,12],[22,10],[17,-4],[17,-25],[8,-20],[7,-25],[-2,-15]],[[29444,87913],[-15,-5],[-55,7],[-69,27],[-35,25],[2,8],[15,4],[18,-4],[29,-17],[80,-9],[25,-10],[8,-16],[-3,-10]],[[29199,91214],[-21,-4],[-32,36],[-66,40],[-25,30],[-1,14],[2,22],[8,27],[23,30],[24,5],[35,-7],[25,-21],[27,-59],[19,-29],[5,-21],[-9,-10],[1,-10],[4,-6],[-1,-11],[-8,-16],[-10,-10]],[[28185,86824],[-38,-6],[0,8],[16,24],[59,20],[44,6],[-10,-20],[-26,-16],[-45,-16]],[[28060,91124],[-23,-6],[-30,30],[0,17],[6,41],[55,10],[24,-24],[11,-24],[-43,-44]],[[28700,88360],[-29,-6],[-38,13],[-38,25],[-85,80],[64,54],[102,-63],[31,-40],[-7,-63]],[[27936,92043],[11,-33],[7,-11],[-11,-15],[-41,-31],[-92,-13],[-46,14],[22,-44],[4,-19],[-6,-8],[-20,2],[-31,13],[-19,15],[-4,18],[-7,4],[-9,-10],[-8,2],[-19,27],[-14,9],[-92,16],[-4,7],[5,12],[14,18],[20,5],[52,-7],[4,4],[4,22],[4,9],[36,-3],[22,5],[13,-11],[12,-26],[17,5],[26,-4],[28,9],[43,23],[33,9],[46,-13]],[[28325,92001],[14,-29],[3,-15],[-20,-17],[-74,-33],[-46,-28],[-22,-7],[-31,7],[-37,-14],[-15,2],[17,23],[58,67],[49,7],[16,14],[14,-5],[8,12],[1,17],[17,13],[16,0],[32,-14]],[[28432,88704],[-20,-26],[-59,9],[-8,8],[-2,10],[9,12],[61,12],[26,1],[14,-4],[1,-4],[-22,-18]],[[26910,90024],[28,-7],[21,1],[4,-9],[-22,-28],[-13,-5],[-25,20],[-18,25],[-5,15],[-2,16],[4,3],[28,-31]],[[27997,91500],[-19,-4],[-23,11],[-8,19],[-4,19],[4,10],[10,9],[13,21],[18,32],[27,22],[60,21],[8,7],[27,58],[9,9],[30,6],[3,8],[-10,14],[0,14],[10,15],[15,12],[39,10],[35,-2],[9,-4],[7,-10],[11,-27],[1,-6],[-16,-24],[-42,-36],[-26,-31],[-5,-10],[-3,-13],[-9,-15],[-31,-38],[-20,-36],[-21,-20],[-56,-19],[-43,-22]],[[28612,91672],[-35,-7],[-26,4],[-17,13],[-13,19],[-16,46],[6,22],[2,38],[3,15],[6,7],[37,14],[21,-2],[32,-15],[69,-4],[18,-14],[4,-8],[-1,-10],[-4,-12],[-34,-35],[-17,-24],[-12,-29],[-23,-18]],[[25857,92230],[32,-4],[30,5],[22,-5],[13,-16],[9,-17],[5,-18],[-12,-13],[-49,-11],[-34,6],[-35,15],[-17,-7],[-41,11],[-20,14],[-17,21],[0,13],[43,14],[17,12],[54,-20]],[[26743,89744],[35,-23],[36,-13],[57,-6],[8,-5],[0,-11],[-8,-16],[-19,-22],[-14,0],[-31,15],[-12,7],[-13,17],[-6,2],[-9,-6],[-2,-7],[4,-10],[-5,-2],[-39,6],[-6,6],[3,18],[27,27],[-23,8],[-8,10],[-35,-17],[-19,-4],[-30,12],[-4,60],[-3,23],[-14,15],[-9,16],[-13,12],[-27,12],[-23,30],[-4,14],[3,10],[13,14],[79,-30],[48,-29],[46,-36],[23,-26],[2,-17],[-5,-17],[-14,-17],[11,-20]],[[25945,90861],[-11,-1],[-19,9],[-43,35],[-9,15],[-4,17],[0,21],[3,20],[14,42],[-26,33],[-6,19],[3,10],[14,26],[4,16],[14,22],[37,44],[37,-10],[32,-36],[9,-24],[-3,-26],[3,-37],[8,-49],[3,-36],[-4,-22],[-14,-41],[-12,-20],[-16,-18],[-14,-9]],[[26479,89616],[-15,-6],[-15,3],[-13,17],[-11,30],[-17,22],[-39,28],[-7,11],[-11,37],[-2,37],[-9,34],[0,16],[7,25],[33,6],[26,-10],[5,-7],[8,-14],[6,-18],[31,-47],[18,-38],[25,-78],[0,-15],[-7,-16],[-13,-17]],[[24154,87467],[-11,-1],[-26,29],[-5,15],[33,9],[23,-26],[-2,-12],[-12,-14]],[[21881,95955],[-72,-2],[-33,6],[-2,11],[29,13],[95,22],[57,39],[21,5],[73,6],[43,-1],[55,-10],[-132,-49],[-134,-40]],[[21388,96858],[-32,-12],[-37,7],[-6,7],[0,9],[3,10],[42,36],[38,12],[23,3],[18,-13],[10,-18],[-59,-41]],[[21752,96599],[-39,-6],[-69,3],[-83,21],[-22,24],[-5,38],[1,22],[7,4],[51,5],[96,6],[78,-5],[88,-22],[36,-14],[18,-10],[22,-20],[8,-8],[5,-16],[-110,-4],[-52,-6],[-30,-12]],[[25076,95914],[-13,-8],[-42,4],[-14,-8],[-22,5],[-31,16],[-36,32],[-41,48],[-32,41],[-1,12],[10,19],[32,13],[76,15],[52,0],[48,-31],[14,-11],[8,-13],[1,-12],[-4,-11],[-22,-24],[-10,-16],[0,-17],[5,-23],[9,-16],[13,-8],[0,-7]],[[23311,95339],[-21,-19],[-23,-1],[-30,18],[-32,-7],[-45,-36],[-16,-22],[-12,-7],[-37,-7],[-16,6],[-15,19],[-14,32],[10,24],[35,16],[93,27],[26,13],[3,14],[6,9],[8,4],[62,-23],[29,-16],[22,-18],[-2,-8],[-31,-18]],[[23526,94760],[-13,-2],[-25,3],[-93,26],[-16,10],[-4,8],[21,9],[8,10],[23,12],[42,0],[44,-29],[21,-27],[1,-12],[-9,-8]],[[16368,95475],[-22,-3],[-24,6],[5,15],[54,41],[3,11],[0,9],[-7,11],[14,15],[22,5],[7,-5],[2,-12],[-5,-36],[-6,-18],[-10,-14],[-14,-14],[-19,-11]],[[18455,96049],[-42,-18],[-289,27],[-15,9],[-8,12],[52,33],[64,14],[146,11],[51,-13],[34,-15],[19,-12],[8,-24],[-20,-24]],[[21078,95066],[-53,-3],[-90,18],[-54,33],[-17,16],[2,8],[9,7],[13,22],[31,63],[12,17],[48,36],[36,10],[75,-3],[44,-19],[18,-12],[13,-15],[13,-32],[3,-21],[22,-24],[7,-14],[0,-14],[-6,-14],[-12,-13],[-29,-21],[-85,-25]],[[22162,91478],[-9,-18],[-11,-6],[-22,-21],[-8,-3],[-13,14],[-11,22],[-4,3],[-7,0],[-14,-15],[-7,1],[-5,9],[-3,19],[0,29],[7,43],[1,16],[-4,12],[3,12],[10,10],[12,4],[30,-4],[23,-17],[12,-23],[23,-18],[7,-13],[-10,-56]],[[22223,91597],[-6,-34],[-34,9],[-15,12],[-13,28],[-2,8],[3,10],[14,25],[9,9],[23,-11],[10,-14],[8,-23],[3,-19]],[[22136,92451],[-3,-5],[-60,22],[-23,12],[-8,10],[-5,19],[-3,28],[12,14],[27,-1],[28,-11],[44,-31],[-12,-10],[-1,-20],[5,-20],[-1,-7]],[[23468,91920],[37,-39],[0,-19],[-5,-31],[-11,-24],[-16,-16],[-23,-8],[-29,-1],[-13,7],[10,24],[7,8],[1,21],[-5,35],[-6,22],[-16,12],[-12,1],[-3,-12],[5,-23],[-4,-30],[-13,-38],[-9,-17],[-18,9],[-8,14],[2,23],[-4,22],[4,22],[12,34],[17,22],[21,12],[26,-1],[29,-13],[24,-16]],[[21897,91818],[-23,-5],[-4,1],[2,16],[-2,8],[-6,5],[20,13],[3,10],[-7,7],[-27,14],[-8,13],[2,11],[10,10],[19,-2],[41,-18],[19,-26],[8,-20],[-13,-3],[-11,-8],[-11,-16],[-12,-10]],[[21709,91351],[-11,-1],[-16,10],[-90,35],[-11,11],[10,15],[33,19],[22,19],[17,30],[51,-16],[19,-14],[8,-12],[3,-17],[-3,-41],[-17,-9],[-15,-29]],[[20961,91247],[-16,-2],[-28,9],[-43,21],[-31,21],[-21,23],[-3,16],[16,9],[24,4],[57,-3],[28,-8],[36,-34],[7,-19],[2,-12],[-5,-11],[-23,-14]],[[20028,90668],[-14,-48],[-6,5],[-9,23],[-20,11],[-21,25],[0,55],[8,25],[-2,35],[22,21],[16,-25],[5,-42],[-4,-20],[16,-22],[7,-5],[4,-17],[-2,-21]],[[19676,91003],[31,-6],[23,4],[17,-23],[7,-23],[-2,-8],[-8,-4],[-49,26],[-18,16],[-6,14],[5,4]],[[19974,90440],[35,-5],[45,1],[-8,-44],[-17,-29],[-14,-8],[-6,16],[-26,35],[-9,34]],[[19632,91008],[-10,-2],[-38,34],[8,30],[35,-31],[5,-18],[0,-13]],[[11377,91921],[-23,-21],[-37,22],[-9,11],[42,30],[19,-1],[39,-18],[14,-15],[-45,-8]],[[52722,53170],[6,135],[12,113],[5,105],[18,93],[-9,93],[-11,40],[-57,131],[26,50],[-34,-7],[-7,49],[-17,58],[10,10],[10,32],[31,-10],[-1,16],[-27,49],[3,25],[11,27],[-6,12],[-19,-29],[-14,1],[-10,19],[-8,3],[5,-38],[-11,-33],[-10,-12],[-18,2],[-14,8],[-4,19],[-13,15],[-38,24],[-31,30],[-7,80],[-12,34],[-6,39],[-3,44],[5,69],[-8,11],[-9,3],[-14,-3],[-13,4],[-15,38],[-13,14],[8,-69],[-9,-20],[-23,6],[-9,26],[-2,20],[10,84],[-4,2]],[[78623,58343],[-5,-5],[-5,0],[-5,8],[1,34],[3,20],[9,4],[2,-61]],[[78699,58017],[-11,-22],[-16,46],[0,12],[27,-36]],[[79007,57840],[-46,75],[-90,26],[-10,33],[-9,6],[-8,-43],[-50,-41],[-21,25],[-15,30],[2,37],[15,30],[24,22],[12,76],[-19,97],[-16,28],[-18,23],[-18,-37],[-15,-61],[-16,-32],[-23,-7],[-33,2],[-13,93],[-4,79],[4,90],[5,53],[-32,74],[-2,70],[-15,37],[-4,-19],[0,-20]],[[77417,57713],[-13,-7],[-26,-83],[-12,42],[-7,43],[8,98],[-16,186],[10,25],[9,13],[18,71],[21,70],[2,85],[17,61],[-4,52],[1,61],[4,49],[-2,41],[14,42],[24,32],[-10,11],[-10,23],[-31,-35],[-16,11],[-3,37],[4,39],[2,23],[12,27],[-1,52],[-6,46],[9,57],[-18,0],[-9,11],[5,32],[17,28],[-15,53],[11,57],[0,71],[-8,62],[0,45],[-11,79],[-6,101],[-24,76],[-19,110],[-48,144],[0,61],[-2,54],[-11,27],[-14,-192],[-11,38],[-3,107],[-7,50],[7,101],[-28,100],[-6,73],[-19,110],[6,25],[25,-25],[-23,64],[-19,-14],[-16,69],[-3,188],[-16,70],[9,71],[-18,257],[-35,82],[7,72],[9,63],[-2,118],[8,36],[17,28],[-16,-10],[-13,-8],[-32,-7],[-36,-2],[-12,86],[-18,41],[-16,86],[-9,98],[6,19],[-27,40],[-8,24],[-29,64],[-33,48],[8,-34],[9,-21],[-17,-59],[16,-99],[-14,-63],[-13,-82],[-12,-40],[-40,-84],[-32,-29],[-21,-5],[-19,9],[-23,44],[-5,36],[-4,61],[-8,9],[-9,-7],[14,-79],[0,-37],[24,-71],[-9,-20],[-44,-38],[-15,6],[-10,-8],[-3,-32],[-6,-18],[-69,-48],[-14,-56],[-9,-55],[-35,-80],[-46,-66],[-11,3],[-13,16],[2,71],[15,61],[-5,64],[-3,-37],[-30,-90],[-14,-29],[-27,8],[-38,-12],[-14,92],[0,34],[-3,29],[5,30],[-2,25],[-9,-47],[-3,-40],[-14,-35],[-38,-39],[-1,49],[-2,44],[8,39],[-1,63],[12,90],[-1,31],[-3,34],[-7,-50],[-4,-51],[-8,-16],[-13,-11],[-26,-60],[-15,-52],[-40,-50],[-20,5],[-3,63],[16,225],[15,32],[8,39],[12,131],[15,50],[6,104],[6,18],[19,82],[7,150],[-8,75],[-18,72],[-18,217],[-46,176],[-4,59],[-22,71],[21,5],[-43,62],[-6,26],[-9,146],[2,81],[-6,-11],[-6,-50],[-17,-21],[7,-87],[-1,-21],[-9,-33],[-36,35],[-26,38],[-30,93],[-29,104],[10,16],[13,2],[42,-77],[27,-16],[17,19],[21,33],[10,64],[-11,24],[-20,13],[-13,17],[-20,43],[-2,23],[-6,28],[-20,20],[-16,25],[14,45],[13,34],[-35,-2],[-39,58],[-9,16],[-13,12],[-31,7],[-26,-17],[12,-82],[-2,-27],[-17,4],[-36,124],[11,32],[15,30],[-7,4],[-15,-2],[14,111],[-9,16],[-4,-34],[-8,-34],[-30,-78],[-15,15],[-10,19],[14,41],[8,11],[5,22],[-11,43],[-18,32],[-14,53],[-7,1],[6,-63],[-2,-91],[-32,100],[-64,143],[-15,42]],[[75645,63819],[-4,42],[-7,39],[-5,42],[-1,33],[-14,29],[-6,52],[-3,52],[8,38],[19,40],[15,7],[11,-18],[28,-27],[19,-24],[8,-33],[8,4],[9,21],[-2,25],[-8,68],[-3,81],[0,191],[-3,22]],[[77280,58152],[23,-100],[-3,-15],[-3,-8],[-6,3],[-9,54],[-17,34],[-21,-6],[17,44],[7,10],[12,-16]],[[77272,57565],[-13,-34],[-5,2],[6,55],[23,41],[19,4],[-2,-26],[-14,-31],[-14,-11]],[[77283,58455],[-1,-13],[-2,0],[-7,9],[4,55],[11,44],[11,66],[6,14],[2,-35],[-7,-74],[-5,-40],[-12,-26]],[[77365,58700],[-12,-3],[-5,93],[3,14],[16,-46],[24,-28],[-9,-18],[-17,-12]],[[77375,58608],[-7,-119],[-17,17],[-9,0],[-10,67],[0,18],[-6,44],[41,8],[8,-35]],[[77336,59100],[7,-16],[9,0],[-3,-56],[-22,-69],[-13,-10],[-5,0],[5,101],[-9,57],[3,39],[24,-18],[4,-28]],[[77259,58842],[-3,-3],[-4,1],[-10,10],[-10,39],[5,27],[4,7],[10,-2],[4,-5],[2,-10],[-3,-22],[1,-19],[4,-23]],[[76243,61028],[-18,-56],[-7,84],[30,47],[14,44],[15,31],[5,-37],[-14,-71],[-25,-42]],[[77103,61205],[-10,-7],[-16,37],[-3,90],[13,20],[7,5],[11,-11],[3,-14],[2,-18],[-3,-19],[-4,-83]],[[76024,62605],[-4,-5],[-29,49],[-23,62],[36,12],[35,-13],[1,-33],[-8,-53],[-8,-19]],[[75969,63301],[6,-79],[-19,30],[-7,41],[-2,42],[22,-34]],[[76031,63109],[32,-48],[13,3],[19,-30],[1,-12],[-4,-24],[-9,-19],[-24,-20],[-16,16],[-7,52],[-19,25],[-6,20],[13,29],[7,8]],[[77372,58157],[-6,-1],[-6,2],[-6,9],[14,62],[4,-72]],[[77242,58578],[3,-32],[-18,34],[-3,95],[14,-60],[6,-14],[-2,-23]],[[77240,58980],[-2,-21],[-16,-43],[-14,25],[-4,13],[15,28],[15,-4],[4,6],[2,-4]],[[77309,59388],[-2,-95],[-14,46],[-2,52],[1,49],[3,8],[1,-8],[8,-22],[5,-30]],[[76334,60955],[-6,-15],[-11,11],[-3,6],[26,64],[3,-24],[-9,-42]],[[75835,63320],[4,-55],[-13,22],[-18,76],[1,50],[12,-23],[14,-70]],[[50663,58696],[-7,-33],[-21,-86],[-16,-36],[-69,-121],[-35,14],[-71,-24],[-11,28],[-16,3],[-21,-4],[-8,-11],[-2,-12],[-7,-17],[-14,-48],[-10,-12],[-13,-8],[-15,1],[-9,-6],[0,-24],[-3,-21],[-11,-10],[-4,-23],[1,-23],[-6,-10],[-14,5],[-8,7],[-7,-30],[-10,-20],[-6,0]],[[57940,77040],[-7,-139],[-27,-65],[-40,22],[-52,-18],[-27,-73],[-16,-22],[-14,-26],[-9,-95],[-2,-156],[-19,-19],[-18,-6],[-75,-137],[43,-39],[19,-29],[32,-82],[44,-93],[9,-45]],[[81951,54665],[32,0]],[[81684,54488],[31,-1],[34,10],[35,30],[33,37],[28,43],[27,47],[27,38],[43,44],[15,-4],[0,-31],[-6,-36]],[[35652,54182],[26,99],[3,45],[24,2],[37,-52],[30,-75],[40,-243],[6,-225],[17,-118],[46,-245],[3,-45],[7,-55],[15,-58],[16,-96],[1,-18],[-11,-26],[16,-2],[14,-15],[9,-61],[11,-41],[21,-56],[43,-19],[33,-7],[37,-31],[27,-41],[21,-138],[-7,-87],[2,-61],[-11,-24],[-30,-40],[-7,-22],[-62,-103],[-14,-49],[-33,-65],[-33,-125],[-48,-114],[-17,-29],[-26,-7],[-16,-17],[-37,-93],[-51,-31],[-4,-54],[-29,-124],[-26,-67],[-16,-23],[-41,-122],[-5,-54],[0,-94],[-28,-57],[-28,-37],[-4,-80],[-12,-27],[-11,-18],[-58,21],[-91,-88],[-30,-21],[98,-5],[32,-46],[69,31],[83,110],[32,24],[65,75],[27,50],[48,60],[10,26],[27,29],[15,-36],[1,-23],[-22,-44],[6,-28],[14,-36],[5,-49],[2,-37],[9,-66],[30,-88],[1,-30],[-4,-38],[14,-32],[15,-19],[51,-95],[39,53],[25,15],[15,23],[33,14],[27,-22],[51,-32],[37,34],[75,78],[-23,-138],[-17,-127],[-13,-51],[-13,-138],[-13,-37],[-10,-42],[17,15],[14,20],[18,53],[14,92],[55,247],[16,22],[45,28],[78,197],[31,-1],[19,-45],[19,-27],[4,54],[27,22],[-28,27],[-5,24],[-2,40],[19,55],[-12,48],[40,61],[-3,45],[14,38],[18,39],[21,19],[3,33],[13,14],[10,4],[20,-37],[22,44],[21,17],[9,-7],[12,-20],[12,-8],[10,4],[26,28],[24,-46],[15,-10],[-4,26],[-8,23],[6,20],[11,12],[36,-11],[19,-20],[21,-38],[28,-3],[23,4],[14,-21],[23,1],[11,-33],[35,-46],[7,-31],[28,-16],[27,-19],[28,-5],[28,5],[1,-40],[21,-11],[26,9],[21,-48],[53,-37],[38,-56],[24,10],[27,-15],[30,-121],[6,-87],[13,12],[12,39],[16,71],[29,23],[14,-27],[30,-44],[25,-47],[11,-31],[19,-5],[-16,-38],[16,4],[19,27],[17,-55],[13,-60],[2,-62],[-12,-35],[-10,-22],[-12,-44],[-13,-7],[-14,-14],[16,-32],[10,-30],[24,82],[16,23],[23,13],[13,-59],[2,-55],[-38,-23],[0,-44],[-12,-24],[-7,-29],[-6,-59],[-8,-50],[-23,-218],[0,-36],[27,38],[52,112],[16,118],[20,117],[22,37],[14,0],[20,-13],[1,-38],[-3,-22],[-22,-58],[-9,-32],[9,-32],[50,97],[22,33],[19,-6],[38,44],[76,9],[5,51],[16,22],[41,-6],[82,-45],[29,-37],[43,-35],[23,-41],[96,-76],[69,-8],[34,35],[43,-36],[23,-41],[44,-21],[45,-12],[35,29],[88,10],[112,42],[66,-10],[75,-28],[54,-71],[45,-41],[27,-40],[44,-41],[94,-111],[33,-64],[58,-88],[59,-37],[32,-91],[25,-42],[61,-154],[71,-108],[47,-109],[90,-69],[35,-115],[61,-14],[26,-17],[32,-49],[44,-27],[56,8],[63,-6],[50,23],[120,-43],[19,-21],[24,-49],[44,-182],[26,-202],[13,-154],[30,-120],[16,-226],[14,-71],[1,-54],[12,-13],[7,-152],[-3,-61],[-11,-80],[-1,-35],[2,-23],[-5,-33],[-2,-32],[12,-72],[0,-57],[-15,-70],[-21,-181],[-53,-302],[-51,-173],[-71,-178],[-47,-93],[-18,-10],[-17,19],[12,-50],[-11,-43],[-47,-131],[-46,-86],[-49,-150],[-4,-3],[-62,-58],[-37,-47],[-47,-85],[-43,-135],[-9,-18],[-16,10],[0,-69],[-37,-108],[-11,-16],[0,30],[7,24],[3,25],[-1,29],[-10,-21],[-22,-82],[7,-59],[-16,-90],[-60,-257],[-75,-217],[-17,-66],[-62,-146],[-45,-70],[-12,-1],[-15,6],[-7,112],[-36,68],[-10,12],[-15,-72],[-12,-20],[-18,-4],[19,-31],[6,-36],[-19,-73],[-1,-66],[-34,-72],[-20,-53],[-10,-67],[-7,-62],[16,17],[7,-13],[5,-19],[-3,-29],[-11,-54],[2,-134],[-4,-30],[11,-33],[12,56],[6,-16],[-32,-359],[13,-162],[4,-183],[15,-179],[16,-160],[1,-13],[-22,-185],[-28,-183],[-17,-150],[-11,-161],[-11,-78],[-4,-79],[13,-188],[4,-35],[-34,-84],[-37,-41],[-21,-40],[-45,-151],[-25,-224],[-1,-118],[12,-249],[-9,-102],[-14,-67],[-17,-45],[-44,-53],[-39,-131],[-17,-137],[-27,-50],[-5,-76],[-21,-83],[-56,-124],[-36,-36],[-18,-34],[-11,-72],[-35,-119],[-25,-154],[6,-53],[1,-8],[9,-178],[-3,-46],[-34,-49],[-128,-91],[-34,-39],[-77,-156],[-4,-36],[3,-53],[12,-30],[-13,-33],[-15,-59],[-22,4],[-127,0],[-69,-19],[-36,4],[-16,14],[-18,23],[-6,30],[10,46],[-6,27],[-19,-1],[-20,-13],[-4,-27],[1,-20],[8,-28],[4,-35],[-8,-30],[-40,-4],[-46,-28],[-56,-12],[-45,-20],[-21,26],[21,13],[29,-7],[32,21],[-7,25],[-45,32],[-51,-19],[-28,-39],[-61,4],[-75,-29],[-12,-30],[2,-57],[15,-13],[14,-26],[-14,-24],[-13,-11],[-79,-27],[-73,-112],[-31,-14],[-27,-49],[-3,-42],[-8,-25],[-18,-2],[-38,23],[-50,1],[-35,-18],[-183,-182],[-66,-72],[-75,-148],[-126,-166],[-67,-99],[-12,-26],[-11,-1],[-21,-21],[9,-17],[14,-2],[-6,-57],[-26,-40],[-50,-103],[-11,7],[16,54],[-25,2],[-36,20],[-15,-22],[9,-54],[-14,-22],[-24,-3],[-23,6],[-24,39],[11,-70],[51,-18],[22,-16],[8,-27],[-40,-126],[-34,-17],[-3,-17],[18,0],[10,-35],[-12,-141],[-16,-26],[-10,-1],[-10,-24],[14,-46],[13,-33],[-2,-65],[-5,-54],[0,-52],[17,-101],[6,-104],[7,-37],[4,-42],[-11,-39],[6,-63],[-19,-107],[10,-154],[-4,-144],[-8,-76],[-12,-59],[-29,-76],[-1,-77],[-62,-71],[-69,-99],[-63,-118],[-69,-166],[-80,-252],[-73,-360],[-89,-272],[-36,-98],[-48,-109],[-64,-128],[-86,-128],[-94,-114],[-34,-51],[-33,-73],[-8,30],[7,49],[-4,37],[-1,48],[19,9],[28,-30],[14,20],[11,21],[34,12],[65,125],[48,47],[28,79],[4,42],[-1,85],[16,22],[35,-8],[7,24],[-3,27],[6,59],[48,52],[22,63],[-7,160],[8,7],[20,-25],[9,11],[10,70],[-5,36],[-23,10],[-79,-79],[-26,3],[-4,62],[-39,29],[-15,52],[-4,35],[-14,14],[1,-61],[4,-59],[34,-69],[-8,-28],[-17,-32],[-11,-71],[1,-92],[-9,28],[-12,16],[-5,-99],[-23,-38],[-7,-38],[6,-43],[-12,-30],[-58,-80],[-58,-55],[-13,-26],[-6,-61],[-9,-63],[-26,-55],[-21,-110],[1,-47],[7,-69],[11,-46],[-18,-31],[-23,-59],[-19,-67],[-46,-251],[-40,-151],[-31,-74],[-44,-78],[-125,-196]],[[33997,34453],[13,28],[44,61],[24,54],[5,48],[21,43],[38,38],[41,70],[47,102],[28,75],[9,49],[19,37],[26,26],[23,55],[20,84],[26,66],[35,49],[19,41],[4,32],[9,21],[15,9],[8,17],[-1,25],[5,17],[8,10],[15,-4],[21,-15],[12,3],[4,21],[-5,24],[-15,27],[5,30],[40,48],[29,18],[19,30],[18,47],[28,33],[40,18],[10,18],[-1,23],[8,16],[23,12],[13,22],[2,33],[7,31],[13,28],[15,10],[16,-7],[15,10],[14,29],[17,13],[19,-2],[10,6],[34,14],[18,24],[16,53],[13,20],[12,-12],[21,18],[29,48],[5,1],[22,22],[22,82],[11,55],[-3,45],[-7,32],[3,48],[7,128],[2,53],[12,37],[-1,36],[-21,82],[-21,71],[-12,121],[-7,46],[-18,13],[-16,40],[-20,3],[-9,16],[-10,12],[-15,-3],[-12,-24],[-23,-1],[-14,-9],[-17,-21],[-16,9],[-10,19],[-21,0]],[[33844,40227],[19,8],[7,23],[13,32],[17,8],[20,12],[7,24],[-47,84],[-28,51],[17,69],[27,116],[27,112],[21,85],[5,16],[18,6],[-3,44],[-1,29],[-14,1],[16,105],[24,148],[18,113],[6,19],[13,5],[3,13],[-16,19],[-10,35],[-20,100],[-33,159],[-3,57],[-12,35],[-20,-12],[-24,12],[-60,86],[-39,47],[-13,27],[-6,89],[-12,97],[-5,121],[2,30],[33,91],[0,47],[3,40],[-1,32],[-9,1],[-13,-14],[-20,-11],[-12,-1],[-116,9],[-133,10],[-110,8],[-96,7],[-3,79],[-5,133],[-4,94],[-6,149],[-39,93],[-41,101],[-15,25],[50,4],[36,2],[-7,271],[-11,28],[-10,87],[-6,49],[-18,41],[-4,45],[3,30],[10,19],[7,46],[-5,47],[-11,43],[-13,42],[-24,26],[-36,46],[-53,60],[-45,41],[-15,-5],[-79,-16],[-27,-9],[-18,10],[-59,-1],[-24,32],[-19,37],[-42,95],[-6,47],[-16,15],[-25,-6],[-25,7],[-48,39],[-44,40],[-22,-1],[-20,25],[-34,61],[-16,24],[-7,32],[-7,47],[-14,10],[-18,-9],[-19,-24],[-27,16],[-33,44],[-21,33],[-12,16],[-29,24],[-27,5],[-42,-35],[-34,14],[-54,13],[-46,25],[-17,65],[-9,44],[-27,27],[-22,33],[-26,50],[-13,17],[-23,14],[-22,17],[-2,32],[-8,42],[-2,10],[-15,51],[-7,4],[-8,-10],[-5,-8],[-6,10],[-2,22],[4,37],[-8,38],[-21,40],[-11,41],[-1,43],[-5,29],[-8,14],[-5,25],[-1,36],[6,43],[13,49],[-3,76],[-19,103],[-10,74],[-2,45],[3,34],[11,32],[23,81],[4,61],[-7,69],[-1,52],[5,37],[-8,47],[-16,45],[-11,1],[-16,-12],[-18,-38],[-22,-7],[-19,24],[-61,-10],[-94,-24],[-38,-24],[-22,-10],[-26,-8],[-43,-44],[-106,-169],[-22,-24],[-25,-3],[-15,-24],[-23,-18],[-46,-67],[-24,-54],[-15,-48],[-18,-2],[-13,13],[-44,-6],[-22,-17],[-24,-47],[-30,-85],[-13,-24],[-24,-26],[-28,-20],[-34,-32],[-16,-2],[-13,-5],[-12,14],[-4,31],[-18,19],[-42,10],[-63,22],[-65,4],[-33,-2]],[[36214,51711],[26,-3],[37,11],[24,27],[28,5],[27,-3],[92,-30],[55,-9],[20,-9],[20,-14],[14,-15],[4,-32],[-14,-51],[-10,-53],[-9,-75],[-7,-16],[-12,4],[7,-67],[-2,-27],[-6,-26],[-15,-54],[-22,-69],[-7,-14],[-17,-24],[-14,-31],[3,-29],[7,-29],[-8,-36],[-27,-53],[-16,-13],[-14,-6],[-14,6],[-23,53],[-3,-42],[-6,-42],[-8,-24],[-31,3],[-17,23],[-28,25],[-5,-69],[-18,-47],[-17,-15],[-27,-10],[-16,-20],[-30,16],[-27,31],[-16,3],[-12,-25],[-63,-5],[-29,-26],[-18,8],[-26,52],[-5,34],[-15,70],[-14,84],[-10,75],[8,66],[17,-3],[20,-9],[4,4],[1,21],[-4,18],[-32,-3],[-21,39],[-3,60],[4,124],[2,26],[15,36],[4,31],[-3,34],[6,61],[13,52],[52,67],[59,24],[172,-65]],[[37741,38512],[9,-16],[-16,2],[-18,-14],[-28,-12],[-11,23],[24,32],[9,24],[6,-5],[8,-17],[17,-17]],[[36504,36634],[-5,-7],[-18,72],[35,69],[12,-28],[-9,-55],[-10,-38],[-5,-13]],[[37427,38082],[0,-30],[-11,15],[-31,-12],[-11,23],[42,97],[8,-14],[6,-18],[5,-25],[-5,-16],[-3,-20]],[[37639,50149],[-28,-56],[9,65],[-4,45],[3,35],[19,34],[6,5],[-2,-41],[1,-13],[-4,-74]],[[39237,44298],[-10,-12],[-2,36],[29,47],[4,54],[15,-25],[4,-28],[0,-12],[-40,-60]],[[39193,44081],[-9,-33],[-11,5],[-5,22],[-8,22],[4,18],[8,10],[20,-2],[1,-42]],[[37532,51083],[-18,-27],[-5,-15],[-15,11],[3,16],[4,-2],[5,47],[25,-6],[1,-24]],[[36183,51997],[12,-30],[-40,-120],[-21,-18],[-24,-3],[-31,36],[-48,-3],[-15,9],[-1,52],[20,56],[40,-3],[69,45],[39,-21]],[[36028,52959],[-28,-26],[-16,10],[-15,69],[5,57],[20,19],[16,-4],[6,-8],[14,-93],[-2,-24]],[[35929,51767],[-76,-113],[-25,37],[-6,22],[5,21],[-1,9],[8,39],[43,32],[21,5],[27,-10],[5,-27],[-1,-15]],[[36265,51778],[-73,-18],[-34,29],[8,24],[25,38],[30,28],[28,12],[28,-15],[8,-33],[-2,-32],[-18,-33]],[[35992,51923],[-5,-85],[-50,36],[4,87],[24,24],[20,46],[7,56],[1,77],[8,14],[6,5],[6,-5],[3,-116],[2,-70],[-26,-69]],[[36068,52069],[-30,-19],[-5,18],[0,72],[8,40],[38,11],[4,12],[11,7],[7,-25],[-1,-41],[-32,-75]],[[35602,51017],[-30,-11],[38,144],[34,67],[1,133],[36,118],[34,49],[47,14],[26,-72],[-32,-205],[-9,-1],[-43,-108],[-48,-75],[-54,-53]],[[36531,35848],[-19,-26],[4,137],[10,45],[11,34],[14,21],[10,-29],[-8,-67],[-25,-81],[3,-34]],[[54907,76553],[-23,24]],[[32597,39035],[-4,9],[-22,34],[-20,63],[-5,29],[-3,1],[-118,-1],[-113,-3],[-11,-13],[-17,0],[-12,13],[-11,-1],[-17,-13],[-15,-25],[-44,-169],[-21,-72],[-16,-65],[-12,-110],[-4,-19],[-14,38],[-20,102],[-9,57],[-13,66],[-22,82],[-27,25],[-16,8],[-23,16],[-42,20],[-18,4],[-119,2],[-9,2],[-46,-9],[-24,6],[-25,46],[-55,81],[-11,26],[-21,17],[-13,2],[-7,-16],[-10,-68],[-11,-61],[-12,-35],[-39,-25],[-37,-27],[-20,-7],[-11,-30],[-5,-43],[-9,-38],[-53,-58],[-12,-24],[-6,-57],[-29,-71],[-10,-27]],[[50751,55512],[-116,-24],[-130,-39],[-55,-25]],[[25473,62483],[-15,-65],[15,-9],[14,7],[32,-3],[13,-71],[-4,-61],[-30,-158],[-4,-55],[-14,-81],[19,-54],[-18,-72],[-6,-46],[-1,-69],[9,-132],[-15,-190],[-25,-83],[-16,-32],[-28,-82],[-37,-25],[-51,-133],[-9,-35],[5,-38]],[[25569,62168],[-13,-11],[11,34],[1,21],[16,89],[10,-1],[3,-8],[-28,-124]],[[25596,61879],[-21,-81],[-2,23],[9,60],[12,21],[8,22],[2,26],[10,-13],[-3,-25],[-15,-33]],[[50701,81276],[121,97],[73,50],[35,15]],[[33474,59378],[-8,-11],[-25,23],[-9,28],[-1,88],[15,8],[29,-70],[17,-25],[-18,-41]],[[75645,63819],[-5,0],[-16,53],[-15,58],[-39,110],[-12,197],[-1,97],[-26,114],[-18,158],[-7,41],[9,51],[2,19],[-5,-4],[-14,-26],[-17,63],[-11,56],[-46,117],[-13,52],[-1,50],[-19,-50],[-27,-36],[-27,-54],[-18,-16],[-57,-10],[-33,72],[-47,175],[-7,40],[6,103],[-11,97],[0,52],[-3,34],[-8,-8],[-4,-23],[2,-36],[-3,-31],[-41,6],[-39,14],[34,-51],[36,-12],[19,-46],[3,-36],[-1,-40],[-19,-29],[-17,-17],[3,-39],[21,-47],[-26,-14],[-6,-31],[-1,-43],[13,-39],[5,-29],[-3,-26],[12,-29],[18,-60],[5,-42],[-7,-60],[-10,-23],[-16,-23],[-39,-75],[-19,-86],[-16,-40],[-20,-7],[-7,18],[-17,22],[0,42],[5,33],[33,81],[-18,-11],[-21,-23],[-31,-43],[-11,53],[-6,50],[0,61],[25,91],[-29,-45],[-8,-57],[4,-67],[-4,-47],[-11,-62],[-15,-37],[-25,-24],[-11,-37],[-17,-27],[0,54],[-5,71],[-18,168],[-4,-36],[9,-104],[0,-68],[-14,-54],[-27,-57],[-21,-8],[-12,8],[-19,36],[-20,51],[-4,82],[-8,45]],[[75319,64616],[-30,-40],[10,239],[22,-89],[6,-48],[-8,-62]],[[75432,64736],[-13,-17],[-12,14],[-16,56],[8,71],[5,11],[7,-23],[11,-50],[7,-38],[3,-24]],[[75215,64567],[-48,-20],[-25,6],[46,151],[-1,68],[-7,55],[-24,44],[-1,32],[-11,43],[-5,51],[26,16],[21,-29],[3,-16],[4,-42],[11,-43],[36,-88],[0,-55],[-10,-132],[-15,-41]],[[75520,64419],[-10,-47],[-5,34],[4,43],[4,24],[3,0],[6,-25],[-2,-29]],[[75541,64232],[-17,-3],[-8,17],[4,24],[-5,78],[14,8],[7,-1],[5,-22],[3,-42],[-3,-59]],[[75178,65070],[4,-25],[-15,15],[-12,17],[-7,23],[12,12],[18,-42]],[[64057,66752],[-9,-44],[-9,16],[-21,76],[6,53],[-10,76],[5,22],[26,11],[6,-4],[-8,-24],[15,-43],[2,-70],[-3,-69]],[[28428,65811],[1,-13],[-28,-36],[20,-26],[19,56],[15,-46],[8,-86],[-1,-15],[1,-12],[3,-17],[1,-24],[-16,-75],[-54,8],[-2,63],[-8,12],[-13,91],[-17,29],[-24,74],[14,19],[18,-6],[10,9],[25,7],[16,10],[12,-22]],[[28548,66764],[-6,-5],[-24,58],[-19,17],[30,41],[13,35],[0,76],[7,42],[-2,36],[7,37],[-9,42],[-26,33],[-50,131],[-79,32],[-41,1],[22,21],[21,-2],[32,-13],[39,-6],[23,-39],[22,-51],[21,-20],[8,-14],[-1,-14],[3,-14],[27,-24],[26,-39],[8,-113],[-36,-54],[-6,-164],[-10,-30]],[[29714,64050],[-8,-42],[-30,-81],[-65,-20],[-73,-4],[-5,22],[-2,20],[5,30],[0,12],[-3,12],[26,13],[18,37],[27,7],[34,-27],[19,-1],[27,29],[22,63],[13,-8],[-5,-62]],[[28404,66075],[0,-70],[3,-52],[-3,-19],[-30,-34],[-8,-20],[-28,-20],[-17,-27],[-9,45],[-17,27],[-2,47],[-13,-16],[-19,10],[-30,35],[-19,48],[27,8],[5,-30],[22,37],[-5,19],[-4,3],[-7,36],[32,94],[7,60],[-15,98],[14,6],[36,-34],[16,-34],[0,-46],[16,-35],[21,-86],[27,-50]],[[28196,67240],[34,-18],[18,2],[11,12],[49,-5],[41,17],[6,-30],[-1,-16],[-86,-15],[-78,-45],[-43,-31],[-21,-3],[-15,16],[-52,93],[14,-10],[38,-52],[24,10],[22,34],[4,26],[-4,13],[10,41],[29,-39]],[[28514,66252],[-31,-12],[-23,11],[-5,10],[9,16],[21,13],[34,1],[15,-15],[2,-7],[-22,-17]],[[29428,64932],[6,-10],[-17,-23],[-40,28],[-9,-2],[-8,31],[-3,22],[2,21],[24,-16],[12,-30],[33,-21]],[[29325,65707],[-22,-63],[-12,6],[7,78],[15,12],[6,0],[6,-33]],[[29387,64639],[-20,-18],[5,30],[37,51],[21,44],[11,16],[5,12],[16,17],[8,28],[-2,24],[-17,38],[0,27],[6,20],[29,9],[-8,-29],[12,-82],[-39,-103],[-33,-31],[-31,-53]],[[28708,66524],[46,-65],[39,-24],[42,-82],[18,-29],[4,-26],[-7,-120],[-10,-73],[2,-63],[-10,18],[-10,42],[-17,24],[-5,13],[29,2],[3,66],[14,51],[-2,54],[-34,59],[-24,53],[-36,16],[-34,52],[-20,7],[-24,-10],[9,31],[6,41],[4,8],[17,-45]],[[28982,65351],[-12,-4],[-21,16],[-48,70],[-23,6],[8,39],[17,-14],[39,-60],[15,-30],[25,-23]],[[29211,65031],[-2,-15],[-35,115],[-44,28],[-26,28],[6,15],[17,7],[3,37],[-7,39],[-24,80],[-13,54],[-6,12],[-1,45],[27,-70],[12,-62],[18,-61],[13,-105],[35,-36],[25,-51],[2,-60]],[[29081,65783],[2,-30],[-19,6],[-28,-11],[-9,0],[6,20],[19,27],[1,26],[-24,37],[-27,92],[-13,22],[-6,35],[-23,38],[5,20],[4,4],[16,-9],[35,-134],[2,-12],[59,-131]],[[29711,64763],[17,-9],[9,1],[32,-17],[19,-24],[4,-10],[-10,-21],[-29,40],[-26,5],[-36,-1],[-14,8],[10,43],[24,-15]],[[29745,64231],[-37,-28],[-3,33],[18,27],[22,-32]],[[62435,74713],[27,9],[46,27],[13,-13],[13,-27],[7,-23],[1,-42],[5,-7],[23,14],[9,-17],[18,-21],[29,-20],[43,32],[21,8],[18,-1],[9,-10],[4,-33],[-4,-41],[-5,-22],[9,-16],[35,-40],[15,-21],[-7,-38],[26,-93],[9,-36],[10,-44]],[[62913,74254],[-1,53],[1,41],[-4,24],[-20,33],[-1,14],[6,8],[16,-5],[20,2],[10,13],[-22,43],[-19,29],[-17,19],[-3,12],[0,8],[3,10],[28,24],[3,21],[-2,25],[-44,36],[-34,-14],[-30,41],[-19,31],[-24,33],[-21,19],[-20,42],[-36,43],[-23,12],[1,7],[4,8],[9,6],[64,-1],[7,7],[4,19],[9,27],[10,41],[-1,34],[-63,55],[-46,50],[-32,67],[-22,61],[1,20],[6,19],[49,56],[4,15],[-1,10],[-18,29],[-22,29],[-7,22],[-14,11],[-27,1],[-46,36],[-10,4],[-2,7],[2,7],[33,15],[0,12],[-10,16],[-19,12],[-17,29],[-6,26]],[[63492,75947],[25,-34],[45,-90],[63,-147],[15,-42],[10,-48],[9,-59],[14,-52],[64,-130],[28,-48],[45,-63],[16,-14],[21,-3],[39,-1],[35,-24],[18,-17],[18,-25],[16,-28],[17,-77],[-62,25],[-62,-4],[-36,-16],[-34,-22],[-32,-32],[-21,-62],[-17,-142],[-25,-134],[0,-61],[12,-59],[-2,-29],[-11,-12],[-15,-25],[-19,-122],[-10,-25],[-12,-15],[-3,15],[0,32],[-27,28],[-14,-32],[-10,-67],[-20,-71],[-1,-13],[5,-219]],[[62653,75239],[3,19],[-8,9],[-8,0],[-8,-9],[0,-24],[10,-5],[11,10]],[[62506,75476],[-6,-7],[-9,7],[-3,14],[1,16],[9,3],[7,-4],[2,-14],[-1,-15]],[[89771,44956],[-7,-69],[-14,-55],[-1,-32],[3,-45],[22,-33],[18,-21],[10,-58],[31,-81],[-1,-56],[16,-69],[16,-137],[4,-121],[16,-80],[-10,-172],[11,-70],[15,-58],[18,-116],[13,-106],[19,-30],[38,-36],[41,40],[28,53],[31,13],[43,28],[31,-71],[17,-80],[74,-104],[42,-68],[32,-37],[30,-50],[-3,-50],[-7,-39],[7,-61],[4,-71],[-6,-86],[22,-130],[7,-103],[23,-101],[-2,-104],[-4,-40],[-3,-58],[18,-72],[17,-54],[24,-58],[33,-89],[23,-17],[20,-2],[-3,-90],[41,-179],[22,-147],[-15,-197],[-14,-114],[3,-56],[53,-137],[30,-25],[-6,-65],[-4,-101],[24,-78],[27,-58],[30,-35],[29,-28],[38,-28],[48,-12],[25,-44],[13,-35],[39,-12],[17,7],[22,14],[14,-24],[11,-31],[21,-86],[44,-85],[30,-14],[18,-43],[24,-11],[22,-6],[30,-33],[49,-75],[45,-13],[20,-21],[44,-83],[17,-44],[18,-66],[-22,-6],[-21,13],[-13,-64],[29,-90],[35,-63],[41,-67],[40,-94],[10,-72],[11,-29],[13,-101],[35,-59],[2,-108],[18,-149],[19,-135],[14,-40],[17,-65],[18,8],[14,21],[28,-64],[15,-28],[8,16],[-17,123],[11,72],[10,9],[16,2],[18,-58],[26,-62],[47,-55],[38,-52],[11,2],[-4,40],[1,59],[15,9],[14,-29],[25,-91],[5,-188],[0,-158],[17,-162],[24,-43],[16,-40],[28,-54],[18,-51],[23,-23],[74,-108],[20,-13],[32,-2],[40,-49],[19,-45],[43,-169],[20,-59],[43,-59],[19,-19],[29,-40],[10,-59],[3,-34],[17,-63],[25,-75],[38,-41],[34,-91],[2,-148],[18,-73],[12,-32],[27,-30],[11,-24],[-23,-195],[22,-391],[-12,-122],[22,-121],[52,-210],[12,-74],[7,-87],[34,-111],[-2,-169],[13,-80],[-3,-105],[-40,-112],[-31,-139],[-1,-118],[-20,-228],[-14,-62],[-10,-95],[-43,-230],[-2,-90],[6,-108],[-7,-103],[-11,-71],[-10,-130],[-44,-202],[-63,-150],[-4,-114],[-8,-50],[-13,-62],[-39,-69],[-23,-29],[-9,-40],[-22,0],[0,-13],[15,-12],[-7,-21],[-58,-36],[-40,-47],[-40,-113],[-17,-60],[-21,-57],[-13,-27],[-6,-28],[-8,-72],[-21,-13],[-18,-21],[8,-68],[-9,-78],[-3,-53],[-10,-34],[-11,12],[-10,-5],[-12,-19],[19,-5],[11,-9],[-39,-76],[-36,-78],[-10,-51],[-15,-65],[-14,-144],[-11,-83],[8,-58],[-2,-11],[-8,-4],[-5,7],[-17,-20],[-4,-20],[7,-25],[4,-8],[-2,-12],[-6,-13],[-16,0],[-19,-21],[-53,-213],[-23,-57],[-27,-87],[-10,-79],[-8,-86],[-10,-145],[-9,-103],[-21,-99],[-7,-71],[-3,-135],[10,-103],[-7,-54],[0,-52],[-8,-49],[-34,-11],[-28,-40],[-40,-65],[-23,-24],[-51,-18],[-99,8],[-189,-24],[-37,-15],[-70,-45],[-68,-70],[-66,-94],[-149,-256],[-117,-28],[-22,0],[-18,7],[-21,-16],[0,-32],[19,-33],[14,-31],[25,43],[11,-12],[4,-79],[1,-50],[-8,-27],[-15,-20],[-17,13],[-2,27],[-22,65],[-26,57],[-25,18],[-14,-19],[-23,-20],[-20,72],[-20,63],[-28,7],[-24,-1],[-19,27],[-39,43],[8,33],[10,35],[22,13],[-6,48],[-12,39],[-30,10],[-21,-7],[-12,-30],[-16,-54],[-64,-67],[-32,37],[-36,55],[18,-4],[36,2],[30,49],[13,31],[15,66],[-19,46],[-18,34],[-26,30],[-98,-102],[-21,-15],[-19,-20],[34,-17],[20,5],[21,-30],[-34,-42],[-26,-12],[-34,-25],[-63,-66],[-80,-136],[-35,-39],[-41,-32],[-56,37],[-31,8],[-40,56],[-67,38],[-63,74],[-44,38],[-31,8],[-43,-16],[-73,67],[-56,7],[-36,-67],[-29,5],[-18,9],[-59,110],[-56,55],[-107,28],[-66,76],[-49,146],[-94,168],[-25,61],[-12,60],[-1,47],[13,90],[17,89],[3,50],[-35,167],[-50,159],[-23,49],[-62,106],[-57,79],[-15,42],[-4,21],[27,-10],[12,32],[19,11],[14,-43],[17,-8],[0,72],[10,35],[-7,15],[-5,14],[-25,16],[-28,-24],[-21,-31],[-28,-26],[-11,-28],[-29,-1],[-12,-7],[-58,-53],[-36,-1],[-57,18],[18,73],[23,43],[19,50],[30,173],[-5,151],[-15,61],[-48,125],[-22,76],[-27,80],[-13,-46],[-8,-49],[-26,-70],[-13,-157],[-50,-239],[-35,-3],[-30,10],[-52,-28],[-35,-33],[-32,0],[-18,-10],[-23,8],[37,187],[31,-5],[35,7],[15,-3],[23,2],[18,86],[11,96],[-7,62],[-3,64],[7,73],[3,53],[43,174],[37,89],[42,72],[-5,68],[-14,85],[-4,65],[20,20],[19,41],[-22,187],[-14,55],[-22,55],[0,-71],[2,-70],[-30,-89],[-40,-64],[-26,-60],[-25,-136],[-32,-115],[-30,-43],[-27,-9],[-27,-18],[-42,-45],[-42,-39],[-30,-50],[-26,-27],[-86,-230],[-40,-76],[-8,-31],[-16,-26],[3,-37],[13,-24],[13,-102],[-8,-22],[-14,11],[-35,57],[-22,-21],[-18,-23],[-46,105],[-20,24],[-24,42],[-26,36],[-11,5],[-19,-8],[2,28],[13,23],[11,6],[21,-34],[24,-30],[14,-2],[6,12],[-23,118],[-15,104],[-7,30],[-19,106],[-9,30],[-40,74],[-43,88],[-11,104],[-16,67],[-20,42],[-31,38],[-85,14],[-35,107],[-21,133],[16,9],[19,2],[7,41],[-5,64],[-84,78],[-40,83],[-34,35],[-31,14],[-42,-3],[-53,3],[-126,131],[-30,4],[-90,-41],[-31,7],[-137,179],[-91,86],[-30,15],[-39,15],[-32,-21],[-22,-19],[-46,-22],[-182,14],[-156,-28],[-105,-19],[-67,-24],[-112,-107],[-133,-103],[-108,-49],[-99,-65],[-66,-19],[-84,-8],[-179,32],[-61,-24],[-97,-120],[-29,-29],[-55,-33],[-141,-155],[-65,-33],[-42,-11],[-36,-32],[-32,-66],[-45,-183],[-27,-86],[-61,-138],[-39,-46],[-40,6],[-44,-48],[-38,51],[-31,9],[-50,-4],[-174,-58],[-25,68],[-32,10],[-60,-3],[-90,20],[-164,-25],[-79,-28],[-31,-25],[-58,16],[-99,-23],[-35,-38],[-26,-35],[-51,-154],[-56,-51],[-47,-1],[-51,-12],[-105,-148],[-106,-144],[-36,-15],[-40,-24],[-52,-12],[-26,-13],[-122,37],[-77,4],[-97,22],[-83,71],[-64,40],[-73,155],[-44,58],[-80,70],[-23,-2],[-19,-19],[-33,49],[-1,64],[-9,54],[1,142],[5,167],[29,-38],[23,-36],[49,2],[44,62],[25,92],[21,103],[-3,110],[-15,193],[10,41],[15,16],[5,96],[4,296],[-11,111],[-68,226],[-45,197],[-32,88],[-28,143],[-23,198],[-7,100],[-7,185],[8,105],[-4,61],[-28,167],[-64,156],[-10,58],[0,61],[-15,71],[-51,143],[-52,123],[-9,60],[-10,249],[-19,114],[-89,287],[-104,248],[-29,102],[-13,34],[8,4],[11,-13],[13,-25],[7,-2],[6,21],[-1,47],[4,26],[9,-14],[11,-53],[33,-138],[10,-70],[42,-21],[13,18],[15,36],[5,97],[-21,44],[-20,19],[-32,72],[-21,115],[-33,107],[0,38],[15,28],[25,-15],[23,-62],[25,-57],[-4,-100],[-4,-27],[2,-23],[9,-22],[12,-17],[13,25],[11,58],[7,-7],[18,-133],[14,-36],[27,-42],[24,32],[11,28],[-4,94],[7,91],[-4,67],[-61,177],[-56,218],[-34,109],[-28,164],[-18,56],[-24,92],[-1,104],[2,71],[19,151],[18,79],[56,181],[3,78],[0,59],[8,90],[0,63],[-8,59],[-23,100],[31,177],[45,226],[18,33],[28,31],[5,-47],[-13,-157],[19,-81],[-6,-92],[18,15],[27,18],[21,48],[11,46],[51,184],[30,69],[41,50],[85,61],[81,80],[39,77],[49,66],[34,73],[32,49],[166,183],[28,34],[36,4],[44,-6],[40,10],[43,-42],[31,-5],[77,46],[41,40],[71,89],[31,25],[72,28],[82,37],[98,154],[70,-10],[63,-15],[51,46],[119,28],[66,39],[124,102],[33,35],[50,73],[44,91],[43,123],[27,110],[11,57],[26,90],[17,71],[14,34],[48,48],[71,135],[23,28],[4,43],[-15,24],[-19,15],[-13,143],[-12,99],[-1,69],[5,66],[28,103],[19,44],[28,51],[25,16],[21,45],[34,44],[15,45],[21,91],[19,69],[15,-3],[28,-160],[19,-85],[35,-100],[32,-148],[27,-67],[13,-44],[10,-20],[3,28],[-3,33],[13,112],[-6,79],[2,31],[6,12],[13,-8],[25,-44],[13,-16],[9,3],[-1,72],[13,45],[-5,31],[-22,-2],[-9,39],[-18,44],[-21,32],[-24,74],[-8,28],[10,14],[15,-2],[13,31],[5,42],[-11,69],[12,25],[22,-7],[36,-109],[16,11],[13,44],[23,12],[24,-8],[15,-31],[32,-32],[42,4],[22,-8],[45,6],[22,-10],[-4,17],[-25,20],[-27,4],[-32,-2],[-14,21],[-5,55],[8,40],[5,17],[21,-7],[19,2],[2,53],[7,48],[11,39],[0,37],[-12,-10],[-28,-86],[-14,70],[-20,53],[4,77],[12,76],[18,10],[16,-12],[23,45],[13,34],[-3,28],[3,21],[16,-6],[62,-69],[12,-36],[13,14],[4,39],[-1,39],[-14,-5],[-32,3],[-7,22],[3,19],[-15,46],[21,29],[17,2],[13,20],[0,27],[4,12],[10,-17],[32,-7],[31,-35],[15,-8],[6,19],[2,41],[-39,41],[-1,40],[-17,47],[0,45],[24,39],[5,37],[15,15],[27,0],[19,32],[21,11],[6,70],[-1,48],[9,12],[21,-20],[-6,-55],[0,-53],[-6,-29],[8,2],[5,12],[9,35],[22,-14],[6,-37],[3,-37],[11,-12],[15,56],[21,15],[-1,71],[8,51],[2,38],[13,19],[3,40],[-10,28],[-6,51],[18,11],[18,-25],[13,-64],[8,-29],[11,16],[7,42],[22,25],[22,-34],[24,-48],[31,42],[28,77],[-5,47],[4,49],[35,26],[29,-19],[25,-52],[54,-39],[46,-56],[20,-36],[40,-58],[25,-60],[34,-107],[82,-131],[5,-23],[-11,-43],[-10,-56],[-12,-95],[-3,-139],[12,10],[12,50],[13,-10],[14,-32],[2,31],[-9,18],[-15,64],[0,34],[12,28],[19,32],[20,22],[13,18],[2,24],[18,23],[28,8],[16,-4],[118,-59],[29,-60],[3,-73],[11,-26],[7,46],[-2,100],[10,20],[31,-15],[22,-20],[30,-66],[6,-32],[13,-21],[4,30],[-6,43],[-4,50],[6,43],[36,3],[23,10],[-11,16],[-15,6],[-25,40],[-17,42],[27,42],[-1,10],[-25,-1],[-34,40],[-29,56],[22,103],[45,101],[25,34],[2,34],[12,62],[8,53],[2,42],[11,43],[28,41],[37,15],[18,16],[18,38],[16,46],[-34,90],[3,50],[6,59],[42,43],[22,112],[15,17],[33,-3],[13,10],[-2,89],[3,35],[14,14],[18,-12],[11,-39],[25,-36],[9,20],[-4,39],[-3,51],[23,11],[19,3],[1,41],[-3,33],[8,14],[48,7],[13,34],[7,29],[6,-16],[8,-66],[27,-38],[80,-1],[45,27],[19,-16],[30,-13],[32,31],[20,24],[33,-31],[11,-32],[8,69],[20,24],[20,14],[26,-12],[10,4],[-23,51],[1,46],[-1,69],[4,62],[8,45],[-55,91],[-55,14],[-40,-19],[-17,15],[-36,72],[-34,27],[-2,18],[41,52],[16,-9],[24,-49],[14,-17],[12,4],[7,38],[11,20],[20,-12],[62,-82],[34,-80],[18,21],[31,45],[29,-9],[17,-27],[25,-97],[20,-48],[48,-13],[24,-19],[25,-32],[33,3],[70,-12],[65,-62],[27,-39],[32,-11],[18,-15],[34,-5],[53,44],[24,-40],[11,-28],[48,-52],[53,-16],[37,53],[55,39],[38,60],[28,29],[27,49],[10,-2],[-22,-46],[-2,-26],[17,-11],[-2,-14],[-23,-35],[-29,-56],[1,-34],[11,-18],[13,8],[18,28],[23,16],[19,-23],[7,-80],[14,-53],[30,-7],[19,0],[19,74],[-10,63],[-12,14],[6,23],[48,104],[27,-3],[19,-102],[31,-53],[32,4],[17,-14],[14,-61],[-114,-251],[-5,-28],[15,-45],[6,-53],[-37,-128],[-14,-6],[-13,35],[-19,22],[-18,-16],[-18,-9],[-66,-71],[0,-183],[17,-109],[-10,-71],[-19,-126],[-22,-47],[-17,-30],[-57,-172],[-18,-41],[-19,-59],[6,-56],[7,-39],[22,-44],[83,-92],[38,-64],[66,-76],[15,-53],[9,-43],[47,-49],[34,-30],[10,8],[7,10],[8,0],[9,-6],[-2,-38],[-3,-21],[3,-27],[24,-34],[38,1],[22,8],[25,-36],[22,-24],[36,-48],[63,-58],[49,-38],[58,-140],[44,-81],[49,-59],[72,-41],[33,7],[54,-48],[53,-22],[28,-66],[9,-50],[3,-39],[26,-92],[54,-30],[69,-92],[57,-41],[14,-24],[25,-29],[48,-1],[84,46],[38,47],[51,74],[23,128],[14,103],[71,212],[20,105],[18,140],[15,87],[-5,95],[16,172],[36,237],[13,79],[-7,118],[-22,220],[10,77],[10,106],[-16,77],[-16,53],[-2,75],[17,140],[15,74],[16,96],[-9,182],[34,63],[13,32],[26,0],[12,-14],[3,36],[-10,34],[-4,39],[-8,20],[-16,7],[-13,21],[-19,22],[3,81],[33,156],[18,60],[11,-25],[14,-20],[2,45],[-5,46],[25,152],[27,207],[8,188],[44,36],[23,47],[13,55],[25,0],[17,-24],[-11,-41],[-4,-31],[47,-79],[16,-60],[7,-57],[9,-54],[4,-72],[0,-115],[6,-109],[17,-34],[15,-22],[22,-3],[31,-18]],[[92521,37009],[-7,-16],[-13,29],[-8,102],[6,59],[14,55],[3,30],[-6,62],[42,71],[10,37],[4,48],[-15,52],[-12,10],[10,29],[12,15],[9,6],[7,-5],[5,-102],[17,-36],[-3,-50],[-58,-259],[-16,-97],[-1,-40]],[[88751,42296],[-21,-51],[-11,7],[-10,-27],[-20,-13],[-12,0],[-22,-13],[-4,16],[4,51],[19,56],[18,35],[46,16],[36,25],[4,-4],[26,-65],[-38,-8],[-15,-25]],[[87975,43891],[12,-24],[13,2],[12,53],[7,-8],[5,-13],[4,-23],[-17,-40],[-8,-6],[-7,-23],[-12,-73],[1,-24],[11,-25],[27,-22],[13,10],[5,-3],[-5,-36],[-11,-27],[-36,12],[-32,-4],[-52,26],[-27,3],[-8,10],[16,21],[10,28],[-5,67],[4,84],[30,41],[14,42],[20,26],[13,-3],[-2,-26],[5,-45]],[[86238,45115],[23,-14],[10,-19],[7,-21],[1,-25],[-29,-11],[-52,37],[-51,-31],[-15,0],[-10,22],[8,61],[19,-9],[16,22],[-3,67],[-9,37],[27,68],[12,13],[12,0],[11,-48],[2,-51],[13,-48],[8,-50]],[[86282,45290],[37,-5],[45,43],[21,-18],[9,4],[33,41],[21,12],[15,30],[14,-33],[32,-38],[11,-40],[13,-19],[5,-12],[-20,-42],[-3,-45],[-21,3],[-25,-74],[-95,-124],[-85,106],[-37,71],[-24,99],[-5,82],[-10,51],[4,14],[5,6],[7,-1],[25,-56],[12,-15],[16,-40]],[[81439,36835],[-7,-24],[-54,180],[-15,123],[10,22],[10,6],[32,-170],[10,-39],[0,-40],[4,-12],[10,-46]],[[88220,31256],[67,-14],[26,21],[32,-17],[22,-56],[-16,-27],[-15,-4],[-49,23],[-46,-18],[-13,-23],[-9,-51],[-40,-28],[-18,31],[-48,22],[-17,-32],[-34,9],[-32,-14],[-43,8],[-46,57],[-14,26],[11,47],[16,34],[126,49],[67,41],[55,-7],[15,-9],[14,-21],[-10,-38],[-1,-9]],[[90412,29749],[-42,-38],[-15,17],[1,29],[3,13],[36,2],[17,-23]],[[90364,29671],[10,-28],[2,-11],[-24,22],[-39,-5],[24,40],[20,-8],[7,-10]],[[91400,40154],[-6,-6],[-10,0],[-13,11],[12,74],[6,-39],[12,-32],[-1,-8]],[[91370,40236],[-6,-3],[-7,6],[5,24],[7,19],[10,14],[-3,-52],[-6,-8]],[[91984,38311],[10,-15],[8,2],[8,-9],[-3,-38],[13,-42],[6,-30],[-10,-24],[-6,-8],[-15,20],[-42,121],[7,41],[24,-18]],[[91809,38984],[-8,-1],[-7,10],[6,23],[1,32],[10,-10],[7,-45],[-9,-9]],[[91646,39059],[-10,-18],[-6,42],[1,44],[10,15],[5,-58],[0,-25]],[[92649,36038],[-24,-158],[-7,3],[-9,24],[1,91],[10,58],[24,-10],[5,-8]],[[92622,36108],[-6,-9],[-12,55],[-4,56],[5,51],[14,11],[10,-4],[-11,-94],[4,-66]],[[89520,45676],[-23,-33],[-15,18],[-4,36],[2,16],[19,28],[21,-65]],[[89538,45972],[-17,-36],[-17,11],[-6,20],[6,29],[23,5],[11,-29]],[[89490,45994],[-7,-16],[-12,34],[14,40],[12,-19],[-7,-39]],[[90632,41341],[6,-55],[12,-42],[-5,-28],[-7,-21],[-18,19],[-12,51],[-21,41],[-5,23],[25,-2],[12,8],[5,9],[8,-3]],[[87943,45288],[-20,-35],[-1,26],[10,21],[25,84],[11,20],[6,11],[5,31],[1,46],[14,7],[-11,-105],[-40,-106]],[[87871,45159],[-44,-43],[24,58],[51,52],[8,12],[-2,-25],[-26,-43],[-11,-11]],[[88081,42754],[-12,-27],[-15,28],[-3,29],[-12,8],[6,27],[6,7],[6,33],[16,-39],[1,-43],[7,-23]],[[88017,42845],[-5,-4],[0,48],[8,24],[4,-50],[-7,-18]],[[87941,42840],[-17,-2],[-4,3],[-3,25],[5,23],[18,6],[7,-6],[-6,-49]],[[88738,41984],[-11,-10],[-3,24],[14,24],[9,34],[19,-30],[3,-30],[-31,-12]],[[87843,43879],[-7,-6],[-25,11],[0,21],[3,15],[7,10],[16,41],[11,-24],[5,-49],[-10,-19]],[[86831,45332],[-6,-9],[-22,89],[6,27],[-9,46],[15,5],[12,34],[4,-16],[1,-63],[9,-36],[-10,-77]],[[84777,43444],[-18,-36],[-12,29],[7,58],[12,20],[10,-10],[-1,-45],[2,-16]],[[84610,42971],[-11,-17],[-10,5],[0,23],[-11,24],[6,28],[4,14],[9,-2],[3,-23],[12,-26],[-2,-26]],[[82068,39868],[-17,-45],[-19,9],[-3,23],[13,37],[22,45],[7,-28],[-3,-41]],[[90289,28348],[32,-2],[18,14],[16,-2],[19,-33],[22,-18],[16,3],[13,-6],[12,-24],[30,-20],[14,-13],[11,-20],[13,-16],[81,-54],[57,-26],[71,12],[21,15],[21,22],[17,-20],[17,-32],[-3,34],[6,30],[17,23],[20,15],[32,-2],[31,7],[14,13],[14,2],[19,-17],[19,-9],[13,22],[21,51],[12,18],[55,-16],[15,0],[27,53],[17,-1],[51,-42],[22,-53],[-3,-97],[2,-34],[4,-34],[2,-67],[-6,-67],[-1,-52],[3,-52],[-3,-98],[8,-64],[-4,-44],[0,-21],[7,-19],[4,-22],[-3,-28],[3,-32],[-3,-27],[-11,4],[-4,21],[2,26],[-2,22],[-6,19],[-20,22],[6,13],[10,12],[-7,29],[-13,-24],[-8,-33],[5,-11],[-8,-9],[-17,-38],[-12,-51],[-5,-50],[1,-52],[-10,-40],[-14,-39],[-3,-49],[1,-91],[11,-83],[7,-113],[-10,-15],[-30,-7],[-14,-15],[-24,57],[-15,58],[11,24],[24,-14],[8,13],[2,16],[-2,15],[-30,32],[-33,15],[-11,-19],[4,-55],[-3,-13],[-24,-21],[-12,80],[-31,60],[1,-29],[13,-50],[-1,-21],[-5,-29],[-13,-10],[-5,-23],[0,-32],[-5,-51],[-20,-23],[-48,57],[-4,-19],[1,-17],[25,-33],[-12,-25],[-8,-29],[-14,-76],[-23,-64],[-11,-4],[-37,10],[-42,54],[-38,-6],[-62,4],[-40,-20],[-9,59],[-8,21],[3,18],[32,13],[33,-1],[-6,23],[-8,8],[-15,-5],[-41,19],[-29,-8],[-19,28],[-34,96],[-20,45],[-12,18],[-13,9],[-9,14],[-61,221],[-8,51],[-11,129],[48,-62],[18,-39],[9,-50],[16,61],[-3,19],[-43,73],[-6,21],[-2,25],[-10,-25],[-17,-3],[7,51],[-6,51],[-51,111],[-39,105],[-38,130],[-3,16],[-1,28],[-18,87],[-10,65],[-4,56],[17,114],[3,64],[27,-29],[63,-37]],[[89979,28734],[-8,-2],[-6,32],[3,47],[-14,45],[8,46],[-1,50],[5,22],[16,24],[3,43],[14,2],[25,-33],[9,-85],[-4,-51],[9,-46],[-8,-40],[-21,-32],[-30,-22]],[[91110,28941],[50,-104],[25,-17],[8,-11],[-2,-45],[-11,-20],[20,-26],[-3,-17],[-4,1],[-24,-35],[-29,-17],[-9,12],[-8,17],[-6,23],[-37,91],[4,25],[-8,38],[-18,-3],[-12,23],[20,22],[26,61],[18,-18]],[[90931,26844],[-13,-59],[-21,10],[-22,-10],[-13,40],[0,10],[16,-10],[6,13],[4,17],[5,4],[4,24],[14,29],[8,0],[9,-38],[3,-30]],[[91139,27240],[-15,-5],[-6,2],[1,30],[-2,13],[13,27],[20,-13],[7,-20],[-19,-17],[1,-17]],[[90953,26934],[-17,0],[-7,5],[-3,29],[-11,12],[6,9],[2,18],[7,20],[13,-22],[10,-71]],[[90217,28509],[-10,-47],[-11,60],[12,8],[9,21],[2,-3],[-2,-39]],[[91201,28624],[26,-34],[15,-38],[-20,-31],[-14,-6],[-9,36],[-29,-13],[-31,3],[-23,27],[-3,14],[14,14],[38,-1],[36,29]],[[91176,28504],[-14,-44],[-17,28],[-2,13],[21,10],[7,-1],[5,-6]],[[94132,20328],[-9,-23],[-3,26],[17,114],[17,20],[-3,-60],[-19,-77]],[[79367,45798],[-8,-41],[-14,23],[-17,7],[3,30],[14,5],[7,1],[10,11],[5,-36]],[[76899,44825],[4,-2],[4,3],[2,-4],[-7,-5],[-4,10],[-2,16],[-1,15],[2,0],[0,-6],[1,-5],[1,-9],[-1,-6],[1,-7]],[[76921,44818],[-3,-3],[-3,3],[-1,1],[0,3],[3,1],[3,2],[1,5],[1,7],[1,-7],[0,-6],[-2,-6]],[[70474,21234],[-34,-28],[-34,1],[-14,21],[-22,68],[-14,4],[-8,19],[-1,8],[15,5],[23,-19],[55,-16],[40,-37],[30,-12],[-12,-10],[-24,-4]],[[96649,35127],[6,-6],[5,-3],[3,-5],[0,-9],[-3,-10],[-3,-4],[-1,-2],[-1,-1],[0,-3],[0,-2],[-2,8],[-3,6],[-3,0],[-2,-6],[-1,0],[-1,6],[-1,6],[-1,5],[1,5],[3,5],[0,4],[-2,2],[-3,-2],[4,9],[5,-3]],[[84331,44685],[0,-6],[-6,1],[0,6],[6,-1]],[[33833,33138],[-6,-53],[14,-228],[-8,-32],[-14,-37],[-16,-2],[-19,6],[-13,-23],[-9,-100],[-25,-218],[4,-51],[21,-84],[7,-53],[6,-41],[5,-76],[-12,-34],[-11,-6],[-14,-19],[16,-93],[13,-43],[38,-87],[144,-122],[60,-72],[68,-97],[37,-100],[3,-83],[-54,-124],[-6,-103],[11,-73],[20,-68],[52,-88],[39,-32],[52,4],[9,-25],[5,-21],[8,-178],[-1,-67],[-15,-61],[-100,-282],[-86,-172],[-31,-94],[-11,-102],[-27,-48],[-148,-154],[-230,-137],[-186,-71],[-42,-24],[-299,-78],[-58,-11],[-75,7],[-61,-10],[-68,21],[-61,25],[-34,61],[-41,7],[-11,-30],[20,-78],[-9,-93],[11,-54],[24,-11],[23,-27],[21,-37],[-35,-4],[13,-29],[15,-18],[-2,-61],[-13,-148],[-34,-32],[-9,-8],[-11,-32],[-21,-142],[-7,-92],[9,-59],[41,-124],[-15,-81],[-26,-44],[-112,-90],[-45,-36],[-70,-25],[-114,-4],[-42,6],[-97,82],[-73,49],[-66,39],[-64,23],[9,12],[4,21],[-18,12],[-13,3],[-42,-43],[-18,-43],[-5,-38],[-1,-92],[8,-76],[30,-189],[3,-103],[-14,-130],[20,-76],[24,-34],[56,-34],[21,-23],[24,3],[7,-9],[-4,-16],[-14,-33],[1,-35],[42,-10],[43,7],[46,16],[11,24],[0,50],[-53,9],[6,18],[41,21],[53,33],[27,7],[18,-23],[12,-21],[16,-54],[9,-71],[1,-86],[-7,-81],[-7,-28],[-14,-35],[-95,-43],[-26,11],[-25,61],[-8,63],[-21,42],[-46,34],[-45,-10],[-45,-59],[-44,-19],[-15,-53],[110,-86],[52,-24],[17,0],[17,-11],[-15,-32],[-16,-20],[-79,-44],[-34,-31],[-41,-60],[-57,-132],[-17,-28],[-9,-34],[-6,-91],[19,-150],[-20,-63],[12,-70],[-6,-47],[-20,-67],[-80,-106],[-14,-78],[28,-45],[-2,-40],[-9,-36],[-33,0],[-120,24],[-44,-39],[-41,-49],[-11,-23],[-14,-14],[-83,-26],[-16,-17],[-88,-184],[-38,-115],[-45,-112],[-12,-47],[-3,-66],[7,-59],[6,-44],[16,-56],[33,-64],[170,-260],[35,-23],[181,-28],[40,-36],[23,-58],[9,-51],[-10,-128],[-11,-41],[-20,-36],[-43,-47],[-51,-25],[14,-18],[21,2],[46,16],[19,-16],[15,-50],[-28,-21],[-9,-24],[-20,-38],[-105,-148],[-56,-45],[-52,-59],[-70,-61],[-27,-34],[-37,-73],[-56,-79],[-61,-170],[-2,-33],[9,-22],[-34,-298],[-12,-35],[-24,-37],[-65,-62],[-31,-7],[-41,35],[-23,38],[-22,63],[-28,66],[-1,-23],[9,-40],[-6,-42],[-70,-19],[-18,-20],[63,9],[43,-13],[18,-15],[16,-32],[15,-38],[-12,-21],[-35,-18],[-44,-32],[-53,-58],[-29,-68],[-13,-48],[-14,-98],[-4,-64],[-22,-50],[-35,-44],[2,-11],[24,23],[18,7],[16,-59],[22,-119],[10,-82],[-2,-25],[-6,-33],[-45,-8],[-39,1],[-29,-15],[15,-15],[27,6],[37,-36],[41,15],[19,-23],[13,-22],[63,-172],[55,-106],[27,-63],[-13,-29]],[[30936,21513],[16,-25],[65,-118],[17,-48],[10,-56],[-26,35],[-27,-20],[-13,-34],[-12,-36],[0,-26],[9,-23],[27,-19],[64,-7],[5,-7],[37,-141],[19,-32],[22,-25],[51,-72],[49,-77],[58,-74],[62,-57],[57,-42],[54,-53],[58,-73],[63,-54],[67,-37],[69,-32],[105,13],[32,-4],[20,-23],[-20,-64],[-26,-51],[-35,-21],[-36,-8],[-34,1],[-33,10],[-31,-6],[-29,-21],[-31,-11],[-32,-2],[-31,-18],[-32,-13],[-32,11],[-84,51],[-55,12],[-185,20],[-59,12],[-59,18],[-31,0],[-45,-11],[-35,1],[-10,-11]],[[32069,20324],[31,-13],[61,10],[32,0],[14,-5],[6,-7],[42,11],[18,-1],[-5,-25],[-38,-24],[-16,10],[-82,-2],[-36,-25],[-15,0],[-36,-36],[-26,23],[-7,21],[18,29],[18,1],[12,12],[9,21]],[[32812,29278],[3,-36],[-15,4],[-34,35],[-12,33],[-2,14],[35,-15],[16,-14],[9,-21]],[[32856,61657],[-9,-23],[-31,9],[-6,29],[-1,20],[19,41],[22,-18],[9,-19],[6,-4],[0,-17],[-3,-12],[-6,-6]],[[32848,61966],[-4,-15],[-23,28],[-7,51],[1,11],[3,6],[9,-10],[12,-4],[8,-17],[1,-50]],[[53392,48525],[-4,16],[-12,57],[7,54],[7,41],[-8,82],[-18,74],[-20,93],[-6,18]],[[53261,41906],[11,218],[11,96],[0,116],[-7,298],[-7,41],[-5,48],[27,37],[14,27],[19,50],[13,69],[16,153],[58,352],[27,345],[35,163],[13,183],[96,236],[24,145],[50,72],[70,75],[51,135],[24,94],[28,179],[-1,187],[18,250],[-4,72],[-26,99],[-5,71],[-24,70],[-27,53],[-12,94],[-45,149],[-13,99],[-21,71],[-4,88],[-11,93],[-22,92],[-22,105],[0,32],[14,40],[12,13],[-4,-20],[-8,-23],[2,-19],[84,184],[6,36],[-3,41],[-1,49],[4,57],[-80,340],[-64,316],[-10,159],[-84,210],[-33,137],[-19,96],[-15,36],[6,18],[21,5],[49,22],[65,24],[61,56],[17,24]],[[49383,72064],[56,-11],[29,5],[67,51],[52,69],[41,36],[37,75],[32,48],[48,52],[136,111],[21,1],[45,-25],[39,8],[27,39],[29,93],[44,57],[57,58],[76,54],[50,51],[80,43],[199,28],[102,24],[70,-5],[70,80],[35,26],[152,6],[72,58],[272,0],[33,-19],[33,-32],[56,-75],[27,-17],[36,16],[84,72],[94,37],[51,42],[22,62],[44,23],[25,-47],[98,-48],[60,13],[26,15],[-9,71],[63,-19],[49,-34],[51,-69],[33,-14],[60,31],[125,16]],[[55555,74717],[-1,52],[-9,41],[-31,99],[-102,96],[-24,43],[-11,36],[-10,35],[10,1],[10,-9],[13,-11],[5,18],[-6,37],[-26,87],[-2,24],[13,74],[21,82],[-1,99],[7,75],[-8,49],[-3,60],[15,79],[14,20],[8,25],[1,85],[-31,39],[-35,8]],[[37300,16980],[61,-14],[31,-21],[8,-24],[36,-9],[5,-5],[7,-14],[4,-15],[-1,-20],[-62,48],[-86,3],[-20,34],[-44,-20],[-5,13],[0,17],[6,24],[28,-10],[32,13]],[[24851,12213],[-3,-1],[-6,0],[-4,0],[-4,-1],[-3,-1],[-3,0],[-1,0],[0,1],[-2,2],[-3,5],[-2,5],[-1,5],[1,7],[3,3],[0,4],[0,5],[1,5],[1,5],[0,3],[1,1],[2,1],[5,0],[3,0],[5,-1],[3,-1],[3,-2],[4,-5],[3,-6],[0,-3],[1,-3],[0,-4],[1,-5],[1,-4],[-1,-7],[-2,-7],[-2,-1],[-1,0]],[[0,0],[99608,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0]],[[0,3253],[447,8],[89,-8],[94,-25],[207,-2],[194,-11],[50,-33],[65,-20],[137,17],[110,9],[89,1],[823,-46],[843,-81],[172,-26],[154,-61],[162,9],[957,-47],[148,0],[586,-50],[1026,-114],[89,-4],[97,3],[-51,62],[-96,56],[-129,40],[84,12],[184,1],[-37,29],[-101,16],[-366,19],[-1463,144],[-32,9],[-21,12],[-38,13],[-60,14],[-223,8],[-61,13],[-29,16],[15,7],[17,-3],[340,13],[38,16],[2,11],[-18,8],[-59,10],[-137,48],[-44,21],[23,33],[28,14],[105,11],[31,22],[-20,40],[-241,80],[-162,29],[-107,-20],[-203,-1],[-251,-10],[-68,11],[-70,32],[-82,57],[-42,15],[-80,47],[-106,46],[-561,111],[-98,30],[-702,175],[-29,30],[-18,32],[324,-71],[61,0],[72,18],[55,-5],[75,18],[84,9],[219,-55],[442,-89],[118,-31],[63,-22],[52,-7],[51,-16],[63,9],[38,-8],[92,5],[419,10],[166,-8],[195,-43],[75,-71],[56,-32],[107,25],[90,30],[173,25],[56,-10],[93,-37],[105,-62],[445,17],[187,-3],[133,-28],[485,93],[75,20],[111,65],[-91,20],[-65,7],[-25,33],[44,13],[140,18],[272,28],[161,27],[86,70],[369,109],[117,48],[108,79],[-242,157],[-232,136],[74,42],[73,33],[35,26],[29,37],[-76,45],[-71,33],[-117,32],[-440,77],[-150,33],[60,51],[80,39],[169,17],[1079,60],[1087,74],[27,37],[-144,44],[-123,11],[-45,13],[-17,28],[-1,38],[-14,6],[-46,4],[-196,44],[-41,17],[-65,41],[-17,32],[39,82],[60,35],[104,19],[75,7],[225,-1],[88,10],[37,11],[-7,39],[-25,18],[-1,24],[38,14],[47,-1],[13,29],[-26,47],[-67,25],[-176,43],[-400,65],[-155,49],[-89,38],[-74,44],[-75,21],[-52,23],[11,28],[-24,44],[-29,8],[-127,-19],[-227,10],[-278,41],[-192,47],[-251,127],[-99,63],[73,44],[80,28],[334,65],[50,22],[68,58],[-112,24],[-95,-2],[-84,16],[-342,4],[-193,-8],[-162,72],[-121,71],[-34,36],[-26,64],[41,94],[34,67],[-4,83],[9,113],[58,38],[45,7],[105,-87],[90,-7],[131,17],[83,45],[44,17],[81,4],[156,-20],[71,8],[80,-4],[251,-58],[55,-27],[30,-21],[9,-30],[31,-31],[107,-15],[299,17],[78,-7],[212,-85],[180,-91],[62,-23],[102,-15],[36,13],[31,34],[97,42],[218,52],[52,52],[-29,28],[-84,30],[-51,10],[-28,34],[2,47],[17,45],[57,11],[104,-61],[130,-57],[45,-8],[35,2],[65,20],[78,15],[149,-122],[88,-8],[110,-1],[21,19],[-13,32],[-18,35],[-23,5],[-3,32],[48,30],[33,13],[-13,22],[-53,33],[-31,6],[-28,14],[9,23],[35,10],[49,34],[-15,39],[2,51],[-20,27],[-116,53],[-169,87],[-157,39],[-350,-31],[-124,20],[-81,23],[-88,30],[103,32],[108,22],[32,20],[41,40],[48,29],[39,8],[128,-15],[289,-108],[61,-12],[198,-49],[55,-3],[68,11],[-55,48],[-61,34],[-145,96],[16,46],[94,76],[245,6],[107,27],[139,58],[179,96],[154,12],[192,30],[65,-22],[164,-93],[103,-32],[35,-3],[37,3],[-97,116],[63,14],[80,13],[66,29],[49,24],[168,111],[150,31],[426,48],[146,-44],[123,-5],[27,13],[25,59],[65,115],[55,41],[185,43],[145,-2],[104,-47],[97,-31],[89,-14],[90,1],[134,27],[178,9],[83,14],[96,-26],[236,-9],[183,-37],[113,0],[153,36],[83,5],[299,58],[234,12],[177,-26],[286,16],[290,-12],[117,-21],[652,13],[518,55],[71,19],[111,60],[61,55],[41,17],[87,6],[149,-12],[205,-41],[176,15],[337,-23],[32,19],[32,104],[55,165],[47,49],[77,-13],[233,-94],[5,-40],[-24,-29],[-38,-11],[-11,-80],[31,-23],[52,7],[33,-35],[-73,-60],[-52,-34],[-33,-15],[-23,-115],[-31,-38],[-4,-42],[50,0],[50,18],[44,4],[140,30],[255,35],[84,17],[48,6],[31,23],[-43,57],[-14,47],[26,39],[-7,67],[-24,68],[49,50],[46,-11],[79,8],[45,-25],[69,-22],[66,-11],[63,-45],[21,-98],[-19,-100],[-65,-73],[-121,-66],[-137,-105],[29,-50],[71,17],[309,-5],[199,8],[125,-12],[158,-27],[125,-39],[149,-8],[93,15],[87,-20],[339,84],[138,48],[79,-24],[128,20],[71,-18],[133,30],[84,3],[97,-12],[296,-6],[22,-55],[90,-83],[73,-32],[93,14],[67,25],[106,-9],[153,35],[153,-11],[64,6],[29,23],[25,51],[-47,28],[-134,36],[-123,74],[-55,16],[-88,-9],[-41,13],[-44,24],[57,29],[70,93],[-29,84],[-33,18],[-81,-3],[-98,-30],[-39,21],[-64,11],[-25,78],[-68,146],[-36,42],[-108,38],[-93,19],[-90,24],[-27,58],[17,79],[108,17],[104,-8],[58,-15],[67,-6],[77,-16],[50,-23],[40,-13],[75,0],[260,21],[35,15],[31,28],[55,7],[51,-4],[74,17],[-85,23],[-91,44],[-137,53],[-115,29],[-209,20],[-107,-7],[-67,11],[-239,-6],[-65,21],[-46,58],[-65,138],[-18,72],[44,27],[29,30],[71,3],[103,-12],[34,-14],[25,-43],[-25,-44],[-33,-23],[20,-21],[105,-6],[52,-13],[45,-5],[97,20],[142,8],[71,-20],[85,-15],[125,24],[445,-13],[54,-6],[54,-40],[46,-24],[49,10],[145,-46],[77,-36],[79,-18],[67,-5],[75,9],[98,30],[81,12],[58,-11],[123,-6],[94,-36],[73,15],[77,41],[244,29],[163,-8],[298,-74],[69,-7],[136,44],[44,72],[-6,81],[39,19],[33,-9],[60,56],[82,-5],[51,-10],[31,36],[28,77],[97,6],[70,-12],[92,-49],[0,-41],[-38,-43],[-63,-107],[39,-63],[59,6],[75,-13],[91,27],[58,1],[101,-93],[68,-5],[53,5],[172,84],[50,9],[61,-38],[89,-89],[78,-51],[114,-32],[99,-9],[116,-42],[64,-35],[146,0],[62,-15],[176,-72],[160,36],[83,33],[40,61],[-20,91],[-7,92],[24,38],[42,7],[191,-103],[-12,62],[-16,47],[-49,82],[7,61],[41,19],[80,-32],[96,-16],[79,-36],[155,-128],[50,-112],[105,-28],[73,5],[83,18],[111,16],[86,-5],[79,21],[24,-61],[-74,-88],[-29,-57],[24,-15],[45,13],[37,18],[129,-9],[104,40],[89,14],[84,42],[69,-4],[53,-7],[72,-33],[69,18],[41,-7],[56,-2],[297,145],[67,-3],[85,9],[107,34],[83,15],[68,-1],[121,53],[193,-7],[98,28],[191,32],[128,37],[228,98],[92,58],[100,129],[63,129],[70,171],[-34,111],[-37,49],[-31,54],[-73,111],[-20,139],[7,131],[-26,123],[-26,91],[-54,152],[-66,99],[-77,133],[0,121],[-19,95],[-46,68],[-20,54],[36,11],[33,17],[89,21],[213,-37],[19,54],[54,40],[38,50],[-13,77],[-47,31],[-56,65],[26,52],[45,0],[22,57],[-17,56],[21,70],[41,90],[28,33],[-51,54],[-48,70],[12,54],[24,57],[29,80],[40,57],[26,20],[-7,19],[-61,20],[-56,4],[-101,-36],[-16,7],[-5,19],[-6,39],[10,95],[16,90],[14,13],[40,11],[38,69],[35,4],[22,-23],[7,-91],[12,-21],[-4,-44],[18,-15],[22,28],[41,14],[16,-31],[15,-15],[7,26],[-5,74],[-7,30],[-5,48],[9,23],[10,37],[-17,78],[6,29],[37,47],[18,9],[35,0],[63,-31],[30,-2],[22,14],[14,30],[11,98],[-27,35],[0,31],[16,20],[28,68],[42,4],[41,-6],[40,13],[-14,28],[-12,43],[45,21],[29,6],[77,-27],[30,-15],[28,35],[-9,34],[-30,19],[-5,30],[7,39],[48,-20],[11,8],[13,34],[-8,17],[-6,22],[63,5],[9,9],[13,27],[19,9],[56,-1],[12,14],[6,30],[-31,7],[-39,29],[-6,80],[9,57],[35,50],[42,34],[78,-30],[60,7],[24,-30],[33,-8],[8,34],[-15,30],[-10,49],[96,59],[31,-10],[38,14],[-14,45],[21,57],[27,8],[19,-50],[26,-10],[29,12],[71,58],[35,9],[35,3],[36,34],[9,40],[20,28],[62,38],[25,27],[55,95],[-10,24],[16,20],[163,86],[80,8],[133,52],[81,61],[51,25],[45,68],[55,11],[128,47],[96,77],[133,53],[62,-5],[25,-16],[16,-63],[26,-77],[40,-38],[-15,-34],[-38,4],[-41,-8],[-9,38],[15,28],[-15,25],[-37,-6],[-49,-13],[-33,-19],[-43,-41],[-34,-23],[-113,-61],[-74,-88],[-53,-93],[-32,-63],[-47,-5],[-11,-23],[19,-18],[15,-8],[35,-7],[-6,-27],[-24,-7],[3,-22],[25,-32],[5,-46],[-29,-7],[-44,49],[-50,5],[-39,23],[-25,33],[-24,-7],[-18,-47],[11,-52],[-21,-31],[-24,14],[-9,62],[-23,11],[-32,1],[-77,-67],[-28,-2],[-14,-34],[-45,-38],[-29,-31],[-71,-102],[-40,-43],[-76,-24],[-30,3],[-18,10],[-27,7],[-28,1],[-9,-27],[44,-88],[-24,-30],[-53,2],[-26,25],[-21,-24],[-17,-23],[-17,-34],[26,-72],[41,-32],[30,-6],[11,-27],[-65,-11],[-44,-63],[-20,-44],[-23,-38],[3,-44],[34,-66],[46,-47],[46,-4],[60,15],[14,13],[59,7],[26,46],[19,3],[17,-8],[27,-2],[15,30],[20,11],[28,-8],[54,1],[15,-27],[-17,-30],[-33,-42],[-31,23],[-27,-4],[-15,-22],[29,-47],[-11,-42],[-24,-42],[-29,27],[-4,45],[-40,27],[-39,12],[-26,-47],[-41,-13],[-6,-54],[-17,-50],[-24,15],[-9,62],[-67,50],[-35,7],[-70,-13],[-24,1],[-28,-11],[-20,-42],[29,-31],[10,-42],[-1,-31],[-6,-12],[-5,-26],[32,-37],[1,-50],[-25,1],[-21,15],[-81,130],[-51,58],[-22,51],[-53,12],[-38,1],[-46,-21],[18,-24],[9,-36],[-28,-15],[-35,-56],[-23,-48],[-14,-10],[-18,-28],[75,-61],[11,-24],[4,-41],[-24,-22],[-56,-9],[-99,43],[-43,1],[-15,30],[-22,-4],[-13,-51],[-16,-45],[-24,-30],[7,-46],[19,-11],[-15,-19],[-31,-15],[-21,-18],[46,-17],[9,-15],[2,-22],[-72,-16],[-47,-4],[-28,18],[-26,-9],[-17,-29],[-5,-39],[5,-48],[9,-34],[7,-13],[8,-29],[-43,-74],[-5,-16],[-3,-34],[21,-31],[16,-46],[-23,-23],[-25,-47],[26,-9],[44,-2],[48,6],[72,41],[20,7],[9,-16],[6,-25],[-18,-24],[-130,-68],[-24,-29],[33,-16],[67,-3],[26,-22],[-16,-24],[-24,-23],[-28,-54],[23,-20],[72,-32],[131,-42],[97,-14],[-22,49],[-3,60],[68,49],[35,16],[162,29],[44,-1],[34,-13],[-13,-25],[-37,9],[-65,-16],[-100,-54],[-18,-23],[7,-42],[85,-34],[27,-27],[-37,-81],[6,-52],[43,-57],[57,-65],[28,-43],[43,-25],[70,-61],[38,-61],[12,-140],[57,-116],[67,-53],[8,-46],[-22,-46],[-57,27],[-32,-27],[-12,-49],[40,-34],[64,-42],[138,4],[4,-46],[-32,-27],[-25,-34],[-31,-19],[-52,-12],[-13,-41],[22,-58],[72,26],[53,3],[55,-10],[17,-77],[65,-95],[16,-45],[-12,-43],[-40,-13],[-25,-34],[-36,-29],[-41,-16],[-76,-79],[-33,-8],[-14,-16],[65,-8],[45,-2],[97,64],[37,-14],[24,-42],[12,-49],[-24,-42],[-169,-25],[-82,-23],[-88,-66],[101,-31],[74,11],[37,-12],[51,-23],[56,12],[44,24],[33,-1],[31,-12],[4,-41],[4,-72],[7,-54],[-18,-36],[-88,-26],[-64,1],[-2,-76],[96,-57],[60,30],[53,-15],[0,-91],[41,-101],[36,-6],[30,46],[38,0],[15,-54],[-17,-91],[-29,-50],[-78,21],[-44,16],[-35,-34],[-58,-29],[-51,-4],[-45,45],[-52,34],[-83,17],[-78,8],[26,-39],[35,-23],[14,-69],[28,-72],[65,19],[90,-41],[56,-43],[24,-57],[-31,-91],[-51,-34],[-32,-16],[-56,35],[-39,0],[-41,-16],[-14,-42],[-27,-20],[144,-3],[45,-11],[33,-38],[-52,-50],[-95,8],[-41,-19],[-35,-36],[142,-22],[59,12],[93,38],[22,-38],[-37,-38],[-48,-61],[-100,-19],[-75,-1],[-98,22],[-26,13],[-41,7],[3,-37],[26,-26],[66,-94],[11,-36],[-21,-50],[-58,-37],[-65,-14],[-54,32],[-39,91],[-50,27],[-51,8],[-30,-4],[3,-46],[12,-49],[-20,-35],[-44,18],[-57,-16],[-53,-27],[-48,-30],[98,-14],[65,-3],[46,-46],[-17,-23],[-88,-10],[-86,-20],[-117,-50],[86,-21],[81,1],[57,-5],[47,-9],[13,-27],[-29,-30],[-192,-74],[-201,-91],[-74,-29],[-77,-16],[-179,-78],[-113,-36],[-318,-55],[-497,-139],[-169,-99],[-50,-76],[-32,-11],[-95,-26],[-95,-12],[-251,-8],[-257,37],[-208,8],[-113,-12],[-386,66],[-49,-3],[-60,-12],[-48,0],[-36,9],[-78,4],[-263,-26],[-27,-41],[33,-76],[96,-92],[160,-162],[86,-35],[53,-37],[100,-43],[224,-2],[306,-34],[174,-31],[-6,-60],[-105,-115],[-65,-44],[-155,-80],[-213,-40],[-163,12],[-289,65],[-362,60],[-538,57],[-118,26],[-139,26],[-79,-27],[-60,-25],[-133,-2],[39,-23],[537,-155],[458,-113],[54,-29],[65,-20],[-6,-72],[-26,-57],[-90,-50],[-234,-3],[-293,-40],[-146,-1],[-145,39],[-309,113],[-189,84],[-132,96],[-91,76],[-102,75],[7,-47],[18,-47],[50,-58],[73,-63],[5,-25],[-35,-4],[-53,30],[-45,-28],[-16,-33],[19,-44],[28,-42],[93,-94],[80,-25],[106,-57],[258,-106],[44,-36],[78,-78],[16,-59],[76,-58],[52,-9],[47,2],[16,50],[-3,61],[20,15],[74,15],[193,-21],[821,-12],[78,-35],[31,-45],[21,-93],[-87,-112],[-59,-48],[-97,-29],[-88,-23],[-133,-9],[-275,8],[-269,0],[209,-54],[203,-44],[282,8],[112,12],[97,21],[41,-37],[77,-78],[45,-25],[31,-26],[43,-85],[17,-50],[42,-58],[30,-49],[44,-33],[75,-15],[82,28],[159,13],[154,-45],[99,-14],[132,37],[105,52],[221,47],[41,20],[60,16],[91,-4],[36,-12],[46,-51],[43,-70],[63,-35],[67,-25],[38,-3],[126,-22],[164,21],[73,-21],[12,-40],[39,-32],[49,-11],[665,-180],[229,-35],[353,-18],[274,-2],[38,-11],[53,-35],[-105,-24],[-112,-3],[-169,9],[-60,-5],[-129,10],[-67,-7],[-61,11],[-91,-25],[-166,-19],[37,-27],[62,-6],[126,-10],[172,5],[15,-43],[-158,-10],[-336,-9],[-35,-7],[-26,-22],[50,-11],[31,-12],[16,-31],[-36,-79],[56,-55],[39,-9],[41,8],[71,-22],[69,-30],[146,-2],[173,40],[85,-1],[228,25],[207,-4],[289,48],[48,-1],[44,-6],[-80,-44],[-355,-110],[-127,-21],[-51,-14],[29,-54],[46,-56],[94,-60],[59,-89],[57,-19],[110,41],[27,-31],[5,-61],[-29,-49],[-37,-28],[-26,-27],[-17,-36],[46,-31],[123,-19],[163,-7],[151,-1],[93,-9],[341,194],[137,94],[67,39],[56,29],[288,119],[67,36],[76,53],[141,8],[193,86],[171,66],[68,13],[51,5],[60,14],[150,-5],[107,11],[190,42],[145,27],[154,23],[174,4],[463,44],[132,-19],[146,-46],[95,1],[125,14],[86,18],[39,-53],[20,-69],[-42,-64],[-70,-40],[-19,-66],[95,-33],[108,10],[206,32],[164,42],[45,28],[64,-8],[109,35],[136,146],[171,147],[144,94],[93,110],[77,63],[86,48],[58,24],[132,5],[189,76],[275,87],[211,-42],[223,-63],[110,51],[87,9],[74,23],[74,17],[53,45],[71,38],[54,55],[271,27],[284,36],[38,13],[37,-7],[98,10],[125,30],[172,10],[90,-3],[82,81],[164,17],[175,32],[73,24],[57,6],[1413,63],[61,31],[124,25],[47,61],[-190,25],[-58,26],[-65,7],[-38,-9],[-164,7],[-1303,94],[-27,8],[-45,57],[9,105],[-39,81],[-91,22],[-94,-2],[-119,-10],[-314,-44],[-125,-4],[-335,68],[-221,77],[-145,25],[-104,52],[-97,40],[-7,91],[23,85],[187,246],[117,118],[78,9],[71,53],[73,119],[59,56],[135,66],[59,17],[212,81],[58,2],[95,-13],[108,73],[329,156],[75,59],[91,35],[266,132],[238,64],[118,19],[144,39],[160,59],[139,57],[497,109],[298,29],[203,32],[144,-19],[143,6],[123,29],[57,23],[83,59],[276,-28],[178,40],[74,4],[78,18],[-31,21],[-28,3],[-28,28],[-37,58],[37,73],[28,36],[82,45],[43,64],[40,94],[135,185],[38,26],[86,8],[73,-5],[83,2],[210,-48],[39,19],[67,54],[56,68],[120,100],[23,30],[-10,49],[-180,-21],[-136,-33],[-131,18],[-17,28],[28,21],[49,8],[19,34],[-45,28],[-81,16],[-36,21],[3,51],[20,75],[44,21],[36,31],[96,105],[57,32],[164,29],[190,-44],[44,12],[46,59],[-47,90],[-36,34],[0,30],[100,-14],[93,-20],[109,4],[129,90],[181,75],[88,31],[78,18],[42,76],[62,144],[46,75],[-1,45],[-14,38],[-47,-11],[-43,-5],[-101,38],[-125,61],[-38,68],[-18,61],[39,33],[38,20],[41,5],[73,-25],[93,-62],[46,-24],[53,-46],[40,4],[47,64],[38,85],[32,26],[49,28],[54,41],[-24,40],[-58,21],[-8,24],[25,27],[47,6],[59,-59],[80,-39],[55,-13],[47,-32],[74,-108],[89,-179],[41,-2],[78,16],[84,7],[56,51],[12,128],[22,58],[-8,59],[-38,60],[-33,44],[6,33],[28,24],[37,8],[64,24],[99,-28],[54,-5],[81,16],[84,35],[86,25],[67,-19],[29,-64],[-33,-65],[-54,-48],[-49,-59],[-13,-64],[2,-35],[47,-9],[416,8],[55,-6],[72,0],[78,-21],[132,8],[118,23],[56,0],[97,-21],[69,-44],[143,13],[40,14],[39,59],[41,11],[48,-48],[15,-110],[22,-52],[61,-47],[60,40],[39,48],[94,93],[107,71],[82,42],[200,70],[99,44],[194,60],[250,32],[446,108],[147,12],[240,28],[123,30],[125,23],[77,80],[175,-61],[60,-7],[82,48],[90,119],[131,-49],[75,-77],[93,-60],[208,-104],[66,-24],[138,-21],[37,17],[65,69],[67,100],[42,42],[61,35],[69,55],[-18,30],[-39,10],[-36,16],[9,29],[122,7],[64,-101],[66,-33],[80,-33],[186,26],[159,2],[138,-20],[68,3],[61,76],[99,28],[56,-34],[35,-112],[127,-31],[266,-51],[30,13],[33,59],[23,72],[54,12],[69,39],[37,-6],[52,-47],[-18,-114],[-29,-105],[35,-85],[31,-47],[40,-8],[67,-2],[82,6],[51,-4],[261,42],[32,94],[42,107],[103,136],[40,-10],[31,-14],[70,-67],[42,-34],[9,-49],[-46,-47],[13,-31],[46,-25],[148,-41],[48,8],[71,43],[72,85],[39,98],[61,-5],[59,-20],[41,-51],[0,-97],[57,-66],[46,-42],[120,-45],[128,-11],[90,-27],[146,10],[71,30],[46,8],[80,24],[84,57],[52,23],[192,52],[145,57],[154,102],[150,61],[230,31],[64,13],[88,-1],[217,73],[82,42],[46,15],[52,52],[28,102],[22,63],[-4,61],[-20,80],[-46,71],[-47,104],[21,119],[37,49],[96,54],[95,11],[108,-7],[94,-11],[8,-51],[-41,-55],[-52,-54],[-31,-23],[11,-46],[68,-7],[149,10],[43,-42],[106,-184],[26,-87],[37,-25],[58,12],[125,-1],[87,13],[71,1],[37,-9],[38,-42],[72,-49],[72,36],[52,17],[63,-4],[99,-57],[99,-133],[107,-67],[7,43],[-14,53],[44,47],[53,79],[77,103],[61,105],[15,145],[29,119],[49,57],[48,37],[75,38],[92,8],[88,86],[62,35],[130,47],[163,47],[114,131],[39,16],[58,21],[107,8],[173,42],[54,6],[91,33],[80,78],[58,22],[104,-3],[88,44],[74,2],[68,22],[10,49],[-32,33],[-1,43],[38,56],[30,21],[90,-4],[75,-48],[55,-2],[14,-27],[-48,-34],[-32,-61],[55,-53],[49,-36],[59,7],[71,32],[70,-23],[31,-49],[0,-76],[15,-41],[49,36],[27,76],[-8,97],[3,60],[117,97],[46,73],[-82,15],[-58,-10],[-32,27],[-37,73],[101,61],[116,-2],[67,-52],[144,-83],[80,2],[72,-13],[15,26],[-27,122],[3,68],[-60,38],[-17,87],[25,91],[71,51],[97,24],[208,140],[55,30],[137,29],[160,14],[199,50],[355,-34],[95,-21],[59,-28],[57,-45],[74,-74],[107,-94],[139,-30],[39,-29],[51,-80],[-55,-52],[-45,-5],[-87,31],[-60,32],[-42,-13],[41,-55],[45,-34],[7,-46],[-24,-66],[-164,-130],[98,-37],[59,30],[54,55],[55,25],[37,10],[130,2],[74,22],[56,-16],[55,-35],[81,-35],[116,-38],[143,-147],[111,15],[60,32],[171,10],[147,-65],[83,-24],[240,-20],[143,-42],[91,50],[61,20],[128,10],[65,-10],[178,-54],[315,-55],[217,-29],[191,-1],[91,-24],[166,-26],[63,-20],[159,16],[74,21],[70,47],[39,-11],[27,-59],[-15,-101],[29,-69],[23,-69],[33,-57],[21,-49],[-15,-41],[-46,-37],[-64,-79],[4,-69],[27,-44],[-32,-53],[24,-74],[4,-45],[-22,-36],[-50,-22],[-85,-3],[-44,-21],[-7,-55],[22,-41],[49,-22],[14,-44],[-7,-66],[-22,-56],[-45,-26],[-49,-6],[-91,12],[-66,37],[-42,-33],[-31,-34],[-95,-77],[-44,-52],[-41,-55],[108,-31],[79,-55],[172,6],[55,24],[73,26],[39,-5],[24,-56],[-14,-89],[-3,-69],[-87,-190],[-29,-32],[-41,-52],[-48,-41],[-39,-20],[-75,-60],[-46,-109],[-50,-90],[-73,-154],[-42,-165],[-18,-99],[-28,-103],[-62,-177],[-40,-30],[-69,-72],[20,-48],[54,-5],[66,-11],[89,-37],[118,76],[62,48],[13,96],[-13,97],[38,57],[87,78],[205,56],[42,6],[68,19],[60,70],[53,70],[93,44],[77,72],[12,51],[32,11],[96,50],[25,37],[30,28],[21,63],[8,118],[24,89],[47,118],[38,86],[37,54],[99,29],[43,33],[57,73],[39,44],[-5,90],[22,83],[61,50],[78,92],[98,13],[74,48],[79,-33],[95,-46],[161,14],[76,-21],[59,25],[52,71],[19,87],[61,50],[69,-1],[114,87],[118,77],[96,18],[77,60],[55,102],[59,79],[73,75],[20,133],[46,67],[85,59],[71,32],[298,100],[229,66],[231,82],[71,-1],[93,45],[153,2],[40,4],[53,93],[114,86],[71,28],[90,74],[73,7],[103,-13],[87,-20],[78,-1],[113,62],[176,10],[54,30],[38,26],[249,87],[93,-17],[132,15],[80,-4],[76,-11],[96,-3],[166,31],[70,20],[132,76],[146,18],[64,20],[82,17],[67,-29],[48,-27],[29,-6],[39,-5],[95,30],[79,-8],[101,-33],[67,-27],[35,0],[62,24],[76,60],[71,24],[67,-15],[46,-25],[81,-34],[126,5],[120,13],[101,28],[87,30],[80,-46],[92,-17],[149,81],[57,-18],[39,-21],[32,-10],[39,-68],[142,13],[126,57],[108,43],[105,28],[83,39],[122,148],[-2,46],[17,28],[26,12],[194,-1],[60,12],[79,39],[137,-30],[131,-47],[34,5],[53,1],[93,-29],[105,-57],[93,-15],[385,-142],[218,-35],[110,-47],[28,-16],[32,-48],[58,-5],[46,19],[61,-73],[148,-55],[154,-27],[100,43],[170,123],[52,55],[-10,122],[89,136],[151,67],[188,35],[116,30],[154,28],[74,-29],[38,-21],[57,-25],[68,-76],[106,-172],[79,-62],[69,-5],[60,-10],[63,-39],[90,-121],[-54,-108],[-46,-40],[-196,-46],[-86,-37],[-75,-23],[-21,-90],[31,-42],[81,21],[95,10],[74,18],[68,28],[59,40],[140,21],[91,34],[82,20],[57,35],[58,-5],[58,-34],[46,3],[124,-11],[58,25],[51,2],[52,-19],[54,-26],[54,-7],[70,16],[98,42],[125,46],[117,15],[28,-1],[24,-9],[-117,-53],[-187,-72],[-100,-69],[59,-29],[352,77],[160,58],[142,26],[35,19],[116,90],[42,24],[125,32],[163,34],[124,39],[84,40],[63,4],[49,-29],[63,-33],[62,8],[76,31],[53,72],[31,53],[57,18],[73,16],[59,-18],[96,-38],[67,-20],[58,-151],[136,-133],[49,-35],[119,13],[128,-52],[55,7],[52,15],[47,-10],[70,32],[73,167],[67,163],[66,72],[40,30],[50,14],[77,34],[104,10],[77,-14],[167,-12],[136,41],[154,-7],[76,48],[82,7],[111,-41],[32,-29],[61,-42],[15,-41],[16,-74],[30,-2],[103,73],[56,13],[106,117],[56,-30],[127,-50],[51,-15],[100,-85],[51,18],[42,40],[124,-4],[116,-35],[48,-29],[59,-50],[37,-12],[29,14],[240,-19],[104,-37],[79,-45],[278,-21],[107,-46],[64,22],[127,-7],[52,-39],[46,-43],[101,-37],[55,7],[78,30],[78,41],[78,0],[37,-35],[13,-88],[58,2],[64,40],[56,-10],[20,-61],[-30,-81],[-71,-114],[-29,-95],[-59,-86],[10,-41],[59,-20],[59,61],[132,42],[69,55],[119,20],[117,-19],[83,-73],[154,-123],[6,-44],[13,-46],[-5,-41],[-23,-47],[82,-55],[73,-9],[59,5],[247,-53],[118,21],[106,0],[126,8],[97,-2],[77,-9],[91,19],[74,26],[36,-16],[15,-137],[5,-81],[42,-30],[44,30],[32,41],[195,-19],[78,-2],[74,-22],[75,-51],[72,22],[43,31],[58,20],[17,51],[7,85],[-2,83],[34,15],[35,-15],[46,-39],[105,-125],[80,-81],[34,-38],[49,-31],[99,-75],[136,-31],[133,-60],[155,4],[121,-77],[82,60],[43,14],[63,-16],[76,-52],[60,-12],[205,-86],[110,-30],[41,-63],[54,-60],[0,-61],[24,-77],[123,-61],[48,-59],[59,-78],[107,-293],[56,-52],[81,5],[76,-76],[24,11],[3,30],[-69,198],[-5,107],[54,61],[127,17],[98,-114],[90,-69],[60,-12],[120,3],[113,73],[86,-26],[138,-9],[179,-43],[77,8],[137,-18],[167,-62],[95,-23],[20,-25],[44,-41],[22,-50],[24,-46],[58,-52],[58,-9],[115,-44],[241,-136],[87,-40],[51,-29],[25,35],[7,72],[44,15],[47,-107],[49,-81],[22,-71],[-51,-58],[-74,12],[-52,0],[-53,-96],[-22,-166],[49,3],[36,15],[8,-61],[-22,-51],[-44,-20],[-76,39],[-93,27],[-102,10],[-99,49],[-39,3],[-41,-3],[53,-51],[55,-46],[125,-40],[156,-62],[4,-38],[-37,-47],[-46,-100],[-142,-86],[-83,62],[-98,15],[-49,-37],[-98,4],[-194,-14],[-76,79],[-119,43],[4,-36],[102,-130],[109,-30],[108,-35],[26,-33],[-49,-31],[-66,5],[-83,-61],[-158,10],[-75,-3],[-44,-25],[-39,-9],[31,-22],[38,-60],[-54,-51],[-50,-25],[-51,12],[-56,-20],[-27,56],[-2,122],[-32,109],[-34,4],[-54,-13],[-17,-93],[38,-161],[26,-50],[-21,-45],[-36,-14],[73,-136],[62,-93],[38,-31],[3,-46],[-30,-20],[-83,18],[-41,-9],[-46,6],[-77,20],[-66,6],[-66,-26],[-56,2],[-50,85],[-44,20],[-36,-26],[-28,-101],[-57,-31],[-58,-46],[-41,-50],[-20,-198],[-34,-41],[-51,2],[-39,-16],[-49,16],[-64,10],[-214,-68],[34,-35],[54,6],[188,-11],[80,-36],[13,-89],[32,-38],[63,-41],[48,-20],[18,-30],[-20,-61],[-27,-56],[-59,-61],[17,-31],[64,-10],[27,-137],[-42,-61],[20,-51],[5,-51],[-43,-47],[-33,-24],[-11,-50],[64,-29],[47,-10],[66,-5],[45,-54],[58,-82],[42,-68],[3,-113],[41,-67],[77,-43],[-2,-45],[54,-14],[53,-4],[19,-41],[-17,-50],[-89,-61],[-37,-44],[89,-7],[92,-46],[117,52],[62,56],[40,50],[30,-13],[3,-52],[36,-87],[151,-84],[84,-27],[81,-14],[71,2],[20,-50],[-22,-46],[-56,3],[-90,-8],[-66,38],[-47,33],[-412,-19],[-93,-15],[-111,-50],[-110,-24],[-169,-50],[-71,-30],[-185,117],[-60,86],[-25,5],[-44,-20],[-2,-61],[86,-133],[39,-35],[0,-35],[-25,-18],[-35,0],[-53,26],[-99,21],[-88,-41],[-108,-87],[23,-58],[29,-33],[-7,-39],[-121,-74],[-40,-3],[-25,-15],[30,-27],[66,-1],[7,-33],[-23,-26],[-109,-30],[7,-40],[59,-19],[77,7],[48,-29],[0,-46],[-49,-26],[-57,-19],[-392,-118],[-57,-32],[3,-43],[137,-11],[410,10],[27,-14],[-10,-34],[-23,-43],[23,-31],[61,-21],[2,-33],[-30,-13],[-61,-15],[-67,-4],[4,-35],[92,-31],[31,-4],[3,-118],[-3,-50],[-49,-24],[-18,-17],[-2,-40],[122,-29],[187,-127],[41,0],[74,-24],[119,-65],[42,-39],[68,-19],[9,-32],[42,-27],[166,-88],[22,-38],[-348,-73],[-350,-54],[32,-48],[378,5],[102,-30],[45,9],[26,32],[204,38],[207,25],[65,-18],[278,-141],[129,-53],[82,-20],[60,-5],[44,-21],[43,-45],[-10,-42],[18,-19],[29,-8],[55,-28],[63,10],[73,32],[51,-7],[92,-45],[-35,-35],[-20,-17],[-24,-32],[-23,-11],[-74,-7],[-41,0],[-42,6],[-4,-23],[51,-25],[74,-27],[480,-21],[137,-46],[135,25],[61,-8],[51,-15],[19,-46],[69,-15],[106,-36],[148,-18],[118,1],[145,-49],[73,-2],[45,-28],[330,-17],[49,-22],[38,-36],[78,-16],[85,-3],[464,-59],[174,-31],[40,2],[40,-6],[125,-26],[127,-14],[61,-36],[-99894,-48]],[[37438,6445],[36,-2],[146,6],[146,-2],[89,-7],[26,-16],[23,-32],[26,-50],[24,-55],[27,-45],[16,-79],[25,-29],[43,-73],[6,-59],[-13,-128],[-21,-52],[-56,-50],[-64,5],[-29,-2],[-28,-10],[-11,-7],[-4,-10],[74,-43],[9,-16],[1,-19],[-10,-13],[-10,-7],[-1573,-260],[-61,-14],[-61,-27],[-20,-23],[-20,-18],[-1219,-49],[-11,3],[-11,10],[-31,50],[-6,79],[7,31],[61,30],[23,17],[103,117],[53,55],[25,46],[13,-3],[47,-27],[35,-8],[68,11],[67,33],[29,18],[29,-6],[5,-28],[12,-9],[162,88],[147,98],[144,111],[73,66],[18,19],[12,28],[-10,28],[-13,25],[-12,10],[-12,4],[-75,18],[23,29],[22,35],[14,39],[5,47],[-3,24],[3,18],[34,15],[23,24],[16,28],[-26,9],[-12,21],[23,49],[21,52],[21,28],[56,55],[163,138],[59,74],[17,27],[386,119],[63,12],[121,17],[56,3],[158,-12],[74,-12],[128,-32],[189,-61],[71,-27],[71,-34],[68,-43],[67,-52],[13,-16],[6,-29],[2,-28],[-3,-27],[-18,-56],[-26,-39],[-311,-37],[-41,-15],[-22,-30],[-16,-30],[36,-11]],[[33407,5562],[-11,-124],[1,-56],[-16,-45],[-28,-23],[-55,-39],[-40,-23],[-87,-38],[-400,34],[-180,31],[-75,40],[-12,18],[-23,61],[-21,19],[-159,-13],[-97,-19],[-17,-10],[-26,-38],[-14,-8],[-259,81],[-273,95],[-113,49],[-39,22],[-11,15],[25,19],[26,12],[29,9],[30,1],[22,-7],[22,-14],[14,-51],[14,-8],[38,-14],[961,7],[80,2],[166,15],[89,21],[33,29],[-80,7],[-32,22],[-27,41],[-6,38],[9,28],[106,14],[16,10],[-28,16],[1,37],[63,14],[25,31],[124,39],[196,-21],[47,-56],[-13,-36],[-9,-37],[-1,-57],[80,-8],[25,-21],[24,-26],[-29,-1],[-28,-6],[-23,-27],[-20,-35],[-14,-16]],[[30541,11987],[-8,-70],[46,25],[17,-5],[40,-26],[81,-151],[18,-48],[33,-139],[40,-105],[100,-183],[49,-100],[26,-58],[3,-78],[31,-22],[7,-32],[10,-107],[7,-124],[7,-238],[-4,-55],[-43,-89],[-18,-63],[-23,-42],[-27,-30],[-141,-125],[-17,-62],[-237,-53],[-134,-22],[-52,24],[-53,6],[-66,-8],[-191,-7],[-144,-18],[-19,7],[-13,23],[-14,16],[-38,-3],[-31,9],[-30,19],[-33,36],[-14,21],[-8,23],[64,60],[33,13],[33,4],[67,-13],[67,-20],[147,-16],[204,-4],[56,6],[67,19],[62,55],[-30,21],[-31,13],[-30,3],[-30,-4],[-84,-34],[-65,-20],[-65,-12],[-69,20],[-64,56],[-2,18],[220,43],[20,7],[40,27],[13,24],[6,23],[-148,40],[-31,-1],[-30,-7],[-67,17],[-64,47],[-59,57],[-22,5],[-21,-17],[-143,-150],[-12,-1],[-54,11],[-68,30],[-62,10],[-40,-8],[-15,-12],[39,-34],[33,-30],[10,-24],[-101,-75],[-27,-10],[-43,7],[-16,9],[-31,40],[-30,10],[-65,-8],[-34,3],[-34,18],[-32,26],[-30,14],[-36,29],[-26,20],[-8,29],[3,28],[11,16],[2,15],[-8,27],[5,19],[12,18],[54,34],[65,7],[63,-43],[42,-13],[19,-1],[7,2],[5,12],[-1,22],[-12,42],[-1,29],[14,24],[19,9],[20,6],[13,3],[41,-15],[29,-16],[59,-46],[49,-32],[19,-3],[14,11],[13,18],[-59,46],[-6,30],[3,26],[36,15],[22,2],[104,-27],[56,-9],[55,-3],[114,31],[-61,35],[-132,30],[-25,21],[-18,34],[97,31],[99,-1],[177,-40],[59,19],[55,58],[32,15],[125,-5],[101,27],[16,-3],[15,-8],[97,-97],[13,5],[10,19],[3,34],[1,34],[-3,35],[-12,22],[-16,-3],[-17,-10],[-28,9],[-28,18],[-29,8],[-100,11],[-71,18],[-37,14],[-34,28],[-5,31],[36,71],[138,76],[65,25],[66,6],[32,-5],[76,-32],[12,2],[11,8],[-73,53],[-65,41],[-33,31],[-26,12],[-109,12],[-57,-31],[-27,-5],[-27,3],[-160,74],[-9,8],[-23,28],[-12,21],[-7,35],[3,35],[5,23],[24,91],[13,72],[-7,59],[-25,32],[-36,22],[-33,35],[-9,24],[-6,28],[-1,36],[9,32],[14,34],[18,17],[34,17],[133,39],[270,49],[30,-25],[43,-52],[14,-21],[15,-104],[0,-29]],[[22752,10418],[-23,-61],[2,-60],[68,4],[30,114],[64,21],[31,-68],[-30,-55],[15,-31],[18,-22],[32,-1],[29,33],[13,24],[11,26],[19,58],[61,54],[135,8],[71,-34],[-48,-86],[-115,-50],[-74,-52],[25,-14],[25,-7],[23,2],[65,27],[160,50],[61,37],[22,-6],[0,-62],[21,-42],[-12,-93],[-69,-17],[-71,-8],[18,-41],[-4,-17],[-6,-13],[-178,17],[-31,-6],[-31,-12],[-31,3],[-62,30],[-32,0],[-64,-15],[-65,-6],[-93,1],[-68,5],[-64,33],[-67,9],[-75,1],[-79,38],[-66,15],[-95,39],[-25,15],[-25,8],[-45,-3],[-346,59],[-51,-1],[-33,-8],[-33,4],[-67,28],[-14,31],[7,29],[15,13],[30,13],[480,69],[50,19],[37,-2],[28,-59],[42,-61],[14,1],[14,6],[47,51],[86,-16],[48,23],[33,45],[97,52],[61,-10],[57,-22],[27,-54]],[[16512,9357],[49,-58],[19,-38],[11,-39],[-199,-96],[-9,-10],[-9,-50],[5,-11],[8,-8],[1,-19],[-17,-6],[-340,-38],[-159,35],[-22,23],[-5,36],[19,7],[35,5],[-9,16],[-22,29],[-2,24],[48,61],[23,16],[-90,57],[-11,13],[-12,4],[-44,-7],[-43,3],[15,23],[12,38],[38,32],[28,5],[28,-3],[132,-2],[130,-17],[131,-12],[215,-11],[46,-2]],[[14908,9627],[74,-16],[25,-25],[33,-18],[33,-10],[31,-27],[18,-48],[16,-15],[49,-32],[17,-28],[-3,-14],[-93,-11],[-31,4],[-29,-9],[-9,-17],[1,-18],[16,-13],[34,-12],[34,2],[63,14],[28,-3],[32,-15],[32,-2],[84,46],[21,8],[21,-2],[115,-54],[24,-27],[-17,-15],[-14,-22],[6,-15],[55,-22],[23,-28],[14,-11],[-3,-24],[-8,-29],[1,-33],[-28,-18],[-13,0],[-60,18],[-187,10],[-60,15],[-92,65],[-36,4],[-37,16],[-57,46],[-99,37],[-63,45],[2,38],[-9,27],[-12,11],[-12,6],[-36,10],[-35,-3],[-18,-11],[-29,-28],[-32,-5],[-25,6],[-5,6],[-1,74],[-27,10],[-23,30],[-4,40],[10,37],[35,45],[40,5],[40,-7],[41,10],[65,6],[74,-4]],[[5819,5871],[-347,-22],[-141,19],[-294,63],[-403,114],[-110,36],[-72,31],[-70,39],[-16,43],[10,62],[13,51],[21,32],[86,38],[43,42],[87,44],[25,33],[37,2],[70,-4],[69,-9],[65,-11],[63,-19],[144,-62],[100,-61],[144,-72],[143,-81],[80,-30],[77,-45],[74,-61],[14,-21],[31,-27],[19,-26],[19,-22],[19,-11],[15,-24],[-3,-26],[-12,-15]],[[96411,7303],[105,-42],[275,4],[229,-39],[21,-40],[-65,-21],[-101,-53],[-65,-17],[-55,0],[-112,22],[-146,-3],[-31,-31],[-71,-31],[-82,-54],[-22,44],[-33,42],[-82,89],[-6,13],[45,17],[22,29],[47,39],[-5,24],[-39,26],[-15,22],[26,36],[58,16],[75,-15],[34,-48],[-6,-21],[-1,-8]],[[41355,5876],[38,-12],[40,28],[-6,26],[23,45],[33,-49],[219,-52],[71,-50],[-29,-12],[-22,2],[-64,-5],[-109,-43],[-117,41],[-209,29],[-63,22],[-49,68],[88,56],[21,-6],[135,-88]],[[40573,6151],[-32,-21],[-675,36],[-33,7],[9,43],[92,7],[52,8],[72,19],[53,33],[18,1],[317,-77],[111,-32],[13,-15],[3,-9]],[[30462,5944],[-60,-2],[-120,5],[-120,20],[-31,10],[-44,32],[-14,17],[-12,21],[-1,33],[32,114],[59,68],[56,39],[174,92],[23,10],[159,43],[62,23],[97,48],[534,186],[122,27],[55,-20],[31,-19],[-16,-22],[-72,-53],[-34,-32],[-87,-65],[-188,-109],[-133,-82],[-171,-113],[-40,-40],[-81,-95],[15,-42],[-27,-58],[-107,-28],[-61,-8]],[[33931,14945],[11,-8],[9,4],[9,8],[9,19],[33,27],[31,3],[-10,-28],[74,-50],[-6,-39],[14,-32],[-30,-10],[-24,-33],[21,-13],[12,-28],[-25,-7],[-54,17],[-28,-4],[3,26],[-9,10],[-33,-5],[-14,-57],[-10,-5],[-12,9],[9,37],[-14,6],[-14,-1],[-42,-27],[-12,-1],[-25,32],[79,42],[-33,21],[-7,26],[5,36],[-29,-5],[-28,-14],[-13,-2],[-11,12],[4,26],[23,43],[18,45],[36,22],[21,17],[28,8],[12,16],[26,1],[15,-37],[-1,-22],[-12,-24],[-6,-61]],[[34575,15452],[17,-15],[70,1],[16,-4],[14,-25],[9,-43],[-23,-17],[-121,10],[-44,22],[-22,-1],[-49,-24],[-21,-24],[-82,-32],[-23,12],[-11,34],[-1,14],[8,9],[4,9],[-1,11],[22,29],[95,44],[126,16],[17,-16],[0,-10]],[[33895,16179],[35,-16],[31,11],[17,-12],[12,-33],[-1,-12],[-47,5],[-43,-38],[-51,8],[-7,-31],[11,-17],[-14,-14],[-44,30],[-35,-11],[-11,-51],[-16,-10],[-8,-2],[-14,13],[-29,4],[-2,7],[-18,20],[-51,-22],[13,26],[68,69],[8,21],[79,40],[37,-9],[80,24]],[[32450,14706],[-27,-60],[40,1],[28,21],[29,9],[25,-30],[-52,-23],[-50,-40],[-20,-21],[-22,-9],[-28,3],[-28,-4],[-25,-39],[-26,-18],[-8,15],[-10,9],[-56,14],[-26,20],[-23,14],[-25,7],[13,35],[15,31],[85,42],[-8,13],[-6,17],[67,21],[2,21],[-4,24],[21,16],[20,24],[14,7],[42,-3],[29,-33],[-12,-33],[26,-51]],[[32687,14732],[-20,-23],[-16,-4],[-15,10],[-20,-35],[-40,11],[-16,9],[10,5],[7,15],[22,31],[38,79],[7,25],[-31,41],[-5,13],[7,24],[11,17],[26,19],[34,0],[17,-16],[0,-29],[58,-27],[-10,-56],[-22,-35],[-3,-42],[-33,-19],[-6,-13]],[[31114,12975],[-29,-37],[-23,-11],[-21,10],[-21,5],[-15,-14],[-16,-58],[-19,-29],[-20,-15],[-12,6],[-12,0],[-19,-13],[-24,-5],[-23,6],[-22,37],[-32,44],[-6,14],[-5,36],[1,37],[14,28],[73,98],[24,44],[21,50],[23,45],[44,80],[22,29],[111,84],[30,19],[33,-5],[8,-44],[-16,-22],[-53,-56],[-11,-79],[1,-29],[5,-8],[20,-10],[14,-11],[18,-24],[21,-14],[-45,-41],[-30,-21],[-21,-26],[-40,-25],[-17,-16],[26,-6],[38,-21],[10,-18],[-5,-14]],[[29526,11154],[43,-51],[-40,-40],[-142,-75],[-83,-29],[-84,-22],[-380,-69],[-27,0],[-26,9],[-15,15],[-25,57],[3,29],[34,27],[35,18],[60,16],[229,36],[23,12],[19,27],[6,31],[8,24],[15,11],[16,0],[30,-23],[55,-93],[18,13],[16,25],[3,80],[16,6],[49,-22],[30,-23],[1,45],[21,14],[22,-5],[22,-10],[48,-33]],[[29170,11677],[49,-14],[72,-63],[24,-32],[7,-19],[-6,-13],[-33,-15],[-25,-77],[-50,-27],[-116,17],[-128,31],[-10,6],[-11,27],[-2,31],[14,39],[22,20],[95,24],[7,14],[14,39],[24,8],[11,-3],[42,7]],[[29346,9735],[-40,-75],[-7,-8],[-40,-19],[14,-20],[11,-10],[7,-24],[23,-33],[28,-21],[-23,-59],[-34,-26],[-369,160],[-28,26],[-14,19],[-11,30],[-1,30],[9,24],[13,14],[33,17],[34,1],[75,-32],[10,5],[14,28],[40,1],[9,24],[-55,8],[-44,24],[-29,24],[-8,19],[99,33],[251,-42],[38,-14],[17,-19],[14,-26],[-36,-59]],[[24677,9687],[-51,-14],[-46,6],[17,132],[26,33],[-7,24],[-47,66],[-33,75],[16,17],[86,27],[99,-5],[39,-32],[12,-40],[-5,-29],[-32,-53],[33,-18],[7,-36],[-7,-44],[-32,-52],[-30,-31],[-45,-26]],[[96566,6830],[-34,-43],[-39,-19],[-123,16],[-86,-36],[-95,-13],[-45,19],[-20,35],[-10,47],[0,17],[27,7],[127,-33],[53,-29],[29,1],[76,38],[63,48],[16,23],[21,8],[27,-17],[13,-52],[0,-17]],[[78050,14010],[-121,-14],[-10,15],[-45,2],[-16,12],[-6,28],[15,47],[24,32],[37,33],[18,7],[76,11],[55,-15],[39,-40],[11,-32],[-6,-21],[-71,-65]],[[57460,11301],[-18,-22],[-51,4],[-39,-21],[-31,8],[-98,35],[-11,45],[-3,20],[8,35],[88,73],[35,7],[50,-10],[22,-21],[14,-41],[39,-83],[-5,-29]],[[48362,11202],[-73,-34],[-6,15],[-24,20],[-48,56],[54,4],[49,24],[27,-10],[6,-6],[15,-69]],[[49088,11213],[-45,-1],[-13,16],[-2,11],[58,83],[32,21],[62,16],[40,-5],[26,-18],[8,-33],[0,-49],[-15,-26],[-151,-15]],[[31618,5715],[-26,-2],[-14,4],[-14,12],[-12,46],[-137,37],[-16,21],[-9,46],[-23,18],[-178,82],[-15,17],[-10,25],[33,10],[70,-18],[127,-5],[28,-8],[26,-14],[142,-3],[72,-7],[40,-65],[81,-19],[11,-38],[10,-68],[-110,-50],[-25,-7],[-51,-14]],[[31316,6075],[-48,-28],[-202,13],[-69,9],[-39,15],[36,60],[27,20],[25,8],[56,33],[88,8],[67,-6],[113,-26],[-29,-25],[-19,-9],[-18,-38],[12,-34]],[[34676,16577],[-37,-16],[-13,22],[-7,37],[-19,23],[14,20],[199,-26],[-11,-13],[-96,-17],[-30,-30]],[[34480,15244],[-24,-26],[-61,39],[-16,25],[7,19],[98,17],[26,-9],[12,-40],[-42,-25]],[[34100,14650],[-24,-2],[-30,17],[-4,30],[0,16],[23,13],[14,2],[81,47],[36,12],[-16,-29],[2,-26],[-13,-23],[-69,-57]],[[34427,15507],[-55,-54],[-26,2],[-54,41],[-15,21],[-3,9],[34,37],[97,-14],[22,-4],[1,-3],[2,-21],[-3,-14]],[[34062,15087],[4,-10],[56,6],[15,-15],[-31,-20],[-8,4],[-27,-6],[-76,15],[-18,23],[67,13],[18,-10]],[[32778,11680],[-24,-4],[-24,53],[-13,82],[-77,119],[-20,62],[14,15],[21,5],[56,-17],[34,-23],[38,-49],[46,-44],[9,-37],[-7,-42],[-29,-11],[1,-31],[-17,-60],[-8,-18]],[[33159,15806],[14,-7],[121,13],[38,-40],[43,2],[-103,-75],[-28,22],[-9,16],[-7,36],[-67,-9],[-22,7],[-27,-24],[-55,-10],[-19,0],[-24,26],[-1,26],[49,-1],[38,33],[11,34],[19,-9],[29,-40]],[[30004,11694],[-60,-24],[-40,19],[-120,36],[-50,66],[5,35],[23,21],[36,11],[73,-22],[37,-23],[96,-119]],[[23603,9985],[-53,-3],[-15,13],[16,28],[128,47],[52,28],[8,-4],[7,-9],[22,-56],[2,-14],[-167,-30]],[[20961,9696],[-33,-26],[-62,6],[-48,43],[-19,58],[-2,20],[13,15],[31,14],[120,-130]],[[16792,9152],[-58,-6],[-18,1],[-18,13],[-5,9],[30,30],[29,13],[9,10],[-40,101],[37,3],[43,20],[83,-2],[72,-18],[13,-15],[9,-25],[-31,-51],[-19,-18],[-108,-45],[-28,-20]],[[14620,8857],[-42,-10],[-83,38],[-27,18],[-24,31],[-19,7],[-7,6],[-11,80],[25,9],[53,-11],[102,-42],[71,-12],[24,-32],[-24,-56],[-38,-26]],[[5002,3963],[-87,-13],[-206,26],[-54,21],[-30,22],[-56,20],[-14,11],[0,24],[-9,14],[-19,13],[-9,13],[-17,8],[277,-12],[108,-20],[20,-14],[195,-60],[-53,-9],[-46,-44]],[[5426,4844],[-29,-5],[-745,67],[-143,22],[-34,12],[-14,11],[-3,8],[6,22],[17,16],[185,25],[207,-19],[250,-48],[172,-38],[89,-34],[37,-26],[5,-13]],[[95548,8736],[-37,0],[-22,18],[-7,39],[1,13],[72,48],[58,12],[-31,-72],[-11,-12],[-23,-46]],[[95268,8313],[-50,-74],[-35,2],[-20,14],[36,41],[34,18],[21,5],[14,-6]],[[97178,9444],[-38,-12],[-51,37],[-12,12],[50,70],[-4,23],[7,19],[19,14],[12,-2],[29,-77],[20,-32],[-28,-31],[-4,-21]],[[95786,12937],[-24,-16],[-15,5],[-15,34],[16,53],[-6,69],[3,17],[39,-39],[7,-21],[16,-32],[3,-17],[-16,-32],[-8,-21]],[[95361,13351],[-5,-35],[-14,8],[-20,28],[-20,69],[18,7],[23,-12],[9,-34],[8,-18],[1,-13]],[[95169,13549],[-15,-27],[-13,3],[-58,69],[7,30],[-8,25],[1,23],[2,8],[71,-105],[13,-26]],[[76836,13804],[32,-15],[57,2],[20,-22],[4,-25],[-1,-14],[-23,-21],[-150,-14],[-24,22],[26,61],[28,20],[31,6]],[[77851,13700],[-37,-8],[-14,15],[-2,9],[27,33],[33,11],[-3,-39],[-4,-21]],[[77456,13554],[-26,-7],[-27,16],[-13,31],[-3,10],[42,8],[56,-30],[-29,-28]],[[78721,14144],[-17,-14],[-45,8],[-10,12],[-4,55],[-3,16],[-17,15],[-73,28],[-8,40],[10,18],[27,4],[67,-35],[15,-27],[-2,-41],[1,-13],[21,-27],[33,-28],[5,-11]],[[75722,13935],[-37,-8],[-38,8],[-19,27],[-4,12],[15,19],[54,3],[38,-17],[8,-17],[2,-8],[-19,-19]],[[73839,13275],[-48,-15],[-8,8],[-1,9],[-72,55],[-12,45],[7,31],[59,-3],[70,-27],[37,-69],[-32,-34]],[[74039,13382],[-32,-14],[-25,3],[-29,31],[12,21],[30,13],[38,-7],[10,-11],[26,-7],[-30,-29]],[[73702,13472],[-30,-18],[-24,3],[-16,19],[-3,12],[15,38],[12,-2],[8,-20],[38,-32]],[[69421,10415],[-35,-74],[-13,2],[-15,43],[13,27],[16,16],[28,-8],[6,-6]],[[69016,10195],[-14,0],[7,23],[37,41],[28,50],[17,8],[31,-44],[-7,-37],[-41,-27],[-58,-14]],[[70000,11156],[-20,0],[-25,6],[-32,42],[-18,30],[-7,31],[3,61],[16,30],[26,12],[11,-28],[4,-32],[8,-21],[33,-30],[16,-25],[5,-14],[6,-29],[-5,-20],[-21,-13]],[[63484,13373],[-46,-14],[-21,6],[-2,14],[-1,13],[2,15],[16,12],[78,1],[31,-10],[9,-7],[1,-21],[-3,-6],[-64,-3]],[[54506,11516],[-18,-37],[-87,51],[-51,16],[-13,9],[-12,32],[-3,12],[10,20],[28,32],[59,26],[93,13],[91,-10],[15,-16],[-86,-54],[-26,-94]],[[50843,11176],[-94,-15],[-21,17],[-11,34],[13,20],[123,68],[33,-6],[11,-6],[8,-26],[-11,-41],[-14,-20],[-37,-25]],[[49179,10821],[-30,-13],[-39,3],[-30,17],[-21,34],[-5,13],[3,22],[-2,11],[38,6],[14,-14],[6,-11],[66,-68]],[[50360,11373],[-24,-73],[-15,2],[-15,43],[-31,46],[-11,32],[-1,43],[22,25],[80,16],[27,-10],[13,-55],[-45,-69]],[[49296,11078],[30,-19],[47,3],[45,-15],[-7,-20],[-26,-26],[-22,-56],[-22,-26],[-66,-56],[-49,-15],[-11,31],[1,32],[4,25],[2,18],[-46,24],[-3,33],[-9,19],[-134,66],[-23,19],[10,12],[138,5],[81,-12],[60,-42]],[[51257,11244],[-45,-13],[-51,29],[-14,20],[-15,53],[-2,20],[12,13],[40,15],[66,-6],[25,-24],[9,-43],[-8,-37],[-17,-27]],[[44275,9281],[-13,-125],[4,-27],[11,-26],[49,-70],[4,-52],[-2,-20],[-20,-29],[-69,7],[-22,15],[-8,10],[-36,122],[-21,29],[-32,25],[-123,23],[-118,-8],[29,28],[178,39],[45,29],[28,34],[13,52],[31,65],[49,30],[31,3],[16,-53],[0,-50],[-24,-51]],[[45526,9977],[-19,-14],[-40,1],[-38,28],[-16,41],[-1,29],[17,33],[27,9],[15,-11],[36,-71],[19,-45]],[[46525,10268],[-22,-13],[-37,5],[-47,29],[-15,22],[-5,20],[13,29],[11,8],[24,-4],[42,-37],[29,-40],[7,-19]],[[41016,5948],[-48,-6],[-19,15],[23,38],[34,33],[63,3],[60,-22],[-6,-21],[-13,-2],[-94,-38]],[[34980,16532],[-12,-5],[-19,22],[-3,13],[20,26],[20,35],[7,4],[-5,-70],[-8,-25]],[[33656,15954],[-62,-26],[-32,27],[-7,10],[38,26],[20,-6],[8,-9],[23,-2],[12,-20]],[[33011,11534],[-42,-1],[-19,16],[-7,10],[5,23],[16,21],[49,-16],[12,-41],[-14,-12]],[[33151,12230],[-11,-16],[-35,10],[-20,11],[-34,28],[19,17],[37,-4],[30,-20],[14,-26]],[[33127,11111],[-23,0],[-20,12],[-17,35],[-5,17],[9,38],[16,9],[92,5],[28,-20],[1,-34],[-10,-25],[-71,-37]],[[33180,10914],[-28,-4],[-38,10],[-33,20],[-11,23],[16,19],[30,12],[47,-4],[22,-24],[5,-22],[-6,-23],[-4,-7]],[[33503,15872],[-38,-4],[-26,33],[-12,23],[51,2],[23,-9],[12,-26],[-10,-19]],[[33193,15571],[-14,-6],[-18,5],[0,-10],[15,-13],[-16,-5],[-19,13],[-14,27],[10,25],[19,6],[37,-42]],[[33152,15053],[-35,-20],[-21,6],[-33,24],[45,7],[4,70],[22,27],[43,-15],[-26,-37],[-9,-28],[9,-24],[1,-10]],[[32791,14932],[-26,-2],[7,31],[23,21],[38,14],[-24,-35],[-7,-16],[-11,-13]],[[32412,14480],[-44,-26],[-23,0],[27,64],[26,2],[41,36],[11,-5],[-22,-30],[-16,-41]],[[32607,15512],[-12,-2],[5,24],[31,62],[58,29],[-7,-25],[-19,-31],[-56,-57]],[[31709,13915],[-60,-22],[-31,8],[-2,23],[8,31],[29,16],[-5,46],[18,19],[9,35],[38,26],[54,-12],[-8,-45],[-1,-16],[-32,-12],[-8,-7],[-7,-30],[1,-43],[-3,-17]],[[31501,13709],[-62,-65],[-9,4],[-5,7],[1,11],[20,24],[4,70],[41,26],[16,-9],[-14,-30],[9,-26],[-1,-12]],[[31288,13309],[-13,-4],[-31,2],[-20,13],[26,41],[-3,28],[23,11],[26,-10],[18,-35],[3,-15],[-29,-31]],[[31292,12807],[-55,-11],[-41,12],[1,44],[-11,5],[-4,10],[52,33],[39,8],[47,-5],[20,-14],[7,-15],[-36,-36],[-6,-14],[-13,-17]],[[30084,11367],[14,-17],[60,16],[21,-17],[4,-12],[-27,-42],[-32,-28],[-37,-2],[-27,71],[-3,18],[27,13]],[[29478,9586],[-27,-11],[-17,6],[-31,29],[4,23],[14,15],[10,17],[60,62],[44,7],[36,-13],[-39,-59],[-10,-41],[-44,-35]],[[23945,9838],[-47,0],[-31,21],[-10,14],[19,21],[11,2],[57,-36],[12,-15],[-11,-7]],[[17572,9121],[-136,-16],[-37,18],[-10,22],[6,23],[277,125],[49,-17],[14,-8],[-83,-62],[-37,-22],[-6,-7],[20,-9],[6,-7],[-16,-17],[-47,-23]],[[13225,8961],[-44,-32],[-86,21],[7,23],[78,20],[53,-13],[-8,-19]],[[13592,8880],[-31,-12],[-116,29],[-68,6],[-31,17],[-20,15],[-6,14],[-32,22],[62,44],[49,14],[47,-3],[10,-22],[90,-26],[70,-1],[7,-24],[-3,-34],[-28,-39]],[[9003,7690],[3,-8],[-42,6],[-63,32],[-12,11],[28,11],[36,-10],[33,-20],[17,-22]],[[9656,8230],[-31,-3],[-53,14],[-140,46],[-30,23],[21,23],[50,16],[38,-5],[95,-43],[29,-31],[17,-23],[4,-17]],[[9276,7510],[-104,-25],[-27,7],[9,36],[-16,25],[-4,12],[9,17],[61,0],[172,-27],[23,-37],[-123,-8]],[[8723,7484],[-116,-7],[-64,15],[-16,44],[18,9],[148,-20],[54,-11],[20,-13],[-10,-12],[-34,-5]],[[8518,7651],[113,-8],[74,6],[77,-14],[18,-16],[-14,-13],[-83,-4],[-40,-22],[-47,-3],[-71,16],[-64,35],[37,23]],[[8550,7294],[81,-29],[-142,9],[-62,41],[40,15],[40,-3],[35,-21],[8,-12]],[[8269,7617],[-118,-8],[-48,16],[-12,15],[10,13],[183,13],[20,-16],[6,-10],[-41,-23]],[[9253,7922],[-57,-8],[-71,36],[-54,29],[-18,25],[-3,8],[0,10],[16,6],[115,-21],[72,-85]],[[9225,7699],[-33,-46],[-87,24],[-37,30],[21,39],[40,12],[52,-14],[19,-5],[25,-40]],[[8223,7275],[-22,-2],[-241,44],[-47,13],[82,27],[54,4],[146,-66],[39,-8],[-11,-12]],[[7241,5741],[-51,-2],[-65,6],[-50,14],[-114,20],[-29,38],[-134,31],[-62,10],[21,37],[142,-49],[175,-49],[141,-30],[26,-26]],[[8547,7418],[-17,-9],[-121,5],[-25,8],[-11,9],[-168,13],[-76,41],[-15,13],[30,20],[57,12],[23,16],[145,14],[23,-8],[13,-22],[66,-43],[17,-27],[7,-18],[36,-8],[16,-16]],[[6115,4547],[-25,-4],[-22,31],[-108,63],[-64,42],[-42,33],[-18,23],[21,0],[158,-70],[24,-27],[118,-48],[-42,-43]],[[32497,62251],[-1,-14],[-3,-15],[-18,13],[-10,13],[0,3]]]"),yz1=[-180,-89.999,180,83.599609375],vz1={scale:[.0036000360003600037,.001736003453784538],translate:[-180,-89.999]},Rc={type:hz1,objects:pz1,arcs:mz1,bbox:yz1,transform:vz1};function bz1({earthquakes:t}){const e=F.useRef(),n=F.useRef(),i=475,o=100,u=960,l=1800*1e3,a={top:5,left:40,right:5,bottom:20},s=F.useCallback(g=>g**1.7,[]),c=F.useCallback(()=>{const g=[4,6,8];Te(n.current).append("text").attr("class","y label").attr("transform","rotate(-90)").attr("x",-42.5).attr("y",a.left/2-1).text("Magnitude");const p=Te(e.current).append("g").attr("id","legend");p.attr("id","legend").selectAll("circle").data(g).join("circle").attr("cy",m=>i-10-s(m)).attr("cx",u-10-s(Po(g))).attr("r",s),p.selectAll("text").data(g).join("text").text(m=>`${m}R`).attr("transform",`translate(${u-10-s(Po(g))}, ${i-10})`).attr("dy",m=>-s(m)*2+12)},[a.left,a.top,a.bottom,s]),f=F.useCallback(()=>{for(let P of t)P.time=new Date(P.time);const g=Te(e.current),p=Te(n.current),m=_Y(),v=UA().projection(m),b=gz1().scaleExtent([1,3]).on("zoom",S),x=.5;function w(){g.transition().duration(750).call(b.transform,bp,AJ(g.node()).invert([u/2,i/2]))}function S(P){const{transform:q}=P;k.attr("transform",q),W.attr("r",Y=>s(Y.magnitude/Math.sqrt(q.k))),T.attr("stroke-width",x/q.k)}function A(P){let{selection:q}=P,Y=p.selectAll("circle").data(t,G=>G.id).join("circle"),z=g.select("#map-zoom").selectAll("circle").data(t,G=>G.id).join("circle");q?(Y.transition().duration(50).attr("stroke",G=>C(G,q)?"brown":null).attr("r",G=>C(G,q)?5:3).attr("fill",G=>C(G,q)?"orange":"black"),z.transition().duration(50).attr("r",G=>C(G,q)?s(G.magnitude):0)):(Y.transition().duration(50).attr("stroke",null).attr("r",3).attr("fill","black"),z.transition().duration(50).attr("r",G=>s(G.magnitude)))}function C(P,q){let Y=D(P.time)+a.left;return Y<=q[1]&&Y>=q[0]}let k=Te("#map-zoom"),M="translate(0, -15)";k.select("#tiles").selectAll("path").data(DB(Rc,Rc.objects.countries).features).join("path").attr("d",v).attr("transform",M).append("title").text(P=>P.properties.name);let T=k.select("#tile-outlines").attr("fill","none").attr("stroke","white").attr("stroke-width",x).attr("stroke-linejoin","round").attr("d",v(FB(Rc,Rc.objects.countries,(P,q)=>P!==q))).attr("transform",M);g.call(b),g.on("click",w);let D=OH().domain([_d(t,P=>P.time)-l,new Date]).range([0,u-a.right-a.left]),I=sD1().scale(D),U=LS().domain([0,9]).range([o-a.top-a.bottom,0]),B=cD1().scale(U).ticks(4);Te(n.current).append("g").call(B).attr("transform",`translate(${a.left}, ${a.top})`),p.select("#x-axis").attr("transform",`translate(${a.left}, ${o-a.bottom})`).transition().call(I);let V=g.select("#quake-locations").selectAll("circle").data(t,P=>P.id),W=V.enter().append("circle").attr("r",0).attr("transform",P=>{let q=m([P.longitude,P.latitude]);return q[1]-=15,`translate(${q})`}).merge(V);W.transition().attr("r",P=>s(P.magnitude)).attr("stroke-width",x).style("opacity",.6),W.append("title").text(P=>`Magnitude: ${P.magnitude} on Richter Scale
Time: ${P.time.toLocaleTimeString()}, ${P.time.toLocaleDateString()}`),V.exit().transition().attr("r",0).remove();let O=p.select("#quake-points").selectAll("circle").data(t,P=>P.id);O.enter().append("circle").attr("r",0).attr("cx",P=>D(P.time)+a.left).attr("cy",o-a.bottom).merge(O).transition().attr("r",3).attr("cy",P=>U(P.magnitude)+a.top).attr("cx",P=>D(P.time)+a.left),O.exit().transition().attr("r",0).attr("cy",o-a.bottom).remove();let R=uz1().extent([[a.left,a.top],[u-a.right,o-a.bottom]]).on("brush end",A);p.select("#brush").call(R)},[t,l,a.right,a.left,a.bottom,a.top,s]);return F.useEffect(()=>c(),[c]),F.useEffect(()=>f(),[f,t]),$.jsxs("div",{id:"viz",className:"d-flex flex-column align-items-center mb-2",children:[$.jsx("svg",{id:"map",ref:e,height:i,width:u,children:$.jsxs("g",{id:"map-zoom",children:[$.jsx("g",{id:"tiles"}),$.jsx("path",{id:"tile-outlines"}),$.jsx("g",{id:"quake-locations"})]})}),$.jsxs("svg",{id:"scatter",ref:n,height:o,width:u,className:"mt-2",children:[$.jsx("g",{id:"quake-points"}),$.jsx("g",{id:"x-axis"}),$.jsx("g",{id:"brush"})]})]})}function xz1({data:t,page:e,numPages:n,itemsPerPage:i}){return $.jsxs(lE,{striped:!0,bordered:!0,children:[$.jsx("thead",{children:$.jsxs("tr",{children:[$.jsx("th",{children:"Id"}),$.jsx("th",{children:"Magnitude"}),$.jsx("th",{children:"Latitude"}),$.jsx("th",{children:"Longitude"}),$.jsx("th",{children:"Time"})]})}),$.jsx("tbody",{children:o(t,e,n)})]});function o(l,a,s){let c;return a===s-1?c=l.slice(a*i):c=l.slice(a*i,(a+1)*i),c.map((f,g)=>u(f,g))}function u(l,a){return $.jsxs("tr",{children:[$.jsx("td",{children:l.id}),$.jsx("td",{children:l.magnitude}),$.jsx("td",{children:l.latitude}),$.jsx("td",{children:l.longitude}),$.jsx("td",{children:new Date(l.time).toLocaleTimeString()+" "+new Date(l.time).toLocaleDateString()})]},a)}}function _z1({selectedPage:t,setPage:e,numPages:n}){return $.jsx(N1,{fluid:!0,className:"d-flex justify-content-center",children:$.jsx(ro,{children:i(t,e,n)})});function i(u,l,a){return a<=5?o(0,a,!1,!1,l,u,a):u<=2?o(0,4,!1,!0,l,u,a):u>=a-3?o(a-4,a,!0,!1,l,u,a):o(u-1,u+2,!0,!0,l,u,a)}function o(u,l,a,s,c,f,g){let p=[];p.push($.jsx(ro.First,{onClick:()=>c(0)})),p.push($.jsx(ro.Prev,{onClick:()=>{f>0&&c(f-1)}})),a&&p.push($.jsx(ro.Ellipsis,{className:"ellipsis",disabled:!0}));for(let m=u;m<l;m++)m===f?p.push($.jsx(ro.Item,{active:!0,activeLabel:!1,onClick:()=>{c(m)},children:m+1})):p.push($.jsx(ro.Item,{onClick:()=>{c(m)},children:m+1}));return s&&p.push($.jsx(ro.Ellipsis,{className:"ellipsis",disabled:!0})),p.push($.jsx(ro.Next,{onClick:()=>{f!==g-1&&c(f+1)}})),p.push($.jsx(ro.Last,{onClick:()=>c(g-1)})),p}}function wz1({overallData:t}){let[n,i]=F.useState(u()),o=l(t);return $.jsxs(N1,{fluid:!0,children:[$.jsx(xz1,{data:t,page:n,numPages:o,itemsPerPage:15}),$.jsx(_z1,{selectedPage:n,setPage:i,numPages:o})]});function u(){return t.length>15?15:t.length}function l(a){let s=Math.floor(a.length/15);return a.length%15!==0&&s++,s}}const Ez1=["I developed this project to learn more about React.js, D3.js, and Spring Boot. Initially, this project was deployed to Microsoft Azure, but I redeployed to github due to a problem with speed and blocked CORS requests. It was more straightforward to turn this into a purely frontend project.","This meant that the rest API I developed in Spring Boot is no longer necessary, since I pull directly from the USGS earthquake feed.","The scatterplot on the bottom has linked brushing, so you can click and drag on the scatterplot to see the corresponding quakes appear on the map, with size corresponding to their magnitude on the ricther scale. Additionally, you can pan and zoom the map, and the quakes will scale accordingly. Also, if you click while zoomed in, the map will reset to the default zoom.","This was also an experience using various React hooks, including useEffect and useState. I also used useCallback to stop the map from re-rendering areas that are constant, such as the base countries and the scale on the bottom right.","It was also my first time implementing pagination, which I did using the bootstrap styling and the React useState hook."],Sz1={about:Ez1};function Az1(){const[t,e]=F.useState([]);return $.jsxs(N1,{children:[$.jsx(nD1,{setData:e}),$.jsx(bz1,{earthquakes:t}),$.jsx(wz1,{overallData:t}),$.jsx(md,{title:"About This Project",content:Sz1.about,id:"about"}),$.jsxs("p",{className:"shoutout",children:["To see the code for this project or to see my other projects, visit"," ",$.jsx("a",{href:"https://github.com/Codax2000/earthquake-website",children:"my GitHub"})," ","or please reach out to me."]}),$.jsx("br",{}),$.jsx("br",{})]})}function Cz1(){return $.jsxs("div",{className:"App",children:[$.jsx(Ki1,{}),$.jsxs(Be1,{children:[$.jsx(Sn,{path:"/",element:$.jsx(Ao1,{})}),$.jsx(Sn,{path:"/controls",element:$.jsx(Do1,{})}),$.jsx(Sn,{path:"/cadd",element:$.jsx(Ho1,{})}),$.jsx(Sn,{path:"/bed",element:$.jsx(t41,{})}),$.jsx(Sn,{path:"/bandgap",element:$.jsx(s41,{})}),$.jsx(Sn,{path:"/cannon",element:$.jsx(f41,{})}),$.jsx(Sn,{path:"/transceiver",element:$.jsx(b41,{})}),$.jsx(Sn,{path:"/cnn",element:$.jsx(M41,{})}),$.jsx(Sn,{path:"/chess",element:$.jsx(F41,{})}),$.jsx(Sn,{path:"/sc_amp",element:$.jsx(U41,{})}),$.jsx(Sn,{path:"/processor",element:$.jsx(X41,{})}),$.jsx(Sn,{path:"/adc_sims",element:$.jsx(nu1,{})}),$.jsx(Sn,{path:"/guns",element:$.jsx(eD1,{})}),$.jsx(Sn,{path:"/earthquakewatch",element:$.jsx(Az1,{})})]}),$.jsx(Qi1,{})]})}Kt1.createRoot(document.getElementById("root")).render($.jsx(F.StrictMode,{children:$.jsx(cn1,{children:$.jsx(Cz1,{})})}));
